

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Nov 05 15:09:45 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text547,local,class=CODE,delta=2
    13                           	psect	text551,local,class=CODE,delta=2
    14                           	psect	text552,local,class=CODE,delta=2
    15                           	psect	text553,local,class=CODE,delta=2
    16                           	psect	text555,local,class=CODE,delta=2
    17                           	psect	text576,local,class=CODE,delta=2
    18                           	psect	text580,local,class=CODE,delta=2
    19                           	psect	pa_nodes,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  000A                     	;#
    22                           
    23                           	psect	config
    24  2007  E3C2               	dw	58306	;#
    25                           
    26                           	psect	strings
    27  0800                     __pstrings:	
    28  0800                     stringtab:	
    29                           ;	global	stringdir,stringtab,__stringbase
    30                           
    31  0800                     stringcode:	
    32                           ;	String table - string pointers are 1 byte each
    33                           
    34  0800                     stringdir:	
    35  0800  3008               	movlw	high stringdir
    36  0801  008A               	movwf	10
    37  0802  0804               	movf	4,w
    38  0803  0A84               	incf	4,f
    39  0804  0782               	addwf	2,f
    40  0805                     __stringbase:	
    41  0805  3400               	retlw	0
    42  0806                     __npowers_:	
    43  0806  3400               	retlw	0
    44  0807  3480               	retlw	128
    45  0808  343F               	retlw	63
    46  0809  34CD               	retlw	205
    47  080A  34CC               	retlw	204
    48  080B  343D               	retlw	61
    49  080C  34D7               	retlw	215
    50  080D  3423               	retlw	35
    51  080E  343C               	retlw	60
    52  080F  3412               	retlw	18
    53  0810  3483               	retlw	131
    54  0811  343A               	retlw	58
    55  0812  34B7               	retlw	183
    56  0813  34D1               	retlw	209
    57  0814  3438               	retlw	56
    58  0815  34C6               	retlw	198
    59  0816  3427               	retlw	39
    60  0817  3437               	retlw	55
    61  0818  3438               	retlw	56
    62  0819  3486               	retlw	134
    63  081A  3435               	retlw	53
    64  081B  34C0               	retlw	192
    65  081C  34D6               	retlw	214
    66  081D  3433               	retlw	51
    67  081E  34CC               	retlw	204
    68  081F  342B               	retlw	43
    69  0820  3432               	retlw	50
    70  0821  3470               	retlw	112
    71  0822  3489               	retlw	137
    72  0823  3430               	retlw	48
    73  0824  34E7               	retlw	231
    74  0825  34DB               	retlw	219
    75  0826  342E               	retlw	46
    76  0827  34E5               	retlw	229
    77  0828  343C               	retlw	60
    78  0829  341E               	retlw	30
    79  082A  3442               	retlw	66
    80  082B  34A2               	retlw	162
    81  082C  340D               	retlw	13
    82  082D                     __powers_:	
    83  082D  3400               	retlw	0
    84  082E  3480               	retlw	128
    85  082F  343F               	retlw	63
    86  0830  3400               	retlw	0
    87  0831  3420               	retlw	32
    88  0832  3441               	retlw	65
    89  0833  3400               	retlw	0
    90  0834  34C8               	retlw	200
    91  0835  3442               	retlw	66
    92  0836  3400               	retlw	0
    93  0837  347A               	retlw	122
    94  0838  3444               	retlw	68
    95  0839  3440               	retlw	64
    96  083A  341C               	retlw	28
    97  083B  3446               	retlw	70
    98  083C  3450               	retlw	80
    99  083D  34C3               	retlw	195
   100  083E  3447               	retlw	71
   101  083F  3424               	retlw	36
   102  0840  3474               	retlw	116
   103  0841  3449               	retlw	73
   104  0842  3497               	retlw	151
   105  0843  3418               	retlw	24
   106  0844  344B               	retlw	75
   107  0845  34BC               	retlw	188
   108  0846  34BE               	retlw	190
   109  0847  344C               	retlw	76
   110  0848  346B               	retlw	107
   111  0849  346E               	retlw	110
   112  084A  344E               	retlw	78
   113  084B  3403               	retlw	3
   114  084C  3415               	retlw	21
   115  084D  3450               	retlw	80
   116  084E  3479               	retlw	121
   117  084F  34AD               	retlw	173
   118  0850  3460               	retlw	96
   119  0851  34F3               	retlw	243
   120  0852  3449               	retlw	73
   121  0853  3471               	retlw	113
   122  0854                     _dpowers:	
   123  0854  3401               	retlw	1
   124  0855  3400               	retlw	0
   125  0856  3400               	retlw	0
   126  0857  3400               	retlw	0
   127  0858  340A               	retlw	10
   128  0859  3400               	retlw	0
   129  085A  3400               	retlw	0
   130  085B  3400               	retlw	0
   131  085C  3464               	retlw	100
   132  085D  3400               	retlw	0
   133  085E  3400               	retlw	0
   134  085F  3400               	retlw	0
   135  0860  34E8               	retlw	232
   136  0861  3403               	retlw	3
   137  0862  3400               	retlw	0
   138  0863  3400               	retlw	0
   139  0864  3410               	retlw	16
   140  0865  3427               	retlw	39
   141  0866  3400               	retlw	0
   142  0867  3400               	retlw	0
   143  0868  34A0               	retlw	160
   144  0869  3486               	retlw	134
   145  086A  3401               	retlw	1
   146  086B  3400               	retlw	0
   147  086C  3440               	retlw	64
   148  086D  3442               	retlw	66
   149  086E  340F               	retlw	15
   150  086F  3400               	retlw	0
   151  0870  3480               	retlw	128
   152  0871  3496               	retlw	150
   153  0872  3498               	retlw	152
   154  0873  3400               	retlw	0
   155  0874  3400               	retlw	0
   156  0875  34E1               	retlw	225
   157  0876  34F5               	retlw	245
   158  0877  3405               	retlw	5
   159  0878  3400               	retlw	0
   160  0879  34CA               	retlw	202
   161  087A  349A               	retlw	154
   162  087B  343B               	retlw	59
   163  001E                     _ADRESH	set	30
   164  00FE                     _ADCS0	set	254
   165  00FF                     _ADCS1	set	255
   166  00F8                     _ADON	set	248
   167  00FA                     _CHS0	set	250
   168  00FB                     _CHS1	set	251
   169  00FC                     _CHS2	set	252
   170  00FD                     _CHS3	set	253
   171  00F9                     _GO_nDONE	set	249
   172  0041                     _RD1	set	65
   173  0042                     _RD2	set	66
   174  0043                     _RD3	set	67
   175  0044                     _RD4	set	68
   176  0045                     _RD5	set	69
   177  0046                     _RD6	set	70
   178  0047                     _RD7	set	71
   179  009E                     _ADRESL	set	158
   180  0088                     _TRISD	set	136
   181  04FF                     _ADFM	set	1279
   182  042B                     _TRISA3	set	1067
   183  0430                     _TRISB0	set	1072
   184  0441                     _TRISD1	set	1089
   185  0442                     _TRISD2	set	1090
   186  0443                     _TRISD3	set	1091
   187  0444                     _TRISD4	set	1092
   188  0445                     _TRISD5	set	1093
   189  0446                     _TRISD6	set	1094
   190  0447                     _TRISD7	set	1095
   191  0448                     _TRISE0	set	1096
   192  0449                     _TRISE1	set	1097
   193  04FC                     _VCFG0	set	1276
   194  04FD                     _VCFG1	set	1277
   195  0188                     _ANSEL	set	392
   196  0189                     _ANSELH	set	393
   197  0C4C                     _ANS12	set	3148
   198  0C43                     _ANS3	set	3139
   199  087C                     STR_1:	
   200  087C  3444               	retlw	68	;'D'
   201  087D  3469               	retlw	105	;'i'
   202  087E  3465               	retlw	101	;'e'
   203  087F  346E               	retlw	110	;'n'
   204  0880  3420               	retlw	32	;' '
   205  0881  3461               	retlw	97	;'a'
   206  0882  3470               	retlw	112	;'p'
   207  0883  3420               	retlw	32	;' '
   208  0884  3431               	retlw	49	;'1'
   209  0885  343A               	retlw	58	;':'
   210  0886  3420               	retlw	32	;' '
   211  0887  3425               	retlw	37	;'%'
   212  0888  3433               	retlw	51	;'3'
   213  0889  342E               	retlw	46	;'.'
   214  088A  3431               	retlw	49	;'1'
   215  088B  3466               	retlw	102	;'f'
   216  088C  3400               	retlw	0
   217  088D                     STR_2:	
   218  088D  3444               	retlw	68	;'D'
   219  088E  3469               	retlw	105	;'i'
   220  088F  3465               	retlw	101	;'e'
   221  0890  346E               	retlw	110	;'n'
   222  0891  3420               	retlw	32	;' '
   223  0892  3461               	retlw	97	;'a'
   224  0893  3470               	retlw	112	;'p'
   225  0894  3420               	retlw	32	;' '
   226  0895  3432               	retlw	50	;'2'
   227  0896  343A               	retlw	58	;':'
   228  0897  3420               	retlw	32	;' '
   229  0898  3425               	retlw	37	;'%'
   230  0899  3433               	retlw	51	;'3'
   231  089A  342E               	retlw	46	;'.'
   232  089B  3431               	retlw	49	;'1'
   233  089C  3466               	retlw	102	;'f'
   234  089D  3400               	retlw	0
   235                           
   236                           	psect	cinit
   237  1730                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to BANK0
   240  1730  01DE               	clrf	__pbssBANK0& (0+127)
   241  1731  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   242  1732  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   243  1733  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   244  1734  01E2               	clrf	(__pbssBANK0+4)& (0+127)
   245  1735  01E3               	clrf	(__pbssBANK0+5)& (0+127)
   246  1736  01E4               	clrf	(__pbssBANK0+6)& (0+127)
   247  1737  01E5               	clrf	(__pbssBANK0+7)& (0+127)
   248  1738  01E6               	clrf	(__pbssBANK0+8)& (0+127)
   249  1739  01E7               	clrf	(__pbssBANK0+9)& (0+127)
   250  173A                     end_of_initialization:	
   251                           ;End of C runtime variable initialization code
   252                           
   253  173A  0183               	clrf	3
   254  173B  120A  118A  2805   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssBANK0
   257  005E                     __pbssBANK0:	
   258  005E                     _res1:	
   259  005E                     	ds	3
   260  0061                     _res2:	
   261  0061                     	ds	3
   262  0064                     _adc1:	
   263  0064                     	ds	2
   264  0066                     _adc2:	
   265  0066                     	ds	2
   266                           
   267                           	psect	cstackBANK1
   268  00A0                     __pcstackBANK1:	
   269  00A0                     _printf$3162:	
   270                           
   271                           ; 4 bytes @ 0x0
   272  00A0                     	ds	4
   273  00A4                     printf@ap:	
   274                           
   275                           ; 1 bytes @ 0x4
   276  00A4                     	ds	1
   277  00A5                     printf@integ:	
   278                           
   279                           ; 3 bytes @ 0x5
   280  00A5                     	ds	3
   281  00A8                     printf@_val:	
   282                           
   283                           ; 4 bytes @ 0x8
   284  00A8                     	ds	4
   285  00AC                     printf@flag:	
   286                           
   287                           ; 2 bytes @ 0xC
   288  00AC                     	ds	2
   289  00AE                     printf@f:	
   290                           
   291                           ; 1 bytes @ 0xE
   292  00AE                     	ds	1
   293  00AF                     printf@width:	
   294                           
   295                           ; 2 bytes @ 0xF
   296  00AF                     	ds	2
   297  00B1                     printf@exp:	
   298                           
   299                           ; 2 bytes @ 0x11
   300  00B1                     	ds	2
   301  00B3                     printf@fval:	
   302                           
   303                           ; 3 bytes @ 0x13
   304  00B3                     	ds	3
   305  00B6                     printf@prec:	
   306                           
   307                           ; 2 bytes @ 0x16
   308  00B6                     	ds	2
   309  00B8                     printf@c:	
   310                           
   311                           ; 1 bytes @ 0x18
   312  00B8                     	ds	1
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:	
   316  0070                     ?_lcd_init:	
   317  0070                     ?_lcd_putc:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_lcd_put_byte:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ??_lcd_busy:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_isprint:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ??_isprint:	
   330                           ; 1 bit 
   331                           
   332  0070                     ?_isdigit:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ??_isdigit:	
   336                           ; 1 bit 
   337                           
   338  0070                     ?_read_adc_AN3:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_read_adc_AN12:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ?_putch:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ?___ftge:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ?_lcd_busy:	
   354                           ; 1 bit 
   355                           
   356  0070                     ?___lbmod:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?___wmul:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?___awmod:	
   363                           ; 2 bytes @ 0x0
   364                           
   365  0070                     ?___ftpack:	
   366                           ; 2 bytes @ 0x0
   367                           
   368  0070                     ?___ftneg:	
   369                           ; 3 bytes @ 0x0
   370                           
   371  0070                     ?__tdiv_to_l_:	
   372                           ; 3 bytes @ 0x0
   373                           
   374  0070                     ?__div_to_l_:	
   375                           ; 4 bytes @ 0x0
   376                           
   377  0070                     ?___lldiv:	
   378                           ; 4 bytes @ 0x0
   379                           
   380  0070                     lcd_put_byte@b:	
   381                           ; 4 bytes @ 0x0
   382                           
   383  0070                     _isdigit$3670:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     _isprint$3673:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ___lbmod@divisor:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ___wmul@multiplier:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0070                     ___awmod@divisor:	
   396                           ; 2 bytes @ 0x0
   397                           
   398  0070                     ___ftneg@f1:	
   399                           ; 2 bytes @ 0x0
   400                           
   401  0070                     ___ftge@ff1:	
   402                           ; 3 bytes @ 0x0
   403                           
   404  0070                     __tdiv_to_l_@f1:	
   405                           ; 3 bytes @ 0x0
   406                           
   407  0070                     __div_to_l_@f1:	
   408                           ; 3 bytes @ 0x0
   409                           
   410  0070                     ___ftpack@arg:	
   411                           ; 3 bytes @ 0x0
   412                           
   413  0070                     ___lldiv@divisor:	
   414                           ; 3 bytes @ 0x0
   415                           
   416                           
   417                           ; 4 bytes @ 0x0
   418  0070                     	ds	1
   419  0071                     ??_lcd_put_byte:	
   420  0071                     ??___lbmod:	
   421                           ; 0 bytes @ 0x1
   422                           
   423  0071                     lcd_busy@busy:	
   424                           ; 0 bytes @ 0x1
   425                           
   426  0071                     isdigit@c:	
   427                           ; 1 bytes @ 0x1
   428                           
   429  0071                     isprint@c:	
   430                           ; 1 bytes @ 0x1
   431                           
   432                           
   433                           ; 1 bytes @ 0x1
   434  0071                     	ds	1
   435  0072                     ___lbmod@dividend:	
   436  0072                     ___wmul@multiplicand:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0072                     ___awmod@dividend:	
   440                           ; 2 bytes @ 0x2
   441                           
   442                           
   443                           ; 2 bytes @ 0x2
   444  0072                     	ds	1
   445  0073                     ??___ftneg:	
   446  0073                     lcd_put_byte@rs:	
   447                           ; 0 bytes @ 0x3
   448                           
   449  0073                     ___lbmod@counter:	
   450                           ; 1 bytes @ 0x3
   451                           
   452  0073                     ___ftpack@exp:	
   453                           ; 1 bytes @ 0x3
   454                           
   455  0073                     ___ftge@ff2:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     __tdiv_to_l_@f2:	
   459                           ; 3 bytes @ 0x3
   460                           
   461  0073                     __div_to_l_@f2:	
   462                           ; 3 bytes @ 0x3
   463                           
   464                           
   465                           ; 3 bytes @ 0x3
   466  0073                     	ds	1
   467  0074                     ??___wmul:	
   468  0074                     ??___awmod:	
   469                           ; 0 bytes @ 0x4
   470                           
   471  0074                     lcd_put_byte@temp:	
   472                           ; 0 bytes @ 0x4
   473                           
   474  0074                     ___lbmod@rem:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     ___awmod@counter:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     ___ftpack@sign:	
   481                           ; 1 bytes @ 0x4
   482                           
   483  0074                     ___wmul@product:	
   484                           ; 1 bytes @ 0x4
   485                           
   486  0074                     ___lldiv@dividend:	
   487                           ; 2 bytes @ 0x4
   488                           
   489                           
   490                           ; 4 bytes @ 0x4
   491  0074                     	ds	1
   492  0075                     ??_lcd_init:	
   493  0075                     ?_lcd_gotoxy:	
   494                           ; 0 bytes @ 0x5
   495                           
   496  0075                     ??___ftpack:	
   497                           ; 0 bytes @ 0x5
   498                           
   499  0075                     ?___lbdiv:	
   500                           ; 0 bytes @ 0x5
   501                           
   502  0075                     lcd_gotoxy@row:	
   503                           ; 1 bytes @ 0x5
   504                           
   505  0075                     ___lbdiv@divisor:	
   506                           ; 1 bytes @ 0x5
   507                           
   508  0075                     ___awmod@sign:	
   509                           ; 1 bytes @ 0x5
   510                           
   511                           
   512                           ; 1 bytes @ 0x5
   513  0075                     	ds	1
   514  0076                     ??_lcd_gotoxy:	
   515  0076                     ??__tdiv_to_l_:	
   516                           ; 0 bytes @ 0x6
   517                           
   518  0076                     ??__div_to_l_:	
   519                           ; 0 bytes @ 0x6
   520                           
   521  0076                     ??___lbdiv:	
   522                           ; 0 bytes @ 0x6
   523                           
   524  0076                     ??___ftge:	
   525                           ; 0 bytes @ 0x6
   526                           
   527  0076                     ?___awdiv:	
   528                           ; 0 bytes @ 0x6
   529                           
   530  0076                     lcd_gotoxy@col:	
   531                           ; 2 bytes @ 0x6
   532                           
   533  0076                     ___lbdiv@dividend:	
   534                           ; 1 bytes @ 0x6
   535                           
   536  0076                     ___awdiv@divisor:	
   537                           ; 1 bytes @ 0x6
   538                           
   539                           
   540                           ; 2 bytes @ 0x6
   541  0076                     	ds	1
   542  0077                     lcd_gotoxy@address:	
   543  0077                     ___lbdiv@counter:	
   544                           ; 1 bytes @ 0x7
   545                           
   546                           
   547                           ; 1 bytes @ 0x7
   548  0077                     	ds	1
   549  0078                     ??_lcd_putc:	
   550  0078                     ??___lldiv:	
   551                           ; 0 bytes @ 0x8
   552                           
   553  0078                     ?___awtoft:	
   554                           ; 0 bytes @ 0x8
   555                           
   556  0078                     ?___lltoft:	
   557                           ; 3 bytes @ 0x8
   558                           
   559  0078                     lcd_putc@c:	
   560                           ; 3 bytes @ 0x8
   561                           
   562  0078                     ___lbdiv@quotient:	
   563                           ; 1 bytes @ 0x8
   564                           
   565  0078                     ___awtoft@c:	
   566                           ; 1 bytes @ 0x8
   567                           
   568  0078                     ___awdiv@dividend:	
   569                           ; 2 bytes @ 0x8
   570                           
   571  0078                     ___lldiv@quotient:	
   572                           ; 2 bytes @ 0x8
   573                           
   574  0078                     ___lltoft@c:	
   575                           ; 4 bytes @ 0x8
   576                           
   577                           
   578                           ; 4 bytes @ 0x8
   579  0078                     	ds	1
   580  0079                     ??_putch:	
   581  0079                     ?___bmul:	
   582                           ; 0 bytes @ 0x9
   583                           
   584  0079                     putch@c:	
   585                           ; 1 bytes @ 0x9
   586                           
   587  0079                     ___bmul@multiplicand:	
   588                           ; 1 bytes @ 0x9
   589                           
   590                           
   591                           ; 1 bytes @ 0x9
   592  0079                     	ds	1
   593  007A                     ??___bmul:	
   594  007A                     ??___awdiv:	
   595                           ; 0 bytes @ 0xA
   596                           
   597  007A                     ___bmul@product:	
   598                           ; 0 bytes @ 0xA
   599                           
   600  007A                     ___awdiv@counter:	
   601                           ; 1 bytes @ 0xA
   602                           
   603                           
   604                           ; 1 bytes @ 0xA
   605  007A                     	ds	1
   606  007B                     ??___awtoft:	
   607  007B                     ___bmul@multiplier:	
   608                           ; 0 bytes @ 0xB
   609                           
   610  007B                     ___awtoft@sign:	
   611                           ; 1 bytes @ 0xB
   612                           
   613  007B                     ___awdiv@sign:	
   614                           ; 1 bytes @ 0xB
   615                           
   616                           
   617                           ; 1 bytes @ 0xB
   618  007B                     	ds	1
   619  007C                     ??___lltoft:	
   620  007C                     ___lldiv@counter:	
   621                           ; 0 bytes @ 0xC
   622                           
   623  007C                     ___lltoft@exp:	
   624                           ; 1 bytes @ 0xC
   625                           
   626  007C                     ___awdiv@quotient:	
   627                           ; 1 bytes @ 0xC
   628                           
   629                           
   630                           ; 2 bytes @ 0xC
   631  007C                     	ds	1
   632  007D                     ??___llmod:	
   633  007D                     ___llmod@counter:	
   634                           ; 0 bytes @ 0xD
   635                           
   636                           
   637                           ; 1 bytes @ 0xD
   638  007D                     	ds	1
   639  007E                     ??_fround:	
   640  007E                     ??___ftsub:	
   641                           ; 0 bytes @ 0xE
   642                           
   643                           
   644                           	psect	cstackBANK0
   645  0020                     __pcstackBANK0:	
   646                           ; 0 bytes @ 0xE
   647                           
   648  0020                     ?___ftdiv:	
   649  0020                     ?___fttol:	
   650                           ; 3 bytes @ 0x0
   651                           
   652  0020                     ?___llmod:	
   653                           ; 4 bytes @ 0x0
   654                           
   655  0020                     ___ftdiv@f2:	
   656                           ; 4 bytes @ 0x0
   657                           
   658  0020                     ___fttol@f1:	
   659                           ; 3 bytes @ 0x0
   660                           
   661  0020                     ___llmod@divisor:	
   662                           ; 3 bytes @ 0x0
   663                           
   664  0020                     __tdiv_to_l_@quot:	
   665                           ; 4 bytes @ 0x0
   666                           
   667  0020                     __div_to_l_@quot:	
   668                           ; 4 bytes @ 0x0
   669                           
   670                           
   671                           ; 4 bytes @ 0x0
   672  0020                     	ds	3
   673  0023                     ___ftdiv@f1:	
   674                           
   675                           ; 3 bytes @ 0x3
   676  0023                     	ds	1
   677  0024                     ??___fttol:	
   678  0024                     __tdiv_to_l_@cntr:	
   679                           ; 0 bytes @ 0x4
   680                           
   681  0024                     __div_to_l_@cntr:	
   682                           ; 1 bytes @ 0x4
   683                           
   684  0024                     ___llmod@dividend:	
   685                           ; 1 bytes @ 0x4
   686                           
   687                           
   688                           ; 4 bytes @ 0x4
   689  0024                     	ds	1
   690  0025                     __tdiv_to_l_@exp1:	
   691  0025                     __div_to_l_@exp1:	
   692                           ; 1 bytes @ 0x5
   693                           
   694                           
   695                           ; 1 bytes @ 0x5
   696  0025                     	ds	1
   697  0026                     ??___ftdiv:	
   698                           
   699                           ; 0 bytes @ 0x6
   700  0026                     	ds	1
   701  0027                     ___fttol@sign1:	
   702                           
   703                           ; 1 bytes @ 0x7
   704  0027                     	ds	1
   705  0028                     ___fttol@lval:	
   706                           
   707                           ; 4 bytes @ 0x8
   708  0028                     	ds	1
   709  0029                     ___ftdiv@cntr:	
   710                           
   711                           ; 1 bytes @ 0x9
   712  0029                     	ds	1
   713  002A                     ___ftdiv@f3:	
   714                           
   715                           ; 3 bytes @ 0xA
   716  002A                     	ds	2
   717  002C                     ___fttol@exp1:	
   718                           
   719                           ; 1 bytes @ 0xC
   720  002C                     	ds	1
   721  002D                     ___ftdiv@exp:	
   722                           
   723                           ; 1 bytes @ 0xD
   724  002D                     	ds	1
   725  002E                     ___ftdiv@sign:	
   726                           
   727                           ; 1 bytes @ 0xE
   728  002E                     	ds	1
   729  002F                     ?___ftmul:	
   730  002F                     ___ftmul@f1:	
   731                           ; 3 bytes @ 0xF
   732                           
   733                           
   734                           ; 3 bytes @ 0xF
   735  002F                     	ds	3
   736  0032                     ___ftmul@f2:	
   737                           
   738                           ; 3 bytes @ 0x12
   739  0032                     	ds	3
   740  0035                     ??___ftmul:	
   741                           
   742                           ; 0 bytes @ 0x15
   743  0035                     	ds	3
   744  0038                     ___ftmul@exp:	
   745                           
   746                           ; 1 bytes @ 0x18
   747  0038                     	ds	1
   748  0039                     ___ftmul@f3_as_product:	
   749                           
   750                           ; 3 bytes @ 0x19
   751  0039                     	ds	3
   752  003C                     ___ftmul@cntr:	
   753                           
   754                           ; 1 bytes @ 0x1C
   755  003C                     	ds	1
   756  003D                     ___ftmul@sign:	
   757                           
   758                           ; 1 bytes @ 0x1D
   759  003D                     	ds	1
   760  003E                     ??_read_adc_AN3:	
   761  003E                     ??_read_adc_AN12:	
   762                           ; 0 bytes @ 0x1E
   763                           
   764  003E                     ?_scale:	
   765                           ; 0 bytes @ 0x1E
   766                           
   767  003E                     ?___ftadd:	
   768                           ; 3 bytes @ 0x1E
   769                           
   770  003E                     ___ftadd@f1:	
   771                           ; 3 bytes @ 0x1E
   772                           
   773                           
   774                           ; 3 bytes @ 0x1E
   775  003E                     	ds	3
   776  0041                     ??_scale:	
   777  0041                     ___ftadd@f2:	
   778                           ; 0 bytes @ 0x21
   779                           
   780                           
   781                           ; 3 bytes @ 0x21
   782  0041                     	ds	3
   783  0044                     ??___ftadd:	
   784                           
   785                           ; 0 bytes @ 0x24
   786  0044                     	ds	1
   787  0045                     _scale$4112:	
   788                           
   789                           ; 3 bytes @ 0x25
   790  0045                     	ds	2
   791  0047                     ___ftadd@sign:	
   792                           
   793                           ; 1 bytes @ 0x27
   794  0047                     	ds	1
   795  0048                     scale@scl:	
   796  0048                     ___ftadd@exp2:	
   797                           ; 1 bytes @ 0x28
   798                           
   799                           
   800                           ; 1 bytes @ 0x28
   801  0048                     	ds	1
   802  0049                     ___ftadd@exp1:	
   803                           
   804                           ; 1 bytes @ 0x29
   805  0049                     	ds	1
   806  004A                     ?_fround:	
   807  004A                     ?___ftsub:	
   808                           ; 3 bytes @ 0x2A
   809                           
   810  004A                     ___ftsub@f2:	
   811                           ; 3 bytes @ 0x2A
   812                           
   813                           
   814                           ; 3 bytes @ 0x2A
   815  004A                     	ds	3
   816  004D                     ___ftsub@f1:	
   817  004D                     _fround$4111:	
   818                           ; 3 bytes @ 0x2D
   819                           
   820                           
   821                           ; 3 bytes @ 0x2D
   822  004D                     	ds	3
   823  0050                     _fround$4110:	
   824                           
   825                           ; 3 bytes @ 0x30
   826  0050                     	ds	3
   827  0053                     fround@prec:	
   828                           
   829                           ; 1 bytes @ 0x33
   830  0053                     	ds	1
   831  0054                     ?_printf:	
   832                           
   833                           ; 2 bytes @ 0x34
   834  0054                     	ds	3
   835  0057                     ??_printf:	
   836                           
   837                           ; 0 bytes @ 0x37
   838  0057                     	ds	5
   839  005C                     ??_main:	
   840                           
   841                           ; 0 bytes @ 0x3C
   842  005C                     	ds	2
   843                           
   844                           	psect	maintext
   845  0005                     __pmaintext:	
   846 ;;Data sizes: Strings 34, constant 118, data 0, bss 10, persistent 0 stack 0
   847 ;;Auto spaces:   Size  Autos    Used
   848 ;; COMMON          14     14      14
   849 ;; BANK0           80     62      72
   850 ;; BANK1           80     25      25
   851 ;; BANK3           96      0       0
   852 ;; BANK2           96      0       0
   853 ;;
   854 ;; Pointer list with targets:
   855 ;; ?___ftpack	float  size(1) Largest target is 0
   856 ;;
   857 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   858 ;;
   859 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   860 ;;
   861 ;; ?___ftsub	float  size(1) Largest target is 0
   862 ;;
   863 ;; ?___lltoft	float  size(1) Largest target is 0
   864 ;;
   865 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   866 ;;
   867 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   868 ;;
   869 ;; ?___fttol	long  size(1) Largest target is 0
   870 ;;
   871 ;; ?___ftadd	float  size(1) Largest target is 0
   872 ;;
   873 ;; ?___ftneg	float  size(1) Largest target is 0
   874 ;;
   875 ;; ?___awmod	int  size(1) Largest target is 40
   876 ;;		 -> dpowers(CODE[40]), 
   877 ;;
   878 ;; ?___awdiv	int  size(1) Largest target is 0
   879 ;;
   880 ;; ?_scale	int  size(1) Largest target is 0
   881 ;;
   882 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   883 ;;
   884 ;; ?_fround	unsigned int  size(1) Largest target is 0
   885 ;;
   886 ;; ?___ftdiv	float  size(1) Largest target is 0
   887 ;;
   888 ;; ?___awtoft	float  size(1) Largest target is 0
   889 ;;
   890 ;; ?___ftmul	float  size(1) Largest target is 0
   891 ;;
   892 ;; printf@f	PTR const unsigned char  size(1) Largest target is 17
   893 ;;		 -> STR_2(CODE[17]), STR_1(CODE[17]), 
   894 ;;
   895 ;; ?_printf	int  size(1) Largest target is 0
   896 ;;
   897 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   898 ;;		 -> ?_printf(BANK0[2]), 
   899 ;;
   900 ;; S3151$_cp	PTR const unsigned char  size(1) Largest target is 0
   901 ;;
   902 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   903 ;;
   904 ;;
   905 ;; Critical Paths under _main in COMMON
   906 ;;
   907 ;;   _printf->___awdiv
   908 ;;   _printf->__div_to_l_
   909 ;;   _printf->___llmod
   910 ;;   _putch->_lcd_putc
   911 ;;   _lcd_putc->_lcd_gotoxy
   912 ;;   _scale->___awdiv
   913 ;;   _lcd_gotoxy->_lcd_put_byte
   914 ;;   _lcd_init->_lcd_put_byte
   915 ;;   ___lltoft->___ftpack
   916 ;;   ___awtoft->___ftpack
   917 ;;   ___ftmul->___awdiv
   918 ;;   ___ftdiv->___awtoft
   919 ;;   ___llmod->___lldiv
   920 ;;   ___awdiv->___awmod
   921 ;;   ___fttol->___awdiv
   922 ;;   ___lbdiv->___lbmod
   923 ;;   ___bmul->___lbdiv
   924 ;;
   925 ;; Critical Paths under _main in BANK0
   926 ;;
   927 ;;   _main->_printf
   928 ;;   _printf->_fround
   929 ;;   ___ftsub->___ftadd
   930 ;;   _scale->___ftmul
   931 ;;   _fround->___ftadd
   932 ;;   _read_adc_AN12->___ftmul
   933 ;;   _read_adc_AN3->___ftmul
   934 ;;   ___ftmul->___ftdiv
   935 ;;   ___ftadd->___ftmul
   936 ;;
   937 ;; Critical Paths under _main in BANK1
   938 ;;
   939 ;;   _main->_printf
   940 ;;
   941 ;; Critical Paths under _main in BANK3
   942 ;;
   943 ;;   None.
   944 ;;
   945 ;; Critical Paths under _main in BANK2
   946 ;;
   947 ;;   None.
   948 ;;
   949 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   950 ;;
   951 ;;
   952 ;;Call Graph Tables:
   953 ;;
   954 ;; ---------------------------------------------------------------------------------
   955 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (0) _main                                                 2     2      0   13752
   958 ;;                                             60 BANK0      2     2      0
   959 ;;                           _lcd_init
   960 ;;                       _read_adc_AN3
   961 ;;                         _lcd_gotoxy
   962 ;;                             _printf
   963 ;;                      _read_adc_AN12
   964 ;; ---------------------------------------------------------------------------------
   965 ;; (1) _printf                                              37    34      3   10547
   966 ;;                                             52 BANK0      8     5      3
   967 ;;                                              0 BANK1     25    25      0
   968 ;;                              _putch
   969 ;;                            _isdigit
   970 ;;                             ___wmul
   971 ;;                             ___ftge
   972 ;;                            ___ftneg
   973 ;;                            ___awdiv
   974 ;;                              _scale
   975 ;;                            ___ftmul
   976 ;;                             _fround
   977 ;;                            ___ftadd
   978 ;;                            ___fttol
   979 ;;                         __div_to_l_
   980 ;;                        __tdiv_to_l_
   981 ;;                           ___lltoft
   982 ;;                            ___ftsub
   983 ;;                            ___lldiv
   984 ;;                            ___llmod
   985 ;; ---------------------------------------------------------------------------------
   986 ;; (2) _putch                                                1     1      0     713
   987 ;;                                              9 COMMON     1     1      0
   988 ;;                           _lcd_putc
   989 ;; ---------------------------------------------------------------------------------
   990 ;; (3) _lcd_putc                                             1     1      0     691
   991 ;;                                              8 COMMON     1     1      0
   992 ;;                       _lcd_put_byte
   993 ;;                           _lcd_busy
   994 ;;                         _lcd_gotoxy
   995 ;;                            _isprint
   996 ;; ---------------------------------------------------------------------------------
   997 ;; (2) ___ftsub                                              6     0      6    1094
   998 ;;                                             42 BANK0      6     0      6
   999 ;;                            ___ftadd
  1000 ;;                           ___lltoft (ARG)
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (2) _scale                                               14    11      3    1660
  1003 ;;                                             30 BANK0     11     8      3
  1004 ;;                            ___awmod
  1005 ;;                            ___awdiv
  1006 ;;                            ___ftmul
  1007 ;;                             ___bmul
  1008 ;;                            ___fttol (ARG)
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (2) _fround                                              13    10      3    1187
  1011 ;;                                             42 BANK0     10     7      3
  1012 ;;                            ___lbmod
  1013 ;;                             ___bmul
  1014 ;;                            ___lbdiv
  1015 ;;                            ___ftmul
  1016 ;;                            ___ftadd (ARG)
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1019 ;;                                              5 COMMON     3     2      1
  1020 ;;                       _lcd_put_byte
  1021 ;;                           _lcd_busy
  1022 ;; ---------------------------------------------------------------------------------
  1023 ;; (1) _lcd_init                                             4     4      0     244
  1024 ;;                                              5 COMMON     3     3      0
  1025 ;;                       _lcd_put_byte
  1026 ;;                           _lcd_busy
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (1) _read_adc_AN12                                        2     2      0    1324
  1029 ;;                                             30 BANK0      2     2      0
  1030 ;;                           ___awtoft
  1031 ;;                            ___ftdiv
  1032 ;;                            ___ftmul
  1033 ;; ---------------------------------------------------------------------------------
  1034 ;; (1) _read_adc_AN3                                         2     2      0    1324
  1035 ;;                                             30 BANK0      2     2      0
  1036 ;;                           ___awtoft
  1037 ;;                            ___ftdiv
  1038 ;;                            ___ftmul
  1039 ;; ---------------------------------------------------------------------------------
  1040 ;; (2) ___lltoft                                             5     1      4     278
  1041 ;;                                              8 COMMON     5     1      4
  1042 ;;                           ___ftpack
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (2) ___awtoft                                             4     1      3     300
  1045 ;;                                              8 COMMON     4     1      3
  1046 ;;                           ___ftpack
  1047 ;; ---------------------------------------------------------------------------------
  1048 ;; (2) ___ftmul                                             15     9      6     535
  1049 ;;                                             15 BANK0     15     9      6
  1050 ;;                           ___ftpack
  1051 ;;                            ___fttol (ARG)
  1052 ;;                            ___awdiv (ARG)
  1053 ;;                            ___awmod (ARG)
  1054 ;;                             ___bmul (ARG)
  1055 ;;                            ___lbdiv (ARG)
  1056 ;;                            ___lbmod (ARG)
  1057 ;;                            ___ftdiv (ARG)
  1058 ;;                           ___awtoft (ARG)
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (2) ___ftdiv                                             15     9      6     489
  1061 ;;                                              0 BANK0     15     9      6
  1062 ;;                           ___ftpack
  1063 ;;                           ___awtoft (ARG)
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (3) ___ftadd                                             12     6      6    1049
  1066 ;;                                             30 BANK0     12     6      6
  1067 ;;                           ___ftpack
  1068 ;;                            ___lbmod (ARG)
  1069 ;;                             ___bmul (ARG)
  1070 ;;                            ___lbdiv (ARG)
  1071 ;;                            ___ftmul (ARG)
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (5) _lcd_busy                                             2     2      0      23
  1074 ;;                                              0 COMMON     2     2      0
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (5) _lcd_put_byte                                         5     4      1     221
  1077 ;;                                              0 COMMON     5     4      1
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (3) ___awmod                                              6     2      4     296
  1080 ;;                                              0 COMMON     6     2      4
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (2) ___lldiv                                             13     5      8     162
  1083 ;;                                              0 COMMON    13     5      8
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (2) ___ftge                                               6     0      6     136
  1086 ;;                                              0 COMMON     6     0      6
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (2) ___ftneg                                              3     0      3      45
  1089 ;;                                              0 COMMON     3     0      3
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (2) ___llmod                                              9     1      8     159
  1092 ;;                                             13 COMMON     1     1      0
  1093 ;;                                              0 BANK0      8     0      8
  1094 ;;                            ___lldiv (ARG)
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (3) ___awdiv                                              8     4      4     300
  1097 ;;                                              6 COMMON     8     4      4
  1098 ;;                            ___awmod (ARG)
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (2) ___fttol                                             13     9      4     252
  1101 ;;                                              0 BANK0     13     9      4
  1102 ;;                           ___ftpack (ARG)
  1103 ;;                            ___awmod (ARG)
  1104 ;;                            ___awdiv (ARG)
  1105 ;;                             ___bmul (ARG)
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (3) ___ftpack                                             8     3      5     209
  1108 ;;                                              0 COMMON     8     3      5
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (3) ___lbmod                                              5     4      1     159
  1111 ;;                                              0 COMMON     5     4      1
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (3) ___lbdiv                                              4     3      1     162
  1114 ;;                                              5 COMMON     4     3      1
  1115 ;;                            ___lbmod (ARG)
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; (2) ___wmul                                               6     2      4      92
  1118 ;;                                              0 COMMON     6     2      4
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (3) ___bmul                                               3     2      1      40
  1121 ;;                                              9 COMMON     3     2      1
  1122 ;;                            ___lbmod (ARG)
  1123 ;;                            ___lbdiv (ARG)
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (2) __div_to_l_                                          20    14      6     446
  1126 ;;                                              0 COMMON    14     8      6
  1127 ;;                                              0 BANK0      6     6      0
  1128 ;; ---------------------------------------------------------------------------------
  1129 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1130 ;;                                              0 COMMON     9     3      6
  1131 ;;                                              0 BANK0      6     6      0
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (2) _isdigit                                              2     2      0      68
  1134 ;;                                              0 COMMON     2     2      0
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (4) _isprint                                              2     2      0      68
  1137 ;;                                              0 COMMON     2     2      0
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; Estimated maximum stack depth 5
  1140 ;; ---------------------------------------------------------------------------------
  1141 ;; Call Graph Graphs:
  1142 ;; _main (ROOT)
  1143 ;;   _lcd_init
  1144 ;;     _lcd_put_byte
  1145 ;;     _lcd_busy
  1146 ;;   _read_adc_AN3
  1147 ;;     ___awtoft
  1148 ;;       ___ftpack
  1149 ;;     ___ftdiv
  1150 ;;       ___ftpack
  1151 ;;       ___awtoft (ARG)
  1152 ;;         ___ftpack
  1153 ;;     ___ftmul
  1154 ;;       ___ftpack
  1155 ;;       ___fttol (ARG)
  1156 ;;         ___ftpack (ARG)
  1157 ;;         ___awmod (ARG)
  1158 ;;         ___awdiv (ARG)
  1159 ;;           ___awmod (ARG)
  1160 ;;         ___bmul (ARG)
  1161 ;;           ___lbmod (ARG)
  1162 ;;           ___lbdiv (ARG)
  1163 ;;             ___lbmod (ARG)
  1164 ;;       ___awdiv (ARG)
  1165 ;;         ___awmod (ARG)
  1166 ;;       ___awmod (ARG)
  1167 ;;       ___bmul (ARG)
  1168 ;;         ___lbmod (ARG)
  1169 ;;         ___lbdiv (ARG)
  1170 ;;           ___lbmod (ARG)
  1171 ;;       ___lbdiv (ARG)
  1172 ;;         ___lbmod (ARG)
  1173 ;;       ___lbmod (ARG)
  1174 ;;       ___ftdiv (ARG)
  1175 ;;         ___ftpack
  1176 ;;         ___awtoft (ARG)
  1177 ;;           ___ftpack
  1178 ;;       ___awtoft (ARG)
  1179 ;;         ___ftpack
  1180 ;;   _lcd_gotoxy
  1181 ;;     _lcd_put_byte
  1182 ;;     _lcd_busy
  1183 ;;   _printf
  1184 ;;     _putch
  1185 ;;       _lcd_putc
  1186 ;;         _lcd_put_byte
  1187 ;;         _lcd_busy
  1188 ;;         _lcd_gotoxy
  1189 ;;           _lcd_put_byte
  1190 ;;           _lcd_busy
  1191 ;;         _isprint
  1192 ;;     _isdigit
  1193 ;;     ___wmul
  1194 ;;     ___ftge
  1195 ;;     ___ftneg
  1196 ;;     ___awdiv
  1197 ;;       ___awmod (ARG)
  1198 ;;     _scale
  1199 ;;       ___awmod
  1200 ;;       ___awdiv
  1201 ;;         ___awmod (ARG)
  1202 ;;       ___ftmul
  1203 ;;         ___ftpack
  1204 ;;         ___fttol (ARG)
  1205 ;;           ___ftpack (ARG)
  1206 ;;           ___awmod (ARG)
  1207 ;;           ___awdiv (ARG)
  1208 ;;             ___awmod (ARG)
  1209 ;;           ___bmul (ARG)
  1210 ;;             ___lbmod (ARG)
  1211 ;;             ___lbdiv (ARG)
  1212 ;;               ___lbmod (ARG)
  1213 ;;         ___awdiv (ARG)
  1214 ;;           ___awmod (ARG)
  1215 ;;         ___awmod (ARG)
  1216 ;;         ___bmul (ARG)
  1217 ;;           ___lbmod (ARG)
  1218 ;;           ___lbdiv (ARG)
  1219 ;;             ___lbmod (ARG)
  1220 ;;         ___lbdiv (ARG)
  1221 ;;           ___lbmod (ARG)
  1222 ;;         ___lbmod (ARG)
  1223 ;;         ___ftdiv (ARG)
  1224 ;;           ___ftpack
  1225 ;;           ___awtoft (ARG)
  1226 ;;             ___ftpack
  1227 ;;         ___awtoft (ARG)
  1228 ;;           ___ftpack
  1229 ;;       ___bmul
  1230 ;;         ___lbmod (ARG)
  1231 ;;         ___lbdiv (ARG)
  1232 ;;           ___lbmod (ARG)
  1233 ;;       ___fttol (ARG)
  1234 ;;         ___ftpack (ARG)
  1235 ;;         ___awmod (ARG)
  1236 ;;         ___awdiv (ARG)
  1237 ;;           ___awmod (ARG)
  1238 ;;         ___bmul (ARG)
  1239 ;;           ___lbmod (ARG)
  1240 ;;           ___lbdiv (ARG)
  1241 ;;             ___lbmod (ARG)
  1242 ;;     ___ftmul
  1243 ;;       ___ftpack
  1244 ;;       ___fttol (ARG)
  1245 ;;         ___ftpack (ARG)
  1246 ;;         ___awmod (ARG)
  1247 ;;         ___awdiv (ARG)
  1248 ;;           ___awmod (ARG)
  1249 ;;         ___bmul (ARG)
  1250 ;;           ___lbmod (ARG)
  1251 ;;           ___lbdiv (ARG)
  1252 ;;             ___lbmod (ARG)
  1253 ;;       ___awdiv (ARG)
  1254 ;;         ___awmod (ARG)
  1255 ;;       ___awmod (ARG)
  1256 ;;       ___bmul (ARG)
  1257 ;;         ___lbmod (ARG)
  1258 ;;         ___lbdiv (ARG)
  1259 ;;           ___lbmod (ARG)
  1260 ;;       ___lbdiv (ARG)
  1261 ;;         ___lbmod (ARG)
  1262 ;;       ___lbmod (ARG)
  1263 ;;       ___ftdiv (ARG)
  1264 ;;         ___ftpack
  1265 ;;         ___awtoft (ARG)
  1266 ;;           ___ftpack
  1267 ;;       ___awtoft (ARG)
  1268 ;;         ___ftpack
  1269 ;;     _fround
  1270 ;;       ___lbmod
  1271 ;;       ___bmul
  1272 ;;         ___lbmod (ARG)
  1273 ;;         ___lbdiv (ARG)
  1274 ;;           ___lbmod (ARG)
  1275 ;;       ___lbdiv
  1276 ;;         ___lbmod (ARG)
  1277 ;;       ___ftmul
  1278 ;;         ___ftpack
  1279 ;;         ___fttol (ARG)
  1280 ;;           ___ftpack (ARG)
  1281 ;;           ___awmod (ARG)
  1282 ;;           ___awdiv (ARG)
  1283 ;;             ___awmod (ARG)
  1284 ;;           ___bmul (ARG)
  1285 ;;             ___lbmod (ARG)
  1286 ;;             ___lbdiv (ARG)
  1287 ;;               ___lbmod (ARG)
  1288 ;;         ___awdiv (ARG)
  1289 ;;           ___awmod (ARG)
  1290 ;;         ___awmod (ARG)
  1291 ;;         ___bmul (ARG)
  1292 ;;           ___lbmod (ARG)
  1293 ;;           ___lbdiv (ARG)
  1294 ;;             ___lbmod (ARG)
  1295 ;;         ___lbdiv (ARG)
  1296 ;;           ___lbmod (ARG)
  1297 ;;         ___lbmod (ARG)
  1298 ;;         ___ftdiv (ARG)
  1299 ;;           ___ftpack
  1300 ;;           ___awtoft (ARG)
  1301 ;;             ___ftpack
  1302 ;;         ___awtoft (ARG)
  1303 ;;           ___ftpack
  1304 ;;       ___ftadd (ARG)
  1305 ;;         ___ftpack
  1306 ;;         ___lbmod (ARG)
  1307 ;;         ___bmul (ARG)
  1308 ;;           ___lbmod (ARG)
  1309 ;;           ___lbdiv (ARG)
  1310 ;;             ___lbmod (ARG)
  1311 ;;         ___lbdiv (ARG)
  1312 ;;           ___lbmod (ARG)
  1313 ;;         ___ftmul (ARG)
  1314 ;;           ___ftpack
  1315 ;;           ___fttol (ARG)
  1316 ;;             ___ftpack (ARG)
  1317 ;;             ___awmod (ARG)
  1318 ;;             ___awdiv (ARG)
  1319 ;;               ___awmod (ARG)
  1320 ;;             ___bmul (ARG)
  1321 ;;               ___lbmod (ARG)
  1322 ;;               ___lbdiv (ARG)
  1323 ;;                 ___lbmod (ARG)
  1324 ;;           ___awdiv (ARG)
  1325 ;;             ___awmod (ARG)
  1326 ;;           ___awmod (ARG)
  1327 ;;           ___bmul (ARG)
  1328 ;;             ___lbmod (ARG)
  1329 ;;             ___lbdiv (ARG)
  1330 ;;               ___lbmod (ARG)
  1331 ;;           ___lbdiv (ARG)
  1332 ;;             ___lbmod (ARG)
  1333 ;;           ___lbmod (ARG)
  1334 ;;           ___ftdiv (ARG)
  1335 ;;             ___ftpack
  1336 ;;             ___awtoft (ARG)
  1337 ;;               ___ftpack
  1338 ;;           ___awtoft (ARG)
  1339 ;;             ___ftpack
  1340 ;;     ___ftadd
  1341 ;;       ___ftpack
  1342 ;;       ___lbmod (ARG)
  1343 ;;       ___bmul (ARG)
  1344 ;;         ___lbmod (ARG)
  1345 ;;         ___lbdiv (ARG)
  1346 ;;           ___lbmod (ARG)
  1347 ;;       ___lbdiv (ARG)
  1348 ;;         ___lbmod (ARG)
  1349 ;;       ___ftmul (ARG)
  1350 ;;         ___ftpack
  1351 ;;         ___fttol (ARG)
  1352 ;;           ___ftpack (ARG)
  1353 ;;           ___awmod (ARG)
  1354 ;;           ___awdiv (ARG)
  1355 ;;             ___awmod (ARG)
  1356 ;;           ___bmul (ARG)
  1357 ;;             ___lbmod (ARG)
  1358 ;;             ___lbdiv (ARG)
  1359 ;;               ___lbmod (ARG)
  1360 ;;         ___awdiv (ARG)
  1361 ;;           ___awmod (ARG)
  1362 ;;         ___awmod (ARG)
  1363 ;;         ___bmul (ARG)
  1364 ;;           ___lbmod (ARG)
  1365 ;;           ___lbdiv (ARG)
  1366 ;;             ___lbmod (ARG)
  1367 ;;         ___lbdiv (ARG)
  1368 ;;           ___lbmod (ARG)
  1369 ;;         ___lbmod (ARG)
  1370 ;;         ___ftdiv (ARG)
  1371 ;;           ___ftpack
  1372 ;;           ___awtoft (ARG)
  1373 ;;             ___ftpack
  1374 ;;         ___awtoft (ARG)
  1375 ;;           ___ftpack
  1376 ;;     ___fttol
  1377 ;;       ___ftpack (ARG)
  1378 ;;       ___awmod (ARG)
  1379 ;;       ___awdiv (ARG)
  1380 ;;         ___awmod (ARG)
  1381 ;;       ___bmul (ARG)
  1382 ;;         ___lbmod (ARG)
  1383 ;;         ___lbdiv (ARG)
  1384 ;;           ___lbmod (ARG)
  1385 ;;     __div_to_l_
  1386 ;;     __tdiv_to_l_
  1387 ;;     ___lltoft
  1388 ;;       ___ftpack
  1389 ;;     ___ftsub
  1390 ;;       ___ftadd
  1391 ;;         ___ftpack
  1392 ;;         ___lbmod (ARG)
  1393 ;;         ___bmul (ARG)
  1394 ;;           ___lbmod (ARG)
  1395 ;;           ___lbdiv (ARG)
  1396 ;;             ___lbmod (ARG)
  1397 ;;         ___lbdiv (ARG)
  1398 ;;           ___lbmod (ARG)
  1399 ;;         ___ftmul (ARG)
  1400 ;;           ___ftpack
  1401 ;;           ___fttol (ARG)
  1402 ;;             ___ftpack (ARG)
  1403 ;;             ___awmod (ARG)
  1404 ;;             ___awdiv (ARG)
  1405 ;;               ___awmod (ARG)
  1406 ;;             ___bmul (ARG)
  1407 ;;               ___lbmod (ARG)
  1408 ;;               ___lbdiv (ARG)
  1409 ;;                 ___lbmod (ARG)
  1410 ;;           ___awdiv (ARG)
  1411 ;;             ___awmod (ARG)
  1412 ;;           ___awmod (ARG)
  1413 ;;           ___bmul (ARG)
  1414 ;;             ___lbmod (ARG)
  1415 ;;             ___lbdiv (ARG)
  1416 ;;               ___lbmod (ARG)
  1417 ;;           ___lbdiv (ARG)
  1418 ;;             ___lbmod (ARG)
  1419 ;;           ___lbmod (ARG)
  1420 ;;           ___ftdiv (ARG)
  1421 ;;             ___ftpack
  1422 ;;             ___awtoft (ARG)
  1423 ;;               ___ftpack
  1424 ;;           ___awtoft (ARG)
  1425 ;;             ___ftpack
  1426 ;;       ___lltoft (ARG)
  1427 ;;         ___ftpack
  1428 ;;     ___lldiv
  1429 ;;     ___llmod
  1430 ;;       ___lldiv (ARG)
  1431 ;;   _read_adc_AN12
  1432 ;;     ___awtoft
  1433 ;;       ___ftpack
  1434 ;;     ___ftdiv
  1435 ;;       ___ftpack
  1436 ;;       ___awtoft (ARG)
  1437 ;;         ___ftpack
  1438 ;;     ___ftmul
  1439 ;;       ___ftpack
  1440 ;;       ___fttol (ARG)
  1441 ;;         ___ftpack (ARG)
  1442 ;;         ___awmod (ARG)
  1443 ;;         ___awdiv (ARG)
  1444 ;;           ___awmod (ARG)
  1445 ;;         ___bmul (ARG)
  1446 ;;           ___lbmod (ARG)
  1447 ;;           ___lbdiv (ARG)
  1448 ;;             ___lbmod (ARG)
  1449 ;;       ___awdiv (ARG)
  1450 ;;         ___awmod (ARG)
  1451 ;;       ___awmod (ARG)
  1452 ;;       ___bmul (ARG)
  1453 ;;         ___lbmod (ARG)
  1454 ;;         ___lbdiv (ARG)
  1455 ;;           ___lbmod (ARG)
  1456 ;;       ___lbdiv (ARG)
  1457 ;;         ___lbmod (ARG)
  1458 ;;       ___lbmod (ARG)
  1459 ;;       ___ftdiv (ARG)
  1460 ;;         ___ftpack
  1461 ;;         ___awtoft (ARG)
  1462 ;;           ___ftpack
  1463 ;;       ___awtoft (ARG)
  1464 ;;         ___ftpack
  1465 ;;
  1466 ;; Address spaces:
  1467 ;;Name               Size   Autos  Total    Cost      Usage
  1468 ;;BITCOMMON            E      0       0       0        0.0%
  1469 ;;EEDATA             100      0       0       0        0.0%
  1470 ;;NULL                 0      0       0       0        0.0%
  1471 ;;CODE                 0      0       0       0        0.0%
  1472 ;;COMMON               E      E       E       1      100.0%
  1473 ;;BITSFR0              0      0       0       1        0.0%
  1474 ;;SFR0                 0      0       0       1        0.0%
  1475 ;;BITSFR1              0      0       0       2        0.0%
  1476 ;;SFR1                 0      0       0       2        0.0%
  1477 ;;STACK                0      0       5       2        0.0%
  1478 ;;ABS                  0      0      6F       3        0.0%
  1479 ;;BITBANK0            50      0       0       4        0.0%
  1480 ;;BITSFR3              0      0       0       4        0.0%
  1481 ;;SFR3                 0      0       0       4        0.0%
  1482 ;;BANK0               50     3E      48       5       90.0%
  1483 ;;BITSFR2              0      0       0       5        0.0%
  1484 ;;SFR2                 0      0       0       5        0.0%
  1485 ;;BITBANK1            50      0       0       6        0.0%
  1486 ;;BANK1               50     19      19       7       31.3%
  1487 ;;BITBANK3            60      0       0       8        0.0%
  1488 ;;BANK3               60      0       0       9        0.0%
  1489 ;;BITBANK2            60      0       0      10        0.0%
  1490 ;;BANK2               60      0       0      11        0.0%
  1491 ;;DATA                 0      0      74      12        0.0%
  1492                           
  1493                           
  1494 ;; *************** function _main *****************
  1495 ;; Defined at:
  1496 ;;		line 36 in file "D:\TTVXL\Project TTVXL\BT01week11ttvxl\BT01week11ttvxl.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;		None               void
  1503 ;; Registers used:
  1504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 17F/0
  1507 ;;		On exit  : 60/20
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0
  1512 ;;      Temps:          0       2       0       0       0
  1513 ;;      Totals:         0       2       0       0       0
  1514 ;;Total ram usage:        2 bytes
  1515 ;; Hardware stack levels required when called:    5
  1516 ;; This function calls:
  1517 ;;		_lcd_init
  1518 ;;		_read_adc_AN3
  1519 ;;		_lcd_gotoxy
  1520 ;;		_printf
  1521 ;;		_read_adc_AN12
  1522 ;; This function is called by:
  1523 ;;		Startup code after reset
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526  0005                     _main:	
  1527                           
  1528                           ;BT01week11ttvxl.c: 37: ANSEL = ANSELH = 0;
  1529                           
  1530                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1531  0005  1683               	bsf	3,5	;RP0=1, select bank3
  1532  0006  1703               	bsf	3,6	;RP1=1, select bank3
  1533  0007  0189               	clrf	9	;volatile
  1534  0008  0188               	clrf	8	;volatile
  1535                           
  1536                           ;BT01week11ttvxl.c: 38: lcd_init();
  1537  0009  120A  158A  234E   	fcall	_lcd_init
      +       120A  118A         
  1538                           
  1539                           ;BT01week11ttvxl.c: 39: TRISE0 = TRISE1 = 0;
  1540  000E  1683               	bsf	3,5	;RP0=1, select bank1
  1541  000F  1089               	bcf	9,1
  1542  0010  1009               	bcf	9,0
  1543                           
  1544                           ;BT01week11ttvxl.c: 40: TRISD= 0x00;
  1545  0011  0188               	clrf	8	;volatile
  1546                           
  1547                           ;BT01week11ttvxl.c: 41: TRISA3 = 1;
  1548  0012  1585               	bsf	5,3
  1549                           
  1550                           ;BT01week11ttvxl.c: 42: ANS3 = 1;
  1551  0013  1703               	bsf	3,6	;RP1=1, select bank3
  1552  0014  1588               	bsf	8,3
  1553                           
  1554                           ;BT01week11ttvxl.c: 43: TRISB0 = 1;
  1555  0015  1303               	bcf	3,6	;RP1=0, select bank1
  1556  0016  1406               	bsf	6,0
  1557                           
  1558                           ;BT01week11ttvxl.c: 44: ANS12 = 1;
  1559  0017  1703               	bsf	3,6	;RP1=1, select bank3
  1560  0018  1609               	bsf	9,4
  1561                           
  1562                           ;BT01week11ttvxl.c: 46: VCFG1 = 0;VCFG0 = 0;
  1563  0019  1303               	bcf	3,6	;RP1=0, select bank1
  1564  001A  129F               	bcf	31,5
  1565  001B  121F               	bcf	31,4
  1566                           
  1567                           ;BT01week11ttvxl.c: 47: ADCS1 = 0; ADCS0 = 1;
  1568  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1569  001D  139F               	bcf	31,7
  1570  001E  171F               	bsf	31,6
  1571                           
  1572                           ;BT01week11ttvxl.c: 48: ADFM = 1;
  1573  001F  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0020  179F               	bsf	31,7
  1575                           
  1576                           ;BT01week11ttvxl.c: 49: ADON = 1;
  1577  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0022  300D               	movlw	13
  1579  0023  141F               	bsf	31,0
  1580                           
  1581                           ;BT01week11ttvxl.c: 50: _delay((unsigned long)((10)*(4000000/4000.0)));
  1582  0024  00DD               	movwf	??_main+1
  1583  0025  30FB               	movlw	251
  1584  0026  00DC               	movwf	??_main
  1585  0027                     u3797:	
  1586  0027  0BDC               	decfsz	??_main,f
  1587  0028  2827               	goto	u3797
  1588  0029  0BDD               	decfsz	??_main+1,f
  1589  002A  2827               	goto	u3797
  1590  002B  282C               	nop2
  1591  002C                     l7114:	
  1592                           
  1593                           ;BT01week11ttvxl.c: 52: {
  1594                           ;BT01week11ttvxl.c: 53: read_adc_AN3();
  1595  002C  120A  158A  20DC   	fcall	_read_adc_AN3
      +       120A  118A         
  1596  0031  3000               	movlw	0
  1597                           
  1598                           ;BT01week11ttvxl.c: 54: lcd_gotoxy(0,0);
  1599  0032  01F5               	clrf	?_lcd_gotoxy
  1600  0033  120A  158A  2307   	fcall	_lcd_gotoxy
      +       120A  118A         
  1601                           
  1602                           ;BT01week11ttvxl.c: 55: printf("Dien ap 1: %3.1f",res1);
  1603  0038  085E               	movf	_res1,w
  1604  0039  00D4               	movwf	?_printf
  1605  003A  085F               	movf	_res1+1,w
  1606  003B  00D5               	movwf	?_printf+1
  1607  003C  0860               	movf	_res1+2,w
  1608  003D  00D6               	movwf	?_printf+2
  1609  003E  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1610  003F  120A  118A  205E   	fcall	_printf
      +       120A  118A         
  1611                           
  1612                           ;BT01week11ttvxl.c: 56: read_adc_AN12();
  1613  0044  120A  158A  20A4   	fcall	_read_adc_AN12
      +       120A  118A         
  1614  0049  3000               	movlw	0
  1615                           
  1616                           ;BT01week11ttvxl.c: 57: lcd_gotoxy(0,1);
  1617  004A  01F5               	clrf	?_lcd_gotoxy
  1618  004B  0AF5               	incf	?_lcd_gotoxy,f
  1619  004C  120A  158A  2307   	fcall	_lcd_gotoxy
      +       120A  118A         
  1620                           
  1621                           ;BT01week11ttvxl.c: 58: printf("Dien ap 2: %3.1f",res2);
  1622  0051  0861               	movf	_res2,w
  1623  0052  00D4               	movwf	?_printf
  1624  0053  0862               	movf	_res2+1,w
  1625  0054  00D5               	movwf	?_printf+1
  1626  0055  0863               	movf	_res2+2,w
  1627  0056  00D6               	movwf	?_printf+2
  1628  0057  3088               	movlw	(STR_2-__stringbase)& (0+255)
  1629  0058  120A  118A  205E   	fcall	_printf
      +       120A  118A         
  1630  005D  282C               	goto	l7114
  1631  005E                     __end_of_main:	
  1632                           
  1633                           	psect	text547
  1634  005E                     __ptext547:	
  1635 ;; =============== function _main ends ============
  1636                           
  1637                           
  1638 ;; *************** function _printf *****************
  1639 ;; Defined at:
  1640 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  f               1    wreg     PTR const unsigned char 
  1643 ;;		 -> STR_2(17), STR_1(17), 
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  1646 ;;		 -> STR_2(17), STR_1(17), 
  1647 ;;  _val            4    8[BANK1 ] struct .
  1648 ;;  fval            3   19[BANK1 ] struct .
  1649 ;;  integ           3    5[BANK1 ] struct .
  1650 ;;  ival            3    0        struct .
  1651 ;;  prec            2   22[BANK1 ] int 
  1652 ;;  exp             2   17[BANK1 ] int 
  1653 ;;  width           2   15[BANK1 ] int 
  1654 ;;  flag            2   12[BANK1 ] unsigned short 
  1655 ;;  c               1   24[BANK1 ] char 
  1656 ;;  ap              1    4[BANK1 ] PTR void [1]
  1657 ;;		 -> ?_printf(2), 
  1658 ;;  d               1    0        unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  2   52[BANK0 ] int 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 60/0
  1665 ;;		On exit  : 60/20
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       3       0       0       0
  1669 ;;      Locals:         0       0      25       0       0
  1670 ;;      Temps:          0       5       0       0       0
  1671 ;;      Totals:         0       8      25       0       0
  1672 ;;Total ram usage:       33 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    4
  1675 ;; This function calls:
  1676 ;;		_putch
  1677 ;;		_isdigit
  1678 ;;		___wmul
  1679 ;;		___ftge
  1680 ;;		___ftneg
  1681 ;;		___awdiv
  1682 ;;		_scale
  1683 ;;		___ftmul
  1684 ;;		_fround
  1685 ;;		___ftadd
  1686 ;;		___fttol
  1687 ;;		__div_to_l_
  1688 ;;		__tdiv_to_l_
  1689 ;;		___lltoft
  1690 ;;		___ftsub
  1691 ;;		___lldiv
  1692 ;;		___llmod
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697  005E                     _printf:	
  1698                           
  1699                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1700                           ;printf@f stored from wreg
  1701  005E  1683               	bsf	3,5	;RP0=1, select bank1
  1702  005F  00AE               	movwf	printf@f^(0+128)
  1703  0060  3054               	movlw	?_printf& (0+255)
  1704  0061  00A4               	movwf	printf@ap^(0+128)
  1705  0062                     l7082:	
  1706  0062  27FD               	call	PL34	;select bank 1
  1707  0063  082E               	movf	printf@f^(0+128),w
  1708  0064  0AAE               	incf	printf@f^(0+128),f
  1709  0065  0084               	movwf	4
  1710  0066  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1711  006B  00B8               	movwf	printf@c^(0+128)
  1712  006C  08B8               	movf	printf@c^(0+128),f
  1713  006D  1903               	btfsc	3,2
  1714  006E  0008               	return
  1715  006F  3A25               	xorlw	37
  1716  0070  1903               	skipnz
  1717  0071  2874               	goto	l6862
  1718  0072  0838               	movf	printf@c^(0+128),w
  1719  0073  2CBC               	goto	L1
  1720  0074                     l6862:	
  1721  0074  01AF               	clrf	printf@width^(0+128)
  1722  0075  01B0               	clrf	(printf@width+1)^(0+128)
  1723  0076  01AC               	clrf	printf@flag^(0+128)
  1724  0077  01AD               	clrf	(printf@flag+1)^(0+128)
  1725  0078  082E               	movf	printf@f^(0+128),w
  1726  0079  0084               	movwf	4
  1727  007A  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1728  007F  24F1  120A  118A   	fcall	_isdigit
  1729  0082  1C03               	btfss	3,0
  1730  0083  28A8               	goto	l6874
  1731  0084  01AF               	clrf	printf@width^(0+128)
  1732  0085  01B0               	clrf	(printf@width+1)^(0+128)
  1733  0086                     l6868:	
  1734  0086  0830               	movf	(printf@width+1)^(0+128),w
  1735  0087  00F1               	movwf	?___wmul+1
  1736  0088  082F               	movf	printf@width^(0+128),w
  1737  0089  00F0               	movwf	?___wmul
  1738  008A  300A               	movlw	10
  1739  008B  00F2               	movwf	?___wmul+2
  1740  008C  01F3               	clrf	?___wmul+3
  1741  008D  24FF               	fcall	___wmul
  1742  008E  082E               	movf	printf@f^(0+128),w
  1743  008F  0084               	movwf	4
  1744  0090  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1745  0095  279E  120A  118A   	fcall	PL11	;call to abstracted procedure
  1746  0098  00AF               	movwf	printf@width^(0+128)
  1747  0099  27EF               	fcall	PL30	;call to abstracted procedure
  1748  009A  00B0               	movwf	(printf@width+1)^(0+128)
  1749  009B  0AAE               	incf	printf@f^(0+128),f
  1750  009C  082E               	movf	printf@f^(0+128),w
  1751  009D  0084               	movwf	4
  1752  009E  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1753  00A3  24F1  120A  118A   	fcall	_isdigit
  1754  00A6  1803               	btfsc	3,0
  1755  00A7  2886               	goto	l6868
  1756  00A8                     l6874:	
  1757  00A8  082E               	movf	printf@f^(0+128),w
  1758  00A9  0084               	movwf	4
  1759  00AA  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1760  00AF  3A2E               	xorlw	46
  1761  00B0  1D03               	skipz
  1762  00B1  28DB               	goto	l6888
  1763  00B2  172D               	bsf	(printf@flag^(0+128)+1),6
  1764  00B3  0AAE               	incf	printf@f^(0+128),f
  1765  00B4  01B6               	clrf	printf@prec^(0+128)
  1766  00B5  01B7               	clrf	(printf@prec+1)^(0+128)
  1767  00B6                     l6886:	
  1768  00B6  082E               	movf	printf@f^(0+128),w
  1769  00B7  0084               	movwf	4
  1770  00B8  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1771  00BD  24F1  120A  118A   	fcall	_isdigit
  1772  00C0  1C03               	btfss	3,0
  1773  00C1  28E1               	goto	l6894
  1774  00C2  0837               	movf	(printf@prec+1)^(0+128),w
  1775  00C3  00F1               	movwf	?___wmul+1
  1776  00C4  0836               	movf	printf@prec^(0+128),w
  1777  00C5  00F0               	movwf	?___wmul
  1778  00C6  300A               	movlw	10
  1779  00C7  00F2               	movwf	?___wmul+2
  1780  00C8  01F3               	clrf	?___wmul+3
  1781  00C9  24FF               	fcall	___wmul
  1782  00CA  082E               	movf	printf@f^(0+128),w
  1783  00CB  0084               	movwf	4
  1784  00CC  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1785  00D1  279E  120A  118A   	fcall	PL11	;call to abstracted procedure
  1786  00D4  00B6               	movwf	printf@prec^(0+128)
  1787  00D5  27EF  120A  118A   	fcall	PL30	;call to abstracted procedure
  1788  00D8  00B7               	movwf	(printf@prec+1)^(0+128)
  1789  00D9  0AAE               	incf	printf@f^(0+128),f
  1790  00DA  28B6               	goto	l6886
  1791  00DB                     l6888:	
  1792  00DB  01B6               	clrf	printf@prec^(0+128)
  1793  00DC  01B7               	clrf	(printf@prec+1)^(0+128)
  1794  00DD  162D               	bsf	(printf@flag^(0+128)+1),4
  1795  00DE  28E1               	goto	l6894
  1796  00DF                     l2212:	
  1797  00DF  152D               	bsf	(printf@flag^(0+128)+1),2
  1798  00E0  28F1               	goto	l6896
  1799  00E1                     l6894:	
  1800  00E1  082E               	movf	printf@f^(0+128),w
  1801  00E2  0AAE               	incf	printf@f^(0+128),f
  1802  00E3  0084               	movwf	4
  1803  00E4  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1804  00E9  00B8               	movwf	printf@c^(0+128)
  1805                           
  1806                           ; Switch size 1, requested type "space"
  1807                           ; Number of cases is 2, Range of values is 0 to 102
  1808                           ; switch strategies available:
  1809                           ; Name         Instructions Cycles
  1810                           ; simple_byte            7     4 (average)
  1811                           ; jumptable            260     6 (fixed)
  1812                           ; rangetable           107     6 (fixed)
  1813                           ; spacedrange          212     9 (fixed)
  1814                           ; locatedrange         103     3 (fixed)
  1815                           ;	Chosen strategy is simple_byte
  1816  00EA  3A00               	xorlw	0	; case 0
  1817  00EB  1903               	skipnz
  1818  00EC  2CC0               	goto	l2273
  1819  00ED  3A66               	xorlw	102	; case 102
  1820  00EE  1903               	skipnz
  1821  00EF  28DF               	goto	l2212
  1822  00F0  2862               	goto	l7082
  1823  00F1                     l6896:	
  1824  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1825  00F2  3007               	movlw	7
  1826  00F3  01D7               	clrf	??_printf
  1827  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1828  00F5  052D               	andwf	(printf@flag+1)^(0+128),w
  1829  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1830  00F7  00D8               	movwf	??_printf+1
  1831  00F8  0457               	iorwf	??_printf,w
  1832  00F9  1903               	skipnz
  1833  00FA  2C24               	goto	l7038
  1834  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  1835  00FC  1E2D               	btfss	(printf@flag+1)^(0+128),4
  1836  00FD  2901               	goto	l6902
  1837  00FE  3006               	movlw	6
  1838  00FF  00B6               	movwf	printf@prec^(0+128)
  1839  0100  01B7               	clrf	(printf@prec+1)^(0+128)
  1840  0101                     l6902:	
  1841  0101  0824               	movf	printf@ap^(0+128),w
  1842  0102  0084               	movwf	4
  1843  0103  1383               	bcf	3,7	;select IRP bank0
  1844  0104  0800               	movf	0,w
  1845  0105  00B3               	movwf	printf@fval^(0+128)
  1846  0106  0A84               	incf	4,f
  1847  0107  0800               	movf	0,w
  1848  0108  00B4               	movwf	(printf@fval+1)^(0+128)
  1849  0109  0A84               	incf	4,f
  1850  010A  0800               	movf	0,w
  1851  010B  00B5               	movwf	(printf@fval+2)^(0+128)
  1852  010C  3003               	movlw	3
  1853  010D  07A4               	addwf	printf@ap^(0+128),f
  1854  010E  0833               	movf	printf@fval^(0+128),w
  1855  010F  00F0               	movwf	?___ftge
  1856  0110  0834               	movf	(printf@fval+1)^(0+128),w
  1857  0111  00F1               	movwf	?___ftge+1
  1858  0112  0835               	movf	(printf@fval+2)^(0+128),w
  1859  0113  00F2               	movwf	?___ftge+2
  1860  0114  01F3               	clrf	?___ftge+3
  1861  0115  01F4               	clrf	?___ftge+4
  1862  0116  01F5               	clrf	?___ftge+5
  1863  0117  24C5  120A  118A   	fcall	___ftge
  1864  011A  1803               	btfsc	3,0
  1865  011B  292D               	goto	l6912
  1866  011C  0833               	movf	printf@fval^(0+128),w
  1867  011D  00F0               	movwf	?___ftneg
  1868  011E  0834               	movf	(printf@fval+1)^(0+128),w
  1869  011F  00F1               	movwf	?___ftneg+1
  1870  0120  0835               	movf	(printf@fval+2)^(0+128),w
  1871  0121  00F2               	movwf	?___ftneg+2
  1872  0122  2671  120A  118A   	fcall	___ftneg
  1873  0125  0870               	movf	?___ftneg,w
  1874  0126  00B3               	movwf	printf@fval^(0+128)
  1875  0127  0871               	movf	?___ftneg+1,w
  1876  0128  00B4               	movwf	(printf@fval+1)^(0+128)
  1877  0129  0872               	movf	?___ftneg+2,w
  1878  012A  00B5               	movwf	(printf@fval+2)^(0+128)
  1879  012B  3003               	movlw	3
  1880  012C  04AC               	iorwf	printf@flag^(0+128),f
  1881  012D                     l6912:	
  1882  012D  01B1               	clrf	printf@exp^(0+128)
  1883  012E  01B2               	clrf	(printf@exp+1)^(0+128)
  1884  012F  0835               	movf	(printf@fval+2)^(0+128),w
  1885  0130  0434               	iorwf	(printf@fval+1)^(0+128),w
  1886  0131  0433               	iorwf	printf@fval^(0+128),w
  1887  0132  1903               	skipnz
  1888  0133  29C6               	goto	l6944
  1889  0134  30B3               	movlw	low printf@fval
  1890  0135  0084               	movwf	4
  1891  0136  0800               	movf	0,w
  1892  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0138  00D7               	movwf	??_printf
  1894  0139  0A84               	incf	4,f
  1895  013A  0800               	movf	0,w
  1896  013B  00D8               	movwf	??_printf+1
  1897  013C  0A84               	incf	4,f
  1898  013D  0800               	movf	0,w
  1899  013E  00D9               	movwf	??_printf+2
  1900  013F  0A84               	incf	4,f
  1901  0140  0800               	movf	0,w
  1902  0141  00DA               	movwf	??_printf+3
  1903  0142  300F               	movlw	15
  1904  0143                     u3445:	
  1905  0143  1003               	clrc
  1906  0144  0CDA               	rrf	??_printf+3,f
  1907  0145  0CD9               	rrf	??_printf+2,f
  1908  0146  0CD8               	rrf	??_printf+1,f
  1909  0147  0CD7               	rrf	??_printf,f
  1910  0148  3EFF               	addlw	-1
  1911  0149  1D03               	skipz
  1912  014A  2943               	goto	u3445
  1913  014B  0858               	movf	??_printf+1,w
  1914  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1915  014D  00B2               	movwf	(printf@exp+1)^(0+128)
  1916  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1917  014F  0857               	movf	??_printf,w
  1918  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1919  0151  00B1               	movwf	printf@exp^(0+128)
  1920  0152  3082               	movlw	-126
  1921  0153  01B2               	clrf	(printf@exp+1)^(0+128)
  1922  0154  07B1               	addwf	printf@exp^(0+128),f
  1923  0155  1C03               	skipc
  1924  0156  03B2               	decf	(printf@exp+1)^(0+128),f
  1925  0157  30FF               	movlw	-1
  1926  0158  07B1               	addwf	printf@exp^(0+128),f
  1927  0159  1C03               	skipc
  1928  015A  03B2               	decf	(printf@exp+1)^(0+128),f
  1929  015B  3003               	movlw	3
  1930  015C  00F0               	movwf	?___wmul
  1931  015D  01F1               	clrf	?___wmul+1
  1932  015E  0832               	movf	(printf@exp+1)^(0+128),w
  1933  015F  00F3               	movwf	?___wmul+3
  1934  0160  0831               	movf	printf@exp^(0+128),w
  1935  0161  00F2               	movwf	?___wmul+2
  1936  0162  24FF               	fcall	___wmul
  1937  0163  0871               	movf	?___wmul+1,w
  1938  0164  00B2               	movwf	(printf@exp+1)^(0+128)
  1939  0165  0870               	movf	?___wmul,w
  1940  0166  00B1               	movwf	printf@exp^(0+128)
  1941  0167  300A               	movlw	10
  1942  0168  00F6               	movwf	?___awdiv
  1943  0169  01F7               	clrf	?___awdiv+1
  1944  016A  0832               	movf	(printf@exp+1)^(0+128),w
  1945  016B  00F9               	movwf	?___awdiv+3
  1946  016C  0831               	movf	printf@exp^(0+128),w
  1947  016D  00F8               	movwf	?___awdiv+2
  1948  016E  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  1949  0173  0877               	movf	?___awdiv+1,w
  1950  0174  00B2               	movwf	(printf@exp+1)^(0+128)
  1951  0175  0876               	movf	?___awdiv,w
  1952  0176  00B1               	movwf	printf@exp^(0+128)
  1953  0177  1FB2               	btfss	(printf@exp+1)^(0+128),7
  1954  0178  297D               	goto	l6932
  1955  0179  30FF               	movlw	-1
  1956  017A  07B1               	addwf	printf@exp^(0+128),f
  1957  017B  1C03               	skipc
  1958  017C  03B2               	decf	(printf@exp+1)^(0+128),f
  1959  017D                     l6932:	
  1960  017D  0331               	decf	printf@exp^(0+128),w
  1961  017E  3AFF               	xorlw	255
  1962  017F  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  1963  0184  2791  120A  118A   	fcall	PL6	;call to abstracted procedure
  1964  0187  27C0               	fcall	PL16	;call to abstracted procedure
  1965  0188  1683               	bsf	3,5	;RP0=1, select bank1
  1966  0189  0825               	movf	printf@integ^(0+128),w
  1967  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1968  018B  00B2               	movwf	?___ftmul+3
  1969  018C  1683               	bsf	3,5	;RP0=1, select bank1
  1970  018D  0826               	movf	(printf@integ+1)^(0+128),w
  1971  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1972  018F  00B3               	movwf	?___ftmul+4
  1973  0190  1683               	bsf	3,5	;RP0=1, select bank1
  1974  0191  0827               	movf	(printf@integ+2)^(0+128),w
  1975  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0193  00B4               	movwf	?___ftmul+5
  1977  0194  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  1978  0199  082F               	movf	?___ftmul,w
  1979  019A  1683               	bsf	3,5	;RP0=1, select bank1
  1980  019B  00A5               	movwf	printf@integ^(0+128)
  1981  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1982  019D  0830               	movf	?___ftmul+1,w
  1983  019E  1683               	bsf	3,5	;RP0=1, select bank1
  1984  019F  00A6               	movwf	(printf@integ+1)^(0+128)
  1985  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1986  01A1  0831               	movf	?___ftmul+2,w
  1987  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  1988  01A3  00A7               	movwf	(printf@integ+2)^(0+128)
  1989  01A4  27E8  120A  118A   	fcall	PL22	;call to abstracted procedure
  1990  01A7  3080               	movlw	128
  1991  01A8  01F3               	clrf	?___ftge+3
  1992  01A9  00F4               	movwf	?___ftge+4
  1993  01AA  303F               	movlw	63
  1994  01AB  00F5               	movwf	?___ftge+5
  1995  01AC  24C5  120A  118A   	fcall	___ftge
  1996  01AF  1803               	btfsc	3,0
  1997  01B0  29B6               	goto	l6940
  1998  01B1  30FF               	movlw	-1
  1999  01B2  07B1               	addwf	printf@exp^(0+128),f
  2000  01B3  1C03               	skipc
  2001  01B4  03B2               	decf	(printf@exp+1)^(0+128),f
  2002  01B5  29C6               	goto	l6944
  2003  01B6                     l6940:	
  2004  01B6  27E8  120A  118A   	fcall	PL22	;call to abstracted procedure
  2005  01B9  3020               	movlw	32
  2006  01BA  01F3               	clrf	?___ftge+3
  2007  01BB  00F4               	movwf	?___ftge+4
  2008  01BC  3041               	movlw	65
  2009  01BD  00F5               	movwf	?___ftge+5
  2010  01BE  24C5  120A  118A   	fcall	___ftge
  2011  01C1  1C03               	btfss	3,0
  2012  01C2  29C6               	goto	l6944
  2013  01C3  0AB1               	incf	printf@exp^(0+128),f
  2014  01C4  1903               	skipnz
  2015  01C5  0AB2               	incf	(printf@exp+1)^(0+128),f
  2016  01C6                     l6944:	
  2017  01C6  0837               	movf	(printf@prec+1)^(0+128),w
  2018  01C7  3A80               	xorlw	128
  2019  01C8  00FF               	movwf	127
  2020  01C9  3080               	movlw	128
  2021  01CA  027F               	subwf	127,w
  2022  01CB  1D03               	skipz
  2023  01CC  29CF               	goto	u3485
  2024  01CD  300D               	movlw	13
  2025  01CE  0236               	subwf	printf@prec^(0+128),w
  2026  01CF                     u3485:	
  2027  01CF  1803               	skipnc
  2028  01D0  29F8               	goto	l6948
  2029  01D1  27FD               	call	PL34	;select bank 1
  2030  01D2  0836               	movf	printf@prec^(0+128),w
  2031  01D3  120A  158A  21B5   	fcall	_fround
      +       120A  118A         
  2032  01D8  084A               	movf	?_fround,w
  2033  01D9  00BE               	movwf	?___ftadd
  2034  01DA  084B               	movf	?_fround+1,w
  2035  01DB  00BF               	movwf	?___ftadd+1
  2036  01DC  084C               	movf	?_fround+2,w
  2037  01DD  00C0               	movwf	?___ftadd+2
  2038  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  2039  01DF  0833               	movf	printf@fval^(0+128),w
  2040  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  2041  01E1  00C1               	movwf	?___ftadd+3
  2042  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  2043  01E3  0834               	movf	(printf@fval+1)^(0+128),w
  2044  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2045  01E5  00C2               	movwf	?___ftadd+4
  2046  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2047  01E7  0835               	movf	(printf@fval+2)^(0+128),w
  2048  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2049  01E9  00C3               	movwf	?___ftadd+5
  2050  01EA  2679  120A  118A   	fcall	___ftadd
  2051  01ED  083E               	movf	?___ftadd,w
  2052  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  2053  01EF  00B3               	movwf	printf@fval^(0+128)
  2054  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2055  01F1  083F               	movf	?___ftadd+1,w
  2056  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  2057  01F3  00B4               	movwf	(printf@fval+1)^(0+128)
  2058  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2059  01F5  0840               	movf	?___ftadd+2,w
  2060  01F6  1683               	bsf	3,5	;RP0=1, select bank1
  2061  01F7  00B5               	movwf	(printf@fval+2)^(0+128)
  2062  01F8                     l6948:	
  2063  01F8  27FD               	call	PL34	;select bank 1
  2064  01F9  0832               	movf	(printf@exp+1)^(0+128),w
  2065  01FA  3A80               	xorlw	128
  2066  01FB  00FF               	movwf	127
  2067  01FC  3080               	movlw	128
  2068  01FD  027F               	subwf	127,w
  2069  01FE  1D03               	skipz
  2070  01FF  2A02               	goto	u3495
  2071  0200  300A               	movlw	10
  2072  0201  0231               	subwf	printf@exp^(0+128),w
  2073  0202                     u3495:	
  2074  0202  1803               	skipnc
  2075  0203  2A23               	goto	l6956
  2076  0204  27FD               	call	PL34	;select bank 1
  2077  0205  0835               	movf	(printf@fval+2)^(0+128),w
  2078  0206  0434               	iorwf	(printf@fval+1)^(0+128),w
  2079  0207  0433               	iorwf	printf@fval^(0+128),w
  2080  0208  1903               	skipnz
  2081  0209  2A64               	goto	l6972
  2082  020A  0833               	movf	printf@fval^(0+128),w
  2083  020B  27B5  120A  118A   	fcall	PL14	;call to abstracted procedure
  2084  020E  2518  120A  118A   	fcall	___fttol
  2085  0211  0823               	movf	?___fttol+3,w
  2086  0212  0422               	iorwf	?___fttol+2,w
  2087  0213  0421               	iorwf	?___fttol+1,w
  2088  0214  0420               	iorwf	?___fttol,w
  2089  0215  1D03               	skipz
  2090  0216  2A64               	goto	l6972
  2091  0217  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0218  0832               	movf	(printf@exp+1)^(0+128),w
  2093  0219  3A80               	xorlw	128
  2094  021A  00FF               	movwf	127
  2095  021B  3080               	movlw	128
  2096  021C  027F               	subwf	127,w
  2097  021D  1D03               	skipz
  2098  021E  2A21               	goto	u3525
  2099  021F  3002               	movlw	2
  2100  0220  0231               	subwf	printf@exp^(0+128),w
  2101  0221                     u3525:	
  2102  0221  1C03               	skipc
  2103  0222  2A64               	goto	l6972
  2104  0223                     l6956:	
  2105  0223  27FD               	call	PL34	;select bank 1
  2106  0224  27E8  120A  118A   	fcall	PL22	;call to abstracted procedure
  2107  0227  3070               	movlw	112
  2108  0228  00F3               	movwf	?___ftge+3
  2109  0229  3089               	movlw	137
  2110  022A  00F4               	movwf	?___ftge+4
  2111  022B  3040               	movlw	64
  2112  022C  00F5               	movwf	?___ftge+5
  2113  022D  24C5  120A  118A   	fcall	___ftge
  2114  0230  1803               	btfsc	3,0
  2115  0231  2A34               	goto	l6960
  2116  0232  30F7               	movlw	-9
  2117  0233  2A35               	goto	L2
  2118  0234                     l6960:	
  2119  0234  30F8               	movlw	-8
  2120  0235                     L2:	
  2121  0235  07B1               	addwf	printf@exp^(0+128),f
  2122  0236  1C03               	skipc
  2123  0237  03B2               	decf	(printf@exp+1)^(0+128),f
  2124  0238  0831               	movf	printf@exp^(0+128),w
  2125  0239  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2126  023E  2791  120A  118A   	fcall	PL6	;call to abstracted procedure
  2127  0241  00F0               	movwf	?__tdiv_to_l_
  2128  0242  0834               	movf	(printf@fval+1)^(0+128),w
  2129  0243  00F1               	movwf	?__tdiv_to_l_+1
  2130  0244  0835               	movf	(printf@fval+2)^(0+128),w
  2131  0245  00F2               	movwf	?__tdiv_to_l_+2
  2132  0246  0825               	movf	printf@integ^(0+128),w
  2133  0247  00F3               	movwf	?__tdiv_to_l_+3
  2134  0248  0826               	movf	(printf@integ+1)^(0+128),w
  2135  0249  00F4               	movwf	?__tdiv_to_l_+4
  2136  024A  0827               	movf	(printf@integ+2)^(0+128),w
  2137  024B  00F5               	movwf	?__tdiv_to_l_+5
  2138  024C  25F9  120A  118A   	fcall	__tdiv_to_l_
  2139  024F  0873               	movf	?__tdiv_to_l_+3,w
  2140  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2141  0251  00A3               	movwf	(_printf$3162+3)^(0+128)
  2142  0252  0872               	movf	?__tdiv_to_l_+2,w
  2143  0253  00A2               	movwf	(_printf$3162+2)^(0+128)
  2144  0254  0871               	movf	?__tdiv_to_l_+1,w
  2145  0255  00A1               	movwf	(_printf$3162+1)^(0+128)
  2146  0256  0870               	movf	?__tdiv_to_l_,w
  2147  0257  00A0               	movwf	_printf$3162^(0+128)
  2148  0258  0823               	movf	(_printf$3162+3)^(0+128),w
  2149  0259  00AB               	movwf	(printf@_val+3)^(0+128)
  2150  025A  0822               	movf	(_printf$3162+2)^(0+128),w
  2151  025B  00AA               	movwf	(printf@_val+2)^(0+128)
  2152  025C  0821               	movf	(_printf$3162+1)^(0+128),w
  2153  025D  00A9               	movwf	(printf@_val+1)^(0+128)
  2154  025E  0820               	movf	_printf$3162^(0+128),w
  2155  025F  00A8               	movwf	printf@_val^(0+128)
  2156  0260  01B3               	clrf	printf@fval^(0+128)
  2157  0261  01B4               	clrf	(printf@fval+1)^(0+128)
  2158  0262  01B5               	clrf	(printf@fval+2)^(0+128)
  2159  0263  2A9F               	goto	l6976
  2160  0264                     l6972:	
  2161  0264  27FD               	call	PL34	;select bank 1
  2162  0265  0833               	movf	printf@fval^(0+128),w
  2163  0266  27B5  120A  118A   	fcall	PL14	;call to abstracted procedure
  2164  0269  2518  120A  118A   	fcall	___fttol
  2165  026C  2783  120A  118A   	fcall	PL5	;call to abstracted procedure
  2166  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2167  0270  00A8               	movwf	printf@_val^(0+128)
  2168  0271  082B               	movf	(printf@_val+3)^(0+128),w
  2169  0272  00FB               	movwf	?___lltoft+3
  2170  0273  082A               	movf	(printf@_val+2)^(0+128),w
  2171  0274  00FA               	movwf	?___lltoft+2
  2172  0275  0829               	movf	(printf@_val+1)^(0+128),w
  2173  0276  00F9               	movwf	?___lltoft+1
  2174  0277  0828               	movf	printf@_val^(0+128),w
  2175  0278  00F8               	movwf	?___lltoft
  2176  0279  273B  120A  118A   	fcall	___lltoft
  2177  027C  0878               	movf	?___lltoft,w
  2178  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2179  027E  00CA               	movwf	?___ftsub
  2180  027F  0879               	movf	?___lltoft+1,w
  2181  0280  00CB               	movwf	?___ftsub+1
  2182  0281  087A               	movf	?___lltoft+2,w
  2183  0282  00CC               	movwf	?___ftsub+2
  2184  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0284  0833               	movf	printf@fval^(0+128),w
  2186  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0286  00CD               	movwf	?___ftsub+3
  2188  0287  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0288  0834               	movf	(printf@fval+1)^(0+128),w
  2190  0289  1283               	bcf	3,5	;RP0=0, select bank0
  2191  028A  00CE               	movwf	?___ftsub+4
  2192  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2193  028C  0835               	movf	(printf@fval+2)^(0+128),w
  2194  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2195  028E  00CF               	movwf	?___ftsub+5
  2196  028F  275B  120A  118A   	fcall	___ftsub
  2197  0292  084A               	movf	?___ftsub,w
  2198  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2199  0294  00B3               	movwf	printf@fval^(0+128)
  2200  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0296  084B               	movf	?___ftsub+1,w
  2202  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0298  00B4               	movwf	(printf@fval+1)^(0+128)
  2204  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2205  029A  084C               	movf	?___ftsub+2,w
  2206  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2207  029C  00B5               	movwf	(printf@fval+2)^(0+128)
  2208  029D  01B1               	clrf	printf@exp^(0+128)
  2209  029E  01B2               	clrf	(printf@exp+1)^(0+128)
  2210  029F                     l6976:	
  2211  029F  01B8               	clrf	printf@c^(0+128)
  2212  02A0  0AB8               	incf	printf@c^(0+128),f
  2213  02A1                     l6982:	
  2214  02A1  2771               	fcall	PL3	;call to abstracted procedure
  2215  02A2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2216  02A7  00D8               	movwf	??_printf+1
  2217  02A8  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2218  02AD  00D9               	movwf	??_printf+2
  2219  02AE  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2220  02B3  00DA               	movwf	??_printf+3
  2221  02B4  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2222  02B9  00DB               	movwf	??_printf+4
  2223  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  2224  02BB  022B               	subwf	(printf@_val+3)^(0+128),w
  2225  02BC  1D03               	skipz
  2226  02BD  2ACE               	goto	u3545
  2227  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2228  02BF  085A               	movf	??_printf+3,w
  2229  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  2230  02C1  022A               	subwf	(printf@_val+2)^(0+128),w
  2231  02C2  1D03               	skipz
  2232  02C3  2ACE               	goto	u3545
  2233  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2234  02C5  0859               	movf	??_printf+2,w
  2235  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  2236  02C7  0229               	subwf	(printf@_val+1)^(0+128),w
  2237  02C8  1D03               	skipz
  2238  02C9  2ACE               	goto	u3545
  2239  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2240  02CB  0858               	movf	??_printf+1,w
  2241  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2242  02CD  0228               	subwf	printf@_val^(0+128),w
  2243  02CE                     u3545:	
  2244  02CE  1C03               	btfss	3,0
  2245  02CF  2AD5               	goto	l6990
  2246  02D0  0AB8               	incf	printf@c^(0+128),f
  2247  02D1  0838               	movf	printf@c^(0+128),w
  2248  02D2  3A0A               	xorlw	10
  2249  02D3  1D03               	skipz
  2250  02D4  2AA1               	goto	l6982
  2251  02D5                     l6990:	
  2252  02D5  0836               	movf	printf@prec^(0+128),w
  2253  02D6  0738               	addwf	printf@c^(0+128),w
  2254  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2255  02D8  00D7               	movwf	??_printf
  2256  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2257  02DA  0837               	movf	(printf@prec+1)^(0+128),w
  2258  02DB  1803               	skipnc
  2259  02DC  0A37               	incf	(printf@prec+1)^(0+128),w
  2260  02DD  1BB8               	btfsc	printf@c^(0+128),7
  2261  02DE  3EFF               	addlw	255
  2262  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2263  02E0  00D8               	movwf	??_printf+1
  2264  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2265  02E2  0831               	movf	printf@exp^(0+128),w
  2266  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2267  02E4  0757               	addwf	??_printf,w
  2268  02E5  00D9               	movwf	??_printf+2
  2269  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2270  02E7  0832               	movf	(printf@exp+1)^(0+128),w
  2271  02E8  1803               	skipnc
  2272  02E9  0A32               	incf	(printf@exp+1)^(0+128),w
  2273  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2274  02EB  0758               	addwf	??_printf+1,w
  2275  02EC  00DA               	movwf	??_printf+3
  2276  02ED  0859               	movf	??_printf+2,w
  2277  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2278  02EF  02AF               	subwf	printf@width^(0+128),f
  2279  02F0  1283               	bcf	3,5	;RP0=0, select bank0
  2280  02F1  085A               	movf	??_printf+3,w
  2281  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2282  02F3  1C03               	skipc
  2283  02F4  03B0               	decf	(printf@width+1)^(0+128),f
  2284  02F5  02B0               	subwf	(printf@width+1)^(0+128),f
  2285  02F6  0837               	movf	(printf@prec+1)^(0+128),w
  2286  02F7  0436               	iorwf	printf@prec^(0+128),w
  2287  02F8  1903               	skipnz
  2288  02F9  2AFE               	goto	l6996
  2289  02FA  30FF               	movlw	-1
  2290  02FB  07AF               	addwf	printf@width^(0+128),f
  2291  02FC  1C03               	skipc
  2292  02FD  03B0               	decf	(printf@width+1)^(0+128),f
  2293  02FE                     l6996:	
  2294  02FE  082C               	movf	printf@flag^(0+128),w
  2295  02FF  3903               	andlw	3
  2296  0300  1D03               	btfss	3,2
  2297  0301  2B11               	goto	l6998
  2298  0302                     l7004:	
  2299  0302  0830               	movf	(printf@width+1)^(0+128),w
  2300  0303  3A80               	xorlw	128
  2301  0304  00FF               	movwf	127
  2302  0305  3080               	movlw	128
  2303  0306  027F               	subwf	127,w
  2304  0307  1D03               	skipz
  2305  0308  2B0B               	goto	u3585
  2306  0309  3001               	movlw	1
  2307  030A  022F               	subwf	printf@width^(0+128),w
  2308  030B                     u3585:	
  2309  030B  1C03               	btfss	3,0
  2310  030C  2B17               	goto	l7006
  2311  030D  3020               	movlw	32
  2312  030E  24C1  120A  118A   	fcall	_putch
  2313  0311                     l6998:	
  2314  0311  30FF               	movlw	-1
  2315  0312  27FD               	call	PL34	;select bank 1
  2316  0313  07AF               	addwf	printf@width^(0+128),f
  2317  0314  1C03               	skipc
  2318  0315  03B0               	decf	(printf@width+1)^(0+128),f
  2319  0316  2B02               	goto	l7004
  2320  0317                     l7006:	
  2321  0317  27FD               	call	PL34	;select bank 1
  2322  0318  082C               	movf	printf@flag^(0+128),w
  2323  0319  3903               	andlw	3
  2324  031A  1903               	btfsc	3,2
  2325  031B  2B4A               	goto	l7012
  2326  031C  302D               	movlw	45
  2327  031D  2B47               	goto	L3
  2328  031E                     l7010:	
  2329  031E  277B  120A  118A   	fcall	PL4	;call to abstracted procedure
  2330  0321  2771               	fcall	PL3	;call to abstracted procedure
  2331  0322  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2332  0327  00F0               	movwf	?___lldiv
  2333  0328  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2334  032D  00F1               	movwf	?___lldiv+1
  2335  032E  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2336  0333  00F2               	movwf	?___lldiv+2
  2337  0334  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2338  0339  27AA  120A  118A   	fcall	PL12	;call to abstracted procedure
  2339  033C  25B1  120A  118A   	fcall	___lldiv
  2340  033F  27D5  120A  118A   	fcall	PL19	;call to abstracted procedure
  2341  0342  2573  120A  118A   	fcall	___llmod
  2342  0345  0820               	movf	?___llmod,w
  2343  0346  3E30               	addlw	48
  2344  0347                     L3:	
  2345  0347  24C1  120A  118A   	fcall	_putch
  2346  034A                     l7012:	
  2347  034A  27FD               	call	PL34	;select bank 1
  2348  034B  03B8               	decf	printf@c^(0+128),f
  2349  034C  0F38               	incfsz	printf@c^(0+128),w
  2350  034D  2B1E               	goto	l7010
  2351  034E                     l7018:	
  2352  034E  0832               	movf	(printf@exp+1)^(0+128),w
  2353  034F  3A80               	xorlw	128
  2354  0350  00FF               	movwf	127
  2355  0351  3080               	movlw	128
  2356  0352  027F               	subwf	127,w
  2357  0353  1D03               	skipz
  2358  0354  2B57               	goto	u3615
  2359  0355  3001               	movlw	1
  2360  0356  0231               	subwf	printf@exp^(0+128),w
  2361  0357                     u3615:	
  2362  0357  1C03               	btfss	3,0
  2363  0358  2B63               	goto	l7020
  2364  0359  3030               	movlw	48
  2365  035A  24C1  120A  118A   	fcall	_putch
  2366  035D  30FF               	movlw	-1
  2367  035E  27FD               	call	PL34	;select bank 1
  2368  035F  07B1               	addwf	printf@exp^(0+128),f
  2369  0360  1C03               	skipc
  2370  0361  03B2               	decf	(printf@exp+1)^(0+128),f
  2371  0362  2B4E               	goto	l7018
  2372  0363                     l7020:	
  2373  0363  27FD               	call	PL34	;select bank 1
  2374  0364  0837               	movf	(printf@prec+1)^(0+128),w
  2375  0365  3A80               	xorlw	128
  2376  0366  00FF               	movwf	127
  2377  0367  3080               	movlw	128
  2378  0368  027F               	subwf	127,w
  2379  0369  1D03               	skipz
  2380  036A  2B6D               	goto	u3625
  2381  036B  3009               	movlw	9
  2382  036C  0236               	subwf	printf@prec^(0+128),w
  2383  036D                     u3625:	
  2384  036D  1C03               	skipc
  2385  036E  2B72               	goto	l7024
  2386  036F  3008               	movlw	8
  2387  0370  27FD               	call	PL34	;select bank 1
  2388  0371  2B74               	goto	L4
  2389  0372                     l7024:	
  2390  0372  27FD               	call	PL34	;select bank 1
  2391  0373  0836               	movf	printf@prec^(0+128),w
  2392  0374                     L4:	
  2393  0374  00B8               	movwf	printf@c^(0+128)
  2394  0375  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0376  00D7               	movwf	??_printf
  2396  0377  01D8               	clrf	??_printf+1
  2397  0378  1BD7               	btfsc	??_printf,7
  2398  0379  03D8               	decf	??_printf+1,f
  2399  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2400  037B  02B6               	subwf	printf@prec^(0+128),f
  2401  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2402  037D  0858               	movf	??_printf+1,w
  2403  037E  1683               	bsf	3,5	;RP0=1, select bank1
  2404  037F  1C03               	skipc
  2405  0380  03B7               	decf	(printf@prec+1)^(0+128),f
  2406  0381  02B7               	subwf	(printf@prec+1)^(0+128),f
  2407  0382  0838               	movf	printf@c^(0+128),w
  2408  0383  1903               	btfsc	3,2
  2409  0384  2B89               	goto	l2251
  2410  0385  302E               	movlw	46
  2411  0386  24C1  120A  118A   	fcall	_putch
  2412  0389                     l2251:	
  2413  0389  27FD               	call	PL34	;select bank 1
  2414  038A  0838               	movf	printf@c^(0+128),w
  2415  038B  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2416  0390  083E               	movf	?_scale,w
  2417  0391  00B2               	movwf	?___ftmul+3
  2418  0392  083F               	movf	?_scale+1,w
  2419  0393  00B3               	movwf	?___ftmul+4
  2420  0394  0840               	movf	?_scale+2,w
  2421  0395  00B4               	movwf	?___ftmul+5
  2422  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0397  0833               	movf	printf@fval^(0+128),w
  2424  0398  27C0               	fcall	PL16	;call to abstracted procedure
  2425  0399  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2426  039E  082F               	movf	?___ftmul,w
  2427  039F  00A0               	movwf	?___fttol
  2428  03A0  0830               	movf	?___ftmul+1,w
  2429  03A1  00A1               	movwf	?___fttol+1
  2430  03A2  0831               	movf	?___ftmul+2,w
  2431  03A3  00A2               	movwf	?___fttol+2
  2432  03A4  2518  120A  118A   	fcall	___fttol
  2433  03A7  2783  120A  118A   	fcall	PL5	;call to abstracted procedure
  2434  03AA  2C11               	goto	L5
  2435  03AB                     l7028:	
  2436  03AB  277B  120A  118A   	fcall	PL4	;call to abstracted procedure
  2437  03AE  2771               	fcall	PL3	;call to abstracted procedure
  2438  03AF  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2439  03B4  00F0               	movwf	?___lldiv
  2440  03B5  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2441  03BA  00F1               	movwf	?___lldiv+1
  2442  03BB  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2443  03C0  00F2               	movwf	?___lldiv+2
  2444  03C1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2445  03C6  27AA  120A  118A   	fcall	PL12	;call to abstracted procedure
  2446  03C9  25B1  120A  118A   	fcall	___lldiv
  2447  03CC  27D5  120A  118A   	fcall	PL19	;call to abstracted procedure
  2448  03CF  2573  120A  118A   	fcall	___llmod
  2449  03D2  0820               	movf	?___llmod,w
  2450  03D3  3E30               	addlw	48
  2451  03D4  24C1  120A  118A   	fcall	_putch
  2452  03D7  27FD               	call	PL34	;select bank 1
  2453  03D8  2771               	fcall	PL3	;call to abstracted procedure
  2454  03D9  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2455  03DE  00A0               	movwf	?___llmod
  2456  03DF  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2457  03E4  00A1               	movwf	?___llmod+1
  2458  03E5  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2459  03EA  00A2               	movwf	?___llmod+2
  2460  03EB  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2461  03F0  00A3               	movwf	?___llmod+3
  2462  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2463  03F2  082B               	movf	(printf@_val+3)^(0+128),w
  2464  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2465  03F4  00A7               	movwf	?___llmod+7
  2466  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2467  03F6  082A               	movf	(printf@_val+2)^(0+128),w
  2468  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2469  03F8  00A6               	movwf	?___llmod+6
  2470  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2471  03FA  0829               	movf	(printf@_val+1)^(0+128),w
  2472  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2473  03FC  00A5               	movwf	?___llmod+5
  2474  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2475  03FE  0828               	movf	printf@_val^(0+128),w
  2476  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0400  00A4               	movwf	?___llmod+4
  2478  0401  2573  120A  118A   	fcall	___llmod
  2479  0404  0823               	movf	?___llmod+3,w
  2480  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2481  0406  00AB               	movwf	(printf@_val+3)^(0+128)
  2482  0407  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0408  0822               	movf	?___llmod+2,w
  2484  0409  1683               	bsf	3,5	;RP0=1, select bank1
  2485  040A  00AA               	movwf	(printf@_val+2)^(0+128)
  2486  040B  1283               	bcf	3,5	;RP0=0, select bank0
  2487  040C  0821               	movf	?___llmod+1,w
  2488  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2489  040E  00A9               	movwf	(printf@_val+1)^(0+128)
  2490  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0410  0820               	movf	?___llmod,w
  2492  0411                     L5:	
  2493  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2494  0412  00A8               	movwf	printf@_val^(0+128)
  2495  0413  03B8               	decf	printf@c^(0+128),f
  2496  0414  0F38               	incfsz	printf@c^(0+128),w
  2497  0415  2BAB               	goto	l7028
  2498  0416                     l7036:	
  2499  0416  0837               	movf	(printf@prec+1)^(0+128),w
  2500  0417  0436               	iorwf	printf@prec^(0+128),w
  2501  0418  1903               	btfsc	3,2
  2502  0419  2862               	goto	l7082
  2503  041A  3030               	movlw	48
  2504  041B  24C1  120A  118A   	fcall	_putch
  2505  041E  30FF               	movlw	-1
  2506  041F  27FD               	call	PL34	;select bank 1
  2507  0420  07B6               	addwf	printf@prec^(0+128),f
  2508  0421  1C03               	skipc
  2509  0422  03B7               	decf	(printf@prec+1)^(0+128),f
  2510  0423  2C16               	goto	l7036
  2511  0424                     l7038:	
  2512  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2513  0425  0837               	movf	(printf@prec+1)^(0+128),w
  2514  0426  0436               	iorwf	printf@prec^(0+128),w
  2515  0427  1D03               	skipz
  2516  0428  2C31               	goto	l7044
  2517  0429  082B               	movf	(printf@_val+3)^(0+128),w
  2518  042A  042A               	iorwf	(printf@_val+2)^(0+128),w
  2519  042B  0429               	iorwf	(printf@_val+1)^(0+128),w
  2520  042C  0428               	iorwf	printf@_val^(0+128),w
  2521  042D  1903               	btfsc	3,2
  2522  042E  0AB6               	incf	printf@prec^(0+128),f
  2523  042F  1903               	skipnz
  2524  0430  0AB7               	incf	(printf@prec+1)^(0+128),f
  2525  0431                     l7044:	
  2526  0431  0838               	movf	printf@c^(0+128),w
  2527  0432  27CB  120A  118A   	fcall	PL18	;call to abstracted procedure
  2528  0435  0837               	movf	(printf@prec+1)^(0+128),w
  2529  0436  3A80               	xorlw	128
  2530  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0438  0259               	subwf	??_printf+2,w
  2532  0439  1D03               	skipz
  2533  043A  2C3F               	goto	u3685
  2534  043B  1683               	bsf	3,5	;RP0=1, select bank1
  2535  043C  0836               	movf	printf@prec^(0+128),w
  2536  043D  1283               	bcf	3,5	;RP0=0, select bank0
  2537  043E  0257               	subwf	??_printf,w
  2538  043F                     u3685:	
  2539  043F  1803               	skipnc
  2540  0440  2C45               	goto	l7048
  2541  0441  27FD               	call	PL34	;select bank 1
  2542  0442  0836               	movf	printf@prec^(0+128),w
  2543  0443  00B8               	movwf	printf@c^(0+128)
  2544  0444  2C5D               	goto	l7052
  2545  0445                     l7048:	
  2546  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2547  0446  27DF  120A  118A   	fcall	PL21	;call to abstracted procedure
  2548  0449  0837               	movf	(printf@prec+1)^(0+128),w
  2549  044A  3A80               	xorlw	128
  2550  044B  1283               	bcf	3,5	;RP0=0, select bank0
  2551  044C  00D9               	movwf	??_printf+2
  2552  044D  0858               	movf	??_printf+1,w
  2553  044E  3A80               	xorlw	128
  2554  044F  0259               	subwf	??_printf+2,w
  2555  0450  1D03               	skipz
  2556  0451  2C55               	goto	u3695
  2557  0452  0857               	movf	??_printf,w
  2558  0453  1683               	bsf	3,5	;RP0=1, select bank1
  2559  0454  0236               	subwf	printf@prec^(0+128),w
  2560  0455                     u3695:	
  2561  0455  1803               	skipnc
  2562  0456  2C5D               	goto	l7052
  2563  0457  27FD               	call	PL34	;select bank 1
  2564  0458  0838               	movf	printf@c^(0+128),w
  2565  0459  00B6               	movwf	printf@prec^(0+128)
  2566  045A  01B7               	clrf	(printf@prec+1)^(0+128)
  2567  045B  1BB6               	btfsc	printf@prec^(0+128),7
  2568  045C  03B7               	decf	(printf@prec+1)^(0+128),f
  2569  045D                     l7052:	
  2570  045D  27FD               	call	PL34	;select bank 1
  2571  045E  0830               	movf	(printf@width+1)^(0+128),w
  2572  045F  042F               	iorwf	printf@width^(0+128),w
  2573  0460  1903               	skipnz
  2574  0461  2C6A               	goto	l7058
  2575  0462  082C               	movf	printf@flag^(0+128),w
  2576  0463  3903               	andlw	3
  2577  0464  1903               	btfsc	3,2
  2578  0465  2C6A               	goto	l7058
  2579  0466  30FF               	movlw	-1
  2580  0467  07AF               	addwf	printf@width^(0+128),f
  2581  0468  1C03               	skipc
  2582  0469  03B0               	decf	(printf@width+1)^(0+128),f
  2583  046A                     l7058:	
  2584  046A  1F2D               	btfss	(printf@flag+1)^(0+128),6
  2585  046B  2C87               	goto	l7066
  2586  046C  0837               	movf	(printf@prec+1)^(0+128),w
  2587  046D  3A80               	xorlw	128
  2588  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2589  046F  00D7               	movwf	??_printf
  2590  0470  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0471  0830               	movf	(printf@width+1)^(0+128),w
  2592  0472  3A80               	xorlw	128
  2593  0473  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0474  0257               	subwf	??_printf,w
  2595  0475  1D03               	skipz
  2596  0476  2C7A               	goto	u3735
  2597  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2598  0478  082F               	movf	printf@width^(0+128),w
  2599  0479  0236               	subwf	printf@prec^(0+128),w
  2600  047A                     u3735:	
  2601  047A  1803               	skipnc
  2602  047B  2C84               	goto	l7064
  2603  047C  27FD               	call	PL34	;select bank 1
  2604  047D  0836               	movf	printf@prec^(0+128),w
  2605  047E  02AF               	subwf	printf@width^(0+128),f
  2606  047F  0837               	movf	(printf@prec+1)^(0+128),w
  2607  0480  1C03               	skipc
  2608  0481  03B0               	decf	(printf@width+1)^(0+128),f
  2609  0482  02B0               	subwf	(printf@width+1)^(0+128),f
  2610  0483  2C87               	goto	l7066
  2611  0484                     l7064:	
  2612  0484  27FD               	call	PL34	;select bank 1
  2613  0485  01AF               	clrf	printf@width^(0+128)
  2614  0486  01B0               	clrf	(printf@width+1)^(0+128)
  2615  0487                     l7066:	
  2616  0487  0838               	movf	printf@c^(0+128),w
  2617  0488  27CB  120A  118A   	fcall	PL18	;call to abstracted procedure
  2618  048B  0830               	movf	(printf@width+1)^(0+128),w
  2619  048C  3A80               	xorlw	128
  2620  048D  1283               	bcf	3,5	;RP0=0, select bank0
  2621  048E  0259               	subwf	??_printf+2,w
  2622  048F  1D03               	skipz
  2623  0490  2C95               	goto	u3745
  2624  0491  1683               	bsf	3,5	;RP0=1, select bank1
  2625  0492  082F               	movf	printf@width^(0+128),w
  2626  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0494  0257               	subwf	??_printf,w
  2628  0495                     u3745:	
  2629  0495  1803               	skipnc
  2630  0496  2CA3               	goto	l7070
  2631  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2632  0498  27DF  120A  118A   	fcall	PL21	;call to abstracted procedure
  2633  049B  02AF               	subwf	printf@width^(0+128),f
  2634  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2635  049D  0858               	movf	??_printf+1,w
  2636  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2637  049F  1C03               	skipc
  2638  04A0  03B0               	decf	(printf@width+1)^(0+128),f
  2639  04A1  02B0               	subwf	(printf@width+1)^(0+128),f
  2640  04A2  2CA6               	goto	l7072
  2641  04A3                     l7070:	
  2642  04A3  27FD               	call	PL34	;select bank 1
  2643  04A4  01AF               	clrf	printf@width^(0+128)
  2644  04A5  01B0               	clrf	(printf@width+1)^(0+128)
  2645  04A6                     l7072:	
  2646  04A6  0830               	movf	(printf@width+1)^(0+128),w
  2647  04A7  042F               	iorwf	printf@width^(0+128),w
  2648  04A8  1903               	skipnz
  2649  04A9  2CB7               	goto	l7078
  2650  04AA                     l7074:	
  2651  04AA  3020               	movlw	32
  2652  04AB  24C1  120A  118A   	fcall	_putch
  2653  04AE  30FF               	movlw	-1
  2654  04AF  27FD               	call	PL34	;select bank 1
  2655  04B0  07AF               	addwf	printf@width^(0+128),f
  2656  04B1  1C03               	skipc
  2657  04B2  03B0               	decf	(printf@width+1)^(0+128),f
  2658  04B3  0830               	movf	(printf@width+1)^(0+128),w
  2659  04B4  042F               	iorwf	printf@width^(0+128),w
  2660  04B5  1D03               	skipz
  2661  04B6  2CAA               	goto	l7074
  2662  04B7                     l7078:	
  2663  04B7  082C               	movf	printf@flag^(0+128),w
  2664  04B8  3903               	andlw	3
  2665  04B9  1903               	btfsc	3,2
  2666  04BA  2862               	goto	l7082
  2667  04BB  302D               	movlw	45
  2668  04BC                     L1:	
  2669  04BC  24C1  120A  118A   	fcall	_putch
  2670  04BF  2862               	goto	l7082
  2671  04C0                     l2273:	
  2672  04C0  0008               	return
  2673  04C1                     __end_of_printf:	
  2674  04C1                     __ptext548:	
  2675 ;; =============== function _printf ends ============
  2676                           
  2677                           
  2678 ;; *************** function _putch *****************
  2679 ;; Defined at:
  2680 ;;		line 62 in file "D:\TTVXL\Project TTVXL\BT01week11ttvxl\BT01week11ttvxl.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  c               1    wreg     unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  c               1    9[COMMON] unsigned char 
  2685 ;; Return value:  Size  Location     Type
  2686 ;;		None               void
  2687 ;; Registers used:
  2688 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/20
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2694 ;;      Params:         0       0       0       0       0
  2695 ;;      Locals:         1       0       0       0       0
  2696 ;;      Temps:          0       0       0       0       0
  2697 ;;      Totals:         1       0       0       0       0
  2698 ;;Total ram usage:        1 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    3
  2701 ;; This function calls:
  2702 ;;		_lcd_putc
  2703 ;; This function is called by:
  2704 ;;		_printf
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707  04C1                     _putch:	
  2708                           
  2709                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2710                           ;putch@c stored from wreg
  2711  04C1  00F9               	movwf	putch@c
  2712                           
  2713                           ;BT01week11ttvxl.c: 63: lcd_putc(c);
  2714  04C2  120A  158A  2B1F   	ljmp	_lcd_putc
  2715  04C5                     __end_of_putch:	
  2716  04C5                     __ptext566:	
  2717 ;; =============== function ___lldiv ends ============
  2718                           
  2719                           
  2720 ;; *************** function ___ftge *****************
  2721 ;; Defined at:
  2722 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  ff1             3    0[COMMON] float 
  2725 ;;  ff2             3    3[COMMON] float 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;		None               void
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 60/20
  2734 ;;		On exit  : 60/20
  2735 ;;		Unchanged: FFF9F/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2737 ;;      Params:         6       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0
  2740 ;;      Totals:         6       0       0       0       0
  2741 ;;Total ram usage:        6 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_printf
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749  04C5                     ___ftge:	
  2750                           
  2751                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2752  04C5  1FF2               	btfss	___ftge@ff1+2,7
  2753  04C6  2CD4               	goto	l6370
  2754  04C7  0870               	movf	___ftge@ff1,w
  2755  04C8  3C00               	sublw	0
  2756  04C9  00F0               	movwf	___ftge@ff1
  2757  04CA  0871               	movf	___ftge@ff1+1,w
  2758  04CB  1C03               	skipc
  2759  04CC  0F71               	incfsz	___ftge@ff1+1,w
  2760  04CD  3C00               	sublw	0
  2761  04CE  00F1               	movwf	___ftge@ff1+1
  2762  04CF  0872               	movf	___ftge@ff1+2,w
  2763  04D0  1C03               	skipc
  2764  04D1  0F72               	incfsz	___ftge@ff1+2,w
  2765  04D2  3C80               	sublw	128
  2766  04D3  00F2               	movwf	___ftge@ff1+2
  2767  04D4                     l6370:	
  2768  04D4  1FF5               	btfss	___ftge@ff2+2,7
  2769  04D5  2CE3               	goto	l6374
  2770  04D6  0873               	movf	___ftge@ff2,w
  2771  04D7  3C00               	sublw	0
  2772  04D8  00F3               	movwf	___ftge@ff2
  2773  04D9  0874               	movf	___ftge@ff2+1,w
  2774  04DA  1C03               	skipc
  2775  04DB  0F74               	incfsz	___ftge@ff2+1,w
  2776  04DC  3C00               	sublw	0
  2777  04DD  00F4               	movwf	___ftge@ff2+1
  2778  04DE  0875               	movf	___ftge@ff2+2,w
  2779  04DF  1C03               	skipc
  2780  04E0  0F75               	incfsz	___ftge@ff2+2,w
  2781  04E1  3C80               	sublw	128
  2782  04E2  00F5               	movwf	___ftge@ff2+2
  2783  04E3                     l6374:	
  2784  04E3  3080               	movlw	128
  2785  04E4  06F2               	xorwf	___ftge@ff1+2,f
  2786  04E5  06F5               	xorwf	___ftge@ff2+2,f
  2787  04E6  0875               	movf	___ftge@ff2+2,w
  2788  04E7  0272               	subwf	___ftge@ff1+2,w
  2789  04E8  1D03               	skipz
  2790  04E9  0008               	return
  2791  04EA  0874               	movf	___ftge@ff2+1,w
  2792  04EB  0271               	subwf	___ftge@ff1+1,w
  2793  04EC  1D03               	skipz
  2794  04ED  0008               	return
  2795  04EE  0873               	movf	___ftge@ff2,w
  2796  04EF  0270               	subwf	___ftge@ff1,w
  2797  04F0  0008               	return
  2798  04F1                     __end_of___ftge:	
  2799  04F1                     __ptext578:	
  2800 ;; =============== function __tdiv_to_l_ ends ============
  2801                           
  2802                           
  2803 ;; *************** function _isdigit *****************
  2804 ;; Defined at:
  2805 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;  c               1    wreg     unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  c               1    1[COMMON] unsigned char 
  2810 ;; Return value:  Size  Location     Type
  2811 ;;		None               void
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0
  2814 ;; Tracked objects:
  2815 ;;		On entry : 60/20
  2816 ;;		On exit  : 60/20
  2817 ;;		Unchanged: FFF9F/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2819 ;;      Params:         0       0       0       0       0
  2820 ;;      Locals:         2       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0
  2822 ;;      Totals:         2       0       0       0       0
  2823 ;;Total ram usage:        2 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_printf
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831  04F1                     _isdigit:	
  2832                           
  2833                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2834                           ;isdigit@c stored from wreg
  2835  04F1  00F1               	movwf	isdigit@c
  2836  04F2  303A               	movlw	58
  2837  04F3  01F0               	clrf	_isdigit$3670
  2838  04F4  0271               	subwf	isdigit@c,w
  2839  04F5  1803               	skipnc
  2840  04F6  2CFD               	goto	l6072
  2841  04F7  3030               	movlw	48
  2842  04F8  0271               	subwf	isdigit@c,w
  2843  04F9  1C03               	skipc
  2844  04FA  2CFD               	goto	l6072
  2845  04FB  01F0               	clrf	_isdigit$3670
  2846  04FC  0AF0               	incf	_isdigit$3670,f
  2847  04FD                     l6072:	
  2848  04FD  0C70               	rrf	_isdigit$3670,w
  2849  04FE  0008               	return
  2850  04FF                     __end_of_isdigit:	
  2851  04FF                     __ptext574:	
  2852 ;; =============== function ___lbdiv ends ============
  2853                           
  2854                           
  2855 ;; *************** function ___wmul *****************
  2856 ;; Defined at:
  2857 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  multiplier      2    0[COMMON] unsigned int 
  2860 ;;  multiplicand    2    2[COMMON] unsigned int 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  product         2    4[COMMON] unsigned int 
  2863 ;; Return value:  Size  Location     Type
  2864 ;;                  2    0[COMMON] unsigned int 
  2865 ;; Registers used:
  2866 ;;		wreg, status,2, status,0
  2867 ;; Tracked objects:
  2868 ;;		On entry : 60/20
  2869 ;;		On exit  : 60/20
  2870 ;;		Unchanged: FFF9F/0
  2871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2872 ;;      Params:         4       0       0       0       0
  2873 ;;      Locals:         2       0       0       0       0
  2874 ;;      Temps:          0       0       0       0       0
  2875 ;;      Totals:         6       0       0       0       0
  2876 ;;Total ram usage:        6 bytes
  2877 ;; Hardware stack levels used:    1
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_fround
  2882 ;;		_scale
  2883 ;;		_printf
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886  04FF                     ___wmul:	
  2887                           
  2888                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2889  04FF  01F4               	clrf	___wmul@product
  2890  0500  01F5               	clrf	___wmul@product+1
  2891  0501                     l6172:	
  2892  0501  1C70               	btfss	___wmul@multiplier,0
  2893  0502  2D09               	goto	l6176
  2894  0503  0872               	movf	___wmul@multiplicand,w
  2895  0504  07F4               	addwf	___wmul@product,f
  2896  0505  1803               	skipnc
  2897  0506  0AF5               	incf	___wmul@product+1,f
  2898  0507  0873               	movf	___wmul@multiplicand+1,w
  2899  0508  07F5               	addwf	___wmul@product+1,f
  2900  0509                     l6176:	
  2901  0509  1003               	clrc
  2902  050A  0DF2               	rlf	___wmul@multiplicand,f
  2903  050B  0DF3               	rlf	___wmul@multiplicand+1,f
  2904  050C  1003               	clrc
  2905  050D  0CF1               	rrf	___wmul@multiplier+1,f
  2906  050E  0CF0               	rrf	___wmul@multiplier,f
  2907  050F  0871               	movf	___wmul@multiplier+1,w
  2908  0510  0470               	iorwf	___wmul@multiplier,w
  2909  0511  1D03               	skipz
  2910  0512  2D01               	goto	l6172
  2911  0513  0875               	movf	___wmul@product+1,w
  2912  0514  00F1               	movwf	?___wmul+1
  2913  0515  0874               	movf	___wmul@product,w
  2914  0516  00F0               	movwf	?___wmul
  2915  0517  0008               	return
  2916  0518                     __end_of___wmul:	
  2917  0518                     __ptext570:	
  2918 ;; =============== function ___awdiv ends ============
  2919                           
  2920                           
  2921 ;; *************** function ___fttol *****************
  2922 ;; Defined at:
  2923 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  f1              3    0[BANK0 ] float 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  lval            4    8[BANK0 ] unsigned long 
  2928 ;;  exp1            1   12[BANK0 ] unsigned char 
  2929 ;;  sign1           1    7[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  4    0[BANK0 ] long 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0
  2934 ;; Tracked objects:
  2935 ;;		On entry : 60/0
  2936 ;;		On exit  : 60/0
  2937 ;;		Unchanged: FFF9F/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       4       0       0       0
  2940 ;;      Locals:         0       6       0       0       0
  2941 ;;      Temps:          0       3       0       0       0
  2942 ;;      Totals:         0      13       0       0       0
  2943 ;;Total ram usage:       13 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_printf
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951  0518                     ___fttol:	
  2952                           
  2953                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2954  0518  27F6  120A  118A   	fcall	PL31	;call to abstracted procedure
  2955  051B  1003               	clrc
  2956  051C  0D25               	rlf	??___fttol+1,w
  2957  051D  0D26               	rlf	??___fttol+2,w
  2958  051E  00AC               	movwf	___fttol@exp1
  2959  051F  08AC               	movf	___fttol@exp1,f
  2960  0520  1D03               	skipz
  2961  0521  2D27               	goto	l6260
  2962  0522                     l6258:	
  2963  0522  01A0               	clrf	?___fttol
  2964  0523  01A1               	clrf	?___fttol+1
  2965  0524  01A2               	clrf	?___fttol+2
  2966  0525  01A3               	clrf	?___fttol+3
  2967  0526  0008               	return
  2968  0527                     l6260:	
  2969  0527  27F6  120A  118A   	fcall	PL31	;call to abstracted procedure
  2970  052A  3017               	movlw	23
  2971  052B                     u2305:	
  2972  052B  1003               	clrc
  2973  052C  0CA6               	rrf	??___fttol+2,f
  2974  052D  0CA5               	rrf	??___fttol+1,f
  2975  052E  0CA4               	rrf	??___fttol,f
  2976  052F  3EFF               	addlw	-1
  2977  0530  1D03               	skipz
  2978  0531  2D2B               	goto	u2305
  2979  0532  0824               	movf	??___fttol,w
  2980  0533  00A7               	movwf	___fttol@sign1
  2981  0534  17A1               	bsf	___fttol@f1+1,7
  2982  0535  01A2               	clrf	___fttol@f1+2
  2983  0536  0820               	movf	___fttol@f1,w
  2984  0537  00A8               	movwf	___fttol@lval
  2985  0538  0821               	movf	___fttol@f1+1,w
  2986  0539  00A9               	movwf	___fttol@lval+1
  2987  053A  0822               	movf	___fttol@f1+2,w
  2988  053B  00AA               	movwf	___fttol@lval+2
  2989  053C  308E               	movlw	142
  2990  053D  01AB               	clrf	___fttol@lval+3
  2991  053E  02AC               	subwf	___fttol@exp1,f
  2992  053F  1FAC               	btfss	___fttol@exp1,7
  2993  0540  2D4E               	goto	l6280
  2994  0541  082C               	movf	___fttol@exp1,w
  2995  0542  3A80               	xorlw	128
  2996  0543  3E8F               	addlw	143
  2997  0544  1C03               	btfss	3,0
  2998  0545  2D22               	goto	l6258
  2999  0546                     l6276:	
  3000  0546  1003               	clrc
  3001  0547  0CAB               	rrf	___fttol@lval+3,f
  3002  0548  0CAA               	rrf	___fttol@lval+2,f
  3003  0549  0CA9               	rrf	___fttol@lval+1,f
  3004  054A  0CA8               	rrf	___fttol@lval,f
  3005  054B  0FAC               	incfsz	___fttol@exp1,f
  3006  054C  2D46               	goto	l6276
  3007  054D  2D5C               	goto	l6286
  3008  054E                     l6280:	
  3009  054E  3018               	movlw	24
  3010  054F  022C               	subwf	___fttol@exp1,w
  3011  0550  1803               	btfsc	3,0
  3012  0551  2D22               	goto	l6258
  3013  0552                     l3393:	
  3014  0552  08AC               	movf	___fttol@exp1,f
  3015  0553  1903               	btfsc	3,2
  3016  0554  2D5C               	goto	l6286
  3017  0555  1003               	clrc
  3018  0556  0DA8               	rlf	___fttol@lval,f
  3019  0557  0DA9               	rlf	___fttol@lval+1,f
  3020  0558  0DAA               	rlf	___fttol@lval+2,f
  3021  0559  0DAB               	rlf	___fttol@lval+3,f
  3022  055A  03AC               	decf	___fttol@exp1,f
  3023  055B  2D52               	goto	l3393
  3024  055C                     l6286:	
  3025  055C  0827               	movf	___fttol@sign1,w
  3026  055D  1903               	btfsc	3,2
  3027  055E  2D6A               	goto	l6290
  3028  055F  09A8               	comf	___fttol@lval,f
  3029  0560  09A9               	comf	___fttol@lval+1,f
  3030  0561  09AA               	comf	___fttol@lval+2,f
  3031  0562  09AB               	comf	___fttol@lval+3,f
  3032  0563  0AA8               	incf	___fttol@lval,f
  3033  0564  1903               	skipnz
  3034  0565  0AA9               	incf	___fttol@lval+1,f
  3035  0566  1903               	skipnz
  3036  0567  0AAA               	incf	___fttol@lval+2,f
  3037  0568  1903               	skipnz
  3038  0569  0AAB               	incf	___fttol@lval+3,f
  3039  056A                     l6290:	
  3040  056A  082B               	movf	___fttol@lval+3,w
  3041  056B  00A3               	movwf	?___fttol+3
  3042  056C  082A               	movf	___fttol@lval+2,w
  3043  056D  00A2               	movwf	?___fttol+2
  3044  056E  0829               	movf	___fttol@lval+1,w
  3045  056F  00A1               	movwf	?___fttol+1
  3046  0570  0828               	movf	___fttol@lval,w
  3047  0571  00A0               	movwf	?___fttol
  3048  0572  0008               	return
  3049  0573                     __end_of___fttol:	
  3050  0573                     __ptext568:	
  3051 ;; =============== function ___ftneg ends ============
  3052                           
  3053                           
  3054 ;; *************** function ___llmod *****************
  3055 ;; Defined at:
  3056 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  divisor         4    0[BANK0 ] unsigned long 
  3059 ;;  dividend        4    4[BANK0 ] unsigned long 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  counter         1   13[COMMON] unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  4    0[BANK0 ] unsigned long 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 60/0
  3068 ;;		On exit  : 60/0
  3069 ;;		Unchanged: FFF9F/0
  3070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3071 ;;      Params:         0       8       0       0       0
  3072 ;;      Locals:         1       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0
  3074 ;;      Totals:         1       8       0       0       0
  3075 ;;Total ram usage:        9 bytes
  3076 ;; Hardware stack levels used:    1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_printf
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083  0573                     ___llmod:	
  3084                           
  3085                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3086  0573  0823               	movf	___llmod@divisor+3,w
  3087  0574  0422               	iorwf	___llmod@divisor+2,w
  3088  0575  0421               	iorwf	___llmod@divisor+1,w
  3089  0576  0420               	iorwf	___llmod@divisor,w
  3090  0577  1903               	skipnz
  3091  0578  2DA8               	goto	l6354
  3092  0579  01FD               	clrf	___llmod@counter
  3093  057A                     L13:	
  3094  057A  0AFD               	incf	___llmod@counter,f
  3095  057B  1BA3               	btfsc	___llmod@divisor+3,7
  3096  057C  2D83               	goto	l6346
  3097  057D  1003               	clrc
  3098  057E  0DA0               	rlf	___llmod@divisor,f
  3099  057F  0DA1               	rlf	___llmod@divisor+1,f
  3100  0580  0DA2               	rlf	___llmod@divisor+2,f
  3101  0581  0DA3               	rlf	___llmod@divisor+3,f
  3102  0582  2D7A               	goto	L13
  3103  0583                     l6346:	
  3104  0583  0823               	movf	___llmod@divisor+3,w
  3105  0584  0227               	subwf	___llmod@dividend+3,w
  3106  0585  1D03               	skipz
  3107  0586  2D91               	goto	u2465
  3108  0587  0822               	movf	___llmod@divisor+2,w
  3109  0588  0226               	subwf	___llmod@dividend+2,w
  3110  0589  1D03               	skipz
  3111  058A  2D91               	goto	u2465
  3112  058B  0821               	movf	___llmod@divisor+1,w
  3113  058C  0225               	subwf	___llmod@dividend+1,w
  3114  058D  1D03               	skipz
  3115  058E  2D91               	goto	u2465
  3116  058F  0820               	movf	___llmod@divisor,w
  3117  0590  0224               	subwf	___llmod@dividend,w
  3118  0591                     u2465:	
  3119  0591  1C03               	skipc
  3120  0592  2DA2               	goto	L14
  3121  0593  0820               	movf	___llmod@divisor,w
  3122  0594  02A4               	subwf	___llmod@dividend,f
  3123  0595  0821               	movf	___llmod@divisor+1,w
  3124  0596  1C03               	skipc
  3125  0597  0F21               	incfsz	___llmod@divisor+1,w
  3126  0598  02A5               	subwf	___llmod@dividend+1,f
  3127  0599  0822               	movf	___llmod@divisor+2,w
  3128  059A  1C03               	skipc
  3129  059B  0F22               	incfsz	___llmod@divisor+2,w
  3130  059C  02A6               	subwf	___llmod@dividend+2,f
  3131  059D  0823               	movf	___llmod@divisor+3,w
  3132  059E  1C03               	skipc
  3133  059F  0F23               	incfsz	___llmod@divisor+3,w
  3134  05A0  02A7               	subwf	___llmod@dividend+3,f
  3135  05A1  1003               	clrc
  3136  05A2                     L14:	
  3137  05A2  0CA3               	rrf	___llmod@divisor+3,f
  3138  05A3  0CA2               	rrf	___llmod@divisor+2,f
  3139  05A4  0CA1               	rrf	___llmod@divisor+1,f
  3140  05A5  0CA0               	rrf	___llmod@divisor,f
  3141  05A6  0BFD               	decfsz	___llmod@counter,f
  3142  05A7  2D83               	goto	l6346
  3143  05A8                     l6354:	
  3144  05A8  0827               	movf	___llmod@dividend+3,w
  3145  05A9  00A3               	movwf	?___llmod+3
  3146  05AA  0826               	movf	___llmod@dividend+2,w
  3147  05AB  00A2               	movwf	?___llmod+2
  3148  05AC  0825               	movf	___llmod@dividend+1,w
  3149  05AD  00A1               	movwf	?___llmod+1
  3150  05AE  0824               	movf	___llmod@dividend,w
  3151  05AF  00A0               	movwf	?___llmod
  3152  05B0  0008               	return
  3153  05B1                     __end_of___llmod:	
  3154  05B1                     __ptext565:	
  3155 ;; =============== function ___awmod ends ============
  3156                           
  3157                           
  3158 ;; *************** function ___lldiv *****************
  3159 ;; Defined at:
  3160 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  divisor         4    0[COMMON] unsigned long 
  3163 ;;  dividend        4    4[COMMON] unsigned long 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  quotient        4    8[COMMON] unsigned long 
  3166 ;;  counter         1   12[COMMON] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  4    0[COMMON] unsigned long 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0
  3171 ;; Tracked objects:
  3172 ;;		On entry : 60/20
  3173 ;;		On exit  : 60/20
  3174 ;;		Unchanged: FFF9F/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         8       0       0       0       0
  3177 ;;      Locals:         5       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0
  3179 ;;      Totals:        13       0       0       0       0
  3180 ;;Total ram usage:       13 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_printf
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188  05B1                     ___lldiv:	
  3189                           
  3190                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3191  05B1  01F8               	clrf	___lldiv@quotient
  3192  05B2  01F9               	clrf	___lldiv@quotient+1
  3193  05B3  01FA               	clrf	___lldiv@quotient+2
  3194  05B4  01FB               	clrf	___lldiv@quotient+3
  3195  05B5  0873               	movf	___lldiv@divisor+3,w
  3196  05B6  0472               	iorwf	___lldiv@divisor+2,w
  3197  05B7  0471               	iorwf	___lldiv@divisor+1,w
  3198  05B8  0470               	iorwf	___lldiv@divisor,w
  3199  05B9  1903               	skipnz
  3200  05BA  2DF0               	goto	l6408
  3201  05BB  01FC               	clrf	___lldiv@counter
  3202  05BC                     L10:	
  3203  05BC  0AFC               	incf	___lldiv@counter,f
  3204  05BD  1BF3               	btfsc	___lldiv@divisor+3,7
  3205  05BE  2DC5               	goto	l6396
  3206  05BF  1003               	clrc
  3207  05C0  0DF0               	rlf	___lldiv@divisor,f
  3208  05C1  0DF1               	rlf	___lldiv@divisor+1,f
  3209  05C2  0DF2               	rlf	___lldiv@divisor+2,f
  3210  05C3  0DF3               	rlf	___lldiv@divisor+3,f
  3211  05C4  2DBC               	goto	L10
  3212  05C5                     l6396:	
  3213  05C5  1003               	clrc
  3214  05C6  0DF8               	rlf	___lldiv@quotient,f
  3215  05C7  0DF9               	rlf	___lldiv@quotient+1,f
  3216  05C8  0DFA               	rlf	___lldiv@quotient+2,f
  3217  05C9  0DFB               	rlf	___lldiv@quotient+3,f
  3218  05CA  0873               	movf	___lldiv@divisor+3,w
  3219  05CB  0277               	subwf	___lldiv@dividend+3,w
  3220  05CC  1D03               	skipz
  3221  05CD  2DD8               	goto	u2545
  3222  05CE  0872               	movf	___lldiv@divisor+2,w
  3223  05CF  0276               	subwf	___lldiv@dividend+2,w
  3224  05D0  1D03               	skipz
  3225  05D1  2DD8               	goto	u2545
  3226  05D2  0871               	movf	___lldiv@divisor+1,w
  3227  05D3  0275               	subwf	___lldiv@dividend+1,w
  3228  05D4  1D03               	skipz
  3229  05D5  2DD8               	goto	u2545
  3230  05D6  0870               	movf	___lldiv@divisor,w
  3231  05D7  0274               	subwf	___lldiv@dividend,w
  3232  05D8                     u2545:	
  3233  05D8  1C03               	skipc
  3234  05D9  2DEA               	goto	L11
  3235  05DA  0870               	movf	___lldiv@divisor,w
  3236  05DB  02F4               	subwf	___lldiv@dividend,f
  3237  05DC  0871               	movf	___lldiv@divisor+1,w
  3238  05DD  1C03               	skipc
  3239  05DE  0F71               	incfsz	___lldiv@divisor+1,w
  3240  05DF  02F5               	subwf	___lldiv@dividend+1,f
  3241  05E0  0872               	movf	___lldiv@divisor+2,w
  3242  05E1  1C03               	skipc
  3243  05E2  0F72               	incfsz	___lldiv@divisor+2,w
  3244  05E3  02F6               	subwf	___lldiv@dividend+2,f
  3245  05E4  0873               	movf	___lldiv@divisor+3,w
  3246  05E5  1C03               	skipc
  3247  05E6  0F73               	incfsz	___lldiv@divisor+3,w
  3248  05E7  02F7               	subwf	___lldiv@dividend+3,f
  3249  05E8  1478               	bsf	___lldiv@quotient,0
  3250  05E9  1003               	clrc
  3251  05EA                     L11:	
  3252  05EA  0CF3               	rrf	___lldiv@divisor+3,f
  3253  05EB  0CF2               	rrf	___lldiv@divisor+2,f
  3254  05EC  0CF1               	rrf	___lldiv@divisor+1,f
  3255  05ED  0CF0               	rrf	___lldiv@divisor,f
  3256  05EE  0BFC               	decfsz	___lldiv@counter,f
  3257  05EF  2DC5               	goto	l6396
  3258  05F0                     l6408:	
  3259  05F0  087B               	movf	___lldiv@quotient+3,w
  3260  05F1  00F3               	movwf	?___lldiv+3
  3261  05F2  087A               	movf	___lldiv@quotient+2,w
  3262  05F3  00F2               	movwf	?___lldiv+2
  3263  05F4  0879               	movf	___lldiv@quotient+1,w
  3264  05F5  00F1               	movwf	?___lldiv+1
  3265  05F6  0878               	movf	___lldiv@quotient,w
  3266  05F7  00F0               	movwf	?___lldiv
  3267  05F8  0008               	return
  3268  05F9                     __end_of___lldiv:	
  3269  05F9                     __ptext577:	
  3270 ;; =============== function __div_to_l_ ends ============
  3271                           
  3272                           
  3273 ;; *************** function __tdiv_to_l_ *****************
  3274 ;; Defined at:
  3275 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  f1              3    0[COMMON] float 
  3278 ;;  f2              3    3[COMMON] float 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  quot            4    0[BANK0 ] unsigned long 
  3281 ;;  exp1            1    5[BANK0 ] unsigned char 
  3282 ;;  cntr            1    4[BANK0 ] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  4    0[COMMON] unsigned long 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0
  3287 ;; Tracked objects:
  3288 ;;		On entry : 60/20
  3289 ;;		On exit  : 60/0
  3290 ;;		Unchanged: FFF9F/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         6       0       0       0       0
  3293 ;;      Locals:         0       6       0       0       0
  3294 ;;      Temps:          3       0       0       0       0
  3295 ;;      Totals:         9       6       0       0       0
  3296 ;;Total ram usage:       15 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_printf
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304  05F9                     __tdiv_to_l_:	
  3305                           
  3306                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3307  05F9  0870               	movf	__tdiv_to_l_@f1,w
  3308  05FA  00F6               	movwf	??__tdiv_to_l_
  3309  05FB  0871               	movf	__tdiv_to_l_@f1+1,w
  3310  05FC  00F7               	movwf	??__tdiv_to_l_+1
  3311  05FD  0872               	movf	__tdiv_to_l_@f1+2,w
  3312  05FE  00F8               	movwf	??__tdiv_to_l_+2
  3313  05FF  1003               	clrc
  3314  0600  0D77               	rlf	??__tdiv_to_l_+1,w
  3315  0601  0D78               	rlf	??__tdiv_to_l_+2,w
  3316  0602  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0603  00A5               	movwf	__tdiv_to_l_@exp1
  3318  0604  08A5               	movf	__tdiv_to_l_@exp1,f
  3319  0605  1D03               	skipz
  3320  0606  2E0C               	goto	l6080
  3321  0607                     l6078:	
  3322  0607  01F0               	clrf	?__tdiv_to_l_
  3323  0608  01F1               	clrf	?__tdiv_to_l_+1
  3324  0609  01F2               	clrf	?__tdiv_to_l_+2
  3325  060A  01F3               	clrf	?__tdiv_to_l_+3
  3326  060B  0008               	return
  3327  060C                     l6080:	
  3328  060C  0873               	movf	__tdiv_to_l_@f2,w
  3329  060D  00F6               	movwf	??__tdiv_to_l_
  3330  060E  0874               	movf	__tdiv_to_l_@f2+1,w
  3331  060F  00F7               	movwf	??__tdiv_to_l_+1
  3332  0610  0875               	movf	__tdiv_to_l_@f2+2,w
  3333  0611  00F8               	movwf	??__tdiv_to_l_+2
  3334  0612  1003               	clrc
  3335  0613  0D77               	rlf	??__tdiv_to_l_+1,w
  3336  0614  0D78               	rlf	??__tdiv_to_l_+2,w
  3337  0615  00A4               	movwf	__tdiv_to_l_@cntr
  3338  0616  08A4               	movf	__tdiv_to_l_@cntr,f
  3339  0617  1903               	btfsc	3,2
  3340  0618  2E07               	goto	l6078
  3341  0619  307F               	movlw	127
  3342  061A  17F1               	bsf	__tdiv_to_l_@f1+1,7
  3343  061B  01F2               	clrf	__tdiv_to_l_@f1+2
  3344  061C  17F4               	bsf	__tdiv_to_l_@f2+1,7
  3345  061D  01F5               	clrf	__tdiv_to_l_@f2+2
  3346  061E  01A0               	clrf	__tdiv_to_l_@quot
  3347  061F  01A1               	clrf	__tdiv_to_l_@quot+1
  3348  0620  01A2               	clrf	__tdiv_to_l_@quot+2
  3349  0621  01A3               	clrf	__tdiv_to_l_@quot+3
  3350  0622  02A5               	subwf	__tdiv_to_l_@exp1,f
  3351  0623  3098               	movlw	152
  3352  0624  0724               	addwf	__tdiv_to_l_@cntr,w
  3353  0625  00F6               	movwf	??__tdiv_to_l_
  3354  0626  02A5               	subwf	__tdiv_to_l_@exp1,f
  3355  0627  3018               	movlw	24
  3356  0628  00A4               	movwf	__tdiv_to_l_@cntr
  3357  0629                     l6094:	
  3358  0629  1003               	clrc
  3359  062A  0DA0               	rlf	__tdiv_to_l_@quot,f
  3360  062B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3361  062C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3362  062D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3363  062E  0875               	movf	__tdiv_to_l_@f2+2,w
  3364  062F  0272               	subwf	__tdiv_to_l_@f1+2,w
  3365  0630  1D03               	skipz
  3366  0631  2E38               	goto	u1975
  3367  0632  0874               	movf	__tdiv_to_l_@f2+1,w
  3368  0633  0271               	subwf	__tdiv_to_l_@f1+1,w
  3369  0634  1D03               	skipz
  3370  0635  2E38               	goto	u1975
  3371  0636  0873               	movf	__tdiv_to_l_@f2,w
  3372  0637  0270               	subwf	__tdiv_to_l_@f1,w
  3373  0638                     u1975:	
  3374  0638  1C03               	skipc
  3375  0639  2E46               	goto	L19
  3376  063A  0873               	movf	__tdiv_to_l_@f2,w
  3377  063B  02F0               	subwf	__tdiv_to_l_@f1,f
  3378  063C  0874               	movf	__tdiv_to_l_@f2+1,w
  3379  063D  1C03               	skipc
  3380  063E  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  3381  063F  02F1               	subwf	__tdiv_to_l_@f1+1,f
  3382  0640  0875               	movf	__tdiv_to_l_@f2+2,w
  3383  0641  1C03               	skipc
  3384  0642  0A75               	incf	__tdiv_to_l_@f2+2,w
  3385  0643  02F2               	subwf	__tdiv_to_l_@f1+2,f
  3386  0644  1420               	bsf	__tdiv_to_l_@quot,0
  3387  0645  1003               	clrc
  3388  0646                     L19:	
  3389  0646  0DF0               	rlf	__tdiv_to_l_@f1,f
  3390  0647  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  3391  0648  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  3392  0649  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3393  064A  2E29               	goto	l6094
  3394  064B  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3395  064C  2E5A               	goto	l6114
  3396  064D  0825               	movf	__tdiv_to_l_@exp1,w
  3397  064E  3A80               	xorlw	128
  3398  064F  3E97               	addlw	151
  3399  0650  1C03               	btfss	3,0
  3400  0651  2E07               	goto	l6078
  3401  0652                     l6110:	
  3402  0652  1003               	clrc
  3403  0653  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3404  0654  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3405  0655  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3406  0656  0CA0               	rrf	__tdiv_to_l_@quot,f
  3407  0657  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3408  0658  2E52               	goto	l6110
  3409  0659  2E68               	goto	l6120
  3410  065A                     l6114:	
  3411  065A  3018               	movlw	24
  3412  065B  0225               	subwf	__tdiv_to_l_@exp1,w
  3413  065C  1803               	btfsc	3,0
  3414  065D  2E07               	goto	l6078
  3415  065E                     l3531:	
  3416  065E  08A5               	movf	__tdiv_to_l_@exp1,f
  3417  065F  1903               	btfsc	3,2
  3418  0660  2E68               	goto	l6120
  3419  0661  1003               	clrc
  3420  0662  0DA0               	rlf	__tdiv_to_l_@quot,f
  3421  0663  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3422  0664  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3423  0665  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3424  0666  03A5               	decf	__tdiv_to_l_@exp1,f
  3425  0667  2E5E               	goto	l3531
  3426  0668                     l6120:	
  3427  0668  0823               	movf	__tdiv_to_l_@quot+3,w
  3428  0669  00F3               	movwf	?__tdiv_to_l_+3
  3429  066A  0822               	movf	__tdiv_to_l_@quot+2,w
  3430  066B  00F2               	movwf	?__tdiv_to_l_+2
  3431  066C  0821               	movf	__tdiv_to_l_@quot+1,w
  3432  066D  00F1               	movwf	?__tdiv_to_l_+1
  3433  066E  0820               	movf	__tdiv_to_l_@quot,w
  3434  066F  00F0               	movwf	?__tdiv_to_l_
  3435  0670  0008               	return
  3436  0671                     __end_of__tdiv_to_l_:	
  3437  0671                     __ptext567:	
  3438 ;; =============== function ___ftge ends ============
  3439                           
  3440                           
  3441 ;; *************** function ___ftneg *****************
  3442 ;; Defined at:
  3443 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  f1              3    0[COMMON] float 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  3    0[COMMON] float 
  3450 ;; Registers used:
  3451 ;;		wreg
  3452 ;; Tracked objects:
  3453 ;;		On entry : 160/20
  3454 ;;		On exit  : 160/20
  3455 ;;		Unchanged: FFE9F/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         3       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0
  3460 ;;      Totals:         3       0       0       0       0
  3461 ;;Total ram usage:        3 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_printf
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469  0671                     ___ftneg:	
  3470                           
  3471                           ; Regs used in ___ftneg: [wreg]
  3472  0671  0872               	movf	___ftneg@f1+2,w
  3473  0672  0471               	iorwf	___ftneg@f1+1,w
  3474  0673  0470               	iorwf	___ftneg@f1,w
  3475  0674  1903               	skipnz
  3476  0675  0008               	return
  3477  0676  3080               	movlw	128
  3478  0677  06F2               	xorwf	___ftneg@f1+2,f
  3479  0678  0008               	return
  3480  0679                     __end_of___ftneg:	
  3481  0679                     __ptext561:	
  3482 ;; =============== function ___ftdiv ends ============
  3483                           
  3484                           
  3485 ;; *************** function ___ftadd *****************
  3486 ;; Defined at:
  3487 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;  f1              3   30[BANK0 ] float 
  3490 ;;  f2              3   33[BANK0 ] float 
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  exp1            1   41[BANK0 ] unsigned char 
  3493 ;;  exp2            1   40[BANK0 ] unsigned char 
  3494 ;;  sign            1   39[BANK0 ] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  3   30[BANK0 ] float 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, pclath, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 60/0
  3501 ;;		On exit  : 60/0
  3502 ;;		Unchanged: FFF9F/0
  3503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3504 ;;      Params:         0       6       0       0       0
  3505 ;;      Locals:         0       3       0       0       0
  3506 ;;      Temps:          0       3       0       0       0
  3507 ;;      Totals:         0      12       0       0       0
  3508 ;;Total ram usage:       12 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    1
  3511 ;; This function calls:
  3512 ;;		___ftpack
  3513 ;; This function is called by:
  3514 ;;		_printf
  3515 ;;		___ftsub
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518  0679                     ___ftadd:	
  3519                           
  3520                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3521  0679  083E               	movf	___ftadd@f1,w
  3522  067A  00C4               	movwf	??___ftadd
  3523  067B  083F               	movf	___ftadd@f1+1,w
  3524  067C  00C5               	movwf	??___ftadd+1
  3525  067D  0840               	movf	___ftadd@f1+2,w
  3526  067E  00C6               	movwf	??___ftadd+2
  3527  067F  1003               	clrc
  3528  0680  0D45               	rlf	??___ftadd+1,w
  3529  0681  0D46               	rlf	??___ftadd+2,w
  3530  0682  00C9               	movwf	___ftadd@exp1
  3531  0683  0841               	movf	___ftadd@f2,w
  3532  0684  00C4               	movwf	??___ftadd
  3533  0685  0842               	movf	___ftadd@f2+1,w
  3534  0686  00C5               	movwf	??___ftadd+1
  3535  0687  0843               	movf	___ftadd@f2+2,w
  3536  0688  00C6               	movwf	??___ftadd+2
  3537  0689  1003               	clrc
  3538  068A  0D45               	rlf	??___ftadd+1,w
  3539  068B  0D46               	rlf	??___ftadd+2,w
  3540  068C  00C8               	movwf	___ftadd@exp2
  3541  068D  0849               	movf	___ftadd@exp1,w
  3542  068E  1903               	btfsc	3,2
  3543  068F  2E9C               	goto	l6506
  3544  0690  0848               	movf	___ftadd@exp2,w
  3545  0691  0249               	subwf	___ftadd@exp1,w
  3546  0692  0848               	movf	___ftadd@exp2,w
  3547  0693  1803               	skipnc
  3548  0694  2EA4               	goto	L7
  3549  0695  00C4               	movwf	??___ftadd
  3550  0696  0849               	movf	___ftadd@exp1,w
  3551  0697  02C4               	subwf	??___ftadd,f
  3552  0698  3019               	movlw	25
  3553  0699  0244               	subwf	??___ftadd,w
  3554  069A  1C03               	skipc
  3555  069B  2EA3               	goto	l6510
  3556  069C                     l6506:	
  3557  069C  0841               	movf	___ftadd@f2,w
  3558  069D  00BE               	movwf	?___ftadd
  3559  069E  0842               	movf	___ftadd@f2+1,w
  3560  069F  00BF               	movwf	?___ftadd+1
  3561  06A0  0843               	movf	___ftadd@f2+2,w
  3562  06A1  00C0               	movwf	?___ftadd+2
  3563  06A2  0008               	return
  3564  06A3                     l6510:	
  3565  06A3  0848               	movf	___ftadd@exp2,w
  3566  06A4                     L7:	
  3567  06A4  1903               	btfsc	3,2
  3568  06A5  0008               	return
  3569  06A6  0849               	movf	___ftadd@exp1,w
  3570  06A7  0248               	subwf	___ftadd@exp2,w
  3571  06A8  1803               	skipnc
  3572  06A9  2EB2               	goto	l6516
  3573  06AA  0849               	movf	___ftadd@exp1,w
  3574  06AB  00C4               	movwf	??___ftadd
  3575  06AC  0848               	movf	___ftadd@exp2,w
  3576  06AD  02C4               	subwf	??___ftadd,f
  3577  06AE  3019               	movlw	25
  3578  06AF  0244               	subwf	??___ftadd,w
  3579  06B0  1803               	btfsc	3,0
  3580  06B1  0008               	return
  3581  06B2                     l6516:	
  3582  06B2  3006               	movlw	6
  3583  06B3  00C7               	movwf	___ftadd@sign
  3584  06B4  1BC0               	btfsc	___ftadd@f1+2,7
  3585  06B5  17C7               	bsf	___ftadd@sign,7
  3586  06B6  1BC3               	btfsc	___ftadd@f2+2,7
  3587  06B7  1747               	bsf	___ftadd@sign,6
  3588  06B8  17BF               	bsf	___ftadd@f1+1,7
  3589  06B9  01C0               	clrf	___ftadd@f1+2
  3590  06BA  17C2               	bsf	___ftadd@f2+1,7
  3591  06BB  01C3               	clrf	___ftadd@f2+2
  3592  06BC  0848               	movf	___ftadd@exp2,w
  3593  06BD  0249               	subwf	___ftadd@exp1,w
  3594  06BE  1803               	skipnc
  3595  06BF  2ED9               	goto	l6538
  3596  06C0                     l6528:	
  3597  06C0  1003               	clrc
  3598  06C1  0DC1               	rlf	___ftadd@f2,f
  3599  06C2  0DC2               	rlf	___ftadd@f2+1,f
  3600  06C3  0DC3               	rlf	___ftadd@f2+2,f
  3601  06C4  03C8               	decf	___ftadd@exp2,f
  3602  06C5  0848               	movf	___ftadd@exp2,w
  3603  06C6  0649               	xorwf	___ftadd@exp1,w
  3604  06C7  1903               	skipnz
  3605  06C8  2ED4               	goto	l6536
  3606  06C9  03C7               	decf	___ftadd@sign,f
  3607  06CA  0847               	movf	___ftadd@sign,w
  3608  06CB  3907               	andlw	7
  3609  06CC  1903               	btfsc	3,2
  3610  06CD  2ED4               	goto	l6536
  3611  06CE  2EC0               	goto	l6528
  3612  06CF                     l6534:	
  3613  06CF  1003               	clrc
  3614  06D0  0CC0               	rrf	___ftadd@f1+2,f
  3615  06D1  0CBF               	rrf	___ftadd@f1+1,f
  3616  06D2  0CBE               	rrf	___ftadd@f1,f
  3617  06D3  0AC9               	incf	___ftadd@exp1,f
  3618  06D4                     l6536:	
  3619  06D4  0849               	movf	___ftadd@exp1,w
  3620  06D5  0648               	xorwf	___ftadd@exp2,w
  3621  06D6  1903               	btfsc	3,2
  3622  06D7  2EF5               	goto	l3337
  3623  06D8  2ECF               	goto	l6534
  3624  06D9                     l6538:	
  3625  06D9  0849               	movf	___ftadd@exp1,w
  3626  06DA  0248               	subwf	___ftadd@exp2,w
  3627  06DB  1803               	skipnc
  3628  06DC  2EF5               	goto	l3337
  3629  06DD                     l6540:	
  3630  06DD  1003               	clrc
  3631  06DE  0DBE               	rlf	___ftadd@f1,f
  3632  06DF  0DBF               	rlf	___ftadd@f1+1,f
  3633  06E0  0DC0               	rlf	___ftadd@f1+2,f
  3634  06E1  03C9               	decf	___ftadd@exp1,f
  3635  06E2  0848               	movf	___ftadd@exp2,w
  3636  06E3  0649               	xorwf	___ftadd@exp1,w
  3637  06E4  1903               	skipnz
  3638  06E5  2EF1               	goto	l6548
  3639  06E6  03C7               	decf	___ftadd@sign,f
  3640  06E7  0847               	movf	___ftadd@sign,w
  3641  06E8  3907               	andlw	7
  3642  06E9  1903               	btfsc	3,2
  3643  06EA  2EF1               	goto	l6548
  3644  06EB  2EDD               	goto	l6540
  3645  06EC                     l6546:	
  3646  06EC  1003               	clrc
  3647  06ED  0CC3               	rrf	___ftadd@f2+2,f
  3648  06EE  0CC2               	rrf	___ftadd@f2+1,f
  3649  06EF  0CC1               	rrf	___ftadd@f2,f
  3650  06F0  0AC8               	incf	___ftadd@exp2,f
  3651  06F1                     l6548:	
  3652  06F1  0849               	movf	___ftadd@exp1,w
  3653  06F2  0648               	xorwf	___ftadd@exp2,w
  3654  06F3  1D03               	skipz
  3655  06F4  2EEC               	goto	l6546
  3656  06F5                     l3337:	
  3657  06F5  1FC7               	btfss	___ftadd@sign,7
  3658  06F6  2F00               	goto	l6554
  3659  06F7  30FF               	movlw	255
  3660  06F8  06BE               	xorwf	___ftadd@f1,f
  3661  06F9  06BF               	xorwf	___ftadd@f1+1,f
  3662  06FA  06C0               	xorwf	___ftadd@f1+2,f
  3663  06FB  0ABE               	incf	___ftadd@f1,f
  3664  06FC  1903               	skipnz
  3665  06FD  0ABF               	incf	___ftadd@f1+1,f
  3666  06FE  1903               	skipnz
  3667  06FF  0AC0               	incf	___ftadd@f1+2,f
  3668  0700                     l6554:	
  3669  0700  1F47               	btfss	___ftadd@sign,6
  3670  0701  2F0B               	goto	l6560
  3671  0702  30FF               	movlw	255
  3672  0703  06C1               	xorwf	___ftadd@f2,f
  3673  0704  06C2               	xorwf	___ftadd@f2+1,f
  3674  0705  06C3               	xorwf	___ftadd@f2+2,f
  3675  0706  0AC1               	incf	___ftadd@f2,f
  3676  0707  1903               	skipnz
  3677  0708  0AC2               	incf	___ftadd@f2+1,f
  3678  0709  1903               	skipnz
  3679  070A  0AC3               	incf	___ftadd@f2+2,f
  3680  070B                     l6560:	
  3681  070B  01C7               	clrf	___ftadd@sign
  3682  070C  083E               	movf	___ftadd@f1,w
  3683  070D  07C1               	addwf	___ftadd@f2,f
  3684  070E  083F               	movf	___ftadd@f1+1,w
  3685  070F  1103               	clrz
  3686  0710  1803               	skipnc
  3687  0711  0A3F               	incf	___ftadd@f1+1,w
  3688  0712  1D03               	btfss	3,2
  3689  0713  07C2               	addwf	___ftadd@f2+1,f
  3690  0714  0840               	movf	___ftadd@f1+2,w
  3691  0715  1103               	clrz
  3692  0716  1803               	skipnc
  3693  0717  0A40               	incf	___ftadd@f1+2,w
  3694  0718  1D03               	btfss	3,2
  3695  0719  07C3               	addwf	___ftadd@f2+2,f
  3696  071A  1FC3               	btfss	___ftadd@f2+2,7
  3697  071B  2F27               	goto	l6572
  3698  071C  30FF               	movlw	255
  3699  071D  06C1               	xorwf	___ftadd@f2,f
  3700  071E  06C2               	xorwf	___ftadd@f2+1,f
  3701  071F  06C3               	xorwf	___ftadd@f2+2,f
  3702  0720  0AC1               	incf	___ftadd@f2,f
  3703  0721  1903               	skipnz
  3704  0722  0AC2               	incf	___ftadd@f2+1,f
  3705  0723  1903               	skipnz
  3706  0724  0AC3               	incf	___ftadd@f2+2,f
  3707  0725  01C7               	clrf	___ftadd@sign
  3708  0726  0AC7               	incf	___ftadd@sign,f
  3709  0727                     l6572:	
  3710  0727  0841               	movf	___ftadd@f2,w
  3711  0728  00F0               	movwf	?___ftpack
  3712  0729  0842               	movf	___ftadd@f2+1,w
  3713  072A  00F1               	movwf	?___ftpack+1
  3714  072B  0843               	movf	___ftadd@f2+2,w
  3715  072C  00F2               	movwf	?___ftpack+2
  3716  072D  0849               	movf	___ftadd@exp1,w
  3717  072E  00F3               	movwf	?___ftpack+3
  3718  072F  0847               	movf	___ftadd@sign,w
  3719  0730  00F4               	movwf	?___ftpack+4
  3720  0731  120A  158A  2769   	fcall	___ftpack
  3721  0734  0870               	movf	?___ftpack,w
  3722  0735  00BE               	movwf	?___ftadd
  3723  0736  0871               	movf	?___ftpack+1,w
  3724  0737  00BF               	movwf	?___ftadd+1
  3725  0738  0872               	movf	?___ftpack+2,w
  3726  0739  00C0               	movwf	?___ftadd+2
  3727  073A  0008               	return
  3728  073B                     __end_of___ftadd:	
  3729  073B                     __ptext557:	
  3730 ;; =============== function _read_adc_AN3 ends ============
  3731                           
  3732                           
  3733 ;; *************** function ___lltoft *****************
  3734 ;; Defined at:
  3735 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  c               4    8[COMMON] unsigned long 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  exp             1   12[COMMON] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  3    8[COMMON] float 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 60/20
  3746 ;;		On exit  : 60/20
  3747 ;;		Unchanged: FFF9F/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         4       0       0       0       0
  3750 ;;      Locals:         1       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0
  3752 ;;      Totals:         5       0       0       0       0
  3753 ;;Total ram usage:        5 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    1
  3756 ;; This function calls:
  3757 ;;		___ftpack
  3758 ;; This function is called by:
  3759 ;;		_printf
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762  073B                     ___lltoft:	
  3763                           
  3764                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3765  073B  308E               	movlw	142
  3766  073C  00FC               	movwf	___lltoft@exp
  3767  073D                     l6692:	
  3768  073D  30FF               	movlw	255
  3769  073E  057B               	andwf	___lltoft@c+3,w
  3770  073F  1903               	btfsc	3,2
  3771  0740  2F48               	goto	l6694
  3772  0741  1003               	clrc
  3773  0742  0CFB               	rrf	___lltoft@c+3,f
  3774  0743  0CFA               	rrf	___lltoft@c+2,f
  3775  0744  0CF9               	rrf	___lltoft@c+1,f
  3776  0745  0CF8               	rrf	___lltoft@c,f
  3777  0746  0AFC               	incf	___lltoft@exp,f
  3778  0747  2F3D               	goto	l6692
  3779  0748                     l6694:	
  3780  0748  0878               	movf	___lltoft@c,w
  3781  0749  00F0               	movwf	?___ftpack
  3782  074A  0879               	movf	___lltoft@c+1,w
  3783  074B  00F1               	movwf	?___ftpack+1
  3784  074C  087A               	movf	___lltoft@c+2,w
  3785  074D  00F2               	movwf	?___ftpack+2
  3786  074E  087C               	movf	___lltoft@exp,w
  3787  074F  00F3               	movwf	?___ftpack+3
  3788  0750  01F4               	clrf	?___ftpack+4
  3789  0751  120A  158A  2769   	fcall	___ftpack
  3790  0754  0870               	movf	?___ftpack,w
  3791  0755  00F8               	movwf	?___lltoft
  3792  0756  0871               	movf	?___ftpack+1,w
  3793  0757  00F9               	movwf	?___lltoft+1
  3794  0758  0872               	movf	?___ftpack+2,w
  3795  0759  00FA               	movwf	?___lltoft+2
  3796  075A  0008               	return
  3797  075B                     __end_of___lltoft:	
  3798  075B                     __ptext550:	
  3799 ;; =============== function _lcd_putc ends ============
  3800                           
  3801                           
  3802 ;; *************** function ___ftsub *****************
  3803 ;; Defined at:
  3804 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  f2              3   42[BANK0 ] float 
  3807 ;;  f1              3   45[BANK0 ] float 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  3   42[BANK0 ] float 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0, pclath, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 60/0
  3816 ;;		On exit  : 60/0
  3817 ;;		Unchanged: FFF9F/0
  3818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3819 ;;      Params:         0       6       0       0       0
  3820 ;;      Locals:         0       0       0       0       0
  3821 ;;      Temps:          0       0       0       0       0
  3822 ;;      Totals:         0       6       0       0       0
  3823 ;;Total ram usage:        6 bytes
  3824 ;; Hardware stack levels used:    1
  3825 ;; Hardware stack levels required when called:    2
  3826 ;; This function calls:
  3827 ;;		___ftadd
  3828 ;; This function is called by:
  3829 ;;		_printf
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832  075B                     ___ftsub:	
  3833                           
  3834                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3835  075B  3080               	movlw	128
  3836  075C  06CC               	xorwf	___ftsub@f2+2,f
  3837  075D  084D               	movf	___ftsub@f1,w
  3838  075E  00BE               	movwf	?___ftadd
  3839  075F  084E               	movf	___ftsub@f1+1,w
  3840  0760  00BF               	movwf	?___ftadd+1
  3841  0761  084F               	movf	___ftsub@f1+2,w
  3842  0762  00C0               	movwf	?___ftadd+2
  3843  0763  084A               	movf	___ftsub@f2,w
  3844  0764  00C1               	movwf	?___ftadd+3
  3845  0765  084B               	movf	___ftsub@f2+1,w
  3846  0766  00C2               	movwf	?___ftadd+4
  3847  0767  084C               	movf	___ftsub@f2+2,w
  3848  0768  00C3               	movwf	?___ftadd+5
  3849  0769  2679               	fcall	___ftadd
  3850  076A  083E               	movf	?___ftadd,w
  3851  076B  00CA               	movwf	?___ftsub
  3852  076C  083F               	movf	?___ftadd+1,w
  3853  076D  00CB               	movwf	?___ftsub+1
  3854  076E  0840               	movf	?___ftadd+2,w
  3855  076F  00CC               	movwf	?___ftsub+2
  3856  0770  0008               	return
  3857  0771                     __end_of___ftsub:	
  3858  0771                     PL3:	
  3859  0771  0838               	movf	printf@c^(0+128),w
  3860  0772  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0773  00D7               	movwf	??_printf
  3862  0774  1003               	clrc
  3863  0775  0DD7               	rlf	??_printf,f
  3864  0776  1003               	clrc
  3865  0777  0D57               	rlf	??_printf,w
  3866  0778  3E4F               	addlw	low (_dpowers-__stringbase)
  3867  0779  0084               	movwf	4
  3868  077A  0008               	return
  3869  077B                     PL4:	
  3870  077B  300A               	movlw	10
  3871  077C  1283               	bcf	3,5	;RP0=0, select bank0
  3872  077D  00A0               	movwf	?___llmod
  3873  077E  01A1               	clrf	?___llmod+1
  3874  077F  01A2               	clrf	?___llmod+2
  3875  0780  01A3               	clrf	?___llmod+3
  3876  0781  1683               	bsf	3,5	;RP0=1, select bank1
  3877  0782  0008               	return
  3878  0783                     PL5:	
  3879  0783  0823               	movf	?___fttol+3,w
  3880  0784  1683               	bsf	3,5	;RP0=1, select bank1
  3881  0785  00AB               	movwf	(printf@_val+3)^(0+128)
  3882  0786  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0787  0822               	movf	?___fttol+2,w
  3884  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3885  0789  00AA               	movwf	(printf@_val+2)^(0+128)
  3886  078A  1283               	bcf	3,5	;RP0=0, select bank0
  3887  078B  0821               	movf	?___fttol+1,w
  3888  078C  1683               	bsf	3,5	;RP0=1, select bank1
  3889  078D  00A9               	movwf	(printf@_val+1)^(0+128)
  3890  078E  1283               	bcf	3,5	;RP0=0, select bank0
  3891  078F  0820               	movf	?___fttol,w
  3892  0790  0008               	return
  3893  0791                     PL6:	
  3894  0791  083E               	movf	?_scale,w
  3895  0792  1683               	bsf	3,5	;RP0=1, select bank1
  3896  0793  00A5               	movwf	printf@integ^(0+128)
  3897  0794  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0795  083F               	movf	?_scale+1,w
  3899  0796  1683               	bsf	3,5	;RP0=1, select bank1
  3900  0797  00A6               	movwf	(printf@integ+1)^(0+128)
  3901  0798  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0799  0840               	movf	?_scale+2,w
  3903  079A  1683               	bsf	3,5	;RP0=1, select bank1
  3904  079B  00A7               	movwf	(printf@integ+2)^(0+128)
  3905  079C  0833               	movf	printf@fval^(0+128),w
  3906  079D  0008               	return
  3907  079E                     PL11:	
  3908  079E  0770               	addwf	?___wmul,w
  3909  079F  1283               	bcf	3,5	;RP0=0, select bank0
  3910  07A0  00D7               	movwf	??_printf
  3911  07A1  3000               	movlw	0
  3912  07A2  1803               	skipnc
  3913  07A3  3001               	movlw	1
  3914  07A4  0771               	addwf	?___wmul+1,w
  3915  07A5  00D8               	movwf	??_printf+1
  3916  07A6  0857               	movf	??_printf,w
  3917  07A7  3ED0               	addlw	208
  3918  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  3919  07A9  0008               	return
  3920  07AA                     PL12:	
  3921  07AA  00F3               	movwf	?___lldiv+3
  3922  07AB  1683               	bsf	3,5	;RP0=1, select bank1
  3923  07AC  082B               	movf	(printf@_val+3)^(0+128),w
  3924  07AD  00F7               	movwf	?___lldiv+7
  3925  07AE  082A               	movf	(printf@_val+2)^(0+128),w
  3926  07AF  00F6               	movwf	?___lldiv+6
  3927  07B0  0829               	movf	(printf@_val+1)^(0+128),w
  3928  07B1  00F5               	movwf	?___lldiv+5
  3929  07B2  0828               	movf	printf@_val^(0+128),w
  3930  07B3  00F4               	movwf	?___lldiv+4
  3931  07B4  0008               	return
  3932  07B5                     PL14:	
  3933  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  3934  07B6  00A0               	movwf	?___fttol
  3935  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  3936  07B8  0834               	movf	(printf@fval+1)^(0+128),w
  3937  07B9  1283               	bcf	3,5	;RP0=0, select bank0
  3938  07BA  00A1               	movwf	?___fttol+1
  3939  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  3940  07BC  0835               	movf	(printf@fval+2)^(0+128),w
  3941  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  3942  07BE  00A2               	movwf	?___fttol+2
  3943  07BF  0008               	return
  3944  07C0                     PL16:	
  3945  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  3946  07C1  00AF               	movwf	?___ftmul
  3947  07C2  1683               	bsf	3,5	;RP0=1, select bank1
  3948  07C3  0834               	movf	(printf@fval+1)^(0+128),w
  3949  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3950  07C5  00B0               	movwf	?___ftmul+1
  3951  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  3952  07C7  0835               	movf	(printf@fval+2)^(0+128),w
  3953  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  3954  07C9  00B1               	movwf	?___ftmul+2
  3955  07CA  0008               	return
  3956  07CB                     PL18:	
  3957  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3958  07CC  00D7               	movwf	??_printf
  3959  07CD  01D8               	clrf	??_printf+1
  3960  07CE  1BD7               	btfsc	??_printf,7
  3961  07CF  03D8               	decf	??_printf+1,f
  3962  07D0  0858               	movf	??_printf+1,w
  3963  07D1  3A80               	xorlw	128
  3964  07D2  00D9               	movwf	??_printf+2
  3965  07D3  1683               	bsf	3,5	;RP0=1, select bank1
  3966  07D4  0008               	return
  3967  07D5                     PL19:	
  3968  07D5  0873               	movf	?___lldiv+3,w
  3969  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3970  07D7  00A7               	movwf	?___llmod+7
  3971  07D8  0872               	movf	?___lldiv+2,w
  3972  07D9  00A6               	movwf	?___llmod+6
  3973  07DA  0871               	movf	?___lldiv+1,w
  3974  07DB  00A5               	movwf	?___llmod+5
  3975  07DC  0870               	movf	?___lldiv,w
  3976  07DD  00A4               	movwf	?___llmod+4
  3977  07DE  0008               	return
  3978  07DF                     PL21:	
  3979  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  3980  07E0  0838               	movf	printf@c^(0+128),w
  3981  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  3982  07E2  00D7               	movwf	??_printf
  3983  07E3  01D8               	clrf	??_printf+1
  3984  07E4  1BD7               	btfsc	??_printf,7
  3985  07E5  03D8               	decf	??_printf+1,f
  3986  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  3987  07E7  0008               	return
  3988  07E8                     PL22:	
  3989  07E8  0825               	movf	printf@integ^(0+128),w
  3990  07E9  00F0               	movwf	?___ftge
  3991  07EA  0826               	movf	(printf@integ+1)^(0+128),w
  3992  07EB  00F1               	movwf	?___ftge+1
  3993  07EC  0827               	movf	(printf@integ+2)^(0+128),w
  3994  07ED  00F2               	movwf	?___ftge+2
  3995  07EE  0008               	return
  3996  07EF                     PL30:	
  3997  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  3998  07F0  0858               	movf	??_printf+1,w
  3999  07F1  1803               	skipnc
  4000  07F2  3E01               	addlw	1
  4001  07F3  3EFF               	addlw	255
  4002  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  4003  07F5  0008               	return
  4004  07F6                     PL31:	
  4005  07F6  0820               	movf	___fttol@f1,w
  4006  07F7  00A4               	movwf	??___fttol
  4007  07F8  0821               	movf	___fttol@f1+1,w
  4008  07F9  00A5               	movwf	??___fttol+1
  4009  07FA  0822               	movf	___fttol@f1+2,w
  4010  07FB  00A6               	movwf	??___fttol+2
  4011  07FC  0008               	return
  4012  07FD                     PL34:	
  4013  07FD  1683               	bsf	3,5	;RP0=1, select bank1
  4014  07FE  1303               	bcf	3,6	;RP1=0, select bank1
  4015  07FF  0008               	return
  4016                           
  4017                           	psect	text551
  4018  0CD8                     __ptext551:	
  4019 ;; =============== function ___ftsub ends ============
  4020                           
  4021                           
  4022 ;; *************** function _scale *****************
  4023 ;; Defined at:
  4024 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  scl             1    wreg     char 
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  scl             1   40[BANK0 ] char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  3   30[BANK0 ] char 
  4031 ;; Registers used:
  4032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 60/20
  4035 ;;		On exit  : 60/0
  4036 ;;		Unchanged: FFF9F/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4038 ;;      Params:         0       3       0       0       0
  4039 ;;      Locals:         0       4       0       0       0
  4040 ;;      Temps:          0       4       0       0       0
  4041 ;;      Totals:         0      11       0       0       0
  4042 ;;Total ram usage:       11 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    2
  4045 ;; This function calls:
  4046 ;;		___awmod
  4047 ;;		___awdiv
  4048 ;;		___ftmul
  4049 ;;		___bmul
  4050 ;; This function is called by:
  4051 ;;		_printf
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054  0CD8                     _scale:	
  4055                           
  4056                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4057                           ;scale@scl stored from wreg
  4058  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  4059  0CD9  00C8               	movwf	scale@scl
  4060  0CDA  1FC8               	btfss	scale@scl,7
  4061  0CDB  2DA4               	goto	l6812
  4062  0CDC  09C8               	comf	scale@scl,f
  4063  0CDD  0AC8               	incf	scale@scl,f
  4064  0CDE  0848               	movf	scale@scl,w
  4065  0CDF  3A80               	xorlw	128
  4066  0CE0  3E12               	addlw	-238
  4067  0CE1  1C03               	skipc
  4068  0CE2  2D48               	goto	l6802
  4069  0CE3  300A               	movlw	10
  4070  0CE4  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  4071  0CE7  26AF  120A  158A   	fcall	___awmod
  4072  0CEA  0871               	movf	?___awmod+1,w
  4073  0CEB  00F9               	movwf	?___awdiv+3
  4074  0CEC  0870               	movf	?___awmod,w
  4075  0CED  00F8               	movwf	?___awdiv+2
  4076  0CEE  266A  120A  158A   	fcall	___awdiv
  4077  0CF1  27E0               	fcall	PL23	;call to abstracted procedure
  4078  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4079  0CF3  0084               	movwf	4
  4080  0CF4  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4081  0CF9  00AF               	movwf	?___ftmul
  4082  0CFA  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4083  0CFF  00B0               	movwf	?___ftmul+1
  4084  0D00  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4085  0D05  27E8  120A  158A   	fcall	PL25	;call to abstracted procedure
  4086  0D08  1BF8               	btfsc	?___awdiv+2,7
  4087  0D09  03F9               	decf	?___awdiv+3,f
  4088  0D0A  266A  120A  158A   	fcall	___awdiv
  4089  0D0D  27AF               	fcall	PL8	;call to abstracted procedure
  4090  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4091  0D0F  0084               	movwf	4
  4092  0D10  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4093  0D15  00B2               	movwf	?___ftmul+3
  4094  0D16  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4095  0D1B  00B3               	movwf	?___ftmul+4
  4096  0D1C  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4097  0D21  00B4               	movwf	?___ftmul+5
  4098  0D22  26EC  120A  158A   	fcall	___ftmul
  4099  0D25  27BE  120A  158A   	fcall	PL10	;call to abstracted procedure
  4100  0D28  1BF2               	btfsc	?___awmod+2,7
  4101  0D29  03F3               	decf	?___awmod+3,f
  4102  0D2A  26AF  120A  158A   	fcall	___awmod
  4103  0D2D  27A7               	fcall	PL7	;call to abstracted procedure
  4104  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  4105  0D2F  0084               	movwf	4
  4106  0D30  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4107  0D35  00AF               	movwf	?___ftmul
  4108  0D36  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4109  0D3B  00B0               	movwf	?___ftmul+1
  4110  0D3C  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4111  0D41  27F0  120A  158A   	fcall	PL26	;call to abstracted procedure
  4112  0D44  26EC  120A  158A   	fcall	___ftmul
  4113  0D47  2FB7               	ljmp	PL9	;call to abstracted procedure
  4114  0D48                     l6802:	
  4115  0D48  0848               	movf	scale@scl,w
  4116  0D49  3A80               	xorlw	128
  4117  0D4A  3E75               	addlw	-139
  4118  0D4B  1C03               	skipc
  4119  0D4C  2D8D               	goto	l6808
  4120  0D4D  300A               	movlw	10
  4121  0D4E  00F0               	movwf	?___awmod
  4122  0D4F  01F1               	clrf	?___awmod+1
  4123  0D50  0848               	movf	scale@scl,w
  4124  0D51  00F2               	movwf	?___awmod+2
  4125  0D52  01F3               	clrf	?___awmod+3
  4126  0D53  1BF2               	btfsc	?___awmod+2,7
  4127  0D54  03F3               	decf	?___awmod+3,f
  4128  0D55  26AF  120A  158A   	fcall	___awmod
  4129  0D58  27A7               	fcall	PL7	;call to abstracted procedure
  4130  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  4131  0D5A  0084               	movwf	4
  4132  0D5B  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4133  0D60  00AF               	movwf	?___ftmul
  4134  0D61  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4135  0D66  00B0               	movwf	?___ftmul+1
  4136  0D67  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4137  0D6C  27F8  120A  158A   	fcall	PL27	;call to abstracted procedure
  4138  0D6F  1BF8               	btfsc	?___awdiv+2,7
  4139  0D70  03F9               	decf	?___awdiv+3,f
  4140  0D71  266A  120A  158A   	fcall	___awdiv
  4141  0D74  27AF               	fcall	PL8	;call to abstracted procedure
  4142  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4143  0D76  0084               	movwf	4
  4144  0D77  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4145  0D7C  00B2               	movwf	?___ftmul+3
  4146  0D7D  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4147  0D82  00B3               	movwf	?___ftmul+4
  4148  0D83  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4149  0D88  00B4               	movwf	?___ftmul+5
  4150  0D89  26EC  120A  158A   	fcall	___ftmul
  4151  0D8C  2FB7               	ljmp	PL9	;call to abstracted procedure
  4152  0D8D                     l6808:	
  4153  0D8D  3003               	movlw	3
  4154  0D8E  00F9               	movwf	?___bmul
  4155  0D8F  0848               	movf	scale@scl,w
  4156  0D90  275B               	fcall	___bmul
  4157  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  4158  0D92  0084               	movwf	4
  4159  0D93  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4160  0D98  00BE               	movwf	?_scale
  4161  0D99  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4162  0D9E  00BF               	movwf	?_scale+1
  4163  0D9F  120A  158A  2000   	fcall	stringdir
  4164  0DA2  00C0               	movwf	?_scale+2
  4165  0DA3  0008               	return
  4166  0DA4                     l6812:	
  4167  0DA4  0848               	movf	scale@scl,w
  4168  0DA5  3A80               	xorlw	128
  4169  0DA6  3E12               	addlw	-238
  4170  0DA7  1C03               	skipc
  4171  0DA8  2E0E               	goto	l6820
  4172  0DA9  300A               	movlw	10
  4173  0DAA  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  4174  0DAD  26AF  120A  158A   	fcall	___awmod
  4175  0DB0  0871               	movf	?___awmod+1,w
  4176  0DB1  00F9               	movwf	?___awdiv+3
  4177  0DB2  0870               	movf	?___awmod,w
  4178  0DB3  00F8               	movwf	?___awdiv+2
  4179  0DB4  266A  120A  158A   	fcall	___awdiv
  4180  0DB7  27E0               	fcall	PL23	;call to abstracted procedure
  4181  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  4182  0DB9  0084               	movwf	4
  4183  0DBA  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4184  0DBF  00AF               	movwf	?___ftmul
  4185  0DC0  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4186  0DC5  00B0               	movwf	?___ftmul+1
  4187  0DC6  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4188  0DCB  27E8  120A  158A   	fcall	PL25	;call to abstracted procedure
  4189  0DCE  1BF8               	btfsc	?___awdiv+2,7
  4190  0DCF  03F9               	decf	?___awdiv+3,f
  4191  0DD0  266A  120A  158A   	fcall	___awdiv
  4192  0DD3  27AF               	fcall	PL8	;call to abstracted procedure
  4193  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  4194  0DD5  0084               	movwf	4
  4195  0DD6  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4196  0DDB  00B2               	movwf	?___ftmul+3
  4197  0DDC  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4198  0DE1  00B3               	movwf	?___ftmul+4
  4199  0DE2  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4200  0DE7  00B4               	movwf	?___ftmul+5
  4201  0DE8  26EC  120A  158A   	fcall	___ftmul
  4202  0DEB  27BE  120A  158A   	fcall	PL10	;call to abstracted procedure
  4203  0DEE  1BF2               	btfsc	?___awmod+2,7
  4204  0DEF  03F3               	decf	?___awmod+3,f
  4205  0DF0  26AF  120A  158A   	fcall	___awmod
  4206  0DF3  27A7               	fcall	PL7	;call to abstracted procedure
  4207  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  4208  0DF5  0084               	movwf	4
  4209  0DF6  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4210  0DFB  00AF               	movwf	?___ftmul
  4211  0DFC  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4212  0E01  00B0               	movwf	?___ftmul+1
  4213  0E02  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4214  0E07  27F0  120A  158A   	fcall	PL26	;call to abstracted procedure
  4215  0E0A  26EC  120A  158A   	fcall	___ftmul
  4216  0E0D  2FB7               	ljmp	PL9	;call to abstracted procedure
  4217  0E0E                     l6820:	
  4218  0E0E  0848               	movf	scale@scl,w
  4219  0E0F  3A80               	xorlw	128
  4220  0E10  3E75               	addlw	-139
  4221  0E11  1C03               	skipc
  4222  0E12  2E53               	goto	l6826
  4223  0E13  300A               	movlw	10
  4224  0E14  00F0               	movwf	?___awmod
  4225  0E15  01F1               	clrf	?___awmod+1
  4226  0E16  0848               	movf	scale@scl,w
  4227  0E17  00F2               	movwf	?___awmod+2
  4228  0E18  01F3               	clrf	?___awmod+3
  4229  0E19  1BF2               	btfsc	?___awmod+2,7
  4230  0E1A  03F3               	decf	?___awmod+3,f
  4231  0E1B  26AF  120A  158A   	fcall	___awmod
  4232  0E1E  27A7               	fcall	PL7	;call to abstracted procedure
  4233  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  4234  0E20  0084               	movwf	4
  4235  0E21  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4236  0E26  00AF               	movwf	?___ftmul
  4237  0E27  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4238  0E2C  00B0               	movwf	?___ftmul+1
  4239  0E2D  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4240  0E32  27F8  120A  158A   	fcall	PL27	;call to abstracted procedure
  4241  0E35  1BF8               	btfsc	?___awdiv+2,7
  4242  0E36  03F9               	decf	?___awdiv+3,f
  4243  0E37  266A  120A  158A   	fcall	___awdiv
  4244  0E3A  27AF               	fcall	PL8	;call to abstracted procedure
  4245  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  4246  0E3C  0084               	movwf	4
  4247  0E3D  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4248  0E42  00B2               	movwf	?___ftmul+3
  4249  0E43  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4250  0E48  00B3               	movwf	?___ftmul+4
  4251  0E49  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4252  0E4E  00B4               	movwf	?___ftmul+5
  4253  0E4F  26EC  120A  158A   	fcall	___ftmul
  4254  0E52  2FB7               	ljmp	PL9	;call to abstracted procedure
  4255  0E53                     l6826:	
  4256  0E53  3003               	movlw	3
  4257  0E54  00F9               	movwf	?___bmul
  4258  0E55  0848               	movf	scale@scl,w
  4259  0E56  275B               	fcall	___bmul
  4260  0E57  3E28               	addlw	low (__powers_-__stringbase)
  4261  0E58  0084               	movwf	4
  4262  0E59  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4263  0E5E  00BE               	movwf	?_scale
  4264  0E5F  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4265  0E64  00BF               	movwf	?_scale+1
  4266  0E65  120A  158A  2000   	fcall	stringdir
  4267  0E68  00C0               	movwf	?_scale+2
  4268  0E69  0008               	return
  4269  0E6A                     __end_of_scale:	
  4270  0E6A                     __ptext569:	
  4271 ;; =============== function ___llmod ends ============
  4272                           
  4273                           
  4274 ;; *************** function ___awdiv *****************
  4275 ;; Defined at:
  4276 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  divisor         2    6[COMMON] int 
  4279 ;;  dividend        2    8[COMMON] int 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  quotient        2   12[COMMON] int 
  4282 ;;  sign            1   11[COMMON] unsigned char 
  4283 ;;  counter         1   10[COMMON] unsigned char 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  2    6[COMMON] int 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0
  4288 ;; Tracked objects:
  4289 ;;		On entry : 40/20
  4290 ;;		On exit  : 40/20
  4291 ;;		Unchanged: FFFBF/0
  4292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4293 ;;      Params:         4       0       0       0       0
  4294 ;;      Locals:         4       0       0       0       0
  4295 ;;      Temps:          0       0       0       0       0
  4296 ;;      Totals:         8       0       0       0       0
  4297 ;;Total ram usage:        8 bytes
  4298 ;; Hardware stack levels used:    1
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_scale
  4303 ;;		_printf
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306  0E6A                     ___awdiv:	
  4307                           
  4308                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4309  0E6A  01FB               	clrf	___awdiv@sign
  4310  0E6B  1FF7               	btfss	___awdiv@divisor+1,7
  4311  0E6C  2E74               	goto	l6302
  4312  0E6D  09F6               	comf	___awdiv@divisor,f
  4313  0E6E  09F7               	comf	___awdiv@divisor+1,f
  4314  0E6F  0AF6               	incf	___awdiv@divisor,f
  4315  0E70  1903               	skipnz
  4316  0E71  0AF7               	incf	___awdiv@divisor+1,f
  4317  0E72  01FB               	clrf	___awdiv@sign
  4318  0E73  0AFB               	incf	___awdiv@sign,f
  4319  0E74                     l6302:	
  4320  0E74  1FF9               	btfss	___awdiv@dividend+1,7
  4321  0E75  2E7D               	goto	l6308
  4322  0E76  09F8               	comf	___awdiv@dividend,f
  4323  0E77  09F9               	comf	___awdiv@dividend+1,f
  4324  0E78  0AF8               	incf	___awdiv@dividend,f
  4325  0E79  1903               	skipnz
  4326  0E7A  0AF9               	incf	___awdiv@dividend+1,f
  4327  0E7B  3001               	movlw	1
  4328  0E7C  06FB               	xorwf	___awdiv@sign,f
  4329  0E7D                     l6308:	
  4330  0E7D  01FC               	clrf	___awdiv@quotient
  4331  0E7E  01FD               	clrf	___awdiv@quotient+1
  4332  0E7F  0877               	movf	___awdiv@divisor+1,w
  4333  0E80  0476               	iorwf	___awdiv@divisor,w
  4334  0E81  1903               	skipnz
  4335  0E82  2EA2               	goto	l6330
  4336  0E83  01FA               	clrf	___awdiv@counter
  4337  0E84                     L15:	
  4338  0E84  0AFA               	incf	___awdiv@counter,f
  4339  0E85  1BF7               	btfsc	___awdiv@divisor+1,7
  4340  0E86  2E8B               	goto	l6318
  4341  0E87  1003               	clrc
  4342  0E88  0DF6               	rlf	___awdiv@divisor,f
  4343  0E89  0DF7               	rlf	___awdiv@divisor+1,f
  4344  0E8A  2E84               	goto	L15
  4345  0E8B                     l6318:	
  4346  0E8B  1003               	clrc
  4347  0E8C  0DFC               	rlf	___awdiv@quotient,f
  4348  0E8D  0DFD               	rlf	___awdiv@quotient+1,f
  4349  0E8E  0877               	movf	___awdiv@divisor+1,w
  4350  0E8F  0279               	subwf	___awdiv@dividend+1,w
  4351  0E90  1D03               	skipz
  4352  0E91  2E94               	goto	u2415
  4353  0E92  0876               	movf	___awdiv@divisor,w
  4354  0E93  0278               	subwf	___awdiv@dividend,w
  4355  0E94                     u2415:	
  4356  0E94  1C03               	skipc
  4357  0E95  2E9E               	goto	L16
  4358  0E96  0876               	movf	___awdiv@divisor,w
  4359  0E97  02F8               	subwf	___awdiv@dividend,f
  4360  0E98  0877               	movf	___awdiv@divisor+1,w
  4361  0E99  1C03               	skipc
  4362  0E9A  03F9               	decf	___awdiv@dividend+1,f
  4363  0E9B  02F9               	subwf	___awdiv@dividend+1,f
  4364  0E9C  147C               	bsf	___awdiv@quotient,0
  4365  0E9D  1003               	clrc
  4366  0E9E                     L16:	
  4367  0E9E  0CF7               	rrf	___awdiv@divisor+1,f
  4368  0E9F  0CF6               	rrf	___awdiv@divisor,f
  4369  0EA0  0BFA               	decfsz	___awdiv@counter,f
  4370  0EA1  2E8B               	goto	l6318
  4371  0EA2                     l6330:	
  4372  0EA2  087B               	movf	___awdiv@sign,w
  4373  0EA3  1903               	btfsc	3,2
  4374  0EA4  2EAA               	goto	l6334
  4375  0EA5  09FC               	comf	___awdiv@quotient,f
  4376  0EA6  09FD               	comf	___awdiv@quotient+1,f
  4377  0EA7  0AFC               	incf	___awdiv@quotient,f
  4378  0EA8  1903               	skipnz
  4379  0EA9  0AFD               	incf	___awdiv@quotient+1,f
  4380  0EAA                     l6334:	
  4381  0EAA  087D               	movf	___awdiv@quotient+1,w
  4382  0EAB  00F7               	movwf	?___awdiv+1
  4383  0EAC  087C               	movf	___awdiv@quotient,w
  4384  0EAD  00F6               	movwf	?___awdiv
  4385  0EAE  0008               	return
  4386  0EAF                     __end_of___awdiv:	
  4387  0EAF                     __ptext564:	
  4388 ;; =============== function _lcd_put_byte ends ============
  4389                           
  4390                           
  4391 ;; *************** function ___awmod *****************
  4392 ;; Defined at:
  4393 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  divisor         2    0[COMMON] int 
  4396 ;;  dividend        2    2[COMMON] int 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  sign            1    5[COMMON] unsigned char 
  4399 ;;  counter         1    4[COMMON] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2    0[COMMON] int 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 60/0
  4406 ;;		On exit  : 60/0
  4407 ;;		Unchanged: FFF9F/0
  4408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4409 ;;      Params:         4       0       0       0       0
  4410 ;;      Locals:         2       0       0       0       0
  4411 ;;      Temps:          0       0       0       0       0
  4412 ;;      Totals:         6       0       0       0       0
  4413 ;;Total ram usage:        6 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; This function calls:
  4416 ;;		Nothing
  4417 ;; This function is called by:
  4418 ;;		_scale
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421  0EAF                     ___awmod:	
  4422                           
  4423                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4424  0EAF  01F5               	clrf	___awmod@sign
  4425  0EB0  1FF3               	btfss	___awmod@dividend+1,7
  4426  0EB1  2EB9               	goto	l6420
  4427  0EB2  09F2               	comf	___awmod@dividend,f
  4428  0EB3  09F3               	comf	___awmod@dividend+1,f
  4429  0EB4  0AF2               	incf	___awmod@dividend,f
  4430  0EB5  1903               	skipnz
  4431  0EB6  0AF3               	incf	___awmod@dividend+1,f
  4432  0EB7  01F5               	clrf	___awmod@sign
  4433  0EB8  0AF5               	incf	___awmod@sign,f
  4434  0EB9                     l6420:	
  4435  0EB9  1FF1               	btfss	___awmod@divisor+1,7
  4436  0EBA  2EC0               	goto	l6424
  4437  0EBB  09F0               	comf	___awmod@divisor,f
  4438  0EBC  09F1               	comf	___awmod@divisor+1,f
  4439  0EBD  0AF0               	incf	___awmod@divisor,f
  4440  0EBE  1903               	skipnz
  4441  0EBF  0AF1               	incf	___awmod@divisor+1,f
  4442  0EC0                     l6424:	
  4443  0EC0  0871               	movf	___awmod@divisor+1,w
  4444  0EC1  0470               	iorwf	___awmod@divisor,w
  4445  0EC2  1903               	skipnz
  4446  0EC3  2EDF               	goto	l6440
  4447  0EC4  01F4               	clrf	___awmod@counter
  4448  0EC5                     L8:	
  4449  0EC5  0AF4               	incf	___awmod@counter,f
  4450  0EC6  1BF1               	btfsc	___awmod@divisor+1,7
  4451  0EC7  2ECC               	goto	l6432
  4452  0EC8  1003               	clrc
  4453  0EC9  0DF0               	rlf	___awmod@divisor,f
  4454  0ECA  0DF1               	rlf	___awmod@divisor+1,f
  4455  0ECB  2EC5               	goto	L8
  4456  0ECC                     l6432:	
  4457  0ECC  0871               	movf	___awmod@divisor+1,w
  4458  0ECD  0273               	subwf	___awmod@dividend+1,w
  4459  0ECE  1D03               	skipz
  4460  0ECF  2ED2               	goto	u2605
  4461  0ED0  0870               	movf	___awmod@divisor,w
  4462  0ED1  0272               	subwf	___awmod@dividend,w
  4463  0ED2                     u2605:	
  4464  0ED2  1C03               	skipc
  4465  0ED3  2EDB               	goto	L9
  4466  0ED4  0870               	movf	___awmod@divisor,w
  4467  0ED5  02F2               	subwf	___awmod@dividend,f
  4468  0ED6  0871               	movf	___awmod@divisor+1,w
  4469  0ED7  1C03               	skipc
  4470  0ED8  03F3               	decf	___awmod@dividend+1,f
  4471  0ED9  02F3               	subwf	___awmod@dividend+1,f
  4472  0EDA  1003               	clrc
  4473  0EDB                     L9:	
  4474  0EDB  0CF1               	rrf	___awmod@divisor+1,f
  4475  0EDC  0CF0               	rrf	___awmod@divisor,f
  4476  0EDD  0BF4               	decfsz	___awmod@counter,f
  4477  0EDE  2ECC               	goto	l6432
  4478  0EDF                     l6440:	
  4479  0EDF  0875               	movf	___awmod@sign,w
  4480  0EE0  1903               	btfsc	3,2
  4481  0EE1  2EE7               	goto	l6444
  4482  0EE2  09F2               	comf	___awmod@dividend,f
  4483  0EE3  09F3               	comf	___awmod@dividend+1,f
  4484  0EE4  0AF2               	incf	___awmod@dividend,f
  4485  0EE5  1903               	skipnz
  4486  0EE6  0AF3               	incf	___awmod@dividend+1,f
  4487  0EE7                     l6444:	
  4488  0EE7  0873               	movf	___awmod@dividend+1,w
  4489  0EE8  00F1               	movwf	?___awmod+1
  4490  0EE9  0872               	movf	___awmod@dividend,w
  4491  0EEA  00F0               	movwf	?___awmod
  4492  0EEB  0008               	return
  4493  0EEC                     __end_of___awmod:	
  4494  0EEC                     __ptext559:	
  4495 ;; =============== function ___awtoft ends ============
  4496                           
  4497                           
  4498 ;; *************** function ___ftmul *****************
  4499 ;; Defined at:
  4500 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  f1              3   15[BANK0 ] float 
  4503 ;;  f2              3   18[BANK0 ] float 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  f3_as_produc    3   25[BANK0 ] unsigned um
  4506 ;;  sign            1   29[BANK0 ] unsigned char 
  4507 ;;  cntr            1   28[BANK0 ] unsigned char 
  4508 ;;  exp             1   24[BANK0 ] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  3   15[BANK0 ] float 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, pclath, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 60/0
  4515 ;;		On exit  : 60/0
  4516 ;;		Unchanged: FFF9F/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4518 ;;      Params:         0       6       0       0       0
  4519 ;;      Locals:         0       6       0       0       0
  4520 ;;      Temps:          0       3       0       0       0
  4521 ;;      Totals:         0      15       0       0       0
  4522 ;;Total ram usage:       15 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    1
  4525 ;; This function calls:
  4526 ;;		___ftpack
  4527 ;; This function is called by:
  4528 ;;		_read_adc_AN3
  4529 ;;		_read_adc_AN12
  4530 ;;		_fround
  4531 ;;		_scale
  4532 ;;		_printf
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535  0EEC                     ___ftmul:	
  4536                           
  4537                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4538  0EEC  082F               	movf	___ftmul@f1,w
  4539  0EED  00B5               	movwf	??___ftmul
  4540  0EEE  0830               	movf	___ftmul@f1+1,w
  4541  0EEF  00B6               	movwf	??___ftmul+1
  4542  0EF0  0831               	movf	___ftmul@f1+2,w
  4543  0EF1  00B7               	movwf	??___ftmul+2
  4544  0EF2  1003               	clrc
  4545  0EF3  0D36               	rlf	??___ftmul+1,w
  4546  0EF4  0D37               	rlf	??___ftmul+2,w
  4547  0EF5  00B8               	movwf	___ftmul@exp
  4548  0EF6  08B8               	movf	___ftmul@exp,f
  4549  0EF7  1D03               	skipz
  4550  0EF8  2EFD               	goto	l6626
  4551  0EF9  01AF               	clrf	?___ftmul
  4552  0EFA  01B0               	clrf	?___ftmul+1
  4553  0EFB  01B1               	clrf	?___ftmul+2
  4554  0EFC  0008               	return
  4555  0EFD                     l6626:	
  4556  0EFD  0832               	movf	___ftmul@f2,w
  4557  0EFE  00B5               	movwf	??___ftmul
  4558  0EFF  0833               	movf	___ftmul@f2+1,w
  4559  0F00  00B6               	movwf	??___ftmul+1
  4560  0F01  0834               	movf	___ftmul@f2+2,w
  4561  0F02  00B7               	movwf	??___ftmul+2
  4562  0F03  1003               	clrc
  4563  0F04  0D36               	rlf	??___ftmul+1,w
  4564  0F05  0D37               	rlf	??___ftmul+2,w
  4565  0F06  00BD               	movwf	___ftmul@sign
  4566  0F07  08BD               	movf	___ftmul@sign,f
  4567  0F08  1D03               	skipz
  4568  0F09  2F0E               	goto	l6632
  4569  0F0A  01AF               	clrf	?___ftmul
  4570  0F0B  01B0               	clrf	?___ftmul+1
  4571  0F0C  01B1               	clrf	?___ftmul+2
  4572  0F0D  0008               	return
  4573  0F0E                     l6632:	
  4574  0F0E  083D               	movf	___ftmul@sign,w
  4575  0F0F  3E7B               	addlw	123
  4576  0F10  07B8               	addwf	___ftmul@exp,f
  4577  0F11  0831               	movf	___ftmul@f1+2,w
  4578  0F12  00BD               	movwf	___ftmul@sign
  4579  0F13  0834               	movf	___ftmul@f2+2,w
  4580  0F14  06BD               	xorwf	___ftmul@sign,f
  4581  0F15  3080               	movlw	128
  4582  0F16  05BD               	andwf	___ftmul@sign,f
  4583  0F17  3007               	movlw	7
  4584  0F18  17B0               	bsf	___ftmul@f1+1,7
  4585  0F19  17B3               	bsf	___ftmul@f2+1,7
  4586  0F1A  01B4               	clrf	___ftmul@f2+2
  4587  0F1B  01B9               	clrf	___ftmul@f3_as_product
  4588  0F1C  01BA               	clrf	___ftmul@f3_as_product+1
  4589  0F1D  01BB               	clrf	___ftmul@f3_as_product+2
  4590  0F1E  00BC               	movwf	___ftmul@cntr
  4591  0F1F                     l6650:	
  4592  0F1F  1C2F               	btfss	___ftmul@f1,0
  4593  0F20  2F29               	goto	l6654
  4594  0F21  0832               	movf	___ftmul@f2,w
  4595  0F22  27D6  120A  158A   	fcall	PL20	;call to abstracted procedure
  4596  0F25  1803               	skipnc
  4597  0F26  0A34               	incf	___ftmul@f2+2,w
  4598  0F27  1D03               	btfss	3,2
  4599  0F28  07BB               	addwf	___ftmul@f3_as_product+2,f
  4600  0F29                     l6654:	
  4601  0F29  1003               	clrc
  4602  0F2A  0CB1               	rrf	___ftmul@f1+2,f
  4603  0F2B  0CB0               	rrf	___ftmul@f1+1,f
  4604  0F2C  0CAF               	rrf	___ftmul@f1,f
  4605  0F2D  1003               	clrc
  4606  0F2E  0DB2               	rlf	___ftmul@f2,f
  4607  0F2F  0DB3               	rlf	___ftmul@f2+1,f
  4608  0F30  0DB4               	rlf	___ftmul@f2+2,f
  4609  0F31  0BBC               	decfsz	___ftmul@cntr,f
  4610  0F32  2F1F               	goto	l6650
  4611  0F33  3009               	movlw	9
  4612  0F34  00BC               	movwf	___ftmul@cntr
  4613  0F35                     l6662:	
  4614  0F35  1C2F               	btfss	___ftmul@f1,0
  4615  0F36  2F3F               	goto	l6666
  4616  0F37  0832               	movf	___ftmul@f2,w
  4617  0F38  27D6  120A  158A   	fcall	PL20	;call to abstracted procedure
  4618  0F3B  1803               	skipnc
  4619  0F3C  0A34               	incf	___ftmul@f2+2,w
  4620  0F3D  1D03               	btfss	3,2
  4621  0F3E  07BB               	addwf	___ftmul@f3_as_product+2,f
  4622  0F3F                     l6666:	
  4623  0F3F  1003               	clrc
  4624  0F40  0CB1               	rrf	___ftmul@f1+2,f
  4625  0F41  0CB0               	rrf	___ftmul@f1+1,f
  4626  0F42  0CAF               	rrf	___ftmul@f1,f
  4627  0F43  1003               	clrc
  4628  0F44  0CBB               	rrf	___ftmul@f3_as_product+2,f
  4629  0F45  0CBA               	rrf	___ftmul@f3_as_product+1,f
  4630  0F46  0CB9               	rrf	___ftmul@f3_as_product,f
  4631  0F47  0BBC               	decfsz	___ftmul@cntr,f
  4632  0F48  2F35               	goto	l6662
  4633  0F49  0839               	movf	___ftmul@f3_as_product,w
  4634  0F4A  00F0               	movwf	?___ftpack
  4635  0F4B  083A               	movf	___ftmul@f3_as_product+1,w
  4636  0F4C  00F1               	movwf	?___ftpack+1
  4637  0F4D  083B               	movf	___ftmul@f3_as_product+2,w
  4638  0F4E  00F2               	movwf	?___ftpack+2
  4639  0F4F  0838               	movf	___ftmul@exp,w
  4640  0F50  00F3               	movwf	?___ftpack+3
  4641  0F51  083D               	movf	___ftmul@sign,w
  4642  0F52  00F4               	movwf	?___ftpack+4
  4643  0F53  2769               	fcall	___ftpack
  4644  0F54  0870               	movf	?___ftpack,w
  4645  0F55  00AF               	movwf	?___ftmul
  4646  0F56  0871               	movf	?___ftpack+1,w
  4647  0F57  00B0               	movwf	?___ftmul+1
  4648  0F58  0872               	movf	?___ftpack+2,w
  4649  0F59  00B1               	movwf	?___ftmul+2
  4650  0F5A  0008               	return
  4651  0F5B                     __end_of___ftmul:	
  4652  0F5B                     __ptext575:	
  4653 ;; =============== function ___wmul ends ============
  4654                           
  4655                           
  4656 ;; *************** function ___bmul *****************
  4657 ;; Defined at:
  4658 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  multiplier      1    wreg     unsigned char 
  4661 ;;  multiplicand    1    9[COMMON] unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  multiplier      1   11[COMMON] unsigned char 
  4664 ;;  product         1   10[COMMON] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      unsigned char 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0
  4669 ;; Tracked objects:
  4670 ;;		On entry : 60/0
  4671 ;;		On exit  : 60/0
  4672 ;;		Unchanged: FFF9F/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4674 ;;      Params:         1       0       0       0       0
  4675 ;;      Locals:         2       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0
  4677 ;;      Totals:         3       0       0       0       0
  4678 ;;Total ram usage:        3 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_fround
  4684 ;;		_scale
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687  0F5B                     ___bmul:	
  4688                           
  4689                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4690                           ;___bmul@multiplier stored from wreg
  4691  0F5B  00FB               	movwf	___bmul@multiplier
  4692  0F5C  01FA               	clrf	___bmul@product
  4693  0F5D                     l4946:	
  4694  0F5D  0879               	movf	___bmul@multiplicand,w
  4695  0F5E  187B               	btfsc	___bmul@multiplier,0
  4696  0F5F  07FA               	addwf	___bmul@product,f
  4697  0F60  1003               	clrc
  4698  0F61  0DF9               	rlf	___bmul@multiplicand,f
  4699  0F62  1003               	clrc
  4700  0F63  0CFB               	rrf	___bmul@multiplier,f
  4701  0F64  08FB               	movf	___bmul@multiplier,f
  4702  0F65  1D03               	skipz
  4703  0F66  2F5D               	goto	l4946
  4704  0F67  087A               	movf	___bmul@product,w
  4705  0F68  0008               	return
  4706  0F69                     __end_of___bmul:	
  4707  0F69                     __ptext571:	
  4708 ;; =============== function ___fttol ends ============
  4709                           
  4710                           
  4711 ;; *************** function ___ftpack *****************
  4712 ;; Defined at:
  4713 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  arg             3    0[COMMON] unsigned um
  4716 ;;  exp             1    3[COMMON] unsigned char 
  4717 ;;  sign            1    4[COMMON] unsigned char 
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;                  3    0[COMMON] float 
  4722 ;; Registers used:
  4723 ;;		wreg, status,2, status,0
  4724 ;; Tracked objects:
  4725 ;;		On entry : 40/20
  4726 ;;		On exit  : 40/20
  4727 ;;		Unchanged: FFFBF/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4729 ;;      Params:         5       0       0       0       0
  4730 ;;      Locals:         0       0       0       0       0
  4731 ;;      Temps:          3       0       0       0       0
  4732 ;;      Totals:         8       0       0       0       0
  4733 ;;Total ram usage:        8 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		___ftadd
  4739 ;;		___ftdiv
  4740 ;;		___ftmul
  4741 ;;		___awtoft
  4742 ;;		___lltoft
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745  0F69                     ___ftpack:	
  4746                           
  4747                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4748  0F69  0873               	movf	___ftpack@exp,w
  4749  0F6A  1903               	btfsc	3,2
  4750  0F6B  2F71               	goto	l6232
  4751  0F6C  0872               	movf	___ftpack@arg+2,w
  4752  0F6D  0471               	iorwf	___ftpack@arg+1,w
  4753  0F6E  0470               	iorwf	___ftpack@arg,w
  4754  0F6F  1D03               	skipz
  4755  0F70  2F7A               	goto	l6238
  4756  0F71                     l6232:	
  4757  0F71  01F0               	clrf	?___ftpack
  4758  0F72  01F1               	clrf	?___ftpack+1
  4759  0F73  01F2               	clrf	?___ftpack+2
  4760  0F74  0008               	return
  4761  0F75                     l6236:	
  4762  0F75  0AF3               	incf	___ftpack@exp,f
  4763  0F76  1003               	clrc
  4764  0F77  0CF2               	rrf	___ftpack@arg+2,f
  4765  0F78  0CF1               	rrf	___ftpack@arg+1,f
  4766  0F79  0CF0               	rrf	___ftpack@arg,f
  4767  0F7A                     l6238:	
  4768  0F7A  30FE               	movlw	254
  4769  0F7B  0572               	andwf	___ftpack@arg+2,w
  4770  0F7C  1903               	btfsc	3,2
  4771  0F7D  2F89               	goto	l6242
  4772  0F7E  2F75               	goto	l6236
  4773  0F7F                     l6240:	
  4774  0F7F  0AF3               	incf	___ftpack@exp,f
  4775  0F80  0AF0               	incf	___ftpack@arg,f
  4776  0F81  1903               	skipnz
  4777  0F82  0AF1               	incf	___ftpack@arg+1,f
  4778  0F83  1903               	skipnz
  4779  0F84  0AF2               	incf	___ftpack@arg+2,f
  4780  0F85  1003               	clrc
  4781  0F86  0CF2               	rrf	___ftpack@arg+2,f
  4782  0F87  0CF1               	rrf	___ftpack@arg+1,f
  4783  0F88  0CF0               	rrf	___ftpack@arg,f
  4784  0F89                     l6242:	
  4785  0F89  30FF               	movlw	255
  4786  0F8A  0572               	andwf	___ftpack@arg+2,w
  4787  0F8B  1903               	btfsc	3,2
  4788  0F8C  2F93               	goto	l6246
  4789  0F8D  2F7F               	goto	l6240
  4790  0F8E                     l6244:	
  4791  0F8E  03F3               	decf	___ftpack@exp,f
  4792  0F8F  1003               	clrc
  4793  0F90  0DF0               	rlf	___ftpack@arg,f
  4794  0F91  0DF1               	rlf	___ftpack@arg+1,f
  4795  0F92  0DF2               	rlf	___ftpack@arg+2,f
  4796  0F93                     l6246:	
  4797  0F93  1FF1               	btfss	___ftpack@arg+1,7
  4798  0F94  2F8E               	goto	l6244
  4799  0F95  1C73               	btfss	___ftpack@exp,0
  4800  0F96  13F1               	bcf	___ftpack@arg+1,7
  4801  0F97  1003               	clrc
  4802  0F98  0CF3               	rrf	___ftpack@exp,f
  4803  0F99  0873               	movf	___ftpack@exp,w
  4804  0F9A  00F7               	movwf	??___ftpack+2
  4805  0F9B  01F6               	clrf	??___ftpack+1
  4806  0F9C  01F5               	clrf	??___ftpack
  4807  0F9D  0875               	movf	??___ftpack,w
  4808  0F9E  04F0               	iorwf	___ftpack@arg,f
  4809  0F9F  0876               	movf	??___ftpack+1,w
  4810  0FA0  04F1               	iorwf	___ftpack@arg+1,f
  4811  0FA1  0877               	movf	??___ftpack+2,w
  4812  0FA2  04F2               	iorwf	___ftpack@arg+2,f
  4813  0FA3  0874               	movf	___ftpack@sign,w
  4814  0FA4  1D03               	skipz
  4815  0FA5  17F2               	bsf	___ftpack@arg+2,7
  4816  0FA6  0008               	return
  4817  0FA7                     __end_of___ftpack:	
  4818  0FA7                     PL7:	
  4819  0FA7  0870               	movf	?___awmod,w
  4820  0FA8  00C1               	movwf	??_scale
  4821  0FA9  0871               	movf	?___awmod+1,w
  4822  0FAA  00C2               	movwf	??_scale+1
  4823  0FAB  0841               	movf	??_scale,w
  4824  0FAC  0741               	addwf	??_scale,w
  4825  0FAD  0741               	addwf	??_scale,w
  4826  0FAE  0008               	return
  4827  0FAF                     PL8:	
  4828  0FAF  0876               	movf	?___awdiv,w
  4829  0FB0  00C3               	movwf	??_scale+2
  4830  0FB1  0877               	movf	?___awdiv+1,w
  4831  0FB2  00C4               	movwf	??_scale+3
  4832  0FB3  0843               	movf	??_scale+2,w
  4833  0FB4  0743               	addwf	??_scale+2,w
  4834  0FB5  0743               	addwf	??_scale+2,w
  4835  0FB6  0008               	return
  4836  0FB7                     PL9:	
  4837  0FB7  082F               	movf	?___ftmul,w
  4838  0FB8  00BE               	movwf	?_scale
  4839  0FB9  0830               	movf	?___ftmul+1,w
  4840  0FBA  00BF               	movwf	?_scale+1
  4841  0FBB  0831               	movf	?___ftmul+2,w
  4842  0FBC  00C0               	movwf	?_scale+2
  4843  0FBD  0008               	return
  4844  0FBE                     PL10:	
  4845  0FBE  082F               	movf	?___ftmul,w
  4846  0FBF  00C5               	movwf	_scale$4112
  4847  0FC0  0830               	movf	?___ftmul+1,w
  4848  0FC1  00C6               	movwf	_scale$4112+1
  4849  0FC2  0831               	movf	?___ftmul+2,w
  4850  0FC3  00C7               	movwf	_scale$4112+2
  4851  0FC4  300A               	movlw	10
  4852  0FC5  00F0               	movwf	?___awmod
  4853  0FC6  01F1               	clrf	?___awmod+1
  4854  0FC7  0848               	movf	scale@scl,w
  4855  0FC8  00F2               	movwf	?___awmod+2
  4856  0FC9  01F3               	clrf	?___awmod+3
  4857  0FCA  0008               	return
  4858  0FCB                     PL15:	
  4859  0FCB  00F6               	movwf	?___awdiv
  4860  0FCC  01F7               	clrf	?___awdiv+1
  4861  0FCD  0848               	movf	scale@scl,w
  4862  0FCE  00F2               	movwf	?___awmod+2
  4863  0FCF  01F3               	clrf	?___awmod+3
  4864  0FD0  1BF2               	btfsc	?___awmod+2,7
  4865  0FD1  03F3               	decf	?___awmod+3,f
  4866  0FD2  3064               	movlw	100
  4867  0FD3  00F0               	movwf	?___awmod
  4868  0FD4  01F1               	clrf	?___awmod+1
  4869  0FD5  0008               	return
  4870  0FD6                     PL20:	
  4871  0FD6  07B9               	addwf	___ftmul@f3_as_product,f
  4872  0FD7  0833               	movf	___ftmul@f2+1,w
  4873  0FD8  1103               	clrz
  4874  0FD9  1803               	skipnc
  4875  0FDA  0A33               	incf	___ftmul@f2+1,w
  4876  0FDB  1D03               	btfss	3,2
  4877  0FDC  07BA               	addwf	___ftmul@f3_as_product+1,f
  4878  0FDD  0834               	movf	___ftmul@f2+2,w
  4879  0FDE  1103               	clrz
  4880  0FDF  0008               	return
  4881  0FE0                     PL23:	
  4882  0FE0  0876               	movf	?___awdiv,w
  4883  0FE1  00C1               	movwf	??_scale
  4884  0FE2  0877               	movf	?___awdiv+1,w
  4885  0FE3  00C2               	movwf	??_scale+1
  4886  0FE4  0841               	movf	??_scale,w
  4887  0FE5  0741               	addwf	??_scale,w
  4888  0FE6  0741               	addwf	??_scale,w
  4889  0FE7  0008               	return
  4890  0FE8                     PL25:	
  4891  0FE8  00B1               	movwf	?___ftmul+2
  4892  0FE9  3064               	movlw	100
  4893  0FEA  00F6               	movwf	?___awdiv
  4894  0FEB  01F7               	clrf	?___awdiv+1
  4895  0FEC  0848               	movf	scale@scl,w
  4896  0FED  00F8               	movwf	?___awdiv+2
  4897  0FEE  01F9               	clrf	?___awdiv+3
  4898  0FEF  0008               	return
  4899  0FF0                     PL26:	
  4900  0FF0  00B1               	movwf	?___ftmul+2
  4901  0FF1  0845               	movf	_scale$4112,w
  4902  0FF2  00B2               	movwf	?___ftmul+3
  4903  0FF3  0846               	movf	_scale$4112+1,w
  4904  0FF4  00B3               	movwf	?___ftmul+4
  4905  0FF5  0847               	movf	_scale$4112+2,w
  4906  0FF6  00B4               	movwf	?___ftmul+5
  4907  0FF7  0008               	return
  4908  0FF8                     PL27:	
  4909  0FF8  00B1               	movwf	?___ftmul+2
  4910  0FF9  300A               	movlw	10
  4911  0FFA  00F6               	movwf	?___awdiv
  4912  0FFB  01F7               	clrf	?___awdiv+1
  4913  0FFC  0848               	movf	scale@scl,w
  4914  0FFD  00F8               	movwf	?___awdiv+2
  4915  0FFE  01F9               	clrf	?___awdiv+3
  4916  0FFF  0008               	return
  4917                           
  4918                           	psect	text552
  4919  09B5                     __ptext552:	
  4920 ;; =============== function _scale ends ============
  4921                           
  4922                           
  4923 ;; *************** function _fround *****************
  4924 ;; Defined at:
  4925 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;  prec            1    wreg     unsigned char 
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;  prec            1   51[BANK0 ] unsigned char 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  3   42[BANK0 ] unsigned char 
  4932 ;; Registers used:
  4933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 60/20
  4936 ;;		On exit  : 60/0
  4937 ;;		Unchanged: FFF9F/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4939 ;;      Params:         0       3       0       0       0
  4940 ;;      Locals:         0       7       0       0       0
  4941 ;;      Temps:          0       0       0       0       0
  4942 ;;      Totals:         0      10       0       0       0
  4943 ;;Total ram usage:       10 bytes
  4944 ;; Hardware stack levels used:    1
  4945 ;; Hardware stack levels required when called:    2
  4946 ;; This function calls:
  4947 ;;		___lbmod
  4948 ;;		___bmul
  4949 ;;		___lbdiv
  4950 ;;		___ftmul
  4951 ;; This function is called by:
  4952 ;;		_printf
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955  09B5                     _fround:	
  4956                           
  4957                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4958                           ;fround@prec stored from wreg
  4959  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  4960  09B6  00D3               	movwf	fround@prec
  4961  09B7  306E               	movlw	110
  4962  09B8  0253               	subwf	fround@prec,w
  4963  09B9  1C03               	skipc
  4964  09BA  2A40               	goto	l6778
  4965  09BB  3003               	movlw	3
  4966  09BC  00F9               	movwf	?___bmul
  4967  09BD  300A               	movlw	10
  4968  09BE  00F5               	movwf	?___lbdiv
  4969  09BF  3064               	movlw	100
  4970  09C0  00F0               	movwf	?___lbmod
  4971  09C1  0853               	movf	fround@prec,w
  4972  09C2  22D5  120A  158A   	fcall	___lbmod
  4973  09C5  22BA               	fcall	___lbdiv
  4974  09C6  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4975  09CB  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4976  09CC  0084               	movwf	4
  4977  09CD  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4978  09D2  00AF               	movwf	?___ftmul
  4979  09D3  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4980  09D8  00B0               	movwf	?___ftmul+1
  4981  09D9  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4982  09DE  00B1               	movwf	?___ftmul+2
  4983  09DF  3003               	movlw	3
  4984  09E0  00F9               	movwf	?___bmul
  4985  09E1  3064               	movlw	100
  4986  09E2  00F5               	movwf	?___lbdiv
  4987  09E3  0853               	movf	fround@prec,w
  4988  09E4  22BA               	fcall	___lbdiv
  4989  09E5  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4990  09EA  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4991  09EB  0084               	movwf	4
  4992  09EC  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4993  09F1  00B2               	movwf	?___ftmul+3
  4994  09F2  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4995  09F7  00B3               	movwf	?___ftmul+4
  4996  09F8  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4997  09FD  00B4               	movwf	?___ftmul+5
  4998  09FE  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4999  0A03  2300  120A  158A   	fcall	PL28	;call to abstracted procedure
  5000  0A06  3003               	movlw	3
  5001  0A07  00F9               	movwf	?___bmul
  5002  0A08  300A               	movlw	10
  5003  0A09  00F0               	movwf	?___lbmod
  5004  0A0A  0853               	movf	fround@prec,w
  5005  0A0B  22D5               	fcall	___lbmod
  5006  0A0C  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5007  0A11  3E01               	addlw	low (__npowers_-__stringbase)
  5008  0A12  0084               	movwf	4
  5009  0A13  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5010  0A18  00AF               	movwf	?___ftmul
  5011  0A19  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5012  0A1E  00B0               	movwf	?___ftmul+1
  5013  0A1F  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5014  0A24  22F8               	fcall	PL24	;call to abstracted procedure
  5015  0A25  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5016  0A2A  082F               	movf	?___ftmul,w
  5017  0A2B  00CD               	movwf	_fround$4111
  5018  0A2C  0830               	movf	?___ftmul+1,w
  5019  0A2D  00CE               	movwf	_fround$4111+1
  5020  0A2E  0831               	movf	?___ftmul+2,w
  5021  0A2F  00CF               	movwf	_fround$4111+2
  5022  0A30  303F               	movlw	63
  5023  0A31  01AF               	clrf	?___ftmul
  5024  0A32  01B0               	clrf	?___ftmul+1
  5025  0A33  00B1               	movwf	?___ftmul+2
  5026  0A34  084D               	movf	_fround$4111,w
  5027  0A35  00B2               	movwf	?___ftmul+3
  5028  0A36  084E               	movf	_fround$4111+1,w
  5029  0A37  00B3               	movwf	?___ftmul+4
  5030  0A38  084F               	movf	_fround$4111+2,w
  5031  0A39  00B4               	movwf	?___ftmul+5
  5032  0A3A  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5033  0A3F  2AF1               	ljmp	PL17	;call to abstracted procedure
  5034  0A40                     l6778:	
  5035  0A40  300B               	movlw	11
  5036  0A41  0253               	subwf	fround@prec,w
  5037  0A42  1C03               	skipc
  5038  0A43  2A94               	goto	l6786
  5039  0A44  3003               	movlw	3
  5040  0A45  00F9               	movwf	?___bmul
  5041  0A46  300A               	movlw	10
  5042  0A47  00F0               	movwf	?___lbmod
  5043  0A48  0853               	movf	fround@prec,w
  5044  0A49  22D5               	fcall	___lbmod
  5045  0A4A  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5046  0A4F  3E01               	addlw	low (__npowers_-__stringbase)
  5047  0A50  0084               	movwf	4
  5048  0A51  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5049  0A56  00AF               	movwf	?___ftmul
  5050  0A57  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5051  0A5C  00B0               	movwf	?___ftmul+1
  5052  0A5D  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5053  0A62  00B1               	movwf	?___ftmul+2
  5054  0A63  3003               	movlw	3
  5055  0A64  00F9               	movwf	?___bmul
  5056  0A65  300A               	movlw	10
  5057  0A66  00F5               	movwf	?___lbdiv
  5058  0A67  0853               	movf	fround@prec,w
  5059  0A68  22BA               	fcall	___lbdiv
  5060  0A69  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5061  0A6E  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5062  0A6F  0084               	movwf	4
  5063  0A70  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5064  0A75  00B2               	movwf	?___ftmul+3
  5065  0A76  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5066  0A7B  00B3               	movwf	?___ftmul+4
  5067  0A7C  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5068  0A81  00B4               	movwf	?___ftmul+5
  5069  0A82  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5070  0A87  2300  120A  158A   	fcall	PL28	;call to abstracted procedure
  5071  0A8A  303F               	movlw	63
  5072  0A8B  01AF               	clrf	?___ftmul
  5073  0A8C  01B0               	clrf	?___ftmul+1
  5074  0A8D  22F8               	fcall	PL24	;call to abstracted procedure
  5075  0A8E  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5076  0A93  2AF1               	ljmp	PL17	;call to abstracted procedure
  5077  0A94                     l6786:	
  5078  0A94  303F               	movlw	63
  5079  0A95  01AF               	clrf	?___ftmul
  5080  0A96  01B0               	clrf	?___ftmul+1
  5081  0A97  00B1               	movwf	?___ftmul+2
  5082  0A98  3003               	movlw	3
  5083  0A99  00F9               	movwf	?___bmul
  5084  0A9A  0853               	movf	fround@prec,w
  5085  0A9B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  5086  0AA0  3E01               	addlw	low (__npowers_-__stringbase)
  5087  0AA1  0084               	movwf	4
  5088  0AA2  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5089  0AA7  00B2               	movwf	?___ftmul+3
  5090  0AA8  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5091  0AAD  00B3               	movwf	?___ftmul+4
  5092  0AAE  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5093  0AB3  00B4               	movwf	?___ftmul+5
  5094  0AB4  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5095  0AB9  2AF1               	ljmp	PL17	;call to abstracted procedure
  5096  0ABA                     __end_of_fround:	
  5097  0ABA                     __ptext573:	
  5098 ;; =============== function ___lbmod ends ============
  5099                           
  5100                           
  5101 ;; *************** function ___lbdiv *****************
  5102 ;; Defined at:
  5103 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  dividend        1    wreg     unsigned char 
  5106 ;;  divisor         1    5[COMMON] unsigned char 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  dividend        1    6[COMMON] unsigned char 
  5109 ;;  quotient        1    8[COMMON] unsigned char 
  5110 ;;  counter         1    7[COMMON] unsigned char 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      unsigned char 
  5113 ;; Registers used:
  5114 ;;		wreg, status,2, status,0
  5115 ;; Tracked objects:
  5116 ;;		On entry : 60/0
  5117 ;;		On exit  : 60/0
  5118 ;;		Unchanged: FFF9F/0
  5119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5120 ;;      Params:         1       0       0       0       0
  5121 ;;      Locals:         3       0       0       0       0
  5122 ;;      Temps:          0       0       0       0       0
  5123 ;;      Totals:         4       0       0       0       0
  5124 ;;Total ram usage:        4 bytes
  5125 ;; Hardware stack levels used:    1
  5126 ;; This function calls:
  5127 ;;		Nothing
  5128 ;; This function is called by:
  5129 ;;		_fround
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132  0ABA                     ___lbdiv:	
  5133                           
  5134                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5135                           ;___lbdiv@dividend stored from wreg
  5136  0ABA  00F6               	movwf	___lbdiv@dividend
  5137  0ABB  01F8               	clrf	___lbdiv@quotient
  5138  0ABC  0875               	movf	___lbdiv@divisor,w
  5139  0ABD  1903               	btfsc	3,2
  5140  0ABE  2AD3               	goto	l6206
  5141  0ABF  01F7               	clrf	___lbdiv@counter
  5142  0AC0                     l6192:	
  5143  0AC0  0AF7               	incf	___lbdiv@counter,f
  5144  0AC1  1BF5               	btfsc	___lbdiv@divisor,7
  5145  0AC2  2AC6               	goto	l3306
  5146  0AC3  1003               	clrc
  5147  0AC4  0DF5               	rlf	___lbdiv@divisor,f
  5148  0AC5  2AC0               	goto	l6192
  5149  0AC6                     l3306:	
  5150  0AC6  1003               	clrc
  5151  0AC7  0DF8               	rlf	___lbdiv@quotient,f
  5152  0AC8  0875               	movf	___lbdiv@divisor,w
  5153  0AC9  0276               	subwf	___lbdiv@dividend,w
  5154  0ACA  1C03               	skipc
  5155  0ACB  2AD0               	goto	L18
  5156  0ACC  0875               	movf	___lbdiv@divisor,w
  5157  0ACD  02F6               	subwf	___lbdiv@dividend,f
  5158  0ACE  1478               	bsf	___lbdiv@quotient,0
  5159  0ACF  1003               	clrc
  5160  0AD0                     L18:	
  5161  0AD0  0CF5               	rrf	___lbdiv@divisor,f
  5162  0AD1  0BF7               	decfsz	___lbdiv@counter,f
  5163  0AD2  2AC6               	goto	l3306
  5164  0AD3                     l6206:	
  5165  0AD3  0878               	movf	___lbdiv@quotient,w
  5166  0AD4  0008               	return
  5167  0AD5                     __end_of___lbdiv:	
  5168  0AD5                     __ptext572:	
  5169 ;; =============== function ___ftpack ends ============
  5170                           
  5171                           
  5172 ;; *************** function ___lbmod *****************
  5173 ;; Defined at:
  5174 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  dividend        1    wreg     unsigned char 
  5177 ;;  divisor         1    0[COMMON] unsigned char 
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;  dividend        1    2[COMMON] unsigned char 
  5180 ;;  rem             1    4[COMMON] unsigned char 
  5181 ;;  counter         1    3[COMMON] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      unsigned char 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 60/0
  5188 ;;		On exit  : 60/0
  5189 ;;		Unchanged: FFF9F/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5191 ;;      Params:         1       0       0       0       0
  5192 ;;      Locals:         3       0       0       0       0
  5193 ;;      Temps:          1       0       0       0       0
  5194 ;;      Totals:         5       0       0       0       0
  5195 ;;Total ram usage:        5 bytes
  5196 ;; Hardware stack levels used:    1
  5197 ;; This function calls:
  5198 ;;		Nothing
  5199 ;; This function is called by:
  5200 ;;		_fround
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203  0AD5                     ___lbmod:	
  5204                           
  5205                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5206                           ;___lbmod@dividend stored from wreg
  5207  0AD5  00F2               	movwf	___lbmod@dividend
  5208  0AD6  3008               	movlw	8
  5209  0AD7  00F3               	movwf	___lbmod@counter
  5210  0AD8  01F4               	clrf	___lbmod@rem
  5211  0AD9                     l6214:	
  5212  0AD9  0872               	movf	___lbmod@dividend,w
  5213  0ADA  00F1               	movwf	??___lbmod
  5214  0ADB  3007               	movlw	7
  5215  0ADC  1003               	clrc
  5216  0ADD                     L17:	
  5217  0ADD  0CF1               	rrf	??___lbmod,f
  5218  0ADE  3EFF               	addlw	-1
  5219  0ADF  1003               	clrc
  5220  0AE0  1D03               	skipz
  5221  0AE1  2ADD               	goto	L17
  5222  0AE2  0D74               	rlf	___lbmod@rem,w
  5223  0AE3  0471               	iorwf	??___lbmod,w
  5224  0AE4  00F4               	movwf	___lbmod@rem
  5225  0AE5  1003               	clrc
  5226  0AE6  0DF2               	rlf	___lbmod@dividend,f
  5227  0AE7  0870               	movf	___lbmod@divisor,w
  5228  0AE8  0274               	subwf	___lbmod@rem,w
  5229  0AE9  1C03               	skipc
  5230  0AEA  2AED               	goto	l6222
  5231  0AEB  0870               	movf	___lbmod@divisor,w
  5232  0AEC  02F4               	subwf	___lbmod@rem,f
  5233  0AED                     l6222:	
  5234  0AED  0BF3               	decfsz	___lbmod@counter,f
  5235  0AEE  2AD9               	goto	l6214
  5236  0AEF  0874               	movf	___lbmod@rem,w
  5237  0AF0  0008               	return
  5238  0AF1                     __end_of___lbmod:	
  5239  0AF1                     PL17:	
  5240  0AF1  082F               	movf	?___ftmul,w
  5241  0AF2  00CA               	movwf	?_fround
  5242  0AF3  0830               	movf	?___ftmul+1,w
  5243  0AF4  00CB               	movwf	?_fround+1
  5244  0AF5  0831               	movf	?___ftmul+2,w
  5245  0AF6  00CC               	movwf	?_fround+2
  5246  0AF7  0008               	return
  5247  0AF8                     PL24:	
  5248  0AF8  00B1               	movwf	?___ftmul+2
  5249  0AF9  0850               	movf	_fround$4110,w
  5250  0AFA  00B2               	movwf	?___ftmul+3
  5251  0AFB  0851               	movf	_fround$4110+1,w
  5252  0AFC  00B3               	movwf	?___ftmul+4
  5253  0AFD  0852               	movf	_fround$4110+2,w
  5254  0AFE  00B4               	movwf	?___ftmul+5
  5255  0AFF  0008               	return
  5256  0B00                     PL28:	
  5257  0B00  082F               	movf	?___ftmul,w
  5258  0B01  00D0               	movwf	_fround$4110
  5259  0B02  0830               	movf	?___ftmul+1,w
  5260  0B03  00D1               	movwf	_fround$4110+1
  5261  0B04  0831               	movf	?___ftmul+2,w
  5262  0B05  00D2               	movwf	_fround$4110+2
  5263  0B06  0008               	return
  5264                           
  5265                           	psect	text553
  5266  0B07                     __ptext553:	
  5267 ;; =============== function _fround ends ============
  5268                           
  5269                           
  5270 ;; *************** function _lcd_gotoxy *****************
  5271 ;; Defined at:
  5272 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;  col             1    wreg     unsigned char 
  5275 ;;  row             1    5[COMMON] unsigned char 
  5276 ;; Auto vars:     Size  Location     Type
  5277 ;;  col             1    6[COMMON] unsigned char 
  5278 ;;  address         1    7[COMMON] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;		None               void
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0, pclath, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 60/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5288 ;;      Params:         1       0       0       0       0
  5289 ;;      Locals:         2       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0
  5291 ;;      Totals:         3       0       0       0       0
  5292 ;;Total ram usage:        3 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    1
  5295 ;; This function calls:
  5296 ;;		_lcd_put_byte
  5297 ;;		_lcd_busy
  5298 ;; This function is called by:
  5299 ;;		_main
  5300 ;;		_lcd_putc
  5301 ;; This function uses a non-reentrant model
  5302 ;;
  5303  0B07                     _lcd_gotoxy:	
  5304                           
  5305                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  5306                           ;lcd_gotoxy@col stored from wreg
  5307  0B07  00F6               	movwf	lcd_gotoxy@col
  5308                           
  5309                           ;lcd(16).c: 163: unsigned char address;
  5310                           ;lcd(16).c: 165: if(row!=0)
  5311  0B08  0875               	movf	lcd_gotoxy@row,w
  5312  0B09  1903               	btfsc	3,2
  5313  0B0A  2B0E               	goto	l6760
  5314                           
  5315                           ;lcd(16).c: 166: address=0x40;
  5316  0B0B  3040               	movlw	64
  5317  0B0C  00F7               	movwf	lcd_gotoxy@address
  5318  0B0D  2B0F               	goto	l6762
  5319  0B0E                     l6760:	
  5320                           
  5321                           ;lcd(16).c: 167: else
  5322                           ;lcd(16).c: 168: address=0;
  5323  0B0E  01F7               	clrf	lcd_gotoxy@address
  5324  0B0F                     l6762:	
  5325                           
  5326                           ;lcd(16).c: 170: address += col;
  5327  0B0F  0876               	movf	lcd_gotoxy@col,w
  5328  0B10  07F7               	addwf	lcd_gotoxy@address,f
  5329                           
  5330                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  5331  0B11  0877               	movf	lcd_gotoxy@address,w
  5332  0B12  3880               	iorlw	128
  5333  0B13  00F0               	movwf	?_lcd_put_byte
  5334  0B14  3000               	movlw	0
  5335  0B15  2409  120A  158A   	fcall	_lcd_put_byte
  5336  0B18                     l6766:	
  5337                           ;lcd(16).c: 172: while(lcd_busy());
  5338                           
  5339  0B18  2499  120A  158A   	fcall	_lcd_busy
  5340  0B1B  3800               	iorlw	0
  5341  0B1C  1903               	btfsc	3,2
  5342  0B1D  0008               	return
  5343  0B1E  2B18               	goto	l6766
  5344  0B1F                     __end_of_lcd_gotoxy:	
  5345  0B1F                     __ptext549:	
  5346 ;; =============== function _putch ends ============
  5347                           
  5348                           
  5349 ;; *************** function _lcd_putc *****************
  5350 ;; Defined at:
  5351 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  c               1    wreg     unsigned char 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  c               1    8[COMMON] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;		None               void
  5358 ;; Registers used:
  5359 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/20
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5365 ;;      Params:         0       0       0       0       0
  5366 ;;      Locals:         1       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0
  5368 ;;      Totals:         1       0       0       0       0
  5369 ;;Total ram usage:        1 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    2
  5372 ;; This function calls:
  5373 ;;		_lcd_put_byte
  5374 ;;		_lcd_busy
  5375 ;;		_lcd_gotoxy
  5376 ;;		_isprint
  5377 ;; This function is called by:
  5378 ;;		_putch
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381  0B1F                     _lcd_putc:	
  5382                           
  5383                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5384                           ;lcd_putc@c stored from wreg
  5385  0B1F  00F8               	movwf	lcd_putc@c
  5386                           
  5387                           ;lcd(16).c: 144: switch(c){
  5388  0B20  2B45               	goto	l6852
  5389  0B21                     l6838:	
  5390  0B21  3000               	movlw	0
  5391                           
  5392                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  5393  0B22  01F0               	clrf	?_lcd_put_byte
  5394  0B23  0AF0               	incf	?_lcd_put_byte,f
  5395  0B24  2409  120A  158A   	fcall	_lcd_put_byte
  5396  0B27                     l6840:	
  5397                           ;lcd(16).c: 147: while(lcd_busy());
  5398                           
  5399  0B27  2499  120A  158A   	fcall	_lcd_busy
  5400  0B2A  3800               	iorlw	0
  5401  0B2B  1903               	btfsc	3,2
  5402  0B2C  0008               	return
  5403  0B2D  2B27               	goto	l6840
  5404  0B2E                     l6842:	
  5405  0B2E  3000               	movlw	0
  5406                           
  5407                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  5408  0B2F  01F5               	clrf	?_lcd_gotoxy
  5409  0B30  0AF5               	incf	?_lcd_gotoxy,f
  5410  0B31  2B07               	ljmp	_lcd_gotoxy
  5411  0B32                     l6844:	
  5412                           ;lcd(16).c: 151: break;
  5413                           
  5414                           
  5415                           ;lcd(16).c: 153: if(isprint(c)){
  5416  0B32  0878               	movf	lcd_putc@c,w
  5417  0B33  24C0  120A  158A   	fcall	_isprint
  5418  0B36  1C03               	btfss	3,0
  5419  0B37  0008               	return
  5420                           
  5421                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  5422  0B38  0878               	movf	lcd_putc@c,w
  5423  0B39  00F0               	movwf	?_lcd_put_byte
  5424  0B3A  3001               	movlw	1
  5425  0B3B  2409  120A  158A   	fcall	_lcd_put_byte
  5426  0B3E                     l6848:	
  5427                           ;lcd(16).c: 155: while(lcd_busy());
  5428                           
  5429  0B3E  2499  120A  158A   	fcall	_lcd_busy
  5430  0B41  3800               	iorlw	0
  5431  0B42  1903               	btfsc	3,2
  5432  0B43  0008               	return
  5433  0B44  2B3E               	goto	l6848
  5434  0B45                     l6852:	
  5435  0B45  0878               	movf	lcd_putc@c,w
  5436                           
  5437                           ; Switch size 1, requested type "space"
  5438                           ; Number of cases is 2, Range of values is 10 to 12
  5439                           ; switch strategies available:
  5440                           ; Name         Instructions Cycles
  5441                           ; simple_byte            7     4 (average)
  5442                           ; direct_byte           20    11 (fixed)
  5443                           ; jumptable            263     9 (fixed)
  5444                           ;	Chosen strategy is simple_byte
  5445  0B46  3A0A               	xorlw	10	; case 10
  5446  0B47  1903               	skipnz
  5447  0B48  2B2E               	goto	l6842
  5448  0B49  3A06               	xorlw	6	; case 12
  5449  0B4A  1903               	skipnz
  5450  0B4B  2B21               	goto	l6838
  5451  0B4C  2B32               	goto	l6844
  5452  0B4D  0008               	return
  5453  0B4E                     __end_of_lcd_putc:	
  5454  0B4E                     __ptext554:	
  5455 ;; =============== function _lcd_gotoxy ends ============
  5456                           
  5457                           
  5458 ;; *************** function _lcd_init *****************
  5459 ;; Defined at:
  5460 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;		None
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;  i               1    0        unsigned char 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;		None               void
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 17F/60
  5471 ;;		On exit  : 60/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5474 ;;      Params:         0       0       0       0       0
  5475 ;;      Locals:         0       0       0       0       0
  5476 ;;      Temps:          3       0       0       0       0
  5477 ;;      Totals:         3       0       0       0       0
  5478 ;;Total ram usage:        3 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    1
  5481 ;; This function calls:
  5482 ;;		_lcd_put_byte
  5483 ;;		_lcd_busy
  5484 ;; This function is called by:
  5485 ;;		_main
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488  0B4E                     _lcd_init:	
  5489                           
  5490                           ;lcd(16).c: 6: unsigned char i;
  5491                           ;lcd(16).c: 7: TRISD3 = 0;
  5492                           
  5493                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5494  0B4E  1303               	bcf	3,6	;RP1=0, select bank1
  5495  0B4F  1188               	bcf	8,3
  5496                           
  5497                           ;lcd(16).c: 8: TRISD1 = 0;
  5498  0B50  1088               	bcf	8,1
  5499                           
  5500                           ;lcd(16).c: 9: TRISD2 = 0;
  5501  0B51  1108               	bcf	8,2
  5502                           
  5503                           ;lcd(16).c: 10: TRISD4 = 0;
  5504  0B52  1208               	bcf	8,4
  5505                           
  5506                           ;lcd(16).c: 11: TRISD5 = 0;
  5507  0B53  1288               	bcf	8,5
  5508                           
  5509                           ;lcd(16).c: 12: TRISD6 = 0;
  5510  0B54  1308               	bcf	8,6
  5511                           
  5512                           ;lcd(16).c: 13: TRISD7 = 0;
  5513  0B55  1388               	bcf	8,7
  5514                           
  5515                           ;lcd(16).c: 14: RD3 = 0;
  5516  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  5517  0B57  3003               	movlw	3
  5518  0B58  1188               	bcf	8,3
  5519                           
  5520                           ;lcd(16).c: 15: RD1 = 0;
  5521  0B59  1088               	bcf	8,1
  5522                           
  5523                           ;lcd(16).c: 16: RD2 = 0;
  5524  0B5A  1108               	bcf	8,2
  5525                           
  5526                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  5527  0B5B  00F7               	movwf	??_lcd_init+2
  5528  0B5C  308A               	movlw	138
  5529  0B5D  00F6               	movwf	??_lcd_init+1
  5530  0B5E  3056               	movlw	86
  5531  0B5F  00F5               	movwf	??_lcd_init
  5532  0B60                     u3807:	
  5533  0B60  0BF5               	decfsz	??_lcd_init,f
  5534  0B61  2B60               	goto	u3807
  5535  0B62  0BF6               	decfsz	??_lcd_init+1,f
  5536  0B63  2B60               	goto	u3807
  5537  0B64  0BF7               	decfsz	??_lcd_init+2,f
  5538  0B65  2B60               	goto	u3807
  5539  0B66  2B67               	nop2
  5540                           
  5541                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  5542  0B67  3030               	movlw	48
  5543  0B68  00F0               	movwf	?_lcd_put_byte
  5544  0B69  3000               	movlw	0
  5545  0B6A  2409  120A  158A   	fcall	_lcd_put_byte
  5546                           
  5547                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  5548  0B6D  3002               	movlw	2
  5549  0B6E  00F7               	movwf	??_lcd_init+2
  5550  0B6F  3045               	movlw	69
  5551  0B70  00F6               	movwf	??_lcd_init+1
  5552  0B71  30A9               	movlw	169
  5553  0B72  00F5               	movwf	??_lcd_init
  5554  0B73                     u3817:	
  5555  0B73  0BF5               	decfsz	??_lcd_init,f
  5556  0B74  2B73               	goto	u3817
  5557  0B75  0BF6               	decfsz	??_lcd_init+1,f
  5558  0B76  2B73               	goto	u3817
  5559  0B77  0BF7               	decfsz	??_lcd_init+2,f
  5560  0B78  2B73               	goto	u3817
  5561  0B79  2B7A               	nop2
  5562                           
  5563                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  5564  0B7A  3030               	movlw	48
  5565  0B7B  00F0               	movwf	?_lcd_put_byte
  5566  0B7C  3000               	movlw	0
  5567  0B7D  2409  120A  158A   	fcall	_lcd_put_byte
  5568                           
  5569                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  5570  0B80  3002               	movlw	2
  5571  0B81  00F7               	movwf	??_lcd_init+2
  5572  0B82  3045               	movlw	69
  5573  0B83  00F6               	movwf	??_lcd_init+1
  5574  0B84  30A9               	movlw	169
  5575  0B85  00F5               	movwf	??_lcd_init
  5576  0B86                     u3827:	
  5577  0B86  0BF5               	decfsz	??_lcd_init,f
  5578  0B87  2B86               	goto	u3827
  5579  0B88  0BF6               	decfsz	??_lcd_init+1,f
  5580  0B89  2B86               	goto	u3827
  5581  0B8A  0BF7               	decfsz	??_lcd_init+2,f
  5582  0B8B  2B86               	goto	u3827
  5583  0B8C  2B8D               	nop2
  5584                           
  5585                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  5586  0B8D  3032               	movlw	50
  5587  0B8E  00F0               	movwf	?_lcd_put_byte
  5588  0B8F  3000               	movlw	0
  5589  0B90  2409  120A  158A   	fcall	_lcd_put_byte
  5590                           
  5591                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  5592  0B93  3003               	movlw	3
  5593  0B94  00F7               	movwf	??_lcd_init+2
  5594  0B95  308A               	movlw	138
  5595  0B96  00F6               	movwf	??_lcd_init+1
  5596  0B97  3056               	movlw	86
  5597  0B98  00F5               	movwf	??_lcd_init
  5598  0B99                     u3837:	
  5599  0B99  0BF5               	decfsz	??_lcd_init,f
  5600  0B9A  2B99               	goto	u3837
  5601  0B9B  0BF6               	decfsz	??_lcd_init+1,f
  5602  0B9C  2B99               	goto	u3837
  5603  0B9D  0BF7               	decfsz	??_lcd_init+2,f
  5604  0B9E  2B99               	goto	u3837
  5605  0B9F  2BA0               	nop2
  5606                           
  5607                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  5608  0BA0  3003               	movlw	3
  5609  0BA1  00F7               	movwf	??_lcd_init+2
  5610  0BA2  308A               	movlw	138
  5611  0BA3  00F6               	movwf	??_lcd_init+1
  5612  0BA4  3056               	movlw	86
  5613  0BA5  00F5               	movwf	??_lcd_init
  5614  0BA6                     u3847:	
  5615  0BA6  0BF5               	decfsz	??_lcd_init,f
  5616  0BA7  2BA6               	goto	u3847
  5617  0BA8  0BF6               	decfsz	??_lcd_init+1,f
  5618  0BA9  2BA6               	goto	u3847
  5619  0BAA  0BF7               	decfsz	??_lcd_init+2,f
  5620  0BAB  2BA6               	goto	u3847
  5621  0BAC  2BAD               	nop2
  5622                           
  5623                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5624  0BAD  3003               	movlw	3
  5625  0BAE  00F7               	movwf	??_lcd_init+2
  5626  0BAF  308A               	movlw	138
  5627  0BB0  00F6               	movwf	??_lcd_init+1
  5628  0BB1  3056               	movlw	86
  5629  0BB2  00F5               	movwf	??_lcd_init
  5630  0BB3                     u3857:	
  5631  0BB3  0BF5               	decfsz	??_lcd_init,f
  5632  0BB4  2BB3               	goto	u3857
  5633  0BB5  0BF6               	decfsz	??_lcd_init+1,f
  5634  0BB6  2BB3               	goto	u3857
  5635  0BB7  0BF7               	decfsz	??_lcd_init+2,f
  5636  0BB8  2BB3               	goto	u3857
  5637  0BB9  2BBA               	nop2
  5638  0BBA                     l6730:	
  5639                           ;lcd(16).c: 30: while(lcd_busy());
  5640                           
  5641  0BBA  2499  120A  158A   	fcall	_lcd_busy
  5642  0BBD  3800               	iorlw	0
  5643  0BBE  1D03               	skipz
  5644  0BBF  2BBA               	goto	l6730
  5645                           
  5646                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5647  0BC0  3028               	movlw	40
  5648  0BC1  00F0               	movwf	?_lcd_put_byte
  5649  0BC2  3000               	movlw	0
  5650  0BC3  2409  120A  158A   	fcall	_lcd_put_byte
  5651  0BC6                     l6734:	
  5652                           ;lcd(16).c: 32: while(lcd_busy());
  5653                           
  5654  0BC6  2499  120A  158A   	fcall	_lcd_busy
  5655  0BC9  3800               	iorlw	0
  5656  0BCA  1D03               	skipz
  5657  0BCB  2BC6               	goto	l6734
  5658                           
  5659                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5660  0BCC  3008               	movlw	8
  5661  0BCD  00F0               	movwf	?_lcd_put_byte
  5662  0BCE  3000               	movlw	0
  5663  0BCF  2409  120A  158A   	fcall	_lcd_put_byte
  5664  0BD2                     l6738:	
  5665                           ;lcd(16).c: 35: while(lcd_busy());
  5666                           
  5667  0BD2  2499  120A  158A   	fcall	_lcd_busy
  5668  0BD5  3800               	iorlw	0
  5669  0BD6  1D03               	skipz
  5670  0BD7  2BD2               	goto	l6738
  5671                           
  5672                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5673  0BD8  300C               	movlw	12
  5674  0BD9  00F0               	movwf	?_lcd_put_byte
  5675  0BDA  3000               	movlw	0
  5676  0BDB  2409  120A  158A   	fcall	_lcd_put_byte
  5677  0BDE                     l6742:	
  5678                           ;lcd(16).c: 37: while(lcd_busy());
  5679                           
  5680  0BDE  2499  120A  158A   	fcall	_lcd_busy
  5681  0BE1  3800               	iorlw	0
  5682  0BE2  1D03               	skipz
  5683  0BE3  2BDE               	goto	l6742
  5684  0BE4  3000               	movlw	0
  5685                           
  5686                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5687  0BE5  01F0               	clrf	?_lcd_put_byte
  5688  0BE6  0AF0               	incf	?_lcd_put_byte,f
  5689  0BE7  2409  120A  158A   	fcall	_lcd_put_byte
  5690  0BEA                     l6746:	
  5691                           ;lcd(16).c: 40: while(lcd_busy());
  5692                           
  5693  0BEA  2499  120A  158A   	fcall	_lcd_busy
  5694  0BED  3800               	iorlw	0
  5695  0BEE  1D03               	skipz
  5696  0BEF  2BEA               	goto	l6746
  5697                           
  5698                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5699  0BF0  3004               	movlw	4
  5700  0BF1  00F0               	movwf	?_lcd_put_byte
  5701  0BF2  3000               	movlw	0
  5702  0BF3  2409  120A  158A   	fcall	_lcd_put_byte
  5703  0BF6                     l6750:	
  5704                           ;lcd(16).c: 42: while(lcd_busy());
  5705                           
  5706  0BF6  2499  120A  158A   	fcall	_lcd_busy
  5707  0BF9  3800               	iorlw	0
  5708  0BFA  1D03               	skipz
  5709  0BFB  2BF6               	goto	l6750
  5710  0BFC  3000               	movlw	0
  5711                           
  5712                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5713  0BFD  01F0               	clrf	?_lcd_put_byte
  5714  0BFE  0AF0               	incf	?_lcd_put_byte,f
  5715  0BFF  2409  120A  158A   	fcall	_lcd_put_byte
  5716  0C02                     l6754:	
  5717                           ;lcd(16).c: 44: while(lcd_busy());
  5718                           
  5719  0C02  2499  120A  158A   	fcall	_lcd_busy
  5720  0C05  3800               	iorlw	0
  5721  0C06  1903               	btfsc	3,2
  5722  0C07  0008               	return
  5723  0C08  2C02               	goto	l6754
  5724  0C09                     __end_of_lcd_init:	
  5725  0C09                     __ptext563:	
  5726 ;; =============== function _lcd_busy ends ============
  5727                           
  5728                           
  5729 ;; *************** function _lcd_put_byte *****************
  5730 ;; Defined at:
  5731 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  rs              1    wreg     unsigned char 
  5734 ;;  b               1    0[COMMON] unsigned char 
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;  rs              1    3[COMMON] unsigned char 
  5737 ;;  temp            1    4[COMMON] struct _BYTE_VAL
  5738 ;; Return value:  Size  Location     Type
  5739 ;;		None               void
  5740 ;; Registers used:
  5741 ;;		wreg, status,2, status,0
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/20
  5744 ;;		On exit  : 60/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5747 ;;      Params:         1       0       0       0       0
  5748 ;;      Locals:         2       0       0       0       0
  5749 ;;      Temps:          2       0       0       0       0
  5750 ;;      Totals:         5       0       0       0       0
  5751 ;;Total ram usage:        5 bytes
  5752 ;; Hardware stack levels used:    1
  5753 ;; This function calls:
  5754 ;;		Nothing
  5755 ;; This function is called by:
  5756 ;;		_lcd_init
  5757 ;;		_lcd_putc
  5758 ;;		_lcd_gotoxy
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761  0C09                     _lcd_put_byte:	
  5762                           
  5763                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5764                           ;lcd_put_byte@rs stored from wreg
  5765  0C09  00F3               	movwf	lcd_put_byte@rs
  5766                           
  5767                           ;lcd(16).c: 107: BYTE_VAL temp;
  5768                           ;lcd(16).c: 109: TRISD4 = 0;
  5769  0C0A  1683               	bsf	3,5	;RP0=1, select bank1
  5770  0C0B  1303               	bcf	3,6	;RP1=0, select bank1
  5771  0C0C  1208               	bcf	8,4
  5772                           
  5773                           ;lcd(16).c: 110: TRISD5 = 0;
  5774  0C0D  1288               	bcf	8,5
  5775                           
  5776                           ;lcd(16).c: 111: TRISD6 = 0;
  5777  0C0E  1308               	bcf	8,6
  5778                           
  5779                           ;lcd(16).c: 112: TRISD7 = 0;
  5780  0C0F  1388               	bcf	8,7
  5781                           
  5782                           ;lcd(16).c: 114: RD1 = 0;
  5783  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  5784  0C11  1088               	bcf	8,1
  5785                           
  5786                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5787  0C12  0873               	movf	lcd_put_byte@rs,w
  5788  0C13  1D03               	skipz
  5789  0C14  1488               	bsf	8,1
  5790                           
  5791                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5792  0C15  3021               	movlw	33
  5793  0C16  00F1               	movwf	??_lcd_put_byte
  5794  0C17                     u3927:	
  5795  0C17  0BF1               	decfsz	??_lcd_put_byte,f
  5796  0C18  2C17               	goto	u3927
  5797  0C19  24D5               	call	PL35	;select bank 0
  5798                           
  5799                           ;lcd(16).c: 118: RD2 = 0;
  5800  0C1A  3021               	movlw	33
  5801  0C1B  1108               	bcf	8,2
  5802                           
  5803                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5804  0C1C  00F1               	movwf	??_lcd_put_byte
  5805  0C1D                     u3937:	
  5806  0C1D  0BF1               	decfsz	??_lcd_put_byte,f
  5807  0C1E  2C1D               	goto	u3937
  5808  0C1F  24D5               	call	PL35	;select bank 0
  5809                           
  5810                           ;lcd(16).c: 120: RD3 = 0;
  5811  0C20  1188               	bcf	8,3
  5812                           
  5813                           ;lcd(16).c: 122: temp.Val = b;
  5814  0C21  0870               	movf	lcd_put_byte@b,w
  5815  0C22  00F4               	movwf	lcd_put_byte@temp
  5816                           
  5817                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5818  0C23  0E74               	swapf	lcd_put_byte@temp,w
  5819  0C24  3901               	andlw	1
  5820  0C25  00F1               	movwf	??_lcd_put_byte
  5821  0C26  0C71               	rrf	??_lcd_put_byte,w
  5822  0C27  1C03               	btfss	3,0
  5823  0C28  2C2C               	goto	u2640
  5824  0C29  24D5               	call	PL35	;select bank 0
  5825  0C2A  1608               	bsf	8,4
  5826  0C2B  2C2E               	goto	l6462
  5827  0C2C                     u2640:	
  5828  0C2C  24D5               	call	PL35	;select bank 0
  5829  0C2D  1208               	bcf	8,4
  5830  0C2E                     l6462:	
  5831                           
  5832                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5833  0C2E  0E74               	swapf	lcd_put_byte@temp,w
  5834  0C2F  00F1               	movwf	??_lcd_put_byte
  5835  0C30  0C71               	rrf	??_lcd_put_byte,w
  5836  0C31  3901               	andlw	1
  5837  0C32  00F2               	movwf	??_lcd_put_byte+1
  5838  0C33  0C72               	rrf	??_lcd_put_byte+1,w
  5839  0C34  1C03               	btfss	3,0
  5840  0C35  2C39               	goto	u2660
  5841  0C36  24D5               	call	PL35	;select bank 0
  5842  0C37  1688               	bsf	8,5
  5843  0C38  2C3B               	goto	l6464
  5844  0C39                     u2660:	
  5845  0C39  24D5               	call	PL35	;select bank 0
  5846  0C3A  1288               	bcf	8,5
  5847  0C3B                     l6464:	
  5848                           
  5849                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5850  0C3B  0E74               	swapf	lcd_put_byte@temp,w
  5851  0C3C  24CE  120A  158A   	fcall	PL33	;call to abstracted procedure
  5852  0C3F  1C03               	btfss	3,0
  5853  0C40  2C44               	goto	u2680
  5854  0C41  24D5               	call	PL35	;select bank 0
  5855  0C42  1708               	bsf	8,6
  5856  0C43  2C46               	goto	l6466
  5857  0C44                     u2680:	
  5858  0C44  24D5               	call	PL35	;select bank 0
  5859  0C45  1308               	bcf	8,6
  5860  0C46                     l6466:	
  5861                           
  5862                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5863  0C46  0D74               	rlf	lcd_put_byte@temp,w
  5864  0C47  0D74               	rlf	lcd_put_byte@temp,w
  5865  0C48  3901               	andlw	1
  5866  0C49  00F1               	movwf	??_lcd_put_byte
  5867  0C4A  0C71               	rrf	??_lcd_put_byte,w
  5868  0C4B  1C03               	btfss	3,0
  5869  0C4C  2C50               	goto	u2700
  5870  0C4D  24D5               	call	PL35	;select bank 0
  5871  0C4E  1788               	bsf	8,7
  5872  0C4F  2C52               	goto	u2714
  5873  0C50                     u2700:	
  5874  0C50  24D5               	call	PL35	;select bank 0
  5875  0C51  1388               	bcf	8,7
  5876  0C52                     u2714:	
  5877                           
  5878                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5879  0C52  3021               	movlw	33
  5880  0C53  00F1               	movwf	??_lcd_put_byte
  5881  0C54                     u3947:	
  5882  0C54  0BF1               	decfsz	??_lcd_put_byte,f
  5883  0C55  2C54               	goto	u3947
  5884  0C56  24D5               	call	PL35	;select bank 0
  5885                           
  5886                           ;lcd(16).c: 130: RD3 = 1;
  5887  0C57  3021               	movlw	33
  5888  0C58  1588               	bsf	8,3
  5889                           
  5890                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5891  0C59  00F1               	movwf	??_lcd_put_byte
  5892  0C5A                     u3957:	
  5893  0C5A  0BF1               	decfsz	??_lcd_put_byte,f
  5894  0C5B  2C5A               	goto	u3957
  5895  0C5C  24D5               	call	PL35	;select bank 0
  5896                           
  5897                           ;lcd(16).c: 132: RD3 = 0;
  5898  0C5D  1188               	bcf	8,3
  5899                           
  5900                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5901  0C5E  0874               	movf	lcd_put_byte@temp,w
  5902  0C5F  3901               	andlw	1
  5903  0C60  00F1               	movwf	??_lcd_put_byte
  5904  0C61  0C71               	rrf	??_lcd_put_byte,w
  5905  0C62  1C03               	btfss	3,0
  5906  0C63  2C67               	goto	u2720
  5907  0C64  24D5               	call	PL35	;select bank 0
  5908  0C65  1608               	bsf	8,4
  5909  0C66  2C69               	goto	l6474
  5910  0C67                     u2720:	
  5911  0C67  24D5               	call	PL35	;select bank 0
  5912  0C68  1208               	bcf	8,4
  5913  0C69                     l6474:	
  5914                           
  5915                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5916  0C69  0C74               	rrf	lcd_put_byte@temp,w
  5917  0C6A  3901               	andlw	1
  5918  0C6B  00F1               	movwf	??_lcd_put_byte
  5919  0C6C  0C71               	rrf	??_lcd_put_byte,w
  5920  0C6D  1C03               	btfss	3,0
  5921  0C6E  2C72               	goto	u2740
  5922  0C6F  24D5               	call	PL35	;select bank 0
  5923  0C70  1688               	bsf	8,5
  5924  0C71  2C74               	goto	l6476
  5925  0C72                     u2740:	
  5926  0C72  24D5               	call	PL35	;select bank 0
  5927  0C73  1288               	bcf	8,5
  5928  0C74                     l6476:	
  5929                           
  5930                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5931  0C74  0C74               	rrf	lcd_put_byte@temp,w
  5932  0C75  00F1               	movwf	??_lcd_put_byte
  5933  0C76  0C71               	rrf	??_lcd_put_byte,w
  5934  0C77  3901               	andlw	1
  5935  0C78  00F2               	movwf	??_lcd_put_byte+1
  5936  0C79  0C72               	rrf	??_lcd_put_byte+1,w
  5937  0C7A  1C03               	btfss	3,0
  5938  0C7B  2C7F               	goto	u2760
  5939  0C7C  24D5               	call	PL35	;select bank 0
  5940  0C7D  1708               	bsf	8,6
  5941  0C7E  2C81               	goto	l6478
  5942  0C7F                     u2760:	
  5943  0C7F  24D5               	call	PL35	;select bank 0
  5944  0C80  1308               	bcf	8,6
  5945  0C81                     l6478:	
  5946                           
  5947                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5948  0C81  0C74               	rrf	lcd_put_byte@temp,w
  5949  0C82  24CE  120A  158A   	fcall	PL33	;call to abstracted procedure
  5950  0C85  1C03               	btfss	3,0
  5951  0C86  2C8A               	goto	u2780
  5952  0C87  24D5               	call	PL35	;select bank 0
  5953  0C88  1788               	bsf	8,7
  5954  0C89  2C8C               	goto	u2794
  5955  0C8A                     u2780:	
  5956  0C8A  24D5               	call	PL35	;select bank 0
  5957  0C8B  1388               	bcf	8,7
  5958  0C8C                     u2794:	
  5959                           
  5960                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5961  0C8C  3021               	movlw	33
  5962  0C8D  00F1               	movwf	??_lcd_put_byte
  5963  0C8E                     u3967:	
  5964  0C8E  0BF1               	decfsz	??_lcd_put_byte,f
  5965  0C8F  2C8E               	goto	u3967
  5966  0C90  24D5               	call	PL35	;select bank 0
  5967                           
  5968                           ;lcd(16).c: 139: RD3 = 1;
  5969  0C91  3021               	movlw	33
  5970  0C92  1588               	bsf	8,3
  5971                           
  5972                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5973  0C93  00F1               	movwf	??_lcd_put_byte
  5974  0C94                     u3977:	
  5975  0C94  0BF1               	decfsz	??_lcd_put_byte,f
  5976  0C95  2C94               	goto	u3977
  5977  0C96  24D5               	call	PL35	;select bank 0
  5978                           
  5979                           ;lcd(16).c: 141: RD3 = 0;
  5980  0C97  1188               	bcf	8,3
  5981  0C98  0008               	return
  5982  0C99                     __end_of_lcd_put_byte:	
  5983  0C99                     __ptext562:	
  5984 ;; =============== function ___ftadd ends ============
  5985                           
  5986                           
  5987 ;; *************** function _lcd_busy *****************
  5988 ;; Defined at:
  5989 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;		None
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  busy            1    1[COMMON] unsigned char 
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  1    wreg      unsigned char 
  5996 ;; Registers used:
  5997 ;;		wreg
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 60/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6003 ;;      Params:         0       0       0       0       0
  6004 ;;      Locals:         1       0       0       0       0
  6005 ;;      Temps:          1       0       0       0       0
  6006 ;;      Totals:         2       0       0       0       0
  6007 ;;Total ram usage:        2 bytes
  6008 ;; Hardware stack levels used:    1
  6009 ;; This function calls:
  6010 ;;		Nothing
  6011 ;; This function is called by:
  6012 ;;		_lcd_init
  6013 ;;		_lcd_putc
  6014 ;;		_lcd_gotoxy
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017  0C99                     _lcd_busy:	
  6018                           
  6019                           ;lcd(16).c: 48: unsigned char busy;
  6020                           ;lcd(16).c: 50: TRISD4 = 1;
  6021                           
  6022                           ; Regs used in _lcd_busy: [wreg]
  6023  0C99  1683               	bsf	3,5	;RP0=1, select bank1
  6024  0C9A  1303               	bcf	3,6	;RP1=0, select bank1
  6025  0C9B  1608               	bsf	8,4
  6026                           
  6027                           ;lcd(16).c: 51: TRISD5 = 1;
  6028  0C9C  1688               	bsf	8,5
  6029                           
  6030                           ;lcd(16).c: 52: TRISD6 = 1;
  6031  0C9D  1708               	bsf	8,6
  6032                           
  6033                           ;lcd(16).c: 53: TRISD7 = 1;
  6034  0C9E  1788               	bsf	8,7
  6035                           
  6036                           ;lcd(16).c: 55: RD2 = 1;
  6037  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  6038  0CA0  3021               	movlw	33
  6039  0CA1  1508               	bsf	8,2
  6040                           
  6041                           ;lcd(16).c: 56: RD1 = 0;
  6042  0CA2  1088               	bcf	8,1
  6043                           
  6044                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  6045  0CA3  00F0               	movwf	??_lcd_busy
  6046  0CA4                     u3887:	
  6047  0CA4  0BF0               	decfsz	??_lcd_busy,f
  6048  0CA5  2CA4               	goto	u3887
  6049  0CA6  24D5               	call	PL35	;select bank 0
  6050                           
  6051                           ;lcd(16).c: 58: RD3 = 1;
  6052  0CA7  3021               	movlw	33
  6053  0CA8  1588               	bsf	8,3
  6054                           
  6055                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  6056  0CA9  00F0               	movwf	??_lcd_busy
  6057  0CAA                     u3897:	
  6058  0CAA  0BF0               	decfsz	??_lcd_busy,f
  6059  0CAB  2CAA               	goto	u3897
  6060                           
  6061                           ;lcd(16).c: 61: busy = RD7;
  6062  0CAC  3000               	movlw	0
  6063  0CAD  24D5               	call	PL35	;select bank 0
  6064  0CAE  1B88               	btfsc	8,7
  6065  0CAF  3001               	movlw	1
  6066  0CB0  00F1               	movwf	lcd_busy@busy
  6067  0CB1  3021               	movlw	33
  6068                           
  6069                           ;lcd(16).c: 63: RD3 = 0;
  6070  0CB2  1188               	bcf	8,3
  6071                           
  6072                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  6073  0CB3  00F0               	movwf	??_lcd_busy
  6074  0CB4                     u3907:	
  6075  0CB4  0BF0               	decfsz	??_lcd_busy,f
  6076  0CB5  2CB4               	goto	u3907
  6077  0CB6  24D5               	call	PL35	;select bank 0
  6078                           
  6079                           ;lcd(16).c: 65: RD3 = 1;
  6080  0CB7  3021               	movlw	33
  6081  0CB8  1588               	bsf	8,3
  6082                           
  6083                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  6084  0CB9  00F0               	movwf	??_lcd_busy
  6085  0CBA                     u3917:	
  6086  0CBA  0BF0               	decfsz	??_lcd_busy,f
  6087  0CBB  2CBA               	goto	u3917
  6088  0CBC  24D5               	call	PL35	;select bank 0
  6089                           
  6090                           ;lcd(16).c: 67: RD3 = 0;
  6091  0CBD  1188               	bcf	8,3
  6092                           
  6093                           ;lcd(16).c: 70: return busy;
  6094  0CBE  0871               	movf	lcd_busy@busy,w
  6095  0CBF  0008               	return
  6096  0CC0                     __end_of_lcd_busy:	
  6097  0CC0                     __ptext579:	
  6098 ;; =============== function _isdigit ends ============
  6099                           
  6100                           
  6101 ;; *************** function _isprint *****************
  6102 ;; Defined at:
  6103 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  c               1    wreg     unsigned char 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;  c               1    1[COMMON] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;		None               void
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/20
  6114 ;;		On exit  : 0/20
  6115 ;;		Unchanged: FFFFF/0
  6116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6117 ;;      Params:         0       0       0       0       0
  6118 ;;      Locals:         2       0       0       0       0
  6119 ;;      Temps:          0       0       0       0       0
  6120 ;;      Totals:         2       0       0       0       0
  6121 ;;Total ram usage:        2 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_lcd_putc
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129  0CC0                     _isprint:	
  6130                           
  6131                           ; Regs used in _isprint: [wreg+status,2+status,0]
  6132                           ;isprint@c stored from wreg
  6133  0CC0  00F1               	movwf	isprint@c
  6134  0CC1  307F               	movlw	127
  6135  0CC2  01F0               	clrf	_isprint$3673
  6136  0CC3  0271               	subwf	isprint@c,w
  6137  0CC4  1803               	skipnc
  6138  0CC5  2CCC               	goto	l6060
  6139  0CC6  3020               	movlw	32
  6140  0CC7  0271               	subwf	isprint@c,w
  6141  0CC8  1C03               	skipc
  6142  0CC9  2CCC               	goto	l6060
  6143  0CCA  01F0               	clrf	_isprint$3673
  6144  0CCB  0AF0               	incf	_isprint$3673,f
  6145  0CCC                     l6060:	
  6146  0CCC  0C70               	rrf	_isprint$3673,w
  6147  0CCD  0008               	return
  6148  0CCE                     __end_of_isprint:	
  6149  0CCE                     PL33:	
  6150  0CCE  00F1               	movwf	??_lcd_put_byte
  6151  0CCF  0CF1               	rrf	??_lcd_put_byte,f
  6152  0CD0  0C71               	rrf	??_lcd_put_byte,w
  6153  0CD1  3901               	andlw	1
  6154  0CD2  00F2               	movwf	??_lcd_put_byte+1
  6155  0CD3  0C72               	rrf	??_lcd_put_byte+1,w
  6156  0CD4  0008               	return
  6157  0CD5                     PL35:	
  6158  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  6159  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  6160  0CD7  0008               	return
  6161                           
  6162                           	psect	text555
  6163  08A4                     __ptext555:	
  6164 ;; =============== function _lcd_init ends ============
  6165                           
  6166                           
  6167 ;; *************** function _read_adc_AN12 *****************
  6168 ;; Defined at:
  6169 ;;		line 26 in file "D:\TTVXL\Project TTVXL\BT01week11ttvxl\BT01week11ttvxl.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;		None
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;		None
  6174 ;; Return value:  Size  Location     Type
  6175 ;;		None               void
  6176 ;; Registers used:
  6177 ;;		wreg, status,2, status,0, pclath, cstack
  6178 ;; Tracked objects:
  6179 ;;		On entry : 60/20
  6180 ;;		On exit  : 60/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6183 ;;      Params:         0       0       0       0       0
  6184 ;;      Locals:         0       0       0       0       0
  6185 ;;      Temps:          0       2       0       0       0
  6186 ;;      Totals:         0       2       0       0       0
  6187 ;;Total ram usage:        2 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    2
  6190 ;; This function calls:
  6191 ;;		___awtoft
  6192 ;;		___ftdiv
  6193 ;;		___ftmul
  6194 ;; This function is called by:
  6195 ;;		_main
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198  08A4                     _read_adc_AN12:	
  6199                           
  6200                           ;BT01week11ttvxl.c: 27: CHS3 = 1; CHS2 = 1;CHS1 =0;CHS0 =0;
  6201                           
  6202                           ; Regs used in _read_adc_AN12: [wreg+status,2+status,0+pclath+cstack]
  6203  08A4  1283               	bcf	3,5	;RP0=0, select bank0
  6204  08A5  300D               	movlw	13
  6205  08A6  169F               	bsf	31,5
  6206  08A7  161F               	bsf	31,4
  6207  08A8  119F               	bcf	31,3
  6208  08A9  111F               	bcf	31,2
  6209                           
  6210                           ;BT01week11ttvxl.c: 28: _delay((unsigned long)((10)*(4000000/4000.0)));
  6211  08AA  00BF               	movwf	??_read_adc_AN12+1
  6212  08AB  30FB               	movlw	251
  6213  08AC  00BE               	movwf	??_read_adc_AN12
  6214  08AD                     u3867:	
  6215  08AD  0BBE               	decfsz	??_read_adc_AN12,f
  6216  08AE  28AD               	goto	u3867
  6217  08AF  0BBF               	decfsz	??_read_adc_AN12+1,f
  6218  08B0  28AD               	goto	u3867
  6219  08B1  28B2               	nop2
  6220                           
  6221                           ;BT01week11ttvxl.c: 29: GO_nDONE = 1;
  6222  08B2  1283               	bcf	3,5	;RP0=0, select bank0
  6223  08B3  1303               	bcf	3,6	;RP1=0, select bank0
  6224  08B4  149F               	bsf	31,1
  6225  08B5                     l1053:	
  6226                           ;BT01week11ttvxl.c: 30: while(GO_nDONE == 1){}
  6227                           
  6228  08B5  189F               	btfsc	31,1
  6229  08B6  28B5               	goto	l1053
  6230                           
  6231                           ;BT01week11ttvxl.c: 31: adc2 = ADRESH * 256 + ADRESL;
  6232  08B7  081E               	movf	30,w	;volatile
  6233  08B8  00E7               	movwf	_adc2+1
  6234  08B9  01E6               	clrf	_adc2
  6235  08BA  1683               	bsf	3,5	;RP0=1, select bank1
  6236  08BB  081E               	movf	30,w	;volatile
  6237  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  6238  08BD  07E6               	addwf	_adc2,f
  6239  08BE  1803               	skipnc
  6240  08BF  0AE7               	incf	_adc2+1,f
  6241                           
  6242                           ;BT01week11ttvxl.c: 32: res2 = (adc2/1023.0)*500.0;
  6243  08C0  30FA               	movlw	250
  6244  08C1  219C  120A  158A   	fcall	PL13	;call to abstracted procedure
  6245  08C4  0867               	movf	_adc2+1,w
  6246  08C5  00F9               	movwf	?___awtoft+1
  6247  08C6  0866               	movf	_adc2,w
  6248  08C7  00F8               	movwf	?___awtoft
  6249  08C8  217F  120A  158A   	fcall	___awtoft
  6250  08CB  21AE  120A  158A   	fcall	PL32	;call to abstracted procedure
  6251  08CE  2115  120A  158A   	fcall	___ftdiv
  6252  08D1  21A7               	fcall	PL29	;call to abstracted procedure
  6253  08D2  120A  158A  26EC   	fcall	___ftmul
  6254  08D5  082F               	movf	?___ftmul,w
  6255  08D6  00E1               	movwf	_res2
  6256  08D7  0830               	movf	?___ftmul+1,w
  6257  08D8  00E2               	movwf	_res2+1
  6258  08D9  0831               	movf	?___ftmul+2,w
  6259  08DA  00E3               	movwf	_res2+2
  6260  08DB  0008               	return
  6261  08DC                     __end_of_read_adc_AN12:	
  6262  08DC                     __ptext556:	
  6263 ;; =============== function _read_adc_AN12 ends ============
  6264                           
  6265                           
  6266 ;; *************** function _read_adc_AN3 *****************
  6267 ;; Defined at:
  6268 ;;		line 17 in file "D:\TTVXL\Project TTVXL\BT01week11ttvxl\BT01week11ttvxl.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;		None
  6273 ;; Return value:  Size  Location     Type
  6274 ;;		None               void
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 60/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6282 ;;      Params:         0       0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0
  6284 ;;      Temps:          0       2       0       0       0
  6285 ;;      Totals:         0       2       0       0       0
  6286 ;;Total ram usage:        2 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    2
  6289 ;; This function calls:
  6290 ;;		___awtoft
  6291 ;;		___ftdiv
  6292 ;;		___ftmul
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297  08DC                     _read_adc_AN3:	
  6298                           
  6299                           ;BT01week11ttvxl.c: 18: CHS3 = 0; CHS2 = 0;CHS1 =1;CHS0 =1;
  6300                           
  6301                           ; Regs used in _read_adc_AN3: [wreg+status,2+status,0+pclath+cstack]
  6302  08DC  1283               	bcf	3,5	;RP0=0, select bank0
  6303  08DD  1303               	bcf	3,6	;RP1=0, select bank0
  6304  08DE  300D               	movlw	13
  6305  08DF  129F               	bcf	31,5
  6306  08E0  121F               	bcf	31,4
  6307  08E1  159F               	bsf	31,3
  6308  08E2  151F               	bsf	31,2
  6309                           
  6310                           ;BT01week11ttvxl.c: 19: _delay((unsigned long)((10)*(4000000/4000.0)));
  6311  08E3  00BF               	movwf	??_read_adc_AN3+1
  6312  08E4  30FB               	movlw	251
  6313  08E5  00BE               	movwf	??_read_adc_AN3
  6314  08E6                     u3877:	
  6315  08E6  0BBE               	decfsz	??_read_adc_AN3,f
  6316  08E7  28E6               	goto	u3877
  6317  08E8  0BBF               	decfsz	??_read_adc_AN3+1,f
  6318  08E9  28E6               	goto	u3877
  6319  08EA  28EB               	nop2
  6320                           
  6321                           ;BT01week11ttvxl.c: 20: GO_nDONE = 1;
  6322  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  6323  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  6324  08ED  149F               	bsf	31,1
  6325  08EE                     l1047:	
  6326                           ;BT01week11ttvxl.c: 21: while(GO_nDONE == 1){}
  6327                           
  6328  08EE  189F               	btfsc	31,1
  6329  08EF  28EE               	goto	l1047
  6330                           
  6331                           ;BT01week11ttvxl.c: 22: adc1 = ADRESH * 256 + ADRESL;
  6332  08F0  081E               	movf	30,w	;volatile
  6333  08F1  00E5               	movwf	_adc1+1
  6334  08F2  01E4               	clrf	_adc1
  6335  08F3  1683               	bsf	3,5	;RP0=1, select bank1
  6336  08F4  081E               	movf	30,w	;volatile
  6337  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  6338  08F6  07E4               	addwf	_adc1,f
  6339  08F7  1803               	skipnc
  6340  08F8  0AE5               	incf	_adc1+1,f
  6341                           
  6342                           ;BT01week11ttvxl.c: 23: res1 = (adc1/1023.0)*500.0;
  6343  08F9  30FA               	movlw	250
  6344  08FA  219C  120A  158A   	fcall	PL13	;call to abstracted procedure
  6345  08FD  0865               	movf	_adc1+1,w
  6346  08FE  00F9               	movwf	?___awtoft+1
  6347  08FF  0864               	movf	_adc1,w
  6348  0900  00F8               	movwf	?___awtoft
  6349  0901  217F  120A  158A   	fcall	___awtoft
  6350  0904  21AE  120A  158A   	fcall	PL32	;call to abstracted procedure
  6351  0907  2115  120A  158A   	fcall	___ftdiv
  6352  090A  21A7               	fcall	PL29	;call to abstracted procedure
  6353  090B  120A  158A  26EC   	fcall	___ftmul
  6354  090E  082F               	movf	?___ftmul,w
  6355  090F  00DE               	movwf	_res1
  6356  0910  0830               	movf	?___ftmul+1,w
  6357  0911  00DF               	movwf	_res1+1
  6358  0912  0831               	movf	?___ftmul+2,w
  6359  0913  00E0               	movwf	_res1+2
  6360  0914  0008               	return
  6361  0915                     __end_of_read_adc_AN3:	
  6362  0915                     __ptext560:	
  6363 ;; =============== function ___ftmul ends ============
  6364                           
  6365                           
  6366 ;; *************** function ___ftdiv *****************
  6367 ;; Defined at:
  6368 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  f2              3    0[BANK0 ] float 
  6371 ;;  f1              3    3[BANK0 ] float 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;  f3              3   10[BANK0 ] float 
  6374 ;;  sign            1   14[BANK0 ] unsigned char 
  6375 ;;  exp             1   13[BANK0 ] unsigned char 
  6376 ;;  cntr            1    9[BANK0 ] unsigned char 
  6377 ;; Return value:  Size  Location     Type
  6378 ;;                  3    0[BANK0 ] float 
  6379 ;; Registers used:
  6380 ;;		wreg, status,2, status,0, pclath, cstack
  6381 ;; Tracked objects:
  6382 ;;		On entry : 60/0
  6383 ;;		On exit  : 60/0
  6384 ;;		Unchanged: FFF9F/0
  6385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6386 ;;      Params:         0       6       0       0       0
  6387 ;;      Locals:         0       6       0       0       0
  6388 ;;      Temps:          0       3       0       0       0
  6389 ;;      Totals:         0      15       0       0       0
  6390 ;;Total ram usage:       15 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    1
  6393 ;; This function calls:
  6394 ;;		___ftpack
  6395 ;; This function is called by:
  6396 ;;		_read_adc_AN3
  6397 ;;		_read_adc_AN12
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400  0915                     ___ftdiv:	
  6401                           
  6402                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6403  0915  0823               	movf	___ftdiv@f1,w
  6404  0916  00A6               	movwf	??___ftdiv
  6405  0917  0824               	movf	___ftdiv@f1+1,w
  6406  0918  00A7               	movwf	??___ftdiv+1
  6407  0919  0825               	movf	___ftdiv@f1+2,w
  6408  091A  00A8               	movwf	??___ftdiv+2
  6409  091B  1003               	clrc
  6410  091C  0D27               	rlf	??___ftdiv+1,w
  6411  091D  0D28               	rlf	??___ftdiv+2,w
  6412  091E  00AD               	movwf	___ftdiv@exp
  6413  091F  08AD               	movf	___ftdiv@exp,f
  6414  0920  1D03               	skipz
  6415  0921  2926               	goto	l6582
  6416  0922  01A0               	clrf	?___ftdiv
  6417  0923  01A1               	clrf	?___ftdiv+1
  6418  0924  01A2               	clrf	?___ftdiv+2
  6419  0925  0008               	return
  6420  0926                     l6582:	
  6421  0926  0820               	movf	___ftdiv@f2,w
  6422  0927  00A6               	movwf	??___ftdiv
  6423  0928  0821               	movf	___ftdiv@f2+1,w
  6424  0929  00A7               	movwf	??___ftdiv+1
  6425  092A  0822               	movf	___ftdiv@f2+2,w
  6426  092B  00A8               	movwf	??___ftdiv+2
  6427  092C  1003               	clrc
  6428  092D  0D27               	rlf	??___ftdiv+1,w
  6429  092E  0D28               	rlf	??___ftdiv+2,w
  6430  092F  00AE               	movwf	___ftdiv@sign
  6431  0930  08AE               	movf	___ftdiv@sign,f
  6432  0931  1D03               	skipz
  6433  0932  2937               	goto	l3366
  6434  0933  01A0               	clrf	?___ftdiv
  6435  0934  01A1               	clrf	?___ftdiv+1
  6436  0935  01A2               	clrf	?___ftdiv+2
  6437  0936  0008               	return
  6438  0937                     l3366:	
  6439  0937  3089               	movlw	137
  6440  0938  01AA               	clrf	___ftdiv@f3
  6441  0939  01AB               	clrf	___ftdiv@f3+1
  6442  093A  01AC               	clrf	___ftdiv@f3+2
  6443  093B  072E               	addwf	___ftdiv@sign,w
  6444  093C  00A6               	movwf	??___ftdiv
  6445  093D  02AD               	subwf	___ftdiv@exp,f
  6446  093E  0825               	movf	___ftdiv@f1+2,w
  6447  093F  00AE               	movwf	___ftdiv@sign
  6448  0940  0822               	movf	___ftdiv@f2+2,w
  6449  0941  06AE               	xorwf	___ftdiv@sign,f
  6450  0942  3080               	movlw	128
  6451  0943  05AE               	andwf	___ftdiv@sign,f
  6452  0944  3018               	movlw	24
  6453  0945  17A4               	bsf	___ftdiv@f1+1,7
  6454  0946  01A5               	clrf	___ftdiv@f1+2
  6455  0947  17A1               	bsf	___ftdiv@f2+1,7
  6456  0948  01A2               	clrf	___ftdiv@f2+2
  6457  0949  00A9               	movwf	___ftdiv@cntr
  6458  094A                     l6606:	
  6459  094A  1003               	clrc
  6460  094B  0DAA               	rlf	___ftdiv@f3,f
  6461  094C  0DAB               	rlf	___ftdiv@f3+1,f
  6462  094D  0DAC               	rlf	___ftdiv@f3+2,f
  6463  094E  0822               	movf	___ftdiv@f2+2,w
  6464  094F  0225               	subwf	___ftdiv@f1+2,w
  6465  0950  1D03               	skipz
  6466  0951  2958               	goto	u3025
  6467  0952  0821               	movf	___ftdiv@f2+1,w
  6468  0953  0224               	subwf	___ftdiv@f1+1,w
  6469  0954  1D03               	skipz
  6470  0955  2958               	goto	u3025
  6471  0956  0820               	movf	___ftdiv@f2,w
  6472  0957  0223               	subwf	___ftdiv@f1,w
  6473  0958                     u3025:	
  6474  0958  1C03               	skipc
  6475  0959  2966               	goto	L6
  6476  095A  0820               	movf	___ftdiv@f2,w
  6477  095B  02A3               	subwf	___ftdiv@f1,f
  6478  095C  0821               	movf	___ftdiv@f2+1,w
  6479  095D  1C03               	skipc
  6480  095E  0F21               	incfsz	___ftdiv@f2+1,w
  6481  095F  02A4               	subwf	___ftdiv@f1+1,f
  6482  0960  0822               	movf	___ftdiv@f2+2,w
  6483  0961  1C03               	skipc
  6484  0962  0A22               	incf	___ftdiv@f2+2,w
  6485  0963  02A5               	subwf	___ftdiv@f1+2,f
  6486  0964  142A               	bsf	___ftdiv@f3,0
  6487  0965  1003               	clrc
  6488  0966                     L6:	
  6489  0966  0DA3               	rlf	___ftdiv@f1,f
  6490  0967  0DA4               	rlf	___ftdiv@f1+1,f
  6491  0968  0DA5               	rlf	___ftdiv@f1+2,f
  6492  0969  0BA9               	decfsz	___ftdiv@cntr,f
  6493  096A  294A               	goto	l6606
  6494  096B  082A               	movf	___ftdiv@f3,w
  6495  096C  00F0               	movwf	?___ftpack
  6496  096D  082B               	movf	___ftdiv@f3+1,w
  6497  096E  00F1               	movwf	?___ftpack+1
  6498  096F  082C               	movf	___ftdiv@f3+2,w
  6499  0970  00F2               	movwf	?___ftpack+2
  6500  0971  082D               	movf	___ftdiv@exp,w
  6501  0972  00F3               	movwf	?___ftpack+3
  6502  0973  082E               	movf	___ftdiv@sign,w
  6503  0974  00F4               	movwf	?___ftpack+4
  6504  0975  120A  158A  2769   	fcall	___ftpack
  6505  0978  0870               	movf	?___ftpack,w
  6506  0979  00A0               	movwf	?___ftdiv
  6507  097A  0871               	movf	?___ftpack+1,w
  6508  097B  00A1               	movwf	?___ftdiv+1
  6509  097C  0872               	movf	?___ftpack+2,w
  6510  097D  00A2               	movwf	?___ftdiv+2
  6511  097E  0008               	return
  6512  097F                     __end_of___ftdiv:	
  6513  097F                     __ptext558:	
  6514 ;; =============== function ___lltoft ends ============
  6515                           
  6516                           
  6517 ;; *************** function ___awtoft *****************
  6518 ;; Defined at:
  6519 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  c               2    8[COMMON] int 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  sign            1   11[COMMON] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  3    8[COMMON] float 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, pclath, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 60/0
  6530 ;;		On exit  : 60/0
  6531 ;;		Unchanged: FFF9F/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         3       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0
  6536 ;;      Totals:         4       0       0       0       0
  6537 ;;Total ram usage:        4 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    1
  6540 ;; This function calls:
  6541 ;;		___ftpack
  6542 ;; This function is called by:
  6543 ;;		_read_adc_AN3
  6544 ;;		_read_adc_AN12
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547  097F                     ___awtoft:	
  6548                           
  6549                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6550  097F  01FB               	clrf	___awtoft@sign
  6551  0980  1FF9               	btfss	___awtoft@c+1,7
  6552  0981  2989               	goto	l6684
  6553  0982  09F8               	comf	___awtoft@c,f
  6554  0983  09F9               	comf	___awtoft@c+1,f
  6555  0984  0AF8               	incf	___awtoft@c,f
  6556  0985  1903               	skipnz
  6557  0986  0AF9               	incf	___awtoft@c+1,f
  6558  0987  01FB               	clrf	___awtoft@sign
  6559  0988  0AFB               	incf	___awtoft@sign,f
  6560  0989                     l6684:	
  6561  0989  0878               	movf	___awtoft@c,w
  6562  098A  00F0               	movwf	?___ftpack
  6563  098B  0879               	movf	___awtoft@c+1,w
  6564  098C  00F1               	movwf	?___ftpack+1
  6565  098D  308E               	movlw	142
  6566  098E  01F2               	clrf	?___ftpack+2
  6567  098F  00F3               	movwf	?___ftpack+3
  6568  0990  087B               	movf	___awtoft@sign,w
  6569  0991  00F4               	movwf	?___ftpack+4
  6570  0992  120A  158A  2769   	fcall	___ftpack
  6571  0995  0870               	movf	?___ftpack,w
  6572  0996  00F8               	movwf	?___awtoft
  6573  0997  0871               	movf	?___ftpack+1,w
  6574  0998  00F9               	movwf	?___awtoft+1
  6575  0999  0872               	movf	?___ftpack+2,w
  6576  099A  00FA               	movwf	?___awtoft+2
  6577  099B  0008               	return
  6578  099C                     __end_of___awtoft:	
  6579  099C                     PL13:	
  6580  099C  01AF               	clrf	?___ftmul
  6581  099D  00B0               	movwf	?___ftmul+1
  6582  099E  3043               	movlw	67
  6583  099F  00B1               	movwf	?___ftmul+2
  6584  09A0  30C0               	movlw	192
  6585  09A1  00A0               	movwf	?___ftdiv
  6586  09A2  307F               	movlw	127
  6587  09A3  00A1               	movwf	?___ftdiv+1
  6588  09A4  3044               	movlw	68
  6589  09A5  00A2               	movwf	?___ftdiv+2
  6590  09A6  0008               	return
  6591  09A7                     PL29:	
  6592  09A7  0820               	movf	?___ftdiv,w
  6593  09A8  00B2               	movwf	?___ftmul+3
  6594  09A9  0821               	movf	?___ftdiv+1,w
  6595  09AA  00B3               	movwf	?___ftmul+4
  6596  09AB  0822               	movf	?___ftdiv+2,w
  6597  09AC  00B4               	movwf	?___ftmul+5
  6598  09AD  0008               	return
  6599  09AE                     PL32:	
  6600  09AE  0878               	movf	?___awtoft,w
  6601  09AF  00A3               	movwf	?___ftdiv+3
  6602  09B0  0879               	movf	?___awtoft+1,w
  6603  09B1  00A4               	movwf	?___ftdiv+4
  6604  09B2  087A               	movf	?___awtoft+2,w
  6605  09B3  00A5               	movwf	?___ftdiv+5
  6606  09B4  0008               	return
  6607                           
  6608                           	psect	text576
  6609  173E                     __ptext576:	
  6610 ;; =============== function ___bmul ends ============
  6611                           
  6612                           
  6613 ;; *************** function __div_to_l_ *****************
  6614 ;; Defined at:
  6615 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  f1              3    0[COMMON] unsigned char 
  6618 ;;  f2              3    3[COMMON] unsigned char 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  quot            4    0[BANK0 ] unsigned long 
  6621 ;;  exp1            1    5[BANK0 ] unsigned char 
  6622 ;;  cntr            1    4[BANK0 ] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  4    0[COMMON] unsigned long 
  6625 ;; Registers used:
  6626 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 60/0
  6630 ;;		Unchanged: FFF9F/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6632 ;;      Params:         6       0       0       0       0
  6633 ;;      Locals:         0       6       0       0       0
  6634 ;;      Temps:          8       0       0       0       0
  6635 ;;      Totals:        14       6       0       0       0
  6636 ;;Total ram usage:       20 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; This function calls:
  6639 ;;		Nothing
  6640 ;; This function is called by:
  6641 ;;		_printf
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644  173E                     __div_to_l_:	
  6645                           
  6646                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6647  173E  3070               	movlw	low __div_to_l_@f1
  6648  173F  27F3  160A  118A   	fcall	PL2	;call to abstracted procedure
  6649  1742  1003               	clrc
  6650  1743  0D78               	rlf	??__div_to_l_+2,w
  6651  1744  0D79               	rlf	??__div_to_l_+3,w
  6652  1745  1283               	bcf	3,5	;RP0=0, select bank0
  6653  1746  1303               	bcf	3,6	;RP1=0, select bank0
  6654  1747  00A5               	movwf	__div_to_l_@exp1
  6655  1748  08A5               	movf	__div_to_l_@exp1,f
  6656  1749  1D03               	skipz
  6657  174A  2F50               	goto	l6128
  6658  174B                     l6126:	
  6659  174B  01F0               	clrf	?__div_to_l_
  6660  174C  01F1               	clrf	?__div_to_l_+1
  6661  174D  01F2               	clrf	?__div_to_l_+2
  6662  174E  01F3               	clrf	?__div_to_l_+3
  6663  174F  0008               	return
  6664  1750                     l6128:	
  6665  1750  3073               	movlw	low __div_to_l_@f2
  6666  1751  27F3  160A  118A   	fcall	PL2	;call to abstracted procedure
  6667  1754  1003               	clrc
  6668  1755  0D78               	rlf	??__div_to_l_+2,w
  6669  1756  0D79               	rlf	??__div_to_l_+3,w
  6670  1757  00A4               	movwf	__div_to_l_@cntr
  6671  1758  08A4               	movf	__div_to_l_@cntr,f
  6672  1759  1903               	btfsc	3,2
  6673  175A  2F4B               	goto	l6126
  6674  175B  3070               	movlw	low __div_to_l_@f1
  6675  175C  0084               	movwf	4
  6676  175D  3080               	movlw	128
  6677  175E  0A84               	incf	4,f
  6678  175F  0A84               	incf	4,f
  6679  1760  0480               	iorwf	0,f
  6680  1761  3070               	movlw	low __div_to_l_@f1
  6681  1762  0A84               	incf	4,f
  6682  1763  0084               	movwf	4
  6683  1764  3073               	movlw	low __div_to_l_@f2
  6684  1765  0A84               	incf	4,f
  6685  1766  0A84               	incf	4,f
  6686  1767  0A84               	incf	4,f
  6687  1768  0180               	clrf	0
  6688  1769  0084               	movwf	4
  6689  176A  3080               	movlw	128
  6690  176B  0A84               	incf	4,f
  6691  176C  0A84               	incf	4,f
  6692  176D  0480               	iorwf	0,f
  6693  176E  3073               	movlw	low __div_to_l_@f2
  6694  176F  0A84               	incf	4,f
  6695  1770  0084               	movwf	4
  6696  1771  307F               	movlw	127
  6697  1772  0A84               	incf	4,f
  6698  1773  0A84               	incf	4,f
  6699  1774  0A84               	incf	4,f
  6700  1775  0180               	clrf	0
  6701  1776  01A0               	clrf	__div_to_l_@quot
  6702  1777  01A1               	clrf	__div_to_l_@quot+1
  6703  1778  01A2               	clrf	__div_to_l_@quot+2
  6704  1779  01A3               	clrf	__div_to_l_@quot+3
  6705  177A  02A5               	subwf	__div_to_l_@exp1,f
  6706  177B  30A0               	movlw	160
  6707  177C  0724               	addwf	__div_to_l_@cntr,w
  6708  177D  00F6               	movwf	??__div_to_l_
  6709  177E  02A5               	subwf	__div_to_l_@exp1,f
  6710  177F  3020               	movlw	32
  6711  1780  00A4               	movwf	__div_to_l_@cntr
  6712  1781                     l6142:	
  6713  1781  3073               	movlw	low __div_to_l_@f2
  6714  1782  1003               	clrc
  6715  1783  0DA0               	rlf	__div_to_l_@quot,f
  6716  1784  0DA1               	rlf	__div_to_l_@quot+1,f
  6717  1785  0DA2               	rlf	__div_to_l_@quot+2,f
  6718  1786  0DA3               	rlf	__div_to_l_@quot+3,f
  6719  1787  27F3  160A  118A   	fcall	PL2	;call to abstracted procedure
  6720  178A  3070               	movlw	low __div_to_l_@f1
  6721  178B  0084               	movwf	4
  6722  178C  0800               	movf	0,w
  6723  178D  00FA               	movwf	??__div_to_l_+4
  6724  178E  0A84               	incf	4,f
  6725  178F  0800               	movf	0,w
  6726  1790  00FB               	movwf	??__div_to_l_+5
  6727  1791  0A84               	incf	4,f
  6728  1792  0800               	movf	0,w
  6729  1793  00FC               	movwf	??__div_to_l_+6
  6730  1794  0A84               	incf	4,f
  6731  1795  0800               	movf	0,w
  6732  1796  00FD               	movwf	??__div_to_l_+7
  6733  1797  0879               	movf	??__div_to_l_+3,w
  6734  1798  027D               	subwf	??__div_to_l_+7,w
  6735  1799  1D03               	skipz
  6736  179A  2FA5               	goto	u2065
  6737  179B  0878               	movf	??__div_to_l_+2,w
  6738  179C  027C               	subwf	??__div_to_l_+6,w
  6739  179D  1D03               	skipz
  6740  179E  2FA5               	goto	u2065
  6741  179F  0877               	movf	??__div_to_l_+1,w
  6742  17A0  027B               	subwf	??__div_to_l_+5,w
  6743  17A1  1D03               	skipz
  6744  17A2  2FA5               	goto	u2065
  6745  17A3  0876               	movf	??__div_to_l_,w
  6746  17A4  027A               	subwf	??__div_to_l_+4,w
  6747  17A5                     u2065:	
  6748  17A5  1C03               	skipc
  6749  17A6  2FC1               	goto	l3566
  6750  17A7  3073               	movlw	low __div_to_l_@f2
  6751  17A8  27F3  160A  118A   	fcall	PL2	;call to abstracted procedure
  6752  17AB  3070               	movlw	low __div_to_l_@f1
  6753  17AC  0084               	movwf	4
  6754  17AD  0876               	movf	??__div_to_l_,w
  6755  17AE  0280               	subwf	0,f
  6756  17AF  0A84               	incf	4,f
  6757  17B0  0877               	movf	??__div_to_l_+1,w
  6758  17B1  1C03               	skipc
  6759  17B2  0F77               	incfsz	??__div_to_l_+1,w
  6760  17B3  0280               	subwf	0,f
  6761  17B4  0A84               	incf	4,f
  6762  17B5  0878               	movf	??__div_to_l_+2,w
  6763  17B6  1C03               	skipc
  6764  17B7  0F78               	incfsz	??__div_to_l_+2,w
  6765  17B8  0280               	subwf	0,f
  6766  17B9  0A84               	incf	4,f
  6767  17BA  0879               	movf	??__div_to_l_+3,w
  6768  17BB  1C03               	skipc
  6769  17BC  0A79               	incf	??__div_to_l_+3,w
  6770  17BD  0280               	subwf	0,f
  6771  17BE  3003               	movlw	3
  6772  17BF  0284               	subwf	4,f
  6773  17C0  1420               	bsf	__div_to_l_@quot,0
  6774  17C1                     l3566:	
  6775  17C1  3070               	movlw	low __div_to_l_@f1
  6776  17C2  0084               	movwf	4
  6777  17C3  1003               	clrc
  6778  17C4  0D80               	rlf	0,f
  6779  17C5  0A84               	incf	4,f
  6780  17C6  0D80               	rlf	0,f
  6781  17C7  0A84               	incf	4,f
  6782  17C8  0D80               	rlf	0,f
  6783  17C9  0A84               	incf	4,f
  6784  17CA  0D80               	rlf	0,f
  6785  17CB  0BA4               	decfsz	__div_to_l_@cntr,f
  6786  17CC  2F81               	goto	l6142
  6787  17CD  1FA5               	btfss	__div_to_l_@exp1,7
  6788  17CE  2FDC               	goto	l6160
  6789  17CF  0825               	movf	__div_to_l_@exp1,w
  6790  17D0  3A80               	xorlw	128
  6791  17D1  3E9F               	addlw	159
  6792  17D2  1C03               	btfss	3,0
  6793  17D3  2F4B               	goto	l6126
  6794  17D4                     l6156:	
  6795  17D4  1003               	clrc
  6796  17D5  0CA3               	rrf	__div_to_l_@quot+3,f
  6797  17D6  0CA2               	rrf	__div_to_l_@quot+2,f
  6798  17D7  0CA1               	rrf	__div_to_l_@quot+1,f
  6799  17D8  0CA0               	rrf	__div_to_l_@quot,f
  6800  17D9  0FA5               	incfsz	__div_to_l_@exp1,f
  6801  17DA  2FD4               	goto	l6156
  6802  17DB  2FEA               	goto	l6166
  6803  17DC                     l6160:	
  6804  17DC  3020               	movlw	32
  6805  17DD  0225               	subwf	__div_to_l_@exp1,w
  6806  17DE  1803               	btfsc	3,0
  6807  17DF  2F4B               	goto	l6126
  6808  17E0                     l3574:	
  6809  17E0  08A5               	movf	__div_to_l_@exp1,f
  6810  17E1  1903               	btfsc	3,2
  6811  17E2  2FEA               	goto	l6166
  6812  17E3  1003               	clrc
  6813  17E4  0DA0               	rlf	__div_to_l_@quot,f
  6814  17E5  0DA1               	rlf	__div_to_l_@quot+1,f
  6815  17E6  0DA2               	rlf	__div_to_l_@quot+2,f
  6816  17E7  0DA3               	rlf	__div_to_l_@quot+3,f
  6817  17E8  03A5               	decf	__div_to_l_@exp1,f
  6818  17E9  2FE0               	goto	l3574
  6819  17EA                     l6166:	
  6820  17EA  0823               	movf	__div_to_l_@quot+3,w
  6821  17EB  00F3               	movwf	?__div_to_l_+3
  6822  17EC  0822               	movf	__div_to_l_@quot+2,w
  6823  17ED  00F2               	movwf	?__div_to_l_+2
  6824  17EE  0821               	movf	__div_to_l_@quot+1,w
  6825  17EF  00F1               	movwf	?__div_to_l_+1
  6826  17F0  0820               	movf	__div_to_l_@quot,w
  6827  17F1  00F0               	movwf	?__div_to_l_
  6828  17F2  0008               	return
  6829  17F3                     __end_of__div_to_l_:	
  6830  17F3                     PL2:	
  6831  17F3  0084               	movwf	4
  6832  17F4  0800               	movf	0,w
  6833  17F5  00F6               	movwf	??__div_to_l_
  6834  17F6  0A84               	incf	4,f
  6835  17F7  0800               	movf	0,w
  6836  17F8  00F7               	movwf	??__div_to_l_+1
  6837  17F9  0A84               	incf	4,f
  6838  17FA  0800               	movf	0,w
  6839  17FB  00F8               	movwf	??__div_to_l_+2
  6840  17FC  0A84               	incf	4,f
  6841  17FD  0800               	movf	0,w
  6842  17FE  00F9               	movwf	??__div_to_l_+3
  6843  17FF  0008               	return
  6844                           
  6845                           	psect	text580
  6846  0000                     __ptext580:	
  6847 ;; =============== function _isprint ends ============
  6848                           
  6849  007E                     btemp	set	126	;btemp
  6850  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Nov 05 15:09:45 2022

                     pc 0002          ___bmul@product 007A            ___awdiv@sign 007B                      fsr 0004  
   ___wmul@multiplicand 0072            ___ftadd@exp1 0049            ___ftadd@exp2 0048           ?_lcd_put_byte 0070  
          ___ftadd@sign 0047                     _RD1 0041                     _RD2 0042                     _RD3 0043  
                   _RD4 0044                     _RD5 0045                     _RD6 0046                     _RD7 0047  
                   fsr0 0004                     indf 0000            ___awmod@sign 0075            ___ftdiv@cntr 0029  
          ___ftdiv@sign 002E                    l1050 0000                    l1053 08B5                    l1047 08EE  
                  l1056 0000                    l2121 0000                    l1065 0000                    l2132 0000  
                  l2124 0000                    l2212 00DF                    l2155 0000                    l2251 0389  
                  l2273 04C0                    l3306 0AC6                    l3315 0000                    l3309 0000  
                  l3413 0000                    l3263 0000                    l3440 0000                    l3273 0000  
                  l3337 06F5                    l3258 0000                    l3426 0000                    l3531 065E  
                  l3524 0000                    l6100 0000                    l3436 0000                    l3516 0000  
                  l6110 0652                    l3366 0937                    l3279 0000                    l3455 0000  
                  l3359 0000                    l6120 0668                    l6112 0000                    l6104 0000  
                  l6200 0000                    l3393 0552                    l6114 065A                    l6210 0000  
                  l7010 031E                    l6060 0CCC                    l6052 0000                    l6140 0000  
                  l6124 0000                    l6204 0000                    l6212 0000                    l6300 0000  
                  l7020 0363                    l7012 034A                    l7004 0302                    l7100 0000  
                  l6054 0000                    l3574 17E0                    l6150 0000                    l3566 17C1  
                  l6142 1781                    l6134 0000                    l6126 174B                    l6206 0AD3  
                  l6222 0AED                    l6214 0AD9                    l6230 0000                    l6310 0000  
                  l6302 0E74                    l3494 0000                    l7006 0317                    l7110 0000  
                  l7102 0000                    l3567 0000                    l6072 04FD                    l6064 0000  
                  l6080 060C                    l6160 17DC                    l6144 0000                    l6136 0000  
                  l6128 1750                    l6224 0000                    l6216 0000                    l6240 0F7F  
                  l6232 0F71                    l6320 0000                    l7024 0372                    l7016 0000  
                  l7120 0000                    l7112 0000                    l7104 0000                    l6066 0000  
                  l6090 0000                    l6138 0000                    l6170 0000                    l6218 0000  
                  l6250 0000                    l6242 0F89                    l6330 0EA2                    l6306 0000  
                  l6402 0000                    l7034 0000                    l7026 0000                    l7018 034E  
                  l7122 0000                    l7114 002C                    l7106 0000                    l6092 0000  
                  l6084 0000                    l6076 0000                    l6156 17D4                    l6148 0000  
                  l6180 0000                    l6172 0501                    l6252 0000                    l6244 0F8E  
                  l6236 0F75                    l6228 0000                    l6260 0527                    l6332 0000  
                  l6324 0000                    l6308 0E7D                    l6420 0EB9                    l6412 0000  
                  l6500 0000                    l7052 045D                    l7044 0431                    l7036 0416  
                  l7028 03AB                    l7124 0000                    l7116 0000                    l7108 0000  
                  l6094 0629                    l6086 0000                    l6078 0607                    l6166 17EA  
                  l6158 0000                    l6190 0000                    l6254 0000                    l6246 0F93  
                  l6238 0F7A                    l6270 0000                    l6262 0000                    l6334 0EAA  
                  l6318 0E8B                    l6406 0000                    l6414 0000                    l6510 06A3  
                  l6502 0000                    l7070 04A3                    l7038 0424                    l7118 0000  
                  l6096 0000                    l6088 0000                    l6176 0509                    l6192 0AC0  
                  l6280 054E                    l6264 0000                    l6256 0000                    l6328 0000  
                  l6352 0000                    l6408 05F0                    l6432 0ECC                    l6440 0EDF  
                  l6424 0EC0                    l6512 0000                    l6600 0000                    l7072 04A6  
                  l7064 0484                    l7048 0445                    l6178 0000                    l6186 0000  
                  l6290 056A                    l6266 0000                    l6258 0522                    l6346 0583  
                  l6354 05A8                    l6338 0000                    l6370 04D4                    l6442 0000  
                  l6418 0000                    l6450 0000                    l6530 0000                    l6506 069C  
                  l6610 0000                    l6602 0000                    l7074 04AA                    l7066 0487  
                  l7058 046A                    l7082 0062                    l7090 0000                    l6196 0000  
                  l6188 0000                    l6276 0546                    l6268 0000                    l6444 0EE7  
                  l6460 0000                    l6452 0000                    l6540 06DD                    l6524 0000  
                  l6516 06B2                    l6604 0000                    l6620 0000                    l6700 0000  
                  l7076 0000                    l7092 0000                    l7084 0000                    l6286 055C  
                  l6278 0000                    l6294 0000                    l6358 0000                    l6374 04E3  
                  l6366 0000                    l6438 0000                    l6470 0000                    l6462 0C2E  
                  l6542 0000                    l6534 06CF                    l6526 0000                    l6518 0000  
                  l6614 0000                    l6606 094A                    l6702 0000                    l6710 0000  
                  l7078 04B7                    l7094 0000                    l7086 0000                    l4952 0000  
                  l4944 0000                    l6288 0000                    l6296 0000                    l6376 0000  
                  l6480 0000                    l6472 0000                    l6464 0C3B                    l6456 0000  
                  l6448 0000                    l6560 070B                    l6552 0000                    l6536 06D4  
                  l6528 06C0                    l6616 0000                    l6640 0000                    l6632 0F0E  
                  l6712 0000                    l6720 0000                    l7096 0000                    l7088 0000  
                  _ADFM 04FF                    l4954 0000                    l4946 0F5D                    l6378 0000  
                  l6386 0000                    l6482 0000                    l6474 0C69                    l6466 0C46  
                  l6458 0000                    l6490 0000                    l6570 0000                    l6562 0000  
                  l6554 0700                    l6546 06EC                    l6538 06D9                    l6650 0F1F  
                  l6642 0000                    l6634 0000                    l6626 0EFD                    l6706 0000  
                  l6730 0BBA                    l6722 0000                    l6802 0D48                    l7098 0000  
                  l6396 05C5                    l6388 0000                    l6476 0C74                    l6468 0000  
                  l6492 0000                    l6484 0000                    l6572 0727                    l6564 0000  
                  l6548 06F1                    l6660 0000                    l6644 0000                    l6636 0000  
                  l6716 0000                    l6708 0000                    l6724 0000                    l6820 0E0E  
                  l6812 0DA4                    l6398 0000                    l6478 0C81                    l6494 0000  
                  l6486 0000                    l6558 0000                    l6590 0000                    l6582 0926  
                  l6670 0000                    l6662 0F35                    l6654 0F29                    l6646 0000  
                  l6638 0000                    l6750 0BF6                    l6742 0BDE                    l6734 0BC6  
                  l6726 0000                    l6718 0000                    l6830 0000                    l6910 0000  
                  l6902 0101                    l6488 0000                    l6568 0000                    l6592 0000  
                  l6576 0000                    l6672 0000                    l6656 0000                    l6648 0000  
                  l6728 0000                    l6760 0B0E                    l6808 0D8D                    l6832 0000  
                  l6840 0B27                    l6920 0000                    l6912 012D                    l6904 0000  
                  l6498 0000                    l6594 0000                    l6666 0F3F                    l6658 0000  
                  l6682 0000                    l6754 0C02                    l6746 0BEA                    l6738 0BD2  
                  l6762 0B0F                    l6826 0E53                    l6842 0B2E                    l6922 0000  
                  l6914 0000                    l6906 0000                    l6596 0000                    l6588 0000  
                  l6668 0000                    l6684 0989                    l6676 0000                    l6692 073D  
                  l6764 0000                    l6756 0000                    l6772 0000                    l6844 0B32  
                  l6852 0B45                    l6836 0000                    l6940 01B6                    l6932 017D  
                  l6924 0000                    l6598 0000                    l6678 0000                    l6694 0748  
                  l6766 0B18                    l6758 0000                    l6782 0000                    l6790 0000  
                  l6838 0B21                    l6854 0000                    l6934 0000                    l6926 0000  
                  l6918 0000                    l6870 0000                    l6862 0074                    l6688 0000  
                  l6768 0000                    l6848 0B3E                    l6960 0234                    l6936 0000  
                  l6928 0000                    l6944 01C6                    l6880 0000                    l6872 0000  
                  l6864 0000                    l6856 0000                    l6698 0000                    l6786 0A94  
                  l6778 0A40                    l6794 0000                    l6970 0000                    l6890 0000  
                  l6874 00A8                    l6972 0264                    l6956 0223                    l6948 01F8  
                  l6884 0000                    l6868 0086                    _ADON 00F8                    l6990 02D5  
                  l6982 02A1                    l6974 0000                    l6966 0000                    l6894 00E1  
                  l6886 00B6                    l6878 0000                    l6992 0000                    l6976 029F  
                  l6968 0000                    l6896 00F1                    l6888 00DB                    l6996 02FE  
                  l6988 0000                    l6998 0311                    _CHS0 00FA                    _CHS1 00FB  
                  _CHS2 00FC                    _CHS3 00FD                    STR_1 087C                    STR_2 088D  
                  _ANS3 0C43                    u2300 0000                    u2065 17A5                    u2305 052B  
                  u3025 0958                    u2415 0E94                    u2700 0C50                    u2605 0ED2  
                  u2720 0C67                    u2640 0C2C                    u3440 0000                    u2465 0591  
                  u2545 05D8                    u2714 0C52                    u2740 0C72                    u2660 0C39  
                  u3525 0221                    u3445 0143                    u3615 0357                    u2760 0C7F  
                  u2680 0C44                    u3625 036D                    u3545 02CE                    u2780 0C8A  
                  u3485 01CF                    u1975 0638                    u3807 0B60                    u3735 047A  
                  u3495 0202                    u3817 0B73                    u3745 0495                    u3585 030B  
                  u2794 0C8C                    u3907 0CB4                    u3827 0B86                    u3917 0CBA  
                  u3837 0B99                    u3685 043F                    u3927 0C17                    u3847 0BA6  
                  u3695 0455                    u3937 0C1D                    u3857 0BB3                    u3947 0C54  
                  u3867 08AD                    u3957 0C5A                    u3877 08E6                    u3797 0027  
                  u3967 0C8E                    u3887 0CA4                    u3977 0C94                    u3897 0CAA  
                  _adc1 0064                    _adc2 0066                    _main 0005                    _res1 005E  
                  _res2 0061            ___ftpack@arg 0070            ___ftpack@exp 0073            lcd_busy@busy 0071  
                  btemp 007E                    start 0000       ___bmul@multiplier 007B            ___ftmul@cntr 003C  
          ___ftmul@sign 003D            ___fttol@exp1 002C            ___fttol@lval 0028          ??_lcd_put_byte 0071  
                 _ADCS0 00FE                   _ADCS1 00FF                   ?_main 0070         __end_of___awdiv 0EAF  
       __end_of___lbdiv 0AD5         __end_of___ftadd 073B                   _ANS12 0C4C         __end_of___awmod 0EEC  
       __end_of___lbmod 0AF1         __end_of___ftdiv 097F         __end_of___ftneg 0679                   _ANSEL 0188  
       __end_of___lldiv 05F9         __end_of___ftmul 0F5B         ___awdiv@divisor 0076         __end_of___llmod 05B1  
       __end_of___ftsub 0771         __end_of___fttol 0573         ___awdiv@counter 007A                   _VCFG0 04FC  
                 _VCFG1 04FD                   _TRISD 0088            ___lltoft@exp 007C           ___awtoft@sign 007B  
                 _scale 0CD8         __end_of_isdigit 04FF           ___ftpack@sign 0074                   _putch 04C1  
       __end_of_isprint 0CCE                   pclath 000A                   status 0003                   wtemp0 007E  
       ___lbdiv@divisor 0075         ___lbdiv@counter 0077            __end_of_main 005E           lcd_gotoxy@col 0076  
         lcd_gotoxy@row 0075                  ??_main 005C           ___fttol@sign1 0027    __size_of__tdiv_to_l_ 0078  
      ___llmod@dividend 0024                  ?_scale 003E                  _ADRESH 001E                  _ADRESL 009E  
      ___awdiv@dividend 0078        __end_of___awtoft 099C                  ?_putch 0070        __end_of___ftpack 0FA7  
                _ANSELH 0189        __end_of___lltoft 075B           ?_read_adc_AN3 0070                  _TRISB0 0430  
                _TRISA3 042B                  _TRISD1 0441                  _TRISE0 0448                  _TRISD2 0442  
                _TRISE1 0449                  _TRISD3 0443                  _TRISD4 0444                  _TRISD5 0445  
                _TRISD6 0446                  _TRISD7 0447  __size_of_read_adc_AN12 0038        __end_of_lcd_busy 0CC0  
      __end_of_lcd_init 0C09        __end_of_lcd_putc 0B4E                  ___bmul 0F5B                  ___ftge 04C5  
                ___wmul 04FF               ??___awdiv 007A               ??___lbdiv 0076               ??___ftadd 0044  
             ??___awmod 0074               ??___lbmod 0071               ??___ftdiv 0026               ??___ftneg 0073  
             ??___lldiv 0078               ??___ftmul 0035               ??___llmod 007D               ??___ftsub 007E  
             ??___fttol 0024                  _fround 09B5        ___awdiv@quotient 007C         ___awmod@divisor 0070  
       ___awmod@counter 0074                  _printf 005E           lcd_put_byte@b 0070   ___ftmul@f3_as_product 0039  
             ??_isdigit 0070               ??_isprint 0070                  putch@c 0079        ___lbdiv@dividend 0076  
        ??_read_adc_AN3 003E         ___lbmod@divisor 0070         ___lbmod@counter 0073    __end_of_lcd_put_byte 0C99  
            ___ftadd@f1 003E              ___ftadd@f2 0041              ___ftge@ff1 0070              ___ftge@ff2 0073  
            ___ftdiv@f1 0023              ___ftdiv@f2 0020              ___ftdiv@f3 002A              ___ftneg@f1 0070  
            ___awtoft@c 0078     ___bmul@multiplicand 0079              ___ftmul@f1 002F              ___ftmul@f2 0032  
            ___ftsub@f1 004D              ___ftsub@f2 004A              ___fttol@f1 0020          __pcstackCOMMON 0070  
            ___lltoft@c 0078           __end_of_scale 0E6A           __end_of_putch 04C5        ___lbdiv@quotient 0078  
            __div_to_l_ 173E           _read_adc_AN12 08A4       lcd_gotoxy@address 0077         __div_to_l_@exp1 0025  
       __div_to_l_@cntr 0024                 ??_scale 0041         __div_to_l_@quot 0020                 ??_putch 0079  
            __pbssBANK0 005E           __div_to_l_@f1 0070           __div_to_l_@f2 0073              __pmaintext 0005  
               ?___bmul 0079                 ?___ftge 0070                 ?___wmul 0070                 ?_fround 004A  
             ?___awtoft 0078               ?___ftpack 0070                 ?_printf 0054               ?___lltoft 0078  
        ?_read_adc_AN12 0070              _lcd_gotoxy 0B07               ?_lcd_busy 0070               ?_lcd_init 0070  
             ?_lcd_putc 0070              _scale$4112 0045         __size_of___bmul 000E         __size_of___ftge 002C  
               ___awdiv 0E6A                 ___lbdiv 0ABA                 ___ftadd 0679                 ___awmod 0EAF  
               ___lbmod 0AD5                 ___ftdiv 0915                 ___ftneg 0671                 ___lldiv 05B1  
       __size_of___wmul 0019                 ___ftmul 0EEC                 ___llmod 0573                 ___ftsub 075B  
               ___fttol 0518    __end_of_read_adc_AN3 0915              ??___awtoft 007B              ??___ftpack 0075  
       __size_of_fround 0105              ??___lltoft 007C         __size_of_printf 0463             ?__div_to_l_ 0070  
               _dpowers 0854                 _isdigit 04F1        ___awmod@dividend 0072                 _isprint 0CC0  
 __size_of_lcd_put_byte 0090              ??_lcd_busy 0070              ??_lcd_init 0075              ??_lcd_putc 0078  
  end_of_initialization 173A          lcd_put_byte@rs 0073         ___lldiv@divisor 0070         ___lldiv@counter 007C  
               printf@c 00B8                 printf@f 00AE          __tdiv_to_l_@f1 0070          __tdiv_to_l_@f2 0073  
         ??__tdiv_to_l_ 0076            _lcd_put_byte 0C09         ??_read_adc_AN12 003E        ___lbmod@dividend 0072  
           ?_lcd_gotoxy 0075             ___lbmod@rem 0074             printf@integ 00A5             ___ftdiv@exp 002D  
           printf@width 00AF     __size_of__div_to_l_ 00B5             ___ftmul@exp 0038          __end_of___bmul 0F69  
        __end_of___ftge 04F1          __end_of___wmul 0518          __end_of_fround 0ABA          __end_of_printf 04C1  
   start_initialization 1730     __end_of__tdiv_to_l_ 0671         ___llmod@divisor 0020         ___llmod@counter 007D  
 __size_of_read_adc_AN3 0039                ??___bmul 007A                ??___ftge 0076     __size_of_lcd_gotoxy 0018  
              ??___wmul 0074                ??_fround 007E                ??_printf 0057              fround@prec 0053  
     __size_of___awtoft 001D       __size_of___ftpack 003E       __size_of___lltoft 0020           __pcstackBANK0 0020  
         __pcstackBANK1 00A0            _isdigit$3670 0070            _read_adc_AN3 08DC       __size_of_lcd_busy 0027  
     __size_of_lcd_init 00BB       __size_of_lcd_putc 002F                ?___awdiv 0076                ?___lbdiv 0075  
              ?___ftadd 003E                ?___awmod 0070               __ptext550 075B               __ptext551 0CD8  
             __ptext560 0915               __ptext552 09B5               __ptext561 0679               __ptext553 0B07  
             __ptext570 0518               __ptext562 0C99               __ptext554 0B4E               __ptext571 0F69  
             __ptext563 0C09               __ptext555 08A4               __ptext547 005E                ?___lbmod 0070  
             __ptext580 0000               __ptext572 0AD5               __ptext564 0EAF               __ptext556 08DC  
             __ptext548 04C1               __ptext573 0ABA               __ptext565 05B1               __ptext557 073B  
             __ptext549 0B1F               __ptext574 04FF               __ptext566 04C5               __ptext558 097F  
             __ptext575 0F5B               __ptext567 0671               __ptext559 0EEC               __ptext576 173E  
             __ptext568 0573               __ptext577 05F9               __ptext569 0E6A               __ptext578 04F1  
             __ptext579 0CC0                ?___ftdiv 0020                ?___ftneg 0070                ?___lldiv 0070  
              ?___ftmul 002F                ?___llmod 0020                ?___ftsub 004A               __npowers_ 0806  
              ?___fttol 0020               __pstrings 0800             __tdiv_to_l_ 05F9            ??__div_to_l_ 0076  
              ?_isdigit 0070                ?_isprint 0070          __size_of_scale 0192          __size_of_putch 0004  
        ___wmul@product 0074      __end_of__div_to_l_ 17F3                _GO_nDONE 00F9             __stringbase 0805  
     ___wmul@multiplier 0070              printf@_val 00A8              printf@flag 00AC              printf@fval 00B3  
            printf@prec 00B6               lcd_putc@c 0078            ??_lcd_gotoxy 0076        lcd_put_byte@temp 0074  
          _isprint$3673 0070      __end_of_lcd_gotoxy 0B1F        __size_of___awdiv 0045        __size_of___lbdiv 001B  
      __size_of___ftadd 00C2        __size_of___awmod 003D        __size_of___lbmod 001C        __size_of___ftdiv 006A  
      __size_of___ftneg 0008        __size_of___lldiv 0048        __size_of___ftmul 006F        __size_of___llmod 003E  
      __size_of___ftsub 0016        __size_of___fttol 005B                ___awtoft 097F                ___ftpack 0F69  
           _fround$4110 0050             _fround$4111 004D                ___lltoft 073B   __end_of_read_adc_AN12 08DC  
      __size_of_isdigit 000E        __size_of_isprint 000E                __powers_ 082D                _lcd_busy 0C99  
              _lcd_init 0B4E                _lcd_putc 0B1F           __size_of_main 0059               printf@exp 00B1  
              isdigit@c 0071                scale@scl 0048        __tdiv_to_l_@exp1 0025        __tdiv_to_l_@cntr 0024  
      __tdiv_to_l_@quot 0020        ___lldiv@dividend 0074                isprint@c 0071               stringcode 0800  
              printf@ap 00A4            ?__tdiv_to_l_ 0070             _printf$3162 00A0        ___lldiv@quotient 0078  
              stringdir 0800                stringtab 0800  
