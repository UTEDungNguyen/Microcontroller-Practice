

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 02 13:41:42 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text531,local,class=CODE,delta=2
    13                           	psect	text534,local,class=CODE,delta=2
    14                           	psect	text536,local,class=CODE,delta=2
    15                           	psect	text537,local,class=CODE,delta=2
    16                           	psect	text539,local,class=CODE,delta=2
    17                           	psect	text557,local,class=CODE,delta=2
    18                           	psect	text561,local,class=CODE,delta=2
    19                           	psect	text562,local,class=CODE,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text563,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E3C2               	dw	58306	;#
    28                           
    29                           	psect	strings
    30  1000                     __pstrings:	
    31  1000                     stringtab:	
    32                           ;	global	stringdir,stringtab,__stringbase
    33                           
    34  1000                     stringcode:	
    35                           ;	String table - string pointers are 1 byte each
    36                           
    37  1000                     stringdir:	
    38  1000  3010               	movlw	high stringdir
    39  1001  008A               	movwf	10
    40  1002  0804               	movf	4,w
    41  1003  0A84               	incf	4,f
    42  1004  0782               	addwf	2,f
    43  1005                     __stringbase:	
    44  1005  3400               	retlw	0
    45  1006                     __npowers_:	
    46  1006  3400               	retlw	0
    47  1007  3480               	retlw	128
    48  1008  343F               	retlw	63
    49  1009  34CD               	retlw	205
    50  100A  34CC               	retlw	204
    51  100B  343D               	retlw	61
    52  100C  34D7               	retlw	215
    53  100D  3423               	retlw	35
    54  100E  343C               	retlw	60
    55  100F  3412               	retlw	18
    56  1010  3483               	retlw	131
    57  1011  343A               	retlw	58
    58  1012  34B7               	retlw	183
    59  1013  34D1               	retlw	209
    60  1014  3438               	retlw	56
    61  1015  34C6               	retlw	198
    62  1016  3427               	retlw	39
    63  1017  3437               	retlw	55
    64  1018  3438               	retlw	56
    65  1019  3486               	retlw	134
    66  101A  3435               	retlw	53
    67  101B  34C0               	retlw	192
    68  101C  34D6               	retlw	214
    69  101D  3433               	retlw	51
    70  101E  34CC               	retlw	204
    71  101F  342B               	retlw	43
    72  1020  3432               	retlw	50
    73  1021  3470               	retlw	112
    74  1022  3489               	retlw	137
    75  1023  3430               	retlw	48
    76  1024  34E7               	retlw	231
    77  1025  34DB               	retlw	219
    78  1026  342E               	retlw	46
    79  1027  34E5               	retlw	229
    80  1028  343C               	retlw	60
    81  1029  341E               	retlw	30
    82  102A  3442               	retlw	66
    83  102B  34A2               	retlw	162
    84  102C  340D               	retlw	13
    85  102D                     __powers_:	
    86  102D  3400               	retlw	0
    87  102E  3480               	retlw	128
    88  102F  343F               	retlw	63
    89  1030  3400               	retlw	0
    90  1031  3420               	retlw	32
    91  1032  3441               	retlw	65
    92  1033  3400               	retlw	0
    93  1034  34C8               	retlw	200
    94  1035  3442               	retlw	66
    95  1036  3400               	retlw	0
    96  1037  347A               	retlw	122
    97  1038  3444               	retlw	68
    98  1039  3440               	retlw	64
    99  103A  341C               	retlw	28
   100  103B  3446               	retlw	70
   101  103C  3450               	retlw	80
   102  103D  34C3               	retlw	195
   103  103E  3447               	retlw	71
   104  103F  3424               	retlw	36
   105  1040  3474               	retlw	116
   106  1041  3449               	retlw	73
   107  1042  3497               	retlw	151
   108  1043  3418               	retlw	24
   109  1044  344B               	retlw	75
   110  1045  34BC               	retlw	188
   111  1046  34BE               	retlw	190
   112  1047  344C               	retlw	76
   113  1048  346B               	retlw	107
   114  1049  346E               	retlw	110
   115  104A  344E               	retlw	78
   116  104B  3403               	retlw	3
   117  104C  3415               	retlw	21
   118  104D  3450               	retlw	80
   119  104E  3479               	retlw	121
   120  104F  34AD               	retlw	173
   121  1050  3460               	retlw	96
   122  1051  34F3               	retlw	243
   123  1052  3449               	retlw	73
   124  1053  3471               	retlw	113
   125  1054                     _dpowers:	
   126  1054  3401               	retlw	1
   127  1055  3400               	retlw	0
   128  1056  3400               	retlw	0
   129  1057  3400               	retlw	0
   130  1058  340A               	retlw	10
   131  1059  3400               	retlw	0
   132  105A  3400               	retlw	0
   133  105B  3400               	retlw	0
   134  105C  3464               	retlw	100
   135  105D  3400               	retlw	0
   136  105E  3400               	retlw	0
   137  105F  3400               	retlw	0
   138  1060  34E8               	retlw	232
   139  1061  3403               	retlw	3
   140  1062  3400               	retlw	0
   141  1063  3400               	retlw	0
   142  1064  3410               	retlw	16
   143  1065  3427               	retlw	39
   144  1066  3400               	retlw	0
   145  1067  3400               	retlw	0
   146  1068  34A0               	retlw	160
   147  1069  3486               	retlw	134
   148  106A  3401               	retlw	1
   149  106B  3400               	retlw	0
   150  106C  3440               	retlw	64
   151  106D  3442               	retlw	66
   152  106E  340F               	retlw	15
   153  106F  3400               	retlw	0
   154  1070  3480               	retlw	128
   155  1071  3496               	retlw	150
   156  1072  3498               	retlw	152
   157  1073  3400               	retlw	0
   158  1074  3400               	retlw	0
   159  1075  34E1               	retlw	225
   160  1076  34F5               	retlw	245
   161  1077  3405               	retlw	5
   162  1078  3400               	retlw	0
   163  1079  34CA               	retlw	202
   164  107A  349A               	retlw	154
   165  107B  343B               	retlw	59
   166  0015                     _CCPR1	set	21
   167  001B                     _CCPR2	set	27
   168  0017                     _CCP1CON	set	23
   169  001D                     _CCP2CON	set	29
   170  000F                     _TMR1H	set	15
   171  000E                     _TMR1L	set	14
   172  0062                     _CCP1IF	set	98
   173  0068                     _CCP2IF	set	104
   174  005F                     _GIE	set	95
   175  005E                     _PEIE	set	94
   176  0041                     _RD1	set	65
   177  0042                     _RD2	set	66
   178  0043                     _RD3	set	67
   179  0044                     _RD4	set	68
   180  0045                     _RD5	set	69
   181  0046                     _RD6	set	70
   182  0047                     _RD7	set	71
   183  0049                     _RE1	set	73
   184  0084                     _T1CKPS0	set	132
   185  0085                     _T1CKPS1	set	133
   186  0082                     _T1SYNC	set	130
   187  0081                     _TMR1CS	set	129
   188  0086                     _TMR1GE	set	134
   189  0080                     _TMR1ON	set	128
   190  0088                     _TRISD	set	136
   191  0462                     _CCP1IE	set	1122
   192  0468                     _CCP2IE	set	1128
   193  042C                     _TRISA4	set	1068
   194  0439                     _TRISC1	set	1081
   195  043A                     _TRISC2	set	1082
   196  0441                     _TRISD1	set	1089
   197  0442                     _TRISD2	set	1090
   198  0443                     _TRISD3	set	1091
   199  0444                     _TRISD4	set	1092
   200  0445                     _TRISD5	set	1093
   201  0446                     _TRISD6	set	1094
   202  0447                     _TRISD7	set	1095
   203  0448                     _TRISE0	set	1096
   204  0449                     _TRISE1	set	1097
   205  0188                     _ANSEL	set	392
   206  0189                     _ANSELH	set	393
   207  107C                     STR_1:	
   208  107C  3478               	retlw	120	;'x'
   209  107D  3475               	retlw	117	;'u'
   210  107E  346E               	retlw	110	;'n'
   211  107F  3467               	retlw	103	;'g'
   212  1080  343A               	retlw	58	;':'
   213  1081  3420               	retlw	32	;' '
   214  1082  3425               	retlw	37	;'%'
   215  1083  3430               	retlw	48	;'0'
   216  1084  3438               	retlw	56	;'8'
   217  1085  3475               	retlw	117	;'u'
   218  1086  3400               	retlw	0
   219  1087                     STR_2:	
   220  1087  3466               	retlw	102	;'f'
   221  1088  343A               	retlw	58	;':'
   222  1089  3420               	retlw	32	;' '
   223  108A  3425               	retlw	37	;'%'
   224  108B  3435               	retlw	53	;'5'
   225  108C  342E               	retlw	46	;'.'
   226  108D  3432               	retlw	50	;'2'
   227  108E  3466               	retlw	102	;'f'
   228  108F  3400               	retlw	0
   229                           
   230                           	psect	cinit
   231  07B2                     start_initialization:	
   232                           
   233                           ; Clear objects allocated to BANK0
   234  07B2  01E2               	clrf	__pbssBANK0& (0+127)
   235  07B3  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   236  07B4  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   237  07B5  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   238  07B6  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   239  07B7  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   240  07B8  01E8               	clrf	(__pbssBANK0+6)& (0+127)
   241  07B9  01E9               	clrf	(__pbssBANK0+7)& (0+127)
   242  07BA  01EA               	clrf	(__pbssBANK0+8)& (0+127)
   243  07BB  01EB               	clrf	(__pbssBANK0+9)& (0+127)
   244  07BC  01EC               	clrf	(__pbssBANK0+10)& (0+127)
   245  07BD  01ED               	clrf	(__pbssBANK0+11)& (0+127)
   246  07BE  01EE               	clrf	(__pbssBANK0+12)& (0+127)
   247  07BF  01EF               	clrf	(__pbssBANK0+13)& (0+127)
   248  07C0                     end_of_initialization:	
   249                           ;End of C runtime variable initialization code
   250                           
   251  07C0  0183               	clrf	3
   252  07C1  160A  118A  2F2D   	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	bssBANK0
   255  0062                     __pbssBANK0:	
   256  0062                     _xung:	
   257  0062                     	ds	4
   258  0066                     _d:	
   259  0066                     	ds	3
   260  0069                     _count1:	
   261  0069                     	ds	2
   262  006B                     _count2:	
   263  006B                     	ds	2
   264  006D                     _t:	
   265  006D                     	ds	3
   266                           
   267                           	psect	cstackBANK1
   268  00A0                     __pcstackBANK1:	
   269  00A0                     _printf$3175:	
   270                           
   271                           ; 4 bytes @ 0x0
   272  00A0                     	ds	4
   273  00A4                     printf@ap:	
   274                           
   275                           ; 1 bytes @ 0x4
   276  00A4                     	ds	1
   277  00A5                     printf@integ:	
   278                           
   279                           ; 3 bytes @ 0x5
   280  00A5                     	ds	3
   281  00A8                     printf@_val:	
   282                           
   283                           ; 4 bytes @ 0x8
   284  00A8                     	ds	4
   285  00AC                     printf@f:	
   286                           
   287                           ; 1 bytes @ 0xC
   288  00AC                     	ds	1
   289  00AD                     printf@flag:	
   290                           
   291                           ; 2 bytes @ 0xD
   292  00AD                     	ds	2
   293  00AF                     printf@exp:	
   294                           
   295                           ; 2 bytes @ 0xF
   296  00AF                     	ds	2
   297  00B1                     printf@width:	
   298                           
   299                           ; 2 bytes @ 0x11
   300  00B1                     	ds	2
   301  00B3                     printf@fval:	
   302                           
   303                           ; 3 bytes @ 0x13
   304  00B3                     	ds	3
   305  00B6                     printf@prec:	
   306                           
   307                           ; 2 bytes @ 0x16
   308  00B6                     	ds	2
   309  00B8                     printf@c:	
   310                           
   311                           ; 1 bytes @ 0x18
   312  00B8                     	ds	1
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:	
   316  0070                     ?_lcd_init:	
   317  0070                     ?_lcd_putc:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_isprint:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_isdigit:	
   324                           ; 1 bit 
   325                           
   326  0070                     ?_main:	
   327                           ; 1 bit 
   328                           
   329  0070                     ?_putch:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_ngat:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ??_ngat:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_lcd_busy:	
   339                           ; 0 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	2
   344  0072                     ?_lcd_put_byte:	
   345  0072                     ??_lcd_busy:	
   346                           ; 0 bytes @ 0x2
   347                           
   348  0072                     ??_isprint:	
   349                           ; 0 bytes @ 0x2
   350                           
   351  0072                     ??_isdigit:	
   352                           ; 0 bytes @ 0x2
   353                           
   354  0072                     ?___ftge:	
   355                           ; 0 bytes @ 0x2
   356                           
   357  0072                     ?___lbmod:	
   358                           ; 1 bit 
   359                           
   360  0072                     ?_abs:	
   361                           ; 1 bytes @ 0x2
   362                           
   363  0072                     ?___wmul:	
   364                           ; 2 bytes @ 0x2
   365                           
   366  0072                     ?___awmod:	
   367                           ; 2 bytes @ 0x2
   368                           
   369  0072                     ?___ftpack:	
   370                           ; 2 bytes @ 0x2
   371                           
   372  0072                     ?___ftneg:	
   373                           ; 3 bytes @ 0x2
   374                           
   375  0072                     ?__tdiv_to_l_:	
   376                           ; 3 bytes @ 0x2
   377                           
   378  0072                     ?__div_to_l_:	
   379                           ; 4 bytes @ 0x2
   380                           
   381  0072                     ?___lldiv:	
   382                           ; 4 bytes @ 0x2
   383                           
   384  0072                     lcd_put_byte@b:	
   385                           ; 4 bytes @ 0x2
   386                           
   387  0072                     _isdigit$3685:	
   388                           ; 1 bytes @ 0x2
   389                           
   390  0072                     _isprint$3688:	
   391                           ; 1 bytes @ 0x2
   392                           
   393  0072                     ___lbmod@divisor:	
   394                           ; 1 bytes @ 0x2
   395                           
   396  0072                     abs@a:	
   397                           ; 1 bytes @ 0x2
   398                           
   399  0072                     ___wmul@multiplier:	
   400                           ; 2 bytes @ 0x2
   401                           
   402  0072                     ___awmod@divisor:	
   403                           ; 2 bytes @ 0x2
   404                           
   405  0072                     ___ftneg@f1:	
   406                           ; 2 bytes @ 0x2
   407                           
   408  0072                     ___ftge@ff1:	
   409                           ; 3 bytes @ 0x2
   410                           
   411  0072                     __tdiv_to_l_@f1:	
   412                           ; 3 bytes @ 0x2
   413                           
   414  0072                     __div_to_l_@f1:	
   415                           ; 3 bytes @ 0x2
   416                           
   417  0072                     ___ftpack@arg:	
   418                           ; 3 bytes @ 0x2
   419                           
   420  0072                     ___lldiv@divisor:	
   421                           ; 3 bytes @ 0x2
   422                           
   423                           
   424                           ; 4 bytes @ 0x2
   425  0072                     	ds	1
   426  0073                     ??_lcd_put_byte:	
   427  0073                     ??___lbmod:	
   428                           ; 0 bytes @ 0x3
   429                           
   430  0073                     lcd_busy@busy:	
   431                           ; 0 bytes @ 0x3
   432                           
   433  0073                     isdigit@c:	
   434                           ; 1 bytes @ 0x3
   435                           
   436  0073                     isprint@c:	
   437                           ; 1 bytes @ 0x3
   438                           
   439                           
   440                           ; 1 bytes @ 0x3
   441  0073                     	ds	1
   442  0074                     ??_abs:	
   443  0074                     ___lbmod@dividend:	
   444                           ; 0 bytes @ 0x4
   445                           
   446  0074                     ___wmul@multiplicand:	
   447                           ; 1 bytes @ 0x4
   448                           
   449  0074                     ___awmod@dividend:	
   450                           ; 2 bytes @ 0x4
   451                           
   452                           
   453                           ; 2 bytes @ 0x4
   454  0074                     	ds	1
   455  0075                     ??___ftneg:	
   456  0075                     lcd_put_byte@rs:	
   457                           ; 0 bytes @ 0x5
   458                           
   459  0075                     ___lbmod@counter:	
   460                           ; 1 bytes @ 0x5
   461                           
   462  0075                     ___ftpack@exp:	
   463                           ; 1 bytes @ 0x5
   464                           
   465  0075                     ___ftge@ff2:	
   466                           ; 1 bytes @ 0x5
   467                           
   468  0075                     __tdiv_to_l_@f2:	
   469                           ; 3 bytes @ 0x5
   470                           
   471  0075                     __div_to_l_@f2:	
   472                           ; 3 bytes @ 0x5
   473                           
   474                           
   475                           ; 3 bytes @ 0x5
   476  0075                     	ds	1
   477  0076                     ??___wmul:	
   478  0076                     ??___awmod:	
   479                           ; 0 bytes @ 0x6
   480                           
   481  0076                     lcd_put_byte@temp:	
   482                           ; 0 bytes @ 0x6
   483                           
   484  0076                     ___lbmod@rem:	
   485                           ; 1 bytes @ 0x6
   486                           
   487  0076                     ___awmod@counter:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     ___ftpack@sign:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0076                     ___wmul@product:	
   494                           ; 1 bytes @ 0x6
   495                           
   496  0076                     ___lldiv@dividend:	
   497                           ; 2 bytes @ 0x6
   498                           
   499                           
   500                           ; 4 bytes @ 0x6
   501  0076                     	ds	1
   502  0077                     ??_lcd_init:	
   503  0077                     ?_lcd_gotoxy:	
   504                           ; 0 bytes @ 0x7
   505                           
   506  0077                     ??___ftpack:	
   507                           ; 0 bytes @ 0x7
   508                           
   509  0077                     ?___lbdiv:	
   510                           ; 0 bytes @ 0x7
   511                           
   512  0077                     lcd_gotoxy@row:	
   513                           ; 1 bytes @ 0x7
   514                           
   515  0077                     ___lbdiv@divisor:	
   516                           ; 1 bytes @ 0x7
   517                           
   518  0077                     ___awmod@sign:	
   519                           ; 1 bytes @ 0x7
   520                           
   521                           
   522                           ; 1 bytes @ 0x7
   523  0077                     	ds	1
   524  0078                     ??_lcd_gotoxy:	
   525  0078                     ??__tdiv_to_l_:	
   526                           ; 0 bytes @ 0x8
   527                           
   528  0078                     ??___lbdiv:	
   529                           ; 0 bytes @ 0x8
   530                           
   531  0078                     ??___ftge:	
   532                           ; 0 bytes @ 0x8
   533                           
   534  0078                     ?___awdiv:	
   535                           ; 0 bytes @ 0x8
   536                           
   537  0078                     lcd_gotoxy@col:	
   538                           ; 2 bytes @ 0x8
   539                           
   540  0078                     ___lbdiv@dividend:	
   541                           ; 1 bytes @ 0x8
   542                           
   543  0078                     ___awdiv@divisor:	
   544                           ; 1 bytes @ 0x8
   545                           
   546                           
   547                           ; 2 bytes @ 0x8
   548  0078                     	ds	1
   549  0079                     lcd_gotoxy@address:	
   550  0079                     ___lbdiv@counter:	
   551                           ; 1 bytes @ 0x9
   552                           
   553                           
   554                           ; 1 bytes @ 0x9
   555  0079                     	ds	1
   556  007A                     ??_lcd_putc:	
   557  007A                     ??___llmod:	
   558                           ; 0 bytes @ 0xA
   559                           
   560  007A                     ??___lldiv:	
   561                           ; 0 bytes @ 0xA
   562                           
   563  007A                     ??___altoft:	
   564                           ; 0 bytes @ 0xA
   565                           
   566  007A                     ??___lltoft:	
   567                           ; 0 bytes @ 0xA
   568                           
   569  007A                     lcd_putc@c:	
   570                           ; 0 bytes @ 0xA
   571                           
   572  007A                     ___lbdiv@quotient:	
   573                           ; 1 bytes @ 0xA
   574                           
   575  007A                     ___llmod@counter:	
   576                           ; 1 bytes @ 0xA
   577                           
   578  007A                     ___altoft@exp:	
   579                           ; 1 bytes @ 0xA
   580                           
   581  007A                     ___lltoft@exp:	
   582                           ; 1 bytes @ 0xA
   583                           
   584  007A                     ___awdiv@dividend:	
   585                           ; 1 bytes @ 0xA
   586                           
   587                           
   588                           ; 2 bytes @ 0xA
   589  007A                     	ds	1
   590  007B                     ??_putch:	
   591  007B                     ?___bmul:	
   592                           ; 0 bytes @ 0xB
   593                           
   594  007B                     putch@c:	
   595                           ; 1 bytes @ 0xB
   596                           
   597  007B                     ___bmul@multiplicand:	
   598                           ; 1 bytes @ 0xB
   599                           
   600  007B                     ___altoft@sign:	
   601                           ; 1 bytes @ 0xB
   602                           
   603                           
   604                           ; 1 bytes @ 0xB
   605  007B                     	ds	1
   606  007C                     ??_fround:	
   607  007C                     ??___bmul:	
   608                           ; 0 bytes @ 0xC
   609                           
   610  007C                     ??___ftsub:	
   611                           ; 0 bytes @ 0xC
   612                           
   613  007C                     ??___awdiv:	
   614                           ; 0 bytes @ 0xC
   615                           
   616                           
   617                           	psect	cstackBANK0
   618  0020                     __pcstackBANK0:	
   619                           ; 0 bytes @ 0xC
   620                           
   621  0020                     ??__div_to_l_:	
   622  0020                     ?___altoft:	
   623                           ; 0 bytes @ 0x0
   624                           
   625  0020                     ?___lltoft:	
   626                           ; 3 bytes @ 0x0
   627                           
   628  0020                     ___bmul@product:	
   629                           ; 3 bytes @ 0x0
   630                           
   631  0020                     ___awdiv@counter:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0020                     ___lldiv@quotient:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0020                     ___altoft@c:	
   638                           ; 4 bytes @ 0x0
   639                           
   640  0020                     ___lltoft@c:	
   641                           ; 4 bytes @ 0x0
   642                           
   643  0020                     __tdiv_to_l_@quot:	
   644                           ; 4 bytes @ 0x0
   645                           
   646                           
   647                           ; 4 bytes @ 0x0
   648  0020                     	ds	1
   649  0021                     ___bmul@multiplier:	
   650  0021                     ___awdiv@sign:	
   651                           ; 1 bytes @ 0x1
   652                           
   653                           
   654                           ; 1 bytes @ 0x1
   655  0021                     	ds	1
   656  0022                     ___awdiv@quotient:	
   657                           
   658                           ; 2 bytes @ 0x2
   659  0022                     	ds	2
   660  0024                     ?___fttol:	
   661  0024                     ___lldiv@counter:	
   662                           ; 4 bytes @ 0x4
   663                           
   664  0024                     __tdiv_to_l_@cntr:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0024                     ___fttol@f1:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 3 bytes @ 0x4
   672  0024                     	ds	1
   673  0025                     ?___llmod:	
   674  0025                     __tdiv_to_l_@exp1:	
   675                           ; 4 bytes @ 0x5
   676                           
   677  0025                     ___llmod@divisor:	
   678                           ; 1 bytes @ 0x5
   679                           
   680                           
   681                           ; 4 bytes @ 0x5
   682  0025                     	ds	3
   683  0028                     ??___fttol:	
   684  0028                     __div_to_l_@quot:	
   685                           ; 0 bytes @ 0x8
   686                           
   687                           
   688                           ; 4 bytes @ 0x8
   689  0028                     	ds	1
   690  0029                     ___llmod@dividend:	
   691                           
   692                           ; 4 bytes @ 0x9
   693  0029                     	ds	2
   694  002B                     ___fttol@sign1:	
   695                           
   696                           ; 1 bytes @ 0xB
   697  002B                     	ds	1
   698  002C                     __div_to_l_@cntr:	
   699  002C                     ___fttol@lval:	
   700                           ; 1 bytes @ 0xC
   701                           
   702                           
   703                           ; 4 bytes @ 0xC
   704  002C                     	ds	1
   705  002D                     __div_to_l_@exp1:	
   706                           
   707                           ; 1 bytes @ 0xD
   708  002D                     	ds	3
   709  0030                     ___fttol@exp1:	
   710                           
   711                           ; 1 bytes @ 0x10
   712  0030                     	ds	1
   713  0031                     ?___ftmul:	
   714  0031                     ___ftmul@f1:	
   715                           ; 3 bytes @ 0x11
   716                           
   717                           
   718                           ; 3 bytes @ 0x11
   719  0031                     	ds	3
   720  0034                     ___ftmul@f2:	
   721                           
   722                           ; 3 bytes @ 0x14
   723  0034                     	ds	3
   724  0037                     ??___ftmul:	
   725                           
   726                           ; 0 bytes @ 0x17
   727  0037                     	ds	3
   728  003A                     ___ftmul@exp:	
   729                           
   730                           ; 1 bytes @ 0x1A
   731  003A                     	ds	1
   732  003B                     ___ftmul@f3_as_product:	
   733                           
   734                           ; 3 bytes @ 0x1B
   735  003B                     	ds	3
   736  003E                     ___ftmul@cntr:	
   737                           
   738                           ; 1 bytes @ 0x1E
   739  003E                     	ds	1
   740  003F                     ___ftmul@sign:	
   741                           
   742                           ; 1 bytes @ 0x1F
   743  003F                     	ds	1
   744  0040                     ?_scale:	
   745  0040                     ?___ftadd:	
   746                           ; 3 bytes @ 0x20
   747                           
   748  0040                     ___ftadd@f1:	
   749                           ; 3 bytes @ 0x20
   750                           
   751                           
   752                           ; 3 bytes @ 0x20
   753  0040                     	ds	3
   754  0043                     ??_scale:	
   755  0043                     ___ftadd@f2:	
   756                           ; 0 bytes @ 0x23
   757                           
   758                           
   759                           ; 3 bytes @ 0x23
   760  0043                     	ds	3
   761  0046                     ??___ftadd:	
   762                           
   763                           ; 0 bytes @ 0x26
   764  0046                     	ds	1
   765  0047                     _scale$4124:	
   766                           
   767                           ; 3 bytes @ 0x27
   768  0047                     	ds	2
   769  0049                     ___ftadd@sign:	
   770                           
   771                           ; 1 bytes @ 0x29
   772  0049                     	ds	1
   773  004A                     scale@scl:	
   774  004A                     ___ftadd@exp2:	
   775                           ; 1 bytes @ 0x2A
   776                           
   777                           
   778                           ; 1 bytes @ 0x2A
   779  004A                     	ds	1
   780  004B                     ___ftadd@exp1:	
   781                           
   782                           ; 1 bytes @ 0x2B
   783  004B                     	ds	1
   784  004C                     ?_fround:	
   785  004C                     ?___ftsub:	
   786                           ; 3 bytes @ 0x2C
   787                           
   788  004C                     ___ftsub@f2:	
   789                           ; 3 bytes @ 0x2C
   790                           
   791                           
   792                           ; 3 bytes @ 0x2C
   793  004C                     	ds	3
   794  004F                     ___ftsub@f1:	
   795  004F                     _fround$4123:	
   796                           ; 3 bytes @ 0x2F
   797                           
   798                           
   799                           ; 3 bytes @ 0x2F
   800  004F                     	ds	3
   801  0052                     _fround$4122:	
   802                           
   803                           ; 3 bytes @ 0x32
   804  0052                     	ds	3
   805  0055                     fround@prec:	
   806                           
   807                           ; 1 bytes @ 0x35
   808  0055                     	ds	1
   809  0056                     ?_printf:	
   810                           
   811                           ; 2 bytes @ 0x36
   812  0056                     	ds	4
   813  005A                     ??_printf:	
   814                           
   815                           ; 0 bytes @ 0x3A
   816  005A                     	ds	5
   817  005F                     ??_main:	
   818                           
   819                           ; 0 bytes @ 0x3F
   820  005F                     	ds	3
   821                           
   822                           	psect	maintext
   823  172D                     __pmaintext:	
   824 ;;Data sizes: Strings 20, constant 118, data 0, bss 14, persistent 0 stack 0
   825 ;;Auto spaces:   Size  Autos    Used
   826 ;; COMMON          14     12      12
   827 ;; BANK0           80     66      80
   828 ;; BANK1           80     25      25
   829 ;; BANK3           96      0       0
   830 ;; BANK2           96      0       0
   831 ;;
   832 ;; Pointer list with targets:
   833 ;; ?___ftpack	float  size(1) Largest target is 3
   834 ;;		 -> t(BANK0[3]), 
   835 ;;
   836 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   837 ;;
   838 ;; ?___llmod	unsigned long  size(1) Largest target is 3
   839 ;;		 -> t(BANK0[3]), 
   840 ;;
   841 ;; ?___ftsub	float  size(1) Largest target is 0
   842 ;;
   843 ;; ?___lltoft	float  size(1) Largest target is 0
   844 ;;
   845 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   846 ;;
   847 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   848 ;;
   849 ;; ?___fttol	long  size(1) Largest target is 3
   850 ;;		 -> t(BANK0[3]), 
   851 ;;
   852 ;; ?___ftneg	float  size(1) Largest target is 3
   853 ;;		 -> t(BANK0[3]), 
   854 ;;
   855 ;; ?___awmod	int  size(2) Largest target is 40
   856 ;;		 -> dpowers(CODE[40]), t(BANK0[3]), 
   857 ;;
   858 ;; ?___awdiv	int  size(1) Largest target is 0
   859 ;;
   860 ;; ?_scale	int  size(1) Largest target is 0
   861 ;;
   862 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   863 ;;
   864 ;; ?_fround	unsigned int  size(1) Largest target is 0
   865 ;;
   866 ;; ?___ftadd	float  size(1) Largest target is 3
   867 ;;		 -> t(BANK0[3]), 
   868 ;;
   869 ;; ?___ftmul	float  size(1) Largest target is 0
   870 ;;
   871 ;; ?___altoft	float  size(1) Largest target is 0
   872 ;;
   873 ;; ?_abs	int  size(1) Largest target is 0
   874 ;;
   875 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   876 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   877 ;;
   878 ;; ?_printf	int  size(1) Largest target is 3
   879 ;;		 -> t(BANK0[3]), 
   880 ;;
   881 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   882 ;;		 -> ?_printf(BANK0[2]), 
   883 ;;
   884 ;; S3164$_cp	PTR const unsigned char  size(1) Largest target is 0
   885 ;;
   886 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   887 ;;
   888 ;;
   889 ;; Critical Paths under _main in COMMON
   890 ;;
   891 ;;   _main->___altoft
   892 ;;   _printf->_putch
   893 ;;   _printf->___awdiv
   894 ;;   _putch->_lcd_putc
   895 ;;   _lcd_putc->_lcd_gotoxy
   896 ;;   _scale->___awdiv
   897 ;;   _scale->___bmul
   898 ;;   _fround->___bmul
   899 ;;   _lcd_gotoxy->_lcd_put_byte
   900 ;;   _lcd_init->_lcd_put_byte
   901 ;;   ___lltoft->___ftpack
   902 ;;   ___altoft->___ftpack
   903 ;;   ___ftmul->___altoft
   904 ;;   ___ftmul->___awdiv
   905 ;;   ___ftmul->___bmul
   906 ;;   ___ftadd->___bmul
   907 ;;   ___llmod->___lldiv
   908 ;;   ___awdiv->___awmod
   909 ;;   ___fttol->___awdiv
   910 ;;   ___fttol->___bmul
   911 ;;   ___lbdiv->___lbmod
   912 ;;   ___bmul->___lbdiv
   913 ;;
   914 ;; Critical Paths under _ngat in COMMON
   915 ;;
   916 ;;   None.
   917 ;;
   918 ;; Critical Paths under _main in BANK0
   919 ;;
   920 ;;   _main->_printf
   921 ;;   _printf->_fround
   922 ;;   ___ftsub->___ftadd
   923 ;;   _scale->___ftmul
   924 ;;   _fround->___ftadd
   925 ;;   ___ftmul->___fttol
   926 ;;   ___ftadd->___ftmul
   927 ;;   ___llmod->___lldiv
   928 ;;   ___fttol->___awdiv
   929 ;;
   930 ;; Critical Paths under _ngat in BANK0
   931 ;;
   932 ;;   None.
   933 ;;
   934 ;; Critical Paths under _main in BANK1
   935 ;;
   936 ;;   _main->_printf
   937 ;;
   938 ;; Critical Paths under _ngat in BANK1
   939 ;;
   940 ;;   None.
   941 ;;
   942 ;; Critical Paths under _main in BANK3
   943 ;;
   944 ;;   None.
   945 ;;
   946 ;; Critical Paths under _ngat in BANK3
   947 ;;
   948 ;;   None.
   949 ;;
   950 ;; Critical Paths under _main in BANK2
   951 ;;
   952 ;;   None.
   953 ;;
   954 ;; Critical Paths under _ngat in BANK2
   955 ;;
   956 ;;   None.
   957 ;;
   958 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   959 ;;
   960 ;;
   961 ;;Call Graph Tables:
   962 ;;
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   965 ;; ---------------------------------------------------------------------------------
   966 ;; (0) _main                                                 3     3      0   13518
   967 ;;                                             63 BANK0      3     3      0
   968 ;;                           _lcd_init
   969 ;;                                _abs
   970 ;;                           ___altoft
   971 ;;                            ___ftmul
   972 ;;                            ___ftadd
   973 ;;                         _lcd_gotoxy
   974 ;;                             _printf
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (1) _printf                                              38    34      4   10964
   977 ;;                                             54 BANK0      9     5      4
   978 ;;                                              0 BANK1     25    25      0
   979 ;;                              _putch
   980 ;;                            _isdigit
   981 ;;                             ___wmul
   982 ;;                             ___ftge
   983 ;;                            ___ftneg
   984 ;;                            ___awdiv
   985 ;;                              _scale
   986 ;;                            ___ftmul
   987 ;;                             _fround
   988 ;;                            ___ftadd
   989 ;;                            ___fttol
   990 ;;                         __div_to_l_
   991 ;;                        __tdiv_to_l_
   992 ;;                           ___lltoft
   993 ;;                            ___ftsub
   994 ;;                            ___lldiv
   995 ;;                            ___llmod
   996 ;; ---------------------------------------------------------------------------------
   997 ;; (2) _putch                                                1     1      0     713
   998 ;;                                             11 COMMON     1     1      0
   999 ;;                           _lcd_putc
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (3) _lcd_putc                                             1     1      0     691
  1002 ;;                                             10 COMMON     1     1      0
  1003 ;;                       _lcd_put_byte
  1004 ;;                           _lcd_busy
  1005 ;;                         _lcd_gotoxy
  1006 ;;                            _isprint
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (2) ___ftsub                                              6     0      6    1094
  1009 ;;                                             44 BANK0      6     0      6
  1010 ;;                            ___ftadd
  1011 ;;                           ___lltoft (ARG)
  1012 ;; ---------------------------------------------------------------------------------
  1013 ;; (2) _scale                                               14    11      3    1688
  1014 ;;                                             32 BANK0     11     8      3
  1015 ;;                            ___awmod
  1016 ;;                            ___awdiv
  1017 ;;                            ___ftmul
  1018 ;;                             ___bmul
  1019 ;;                            ___fttol (ARG)
  1020 ;; ---------------------------------------------------------------------------------
  1021 ;; (2) _fround                                              13    10      3    1215
  1022 ;;                                             44 BANK0     10     7      3
  1023 ;;                            ___lbmod
  1024 ;;                             ___bmul
  1025 ;;                            ___lbdiv
  1026 ;;                            ___ftmul
  1027 ;;                            ___ftadd (ARG)
  1028 ;; ---------------------------------------------------------------------------------
  1029 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1030 ;;                                              7 COMMON     3     2      1
  1031 ;;                       _lcd_put_byte
  1032 ;;                           _lcd_busy
  1033 ;; ---------------------------------------------------------------------------------
  1034 ;; (1) _lcd_init                                             4     4      0     244
  1035 ;;                                              7 COMMON     3     3      0
  1036 ;;                       _lcd_put_byte
  1037 ;;                           _lcd_busy
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (2) ___lltoft                                             5     1      4     278
  1040 ;;                                             10 COMMON     1     1      0
  1041 ;;                                              0 BANK0      4     0      4
  1042 ;;                           ___ftpack
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (1) ___altoft                                             6     2      4     347
  1045 ;;                                             10 COMMON     2     2      0
  1046 ;;                                              0 BANK0      4     0      4
  1047 ;;                           ___ftpack
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (3) ___ftmul                                             15     9      6     535
  1050 ;;                                             17 BANK0     15     9      6
  1051 ;;                           ___ftpack
  1052 ;;                           ___altoft (ARG)
  1053 ;;                            ___fttol (ARG)
  1054 ;;                            ___awdiv (ARG)
  1055 ;;                            ___awmod (ARG)
  1056 ;;                             ___bmul (ARG)
  1057 ;;                            ___lbdiv (ARG)
  1058 ;;                            ___lbmod (ARG)
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (3) ___ftadd                                             12     6      6    1049
  1061 ;;                                             32 BANK0     12     6      6
  1062 ;;                           ___ftpack
  1063 ;;                            ___ftmul (ARG)
  1064 ;;                            ___lbmod (ARG)
  1065 ;;                             ___bmul (ARG)
  1066 ;;                            ___lbdiv (ARG)
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (5) _lcd_busy                                             2     2      0      23
  1069 ;;                                              2 COMMON     2     2      0
  1070 ;; ---------------------------------------------------------------------------------
  1071 ;; (5) _lcd_put_byte                                         5     4      1     221
  1072 ;;                                              2 COMMON     5     4      1
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (3) ___awmod                                              6     2      4     296
  1075 ;;                                              2 COMMON     6     2      4
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (2) ___lldiv                                             13     5      8     162
  1078 ;;                                              2 COMMON     8     0      8
  1079 ;;                                              0 BANK0      5     5      0
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (2) ___ftge                                               6     0      6     136
  1082 ;;                                              2 COMMON     6     0      6
  1083 ;; ---------------------------------------------------------------------------------
  1084 ;; (2) ___ftneg                                              3     0      3      45
  1085 ;;                                              2 COMMON     3     0      3
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (2) ___llmod                                              9     1      8     159
  1088 ;;                                             10 COMMON     1     1      0
  1089 ;;                                              5 BANK0      8     0      8
  1090 ;;                            ___lldiv (ARG)
  1091 ;; ---------------------------------------------------------------------------------
  1092 ;; (3) ___awdiv                                              8     4      4     300
  1093 ;;                                              8 COMMON     4     0      4
  1094 ;;                                              0 BANK0      4     4      0
  1095 ;;                            ___awmod (ARG)
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (2) ___fttol                                             13     9      4     252
  1098 ;;                                              4 BANK0     13     9      4
  1099 ;;                           ___ftpack (ARG)
  1100 ;;                            ___awmod (ARG)
  1101 ;;                            ___awdiv (ARG)
  1102 ;;                             ___bmul (ARG)
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (4) ___ftpack                                             8     3      5     209
  1105 ;;                                              2 COMMON     8     3      5
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (3) ___lbmod                                              5     4      1     159
  1108 ;;                                              2 COMMON     5     4      1
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (3) ___lbdiv                                              4     3      1     162
  1111 ;;                                              7 COMMON     4     3      1
  1112 ;;                            ___lbmod (ARG)
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (2) ___wmul                                               6     2      4      92
  1115 ;;                                              2 COMMON     6     2      4
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; (3) ___bmul                                               3     2      1      68
  1118 ;;                                             11 COMMON     1     0      1
  1119 ;;                                              0 BANK0      2     2      0
  1120 ;;                            ___lbmod (ARG)
  1121 ;;                            ___lbdiv (ARG)
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (2) __div_to_l_                                          20    14      6     446
  1124 ;;                                              2 COMMON     6     0      6
  1125 ;;                                              0 BANK0     14    14      0
  1126 ;; ---------------------------------------------------------------------------------
  1127 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1128 ;;                                              2 COMMON     9     3      6
  1129 ;;                                              0 BANK0      6     6      0
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (2) _isdigit                                              2     2      0      68
  1132 ;;                                              2 COMMON     2     2      0
  1133 ;; ---------------------------------------------------------------------------------
  1134 ;; (4) _isprint                                              2     2      0      68
  1135 ;;                                              2 COMMON     2     2      0
  1136 ;; ---------------------------------------------------------------------------------
  1137 ;; (1) _abs                                                  4     2      2      66
  1138 ;;                                              2 COMMON     4     2      2
  1139 ;; ---------------------------------------------------------------------------------
  1140 ;; Estimated maximum stack depth 5
  1141 ;; ---------------------------------------------------------------------------------
  1142 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1143 ;; ---------------------------------------------------------------------------------
  1144 ;; (6) _ngat                                                 2     2      0       0
  1145 ;;                                              0 COMMON     2     2      0
  1146 ;; ---------------------------------------------------------------------------------
  1147 ;; Estimated maximum stack depth 6
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; Call Graph Graphs:
  1150 ;; _main (ROOT)
  1151 ;;   _lcd_init
  1152 ;;     _lcd_put_byte
  1153 ;;     _lcd_busy
  1154 ;;   _abs
  1155 ;;   ___altoft
  1156 ;;     ___ftpack
  1157 ;;   ___ftmul
  1158 ;;     ___ftpack
  1159 ;;     ___altoft (ARG)
  1160 ;;       ___ftpack
  1161 ;;     ___fttol (ARG)
  1162 ;;       ___ftpack (ARG)
  1163 ;;       ___awmod (ARG)
  1164 ;;       ___awdiv (ARG)
  1165 ;;         ___awmod (ARG)
  1166 ;;       ___bmul (ARG)
  1167 ;;         ___lbmod (ARG)
  1168 ;;         ___lbdiv (ARG)
  1169 ;;           ___lbmod (ARG)
  1170 ;;     ___awdiv (ARG)
  1171 ;;       ___awmod (ARG)
  1172 ;;     ___awmod (ARG)
  1173 ;;     ___bmul (ARG)
  1174 ;;       ___lbmod (ARG)
  1175 ;;       ___lbdiv (ARG)
  1176 ;;         ___lbmod (ARG)
  1177 ;;     ___lbdiv (ARG)
  1178 ;;       ___lbmod (ARG)
  1179 ;;     ___lbmod (ARG)
  1180 ;;   ___ftadd
  1181 ;;     ___ftpack
  1182 ;;     ___ftmul (ARG)
  1183 ;;       ___ftpack
  1184 ;;       ___altoft (ARG)
  1185 ;;         ___ftpack
  1186 ;;       ___fttol (ARG)
  1187 ;;         ___ftpack (ARG)
  1188 ;;         ___awmod (ARG)
  1189 ;;         ___awdiv (ARG)
  1190 ;;           ___awmod (ARG)
  1191 ;;         ___bmul (ARG)
  1192 ;;           ___lbmod (ARG)
  1193 ;;           ___lbdiv (ARG)
  1194 ;;             ___lbmod (ARG)
  1195 ;;       ___awdiv (ARG)
  1196 ;;         ___awmod (ARG)
  1197 ;;       ___awmod (ARG)
  1198 ;;       ___bmul (ARG)
  1199 ;;         ___lbmod (ARG)
  1200 ;;         ___lbdiv (ARG)
  1201 ;;           ___lbmod (ARG)
  1202 ;;       ___lbdiv (ARG)
  1203 ;;         ___lbmod (ARG)
  1204 ;;       ___lbmod (ARG)
  1205 ;;     ___lbmod (ARG)
  1206 ;;     ___bmul (ARG)
  1207 ;;       ___lbmod (ARG)
  1208 ;;       ___lbdiv (ARG)
  1209 ;;         ___lbmod (ARG)
  1210 ;;     ___lbdiv (ARG)
  1211 ;;       ___lbmod (ARG)
  1212 ;;   _lcd_gotoxy
  1213 ;;     _lcd_put_byte
  1214 ;;     _lcd_busy
  1215 ;;   _printf
  1216 ;;     _putch
  1217 ;;       _lcd_putc
  1218 ;;         _lcd_put_byte
  1219 ;;         _lcd_busy
  1220 ;;         _lcd_gotoxy
  1221 ;;           _lcd_put_byte
  1222 ;;           _lcd_busy
  1223 ;;         _isprint
  1224 ;;     _isdigit
  1225 ;;     ___wmul
  1226 ;;     ___ftge
  1227 ;;     ___ftneg
  1228 ;;     ___awdiv
  1229 ;;       ___awmod (ARG)
  1230 ;;     _scale
  1231 ;;       ___awmod
  1232 ;;       ___awdiv
  1233 ;;         ___awmod (ARG)
  1234 ;;       ___ftmul
  1235 ;;         ___ftpack
  1236 ;;         ___altoft (ARG)
  1237 ;;           ___ftpack
  1238 ;;         ___fttol (ARG)
  1239 ;;           ___ftpack (ARG)
  1240 ;;           ___awmod (ARG)
  1241 ;;           ___awdiv (ARG)
  1242 ;;             ___awmod (ARG)
  1243 ;;           ___bmul (ARG)
  1244 ;;             ___lbmod (ARG)
  1245 ;;             ___lbdiv (ARG)
  1246 ;;               ___lbmod (ARG)
  1247 ;;         ___awdiv (ARG)
  1248 ;;           ___awmod (ARG)
  1249 ;;         ___awmod (ARG)
  1250 ;;         ___bmul (ARG)
  1251 ;;           ___lbmod (ARG)
  1252 ;;           ___lbdiv (ARG)
  1253 ;;             ___lbmod (ARG)
  1254 ;;         ___lbdiv (ARG)
  1255 ;;           ___lbmod (ARG)
  1256 ;;         ___lbmod (ARG)
  1257 ;;       ___bmul
  1258 ;;         ___lbmod (ARG)
  1259 ;;         ___lbdiv (ARG)
  1260 ;;           ___lbmod (ARG)
  1261 ;;       ___fttol (ARG)
  1262 ;;         ___ftpack (ARG)
  1263 ;;         ___awmod (ARG)
  1264 ;;         ___awdiv (ARG)
  1265 ;;           ___awmod (ARG)
  1266 ;;         ___bmul (ARG)
  1267 ;;           ___lbmod (ARG)
  1268 ;;           ___lbdiv (ARG)
  1269 ;;             ___lbmod (ARG)
  1270 ;;     ___ftmul
  1271 ;;       ___ftpack
  1272 ;;       ___altoft (ARG)
  1273 ;;         ___ftpack
  1274 ;;       ___fttol (ARG)
  1275 ;;         ___ftpack (ARG)
  1276 ;;         ___awmod (ARG)
  1277 ;;         ___awdiv (ARG)
  1278 ;;           ___awmod (ARG)
  1279 ;;         ___bmul (ARG)
  1280 ;;           ___lbmod (ARG)
  1281 ;;           ___lbdiv (ARG)
  1282 ;;             ___lbmod (ARG)
  1283 ;;       ___awdiv (ARG)
  1284 ;;         ___awmod (ARG)
  1285 ;;       ___awmod (ARG)
  1286 ;;       ___bmul (ARG)
  1287 ;;         ___lbmod (ARG)
  1288 ;;         ___lbdiv (ARG)
  1289 ;;           ___lbmod (ARG)
  1290 ;;       ___lbdiv (ARG)
  1291 ;;         ___lbmod (ARG)
  1292 ;;       ___lbmod (ARG)
  1293 ;;     _fround
  1294 ;;       ___lbmod
  1295 ;;       ___bmul
  1296 ;;         ___lbmod (ARG)
  1297 ;;         ___lbdiv (ARG)
  1298 ;;           ___lbmod (ARG)
  1299 ;;       ___lbdiv
  1300 ;;         ___lbmod (ARG)
  1301 ;;       ___ftmul
  1302 ;;         ___ftpack
  1303 ;;         ___altoft (ARG)
  1304 ;;           ___ftpack
  1305 ;;         ___fttol (ARG)
  1306 ;;           ___ftpack (ARG)
  1307 ;;           ___awmod (ARG)
  1308 ;;           ___awdiv (ARG)
  1309 ;;             ___awmod (ARG)
  1310 ;;           ___bmul (ARG)
  1311 ;;             ___lbmod (ARG)
  1312 ;;             ___lbdiv (ARG)
  1313 ;;               ___lbmod (ARG)
  1314 ;;         ___awdiv (ARG)
  1315 ;;           ___awmod (ARG)
  1316 ;;         ___awmod (ARG)
  1317 ;;         ___bmul (ARG)
  1318 ;;           ___lbmod (ARG)
  1319 ;;           ___lbdiv (ARG)
  1320 ;;             ___lbmod (ARG)
  1321 ;;         ___lbdiv (ARG)
  1322 ;;           ___lbmod (ARG)
  1323 ;;         ___lbmod (ARG)
  1324 ;;       ___ftadd (ARG)
  1325 ;;         ___ftpack
  1326 ;;         ___ftmul (ARG)
  1327 ;;           ___ftpack
  1328 ;;           ___altoft (ARG)
  1329 ;;             ___ftpack
  1330 ;;           ___fttol (ARG)
  1331 ;;             ___ftpack (ARG)
  1332 ;;             ___awmod (ARG)
  1333 ;;             ___awdiv (ARG)
  1334 ;;               ___awmod (ARG)
  1335 ;;             ___bmul (ARG)
  1336 ;;               ___lbmod (ARG)
  1337 ;;               ___lbdiv (ARG)
  1338 ;;                 ___lbmod (ARG)
  1339 ;;           ___awdiv (ARG)
  1340 ;;             ___awmod (ARG)
  1341 ;;           ___awmod (ARG)
  1342 ;;           ___bmul (ARG)
  1343 ;;             ___lbmod (ARG)
  1344 ;;             ___lbdiv (ARG)
  1345 ;;               ___lbmod (ARG)
  1346 ;;           ___lbdiv (ARG)
  1347 ;;             ___lbmod (ARG)
  1348 ;;           ___lbmod (ARG)
  1349 ;;         ___lbmod (ARG)
  1350 ;;         ___bmul (ARG)
  1351 ;;           ___lbmod (ARG)
  1352 ;;           ___lbdiv (ARG)
  1353 ;;             ___lbmod (ARG)
  1354 ;;         ___lbdiv (ARG)
  1355 ;;           ___lbmod (ARG)
  1356 ;;     ___ftadd
  1357 ;;       ___ftpack
  1358 ;;       ___ftmul (ARG)
  1359 ;;         ___ftpack
  1360 ;;         ___altoft (ARG)
  1361 ;;           ___ftpack
  1362 ;;         ___fttol (ARG)
  1363 ;;           ___ftpack (ARG)
  1364 ;;           ___awmod (ARG)
  1365 ;;           ___awdiv (ARG)
  1366 ;;             ___awmod (ARG)
  1367 ;;           ___bmul (ARG)
  1368 ;;             ___lbmod (ARG)
  1369 ;;             ___lbdiv (ARG)
  1370 ;;               ___lbmod (ARG)
  1371 ;;         ___awdiv (ARG)
  1372 ;;           ___awmod (ARG)
  1373 ;;         ___awmod (ARG)
  1374 ;;         ___bmul (ARG)
  1375 ;;           ___lbmod (ARG)
  1376 ;;           ___lbdiv (ARG)
  1377 ;;             ___lbmod (ARG)
  1378 ;;         ___lbdiv (ARG)
  1379 ;;           ___lbmod (ARG)
  1380 ;;         ___lbmod (ARG)
  1381 ;;       ___lbmod (ARG)
  1382 ;;       ___bmul (ARG)
  1383 ;;         ___lbmod (ARG)
  1384 ;;         ___lbdiv (ARG)
  1385 ;;           ___lbmod (ARG)
  1386 ;;       ___lbdiv (ARG)
  1387 ;;         ___lbmod (ARG)
  1388 ;;     ___fttol
  1389 ;;       ___ftpack (ARG)
  1390 ;;       ___awmod (ARG)
  1391 ;;       ___awdiv (ARG)
  1392 ;;         ___awmod (ARG)
  1393 ;;       ___bmul (ARG)
  1394 ;;         ___lbmod (ARG)
  1395 ;;         ___lbdiv (ARG)
  1396 ;;           ___lbmod (ARG)
  1397 ;;     __div_to_l_
  1398 ;;     __tdiv_to_l_
  1399 ;;     ___lltoft
  1400 ;;       ___ftpack
  1401 ;;     ___ftsub
  1402 ;;       ___ftadd
  1403 ;;         ___ftpack
  1404 ;;         ___ftmul (ARG)
  1405 ;;           ___ftpack
  1406 ;;           ___altoft (ARG)
  1407 ;;             ___ftpack
  1408 ;;           ___fttol (ARG)
  1409 ;;             ___ftpack (ARG)
  1410 ;;             ___awmod (ARG)
  1411 ;;             ___awdiv (ARG)
  1412 ;;               ___awmod (ARG)
  1413 ;;             ___bmul (ARG)
  1414 ;;               ___lbmod (ARG)
  1415 ;;               ___lbdiv (ARG)
  1416 ;;                 ___lbmod (ARG)
  1417 ;;           ___awdiv (ARG)
  1418 ;;             ___awmod (ARG)
  1419 ;;           ___awmod (ARG)
  1420 ;;           ___bmul (ARG)
  1421 ;;             ___lbmod (ARG)
  1422 ;;             ___lbdiv (ARG)
  1423 ;;               ___lbmod (ARG)
  1424 ;;           ___lbdiv (ARG)
  1425 ;;             ___lbmod (ARG)
  1426 ;;           ___lbmod (ARG)
  1427 ;;         ___lbmod (ARG)
  1428 ;;         ___bmul (ARG)
  1429 ;;           ___lbmod (ARG)
  1430 ;;           ___lbdiv (ARG)
  1431 ;;             ___lbmod (ARG)
  1432 ;;         ___lbdiv (ARG)
  1433 ;;           ___lbmod (ARG)
  1434 ;;       ___lltoft (ARG)
  1435 ;;         ___ftpack
  1436 ;;     ___lldiv
  1437 ;;     ___llmod
  1438 ;;       ___lldiv (ARG)
  1439 ;;
  1440 ;; _ngat (ROOT)
  1441 ;;
  1442 ;; Address spaces:
  1443 ;;Name               Size   Autos  Total    Cost      Usage
  1444 ;;BITCOMMON            E      0       0       0        0.0%
  1445 ;;EEDATA             100      0       0       0        0.0%
  1446 ;;NULL                 0      0       0       0        0.0%
  1447 ;;CODE                 0      0       0       0        0.0%
  1448 ;;COMMON               E      C       C       1       85.7%
  1449 ;;BITSFR0              0      0       0       1        0.0%
  1450 ;;SFR0                 0      0       0       1        0.0%
  1451 ;;BITSFR1              0      0       0       2        0.0%
  1452 ;;SFR1                 0      0       0       2        0.0%
  1453 ;;STACK                0      0       5       2        0.0%
  1454 ;;ABS                  0      0      75       3        0.0%
  1455 ;;BITBANK0            50      0       0       4        0.0%
  1456 ;;BITSFR3              0      0       0       4        0.0%
  1457 ;;SFR3                 0      0       0       4        0.0%
  1458 ;;BANK0               50     42      50       5      100.0%
  1459 ;;BITSFR2              0      0       0       5        0.0%
  1460 ;;SFR2                 0      0       0       5        0.0%
  1461 ;;BITBANK1            50      0       0       6        0.0%
  1462 ;;BANK1               50     19      19       7       31.3%
  1463 ;;BITBANK3            60      0       0       8        0.0%
  1464 ;;BANK3               60      0       0       9        0.0%
  1465 ;;BITBANK2            60      0       0      10        0.0%
  1466 ;;BANK2               60      0       0      11        0.0%
  1467 ;;DATA                 0      0      7A      12        0.0%
  1468                           
  1469                           
  1470 ;; *************** function _main *****************
  1471 ;; Defined at:
  1472 ;;		line 19 in file "D:\TTVXL\Project TTVXL\BT05week12ttvxl\BT05week12ttvxl.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 17F/0
  1483 ;;		On exit  : 60/20
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       3       0       0       0
  1489 ;;      Totals:         0       3       0       0       0
  1490 ;;Total ram usage:        3 bytes
  1491 ;; Hardware stack levels required when called:    6
  1492 ;; This function calls:
  1493 ;;		_lcd_init
  1494 ;;		_abs
  1495 ;;		___altoft
  1496 ;;		___ftmul
  1497 ;;		___ftadd
  1498 ;;		_lcd_gotoxy
  1499 ;;		_printf
  1500 ;; This function is called by:
  1501 ;;		Startup code after reset
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504  172D                     _main:	
  1505                           
  1506                           ;BT05week12ttvxl.c: 20: ANSEL = ANSELH = 0;
  1507                           
  1508                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1509  172D  1683               	bsf	3,5	;RP0=1, select bank3
  1510  172E  1703               	bsf	3,6	;RP1=1, select bank3
  1511  172F  0189               	clrf	9	;volatile
  1512  1730  0188               	clrf	8	;volatile
  1513                           
  1514                           ;BT05week12ttvxl.c: 21: lcd_init();
  1515  1731  120A  158A  2300   	fcall	_lcd_init
      +       160A  118A         
  1516                           
  1517                           ;BT05week12ttvxl.c: 22: TRISA4 = 1;
  1518  1736  1683               	bsf	3,5	;RP0=1, select bank1
  1519  1737  1605               	bsf	5,4
  1520                           
  1521                           ;BT05week12ttvxl.c: 23: TRISD = 0x00;
  1522  1738  0188               	clrf	8	;volatile
  1523                           
  1524                           ;BT05week12ttvxl.c: 24: TRISE0 = 0;
  1525  1739  1009               	bcf	9,0
  1526                           
  1527                           ;BT05week12ttvxl.c: 25: TRISE1 = 0;
  1528  173A  1089               	bcf	9,1
  1529                           
  1530                           ;BT05week12ttvxl.c: 26: RE1 =0;
  1531  173B  1283               	bcf	3,5	;RP0=0, select bank0
  1532  173C  1089               	bcf	9,1
  1533                           
  1534                           ;BT05week12ttvxl.c: 29: TMR1GE=0;
  1535  173D  1310               	bcf	16,6
  1536                           
  1537                           ;BT05week12ttvxl.c: 30: TMR1CS=0;
  1538  173E  1090               	bcf	16,1
  1539                           
  1540                           ;BT05week12ttvxl.c: 31: T1SYNC=1;
  1541  173F  1510               	bsf	16,2
  1542                           
  1543                           ;BT05week12ttvxl.c: 32: T1CKPS1=0;T1CKPS0=0;
  1544  1740  1290               	bcf	16,5
  1545  1741  1210               	bcf	16,4
  1546                           
  1547                           ;BT05week12ttvxl.c: 34: TMR1H=0;
  1548  1742  018F               	clrf	15	;volatile
  1549                           
  1550                           ;BT05week12ttvxl.c: 35: TMR1L=0;
  1551  1743  018E               	clrf	14	;volatile
  1552                           
  1553                           ;BT05week12ttvxl.c: 36: TMR1ON=1;
  1554  1744  1410               	bsf	16,0
  1555                           
  1556                           ;BT05week12ttvxl.c: 39: TRISC2 =1;
  1557  1745  1683               	bsf	3,5	;RP0=1, select bank1
  1558  1746  3005               	movlw	5
  1559  1747  1507               	bsf	7,2
  1560                           
  1561                           ;BT05week12ttvxl.c: 40: TRISC1 =1;
  1562  1748  1487               	bsf	7,1
  1563                           
  1564                           ;BT05week12ttvxl.c: 41: CCP1CON = 0b00000101;
  1565  1749  1283               	bcf	3,5	;RP0=0, select bank0
  1566  174A  0097               	movwf	23	;volatile
  1567                           
  1568                           ;BT05week12ttvxl.c: 42: CCP2CON = 0b00000100;
  1569  174B  3004               	movlw	4
  1570  174C  009D               	movwf	29	;volatile
  1571                           
  1572                           ;BT05week12ttvxl.c: 43: CCP1IE=1;
  1573  174D  1683               	bsf	3,5	;RP0=1, select bank1
  1574  174E  150C               	bsf	12,2
  1575                           
  1576                           ;BT05week12ttvxl.c: 44: CCP1IF=0;
  1577  174F  1283               	bcf	3,5	;RP0=0, select bank0
  1578  1750  110C               	bcf	12,2
  1579                           
  1580                           ;BT05week12ttvxl.c: 45: CCP2IE=1;
  1581  1751  1683               	bsf	3,5	;RP0=1, select bank1
  1582  1752  140D               	bsf	13,0
  1583                           
  1584                           ;BT05week12ttvxl.c: 46: CCP2IF=0;
  1585  1753  1283               	bcf	3,5	;RP0=0, select bank0
  1586  1754  100D               	bcf	13,0
  1587                           
  1588                           ;BT05week12ttvxl.c: 47: PEIE=1;
  1589  1755  170B               	bsf	11,6
  1590                           
  1591                           ;BT05week12ttvxl.c: 48: GIE=1;
  1592  1756  178B               	bsf	11,7
  1593  1757                     l7229:	
  1594                           
  1595                           ;BT05week12ttvxl.c: 51: {
  1596                           ;BT05week12ttvxl.c: 53: _delay((unsigned long)((100)*(20000000/4000.0)));
  1597  1757  3003               	movlw	3
  1598  1758  1283               	bcf	3,5	;RP0=0, select bank0
  1599  1759  00E1               	movwf	??_main+2
  1600  175A  308A               	movlw	138
  1601  175B  00E0               	movwf	??_main+1
  1602  175C  3056               	movlw	86
  1603  175D  00DF               	movwf	??_main
  1604  175E                     u3957:	
  1605  175E  0BDF               	decfsz	??_main,f
  1606  175F  2F5E               	goto	u3957
  1607  1760  0BE0               	decfsz	??_main+1,f
  1608  1761  2F5E               	goto	u3957
  1609  1762  0BE1               	decfsz	??_main+2,f
  1610  1763  2F5E               	goto	u3957
  1611  1764  2F65               	nop2
  1612                           
  1613                           ;BT05week12ttvxl.c: 54: RE1=1;
  1614  1765  1283               	bcf	3,5	;RP0=0, select bank0
  1615  1766  1303               	bcf	3,6	;RP1=0, select bank0
  1616  1767  3007               	movlw	7
  1617  1768  1489               	bsf	9,1
  1618                           
  1619                           ;BT05week12ttvxl.c: 55: _delay((unsigned long)((1)*(20000000/4000.0)));
  1620  1769  00E0               	movwf	??_main+1
  1621  176A  307D               	movlw	125
  1622  176B  00DF               	movwf	??_main
  1623  176C                     u3967:	
  1624  176C  0BDF               	decfsz	??_main,f
  1625  176D  2F6C               	goto	u3967
  1626  176E  0BE0               	decfsz	??_main+1,f
  1627  176F  2F6C               	goto	u3967
  1628                           
  1629                           ;BT05week12ttvxl.c: 56: RE1=0;
  1630  1770  1283               	bcf	3,5	;RP0=0, select bank0
  1631  1771  1303               	bcf	3,6	;RP1=0, select bank0
  1632  1772  1089               	bcf	9,1
  1633                           
  1634                           ;BT05week12ttvxl.c: 58: xung = abs(count2-count1);
  1635  1773  086C               	movf	_count2+1,w
  1636  1774  00F3               	movwf	?_abs+1
  1637  1775  086B               	movf	_count2,w
  1638  1776  00F2               	movwf	?_abs
  1639  1777  0869               	movf	_count1,w
  1640  1778  02F2               	subwf	?_abs,f
  1641  1779  086A               	movf	_count1+1,w
  1642  177A  1C03               	skipc
  1643  177B  03F3               	decf	?_abs+1,f
  1644  177C  02F3               	subwf	?_abs+1,f
  1645  177D  120A  118A  27C4   	fcall	_abs
      +       160A  118A         
  1646  1782  0872               	movf	?_abs,w
  1647  1783  00E2               	movwf	_xung
  1648  1784  0873               	movf	?_abs+1,w
  1649  1785  00E3               	movwf	_xung+1
  1650  1786  3000               	movlw	0
  1651  1787  1BE3               	btfsc	_xung+1,7
  1652  1788  30FF               	movlw	255
  1653  1789  00E4               	movwf	_xung+2
  1654  178A  00E5               	movwf	_xung+3
  1655                           
  1656                           ;BT05week12ttvxl.c: 59: t = xung*(1.0/5000000.0);
  1657  178B  30C0               	movlw	192
  1658  178C  00B1               	movwf	?___ftmul
  1659  178D  3056               	movlw	86
  1660  178E  00B2               	movwf	?___ftmul+1
  1661  178F  3034               	movlw	52
  1662  1790  00B3               	movwf	?___ftmul+2
  1663  1791  0865               	movf	_xung+3,w
  1664  1792  00A3               	movwf	?___altoft+3
  1665  1793  0864               	movf	_xung+2,w
  1666  1794  00A2               	movwf	?___altoft+2
  1667  1795  0863               	movf	_xung+1,w
  1668  1796  00A1               	movwf	?___altoft+1
  1669  1797  0862               	movf	_xung,w
  1670  1798  00A0               	movwf	?___altoft
  1671  1799  120A  158A  24A8   	fcall	___altoft
      +       160A  118A         
  1672  179E  0820               	movf	?___altoft,w
  1673  179F  00B4               	movwf	?___ftmul+3
  1674  17A0  0821               	movf	?___altoft+1,w
  1675  17A1  00B5               	movwf	?___ftmul+4
  1676  17A2  0822               	movf	?___altoft+2,w
  1677  17A3  00B6               	movwf	?___ftmul+5
  1678  17A4  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1679  17A9  0831               	movf	?___ftmul,w
  1680  17AA  00ED               	movwf	_t
  1681  17AB  0832               	movf	?___ftmul+1,w
  1682  17AC  00EE               	movwf	_t+1
  1683  17AD  0833               	movf	?___ftmul+2,w
  1684  17AE  00EF               	movwf	_t+2
  1685                           
  1686                           ;BT05week12ttvxl.c: 60: d = 17000.0*t+1.0;
  1687  17AF  3080               	movlw	128
  1688  17B0  01C0               	clrf	?___ftadd
  1689  17B1  00C1               	movwf	?___ftadd+1
  1690  17B2  303F               	movlw	63
  1691  17B3  00C2               	movwf	?___ftadd+2
  1692  17B4  30D0               	movlw	208
  1693  17B5  00B1               	movwf	?___ftmul
  1694  17B6  3084               	movlw	132
  1695  17B7  00B2               	movwf	?___ftmul+1
  1696  17B8  3046               	movlw	70
  1697  17B9  00B3               	movwf	?___ftmul+2
  1698  17BA  086D               	movf	_t,w
  1699  17BB  00B4               	movwf	?___ftmul+3
  1700  17BC  086E               	movf	_t+1,w
  1701  17BD  00B5               	movwf	?___ftmul+4
  1702  17BE  086F               	movf	_t+2,w
  1703  17BF  00B6               	movwf	?___ftmul+5
  1704  17C0  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1705  17C5  0831               	movf	?___ftmul,w
  1706  17C6  00C3               	movwf	?___ftadd+3
  1707  17C7  0832               	movf	?___ftmul+1,w
  1708  17C8  00C4               	movwf	?___ftadd+4
  1709  17C9  0833               	movf	?___ftmul+2,w
  1710  17CA  00C5               	movwf	?___ftadd+5
  1711  17CB  120A  158A  20A5   	fcall	___ftadd
      +       160A  118A         
  1712  17D0  0840               	movf	?___ftadd,w
  1713  17D1  00E6               	movwf	_d
  1714  17D2  0841               	movf	?___ftadd+1,w
  1715  17D3  00E7               	movwf	_d+1
  1716  17D4  0842               	movf	?___ftadd+2,w
  1717  17D5  00E8               	movwf	_d+2
  1718  17D6  3000               	movlw	0
  1719                           
  1720                           ;BT05week12ttvxl.c: 61: lcd_gotoxy(0,0);
  1721  17D7  01F7               	clrf	?_lcd_gotoxy
  1722  17D8  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1723                           
  1724                           ;BT05week12ttvxl.c: 62: printf("xung: %08u",xung);
  1725  17DD  0865               	movf	_xung+3,w
  1726  17DE  00D9               	movwf	?_printf+3
  1727  17DF  0864               	movf	_xung+2,w
  1728  17E0  00D8               	movwf	?_printf+2
  1729  17E1  0863               	movf	_xung+1,w
  1730  17E2  00D7               	movwf	?_printf+1
  1731  17E3  0862               	movf	_xung,w
  1732  17E4  00D6               	movwf	?_printf
  1733  17E5  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1734  17E6  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1735  17EB  3000               	movlw	0
  1736                           
  1737                           ;BT05week12ttvxl.c: 63: lcd_gotoxy(0,1);
  1738  17EC  01F7               	clrf	?_lcd_gotoxy
  1739  17ED  0AF7               	incf	?_lcd_gotoxy,f
  1740  17EE  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1741                           
  1742                           ;BT05week12ttvxl.c: 64: printf("f: %5.2f",d);
  1743  17F3  0866               	movf	_d,w
  1744  17F4  00D6               	movwf	?_printf
  1745  17F5  0867               	movf	_d+1,w
  1746  17F6  00D7               	movwf	?_printf+1
  1747  17F7  0868               	movf	_d+2,w
  1748  17F8  00D8               	movwf	?_printf+2
  1749  17F9  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1750  17FA  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1751  17FF  2F57               	goto	l7229
  1752  1800                     __end_of_main:	
  1753                           
  1754                           	psect	text531
  1755  000F                     __ptext531:	
  1756 ;; =============== function _main ends ============
  1757                           
  1758                           
  1759 ;; *************** function _printf *****************
  1760 ;; Defined at:
  1761 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  f               1    wreg     PTR const unsigned char 
  1764 ;;		 -> STR_2(9), STR_1(11), 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1767 ;;		 -> STR_2(9), STR_1(11), 
  1768 ;;  _val            4    8[BANK1 ] struct .
  1769 ;;  fval            3   19[BANK1 ] struct .
  1770 ;;  integ           3    5[BANK1 ] struct .
  1771 ;;  ival            3    0        struct .
  1772 ;;  prec            2   22[BANK1 ] int 
  1773 ;;  width           2   17[BANK1 ] int 
  1774 ;;  exp             2   15[BANK1 ] int 
  1775 ;;  flag            2   13[BANK1 ] unsigned short 
  1776 ;;  c               1   24[BANK1 ] char 
  1777 ;;  ap              1    4[BANK1 ] PTR void [1]
  1778 ;;		 -> ?_printf(2), 
  1779 ;;  d               1    0        unsigned char 
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  2   54[BANK0 ] int 
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 60/0
  1786 ;;		On exit  : 60/20
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       4       0       0       0
  1790 ;;      Locals:         0       0      25       0       0
  1791 ;;      Temps:          0       5       0       0       0
  1792 ;;      Totals:         0       9      25       0       0
  1793 ;;Total ram usage:       34 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    5
  1796 ;; This function calls:
  1797 ;;		_putch
  1798 ;;		_isdigit
  1799 ;;		___wmul
  1800 ;;		___ftge
  1801 ;;		___ftneg
  1802 ;;		___awdiv
  1803 ;;		_scale
  1804 ;;		___ftmul
  1805 ;;		_fround
  1806 ;;		___ftadd
  1807 ;;		___fttol
  1808 ;;		__div_to_l_
  1809 ;;		__tdiv_to_l_
  1810 ;;		___lltoft
  1811 ;;		___ftsub
  1812 ;;		___lldiv
  1813 ;;		___llmod
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818  000F                     _printf:	
  1819                           
  1820                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1821                           ;printf@f stored from wreg
  1822  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1823  0010  00AC               	movwf	printf@f^(0+128)
  1824  0011  3056               	movlw	?_printf& (0+255)
  1825  0012  00A4               	movwf	printf@ap^(0+128)
  1826  0013                     l7177:	
  1827  0013  2798               	call	PL32	;select bank 1
  1828  0014  082C               	movf	printf@f^(0+128),w
  1829  0015  0AAC               	incf	printf@f^(0+128),f
  1830  0016  0084               	movwf	4
  1831  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1832  001C  00B8               	movwf	printf@c^(0+128)
  1833  001D  08B8               	movf	printf@c^(0+128),f
  1834  001E  1903               	btfsc	3,2
  1835  001F  0008               	return
  1836  0020  3A25               	xorlw	37
  1837  0021  1903               	skipnz
  1838  0022  2828               	goto	l6905
  1839  0023  0838               	movf	printf@c^(0+128),w
  1840  0024  254D  120A  118A   	fcall	_putch
  1841  0027  2813               	goto	l7177
  1842  0028                     l6905:	
  1843  0028  01B1               	clrf	printf@width^(0+128)
  1844  0029  01B2               	clrf	(printf@width+1)^(0+128)
  1845  002A  01AD               	clrf	printf@flag^(0+128)
  1846  002B  01AE               	clrf	(printf@flag+1)^(0+128)
  1847  002C  282F               	goto	l6911
  1848  002D                     l2214:	
  1849  002D  152D               	bsf	printf@flag^(0+128),2
  1850  002E  0AAC               	incf	printf@f^(0+128),f
  1851  002F                     l6911:	
  1852  002F  082C               	movf	printf@f^(0+128),w
  1853  0030  0084               	movwf	4
  1854  0031  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1855                           
  1856                           ; Switch size 1, requested type "space"
  1857                           ; Number of cases is 1, Range of values is 48 to 48
  1858                           ; switch strategies available:
  1859                           ; Name         Instructions Cycles
  1860                           ; simple_byte            4     3 (average)
  1861                           ; direct_byte           14    11 (fixed)
  1862                           ; jumptable            263     9 (fixed)
  1863                           ;	Chosen strategy is simple_byte
  1864  0036  3A30               	xorlw	48	; case 48
  1865  0037  1903               	skipnz
  1866  0038  282D               	goto	l2214
  1867  0039  283A               	goto	l6913
  1868  003A                     l6913:	
  1869  003A  082C               	movf	printf@f^(0+128),w
  1870  003B  0084               	movwf	4
  1871  003C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1872  0041  25BB  120A  118A   	fcall	_isdigit
  1873  0044  1C03               	btfss	3,0
  1874  0045  286A               	goto	l6923
  1875  0046  01B1               	clrf	printf@width^(0+128)
  1876  0047  01B2               	clrf	(printf@width+1)^(0+128)
  1877  0048                     l6917:	
  1878  0048  0832               	movf	(printf@width+1)^(0+128),w
  1879  0049  00F3               	movwf	?___wmul+1
  1880  004A  0831               	movf	printf@width^(0+128),w
  1881  004B  00F2               	movwf	?___wmul
  1882  004C  300A               	movlw	10
  1883  004D  00F4               	movwf	?___wmul+2
  1884  004E  01F5               	clrf	?___wmul+3
  1885  004F  25C9               	fcall	___wmul
  1886  0050  082C               	movf	printf@f^(0+128),w
  1887  0051  0084               	movwf	4
  1888  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1889  0057  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1890  005A  00B1               	movwf	printf@width^(0+128)
  1891  005B  2783               	fcall	PL27	;call to abstracted procedure
  1892  005C  00B2               	movwf	(printf@width+1)^(0+128)
  1893  005D  0AAC               	incf	printf@f^(0+128),f
  1894  005E  082C               	movf	printf@f^(0+128),w
  1895  005F  0084               	movwf	4
  1896  0060  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1897  0065  25BB  120A  118A   	fcall	_isdigit
  1898  0068  1803               	btfsc	3,0
  1899  0069  2848               	goto	l6917
  1900  006A                     l6923:	
  1901  006A  082C               	movf	printf@f^(0+128),w
  1902  006B  0084               	movwf	4
  1903  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1904  0071  3A2E               	xorlw	46
  1905  0072  1D03               	skipz
  1906  0073  289D               	goto	l6937
  1907  0074  172E               	bsf	(printf@flag^(0+128)+1),6
  1908  0075  0AAC               	incf	printf@f^(0+128),f
  1909  0076  01B6               	clrf	printf@prec^(0+128)
  1910  0077  01B7               	clrf	(printf@prec+1)^(0+128)
  1911  0078                     l6935:	
  1912  0078  082C               	movf	printf@f^(0+128),w
  1913  0079  0084               	movwf	4
  1914  007A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1915  007F  25BB  120A  118A   	fcall	_isdigit
  1916  0082  1C03               	btfss	3,0
  1917  0083  28A6               	goto	l6945
  1918  0084  0837               	movf	(printf@prec+1)^(0+128),w
  1919  0085  00F3               	movwf	?___wmul+1
  1920  0086  0836               	movf	printf@prec^(0+128),w
  1921  0087  00F2               	movwf	?___wmul
  1922  0088  300A               	movlw	10
  1923  0089  00F4               	movwf	?___wmul+2
  1924  008A  01F5               	clrf	?___wmul+3
  1925  008B  25C9               	fcall	___wmul
  1926  008C  082C               	movf	printf@f^(0+128),w
  1927  008D  0084               	movwf	4
  1928  008E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1929  0093  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1930  0096  00B6               	movwf	printf@prec^(0+128)
  1931  0097  2783  120A  118A   	fcall	PL27	;call to abstracted procedure
  1932  009A  00B7               	movwf	(printf@prec+1)^(0+128)
  1933  009B  0AAC               	incf	printf@f^(0+128),f
  1934  009C  2878               	goto	l6935
  1935  009D                     l6937:	
  1936  009D  01B6               	clrf	printf@prec^(0+128)
  1937  009E  01B7               	clrf	(printf@prec+1)^(0+128)
  1938  009F  162E               	bsf	(printf@flag^(0+128)+1),4
  1939  00A0  28A6               	goto	l6945
  1940  00A1                     l2229:	
  1941  00A1  152E               	bsf	(printf@flag^(0+128)+1),2
  1942  00A2  28B9               	goto	l6947
  1943  00A3                     l6941:	
  1944  00A3  30C0               	movlw	192
  1945  00A4  04AD               	iorwf	printf@flag^(0+128),f
  1946  00A5  28B9               	goto	l6947
  1947  00A6                     l6945:	
  1948  00A6  082C               	movf	printf@f^(0+128),w
  1949  00A7  0AAC               	incf	printf@f^(0+128),f
  1950  00A8  0084               	movwf	4
  1951  00A9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1952  00AE  00B8               	movwf	printf@c^(0+128)
  1953                           
  1954                           ; Switch size 1, requested type "space"
  1955                           ; Number of cases is 3, Range of values is 0 to 117
  1956                           ; switch strategies available:
  1957                           ; Name         Instructions Cycles
  1958                           ; simple_byte           10     6 (average)
  1959                           ; jumptable            260     6 (fixed)
  1960                           ; rangetable           122     6 (fixed)
  1961                           ; spacedrange          242     9 (fixed)
  1962                           ; locatedrange         118     3 (fixed)
  1963                           ;	Chosen strategy is simple_byte
  1964  00AF  3A00               	xorlw	0	; case 0
  1965  00B0  1903               	skipnz
  1966  00B1  2D4C               	goto	l2308
  1967  00B2  3A66               	xorlw	102	; case 102
  1968  00B3  1903               	skipnz
  1969  00B4  28A1               	goto	l2229
  1970  00B5  3A13               	xorlw	19	; case 117
  1971  00B6  1903               	skipnz
  1972  00B7  28A3               	goto	l6941
  1973  00B8  2813               	goto	l7177
  1974  00B9                     l6947:	
  1975  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1976  00BA  3007               	movlw	7
  1977  00BB  01DA               	clrf	??_printf
  1978  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1979  00BD  052E               	andwf	(printf@flag+1)^(0+128),w
  1980  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1981  00BF  00DB               	movwf	??_printf+1
  1982  00C0  045A               	iorwf	??_printf,w
  1983  00C1  1903               	skipnz
  1984  00C2  2C0F               	goto	l7099
  1985  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1986  00C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  1987  00C5  28C9               	goto	l6953
  1988  00C6  3006               	movlw	6
  1989  00C7  00B6               	movwf	printf@prec^(0+128)
  1990  00C8  01B7               	clrf	(printf@prec+1)^(0+128)
  1991  00C9                     l6953:	
  1992  00C9  0824               	movf	printf@ap^(0+128),w
  1993  00CA  0084               	movwf	4
  1994  00CB  1383               	bcf	3,7	;select IRP bank0
  1995  00CC  0800               	movf	0,w
  1996  00CD  00B3               	movwf	printf@fval^(0+128)
  1997  00CE  0A84               	incf	4,f
  1998  00CF  0800               	movf	0,w
  1999  00D0  00B4               	movwf	(printf@fval+1)^(0+128)
  2000  00D1  0A84               	incf	4,f
  2001  00D2  0800               	movf	0,w
  2002  00D3  00B5               	movwf	(printf@fval+2)^(0+128)
  2003  00D4  3003               	movlw	3
  2004  00D5  07A4               	addwf	printf@ap^(0+128),f
  2005  00D6  0833               	movf	printf@fval^(0+128),w
  2006  00D7  00F2               	movwf	?___ftge
  2007  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  2008  00D9  00F3               	movwf	?___ftge+1
  2009  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  2010  00DB  00F4               	movwf	?___ftge+2
  2011  00DC  01F5               	clrf	?___ftge+3
  2012  00DD  01F6               	clrf	?___ftge+4
  2013  00DE  01F7               	clrf	?___ftge+5
  2014  00DF  258F  120A  118A   	fcall	___ftge
  2015  00E2  1803               	btfsc	3,0
  2016  00E3  28F5               	goto	l6963
  2017  00E4  0833               	movf	printf@fval^(0+128),w
  2018  00E5  00F2               	movwf	?___ftneg
  2019  00E6  0834               	movf	(printf@fval+1)^(0+128),w
  2020  00E7  00F3               	movwf	?___ftneg+1
  2021  00E8  0835               	movf	(printf@fval+2)^(0+128),w
  2022  00E9  00F4               	movwf	?___ftneg+2
  2023  00EA  26FE  120A  118A   	fcall	___ftneg
  2024  00ED  0872               	movf	?___ftneg,w
  2025  00EE  00B3               	movwf	printf@fval^(0+128)
  2026  00EF  0873               	movf	?___ftneg+1,w
  2027  00F0  00B4               	movwf	(printf@fval+1)^(0+128)
  2028  00F1  0874               	movf	?___ftneg+2,w
  2029  00F2  00B5               	movwf	(printf@fval+2)^(0+128)
  2030  00F3  3003               	movlw	3
  2031  00F4  04AD               	iorwf	printf@flag^(0+128),f
  2032  00F5                     l6963:	
  2033  00F5  01AF               	clrf	printf@exp^(0+128)
  2034  00F6  01B0               	clrf	(printf@exp+1)^(0+128)
  2035  00F7  0835               	movf	(printf@fval+2)^(0+128),w
  2036  00F8  0434               	iorwf	(printf@fval+1)^(0+128),w
  2037  00F9  0433               	iorwf	printf@fval^(0+128),w
  2038  00FA  1903               	skipnz
  2039  00FB  298C               	goto	l6995
  2040  00FC  30B3               	movlw	low printf@fval
  2041  00FD  0084               	movwf	4
  2042  00FE  2791  120A  118A   	fcall	PL31	;call to abstracted procedure
  2043  0101  0A84               	incf	4,f
  2044  0102  0800               	movf	0,w
  2045  0103  00DC               	movwf	??_printf+2
  2046  0104  0A84               	incf	4,f
  2047  0105  0800               	movf	0,w
  2048  0106  00DD               	movwf	??_printf+3
  2049  0107  300F               	movlw	15
  2050  0108                     u3515:	
  2051  0108  1003               	clrc
  2052  0109  0CDD               	rrf	??_printf+3,f
  2053  010A  0CDC               	rrf	??_printf+2,f
  2054  010B  0CDB               	rrf	??_printf+1,f
  2055  010C  0CDA               	rrf	??_printf,f
  2056  010D  3EFF               	addlw	-1
  2057  010E  1D03               	skipz
  2058  010F  2908               	goto	u3515
  2059  0110  085B               	movf	??_printf+1,w
  2060  0111  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0112  00B0               	movwf	(printf@exp+1)^(0+128)
  2062  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2063  0114  085A               	movf	??_printf,w
  2064  0115  1683               	bsf	3,5	;RP0=1, select bank1
  2065  0116  00AF               	movwf	printf@exp^(0+128)
  2066  0117  3082               	movlw	-126
  2067  0118  01B0               	clrf	(printf@exp+1)^(0+128)
  2068  0119  07AF               	addwf	printf@exp^(0+128),f
  2069  011A  1C03               	skipc
  2070  011B  03B0               	decf	(printf@exp+1)^(0+128),f
  2071  011C  30FF               	movlw	-1
  2072  011D  07AF               	addwf	printf@exp^(0+128),f
  2073  011E  1C03               	skipc
  2074  011F  03B0               	decf	(printf@exp+1)^(0+128),f
  2075  0120  3003               	movlw	3
  2076  0121  00F2               	movwf	?___wmul
  2077  0122  01F3               	clrf	?___wmul+1
  2078  0123  0830               	movf	(printf@exp+1)^(0+128),w
  2079  0124  00F5               	movwf	?___wmul+3
  2080  0125  082F               	movf	printf@exp^(0+128),w
  2081  0126  00F4               	movwf	?___wmul+2
  2082  0127  25C9               	fcall	___wmul
  2083  0128  0873               	movf	?___wmul+1,w
  2084  0129  00B0               	movwf	(printf@exp+1)^(0+128)
  2085  012A  0872               	movf	?___wmul,w
  2086  012B  00AF               	movwf	printf@exp^(0+128)
  2087  012C  300A               	movlw	10
  2088  012D  00F8               	movwf	?___awdiv
  2089  012E  01F9               	clrf	?___awdiv+1
  2090  012F  0830               	movf	(printf@exp+1)^(0+128),w
  2091  0130  00FB               	movwf	?___awdiv+3
  2092  0131  082F               	movf	printf@exp^(0+128),w
  2093  0132  00FA               	movwf	?___awdiv+2
  2094  0133  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  2095  0138  0879               	movf	?___awdiv+1,w
  2096  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2097  013A  00B0               	movwf	(printf@exp+1)^(0+128)
  2098  013B  0878               	movf	?___awdiv,w
  2099  013C  00AF               	movwf	printf@exp^(0+128)
  2100  013D  1FB0               	btfss	(printf@exp+1)^(0+128),7
  2101  013E  2943               	goto	l6983
  2102  013F  30FF               	movlw	-1
  2103  0140  07AF               	addwf	printf@exp^(0+128),f
  2104  0141  1C03               	skipc
  2105  0142  03B0               	decf	(printf@exp+1)^(0+128),f
  2106  0143                     l6983:	
  2107  0143  032F               	decf	printf@exp^(0+128),w
  2108  0144  3AFF               	xorlw	255
  2109  0145  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2110  014A  2731  120A  118A   	fcall	PL8	;call to abstracted procedure
  2111  014D  275E               	fcall	PL16	;call to abstracted procedure
  2112  014E  1683               	bsf	3,5	;RP0=1, select bank1
  2113  014F  0825               	movf	printf@integ^(0+128),w
  2114  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0151  00B4               	movwf	?___ftmul+3
  2116  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2117  0153  0826               	movf	(printf@integ+1)^(0+128),w
  2118  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0155  00B5               	movwf	?___ftmul+4
  2120  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2121  0157  0827               	movf	(printf@integ+2)^(0+128),w
  2122  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2123  0159  00B6               	movwf	?___ftmul+5
  2124  015A  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2125  015F  0831               	movf	?___ftmul,w
  2126  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2127  0161  00A5               	movwf	printf@integ^(0+128)
  2128  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2129  0163  0832               	movf	?___ftmul+1,w
  2130  0164  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0165  00A6               	movwf	(printf@integ+1)^(0+128)
  2132  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0167  0833               	movf	?___ftmul+2,w
  2134  0168  1683               	bsf	3,5	;RP0=1, select bank1
  2135  0169  00A7               	movwf	(printf@integ+2)^(0+128)
  2136  016A  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2137  016D  3080               	movlw	128
  2138  016E  01F5               	clrf	?___ftge+3
  2139  016F  00F6               	movwf	?___ftge+4
  2140  0170  303F               	movlw	63
  2141  0171  00F7               	movwf	?___ftge+5
  2142  0172  258F  120A  118A   	fcall	___ftge
  2143  0175  1803               	btfsc	3,0
  2144  0176  297C               	goto	l6991
  2145  0177  30FF               	movlw	-1
  2146  0178  07AF               	addwf	printf@exp^(0+128),f
  2147  0179  1C03               	skipc
  2148  017A  03B0               	decf	(printf@exp+1)^(0+128),f
  2149  017B  298C               	goto	l6995
  2150  017C                     l6991:	
  2151  017C  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2152  017F  3020               	movlw	32
  2153  0180  01F5               	clrf	?___ftge+3
  2154  0181  00F6               	movwf	?___ftge+4
  2155  0182  3041               	movlw	65
  2156  0183  00F7               	movwf	?___ftge+5
  2157  0184  258F  120A  118A   	fcall	___ftge
  2158  0187  1C03               	btfss	3,0
  2159  0188  298C               	goto	l6995
  2160  0189  0AAF               	incf	printf@exp^(0+128),f
  2161  018A  1903               	skipnz
  2162  018B  0AB0               	incf	(printf@exp+1)^(0+128),f
  2163  018C                     l6995:	
  2164  018C  0837               	movf	(printf@prec+1)^(0+128),w
  2165  018D  3A80               	xorlw	128
  2166  018E  00FF               	movwf	127
  2167  018F  3080               	movlw	128
  2168  0190  027F               	subwf	127,w
  2169  0191  1D03               	skipz
  2170  0192  2995               	goto	u3555
  2171  0193  300D               	movlw	13
  2172  0194  0236               	subwf	printf@prec^(0+128),w
  2173  0195                     u3555:	
  2174  0195  1803               	skipnc
  2175  0196  29C0               	goto	l6999
  2176  0197  2798               	call	PL32	;select bank 1
  2177  0198  0836               	movf	printf@prec^(0+128),w
  2178  0199  120A  158A  2167   	fcall	_fround
      +       120A  118A         
  2179  019E  084C               	movf	?_fround,w
  2180  019F  00C0               	movwf	?___ftadd
  2181  01A0  084D               	movf	?_fround+1,w
  2182  01A1  00C1               	movwf	?___ftadd+1
  2183  01A2  084E               	movf	?_fround+2,w
  2184  01A3  00C2               	movwf	?___ftadd+2
  2185  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2186  01A5  0833               	movf	printf@fval^(0+128),w
  2187  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2188  01A7  00C3               	movwf	?___ftadd+3
  2189  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2190  01A9  0834               	movf	(printf@fval+1)^(0+128),w
  2191  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2192  01AB  00C4               	movwf	?___ftadd+4
  2193  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2194  01AD  0835               	movf	(printf@fval+2)^(0+128),w
  2195  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2196  01AF  00C5               	movwf	?___ftadd+5
  2197  01B0  120A  158A  20A5   	fcall	___ftadd
      +       120A  118A         
  2198  01B5  0840               	movf	?___ftadd,w
  2199  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2200  01B7  00B3               	movwf	printf@fval^(0+128)
  2201  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2202  01B9  0841               	movf	?___ftadd+1,w
  2203  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2204  01BB  00B4               	movwf	(printf@fval+1)^(0+128)
  2205  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2206  01BD  0842               	movf	?___ftadd+2,w
  2207  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2208  01BF  00B5               	movwf	(printf@fval+2)^(0+128)
  2209  01C0                     l6999:	
  2210  01C0  2798               	call	PL32	;select bank 1
  2211  01C1  0830               	movf	(printf@exp+1)^(0+128),w
  2212  01C2  3A80               	xorlw	128
  2213  01C3  00FF               	movwf	127
  2214  01C4  3080               	movlw	128
  2215  01C5  027F               	subwf	127,w
  2216  01C6  1D03               	skipz
  2217  01C7  29CA               	goto	u3565
  2218  01C8  300A               	movlw	10
  2219  01C9  022F               	subwf	printf@exp^(0+128),w
  2220  01CA                     u3565:	
  2221  01CA  1803               	skipnc
  2222  01CB  29EB               	goto	l7007
  2223  01CC  2798               	call	PL32	;select bank 1
  2224  01CD  0835               	movf	(printf@fval+2)^(0+128),w
  2225  01CE  0434               	iorwf	(printf@fval+1)^(0+128),w
  2226  01CF  0433               	iorwf	printf@fval^(0+128),w
  2227  01D0  1903               	skipnz
  2228  01D1  2A2C               	goto	l7023
  2229  01D2  0833               	movf	printf@fval^(0+128),w
  2230  01D3  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2231  01D6  25E2  120A  118A   	fcall	___fttol
  2232  01D9  0827               	movf	?___fttol+3,w
  2233  01DA  0426               	iorwf	?___fttol+2,w
  2234  01DB  0425               	iorwf	?___fttol+1,w
  2235  01DC  0424               	iorwf	?___fttol,w
  2236  01DD  1D03               	skipz
  2237  01DE  2A2C               	goto	l7023
  2238  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2239  01E0  0830               	movf	(printf@exp+1)^(0+128),w
  2240  01E1  3A80               	xorlw	128
  2241  01E2  00FF               	movwf	127
  2242  01E3  3080               	movlw	128
  2243  01E4  027F               	subwf	127,w
  2244  01E5  1D03               	skipz
  2245  01E6  29E9               	goto	u3595
  2246  01E7  3002               	movlw	2
  2247  01E8  022F               	subwf	printf@exp^(0+128),w
  2248  01E9                     u3595:	
  2249  01E9  1C03               	skipc
  2250  01EA  2A2C               	goto	l7023
  2251  01EB                     l7007:	
  2252  01EB  2798               	call	PL32	;select bank 1
  2253  01EC  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2254  01EF  3070               	movlw	112
  2255  01F0  00F5               	movwf	?___ftge+3
  2256  01F1  3089               	movlw	137
  2257  01F2  00F6               	movwf	?___ftge+4
  2258  01F3  3040               	movlw	64
  2259  01F4  00F7               	movwf	?___ftge+5
  2260  01F5  258F  120A  118A   	fcall	___ftge
  2261  01F8  1803               	btfsc	3,0
  2262  01F9  29FC               	goto	l7011
  2263  01FA  30F7               	movlw	-9
  2264  01FB  29FD               	goto	L1
  2265  01FC                     l7011:	
  2266  01FC  30F8               	movlw	-8
  2267  01FD                     L1:	
  2268  01FD  07AF               	addwf	printf@exp^(0+128),f
  2269  01FE  1C03               	skipc
  2270  01FF  03B0               	decf	(printf@exp+1)^(0+128),f
  2271  0200  082F               	movf	printf@exp^(0+128),w
  2272  0201  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2273  0206  2731  120A  118A   	fcall	PL8	;call to abstracted procedure
  2274  0209  00F2               	movwf	?__tdiv_to_l_
  2275  020A  0834               	movf	(printf@fval+1)^(0+128),w
  2276  020B  00F3               	movwf	?__tdiv_to_l_+1
  2277  020C  0835               	movf	(printf@fval+2)^(0+128),w
  2278  020D  00F4               	movwf	?__tdiv_to_l_+2
  2279  020E  0825               	movf	printf@integ^(0+128),w
  2280  020F  00F5               	movwf	?__tdiv_to_l_+3
  2281  0210  0826               	movf	(printf@integ+1)^(0+128),w
  2282  0211  00F6               	movwf	?__tdiv_to_l_+4
  2283  0212  0827               	movf	(printf@integ+2)^(0+128),w
  2284  0213  00F7               	movwf	?__tdiv_to_l_+5
  2285  0214  2686  120A  118A   	fcall	__tdiv_to_l_
  2286  0217  0875               	movf	?__tdiv_to_l_+3,w
  2287  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2288  0219  00A3               	movwf	(_printf$3175+3)^(0+128)
  2289  021A  0874               	movf	?__tdiv_to_l_+2,w
  2290  021B  00A2               	movwf	(_printf$3175+2)^(0+128)
  2291  021C  0873               	movf	?__tdiv_to_l_+1,w
  2292  021D  00A1               	movwf	(_printf$3175+1)^(0+128)
  2293  021E  0872               	movf	?__tdiv_to_l_,w
  2294  021F  00A0               	movwf	_printf$3175^(0+128)
  2295  0220  0823               	movf	(_printf$3175+3)^(0+128),w
  2296  0221  00AB               	movwf	(printf@_val+3)^(0+128)
  2297  0222  0822               	movf	(_printf$3175+2)^(0+128),w
  2298  0223  00AA               	movwf	(printf@_val+2)^(0+128)
  2299  0224  0821               	movf	(_printf$3175+1)^(0+128),w
  2300  0225  00A9               	movwf	(printf@_val+1)^(0+128)
  2301  0226  0820               	movf	_printf$3175^(0+128),w
  2302  0227  00A8               	movwf	printf@_val^(0+128)
  2303  0228  01B3               	clrf	printf@fval^(0+128)
  2304  0229  01B4               	clrf	(printf@fval+1)^(0+128)
  2305  022A  01B5               	clrf	(printf@fval+2)^(0+128)
  2306  022B  2A6F               	goto	l7027
  2307  022C                     l7023:	
  2308  022C  2798               	call	PL32	;select bank 1
  2309  022D  0833               	movf	printf@fval^(0+128),w
  2310  022E  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2311  0231  25E2  120A  118A   	fcall	___fttol
  2312  0234  2723               	fcall	PL6	;call to abstracted procedure
  2313  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2314  0236  00A8               	movwf	printf@_val^(0+128)
  2315  0237  082B               	movf	(printf@_val+3)^(0+128),w
  2316  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0239  00A3               	movwf	?___lltoft+3
  2318  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2319  023B  082A               	movf	(printf@_val+2)^(0+128),w
  2320  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2321  023D  00A2               	movwf	?___lltoft+2
  2322  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2323  023F  0829               	movf	(printf@_val+1)^(0+128),w
  2324  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0241  00A1               	movwf	?___lltoft+1
  2326  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2327  0243  0828               	movf	printf@_val^(0+128),w
  2328  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0245  00A0               	movwf	?___lltoft
  2330  0246  120A  158A  248A   	fcall	___lltoft
      +       120A  118A         
  2331  024B  0820               	movf	?___lltoft,w
  2332  024C  00CC               	movwf	?___ftsub
  2333  024D  0821               	movf	?___lltoft+1,w
  2334  024E  00CD               	movwf	?___ftsub+1
  2335  024F  0822               	movf	?___lltoft+2,w
  2336  0250  00CE               	movwf	?___ftsub+2
  2337  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0252  0833               	movf	printf@fval^(0+128),w
  2339  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0254  00CF               	movwf	?___ftsub+3
  2341  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2342  0256  0834               	movf	(printf@fval+1)^(0+128),w
  2343  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0258  00D0               	movwf	?___ftsub+4
  2345  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2346  025A  0835               	movf	(printf@fval+2)^(0+128),w
  2347  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2348  025C  00D1               	movwf	?___ftsub+5
  2349  025D  120A  158A  208F   	fcall	___ftsub
      +       120A  118A         
  2350  0262  084C               	movf	?___ftsub,w
  2351  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0264  00B3               	movwf	printf@fval^(0+128)
  2353  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0266  084D               	movf	?___ftsub+1,w
  2355  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2356  0268  00B4               	movwf	(printf@fval+1)^(0+128)
  2357  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2358  026A  084E               	movf	?___ftsub+2,w
  2359  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2360  026C  00B5               	movwf	(printf@fval+2)^(0+128)
  2361  026D  01AF               	clrf	printf@exp^(0+128)
  2362  026E  01B0               	clrf	(printf@exp+1)^(0+128)
  2363  026F                     l7027:	
  2364  026F  01B8               	clrf	printf@c^(0+128)
  2365  0270  0AB8               	incf	printf@c^(0+128),f
  2366  0271                     l7033:	
  2367  0271  2706               	fcall	PL2	;call to abstracted procedure
  2368  0272  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2369  0277  00DB               	movwf	??_printf+1
  2370  0278  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2371  027D  00DC               	movwf	??_printf+2
  2372  027E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2373  0283  00DD               	movwf	??_printf+3
  2374  0284  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2375  0289  00DE               	movwf	??_printf+4
  2376  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2377  028B  022B               	subwf	(printf@_val+3)^(0+128),w
  2378  028C  1D03               	skipz
  2379  028D  2A9E               	goto	u3615
  2380  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2381  028F  085D               	movf	??_printf+3,w
  2382  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2383  0291  022A               	subwf	(printf@_val+2)^(0+128),w
  2384  0292  1D03               	skipz
  2385  0293  2A9E               	goto	u3615
  2386  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0295  085C               	movf	??_printf+2,w
  2388  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0297  0229               	subwf	(printf@_val+1)^(0+128),w
  2390  0298  1D03               	skipz
  2391  0299  2A9E               	goto	u3615
  2392  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2393  029B  085B               	movf	??_printf+1,w
  2394  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2395  029D  0228               	subwf	printf@_val^(0+128),w
  2396  029E                     u3615:	
  2397  029E  1C03               	btfss	3,0
  2398  029F  2AA5               	goto	l7041
  2399  02A0  0AB8               	incf	printf@c^(0+128),f
  2400  02A1  0838               	movf	printf@c^(0+128),w
  2401  02A2  3A0A               	xorlw	10
  2402  02A3  1D03               	skipz
  2403  02A4  2A71               	goto	l7033
  2404  02A5                     l7041:	
  2405  02A5  0836               	movf	printf@prec^(0+128),w
  2406  02A6  0738               	addwf	printf@c^(0+128),w
  2407  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2408  02A8  00DA               	movwf	??_printf
  2409  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2410  02AA  0837               	movf	(printf@prec+1)^(0+128),w
  2411  02AB  1803               	skipnc
  2412  02AC  0A37               	incf	(printf@prec+1)^(0+128),w
  2413  02AD  1BB8               	btfsc	printf@c^(0+128),7
  2414  02AE  3EFF               	addlw	255
  2415  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2416  02B0  00DB               	movwf	??_printf+1
  2417  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2418  02B2  082F               	movf	printf@exp^(0+128),w
  2419  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2420  02B4  075A               	addwf	??_printf,w
  2421  02B5  00DC               	movwf	??_printf+2
  2422  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2423  02B7  0830               	movf	(printf@exp+1)^(0+128),w
  2424  02B8  1803               	skipnc
  2425  02B9  0A30               	incf	(printf@exp+1)^(0+128),w
  2426  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2427  02BB  075B               	addwf	??_printf+1,w
  2428  02BC  00DD               	movwf	??_printf+3
  2429  02BD  085C               	movf	??_printf+2,w
  2430  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2431  02BF  02B1               	subwf	printf@width^(0+128),f
  2432  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2433  02C1  085D               	movf	??_printf+3,w
  2434  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2435  02C3  1C03               	skipc
  2436  02C4  03B2               	decf	(printf@width+1)^(0+128),f
  2437  02C5  02B2               	subwf	(printf@width+1)^(0+128),f
  2438  02C6  0837               	movf	(printf@prec+1)^(0+128),w
  2439  02C7  0436               	iorwf	printf@prec^(0+128),w
  2440  02C8  1903               	skipnz
  2441  02C9  2ACE               	goto	l7047
  2442  02CA  30FF               	movlw	-1
  2443  02CB  07B1               	addwf	printf@width^(0+128),f
  2444  02CC  1C03               	skipc
  2445  02CD  03B2               	decf	(printf@width+1)^(0+128),f
  2446  02CE                     l7047:	
  2447  02CE  082D               	movf	printf@flag^(0+128),w
  2448  02CF  3903               	andlw	3
  2449  02D0  1903               	btfsc	3,2
  2450  02D1  2AD6               	goto	l7051
  2451  02D2  30FF               	movlw	-1
  2452  02D3  07B1               	addwf	printf@width^(0+128),f
  2453  02D4  1C03               	skipc
  2454  02D5  03B2               	decf	(printf@width+1)^(0+128),f
  2455  02D6                     l7051:	
  2456  02D6  192D               	btfsc	printf@flag^(0+128),2
  2457  02D7  2AE2               	goto	l7059
  2458  02D8  2AF7               	goto	l7065
  2459  02D9                     l7055:	
  2460  02D9  3030               	movlw	48
  2461  02DA  254D  120A  118A   	fcall	_putch
  2462  02DD  30FF               	movlw	-1
  2463  02DE  2798               	call	PL32	;select bank 1
  2464  02DF  07B1               	addwf	printf@width^(0+128),f
  2465  02E0  1C03               	skipc
  2466  02E1  03B2               	decf	(printf@width+1)^(0+128),f
  2467  02E2                     l7059:	
  2468  02E2  0832               	movf	(printf@width+1)^(0+128),w
  2469  02E3  3A80               	xorlw	128
  2470  02E4  00FF               	movwf	127
  2471  02E5  3080               	movlw	128
  2472  02E6  027F               	subwf	127,w
  2473  02E7  1D03               	skipz
  2474  02E8  2AEB               	goto	u3665
  2475  02E9  3001               	movlw	1
  2476  02EA  0231               	subwf	printf@width^(0+128),w
  2477  02EB                     u3665:	
  2478  02EB  1C03               	btfss	3,0
  2479  02EC  2B35               	goto	l7073
  2480  02ED  2AD9               	goto	l7055
  2481  02EE                     l7061:	
  2482  02EE  3020               	movlw	32
  2483  02EF  254D  120A  118A   	fcall	_putch
  2484  02F2  30FF               	movlw	-1
  2485  02F3  2798               	call	PL32	;select bank 1
  2486  02F4  07B1               	addwf	printf@width^(0+128),f
  2487  02F5  1C03               	skipc
  2488  02F6  03B2               	decf	(printf@width+1)^(0+128),f
  2489  02F7                     l7065:	
  2490  02F7  0832               	movf	(printf@width+1)^(0+128),w
  2491  02F8  3A80               	xorlw	128
  2492  02F9  00FF               	movwf	127
  2493  02FA  3080               	movlw	128
  2494  02FB  027F               	subwf	127,w
  2495  02FC  1D03               	skipz
  2496  02FD  2B00               	goto	u3675
  2497  02FE  3001               	movlw	1
  2498  02FF  0231               	subwf	printf@width^(0+128),w
  2499  0300                     u3675:	
  2500  0300  1803               	skipnc
  2501  0301  2AEE               	goto	l7061
  2502  0302  2798               	call	PL32	;select bank 1
  2503  0303  082D               	movf	printf@flag^(0+128),w
  2504  0304  3903               	andlw	3
  2505  0305  1903               	btfsc	3,2
  2506  0306  2B35               	goto	l7073
  2507  0307  302D               	movlw	45
  2508  0308  2B32               	goto	L2
  2509  0309                     l7071:	
  2510  0309  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2511  030C  2706               	fcall	PL2	;call to abstracted procedure
  2512  030D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2513  0312  00F2               	movwf	?___lldiv
  2514  0313  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2515  0318  00F3               	movwf	?___lldiv+1
  2516  0319  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2517  031E  00F4               	movwf	?___lldiv+2
  2518  031F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2519  0324  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2520  0327  263D  120A  118A   	fcall	___lldiv
  2521  032A  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2522  032D  2551  120A  118A   	fcall	___llmod
  2523  0330  0825               	movf	?___llmod,w
  2524  0331  3E30               	addlw	48
  2525  0332                     L2:	
  2526  0332  254D  120A  118A   	fcall	_putch
  2527  0335                     l7073:	
  2528  0335  2798               	call	PL32	;select bank 1
  2529  0336  03B8               	decf	printf@c^(0+128),f
  2530  0337  0F38               	incfsz	printf@c^(0+128),w
  2531  0338  2B09               	goto	l7071
  2532  0339                     l7079:	
  2533  0339  0830               	movf	(printf@exp+1)^(0+128),w
  2534  033A  3A80               	xorlw	128
  2535  033B  00FF               	movwf	127
  2536  033C  3080               	movlw	128
  2537  033D  027F               	subwf	127,w
  2538  033E  1D03               	skipz
  2539  033F  2B42               	goto	u3705
  2540  0340  3001               	movlw	1
  2541  0341  022F               	subwf	printf@exp^(0+128),w
  2542  0342                     u3705:	
  2543  0342  1C03               	btfss	3,0
  2544  0343  2B4E               	goto	l7081
  2545  0344  3030               	movlw	48
  2546  0345  254D  120A  118A   	fcall	_putch
  2547  0348  30FF               	movlw	-1
  2548  0349  2798               	call	PL32	;select bank 1
  2549  034A  07AF               	addwf	printf@exp^(0+128),f
  2550  034B  1C03               	skipc
  2551  034C  03B0               	decf	(printf@exp+1)^(0+128),f
  2552  034D  2B39               	goto	l7079
  2553  034E                     l7081:	
  2554  034E  2798               	call	PL32	;select bank 1
  2555  034F  0837               	movf	(printf@prec+1)^(0+128),w
  2556  0350  3A80               	xorlw	128
  2557  0351  00FF               	movwf	127
  2558  0352  3080               	movlw	128
  2559  0353  027F               	subwf	127,w
  2560  0354  1D03               	skipz
  2561  0355  2B58               	goto	u3715
  2562  0356  3009               	movlw	9
  2563  0357  0236               	subwf	printf@prec^(0+128),w
  2564  0358                     u3715:	
  2565  0358  1C03               	skipc
  2566  0359  2B5D               	goto	l7085
  2567  035A  3008               	movlw	8
  2568  035B  2798               	call	PL32	;select bank 1
  2569  035C  2B5F               	goto	L3
  2570  035D                     l7085:	
  2571  035D  2798               	call	PL32	;select bank 1
  2572  035E  0836               	movf	printf@prec^(0+128),w
  2573  035F                     L3:	
  2574  035F  00B8               	movwf	printf@c^(0+128)
  2575  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2576  0361  00DA               	movwf	??_printf
  2577  0362  01DB               	clrf	??_printf+1
  2578  0363  1BDA               	btfsc	??_printf,7
  2579  0364  03DB               	decf	??_printf+1,f
  2580  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0366  02B6               	subwf	printf@prec^(0+128),f
  2582  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0368  085B               	movf	??_printf+1,w
  2584  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2585  036A  1C03               	skipc
  2586  036B  03B7               	decf	(printf@prec+1)^(0+128),f
  2587  036C  02B7               	subwf	(printf@prec+1)^(0+128),f
  2588  036D  0838               	movf	printf@c^(0+128),w
  2589  036E  1903               	btfsc	3,2
  2590  036F  2B74               	goto	l2274
  2591  0370  302E               	movlw	46
  2592  0371  254D  120A  118A   	fcall	_putch
  2593  0374                     l2274:	
  2594  0374  2798               	call	PL32	;select bank 1
  2595  0375  0838               	movf	printf@c^(0+128),w
  2596  0376  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2597  037B  0840               	movf	?_scale,w
  2598  037C  00B4               	movwf	?___ftmul+3
  2599  037D  0841               	movf	?_scale+1,w
  2600  037E  00B5               	movwf	?___ftmul+4
  2601  037F  0842               	movf	?_scale+2,w
  2602  0380  00B6               	movwf	?___ftmul+5
  2603  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2604  0382  0833               	movf	printf@fval^(0+128),w
  2605  0383  275E               	fcall	PL16	;call to abstracted procedure
  2606  0384  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2607  0389  0831               	movf	?___ftmul,w
  2608  038A  00A4               	movwf	?___fttol
  2609  038B  0832               	movf	?___ftmul+1,w
  2610  038C  00A5               	movwf	?___fttol+1
  2611  038D  0833               	movf	?___ftmul+2,w
  2612  038E  00A6               	movwf	?___fttol+2
  2613  038F  25E2  120A  118A   	fcall	___fttol
  2614  0392  2723  120A  118A   	fcall	PL6	;call to abstracted procedure
  2615  0395  2BFC               	goto	L4
  2616  0396                     l7089:	
  2617  0396  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2618  0399  2706               	fcall	PL2	;call to abstracted procedure
  2619  039A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2620  039F  00F2               	movwf	?___lldiv
  2621  03A0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2622  03A5  00F3               	movwf	?___lldiv+1
  2623  03A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2624  03AB  00F4               	movwf	?___lldiv+2
  2625  03AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2626  03B1  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2627  03B4  263D  120A  118A   	fcall	___lldiv
  2628  03B7  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2629  03BA  2551  120A  118A   	fcall	___llmod
  2630  03BD  0825               	movf	?___llmod,w
  2631  03BE  3E30               	addlw	48
  2632  03BF  254D  120A  118A   	fcall	_putch
  2633  03C2  2798               	call	PL32	;select bank 1
  2634  03C3  2706               	fcall	PL2	;call to abstracted procedure
  2635  03C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2636  03C9  00A5               	movwf	?___llmod
  2637  03CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2638  03CF  00A6               	movwf	?___llmod+1
  2639  03D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2640  03D5  00A7               	movwf	?___llmod+2
  2641  03D6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2642  03DB  00A8               	movwf	?___llmod+3
  2643  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2644  03DD  082B               	movf	(printf@_val+3)^(0+128),w
  2645  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2646  03DF  00AC               	movwf	?___llmod+7
  2647  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2648  03E1  082A               	movf	(printf@_val+2)^(0+128),w
  2649  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2650  03E3  00AB               	movwf	?___llmod+6
  2651  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2652  03E5  0829               	movf	(printf@_val+1)^(0+128),w
  2653  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2654  03E7  00AA               	movwf	?___llmod+5
  2655  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2656  03E9  0828               	movf	printf@_val^(0+128),w
  2657  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2658  03EB  00A9               	movwf	?___llmod+4
  2659  03EC  2551  120A  118A   	fcall	___llmod
  2660  03EF  0828               	movf	?___llmod+3,w
  2661  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2662  03F1  00AB               	movwf	(printf@_val+3)^(0+128)
  2663  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2664  03F3  0827               	movf	?___llmod+2,w
  2665  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2666  03F5  00AA               	movwf	(printf@_val+2)^(0+128)
  2667  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2668  03F7  0826               	movf	?___llmod+1,w
  2669  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2670  03F9  00A9               	movwf	(printf@_val+1)^(0+128)
  2671  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2672  03FB  0825               	movf	?___llmod,w
  2673  03FC                     L4:	
  2674  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2675  03FD  00A8               	movwf	printf@_val^(0+128)
  2676  03FE  03B8               	decf	printf@c^(0+128),f
  2677  03FF  0F38               	incfsz	printf@c^(0+128),w
  2678  0400  2B96               	goto	l7089
  2679  0401                     l7097:	
  2680  0401  0837               	movf	(printf@prec+1)^(0+128),w
  2681  0402  0436               	iorwf	printf@prec^(0+128),w
  2682  0403  1903               	btfsc	3,2
  2683  0404  2813               	goto	l7177
  2684  0405  3030               	movlw	48
  2685  0406  254D  120A  118A   	fcall	_putch
  2686  0409  30FF               	movlw	-1
  2687  040A  2798               	call	PL32	;select bank 1
  2688  040B  07B6               	addwf	printf@prec^(0+128),f
  2689  040C  1C03               	skipc
  2690  040D  03B7               	decf	(printf@prec+1)^(0+128),f
  2691  040E  2C01               	goto	l7097
  2692  040F                     l7099:	
  2693  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0410  0824               	movf	printf@ap^(0+128),w
  2695  0411  0084               	movwf	4
  2696  0412  1383               	bcf	3,7	;select IRP bank0
  2697  0413  2791  120A  118A   	fcall	PL31	;call to abstracted procedure
  2698  0416  085A               	movf	??_printf,w
  2699  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0418  00A8               	movwf	printf@_val^(0+128)
  2701  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2702  041A  085B               	movf	??_printf+1,w
  2703  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2704  041C  00A9               	movwf	(printf@_val^(0+128)+1)
  2705  041D  01AA               	clrf	(printf@_val^(0+128)+2)
  2706  041E  01AB               	clrf	(printf@_val^(0+128)+3)
  2707  041F  0AA4               	incf	printf@ap^(0+128),f
  2708  0420  0AA4               	incf	printf@ap^(0+128),f
  2709  0421  0837               	movf	(printf@prec+1)^(0+128),w
  2710  0422  0436               	iorwf	printf@prec^(0+128),w
  2711  0423  1D03               	skipz
  2712  0424  2C2D               	goto	l7109
  2713  0425  082B               	movf	(printf@_val+3)^(0+128),w
  2714  0426  042A               	iorwf	(printf@_val+2)^(0+128),w
  2715  0427  0429               	iorwf	(printf@_val+1)^(0+128),w
  2716  0428  0428               	iorwf	printf@_val^(0+128),w
  2717  0429  1903               	btfsc	3,2
  2718  042A  0AB6               	incf	printf@prec^(0+128),f
  2719  042B  1903               	skipnz
  2720  042C  0AB7               	incf	(printf@prec+1)^(0+128),f
  2721  042D                     l7109:	
  2722  042D  01B8               	clrf	printf@c^(0+128)
  2723  042E  0AB8               	incf	printf@c^(0+128),f
  2724  042F                     l7115:	
  2725  042F  2706               	fcall	PL2	;call to abstracted procedure
  2726  0430  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2727  0435  00DB               	movwf	??_printf+1
  2728  0436  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2729  043B  00DC               	movwf	??_printf+2
  2730  043C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2731  0441  00DD               	movwf	??_printf+3
  2732  0442  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2733  0447  00DE               	movwf	??_printf+4
  2734  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0449  022B               	subwf	(printf@_val+3)^(0+128),w
  2736  044A  1D03               	skipz
  2737  044B  2C5C               	goto	u3775
  2738  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2739  044D  085D               	movf	??_printf+3,w
  2740  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2741  044F  022A               	subwf	(printf@_val+2)^(0+128),w
  2742  0450  1D03               	skipz
  2743  0451  2C5C               	goto	u3775
  2744  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2745  0453  085C               	movf	??_printf+2,w
  2746  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0455  0229               	subwf	(printf@_val+1)^(0+128),w
  2748  0456  1D03               	skipz
  2749  0457  2C5C               	goto	u3775
  2750  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2751  0459  085B               	movf	??_printf+1,w
  2752  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2753  045B  0228               	subwf	printf@_val^(0+128),w
  2754  045C                     u3775:	
  2755  045C  1C03               	btfss	3,0
  2756  045D  2C63               	goto	l7123
  2757  045E  0AB8               	incf	printf@c^(0+128),f
  2758  045F  0838               	movf	printf@c^(0+128),w
  2759  0460  3A0A               	xorlw	10
  2760  0461  1D03               	skipz
  2761  0462  2C2F               	goto	l7115
  2762  0463                     l7123:	
  2763  0463  0838               	movf	printf@c^(0+128),w
  2764  0464  2769  120A  118A   	fcall	PL18	;call to abstracted procedure
  2765  0467  0837               	movf	(printf@prec+1)^(0+128),w
  2766  0468  3A80               	xorlw	128
  2767  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2768  046A  025C               	subwf	??_printf+2,w
  2769  046B  1D03               	skipz
  2770  046C  2C71               	goto	u3795
  2771  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2772  046E  0836               	movf	printf@prec^(0+128),w
  2773  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0470  025A               	subwf	??_printf,w
  2775  0471                     u3795:	
  2776  0471  1803               	skipnc
  2777  0472  2C77               	goto	l7127
  2778  0473  2798               	call	PL32	;select bank 1
  2779  0474  0836               	movf	printf@prec^(0+128),w
  2780  0475  00B8               	movwf	printf@c^(0+128)
  2781  0476  2C8F               	goto	l7131
  2782  0477                     l7127:	
  2783  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0478  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2785  047B  0837               	movf	(printf@prec+1)^(0+128),w
  2786  047C  3A80               	xorlw	128
  2787  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2788  047E  00DC               	movwf	??_printf+2
  2789  047F  085B               	movf	??_printf+1,w
  2790  0480  3A80               	xorlw	128
  2791  0481  025C               	subwf	??_printf+2,w
  2792  0482  1D03               	skipz
  2793  0483  2C87               	goto	u3805
  2794  0484  085A               	movf	??_printf,w
  2795  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2796  0486  0236               	subwf	printf@prec^(0+128),w
  2797  0487                     u3805:	
  2798  0487  1803               	skipnc
  2799  0488  2C8F               	goto	l7131
  2800  0489  2798               	call	PL32	;select bank 1
  2801  048A  0838               	movf	printf@c^(0+128),w
  2802  048B  00B6               	movwf	printf@prec^(0+128)
  2803  048C  01B7               	clrf	(printf@prec+1)^(0+128)
  2804  048D  1BB6               	btfsc	printf@prec^(0+128),7
  2805  048E  03B7               	decf	(printf@prec+1)^(0+128),f
  2806  048F                     l7131:	
  2807  048F  2798               	call	PL32	;select bank 1
  2808  0490  0832               	movf	(printf@width+1)^(0+128),w
  2809  0491  0431               	iorwf	printf@width^(0+128),w
  2810  0492  1903               	skipnz
  2811  0493  2C9C               	goto	l7137
  2812  0494  082D               	movf	printf@flag^(0+128),w
  2813  0495  3903               	andlw	3
  2814  0496  1903               	btfsc	3,2
  2815  0497  2C9C               	goto	l7137
  2816  0498  30FF               	movlw	-1
  2817  0499  07B1               	addwf	printf@width^(0+128),f
  2818  049A  1C03               	skipc
  2819  049B  03B2               	decf	(printf@width+1)^(0+128),f
  2820  049C                     l7137:	
  2821  049C  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2822  049D  2CB9               	goto	l7145
  2823  049E  0837               	movf	(printf@prec+1)^(0+128),w
  2824  049F  3A80               	xorlw	128
  2825  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2826  04A1  00DA               	movwf	??_printf
  2827  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2828  04A3  0832               	movf	(printf@width+1)^(0+128),w
  2829  04A4  3A80               	xorlw	128
  2830  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2831  04A6  025A               	subwf	??_printf,w
  2832  04A7  1D03               	skipz
  2833  04A8  2CAC               	goto	u3845
  2834  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  2835  04AA  0831               	movf	printf@width^(0+128),w
  2836  04AB  0236               	subwf	printf@prec^(0+128),w
  2837  04AC                     u3845:	
  2838  04AC  1803               	skipnc
  2839  04AD  2CB6               	goto	l7143
  2840  04AE  2798               	call	PL32	;select bank 1
  2841  04AF  0836               	movf	printf@prec^(0+128),w
  2842  04B0  02B1               	subwf	printf@width^(0+128),f
  2843  04B1  0837               	movf	(printf@prec+1)^(0+128),w
  2844  04B2  1C03               	skipc
  2845  04B3  03B2               	decf	(printf@width+1)^(0+128),f
  2846  04B4  02B2               	subwf	(printf@width+1)^(0+128),f
  2847  04B5  2CB9               	goto	l7145
  2848  04B6                     l7143:	
  2849  04B6  2798               	call	PL32	;select bank 1
  2850  04B7  01B1               	clrf	printf@width^(0+128)
  2851  04B8  01B2               	clrf	(printf@width+1)^(0+128)
  2852  04B9                     l7145:	
  2853  04B9  0838               	movf	printf@c^(0+128),w
  2854  04BA  2769  120A  118A   	fcall	PL18	;call to abstracted procedure
  2855  04BD  0832               	movf	(printf@width+1)^(0+128),w
  2856  04BE  3A80               	xorlw	128
  2857  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2858  04C0  025C               	subwf	??_printf+2,w
  2859  04C1  1D03               	skipz
  2860  04C2  2CC7               	goto	u3855
  2861  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2862  04C4  0831               	movf	printf@width^(0+128),w
  2863  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2864  04C6  025A               	subwf	??_printf,w
  2865  04C7                     u3855:	
  2866  04C7  1803               	skipnc
  2867  04C8  2CD5               	goto	l7149
  2868  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2869  04CA  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2870  04CD  02B1               	subwf	printf@width^(0+128),f
  2871  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2872  04CF  085B               	movf	??_printf+1,w
  2873  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2874  04D1  1C03               	skipc
  2875  04D2  03B2               	decf	(printf@width+1)^(0+128),f
  2876  04D3  02B2               	subwf	(printf@width+1)^(0+128),f
  2877  04D4  2CD8               	goto	l7151
  2878  04D5                     l7149:	
  2879  04D5  2798               	call	PL32	;select bank 1
  2880  04D6  01B1               	clrf	printf@width^(0+128)
  2881  04D7  01B2               	clrf	(printf@width+1)^(0+128)
  2882  04D8                     l7151:	
  2883  04D8  1D2D               	btfss	printf@flag^(0+128),2
  2884  04D9  2CF1               	goto	l7163
  2885  04DA  082D               	movf	printf@flag^(0+128),w
  2886  04DB  3903               	andlw	3
  2887  04DC  1903               	btfsc	3,2
  2888  04DD  2CE2               	goto	l7157
  2889  04DE  302D               	movlw	45
  2890  04DF  254D  120A  118A   	fcall	_putch
  2891  04E2                     l7157:	
  2892  04E2  2798               	call	PL32	;select bank 1
  2893  04E3                     L6:	
  2894  04E3  0832               	movf	(printf@width+1)^(0+128),w
  2895  04E4  0431               	iorwf	printf@width^(0+128),w
  2896  04E5  1903               	skipnz
  2897  04E6  2D0A               	goto	l7175
  2898  04E7  3030               	movlw	48
  2899  04E8  254D  120A  118A   	fcall	_putch
  2900  04EB  30FF               	movlw	-1
  2901  04EC  2798               	call	PL32	;select bank 1
  2902  04ED  07B1               	addwf	printf@width^(0+128),f
  2903  04EE  1C03               	skipc
  2904  04EF  03B2               	decf	(printf@width+1)^(0+128),f
  2905  04F0  2CE3               	goto	L6
  2906  04F1                     l7163:	
  2907  04F1  0832               	movf	(printf@width+1)^(0+128),w
  2908  04F2  0431               	iorwf	printf@width^(0+128),w
  2909  04F3  1903               	skipnz
  2910  04F4  2D02               	goto	l7169
  2911  04F5                     l7165:	
  2912  04F5  3020               	movlw	32
  2913  04F6  254D  120A  118A   	fcall	_putch
  2914  04F9  30FF               	movlw	-1
  2915  04FA  2798               	call	PL32	;select bank 1
  2916  04FB  07B1               	addwf	printf@width^(0+128),f
  2917  04FC  1C03               	skipc
  2918  04FD  03B2               	decf	(printf@width+1)^(0+128),f
  2919  04FE  0832               	movf	(printf@width+1)^(0+128),w
  2920  04FF  0431               	iorwf	printf@width^(0+128),w
  2921  0500  1D03               	skipz
  2922  0501  2CF5               	goto	l7165
  2923  0502                     l7169:	
  2924  0502  082D               	movf	printf@flag^(0+128),w
  2925  0503  3903               	andlw	3
  2926  0504  1903               	btfsc	3,2
  2927  0505  2D0A               	goto	l7175
  2928  0506  302D               	movlw	45
  2929  0507                     L5:	
  2930  0507  254D  120A  118A   	fcall	_putch
  2931  050A                     l7175:	
  2932  050A  30FF               	movlw	-1
  2933  050B  2798               	call	PL32	;select bank 1
  2934  050C  07B6               	addwf	printf@prec^(0+128),f
  2935  050D  1C03               	skipc
  2936  050E  03B7               	decf	(printf@prec+1)^(0+128),f
  2937  050F  0A36               	incf	printf@prec^(0+128),w
  2938  0510  1903               	skipnz
  2939  0511  0A37               	incf	(printf@prec+1)^(0+128),w
  2940  0512  1903               	btfsc	3,2
  2941  0513  2813               	goto	l7177
  2942  0514  300A               	movlw	10
  2943  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0516  00A5               	movwf	?___llmod
  2945  0517  01A6               	clrf	?___llmod+1
  2946  0518  01A7               	clrf	?___llmod+2
  2947  0519  01A8               	clrf	?___llmod+3
  2948  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2949  051B  0836               	movf	printf@prec^(0+128),w
  2950  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2951  051D  00DA               	movwf	??_printf
  2952  051E  1003               	clrc
  2953  051F  0DDA               	rlf	??_printf,f
  2954  0520  1003               	clrc
  2955  0521  0D5A               	rlf	??_printf,w
  2956  0522  3E4F               	addlw	low (_dpowers-__stringbase)
  2957  0523  0084               	movwf	4
  2958  0524  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2959  0529  00F2               	movwf	?___lldiv
  2960  052A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2961  052F  00F3               	movwf	?___lldiv+1
  2962  0530  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2963  0535  00F4               	movwf	?___lldiv+2
  2964  0536  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2965  053B  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2966  053E  263D  120A  118A   	fcall	___lldiv
  2967  0541  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2968  0544  2551  120A  118A   	fcall	___llmod
  2969  0547  0825               	movf	?___llmod,w
  2970  0548  3E30               	addlw	48
  2971  0549  1683               	bsf	3,5	;RP0=1, select bank1
  2972  054A  00B8               	movwf	printf@c^(0+128)
  2973  054B  2D07               	goto	L5
  2974  054C                     l2308:	
  2975  054C  0008               	return
  2976  054D                     __end_of_printf:	
  2977  054D                     __ptext532:	
  2978 ;; =============== function _printf ends ============
  2979                           
  2980                           
  2981 ;; *************** function _putch *****************
  2982 ;; Defined at:
  2983 ;;		line 69 in file "D:\TTVXL\Project TTVXL\BT05week12ttvxl\BT05week12ttvxl.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  c               1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  c               1   11[COMMON] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/20
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         0       0       0       0       0
  2998 ;;      Locals:         1       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0
  3000 ;;      Totals:         1       0       0       0       0
  3001 ;;Total ram usage:        1 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    4
  3004 ;; This function calls:
  3005 ;;		_lcd_putc
  3006 ;; This function is called by:
  3007 ;;		_printf
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010  054D                     _putch:	
  3011                           
  3012                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3013                           ;putch@c stored from wreg
  3014  054D  00FB               	movwf	putch@c
  3015                           
  3016                           ;BT05week12ttvxl.c: 70: lcd_putc(c);
  3017  054E  120A  158A  2AD1   	ljmp	_lcd_putc
  3018  0551                     __end_of_putch:	
  3019  0551                     __ptext549:	
  3020 ;; =============== function ___ftneg ends ============
  3021                           
  3022                           
  3023 ;; *************** function ___llmod *****************
  3024 ;; Defined at:
  3025 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  divisor         4    5[BANK0 ] unsigned long 
  3028 ;;  dividend        4    9[BANK0 ] unsigned long 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  counter         1   10[COMMON] unsigned char 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  4    5[BANK0 ] unsigned long 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0
  3035 ;; Tracked objects:
  3036 ;;		On entry : 60/0
  3037 ;;		On exit  : 60/0
  3038 ;;		Unchanged: FFF9F/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         0       8       0       0       0
  3041 ;;      Locals:         1       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0
  3043 ;;      Totals:         1       8       0       0       0
  3044 ;;Total ram usage:        9 bytes
  3045 ;; Hardware stack levels used:    1
  3046 ;; Hardware stack levels required when called:    1
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_printf
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053  0551                     ___llmod:	
  3054                           
  3055                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3056  0551  0828               	movf	___llmod@divisor+3,w
  3057  0552  0427               	iorwf	___llmod@divisor+2,w
  3058  0553  0426               	iorwf	___llmod@divisor+1,w
  3059  0554  0425               	iorwf	___llmod@divisor,w
  3060  0555  1903               	skipnz
  3061  0556  2D86               	goto	l6457
  3062  0557  01FA               	clrf	___llmod@counter
  3063  0558                     L13:	
  3064  0558  0AFA               	incf	___llmod@counter,f
  3065  0559  1BA8               	btfsc	___llmod@divisor+3,7
  3066  055A  2D61               	goto	l6449
  3067  055B  1003               	clrc
  3068  055C  0DA5               	rlf	___llmod@divisor,f
  3069  055D  0DA6               	rlf	___llmod@divisor+1,f
  3070  055E  0DA7               	rlf	___llmod@divisor+2,f
  3071  055F  0DA8               	rlf	___llmod@divisor+3,f
  3072  0560  2D58               	goto	L13
  3073  0561                     l6449:	
  3074  0561  0828               	movf	___llmod@divisor+3,w
  3075  0562  022C               	subwf	___llmod@dividend+3,w
  3076  0563  1D03               	skipz
  3077  0564  2D6F               	goto	u2585
  3078  0565  0827               	movf	___llmod@divisor+2,w
  3079  0566  022B               	subwf	___llmod@dividend+2,w
  3080  0567  1D03               	skipz
  3081  0568  2D6F               	goto	u2585
  3082  0569  0826               	movf	___llmod@divisor+1,w
  3083  056A  022A               	subwf	___llmod@dividend+1,w
  3084  056B  1D03               	skipz
  3085  056C  2D6F               	goto	u2585
  3086  056D  0825               	movf	___llmod@divisor,w
  3087  056E  0229               	subwf	___llmod@dividend,w
  3088  056F                     u2585:	
  3089  056F  1C03               	skipc
  3090  0570  2D80               	goto	L14
  3091  0571  0825               	movf	___llmod@divisor,w
  3092  0572  02A9               	subwf	___llmod@dividend,f
  3093  0573  0826               	movf	___llmod@divisor+1,w
  3094  0574  1C03               	skipc
  3095  0575  0F26               	incfsz	___llmod@divisor+1,w
  3096  0576  02AA               	subwf	___llmod@dividend+1,f
  3097  0577  0827               	movf	___llmod@divisor+2,w
  3098  0578  1C03               	skipc
  3099  0579  0F27               	incfsz	___llmod@divisor+2,w
  3100  057A  02AB               	subwf	___llmod@dividend+2,f
  3101  057B  0828               	movf	___llmod@divisor+3,w
  3102  057C  1C03               	skipc
  3103  057D  0F28               	incfsz	___llmod@divisor+3,w
  3104  057E  02AC               	subwf	___llmod@dividend+3,f
  3105  057F  1003               	clrc
  3106  0580                     L14:	
  3107  0580  0CA8               	rrf	___llmod@divisor+3,f
  3108  0581  0CA7               	rrf	___llmod@divisor+2,f
  3109  0582  0CA6               	rrf	___llmod@divisor+1,f
  3110  0583  0CA5               	rrf	___llmod@divisor,f
  3111  0584  0BFA               	decfsz	___llmod@counter,f
  3112  0585  2D61               	goto	l6449
  3113  0586                     l6457:	
  3114  0586  082C               	movf	___llmod@dividend+3,w
  3115  0587  00A8               	movwf	?___llmod+3
  3116  0588  082B               	movf	___llmod@dividend+2,w
  3117  0589  00A7               	movwf	?___llmod+2
  3118  058A  082A               	movf	___llmod@dividend+1,w
  3119  058B  00A6               	movwf	?___llmod+1
  3120  058C  0829               	movf	___llmod@dividend,w
  3121  058D  00A5               	movwf	?___llmod
  3122  058E  0008               	return
  3123  058F                     __end_of___llmod:	
  3124  058F                     __ptext547:	
  3125 ;; =============== function ___lldiv ends ============
  3126                           
  3127                           
  3128 ;; *************** function ___ftge *****************
  3129 ;; Defined at:
  3130 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  ff1             3    2[COMMON] float 
  3133 ;;  ff2             3    5[COMMON] float 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;		None               void
  3138 ;; Registers used:
  3139 ;;		wreg, status,2, status,0
  3140 ;; Tracked objects:
  3141 ;;		On entry : 60/20
  3142 ;;		On exit  : 60/20
  3143 ;;		Unchanged: FFF9F/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         6       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0
  3148 ;;      Totals:         6       0       0       0       0
  3149 ;;Total ram usage:        6 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    1
  3152 ;; This function calls:
  3153 ;;		Nothing
  3154 ;; This function is called by:
  3155 ;;		_printf
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158  058F                     ___ftge:	
  3159                           
  3160                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3161  058F  1FF4               	btfss	___ftge@ff1+2,7
  3162  0590  2D9E               	goto	l6473
  3163  0591  0872               	movf	___ftge@ff1,w
  3164  0592  3C00               	sublw	0
  3165  0593  00F2               	movwf	___ftge@ff1
  3166  0594  0873               	movf	___ftge@ff1+1,w
  3167  0595  1C03               	skipc
  3168  0596  0F73               	incfsz	___ftge@ff1+1,w
  3169  0597  3C00               	sublw	0
  3170  0598  00F3               	movwf	___ftge@ff1+1
  3171  0599  0874               	movf	___ftge@ff1+2,w
  3172  059A  1C03               	skipc
  3173  059B  0F74               	incfsz	___ftge@ff1+2,w
  3174  059C  3C80               	sublw	128
  3175  059D  00F4               	movwf	___ftge@ff1+2
  3176  059E                     l6473:	
  3177  059E  1FF7               	btfss	___ftge@ff2+2,7
  3178  059F  2DAD               	goto	l6477
  3179  05A0  0875               	movf	___ftge@ff2,w
  3180  05A1  3C00               	sublw	0
  3181  05A2  00F5               	movwf	___ftge@ff2
  3182  05A3  0876               	movf	___ftge@ff2+1,w
  3183  05A4  1C03               	skipc
  3184  05A5  0F76               	incfsz	___ftge@ff2+1,w
  3185  05A6  3C00               	sublw	0
  3186  05A7  00F6               	movwf	___ftge@ff2+1
  3187  05A8  0877               	movf	___ftge@ff2+2,w
  3188  05A9  1C03               	skipc
  3189  05AA  0F77               	incfsz	___ftge@ff2+2,w
  3190  05AB  3C80               	sublw	128
  3191  05AC  00F7               	movwf	___ftge@ff2+2
  3192  05AD                     l6477:	
  3193  05AD  3080               	movlw	128
  3194  05AE  06F4               	xorwf	___ftge@ff1+2,f
  3195  05AF  06F7               	xorwf	___ftge@ff2+2,f
  3196  05B0  0877               	movf	___ftge@ff2+2,w
  3197  05B1  0274               	subwf	___ftge@ff1+2,w
  3198  05B2  1D03               	skipz
  3199  05B3  0008               	return
  3200  05B4  0876               	movf	___ftge@ff2+1,w
  3201  05B5  0273               	subwf	___ftge@ff1+1,w
  3202  05B6  1D03               	skipz
  3203  05B7  0008               	return
  3204  05B8  0875               	movf	___ftge@ff2,w
  3205  05B9  0272               	subwf	___ftge@ff1,w
  3206  05BA  0008               	return
  3207  05BB                     __end_of___ftge:	
  3208  05BB                     __ptext559:	
  3209 ;; =============== function __tdiv_to_l_ ends ============
  3210                           
  3211                           
  3212 ;; *************** function _isdigit *****************
  3213 ;; Defined at:
  3214 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  c               1    wreg     unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  c               1    3[COMMON] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 60/20
  3225 ;;		On exit  : 60/20
  3226 ;;		Unchanged: FFF9F/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         2       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0
  3231 ;;      Totals:         2       0       0       0       0
  3232 ;;Total ram usage:        2 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    1
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_printf
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241  05BB                     _isdigit:	
  3242                           
  3243                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3244                           ;isdigit@c stored from wreg
  3245  05BB  00F3               	movwf	isdigit@c
  3246  05BC  303A               	movlw	58
  3247  05BD  01F2               	clrf	_isdigit$3685
  3248  05BE  0273               	subwf	isdigit@c,w
  3249  05BF  1803               	skipnc
  3250  05C0  2DC7               	goto	l6159
  3251  05C1  3030               	movlw	48
  3252  05C2  0273               	subwf	isdigit@c,w
  3253  05C3  1C03               	skipc
  3254  05C4  2DC7               	goto	l6159
  3255  05C5  01F2               	clrf	_isdigit$3685
  3256  05C6  0AF2               	incf	_isdigit$3685,f
  3257  05C7                     l6159:	
  3258  05C7  0C72               	rrf	_isdigit$3685,w
  3259  05C8  0008               	return
  3260  05C9                     __end_of_isdigit:	
  3261  05C9                     __ptext555:	
  3262 ;; =============== function ___lbdiv ends ============
  3263                           
  3264                           
  3265 ;; *************** function ___wmul *****************
  3266 ;; Defined at:
  3267 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  multiplier      2    2[COMMON] unsigned int 
  3270 ;;  multiplicand    2    4[COMMON] unsigned int 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  product         2    6[COMMON] unsigned int 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  2    2[COMMON] unsigned int 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0
  3277 ;; Tracked objects:
  3278 ;;		On entry : 60/20
  3279 ;;		On exit  : 60/20
  3280 ;;		Unchanged: FFF9F/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         4       0       0       0       0
  3283 ;;      Locals:         2       0       0       0       0
  3284 ;;      Temps:          0       0       0       0       0
  3285 ;;      Totals:         6       0       0       0       0
  3286 ;;Total ram usage:        6 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_fround
  3293 ;;		_scale
  3294 ;;		_printf
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297  05C9                     ___wmul:	
  3298                           
  3299                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3300  05C9  01F6               	clrf	___wmul@product
  3301  05CA  01F7               	clrf	___wmul@product+1
  3302  05CB                     l6275:	
  3303  05CB  1C72               	btfss	___wmul@multiplier,0
  3304  05CC  2DD3               	goto	l6279
  3305  05CD  0874               	movf	___wmul@multiplicand,w
  3306  05CE  07F6               	addwf	___wmul@product,f
  3307  05CF  1803               	skipnc
  3308  05D0  0AF7               	incf	___wmul@product+1,f
  3309  05D1  0875               	movf	___wmul@multiplicand+1,w
  3310  05D2  07F7               	addwf	___wmul@product+1,f
  3311  05D3                     l6279:	
  3312  05D3  1003               	clrc
  3313  05D4  0DF4               	rlf	___wmul@multiplicand,f
  3314  05D5  0DF5               	rlf	___wmul@multiplicand+1,f
  3315  05D6  1003               	clrc
  3316  05D7  0CF3               	rrf	___wmul@multiplier+1,f
  3317  05D8  0CF2               	rrf	___wmul@multiplier,f
  3318  05D9  0873               	movf	___wmul@multiplier+1,w
  3319  05DA  0472               	iorwf	___wmul@multiplier,w
  3320  05DB  1D03               	skipz
  3321  05DC  2DCB               	goto	l6275
  3322  05DD  0877               	movf	___wmul@product+1,w
  3323  05DE  00F3               	movwf	?___wmul+1
  3324  05DF  0876               	movf	___wmul@product,w
  3325  05E0  00F2               	movwf	?___wmul
  3326  05E1  0008               	return
  3327  05E2                     __end_of___wmul:	
  3328  05E2                     __ptext551:	
  3329 ;; =============== function ___awdiv ends ============
  3330                           
  3331                           
  3332 ;; *************** function ___fttol *****************
  3333 ;; Defined at:
  3334 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  f1              3    4[BANK0 ] float 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  lval            4   12[BANK0 ] unsigned long 
  3339 ;;  exp1            1   16[BANK0 ] unsigned char 
  3340 ;;  sign1           1   11[BANK0 ] unsigned char 
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  4    4[BANK0 ] long 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 60/0
  3347 ;;		On exit  : 60/0
  3348 ;;		Unchanged: FFF9F/0
  3349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3350 ;;      Params:         0       4       0       0       0
  3351 ;;      Locals:         0       6       0       0       0
  3352 ;;      Temps:          0       3       0       0       0
  3353 ;;      Totals:         0      13       0       0       0
  3354 ;;Total ram usage:       13 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    1
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_printf
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363  05E2                     ___fttol:	
  3364                           
  3365                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3366  05E2  278A  120A  118A   	fcall	PL28	;call to abstracted procedure
  3367  05E5  1003               	clrc
  3368  05E6  0D29               	rlf	??___fttol+1,w
  3369  05E7  0D2A               	rlf	??___fttol+2,w
  3370  05E8  00B0               	movwf	___fttol@exp1
  3371  05E9  08B0               	movf	___fttol@exp1,f
  3372  05EA  1D03               	skipz
  3373  05EB  2DF1               	goto	l6363
  3374  05EC                     l6361:	
  3375  05EC  01A4               	clrf	?___fttol
  3376  05ED  01A5               	clrf	?___fttol+1
  3377  05EE  01A6               	clrf	?___fttol+2
  3378  05EF  01A7               	clrf	?___fttol+3
  3379  05F0  0008               	return
  3380  05F1                     l6363:	
  3381  05F1  278A  120A  118A   	fcall	PL28	;call to abstracted procedure
  3382  05F4  3017               	movlw	23
  3383  05F5                     u2425:	
  3384  05F5  1003               	clrc
  3385  05F6  0CAA               	rrf	??___fttol+2,f
  3386  05F7  0CA9               	rrf	??___fttol+1,f
  3387  05F8  0CA8               	rrf	??___fttol,f
  3388  05F9  3EFF               	addlw	-1
  3389  05FA  1D03               	skipz
  3390  05FB  2DF5               	goto	u2425
  3391  05FC  0828               	movf	??___fttol,w
  3392  05FD  00AB               	movwf	___fttol@sign1
  3393  05FE  17A5               	bsf	___fttol@f1+1,7
  3394  05FF  01A6               	clrf	___fttol@f1+2
  3395  0600  0824               	movf	___fttol@f1,w
  3396  0601  00AC               	movwf	___fttol@lval
  3397  0602  0825               	movf	___fttol@f1+1,w
  3398  0603  00AD               	movwf	___fttol@lval+1
  3399  0604  0826               	movf	___fttol@f1+2,w
  3400  0605  00AE               	movwf	___fttol@lval+2
  3401  0606  308E               	movlw	142
  3402  0607  01AF               	clrf	___fttol@lval+3
  3403  0608  02B0               	subwf	___fttol@exp1,f
  3404  0609  1FB0               	btfss	___fttol@exp1,7
  3405  060A  2E18               	goto	l6383
  3406  060B  0830               	movf	___fttol@exp1,w
  3407  060C  3A80               	xorlw	128
  3408  060D  3E8F               	addlw	143
  3409  060E  1C03               	btfss	3,0
  3410  060F  2DEC               	goto	l6361
  3411  0610                     l6379:	
  3412  0610  1003               	clrc
  3413  0611  0CAF               	rrf	___fttol@lval+3,f
  3414  0612  0CAE               	rrf	___fttol@lval+2,f
  3415  0613  0CAD               	rrf	___fttol@lval+1,f
  3416  0614  0CAC               	rrf	___fttol@lval,f
  3417  0615  0FB0               	incfsz	___fttol@exp1,f
  3418  0616  2E10               	goto	l6379
  3419  0617  2E26               	goto	l6389
  3420  0618                     l6383:	
  3421  0618  3018               	movlw	24
  3422  0619  0230               	subwf	___fttol@exp1,w
  3423  061A  1803               	btfsc	3,0
  3424  061B  2DEC               	goto	l6361
  3425  061C                     l3432:	
  3426  061C  08B0               	movf	___fttol@exp1,f
  3427  061D  1903               	btfsc	3,2
  3428  061E  2E26               	goto	l6389
  3429  061F  1003               	clrc
  3430  0620  0DAC               	rlf	___fttol@lval,f
  3431  0621  0DAD               	rlf	___fttol@lval+1,f
  3432  0622  0DAE               	rlf	___fttol@lval+2,f
  3433  0623  0DAF               	rlf	___fttol@lval+3,f
  3434  0624  03B0               	decf	___fttol@exp1,f
  3435  0625  2E1C               	goto	l3432
  3436  0626                     l6389:	
  3437  0626  082B               	movf	___fttol@sign1,w
  3438  0627  1903               	btfsc	3,2
  3439  0628  2E34               	goto	l6393
  3440  0629  09AC               	comf	___fttol@lval,f
  3441  062A  09AD               	comf	___fttol@lval+1,f
  3442  062B  09AE               	comf	___fttol@lval+2,f
  3443  062C  09AF               	comf	___fttol@lval+3,f
  3444  062D  0AAC               	incf	___fttol@lval,f
  3445  062E  1903               	skipnz
  3446  062F  0AAD               	incf	___fttol@lval+1,f
  3447  0630  1903               	skipnz
  3448  0631  0AAE               	incf	___fttol@lval+2,f
  3449  0632  1903               	skipnz
  3450  0633  0AAF               	incf	___fttol@lval+3,f
  3451  0634                     l6393:	
  3452  0634  082F               	movf	___fttol@lval+3,w
  3453  0635  00A7               	movwf	?___fttol+3
  3454  0636  082E               	movf	___fttol@lval+2,w
  3455  0637  00A6               	movwf	?___fttol+2
  3456  0638  082D               	movf	___fttol@lval+1,w
  3457  0639  00A5               	movwf	?___fttol+1
  3458  063A  082C               	movf	___fttol@lval,w
  3459  063B  00A4               	movwf	?___fttol
  3460  063C  0008               	return
  3461  063D                     __end_of___fttol:	
  3462  063D                     __ptext546:	
  3463 ;; =============== function ___awmod ends ============
  3464                           
  3465                           
  3466 ;; *************** function ___lldiv *****************
  3467 ;; Defined at:
  3468 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  divisor         4    2[COMMON] unsigned long 
  3471 ;;  dividend        4    6[COMMON] unsigned long 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  quotient        4    0[BANK0 ] unsigned long 
  3474 ;;  counter         1    4[BANK0 ] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  4    2[COMMON] unsigned long 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 60/20
  3481 ;;		On exit  : 60/0
  3482 ;;		Unchanged: FFF9F/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         8       0       0       0       0
  3485 ;;      Locals:         0       5       0       0       0
  3486 ;;      Temps:          0       0       0       0       0
  3487 ;;      Totals:         8       5       0       0       0
  3488 ;;Total ram usage:       13 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    1
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_printf
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497  063D                     ___lldiv:	
  3498                           
  3499                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3500  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3501  063E  01A0               	clrf	___lldiv@quotient
  3502  063F  01A1               	clrf	___lldiv@quotient+1
  3503  0640  01A2               	clrf	___lldiv@quotient+2
  3504  0641  01A3               	clrf	___lldiv@quotient+3
  3505  0642  0875               	movf	___lldiv@divisor+3,w
  3506  0643  0474               	iorwf	___lldiv@divisor+2,w
  3507  0644  0473               	iorwf	___lldiv@divisor+1,w
  3508  0645  0472               	iorwf	___lldiv@divisor,w
  3509  0646  1903               	skipnz
  3510  0647  2E7D               	goto	l6511
  3511  0648  01A4               	clrf	___lldiv@counter
  3512  0649                     L10:	
  3513  0649  0AA4               	incf	___lldiv@counter,f
  3514  064A  1BF5               	btfsc	___lldiv@divisor+3,7
  3515  064B  2E52               	goto	l6499
  3516  064C  1003               	clrc
  3517  064D  0DF2               	rlf	___lldiv@divisor,f
  3518  064E  0DF3               	rlf	___lldiv@divisor+1,f
  3519  064F  0DF4               	rlf	___lldiv@divisor+2,f
  3520  0650  0DF5               	rlf	___lldiv@divisor+3,f
  3521  0651  2E49               	goto	L10
  3522  0652                     l6499:	
  3523  0652  1003               	clrc
  3524  0653  0DA0               	rlf	___lldiv@quotient,f
  3525  0654  0DA1               	rlf	___lldiv@quotient+1,f
  3526  0655  0DA2               	rlf	___lldiv@quotient+2,f
  3527  0656  0DA3               	rlf	___lldiv@quotient+3,f
  3528  0657  0875               	movf	___lldiv@divisor+3,w
  3529  0658  0279               	subwf	___lldiv@dividend+3,w
  3530  0659  1D03               	skipz
  3531  065A  2E65               	goto	u2665
  3532  065B  0874               	movf	___lldiv@divisor+2,w
  3533  065C  0278               	subwf	___lldiv@dividend+2,w
  3534  065D  1D03               	skipz
  3535  065E  2E65               	goto	u2665
  3536  065F  0873               	movf	___lldiv@divisor+1,w
  3537  0660  0277               	subwf	___lldiv@dividend+1,w
  3538  0661  1D03               	skipz
  3539  0662  2E65               	goto	u2665
  3540  0663  0872               	movf	___lldiv@divisor,w
  3541  0664  0276               	subwf	___lldiv@dividend,w
  3542  0665                     u2665:	
  3543  0665  1C03               	skipc
  3544  0666  2E77               	goto	L11
  3545  0667  0872               	movf	___lldiv@divisor,w
  3546  0668  02F6               	subwf	___lldiv@dividend,f
  3547  0669  0873               	movf	___lldiv@divisor+1,w
  3548  066A  1C03               	skipc
  3549  066B  0F73               	incfsz	___lldiv@divisor+1,w
  3550  066C  02F7               	subwf	___lldiv@dividend+1,f
  3551  066D  0874               	movf	___lldiv@divisor+2,w
  3552  066E  1C03               	skipc
  3553  066F  0F74               	incfsz	___lldiv@divisor+2,w
  3554  0670  02F8               	subwf	___lldiv@dividend+2,f
  3555  0671  0875               	movf	___lldiv@divisor+3,w
  3556  0672  1C03               	skipc
  3557  0673  0F75               	incfsz	___lldiv@divisor+3,w
  3558  0674  02F9               	subwf	___lldiv@dividend+3,f
  3559  0675  1420               	bsf	___lldiv@quotient,0
  3560  0676  1003               	clrc
  3561  0677                     L11:	
  3562  0677  0CF5               	rrf	___lldiv@divisor+3,f
  3563  0678  0CF4               	rrf	___lldiv@divisor+2,f
  3564  0679  0CF3               	rrf	___lldiv@divisor+1,f
  3565  067A  0CF2               	rrf	___lldiv@divisor,f
  3566  067B  0BA4               	decfsz	___lldiv@counter,f
  3567  067C  2E52               	goto	l6499
  3568  067D                     l6511:	
  3569  067D  0823               	movf	___lldiv@quotient+3,w
  3570  067E  00F5               	movwf	?___lldiv+3
  3571  067F  0822               	movf	___lldiv@quotient+2,w
  3572  0680  00F4               	movwf	?___lldiv+2
  3573  0681  0821               	movf	___lldiv@quotient+1,w
  3574  0682  00F3               	movwf	?___lldiv+1
  3575  0683  0820               	movf	___lldiv@quotient,w
  3576  0684  00F2               	movwf	?___lldiv
  3577  0685  0008               	return
  3578  0686                     __end_of___lldiv:	
  3579  0686                     __ptext558:	
  3580 ;; =============== function __div_to_l_ ends ============
  3581                           
  3582                           
  3583 ;; *************** function __tdiv_to_l_ *****************
  3584 ;; Defined at:
  3585 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  f1              3    2[COMMON] float 
  3588 ;;  f2              3    5[COMMON] float 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  quot            4    0[BANK0 ] unsigned long 
  3591 ;;  exp1            1    5[BANK0 ] unsigned char 
  3592 ;;  cntr            1    4[BANK0 ] unsigned char 
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  4    2[COMMON] unsigned long 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 60/20
  3599 ;;		On exit  : 60/0
  3600 ;;		Unchanged: FFF9F/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3602 ;;      Params:         6       0       0       0       0
  3603 ;;      Locals:         0       6       0       0       0
  3604 ;;      Temps:          3       0       0       0       0
  3605 ;;      Totals:         9       6       0       0       0
  3606 ;;Total ram usage:       15 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    1
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_printf
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615  0686                     __tdiv_to_l_:	
  3616                           
  3617                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3618  0686  0872               	movf	__tdiv_to_l_@f1,w
  3619  0687  00F8               	movwf	??__tdiv_to_l_
  3620  0688  0873               	movf	__tdiv_to_l_@f1+1,w
  3621  0689  00F9               	movwf	??__tdiv_to_l_+1
  3622  068A  0874               	movf	__tdiv_to_l_@f1+2,w
  3623  068B  00FA               	movwf	??__tdiv_to_l_+2
  3624  068C  1003               	clrc
  3625  068D  0D79               	rlf	??__tdiv_to_l_+1,w
  3626  068E  0D7A               	rlf	??__tdiv_to_l_+2,w
  3627  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0690  00A5               	movwf	__tdiv_to_l_@exp1
  3629  0691  08A5               	movf	__tdiv_to_l_@exp1,f
  3630  0692  1D03               	skipz
  3631  0693  2E99               	goto	l6167
  3632  0694                     l6165:	
  3633  0694  01F2               	clrf	?__tdiv_to_l_
  3634  0695  01F3               	clrf	?__tdiv_to_l_+1
  3635  0696  01F4               	clrf	?__tdiv_to_l_+2
  3636  0697  01F5               	clrf	?__tdiv_to_l_+3
  3637  0698  0008               	return
  3638  0699                     l6167:	
  3639  0699  0875               	movf	__tdiv_to_l_@f2,w
  3640  069A  00F8               	movwf	??__tdiv_to_l_
  3641  069B  0876               	movf	__tdiv_to_l_@f2+1,w
  3642  069C  00F9               	movwf	??__tdiv_to_l_+1
  3643  069D  0877               	movf	__tdiv_to_l_@f2+2,w
  3644  069E  00FA               	movwf	??__tdiv_to_l_+2
  3645  069F  1003               	clrc
  3646  06A0  0D79               	rlf	??__tdiv_to_l_+1,w
  3647  06A1  0D7A               	rlf	??__tdiv_to_l_+2,w
  3648  06A2  00A4               	movwf	__tdiv_to_l_@cntr
  3649  06A3  08A4               	movf	__tdiv_to_l_@cntr,f
  3650  06A4  1903               	btfsc	3,2
  3651  06A5  2E94               	goto	l6165
  3652  06A6  307F               	movlw	127
  3653  06A7  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3654  06A8  01F4               	clrf	__tdiv_to_l_@f1+2
  3655  06A9  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3656  06AA  01F7               	clrf	__tdiv_to_l_@f2+2
  3657  06AB  01A0               	clrf	__tdiv_to_l_@quot
  3658  06AC  01A1               	clrf	__tdiv_to_l_@quot+1
  3659  06AD  01A2               	clrf	__tdiv_to_l_@quot+2
  3660  06AE  01A3               	clrf	__tdiv_to_l_@quot+3
  3661  06AF  02A5               	subwf	__tdiv_to_l_@exp1,f
  3662  06B0  3098               	movlw	152
  3663  06B1  0724               	addwf	__tdiv_to_l_@cntr,w
  3664  06B2  00F8               	movwf	??__tdiv_to_l_
  3665  06B3  02A5               	subwf	__tdiv_to_l_@exp1,f
  3666  06B4  3018               	movlw	24
  3667  06B5  00A4               	movwf	__tdiv_to_l_@cntr
  3668  06B6                     l6181:	
  3669  06B6  1003               	clrc
  3670  06B7  0DA0               	rlf	__tdiv_to_l_@quot,f
  3671  06B8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3672  06B9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3673  06BA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3674  06BB  0877               	movf	__tdiv_to_l_@f2+2,w
  3675  06BC  0274               	subwf	__tdiv_to_l_@f1+2,w
  3676  06BD  1D03               	skipz
  3677  06BE  2EC5               	goto	u2075
  3678  06BF  0876               	movf	__tdiv_to_l_@f2+1,w
  3679  06C0  0273               	subwf	__tdiv_to_l_@f1+1,w
  3680  06C1  1D03               	skipz
  3681  06C2  2EC5               	goto	u2075
  3682  06C3  0875               	movf	__tdiv_to_l_@f2,w
  3683  06C4  0272               	subwf	__tdiv_to_l_@f1,w
  3684  06C5                     u2075:	
  3685  06C5  1C03               	skipc
  3686  06C6  2ED3               	goto	L19
  3687  06C7  0875               	movf	__tdiv_to_l_@f2,w
  3688  06C8  02F2               	subwf	__tdiv_to_l_@f1,f
  3689  06C9  0876               	movf	__tdiv_to_l_@f2+1,w
  3690  06CA  1C03               	skipc
  3691  06CB  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3692  06CC  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3693  06CD  0877               	movf	__tdiv_to_l_@f2+2,w
  3694  06CE  1C03               	skipc
  3695  06CF  0A77               	incf	__tdiv_to_l_@f2+2,w
  3696  06D0  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3697  06D1  1420               	bsf	__tdiv_to_l_@quot,0
  3698  06D2  1003               	clrc
  3699  06D3                     L19:	
  3700  06D3  0DF2               	rlf	__tdiv_to_l_@f1,f
  3701  06D4  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3702  06D5  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3703  06D6  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3704  06D7  2EB6               	goto	l6181
  3705  06D8  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3706  06D9  2EE7               	goto	l6201
  3707  06DA  0825               	movf	__tdiv_to_l_@exp1,w
  3708  06DB  3A80               	xorlw	128
  3709  06DC  3E97               	addlw	151
  3710  06DD  1C03               	btfss	3,0
  3711  06DE  2E94               	goto	l6165
  3712  06DF                     l6197:	
  3713  06DF  1003               	clrc
  3714  06E0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3715  06E1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3716  06E2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3717  06E3  0CA0               	rrf	__tdiv_to_l_@quot,f
  3718  06E4  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3719  06E5  2EDF               	goto	l6197
  3720  06E6  2EF5               	goto	l6207
  3721  06E7                     l6201:	
  3722  06E7  3018               	movlw	24
  3723  06E8  0225               	subwf	__tdiv_to_l_@exp1,w
  3724  06E9  1803               	btfsc	3,0
  3725  06EA  2E94               	goto	l6165
  3726  06EB                     l3570:	
  3727  06EB  08A5               	movf	__tdiv_to_l_@exp1,f
  3728  06EC  1903               	btfsc	3,2
  3729  06ED  2EF5               	goto	l6207
  3730  06EE  1003               	clrc
  3731  06EF  0DA0               	rlf	__tdiv_to_l_@quot,f
  3732  06F0  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3733  06F1  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3734  06F2  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3735  06F3  03A5               	decf	__tdiv_to_l_@exp1,f
  3736  06F4  2EEB               	goto	l3570
  3737  06F5                     l6207:	
  3738  06F5  0823               	movf	__tdiv_to_l_@quot+3,w
  3739  06F6  00F5               	movwf	?__tdiv_to_l_+3
  3740  06F7  0822               	movf	__tdiv_to_l_@quot+2,w
  3741  06F8  00F4               	movwf	?__tdiv_to_l_+2
  3742  06F9  0821               	movf	__tdiv_to_l_@quot+1,w
  3743  06FA  00F3               	movwf	?__tdiv_to_l_+1
  3744  06FB  0820               	movf	__tdiv_to_l_@quot,w
  3745  06FC  00F2               	movwf	?__tdiv_to_l_
  3746  06FD  0008               	return
  3747  06FE                     __end_of__tdiv_to_l_:	
  3748  06FE                     __ptext548:	
  3749 ;; =============== function ___ftge ends ============
  3750                           
  3751                           
  3752 ;; *************** function ___ftneg *****************
  3753 ;; Defined at:
  3754 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;  f1              3    2[COMMON] float 
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  3    2[COMMON] float 
  3761 ;; Registers used:
  3762 ;;		wreg
  3763 ;; Tracked objects:
  3764 ;;		On entry : 160/20
  3765 ;;		On exit  : 160/20
  3766 ;;		Unchanged: FFE9F/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3768 ;;      Params:         3       0       0       0       0
  3769 ;;      Locals:         0       0       0       0       0
  3770 ;;      Temps:          0       0       0       0       0
  3771 ;;      Totals:         3       0       0       0       0
  3772 ;;Total ram usage:        3 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    1
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_printf
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781  06FE                     ___ftneg:	
  3782                           
  3783                           ; Regs used in ___ftneg: [wreg]
  3784  06FE  0874               	movf	___ftneg@f1+2,w
  3785  06FF  0473               	iorwf	___ftneg@f1+1,w
  3786  0700  0472               	iorwf	___ftneg@f1,w
  3787  0701  1903               	skipnz
  3788  0702  0008               	return
  3789  0703  3080               	movlw	128
  3790  0704  06F4               	xorwf	___ftneg@f1+2,f
  3791  0705  0008               	return
  3792  0706                     __end_of___ftneg:	
  3793  0706                     PL2:	
  3794  0706  0838               	movf	printf@c^(0+128),w
  3795  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0708  00DA               	movwf	??_printf
  3797  0709  1003               	clrc
  3798  070A  0DDA               	rlf	??_printf,f
  3799  070B  1003               	clrc
  3800  070C  0D5A               	rlf	??_printf,w
  3801  070D  3E4F               	addlw	low (_dpowers-__stringbase)
  3802  070E  0084               	movwf	4
  3803  070F  0008               	return
  3804  0710                     PL4:	
  3805  0710  300A               	movlw	10
  3806  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0712  00A5               	movwf	?___llmod
  3808  0713  01A6               	clrf	?___llmod+1
  3809  0714  01A7               	clrf	?___llmod+2
  3810  0715  01A8               	clrf	?___llmod+3
  3811  0716  1683               	bsf	3,5	;RP0=1, select bank1
  3812  0717  0008               	return
  3813  0718                     PL5:	
  3814  0718  00F5               	movwf	?___lldiv+3
  3815  0719  1683               	bsf	3,5	;RP0=1, select bank1
  3816  071A  082B               	movf	(printf@_val+3)^(0+128),w
  3817  071B  00F9               	movwf	?___lldiv+7
  3818  071C  082A               	movf	(printf@_val+2)^(0+128),w
  3819  071D  00F8               	movwf	?___lldiv+6
  3820  071E  0829               	movf	(printf@_val+1)^(0+128),w
  3821  071F  00F7               	movwf	?___lldiv+5
  3822  0720  0828               	movf	printf@_val^(0+128),w
  3823  0721  00F6               	movwf	?___lldiv+4
  3824  0722  0008               	return
  3825  0723                     PL6:	
  3826  0723  0827               	movf	?___fttol+3,w
  3827  0724  1683               	bsf	3,5	;RP0=1, select bank1
  3828  0725  00AB               	movwf	(printf@_val+3)^(0+128)
  3829  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0727  0826               	movf	?___fttol+2,w
  3831  0728  1683               	bsf	3,5	;RP0=1, select bank1
  3832  0729  00AA               	movwf	(printf@_val+2)^(0+128)
  3833  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3834  072B  0825               	movf	?___fttol+1,w
  3835  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3836  072D  00A9               	movwf	(printf@_val+1)^(0+128)
  3837  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3838  072F  0824               	movf	?___fttol,w
  3839  0730  0008               	return
  3840  0731                     PL8:	
  3841  0731  0840               	movf	?_scale,w
  3842  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3843  0733  00A5               	movwf	printf@integ^(0+128)
  3844  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3845  0735  0841               	movf	?_scale+1,w
  3846  0736  1683               	bsf	3,5	;RP0=1, select bank1
  3847  0737  00A6               	movwf	(printf@integ+1)^(0+128)
  3848  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0739  0842               	movf	?_scale+2,w
  3850  073A  1683               	bsf	3,5	;RP0=1, select bank1
  3851  073B  00A7               	movwf	(printf@integ+2)^(0+128)
  3852  073C  0833               	movf	printf@fval^(0+128),w
  3853  073D  0008               	return
  3854  073E                     PL12:	
  3855  073E  0875               	movf	?___lldiv+3,w
  3856  073F  00AC               	movwf	?___llmod+7
  3857  0740  0874               	movf	?___lldiv+2,w
  3858  0741  00AB               	movwf	?___llmod+6
  3859  0742  0873               	movf	?___lldiv+1,w
  3860  0743  00AA               	movwf	?___llmod+5
  3861  0744  0872               	movf	?___lldiv,w
  3862  0745  00A9               	movwf	?___llmod+4
  3863  0746  0008               	return
  3864  0747                     PL13:	
  3865  0747  0772               	addwf	?___wmul,w
  3866  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0749  00DA               	movwf	??_printf
  3868  074A  3000               	movlw	0
  3869  074B  1803               	skipnc
  3870  074C  3001               	movlw	1
  3871  074D  0773               	addwf	?___wmul+1,w
  3872  074E  00DB               	movwf	??_printf+1
  3873  074F  085A               	movf	??_printf,w
  3874  0750  3ED0               	addlw	208
  3875  0751  1683               	bsf	3,5	;RP0=1, select bank1
  3876  0752  0008               	return
  3877  0753                     PL14:	
  3878  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0754  00A4               	movwf	?___fttol
  3880  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3881  0756  0834               	movf	(printf@fval+1)^(0+128),w
  3882  0757  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0758  00A5               	movwf	?___fttol+1
  3884  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3885  075A  0835               	movf	(printf@fval+2)^(0+128),w
  3886  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3887  075C  00A6               	movwf	?___fttol+2
  3888  075D  0008               	return
  3889  075E                     PL16:	
  3890  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3891  075F  00B1               	movwf	?___ftmul
  3892  0760  1683               	bsf	3,5	;RP0=1, select bank1
  3893  0761  0834               	movf	(printf@fval+1)^(0+128),w
  3894  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0763  00B2               	movwf	?___ftmul+1
  3896  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3897  0765  0835               	movf	(printf@fval+2)^(0+128),w
  3898  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0767  00B3               	movwf	?___ftmul+2
  3900  0768  0008               	return
  3901  0769                     PL18:	
  3902  0769  1283               	bcf	3,5	;RP0=0, select bank0
  3903  076A  00DA               	movwf	??_printf
  3904  076B  01DB               	clrf	??_printf+1
  3905  076C  1BDA               	btfsc	??_printf,7
  3906  076D  03DB               	decf	??_printf+1,f
  3907  076E  085B               	movf	??_printf+1,w
  3908  076F  3A80               	xorlw	128
  3909  0770  00DC               	movwf	??_printf+2
  3910  0771  1683               	bsf	3,5	;RP0=1, select bank1
  3911  0772  0008               	return
  3912  0773                     PL20:	
  3913  0773  1303               	bcf	3,6	;RP1=0, select bank1
  3914  0774  0838               	movf	printf@c^(0+128),w
  3915  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3916  0776  00DA               	movwf	??_printf
  3917  0777  01DB               	clrf	??_printf+1
  3918  0778  1BDA               	btfsc	??_printf,7
  3919  0779  03DB               	decf	??_printf+1,f
  3920  077A  1683               	bsf	3,5	;RP0=1, select bank1
  3921  077B  0008               	return
  3922  077C                     PL21:	
  3923  077C  0825               	movf	printf@integ^(0+128),w
  3924  077D  00F2               	movwf	?___ftge
  3925  077E  0826               	movf	(printf@integ+1)^(0+128),w
  3926  077F  00F3               	movwf	?___ftge+1
  3927  0780  0827               	movf	(printf@integ+2)^(0+128),w
  3928  0781  00F4               	movwf	?___ftge+2
  3929  0782  0008               	return
  3930  0783                     PL27:	
  3931  0783  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0784  085B               	movf	??_printf+1,w
  3933  0785  1803               	skipnc
  3934  0786  3E01               	addlw	1
  3935  0787  3EFF               	addlw	255
  3936  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3937  0789  0008               	return
  3938  078A                     PL28:	
  3939  078A  0824               	movf	___fttol@f1,w
  3940  078B  00A8               	movwf	??___fttol
  3941  078C  0825               	movf	___fttol@f1+1,w
  3942  078D  00A9               	movwf	??___fttol+1
  3943  078E  0826               	movf	___fttol@f1+2,w
  3944  078F  00AA               	movwf	??___fttol+2
  3945  0790  0008               	return
  3946  0791                     PL31:	
  3947  0791  0800               	movf	0,w
  3948  0792  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0793  00DA               	movwf	??_printf
  3950  0794  0A84               	incf	4,f
  3951  0795  0800               	movf	0,w
  3952  0796  00DB               	movwf	??_printf+1
  3953  0797  0008               	return
  3954  0798                     PL32:	
  3955  0798  1683               	bsf	3,5	;RP0=1, select bank1
  3956  0799  1303               	bcf	3,6	;RP1=0, select bank1
  3957  079A  0008               	return
  3958                           
  3959                           	psect	text534
  3960  088F                     __ptext534:	
  3961 ;; =============== function _lcd_putc ends ============
  3962                           
  3963                           
  3964 ;; *************** function ___ftsub *****************
  3965 ;; Defined at:
  3966 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  f2              3   44[BANK0 ] float 
  3969 ;;  f1              3   47[BANK0 ] float 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  3   44[BANK0 ] float 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 60/0
  3978 ;;		On exit  : 60/0
  3979 ;;		Unchanged: FFF9F/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3981 ;;      Params:         0       6       0       0       0
  3982 ;;      Locals:         0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0
  3984 ;;      Totals:         0       6       0       0       0
  3985 ;;Total ram usage:        6 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    3
  3988 ;; This function calls:
  3989 ;;		___ftadd
  3990 ;; This function is called by:
  3991 ;;		_printf
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994  088F                     ___ftsub:	
  3995                           
  3996                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3997  088F  3080               	movlw	128
  3998  0890  06CE               	xorwf	___ftsub@f2+2,f
  3999  0891  084F               	movf	___ftsub@f1,w
  4000  0892  00C0               	movwf	?___ftadd
  4001  0893  0850               	movf	___ftsub@f1+1,w
  4002  0894  00C1               	movwf	?___ftadd+1
  4003  0895  0851               	movf	___ftsub@f1+2,w
  4004  0896  00C2               	movwf	?___ftadd+2
  4005  0897  084C               	movf	___ftsub@f2,w
  4006  0898  00C3               	movwf	?___ftadd+3
  4007  0899  084D               	movf	___ftsub@f2+1,w
  4008  089A  00C4               	movwf	?___ftadd+4
  4009  089B  084E               	movf	___ftsub@f2+2,w
  4010  089C  00C5               	movwf	?___ftadd+5
  4011  089D  20A5               	fcall	___ftadd
  4012  089E  0840               	movf	?___ftadd,w
  4013  089F  00CC               	movwf	?___ftsub
  4014  08A0  0841               	movf	?___ftadd+1,w
  4015  08A1  00CD               	movwf	?___ftsub+1
  4016  08A2  0842               	movf	?___ftadd+2,w
  4017  08A3  00CE               	movwf	?___ftsub+2
  4018  08A4  0008               	return
  4019  08A5                     __end_of___ftsub:	
  4020  08A5                     __ptext542:	
  4021 ;; =============== function ___ftmul ends ============
  4022                           
  4023                           
  4024 ;; *************** function ___ftadd *****************
  4025 ;; Defined at:
  4026 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  f1              3   32[BANK0 ] float 
  4029 ;;  f2              3   35[BANK0 ] float 
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  exp1            1   43[BANK0 ] unsigned char 
  4032 ;;  exp2            1   42[BANK0 ] unsigned char 
  4033 ;;  sign            1   41[BANK0 ] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  3   32[BANK0 ] float 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0, pclath, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 60/0
  4040 ;;		On exit  : 60/0
  4041 ;;		Unchanged: FFF9F/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4043 ;;      Params:         0       6       0       0       0
  4044 ;;      Locals:         0       3       0       0       0
  4045 ;;      Temps:          0       3       0       0       0
  4046 ;;      Totals:         0      12       0       0       0
  4047 ;;Total ram usage:       12 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    2
  4050 ;; This function calls:
  4051 ;;		___ftpack
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;;		_printf
  4055 ;;		___ftsub
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058  08A5                     ___ftadd:	
  4059                           
  4060                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4061  08A5  0840               	movf	___ftadd@f1,w
  4062  08A6  00C6               	movwf	??___ftadd
  4063  08A7  0841               	movf	___ftadd@f1+1,w
  4064  08A8  00C7               	movwf	??___ftadd+1
  4065  08A9  0842               	movf	___ftadd@f1+2,w
  4066  08AA  00C8               	movwf	??___ftadd+2
  4067  08AB  1003               	clrc
  4068  08AC  0D47               	rlf	??___ftadd+1,w
  4069  08AD  0D48               	rlf	??___ftadd+2,w
  4070  08AE  00CB               	movwf	___ftadd@exp1
  4071  08AF  0843               	movf	___ftadd@f2,w
  4072  08B0  00C6               	movwf	??___ftadd
  4073  08B1  0844               	movf	___ftadd@f2+1,w
  4074  08B2  00C7               	movwf	??___ftadd+1
  4075  08B3  0845               	movf	___ftadd@f2+2,w
  4076  08B4  00C8               	movwf	??___ftadd+2
  4077  08B5  1003               	clrc
  4078  08B6  0D47               	rlf	??___ftadd+1,w
  4079  08B7  0D48               	rlf	??___ftadd+2,w
  4080  08B8  00CA               	movwf	___ftadd@exp2
  4081  08B9  084B               	movf	___ftadd@exp1,w
  4082  08BA  1903               	btfsc	3,2
  4083  08BB  28C8               	goto	l6609
  4084  08BC  084A               	movf	___ftadd@exp2,w
  4085  08BD  024B               	subwf	___ftadd@exp1,w
  4086  08BE  084A               	movf	___ftadd@exp2,w
  4087  08BF  1803               	skipnc
  4088  08C0  28D0               	goto	L7
  4089  08C1  00C6               	movwf	??___ftadd
  4090  08C2  084B               	movf	___ftadd@exp1,w
  4091  08C3  02C6               	subwf	??___ftadd,f
  4092  08C4  3019               	movlw	25
  4093  08C5  0246               	subwf	??___ftadd,w
  4094  08C6  1C03               	skipc
  4095  08C7  28CF               	goto	l6613
  4096  08C8                     l6609:	
  4097  08C8  0843               	movf	___ftadd@f2,w
  4098  08C9  00C0               	movwf	?___ftadd
  4099  08CA  0844               	movf	___ftadd@f2+1,w
  4100  08CB  00C1               	movwf	?___ftadd+1
  4101  08CC  0845               	movf	___ftadd@f2+2,w
  4102  08CD  00C2               	movwf	?___ftadd+2
  4103  08CE  0008               	return
  4104  08CF                     l6613:	
  4105  08CF  084A               	movf	___ftadd@exp2,w
  4106  08D0                     L7:	
  4107  08D0  1903               	btfsc	3,2
  4108  08D1  0008               	return
  4109  08D2  084B               	movf	___ftadd@exp1,w
  4110  08D3  024A               	subwf	___ftadd@exp2,w
  4111  08D4  1803               	skipnc
  4112  08D5  28DE               	goto	l6619
  4113  08D6  084B               	movf	___ftadd@exp1,w
  4114  08D7  00C6               	movwf	??___ftadd
  4115  08D8  084A               	movf	___ftadd@exp2,w
  4116  08D9  02C6               	subwf	??___ftadd,f
  4117  08DA  3019               	movlw	25
  4118  08DB  0246               	subwf	??___ftadd,w
  4119  08DC  1803               	btfsc	3,0
  4120  08DD  0008               	return
  4121  08DE                     l6619:	
  4122  08DE  3006               	movlw	6
  4123  08DF  00C9               	movwf	___ftadd@sign
  4124  08E0  1BC2               	btfsc	___ftadd@f1+2,7
  4125  08E1  17C9               	bsf	___ftadd@sign,7
  4126  08E2  1BC5               	btfsc	___ftadd@f2+2,7
  4127  08E3  1749               	bsf	___ftadd@sign,6
  4128  08E4  17C1               	bsf	___ftadd@f1+1,7
  4129  08E5  01C2               	clrf	___ftadd@f1+2
  4130  08E6  17C4               	bsf	___ftadd@f2+1,7
  4131  08E7  01C5               	clrf	___ftadd@f2+2
  4132  08E8  084A               	movf	___ftadd@exp2,w
  4133  08E9  024B               	subwf	___ftadd@exp1,w
  4134  08EA  1803               	skipnc
  4135  08EB  2905               	goto	l6641
  4136  08EC                     l6631:	
  4137  08EC  1003               	clrc
  4138  08ED  0DC3               	rlf	___ftadd@f2,f
  4139  08EE  0DC4               	rlf	___ftadd@f2+1,f
  4140  08EF  0DC5               	rlf	___ftadd@f2+2,f
  4141  08F0  03CA               	decf	___ftadd@exp2,f
  4142  08F1  084A               	movf	___ftadd@exp2,w
  4143  08F2  064B               	xorwf	___ftadd@exp1,w
  4144  08F3  1903               	skipnz
  4145  08F4  2900               	goto	l6639
  4146  08F5  03C9               	decf	___ftadd@sign,f
  4147  08F6  0849               	movf	___ftadd@sign,w
  4148  08F7  3907               	andlw	7
  4149  08F8  1903               	btfsc	3,2
  4150  08F9  2900               	goto	l6639
  4151  08FA  28EC               	goto	l6631
  4152  08FB                     l6637:	
  4153  08FB  1003               	clrc
  4154  08FC  0CC2               	rrf	___ftadd@f1+2,f
  4155  08FD  0CC1               	rrf	___ftadd@f1+1,f
  4156  08FE  0CC0               	rrf	___ftadd@f1,f
  4157  08FF  0ACB               	incf	___ftadd@exp1,f
  4158  0900                     l6639:	
  4159  0900  084B               	movf	___ftadd@exp1,w
  4160  0901  064A               	xorwf	___ftadd@exp2,w
  4161  0902  1903               	btfsc	3,2
  4162  0903  2921               	goto	l3376
  4163  0904  28FB               	goto	l6637
  4164  0905                     l6641:	
  4165  0905  084B               	movf	___ftadd@exp1,w
  4166  0906  024A               	subwf	___ftadd@exp2,w
  4167  0907  1803               	skipnc
  4168  0908  2921               	goto	l3376
  4169  0909                     l6643:	
  4170  0909  1003               	clrc
  4171  090A  0DC0               	rlf	___ftadd@f1,f
  4172  090B  0DC1               	rlf	___ftadd@f1+1,f
  4173  090C  0DC2               	rlf	___ftadd@f1+2,f
  4174  090D  03CB               	decf	___ftadd@exp1,f
  4175  090E  084A               	movf	___ftadd@exp2,w
  4176  090F  064B               	xorwf	___ftadd@exp1,w
  4177  0910  1903               	skipnz
  4178  0911  291D               	goto	l6651
  4179  0912  03C9               	decf	___ftadd@sign,f
  4180  0913  0849               	movf	___ftadd@sign,w
  4181  0914  3907               	andlw	7
  4182  0915  1903               	btfsc	3,2
  4183  0916  291D               	goto	l6651
  4184  0917  2909               	goto	l6643
  4185  0918                     l6649:	
  4186  0918  1003               	clrc
  4187  0919  0CC5               	rrf	___ftadd@f2+2,f
  4188  091A  0CC4               	rrf	___ftadd@f2+1,f
  4189  091B  0CC3               	rrf	___ftadd@f2,f
  4190  091C  0ACA               	incf	___ftadd@exp2,f
  4191  091D                     l6651:	
  4192  091D  084B               	movf	___ftadd@exp1,w
  4193  091E  064A               	xorwf	___ftadd@exp2,w
  4194  091F  1D03               	skipz
  4195  0920  2918               	goto	l6649
  4196  0921                     l3376:	
  4197  0921  1FC9               	btfss	___ftadd@sign,7
  4198  0922  292C               	goto	l6657
  4199  0923  30FF               	movlw	255
  4200  0924  06C0               	xorwf	___ftadd@f1,f
  4201  0925  06C1               	xorwf	___ftadd@f1+1,f
  4202  0926  06C2               	xorwf	___ftadd@f1+2,f
  4203  0927  0AC0               	incf	___ftadd@f1,f
  4204  0928  1903               	skipnz
  4205  0929  0AC1               	incf	___ftadd@f1+1,f
  4206  092A  1903               	skipnz
  4207  092B  0AC2               	incf	___ftadd@f1+2,f
  4208  092C                     l6657:	
  4209  092C  1F49               	btfss	___ftadd@sign,6
  4210  092D  2937               	goto	l6663
  4211  092E  30FF               	movlw	255
  4212  092F  06C3               	xorwf	___ftadd@f2,f
  4213  0930  06C4               	xorwf	___ftadd@f2+1,f
  4214  0931  06C5               	xorwf	___ftadd@f2+2,f
  4215  0932  0AC3               	incf	___ftadd@f2,f
  4216  0933  1903               	skipnz
  4217  0934  0AC4               	incf	___ftadd@f2+1,f
  4218  0935  1903               	skipnz
  4219  0936  0AC5               	incf	___ftadd@f2+2,f
  4220  0937                     l6663:	
  4221  0937  01C9               	clrf	___ftadd@sign
  4222  0938  0840               	movf	___ftadd@f1,w
  4223  0939  07C3               	addwf	___ftadd@f2,f
  4224  093A  0841               	movf	___ftadd@f1+1,w
  4225  093B  1103               	clrz
  4226  093C  1803               	skipnc
  4227  093D  0A41               	incf	___ftadd@f1+1,w
  4228  093E  1D03               	btfss	3,2
  4229  093F  07C4               	addwf	___ftadd@f2+1,f
  4230  0940  0842               	movf	___ftadd@f1+2,w
  4231  0941  1103               	clrz
  4232  0942  1803               	skipnc
  4233  0943  0A42               	incf	___ftadd@f1+2,w
  4234  0944  1D03               	btfss	3,2
  4235  0945  07C5               	addwf	___ftadd@f2+2,f
  4236  0946  1FC5               	btfss	___ftadd@f2+2,7
  4237  0947  2953               	goto	l6675
  4238  0948  30FF               	movlw	255
  4239  0949  06C3               	xorwf	___ftadd@f2,f
  4240  094A  06C4               	xorwf	___ftadd@f2+1,f
  4241  094B  06C5               	xorwf	___ftadd@f2+2,f
  4242  094C  0AC3               	incf	___ftadd@f2,f
  4243  094D  1903               	skipnz
  4244  094E  0AC4               	incf	___ftadd@f2+1,f
  4245  094F  1903               	skipnz
  4246  0950  0AC5               	incf	___ftadd@f2+2,f
  4247  0951  01C9               	clrf	___ftadd@sign
  4248  0952  0AC9               	incf	___ftadd@sign,f
  4249  0953                     l6675:	
  4250  0953  0843               	movf	___ftadd@f2,w
  4251  0954  00F2               	movwf	?___ftpack
  4252  0955  0844               	movf	___ftadd@f2+1,w
  4253  0956  00F3               	movwf	?___ftpack+1
  4254  0957  0845               	movf	___ftadd@f2+2,w
  4255  0958  00F4               	movwf	?___ftpack+2
  4256  0959  084B               	movf	___ftadd@exp1,w
  4257  095A  00F5               	movwf	?___ftpack+3
  4258  095B  0849               	movf	___ftadd@sign,w
  4259  095C  00F6               	movwf	?___ftpack+4
  4260  095D  120A  158A  2769   	fcall	___ftpack
  4261  0960  0872               	movf	?___ftpack,w
  4262  0961  00C0               	movwf	?___ftadd
  4263  0962  0873               	movf	?___ftpack+1,w
  4264  0963  00C1               	movwf	?___ftadd+1
  4265  0964  0874               	movf	?___ftpack+2,w
  4266  0965  00C2               	movwf	?___ftadd+2
  4267  0966  0008               	return
  4268  0967                     __end_of___ftadd:	
  4269                           
  4270                           	psect	text536
  4271  0967                     __ptext536:	
  4272 ;; =============== function _scale ends ============
  4273                           
  4274                           
  4275 ;; *************** function _fround *****************
  4276 ;; Defined at:
  4277 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;  prec            1    wreg     unsigned char 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  prec            1   53[BANK0 ] unsigned char 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  3   44[BANK0 ] unsigned char 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 60/20
  4288 ;;		On exit  : 60/0
  4289 ;;		Unchanged: FFF9F/0
  4290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4291 ;;      Params:         0       3       0       0       0
  4292 ;;      Locals:         0       7       0       0       0
  4293 ;;      Temps:          0       0       0       0       0
  4294 ;;      Totals:         0      10       0       0       0
  4295 ;;Total ram usage:       10 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    3
  4298 ;; This function calls:
  4299 ;;		___lbmod
  4300 ;;		___bmul
  4301 ;;		___lbdiv
  4302 ;;		___ftmul
  4303 ;; This function is called by:
  4304 ;;		_printf
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307  0967                     _fround:	
  4308                           
  4309                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4310                           ;fround@prec stored from wreg
  4311  0967  1283               	bcf	3,5	;RP0=0, select bank0
  4312  0968  00D5               	movwf	fround@prec
  4313  0969  306E               	movlw	110
  4314  096A  0255               	subwf	fround@prec,w
  4315  096B  1C03               	skipc
  4316  096C  29F2               	goto	l6821
  4317  096D  3003               	movlw	3
  4318  096E  00FB               	movwf	?___bmul
  4319  096F  300A               	movlw	10
  4320  0970  00F7               	movwf	?___lbdiv
  4321  0971  3064               	movlw	100
  4322  0972  00F2               	movwf	?___lbmod
  4323  0973  0855               	movf	fround@prec,w
  4324  0974  2287  120A  158A   	fcall	___lbmod
  4325  0977  226C               	fcall	___lbdiv
  4326  0978  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4327  097D  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4328  097E  0084               	movwf	4
  4329  097F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4330  0984  00B1               	movwf	?___ftmul
  4331  0985  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4332  098A  00B2               	movwf	?___ftmul+1
  4333  098B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4334  0990  00B3               	movwf	?___ftmul+2
  4335  0991  3003               	movlw	3
  4336  0992  00FB               	movwf	?___bmul
  4337  0993  3064               	movlw	100
  4338  0994  00F7               	movwf	?___lbdiv
  4339  0995  0855               	movf	fround@prec,w
  4340  0996  226C               	fcall	___lbdiv
  4341  0997  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4342  099C  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4343  099D  0084               	movwf	4
  4344  099E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4345  09A3  00B4               	movwf	?___ftmul+3
  4346  09A4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4347  09A9  00B5               	movwf	?___ftmul+4
  4348  09AA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4349  09AF  00B6               	movwf	?___ftmul+5
  4350  09B0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4351  09B5  22B2  120A  158A   	fcall	PL29	;call to abstracted procedure
  4352  09B8  3003               	movlw	3
  4353  09B9  00FB               	movwf	?___bmul
  4354  09BA  300A               	movlw	10
  4355  09BB  00F2               	movwf	?___lbmod
  4356  09BC  0855               	movf	fround@prec,w
  4357  09BD  2287               	fcall	___lbmod
  4358  09BE  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4359  09C3  3E01               	addlw	low (__npowers_-__stringbase)
  4360  09C4  0084               	movwf	4
  4361  09C5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4362  09CA  00B1               	movwf	?___ftmul
  4363  09CB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4364  09D0  00B2               	movwf	?___ftmul+1
  4365  09D1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4366  09D6  22AA               	fcall	PL23	;call to abstracted procedure
  4367  09D7  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4368  09DC  0831               	movf	?___ftmul,w
  4369  09DD  00CF               	movwf	_fround$4123
  4370  09DE  0832               	movf	?___ftmul+1,w
  4371  09DF  00D0               	movwf	_fround$4123+1
  4372  09E0  0833               	movf	?___ftmul+2,w
  4373  09E1  00D1               	movwf	_fround$4123+2
  4374  09E2  303F               	movlw	63
  4375  09E3  01B1               	clrf	?___ftmul
  4376  09E4  01B2               	clrf	?___ftmul+1
  4377  09E5  00B3               	movwf	?___ftmul+2
  4378  09E6  084F               	movf	_fround$4123,w
  4379  09E7  00B4               	movwf	?___ftmul+3
  4380  09E8  0850               	movf	_fround$4123+1,w
  4381  09E9  00B5               	movwf	?___ftmul+4
  4382  09EA  0851               	movf	_fround$4123+2,w
  4383  09EB  00B6               	movwf	?___ftmul+5
  4384  09EC  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4385  09F1  2AA3               	ljmp	PL17	;call to abstracted procedure
  4386  09F2                     l6821:	
  4387  09F2  300B               	movlw	11
  4388  09F3  0255               	subwf	fround@prec,w
  4389  09F4  1C03               	skipc
  4390  09F5  2A46               	goto	l6829
  4391  09F6  3003               	movlw	3
  4392  09F7  00FB               	movwf	?___bmul
  4393  09F8  300A               	movlw	10
  4394  09F9  00F2               	movwf	?___lbmod
  4395  09FA  0855               	movf	fround@prec,w
  4396  09FB  2287               	fcall	___lbmod
  4397  09FC  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4398  0A01  3E01               	addlw	low (__npowers_-__stringbase)
  4399  0A02  0084               	movwf	4
  4400  0A03  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4401  0A08  00B1               	movwf	?___ftmul
  4402  0A09  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4403  0A0E  00B2               	movwf	?___ftmul+1
  4404  0A0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4405  0A14  00B3               	movwf	?___ftmul+2
  4406  0A15  3003               	movlw	3
  4407  0A16  00FB               	movwf	?___bmul
  4408  0A17  300A               	movlw	10
  4409  0A18  00F7               	movwf	?___lbdiv
  4410  0A19  0855               	movf	fround@prec,w
  4411  0A1A  226C               	fcall	___lbdiv
  4412  0A1B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4413  0A20  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4414  0A21  0084               	movwf	4
  4415  0A22  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4416  0A27  00B4               	movwf	?___ftmul+3
  4417  0A28  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4418  0A2D  00B5               	movwf	?___ftmul+4
  4419  0A2E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4420  0A33  00B6               	movwf	?___ftmul+5
  4421  0A34  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4422  0A39  22B2  120A  158A   	fcall	PL29	;call to abstracted procedure
  4423  0A3C  303F               	movlw	63
  4424  0A3D  01B1               	clrf	?___ftmul
  4425  0A3E  01B2               	clrf	?___ftmul+1
  4426  0A3F  22AA               	fcall	PL23	;call to abstracted procedure
  4427  0A40  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4428  0A45  2AA3               	ljmp	PL17	;call to abstracted procedure
  4429  0A46                     l6829:	
  4430  0A46  303F               	movlw	63
  4431  0A47  01B1               	clrf	?___ftmul
  4432  0A48  01B2               	clrf	?___ftmul+1
  4433  0A49  00B3               	movwf	?___ftmul+2
  4434  0A4A  3003               	movlw	3
  4435  0A4B  00FB               	movwf	?___bmul
  4436  0A4C  0855               	movf	fround@prec,w
  4437  0A4D  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4438  0A52  3E01               	addlw	low (__npowers_-__stringbase)
  4439  0A53  0084               	movwf	4
  4440  0A54  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4441  0A59  00B4               	movwf	?___ftmul+3
  4442  0A5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4443  0A5F  00B5               	movwf	?___ftmul+4
  4444  0A60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4445  0A65  00B6               	movwf	?___ftmul+5
  4446  0A66  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4447  0A6B  2AA3               	ljmp	PL17	;call to abstracted procedure
  4448  0A6C                     __end_of_fround:	
  4449  0A6C                     __ptext554:	
  4450 ;; =============== function ___lbmod ends ============
  4451                           
  4452                           
  4453 ;; *************** function ___lbdiv *****************
  4454 ;; Defined at:
  4455 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  dividend        1    wreg     unsigned char 
  4458 ;;  divisor         1    7[COMMON] unsigned char 
  4459 ;; Auto vars:     Size  Location     Type
  4460 ;;  dividend        1    8[COMMON] unsigned char 
  4461 ;;  quotient        1   10[COMMON] unsigned char 
  4462 ;;  counter         1    9[COMMON] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      unsigned char 
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 60/0
  4469 ;;		On exit  : 60/0
  4470 ;;		Unchanged: FFF9F/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4472 ;;      Params:         1       0       0       0       0
  4473 ;;      Locals:         3       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0
  4475 ;;      Totals:         4       0       0       0       0
  4476 ;;Total ram usage:        4 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_fround
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485  0A6C                     ___lbdiv:	
  4486                           
  4487                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4488                           ;___lbdiv@dividend stored from wreg
  4489  0A6C  00F8               	movwf	___lbdiv@dividend
  4490  0A6D  01FA               	clrf	___lbdiv@quotient
  4491  0A6E  0877               	movf	___lbdiv@divisor,w
  4492  0A6F  1903               	btfsc	3,2
  4493  0A70  2A85               	goto	l6309
  4494  0A71  01F9               	clrf	___lbdiv@counter
  4495  0A72                     l6295:	
  4496  0A72  0AF9               	incf	___lbdiv@counter,f
  4497  0A73  1BF7               	btfsc	___lbdiv@divisor,7
  4498  0A74  2A78               	goto	l3345
  4499  0A75  1003               	clrc
  4500  0A76  0DF7               	rlf	___lbdiv@divisor,f
  4501  0A77  2A72               	goto	l6295
  4502  0A78                     l3345:	
  4503  0A78  1003               	clrc
  4504  0A79  0DFA               	rlf	___lbdiv@quotient,f
  4505  0A7A  0877               	movf	___lbdiv@divisor,w
  4506  0A7B  0278               	subwf	___lbdiv@dividend,w
  4507  0A7C  1C03               	skipc
  4508  0A7D  2A82               	goto	L18
  4509  0A7E  0877               	movf	___lbdiv@divisor,w
  4510  0A7F  02F8               	subwf	___lbdiv@dividend,f
  4511  0A80  147A               	bsf	___lbdiv@quotient,0
  4512  0A81  1003               	clrc
  4513  0A82                     L18:	
  4514  0A82  0CF7               	rrf	___lbdiv@divisor,f
  4515  0A83  0BF9               	decfsz	___lbdiv@counter,f
  4516  0A84  2A78               	goto	l3345
  4517  0A85                     l6309:	
  4518  0A85  087A               	movf	___lbdiv@quotient,w
  4519  0A86  0008               	return
  4520  0A87                     __end_of___lbdiv:	
  4521  0A87                     __ptext553:	
  4522 ;; =============== function ___ftpack ends ============
  4523                           
  4524                           
  4525 ;; *************** function ___lbmod *****************
  4526 ;; Defined at:
  4527 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  dividend        1    wreg     unsigned char 
  4530 ;;  divisor         1    2[COMMON] unsigned char 
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;  dividend        1    4[COMMON] unsigned char 
  4533 ;;  rem             1    6[COMMON] unsigned char 
  4534 ;;  counter         1    5[COMMON] unsigned char 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      unsigned char 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 60/0
  4541 ;;		On exit  : 60/0
  4542 ;;		Unchanged: FFF9F/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4544 ;;      Params:         1       0       0       0       0
  4545 ;;      Locals:         3       0       0       0       0
  4546 ;;      Temps:          1       0       0       0       0
  4547 ;;      Totals:         5       0       0       0       0
  4548 ;;Total ram usage:        5 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_fround
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557  0A87                     ___lbmod:	
  4558                           
  4559                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4560                           ;___lbmod@dividend stored from wreg
  4561  0A87  00F4               	movwf	___lbmod@dividend
  4562  0A88  3008               	movlw	8
  4563  0A89  00F5               	movwf	___lbmod@counter
  4564  0A8A  01F6               	clrf	___lbmod@rem
  4565  0A8B                     l6317:	
  4566  0A8B  0874               	movf	___lbmod@dividend,w
  4567  0A8C  00F3               	movwf	??___lbmod
  4568  0A8D  3007               	movlw	7
  4569  0A8E  1003               	clrc
  4570  0A8F                     L17:	
  4571  0A8F  0CF3               	rrf	??___lbmod,f
  4572  0A90  3EFF               	addlw	-1
  4573  0A91  1003               	clrc
  4574  0A92  1D03               	skipz
  4575  0A93  2A8F               	goto	L17
  4576  0A94  0D76               	rlf	___lbmod@rem,w
  4577  0A95  0473               	iorwf	??___lbmod,w
  4578  0A96  00F6               	movwf	___lbmod@rem
  4579  0A97  1003               	clrc
  4580  0A98  0DF4               	rlf	___lbmod@dividend,f
  4581  0A99  0872               	movf	___lbmod@divisor,w
  4582  0A9A  0276               	subwf	___lbmod@rem,w
  4583  0A9B  1C03               	skipc
  4584  0A9C  2A9F               	goto	l6325
  4585  0A9D  0872               	movf	___lbmod@divisor,w
  4586  0A9E  02F6               	subwf	___lbmod@rem,f
  4587  0A9F                     l6325:	
  4588  0A9F  0BF5               	decfsz	___lbmod@counter,f
  4589  0AA0  2A8B               	goto	l6317
  4590  0AA1  0876               	movf	___lbmod@rem,w
  4591  0AA2  0008               	return
  4592  0AA3                     __end_of___lbmod:	
  4593  0AA3                     PL17:	
  4594  0AA3  0831               	movf	?___ftmul,w
  4595  0AA4  00CC               	movwf	?_fround
  4596  0AA5  0832               	movf	?___ftmul+1,w
  4597  0AA6  00CD               	movwf	?_fround+1
  4598  0AA7  0833               	movf	?___ftmul+2,w
  4599  0AA8  00CE               	movwf	?_fround+2
  4600  0AA9  0008               	return
  4601  0AAA                     PL23:	
  4602  0AAA  00B3               	movwf	?___ftmul+2
  4603  0AAB  0852               	movf	_fround$4122,w
  4604  0AAC  00B4               	movwf	?___ftmul+3
  4605  0AAD  0853               	movf	_fround$4122+1,w
  4606  0AAE  00B5               	movwf	?___ftmul+4
  4607  0AAF  0854               	movf	_fround$4122+2,w
  4608  0AB0  00B6               	movwf	?___ftmul+5
  4609  0AB1  0008               	return
  4610  0AB2                     PL29:	
  4611  0AB2  0831               	movf	?___ftmul,w
  4612  0AB3  00D2               	movwf	_fround$4122
  4613  0AB4  0832               	movf	?___ftmul+1,w
  4614  0AB5  00D3               	movwf	_fround$4122+1
  4615  0AB6  0833               	movf	?___ftmul+2,w
  4616  0AB7  00D4               	movwf	_fround$4122+2
  4617  0AB8  0008               	return
  4618                           
  4619                           	psect	text537
  4620  0AB9                     __ptext537:	
  4621 ;; =============== function _fround ends ============
  4622                           
  4623                           
  4624 ;; *************** function _lcd_gotoxy *****************
  4625 ;; Defined at:
  4626 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;  col             1    wreg     unsigned char 
  4629 ;;  row             1    7[COMMON] unsigned char 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  col             1    8[COMMON] unsigned char 
  4632 ;;  address         1    9[COMMON] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;		None               void
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0, pclath, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 60/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         1       0       0       0       0
  4643 ;;      Locals:         2       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0
  4645 ;;      Totals:         3       0       0       0       0
  4646 ;;Total ram usage:        3 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    2
  4649 ;; This function calls:
  4650 ;;		_lcd_put_byte
  4651 ;;		_lcd_busy
  4652 ;; This function is called by:
  4653 ;;		_main
  4654 ;;		_lcd_putc
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657  0AB9                     _lcd_gotoxy:	
  4658                           
  4659                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4660                           ;lcd_gotoxy@col stored from wreg
  4661  0AB9  00F8               	movwf	lcd_gotoxy@col
  4662                           
  4663                           ;lcd(16).c: 163: unsigned char address;
  4664                           ;lcd(16).c: 165: if(row!=0)
  4665  0ABA  0877               	movf	lcd_gotoxy@row,w
  4666  0ABB  1903               	btfsc	3,2
  4667  0ABC  2AC0               	goto	l6803
  4668                           
  4669                           ;lcd(16).c: 166: address=0x40;
  4670  0ABD  3040               	movlw	64
  4671  0ABE  00F9               	movwf	lcd_gotoxy@address
  4672  0ABF  2AC1               	goto	l6805
  4673  0AC0                     l6803:	
  4674                           
  4675                           ;lcd(16).c: 167: else
  4676                           ;lcd(16).c: 168: address=0;
  4677  0AC0  01F9               	clrf	lcd_gotoxy@address
  4678  0AC1                     l6805:	
  4679                           
  4680                           ;lcd(16).c: 170: address += col;
  4681  0AC1  0878               	movf	lcd_gotoxy@col,w
  4682  0AC2  07F9               	addwf	lcd_gotoxy@address,f
  4683                           
  4684                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4685  0AC3  0879               	movf	lcd_gotoxy@address,w
  4686  0AC4  3880               	iorlw	128
  4687  0AC5  00F2               	movwf	?_lcd_put_byte
  4688  0AC6  3000               	movlw	0
  4689  0AC7  23BB  120A  158A   	fcall	_lcd_put_byte
  4690  0ACA                     l6809:	
  4691                           ;lcd(16).c: 172: while(lcd_busy());
  4692                           
  4693  0ACA  244B  120A  158A   	fcall	_lcd_busy
  4694  0ACD  3800               	iorlw	0
  4695  0ACE  1903               	btfsc	3,2
  4696  0ACF  0008               	return
  4697  0AD0  2ACA               	goto	l6809
  4698  0AD1                     __end_of_lcd_gotoxy:	
  4699  0AD1                     __ptext533:	
  4700 ;; =============== function _putch ends ============
  4701                           
  4702                           
  4703 ;; *************** function _lcd_putc *****************
  4704 ;; Defined at:
  4705 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;  c               1    wreg     unsigned char 
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;  c               1   10[COMMON] unsigned char 
  4710 ;; Return value:  Size  Location     Type
  4711 ;;		None               void
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/20
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       0       0       0       0
  4720 ;;      Locals:         1       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0
  4722 ;;      Totals:         1       0       0       0       0
  4723 ;;Total ram usage:        1 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    3
  4726 ;; This function calls:
  4727 ;;		_lcd_put_byte
  4728 ;;		_lcd_busy
  4729 ;;		_lcd_gotoxy
  4730 ;;		_isprint
  4731 ;; This function is called by:
  4732 ;;		_putch
  4733 ;; This function uses a non-reentrant model
  4734 ;;
  4735  0AD1                     _lcd_putc:	
  4736                           
  4737                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4738                           ;lcd_putc@c stored from wreg
  4739  0AD1  00FA               	movwf	lcd_putc@c
  4740                           
  4741                           ;lcd(16).c: 144: switch(c){
  4742  0AD2  2AF7               	goto	l6895
  4743  0AD3                     l6881:	
  4744  0AD3  3000               	movlw	0
  4745                           
  4746                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4747  0AD4  01F2               	clrf	?_lcd_put_byte
  4748  0AD5  0AF2               	incf	?_lcd_put_byte,f
  4749  0AD6  23BB  120A  158A   	fcall	_lcd_put_byte
  4750  0AD9                     l6883:	
  4751                           ;lcd(16).c: 147: while(lcd_busy());
  4752                           
  4753  0AD9  244B  120A  158A   	fcall	_lcd_busy
  4754  0ADC  3800               	iorlw	0
  4755  0ADD  1903               	btfsc	3,2
  4756  0ADE  0008               	return
  4757  0ADF  2AD9               	goto	l6883
  4758  0AE0                     l6885:	
  4759  0AE0  3000               	movlw	0
  4760                           
  4761                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4762  0AE1  01F7               	clrf	?_lcd_gotoxy
  4763  0AE2  0AF7               	incf	?_lcd_gotoxy,f
  4764  0AE3  2AB9               	ljmp	_lcd_gotoxy
  4765  0AE4                     l6887:	
  4766                           ;lcd(16).c: 151: break;
  4767                           
  4768                           
  4769                           ;lcd(16).c: 153: if(isprint(c)){
  4770  0AE4  087A               	movf	lcd_putc@c,w
  4771  0AE5  2472  120A  158A   	fcall	_isprint
  4772  0AE8  1C03               	btfss	3,0
  4773  0AE9  0008               	return
  4774                           
  4775                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4776  0AEA  087A               	movf	lcd_putc@c,w
  4777  0AEB  00F2               	movwf	?_lcd_put_byte
  4778  0AEC  3001               	movlw	1
  4779  0AED  23BB  120A  158A   	fcall	_lcd_put_byte
  4780  0AF0                     l6891:	
  4781                           ;lcd(16).c: 155: while(lcd_busy());
  4782                           
  4783  0AF0  244B  120A  158A   	fcall	_lcd_busy
  4784  0AF3  3800               	iorlw	0
  4785  0AF4  1903               	btfsc	3,2
  4786  0AF5  0008               	return
  4787  0AF6  2AF0               	goto	l6891
  4788  0AF7                     l6895:	
  4789  0AF7  087A               	movf	lcd_putc@c,w
  4790                           
  4791                           ; Switch size 1, requested type "space"
  4792                           ; Number of cases is 2, Range of values is 10 to 12
  4793                           ; switch strategies available:
  4794                           ; Name         Instructions Cycles
  4795                           ; simple_byte            7     4 (average)
  4796                           ; direct_byte           20    11 (fixed)
  4797                           ; jumptable            263     9 (fixed)
  4798                           ;	Chosen strategy is simple_byte
  4799  0AF8  3A0A               	xorlw	10	; case 10
  4800  0AF9  1903               	skipnz
  4801  0AFA  2AE0               	goto	l6885
  4802  0AFB  3A06               	xorlw	6	; case 12
  4803  0AFC  1903               	skipnz
  4804  0AFD  2AD3               	goto	l6881
  4805  0AFE  2AE4               	goto	l6887
  4806  0AFF  0008               	return
  4807  0B00                     __end_of_lcd_putc:	
  4808  0B00                     __ptext538:	
  4809 ;; =============== function _lcd_gotoxy ends ============
  4810                           
  4811                           
  4812 ;; *************** function _lcd_init *****************
  4813 ;; Defined at:
  4814 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;  i               1    0        unsigned char 
  4819 ;; Return value:  Size  Location     Type
  4820 ;;		None               void
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0, pclath, cstack
  4823 ;; Tracked objects:
  4824 ;;		On entry : 17F/60
  4825 ;;		On exit  : 60/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4828 ;;      Params:         0       0       0       0       0
  4829 ;;      Locals:         0       0       0       0       0
  4830 ;;      Temps:          3       0       0       0       0
  4831 ;;      Totals:         3       0       0       0       0
  4832 ;;Total ram usage:        3 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    2
  4835 ;; This function calls:
  4836 ;;		_lcd_put_byte
  4837 ;;		_lcd_busy
  4838 ;; This function is called by:
  4839 ;;		_main
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842  0B00                     _lcd_init:	
  4843                           
  4844                           ;lcd(16).c: 6: unsigned char i;
  4845                           ;lcd(16).c: 7: TRISD3 = 0;
  4846                           
  4847                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4848  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  4849  0B01  1188               	bcf	8,3
  4850                           
  4851                           ;lcd(16).c: 8: TRISD1 = 0;
  4852  0B02  1088               	bcf	8,1
  4853                           
  4854                           ;lcd(16).c: 9: TRISD2 = 0;
  4855  0B03  1108               	bcf	8,2
  4856                           
  4857                           ;lcd(16).c: 10: TRISD4 = 0;
  4858  0B04  1208               	bcf	8,4
  4859                           
  4860                           ;lcd(16).c: 11: TRISD5 = 0;
  4861  0B05  1288               	bcf	8,5
  4862                           
  4863                           ;lcd(16).c: 12: TRISD6 = 0;
  4864  0B06  1308               	bcf	8,6
  4865                           
  4866                           ;lcd(16).c: 13: TRISD7 = 0;
  4867  0B07  1388               	bcf	8,7
  4868                           
  4869                           ;lcd(16).c: 14: RD3 = 0;
  4870  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  4871  0B09  3003               	movlw	3
  4872  0B0A  1188               	bcf	8,3
  4873                           
  4874                           ;lcd(16).c: 15: RD1 = 0;
  4875  0B0B  1088               	bcf	8,1
  4876                           
  4877                           ;lcd(16).c: 16: RD2 = 0;
  4878  0B0C  1108               	bcf	8,2
  4879                           
  4880                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4881  0B0D  00F9               	movwf	??_lcd_init+2
  4882  0B0E  308A               	movlw	138
  4883  0B0F  00F8               	movwf	??_lcd_init+1
  4884  0B10  3056               	movlw	86
  4885  0B11  00F7               	movwf	??_lcd_init
  4886  0B12                     u3977:	
  4887  0B12  0BF7               	decfsz	??_lcd_init,f
  4888  0B13  2B12               	goto	u3977
  4889  0B14  0BF8               	decfsz	??_lcd_init+1,f
  4890  0B15  2B12               	goto	u3977
  4891  0B16  0BF9               	decfsz	??_lcd_init+2,f
  4892  0B17  2B12               	goto	u3977
  4893  0B18  2B19               	nop2
  4894                           
  4895                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4896  0B19  3030               	movlw	48
  4897  0B1A  00F2               	movwf	?_lcd_put_byte
  4898  0B1B  3000               	movlw	0
  4899  0B1C  23BB  120A  158A   	fcall	_lcd_put_byte
  4900                           
  4901                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4902  0B1F  3002               	movlw	2
  4903  0B20  00F9               	movwf	??_lcd_init+2
  4904  0B21  3045               	movlw	69
  4905  0B22  00F8               	movwf	??_lcd_init+1
  4906  0B23  30A9               	movlw	169
  4907  0B24  00F7               	movwf	??_lcd_init
  4908  0B25                     u3987:	
  4909  0B25  0BF7               	decfsz	??_lcd_init,f
  4910  0B26  2B25               	goto	u3987
  4911  0B27  0BF8               	decfsz	??_lcd_init+1,f
  4912  0B28  2B25               	goto	u3987
  4913  0B29  0BF9               	decfsz	??_lcd_init+2,f
  4914  0B2A  2B25               	goto	u3987
  4915  0B2B  2B2C               	nop2
  4916                           
  4917                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4918  0B2C  3030               	movlw	48
  4919  0B2D  00F2               	movwf	?_lcd_put_byte
  4920  0B2E  3000               	movlw	0
  4921  0B2F  23BB  120A  158A   	fcall	_lcd_put_byte
  4922                           
  4923                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4924  0B32  3002               	movlw	2
  4925  0B33  00F9               	movwf	??_lcd_init+2
  4926  0B34  3045               	movlw	69
  4927  0B35  00F8               	movwf	??_lcd_init+1
  4928  0B36  30A9               	movlw	169
  4929  0B37  00F7               	movwf	??_lcd_init
  4930  0B38                     u3997:	
  4931  0B38  0BF7               	decfsz	??_lcd_init,f
  4932  0B39  2B38               	goto	u3997
  4933  0B3A  0BF8               	decfsz	??_lcd_init+1,f
  4934  0B3B  2B38               	goto	u3997
  4935  0B3C  0BF9               	decfsz	??_lcd_init+2,f
  4936  0B3D  2B38               	goto	u3997
  4937  0B3E  2B3F               	nop2
  4938                           
  4939                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4940  0B3F  3032               	movlw	50
  4941  0B40  00F2               	movwf	?_lcd_put_byte
  4942  0B41  3000               	movlw	0
  4943  0B42  23BB  120A  158A   	fcall	_lcd_put_byte
  4944                           
  4945                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4946  0B45  3003               	movlw	3
  4947  0B46  00F9               	movwf	??_lcd_init+2
  4948  0B47  308A               	movlw	138
  4949  0B48  00F8               	movwf	??_lcd_init+1
  4950  0B49  3056               	movlw	86
  4951  0B4A  00F7               	movwf	??_lcd_init
  4952  0B4B                     u4007:	
  4953  0B4B  0BF7               	decfsz	??_lcd_init,f
  4954  0B4C  2B4B               	goto	u4007
  4955  0B4D  0BF8               	decfsz	??_lcd_init+1,f
  4956  0B4E  2B4B               	goto	u4007
  4957  0B4F  0BF9               	decfsz	??_lcd_init+2,f
  4958  0B50  2B4B               	goto	u4007
  4959  0B51  2B52               	nop2
  4960                           
  4961                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4962  0B52  3003               	movlw	3
  4963  0B53  00F9               	movwf	??_lcd_init+2
  4964  0B54  308A               	movlw	138
  4965  0B55  00F8               	movwf	??_lcd_init+1
  4966  0B56  3056               	movlw	86
  4967  0B57  00F7               	movwf	??_lcd_init
  4968  0B58                     u4017:	
  4969  0B58  0BF7               	decfsz	??_lcd_init,f
  4970  0B59  2B58               	goto	u4017
  4971  0B5A  0BF8               	decfsz	??_lcd_init+1,f
  4972  0B5B  2B58               	goto	u4017
  4973  0B5C  0BF9               	decfsz	??_lcd_init+2,f
  4974  0B5D  2B58               	goto	u4017
  4975  0B5E  2B5F               	nop2
  4976                           
  4977                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4978  0B5F  3003               	movlw	3
  4979  0B60  00F9               	movwf	??_lcd_init+2
  4980  0B61  308A               	movlw	138
  4981  0B62  00F8               	movwf	??_lcd_init+1
  4982  0B63  3056               	movlw	86
  4983  0B64  00F7               	movwf	??_lcd_init
  4984  0B65                     u4027:	
  4985  0B65  0BF7               	decfsz	??_lcd_init,f
  4986  0B66  2B65               	goto	u4027
  4987  0B67  0BF8               	decfsz	??_lcd_init+1,f
  4988  0B68  2B65               	goto	u4027
  4989  0B69  0BF9               	decfsz	??_lcd_init+2,f
  4990  0B6A  2B65               	goto	u4027
  4991  0B6B  2B6C               	nop2
  4992  0B6C                     l6773:	
  4993                           ;lcd(16).c: 30: while(lcd_busy());
  4994                           
  4995  0B6C  244B  120A  158A   	fcall	_lcd_busy
  4996  0B6F  3800               	iorlw	0
  4997  0B70  1D03               	skipz
  4998  0B71  2B6C               	goto	l6773
  4999                           
  5000                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5001  0B72  3028               	movlw	40
  5002  0B73  00F2               	movwf	?_lcd_put_byte
  5003  0B74  3000               	movlw	0
  5004  0B75  23BB  120A  158A   	fcall	_lcd_put_byte
  5005  0B78                     l6777:	
  5006                           ;lcd(16).c: 32: while(lcd_busy());
  5007                           
  5008  0B78  244B  120A  158A   	fcall	_lcd_busy
  5009  0B7B  3800               	iorlw	0
  5010  0B7C  1D03               	skipz
  5011  0B7D  2B78               	goto	l6777
  5012                           
  5013                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5014  0B7E  3008               	movlw	8
  5015  0B7F  00F2               	movwf	?_lcd_put_byte
  5016  0B80  3000               	movlw	0
  5017  0B81  23BB  120A  158A   	fcall	_lcd_put_byte
  5018  0B84                     l6781:	
  5019                           ;lcd(16).c: 35: while(lcd_busy());
  5020                           
  5021  0B84  244B  120A  158A   	fcall	_lcd_busy
  5022  0B87  3800               	iorlw	0
  5023  0B88  1D03               	skipz
  5024  0B89  2B84               	goto	l6781
  5025                           
  5026                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5027  0B8A  300C               	movlw	12
  5028  0B8B  00F2               	movwf	?_lcd_put_byte
  5029  0B8C  3000               	movlw	0
  5030  0B8D  23BB  120A  158A   	fcall	_lcd_put_byte
  5031  0B90                     l6785:	
  5032                           ;lcd(16).c: 37: while(lcd_busy());
  5033                           
  5034  0B90  244B  120A  158A   	fcall	_lcd_busy
  5035  0B93  3800               	iorlw	0
  5036  0B94  1D03               	skipz
  5037  0B95  2B90               	goto	l6785
  5038  0B96  3000               	movlw	0
  5039                           
  5040                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5041  0B97  01F2               	clrf	?_lcd_put_byte
  5042  0B98  0AF2               	incf	?_lcd_put_byte,f
  5043  0B99  23BB  120A  158A   	fcall	_lcd_put_byte
  5044  0B9C                     l6789:	
  5045                           ;lcd(16).c: 40: while(lcd_busy());
  5046                           
  5047  0B9C  244B  120A  158A   	fcall	_lcd_busy
  5048  0B9F  3800               	iorlw	0
  5049  0BA0  1D03               	skipz
  5050  0BA1  2B9C               	goto	l6789
  5051                           
  5052                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5053  0BA2  3004               	movlw	4
  5054  0BA3  00F2               	movwf	?_lcd_put_byte
  5055  0BA4  3000               	movlw	0
  5056  0BA5  23BB  120A  158A   	fcall	_lcd_put_byte
  5057  0BA8                     l6793:	
  5058                           ;lcd(16).c: 42: while(lcd_busy());
  5059                           
  5060  0BA8  244B  120A  158A   	fcall	_lcd_busy
  5061  0BAB  3800               	iorlw	0
  5062  0BAC  1D03               	skipz
  5063  0BAD  2BA8               	goto	l6793
  5064  0BAE  3000               	movlw	0
  5065                           
  5066                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5067  0BAF  01F2               	clrf	?_lcd_put_byte
  5068  0BB0  0AF2               	incf	?_lcd_put_byte,f
  5069  0BB1  23BB  120A  158A   	fcall	_lcd_put_byte
  5070  0BB4                     l6797:	
  5071                           ;lcd(16).c: 44: while(lcd_busy());
  5072                           
  5073  0BB4  244B  120A  158A   	fcall	_lcd_busy
  5074  0BB7  3800               	iorlw	0
  5075  0BB8  1903               	btfsc	3,2
  5076  0BB9  0008               	return
  5077  0BBA  2BB4               	goto	l6797
  5078  0BBB                     __end_of_lcd_init:	
  5079  0BBB                     __ptext544:	
  5080 ;; =============== function _lcd_busy ends ============
  5081                           
  5082                           
  5083 ;; *************** function _lcd_put_byte *****************
  5084 ;; Defined at:
  5085 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  rs              1    wreg     unsigned char 
  5088 ;;  b               1    2[COMMON] unsigned char 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  rs              1    5[COMMON] unsigned char 
  5091 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  5092 ;; Return value:  Size  Location     Type
  5093 ;;		None               void
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/20
  5098 ;;		On exit  : 60/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5101 ;;      Params:         1       0       0       0       0
  5102 ;;      Locals:         2       0       0       0       0
  5103 ;;      Temps:          2       0       0       0       0
  5104 ;;      Totals:         5       0       0       0       0
  5105 ;;Total ram usage:        5 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_lcd_init
  5112 ;;		_lcd_putc
  5113 ;;		_lcd_gotoxy
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116  0BBB                     _lcd_put_byte:	
  5117                           
  5118                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5119                           ;lcd_put_byte@rs stored from wreg
  5120  0BBB  00F5               	movwf	lcd_put_byte@rs
  5121                           
  5122                           ;lcd(16).c: 107: BYTE_VAL temp;
  5123                           ;lcd(16).c: 109: TRISD4 = 0;
  5124  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  5125  0BBD  1303               	bcf	3,6	;RP1=0, select bank1
  5126  0BBE  1208               	bcf	8,4
  5127                           
  5128                           ;lcd(16).c: 110: TRISD5 = 0;
  5129  0BBF  1288               	bcf	8,5
  5130                           
  5131                           ;lcd(16).c: 111: TRISD6 = 0;
  5132  0BC0  1308               	bcf	8,6
  5133                           
  5134                           ;lcd(16).c: 112: TRISD7 = 0;
  5135  0BC1  1388               	bcf	8,7
  5136                           
  5137                           ;lcd(16).c: 114: RD1 = 0;
  5138  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0BC3  1088               	bcf	8,1
  5140                           
  5141                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5142  0BC4  0875               	movf	lcd_put_byte@rs,w
  5143  0BC5  1D03               	skipz
  5144  0BC6  1488               	bsf	8,1
  5145                           
  5146                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5147  0BC7  3021               	movlw	33
  5148  0BC8  00F3               	movwf	??_lcd_put_byte
  5149  0BC9                     u4077:	
  5150  0BC9  0BF3               	decfsz	??_lcd_put_byte,f
  5151  0BCA  2BC9               	goto	u4077
  5152  0BCB  2487               	call	PL33	;select bank 0
  5153                           
  5154                           ;lcd(16).c: 118: RD2 = 0;
  5155  0BCC  3021               	movlw	33
  5156  0BCD  1108               	bcf	8,2
  5157                           
  5158                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5159  0BCE  00F3               	movwf	??_lcd_put_byte
  5160  0BCF                     u4087:	
  5161  0BCF  0BF3               	decfsz	??_lcd_put_byte,f
  5162  0BD0  2BCF               	goto	u4087
  5163  0BD1  2487               	call	PL33	;select bank 0
  5164                           
  5165                           ;lcd(16).c: 120: RD3 = 0;
  5166  0BD2  1188               	bcf	8,3
  5167                           
  5168                           ;lcd(16).c: 122: temp.Val = b;
  5169  0BD3  0872               	movf	lcd_put_byte@b,w
  5170  0BD4  00F6               	movwf	lcd_put_byte@temp
  5171                           
  5172                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5173  0BD5  0E76               	swapf	lcd_put_byte@temp,w
  5174  0BD6  3901               	andlw	1
  5175  0BD7  00F3               	movwf	??_lcd_put_byte
  5176  0BD8  0C73               	rrf	??_lcd_put_byte,w
  5177  0BD9  1C03               	btfss	3,0
  5178  0BDA  2BDE               	goto	u2760
  5179  0BDB  2487               	call	PL33	;select bank 0
  5180  0BDC  1608               	bsf	8,4
  5181  0BDD  2BE0               	goto	l6565
  5182  0BDE                     u2760:	
  5183  0BDE  2487               	call	PL33	;select bank 0
  5184  0BDF  1208               	bcf	8,4
  5185  0BE0                     l6565:	
  5186                           
  5187                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5188  0BE0  0E76               	swapf	lcd_put_byte@temp,w
  5189  0BE1  00F3               	movwf	??_lcd_put_byte
  5190  0BE2  0C73               	rrf	??_lcd_put_byte,w
  5191  0BE3  3901               	andlw	1
  5192  0BE4  00F4               	movwf	??_lcd_put_byte+1
  5193  0BE5  0C74               	rrf	??_lcd_put_byte+1,w
  5194  0BE6  1C03               	btfss	3,0
  5195  0BE7  2BEB               	goto	u2780
  5196  0BE8  2487               	call	PL33	;select bank 0
  5197  0BE9  1688               	bsf	8,5
  5198  0BEA  2BED               	goto	l6567
  5199  0BEB                     u2780:	
  5200  0BEB  2487               	call	PL33	;select bank 0
  5201  0BEC  1288               	bcf	8,5
  5202  0BED                     l6567:	
  5203                           
  5204                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5205  0BED  0E76               	swapf	lcd_put_byte@temp,w
  5206  0BEE  2480  120A  158A   	fcall	PL30	;call to abstracted procedure
  5207  0BF1  1C03               	btfss	3,0
  5208  0BF2  2BF6               	goto	u2800
  5209  0BF3  2487               	call	PL33	;select bank 0
  5210  0BF4  1708               	bsf	8,6
  5211  0BF5  2BF8               	goto	l6569
  5212  0BF6                     u2800:	
  5213  0BF6  2487               	call	PL33	;select bank 0
  5214  0BF7  1308               	bcf	8,6
  5215  0BF8                     l6569:	
  5216                           
  5217                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5218  0BF8  0D76               	rlf	lcd_put_byte@temp,w
  5219  0BF9  0D76               	rlf	lcd_put_byte@temp,w
  5220  0BFA  3901               	andlw	1
  5221  0BFB  00F3               	movwf	??_lcd_put_byte
  5222  0BFC  0C73               	rrf	??_lcd_put_byte,w
  5223  0BFD  1C03               	btfss	3,0
  5224  0BFE  2C02               	goto	u2820
  5225  0BFF  2487               	call	PL33	;select bank 0
  5226  0C00  1788               	bsf	8,7
  5227  0C01  2C04               	goto	u2834
  5228  0C02                     u2820:	
  5229  0C02  2487               	call	PL33	;select bank 0
  5230  0C03  1388               	bcf	8,7
  5231  0C04                     u2834:	
  5232                           
  5233                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5234  0C04  3021               	movlw	33
  5235  0C05  00F3               	movwf	??_lcd_put_byte
  5236  0C06                     u4097:	
  5237  0C06  0BF3               	decfsz	??_lcd_put_byte,f
  5238  0C07  2C06               	goto	u4097
  5239  0C08  2487               	call	PL33	;select bank 0
  5240                           
  5241                           ;lcd(16).c: 130: RD3 = 1;
  5242  0C09  3021               	movlw	33
  5243  0C0A  1588               	bsf	8,3
  5244                           
  5245                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5246  0C0B  00F3               	movwf	??_lcd_put_byte
  5247  0C0C                     u4107:	
  5248  0C0C  0BF3               	decfsz	??_lcd_put_byte,f
  5249  0C0D  2C0C               	goto	u4107
  5250  0C0E  2487               	call	PL33	;select bank 0
  5251                           
  5252                           ;lcd(16).c: 132: RD3 = 0;
  5253  0C0F  1188               	bcf	8,3
  5254                           
  5255                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5256  0C10  0876               	movf	lcd_put_byte@temp,w
  5257  0C11  3901               	andlw	1
  5258  0C12  00F3               	movwf	??_lcd_put_byte
  5259  0C13  0C73               	rrf	??_lcd_put_byte,w
  5260  0C14  1C03               	btfss	3,0
  5261  0C15  2C19               	goto	u2840
  5262  0C16  2487               	call	PL33	;select bank 0
  5263  0C17  1608               	bsf	8,4
  5264  0C18  2C1B               	goto	l6577
  5265  0C19                     u2840:	
  5266  0C19  2487               	call	PL33	;select bank 0
  5267  0C1A  1208               	bcf	8,4
  5268  0C1B                     l6577:	
  5269                           
  5270                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5271  0C1B  0C76               	rrf	lcd_put_byte@temp,w
  5272  0C1C  3901               	andlw	1
  5273  0C1D  00F3               	movwf	??_lcd_put_byte
  5274  0C1E  0C73               	rrf	??_lcd_put_byte,w
  5275  0C1F  1C03               	btfss	3,0
  5276  0C20  2C24               	goto	u2860
  5277  0C21  2487               	call	PL33	;select bank 0
  5278  0C22  1688               	bsf	8,5
  5279  0C23  2C26               	goto	l6579
  5280  0C24                     u2860:	
  5281  0C24  2487               	call	PL33	;select bank 0
  5282  0C25  1288               	bcf	8,5
  5283  0C26                     l6579:	
  5284                           
  5285                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5286  0C26  0C76               	rrf	lcd_put_byte@temp,w
  5287  0C27  00F3               	movwf	??_lcd_put_byte
  5288  0C28  0C73               	rrf	??_lcd_put_byte,w
  5289  0C29  3901               	andlw	1
  5290  0C2A  00F4               	movwf	??_lcd_put_byte+1
  5291  0C2B  0C74               	rrf	??_lcd_put_byte+1,w
  5292  0C2C  1C03               	btfss	3,0
  5293  0C2D  2C31               	goto	u2880
  5294  0C2E  2487               	call	PL33	;select bank 0
  5295  0C2F  1708               	bsf	8,6
  5296  0C30  2C33               	goto	l6581
  5297  0C31                     u2880:	
  5298  0C31  2487               	call	PL33	;select bank 0
  5299  0C32  1308               	bcf	8,6
  5300  0C33                     l6581:	
  5301                           
  5302                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5303  0C33  0C76               	rrf	lcd_put_byte@temp,w
  5304  0C34  2480  120A  158A   	fcall	PL30	;call to abstracted procedure
  5305  0C37  1C03               	btfss	3,0
  5306  0C38  2C3C               	goto	u2900
  5307  0C39  2487               	call	PL33	;select bank 0
  5308  0C3A  1788               	bsf	8,7
  5309  0C3B  2C3E               	goto	u2914
  5310  0C3C                     u2900:	
  5311  0C3C  2487               	call	PL33	;select bank 0
  5312  0C3D  1388               	bcf	8,7
  5313  0C3E                     u2914:	
  5314                           
  5315                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5316  0C3E  3021               	movlw	33
  5317  0C3F  00F3               	movwf	??_lcd_put_byte
  5318  0C40                     u4117:	
  5319  0C40  0BF3               	decfsz	??_lcd_put_byte,f
  5320  0C41  2C40               	goto	u4117
  5321  0C42  2487               	call	PL33	;select bank 0
  5322                           
  5323                           ;lcd(16).c: 139: RD3 = 1;
  5324  0C43  3021               	movlw	33
  5325  0C44  1588               	bsf	8,3
  5326                           
  5327                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5328  0C45  00F3               	movwf	??_lcd_put_byte
  5329  0C46                     u4127:	
  5330  0C46  0BF3               	decfsz	??_lcd_put_byte,f
  5331  0C47  2C46               	goto	u4127
  5332  0C48  2487               	call	PL33	;select bank 0
  5333                           
  5334                           ;lcd(16).c: 141: RD3 = 0;
  5335  0C49  1188               	bcf	8,3
  5336  0C4A  0008               	return
  5337  0C4B                     __end_of_lcd_put_byte:	
  5338  0C4B                     __ptext543:	
  5339 ;; =============== function ___ftadd ends ============
  5340                           
  5341                           
  5342 ;; *************** function _lcd_busy *****************
  5343 ;; Defined at:
  5344 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;  busy            1    3[COMMON] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1    wreg      unsigned char 
  5351 ;; Registers used:
  5352 ;;		wreg
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 60/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5358 ;;      Params:         0       0       0       0       0
  5359 ;;      Locals:         1       0       0       0       0
  5360 ;;      Temps:          1       0       0       0       0
  5361 ;;      Totals:         2       0       0       0       0
  5362 ;;Total ram usage:        2 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:    1
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_lcd_init
  5369 ;;		_lcd_putc
  5370 ;;		_lcd_gotoxy
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373  0C4B                     _lcd_busy:	
  5374                           
  5375                           ;lcd(16).c: 48: unsigned char busy;
  5376                           ;lcd(16).c: 50: TRISD4 = 1;
  5377                           
  5378                           ; Regs used in _lcd_busy: [wreg]
  5379  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5380  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  5381  0C4D  1608               	bsf	8,4
  5382                           
  5383                           ;lcd(16).c: 51: TRISD5 = 1;
  5384  0C4E  1688               	bsf	8,5
  5385                           
  5386                           ;lcd(16).c: 52: TRISD6 = 1;
  5387  0C4F  1708               	bsf	8,6
  5388                           
  5389                           ;lcd(16).c: 53: TRISD7 = 1;
  5390  0C50  1788               	bsf	8,7
  5391                           
  5392                           ;lcd(16).c: 55: RD2 = 1;
  5393  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5394  0C52  3021               	movlw	33
  5395  0C53  1508               	bsf	8,2
  5396                           
  5397                           ;lcd(16).c: 56: RD1 = 0;
  5398  0C54  1088               	bcf	8,1
  5399                           
  5400                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5401  0C55  00F2               	movwf	??_lcd_busy
  5402  0C56                     u4037:	
  5403  0C56  0BF2               	decfsz	??_lcd_busy,f
  5404  0C57  2C56               	goto	u4037
  5405  0C58  2487               	call	PL33	;select bank 0
  5406                           
  5407                           ;lcd(16).c: 58: RD3 = 1;
  5408  0C59  3021               	movlw	33
  5409  0C5A  1588               	bsf	8,3
  5410                           
  5411                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5412  0C5B  00F2               	movwf	??_lcd_busy
  5413  0C5C                     u4047:	
  5414  0C5C  0BF2               	decfsz	??_lcd_busy,f
  5415  0C5D  2C5C               	goto	u4047
  5416                           
  5417                           ;lcd(16).c: 61: busy = RD7;
  5418  0C5E  3000               	movlw	0
  5419  0C5F  2487               	call	PL33	;select bank 0
  5420  0C60  1B88               	btfsc	8,7
  5421  0C61  3001               	movlw	1
  5422  0C62  00F3               	movwf	lcd_busy@busy
  5423  0C63  3021               	movlw	33
  5424                           
  5425                           ;lcd(16).c: 63: RD3 = 0;
  5426  0C64  1188               	bcf	8,3
  5427                           
  5428                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5429  0C65  00F2               	movwf	??_lcd_busy
  5430  0C66                     u4057:	
  5431  0C66  0BF2               	decfsz	??_lcd_busy,f
  5432  0C67  2C66               	goto	u4057
  5433  0C68  2487               	call	PL33	;select bank 0
  5434                           
  5435                           ;lcd(16).c: 65: RD3 = 1;
  5436  0C69  3021               	movlw	33
  5437  0C6A  1588               	bsf	8,3
  5438                           
  5439                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5440  0C6B  00F2               	movwf	??_lcd_busy
  5441  0C6C                     u4067:	
  5442  0C6C  0BF2               	decfsz	??_lcd_busy,f
  5443  0C6D  2C6C               	goto	u4067
  5444  0C6E  2487               	call	PL33	;select bank 0
  5445                           
  5446                           ;lcd(16).c: 67: RD3 = 0;
  5447  0C6F  1188               	bcf	8,3
  5448                           
  5449                           ;lcd(16).c: 70: return busy;
  5450  0C70  0873               	movf	lcd_busy@busy,w
  5451  0C71  0008               	return
  5452  0C72                     __end_of_lcd_busy:	
  5453  0C72                     __ptext560:	
  5454 ;; =============== function _isdigit ends ============
  5455                           
  5456                           
  5457 ;; *************** function _isprint *****************
  5458 ;; Defined at:
  5459 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  c               1    wreg     unsigned char 
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  c               1    3[COMMON] unsigned char 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;		None               void
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/20
  5470 ;;		On exit  : 0/20
  5471 ;;		Unchanged: FFFFF/0
  5472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5473 ;;      Params:         0       0       0       0       0
  5474 ;;      Locals:         2       0       0       0       0
  5475 ;;      Temps:          0       0       0       0       0
  5476 ;;      Totals:         2       0       0       0       0
  5477 ;;Total ram usage:        2 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:    1
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_lcd_putc
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486  0C72                     _isprint:	
  5487                           
  5488                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5489                           ;isprint@c stored from wreg
  5490  0C72  00F3               	movwf	isprint@c
  5491  0C73  307F               	movlw	127
  5492  0C74  01F2               	clrf	_isprint$3688
  5493  0C75  0273               	subwf	isprint@c,w
  5494  0C76  1803               	skipnc
  5495  0C77  2C7E               	goto	l6147
  5496  0C78  3020               	movlw	32
  5497  0C79  0273               	subwf	isprint@c,w
  5498  0C7A  1C03               	skipc
  5499  0C7B  2C7E               	goto	l6147
  5500  0C7C  01F2               	clrf	_isprint$3688
  5501  0C7D  0AF2               	incf	_isprint$3688,f
  5502  0C7E                     l6147:	
  5503  0C7E  0C72               	rrf	_isprint$3688,w
  5504  0C7F  0008               	return
  5505  0C80                     __end_of_isprint:	
  5506  0C80                     PL30:	
  5507  0C80  00F3               	movwf	??_lcd_put_byte
  5508  0C81  0CF3               	rrf	??_lcd_put_byte,f
  5509  0C82  0C73               	rrf	??_lcd_put_byte,w
  5510  0C83  3901               	andlw	1
  5511  0C84  00F4               	movwf	??_lcd_put_byte+1
  5512  0C85  0C74               	rrf	??_lcd_put_byte+1,w
  5513  0C86  0008               	return
  5514  0C87                     PL33:	
  5515  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5516  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5517  0C89  0008               	return
  5518                           
  5519                           	psect	text539
  5520  0C8A                     __ptext539:	
  5521 ;; =============== function _lcd_init ends ============
  5522                           
  5523                           
  5524 ;; *************** function ___lltoft *****************
  5525 ;; Defined at:
  5526 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  c               4    0[BANK0 ] unsigned long 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  exp             1   10[COMMON] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  3    0[BANK0 ] float 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0, pclath, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 60/0
  5537 ;;		On exit  : 60/0
  5538 ;;		Unchanged: FFF9F/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5540 ;;      Params:         0       4       0       0       0
  5541 ;;      Locals:         1       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0
  5543 ;;      Totals:         1       4       0       0       0
  5544 ;;Total ram usage:        5 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    2
  5547 ;; This function calls:
  5548 ;;		___ftpack
  5549 ;; This function is called by:
  5550 ;;		_printf
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553  0C8A                     ___lltoft:	
  5554                           
  5555                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5556  0C8A  308E               	movlw	142
  5557  0C8B  00FA               	movwf	___lltoft@exp
  5558  0C8C                     l6755:	
  5559  0C8C  30FF               	movlw	255
  5560  0C8D  0523               	andwf	___lltoft@c+3,w
  5561  0C8E  1903               	btfsc	3,2
  5562  0C8F  2C97               	goto	l6757
  5563  0C90  1003               	clrc
  5564  0C91  0CA3               	rrf	___lltoft@c+3,f
  5565  0C92  0CA2               	rrf	___lltoft@c+2,f
  5566  0C93  0CA1               	rrf	___lltoft@c+1,f
  5567  0C94  0CA0               	rrf	___lltoft@c,f
  5568  0C95  0AFA               	incf	___lltoft@exp,f
  5569  0C96  2C8C               	goto	l6755
  5570  0C97                     l6757:	
  5571  0C97  0820               	movf	___lltoft@c,w
  5572  0C98  00F2               	movwf	?___ftpack
  5573  0C99  0821               	movf	___lltoft@c+1,w
  5574  0C9A  00F3               	movwf	?___ftpack+1
  5575  0C9B  0822               	movf	___lltoft@c+2,w
  5576  0C9C  00F4               	movwf	?___ftpack+2
  5577  0C9D  087A               	movf	___lltoft@exp,w
  5578  0C9E  00F5               	movwf	?___ftpack+3
  5579  0C9F  01F6               	clrf	?___ftpack+4
  5580  0CA0  2769               	fcall	___ftpack
  5581  0CA1  0872               	movf	?___ftpack,w
  5582  0CA2  00A0               	movwf	?___lltoft
  5583  0CA3  0873               	movf	?___ftpack+1,w
  5584  0CA4  00A1               	movwf	?___lltoft+1
  5585  0CA5  0874               	movf	?___ftpack+2,w
  5586  0CA6  00A2               	movwf	?___lltoft+2
  5587  0CA7  0008               	return
  5588  0CA8                     __end_of___lltoft:	
  5589  0CA8                     __ptext540:	
  5590 ;; =============== function ___lltoft ends ============
  5591                           
  5592                           
  5593 ;; *************** function ___altoft *****************
  5594 ;; Defined at:
  5595 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  c               4    0[BANK0 ] long 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  sign            1   11[COMMON] unsigned char 
  5600 ;;  exp             1   10[COMMON] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;                  3    0[BANK0 ] float 
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0, pclath, cstack
  5605 ;; Tracked objects:
  5606 ;;		On entry : 60/0
  5607 ;;		On exit  : 60/0
  5608 ;;		Unchanged: FFF9F/0
  5609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5610 ;;      Params:         0       4       0       0       0
  5611 ;;      Locals:         2       0       0       0       0
  5612 ;;      Temps:          0       0       0       0       0
  5613 ;;      Totals:         2       4       0       0       0
  5614 ;;Total ram usage:        6 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    2
  5617 ;; This function calls:
  5618 ;;		___ftpack
  5619 ;; This function is called by:
  5620 ;;		_main
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623  0CA8                     ___altoft:	
  5624  0CA8  308E               	movlw	142
  5625                           
  5626                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5627  0CA9  01FB               	clrf	___altoft@sign
  5628  0CAA  00FA               	movwf	___altoft@exp
  5629  0CAB  1FA3               	btfss	___altoft@c+3,7
  5630  0CAC  2CBA               	goto	l6745
  5631  0CAD  09A0               	comf	___altoft@c,f
  5632  0CAE  09A1               	comf	___altoft@c+1,f
  5633  0CAF  09A2               	comf	___altoft@c+2,f
  5634  0CB0  09A3               	comf	___altoft@c+3,f
  5635  0CB1  0AA0               	incf	___altoft@c,f
  5636  0CB2  1903               	skipnz
  5637  0CB3  0AA1               	incf	___altoft@c+1,f
  5638  0CB4  1903               	skipnz
  5639  0CB5  0AA2               	incf	___altoft@c+2,f
  5640  0CB6  1903               	skipnz
  5641  0CB7  0AA3               	incf	___altoft@c+3,f
  5642  0CB8  01FB               	clrf	___altoft@sign
  5643  0CB9  0AFB               	incf	___altoft@sign,f
  5644  0CBA                     l6745:	
  5645  0CBA  30FF               	movlw	255
  5646  0CBB  0523               	andwf	___altoft@c+3,w
  5647  0CBC  1903               	btfsc	3,2
  5648  0CBD  2CC5               	goto	l6747
  5649  0CBE  1003               	clrc
  5650  0CBF  0CA3               	rrf	___altoft@c+3,f
  5651  0CC0  0CA2               	rrf	___altoft@c+2,f
  5652  0CC1  0CA1               	rrf	___altoft@c+1,f
  5653  0CC2  0CA0               	rrf	___altoft@c,f
  5654  0CC3  0AFA               	incf	___altoft@exp,f
  5655  0CC4  2CBA               	goto	l6745
  5656  0CC5                     l6747:	
  5657  0CC5  0820               	movf	___altoft@c,w
  5658  0CC6  00F2               	movwf	?___ftpack
  5659  0CC7  0821               	movf	___altoft@c+1,w
  5660  0CC8  00F3               	movwf	?___ftpack+1
  5661  0CC9  0822               	movf	___altoft@c+2,w
  5662  0CCA  00F4               	movwf	?___ftpack+2
  5663  0CCB  087A               	movf	___altoft@exp,w
  5664  0CCC  00F5               	movwf	?___ftpack+3
  5665  0CCD  087B               	movf	___altoft@sign,w
  5666  0CCE  00F6               	movwf	?___ftpack+4
  5667  0CCF  2769               	fcall	___ftpack
  5668  0CD0  0872               	movf	?___ftpack,w
  5669  0CD1  00A0               	movwf	?___altoft
  5670  0CD2  0873               	movf	?___ftpack+1,w
  5671  0CD3  00A1               	movwf	?___altoft+1
  5672  0CD4  0874               	movf	?___ftpack+2,w
  5673  0CD5  00A2               	movwf	?___altoft+2
  5674  0CD6  0008               	return
  5675  0CD7                     __end_of___altoft:	
  5676  0CD7                     __ptext535:	
  5677 ;; =============== function ___ftsub ends ============
  5678                           
  5679                           
  5680 ;; *************** function _scale *****************
  5681 ;; Defined at:
  5682 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  scl             1    wreg     char 
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;  scl             1   42[BANK0 ] char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  3   32[BANK0 ] char 
  5689 ;; Registers used:
  5690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 60/20
  5693 ;;		On exit  : 60/0
  5694 ;;		Unchanged: FFF9F/0
  5695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5696 ;;      Params:         0       3       0       0       0
  5697 ;;      Locals:         0       4       0       0       0
  5698 ;;      Temps:          0       4       0       0       0
  5699 ;;      Totals:         0      11       0       0       0
  5700 ;;Total ram usage:       11 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    3
  5703 ;; This function calls:
  5704 ;;		___awmod
  5705 ;;		___awdiv
  5706 ;;		___ftmul
  5707 ;;		___bmul
  5708 ;; This function is called by:
  5709 ;;		_printf
  5710 ;; This function uses a non-reentrant model
  5711 ;;
  5712  0CD7                     _scale:	
  5713                           
  5714                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5715                           ;scale@scl stored from wreg
  5716  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5717  0CD8  00CA               	movwf	scale@scl
  5718  0CD9  1FCA               	btfss	scale@scl,7
  5719  0CDA  2DA3               	goto	l6855
  5720  0CDB  09CA               	comf	scale@scl,f
  5721  0CDC  0ACA               	incf	scale@scl,f
  5722  0CDD  084A               	movf	scale@scl,w
  5723  0CDE  3A80               	xorlw	128
  5724  0CDF  3E12               	addlw	-238
  5725  0CE0  1C03               	skipc
  5726  0CE1  2D47               	goto	l6845
  5727  0CE2  300A               	movlw	10
  5728  0CE3  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5729  0CE6  26AF  120A  158A   	fcall	___awmod
  5730  0CE9  0873               	movf	?___awmod+1,w
  5731  0CEA  00FB               	movwf	?___awdiv+3
  5732  0CEB  0872               	movf	?___awmod,w
  5733  0CEC  00FA               	movwf	?___awdiv+2
  5734  0CED  2669  120A  158A   	fcall	___awdiv
  5735  0CF0  27E0               	fcall	PL22	;call to abstracted procedure
  5736  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5737  0CF2  0084               	movwf	4
  5738  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5739  0CF8  00B1               	movwf	?___ftmul
  5740  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5741  0CFE  00B2               	movwf	?___ftmul+1
  5742  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5743  0D04  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5744  0D07  1BFA               	btfsc	?___awdiv+2,7
  5745  0D08  03FB               	decf	?___awdiv+3,f
  5746  0D09  2669  120A  158A   	fcall	___awdiv
  5747  0D0C  27BC               	fcall	PL10	;call to abstracted procedure
  5748  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5749  0D0E  0084               	movwf	4
  5750  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5751  0D14  00B4               	movwf	?___ftmul+3
  5752  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5753  0D1A  00B5               	movwf	?___ftmul+4
  5754  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5755  0D20  00B6               	movwf	?___ftmul+5
  5756  0D21  26EC  120A  158A   	fcall	___ftmul
  5757  0D24  27A7  120A  158A   	fcall	PL7	;call to abstracted procedure
  5758  0D27  1BF4               	btfsc	?___awmod+2,7
  5759  0D28  03F5               	decf	?___awmod+3,f
  5760  0D29  26AF  120A  158A   	fcall	___awmod
  5761  0D2C  27B4               	fcall	PL9	;call to abstracted procedure
  5762  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5763  0D2E  0084               	movwf	4
  5764  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5765  0D34  00B1               	movwf	?___ftmul
  5766  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5767  0D3A  00B2               	movwf	?___ftmul+1
  5768  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5769  0D40  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5770  0D43  26EC  120A  158A   	fcall	___ftmul
  5771  0D46  2FC4               	ljmp	PL11	;call to abstracted procedure
  5772  0D47                     l6845:	
  5773  0D47  084A               	movf	scale@scl,w
  5774  0D48  3A80               	xorlw	128
  5775  0D49  3E75               	addlw	-139
  5776  0D4A  1C03               	skipc
  5777  0D4B  2D8C               	goto	l6851
  5778  0D4C  300A               	movlw	10
  5779  0D4D  00F2               	movwf	?___awmod
  5780  0D4E  01F3               	clrf	?___awmod+1
  5781  0D4F  084A               	movf	scale@scl,w
  5782  0D50  00F4               	movwf	?___awmod+2
  5783  0D51  01F5               	clrf	?___awmod+3
  5784  0D52  1BF4               	btfsc	?___awmod+2,7
  5785  0D53  03F5               	decf	?___awmod+3,f
  5786  0D54  26AF  120A  158A   	fcall	___awmod
  5787  0D57  27B4               	fcall	PL9	;call to abstracted procedure
  5788  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5789  0D59  0084               	movwf	4
  5790  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5791  0D5F  00B1               	movwf	?___ftmul
  5792  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5793  0D65  00B2               	movwf	?___ftmul+1
  5794  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5795  0D6B  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5796  0D6E  1BFA               	btfsc	?___awdiv+2,7
  5797  0D6F  03FB               	decf	?___awdiv+3,f
  5798  0D70  2669  120A  158A   	fcall	___awdiv
  5799  0D73  27BC               	fcall	PL10	;call to abstracted procedure
  5800  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5801  0D75  0084               	movwf	4
  5802  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5803  0D7B  00B4               	movwf	?___ftmul+3
  5804  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5805  0D81  00B5               	movwf	?___ftmul+4
  5806  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5807  0D87  00B6               	movwf	?___ftmul+5
  5808  0D88  26EC  120A  158A   	fcall	___ftmul
  5809  0D8B  2FC4               	ljmp	PL11	;call to abstracted procedure
  5810  0D8C                     l6851:	
  5811  0D8C  3003               	movlw	3
  5812  0D8D  00FB               	movwf	?___bmul
  5813  0D8E  084A               	movf	scale@scl,w
  5814  0D8F  275B               	fcall	___bmul
  5815  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5816  0D91  0084               	movwf	4
  5817  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5818  0D97  00C0               	movwf	?_scale
  5819  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5820  0D9D  00C1               	movwf	?_scale+1
  5821  0D9E  160A  118A  2000   	fcall	stringdir
  5822  0DA1  00C2               	movwf	?_scale+2
  5823  0DA2  0008               	return
  5824  0DA3                     l6855:	
  5825  0DA3  084A               	movf	scale@scl,w
  5826  0DA4  3A80               	xorlw	128
  5827  0DA5  3E12               	addlw	-238
  5828  0DA6  1C03               	skipc
  5829  0DA7  2E0D               	goto	l6863
  5830  0DA8  300A               	movlw	10
  5831  0DA9  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5832  0DAC  26AF  120A  158A   	fcall	___awmod
  5833  0DAF  0873               	movf	?___awmod+1,w
  5834  0DB0  00FB               	movwf	?___awdiv+3
  5835  0DB1  0872               	movf	?___awmod,w
  5836  0DB2  00FA               	movwf	?___awdiv+2
  5837  0DB3  2669  120A  158A   	fcall	___awdiv
  5838  0DB6  27E0               	fcall	PL22	;call to abstracted procedure
  5839  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5840  0DB8  0084               	movwf	4
  5841  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5842  0DBE  00B1               	movwf	?___ftmul
  5843  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5844  0DC4  00B2               	movwf	?___ftmul+1
  5845  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5846  0DCA  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5847  0DCD  1BFA               	btfsc	?___awdiv+2,7
  5848  0DCE  03FB               	decf	?___awdiv+3,f
  5849  0DCF  2669  120A  158A   	fcall	___awdiv
  5850  0DD2  27BC               	fcall	PL10	;call to abstracted procedure
  5851  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5852  0DD4  0084               	movwf	4
  5853  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5854  0DDA  00B4               	movwf	?___ftmul+3
  5855  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5856  0DE0  00B5               	movwf	?___ftmul+4
  5857  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5858  0DE6  00B6               	movwf	?___ftmul+5
  5859  0DE7  26EC  120A  158A   	fcall	___ftmul
  5860  0DEA  27A7  120A  158A   	fcall	PL7	;call to abstracted procedure
  5861  0DED  1BF4               	btfsc	?___awmod+2,7
  5862  0DEE  03F5               	decf	?___awmod+3,f
  5863  0DEF  26AF  120A  158A   	fcall	___awmod
  5864  0DF2  27B4               	fcall	PL9	;call to abstracted procedure
  5865  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5866  0DF4  0084               	movwf	4
  5867  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5868  0DFA  00B1               	movwf	?___ftmul
  5869  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5870  0E00  00B2               	movwf	?___ftmul+1
  5871  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5872  0E06  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5873  0E09  26EC  120A  158A   	fcall	___ftmul
  5874  0E0C  2FC4               	ljmp	PL11	;call to abstracted procedure
  5875  0E0D                     l6863:	
  5876  0E0D  084A               	movf	scale@scl,w
  5877  0E0E  3A80               	xorlw	128
  5878  0E0F  3E75               	addlw	-139
  5879  0E10  1C03               	skipc
  5880  0E11  2E52               	goto	l6869
  5881  0E12  300A               	movlw	10
  5882  0E13  00F2               	movwf	?___awmod
  5883  0E14  01F3               	clrf	?___awmod+1
  5884  0E15  084A               	movf	scale@scl,w
  5885  0E16  00F4               	movwf	?___awmod+2
  5886  0E17  01F5               	clrf	?___awmod+3
  5887  0E18  1BF4               	btfsc	?___awmod+2,7
  5888  0E19  03F5               	decf	?___awmod+3,f
  5889  0E1A  26AF  120A  158A   	fcall	___awmod
  5890  0E1D  27B4               	fcall	PL9	;call to abstracted procedure
  5891  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5892  0E1F  0084               	movwf	4
  5893  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5894  0E25  00B1               	movwf	?___ftmul
  5895  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5896  0E2B  00B2               	movwf	?___ftmul+1
  5897  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5898  0E31  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5899  0E34  1BFA               	btfsc	?___awdiv+2,7
  5900  0E35  03FB               	decf	?___awdiv+3,f
  5901  0E36  2669  120A  158A   	fcall	___awdiv
  5902  0E39  27BC               	fcall	PL10	;call to abstracted procedure
  5903  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5904  0E3B  0084               	movwf	4
  5905  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5906  0E41  00B4               	movwf	?___ftmul+3
  5907  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5908  0E47  00B5               	movwf	?___ftmul+4
  5909  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5910  0E4D  00B6               	movwf	?___ftmul+5
  5911  0E4E  26EC  120A  158A   	fcall	___ftmul
  5912  0E51  2FC4               	ljmp	PL11	;call to abstracted procedure
  5913  0E52                     l6869:	
  5914  0E52  3003               	movlw	3
  5915  0E53  00FB               	movwf	?___bmul
  5916  0E54  084A               	movf	scale@scl,w
  5917  0E55  275B               	fcall	___bmul
  5918  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5919  0E57  0084               	movwf	4
  5920  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5921  0E5D  00C0               	movwf	?_scale
  5922  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5923  0E63  00C1               	movwf	?_scale+1
  5924  0E64  160A  118A  2000   	fcall	stringdir
  5925  0E67  00C2               	movwf	?_scale+2
  5926  0E68  0008               	return
  5927  0E69                     __end_of_scale:	
  5928  0E69                     __ptext550:	
  5929 ;; =============== function ___llmod ends ============
  5930                           
  5931                           
  5932 ;; *************** function ___awdiv *****************
  5933 ;; Defined at:
  5934 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;  divisor         2    8[COMMON] int 
  5937 ;;  dividend        2   10[COMMON] int 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  quotient        2    2[BANK0 ] int 
  5940 ;;  sign            1    1[BANK0 ] unsigned char 
  5941 ;;  counter         1    0[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  2    8[COMMON] int 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0
  5946 ;; Tracked objects:
  5947 ;;		On entry : 40/20
  5948 ;;		On exit  : 60/0
  5949 ;;		Unchanged: FFF9F/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         4       0       0       0       0
  5952 ;;      Locals:         0       4       0       0       0
  5953 ;;      Temps:          0       0       0       0       0
  5954 ;;      Totals:         4       4       0       0       0
  5955 ;;Total ram usage:        8 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_scale
  5962 ;;		_printf
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965  0E69                     ___awdiv:	
  5966                           
  5967                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5968  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5969  0E6A  01A1               	clrf	___awdiv@sign
  5970  0E6B  1FF9               	btfss	___awdiv@divisor+1,7
  5971  0E6C  2E74               	goto	l6405
  5972  0E6D  09F8               	comf	___awdiv@divisor,f
  5973  0E6E  09F9               	comf	___awdiv@divisor+1,f
  5974  0E6F  0AF8               	incf	___awdiv@divisor,f
  5975  0E70  1903               	skipnz
  5976  0E71  0AF9               	incf	___awdiv@divisor+1,f
  5977  0E72  01A1               	clrf	___awdiv@sign
  5978  0E73  0AA1               	incf	___awdiv@sign,f
  5979  0E74                     l6405:	
  5980  0E74  1FFB               	btfss	___awdiv@dividend+1,7
  5981  0E75  2E7D               	goto	l6411
  5982  0E76  09FA               	comf	___awdiv@dividend,f
  5983  0E77  09FB               	comf	___awdiv@dividend+1,f
  5984  0E78  0AFA               	incf	___awdiv@dividend,f
  5985  0E79  1903               	skipnz
  5986  0E7A  0AFB               	incf	___awdiv@dividend+1,f
  5987  0E7B  3001               	movlw	1
  5988  0E7C  06A1               	xorwf	___awdiv@sign,f
  5989  0E7D                     l6411:	
  5990  0E7D  01A2               	clrf	___awdiv@quotient
  5991  0E7E  01A3               	clrf	___awdiv@quotient+1
  5992  0E7F  0879               	movf	___awdiv@divisor+1,w
  5993  0E80  0478               	iorwf	___awdiv@divisor,w
  5994  0E81  1903               	skipnz
  5995  0E82  2EA2               	goto	l6433
  5996  0E83  01A0               	clrf	___awdiv@counter
  5997  0E84                     L15:	
  5998  0E84  0AA0               	incf	___awdiv@counter,f
  5999  0E85  1BF9               	btfsc	___awdiv@divisor+1,7
  6000  0E86  2E8B               	goto	l6421
  6001  0E87  1003               	clrc
  6002  0E88  0DF8               	rlf	___awdiv@divisor,f
  6003  0E89  0DF9               	rlf	___awdiv@divisor+1,f
  6004  0E8A  2E84               	goto	L15
  6005  0E8B                     l6421:	
  6006  0E8B  1003               	clrc
  6007  0E8C  0DA2               	rlf	___awdiv@quotient,f
  6008  0E8D  0DA3               	rlf	___awdiv@quotient+1,f
  6009  0E8E  0879               	movf	___awdiv@divisor+1,w
  6010  0E8F  027B               	subwf	___awdiv@dividend+1,w
  6011  0E90  1D03               	skipz
  6012  0E91  2E94               	goto	u2535
  6013  0E92  0878               	movf	___awdiv@divisor,w
  6014  0E93  027A               	subwf	___awdiv@dividend,w
  6015  0E94                     u2535:	
  6016  0E94  1C03               	skipc
  6017  0E95  2E9E               	goto	L16
  6018  0E96  0878               	movf	___awdiv@divisor,w
  6019  0E97  02FA               	subwf	___awdiv@dividend,f
  6020  0E98  0879               	movf	___awdiv@divisor+1,w
  6021  0E99  1C03               	skipc
  6022  0E9A  03FB               	decf	___awdiv@dividend+1,f
  6023  0E9B  02FB               	subwf	___awdiv@dividend+1,f
  6024  0E9C  1422               	bsf	___awdiv@quotient,0
  6025  0E9D  1003               	clrc
  6026  0E9E                     L16:	
  6027  0E9E  0CF9               	rrf	___awdiv@divisor+1,f
  6028  0E9F  0CF8               	rrf	___awdiv@divisor,f
  6029  0EA0  0BA0               	decfsz	___awdiv@counter,f
  6030  0EA1  2E8B               	goto	l6421
  6031  0EA2                     l6433:	
  6032  0EA2  0821               	movf	___awdiv@sign,w
  6033  0EA3  1903               	btfsc	3,2
  6034  0EA4  2EAA               	goto	l6437
  6035  0EA5  09A2               	comf	___awdiv@quotient,f
  6036  0EA6  09A3               	comf	___awdiv@quotient+1,f
  6037  0EA7  0AA2               	incf	___awdiv@quotient,f
  6038  0EA8  1903               	skipnz
  6039  0EA9  0AA3               	incf	___awdiv@quotient+1,f
  6040  0EAA                     l6437:	
  6041  0EAA  0823               	movf	___awdiv@quotient+1,w
  6042  0EAB  00F9               	movwf	?___awdiv+1
  6043  0EAC  0822               	movf	___awdiv@quotient,w
  6044  0EAD  00F8               	movwf	?___awdiv
  6045  0EAE  0008               	return
  6046  0EAF                     __end_of___awdiv:	
  6047  0EAF                     __ptext545:	
  6048 ;; =============== function _lcd_put_byte ends ============
  6049                           
  6050                           
  6051 ;; *************** function ___awmod *****************
  6052 ;; Defined at:
  6053 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  divisor         2    2[COMMON] int 
  6056 ;;  dividend        2    4[COMMON] int 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  sign            1    7[COMMON] unsigned char 
  6059 ;;  counter         1    6[COMMON] unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  2    2[COMMON] int 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0
  6064 ;; Tracked objects:
  6065 ;;		On entry : 60/0
  6066 ;;		On exit  : 60/0
  6067 ;;		Unchanged: FFF9F/0
  6068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6069 ;;      Params:         4       0       0       0       0
  6070 ;;      Locals:         2       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0
  6072 ;;      Totals:         6       0       0       0       0
  6073 ;;Total ram usage:        6 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_scale
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082  0EAF                     ___awmod:	
  6083                           
  6084                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6085  0EAF  01F7               	clrf	___awmod@sign
  6086  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  6087  0EB1  2EB9               	goto	l6523
  6088  0EB2  09F4               	comf	___awmod@dividend,f
  6089  0EB3  09F5               	comf	___awmod@dividend+1,f
  6090  0EB4  0AF4               	incf	___awmod@dividend,f
  6091  0EB5  1903               	skipnz
  6092  0EB6  0AF5               	incf	___awmod@dividend+1,f
  6093  0EB7  01F7               	clrf	___awmod@sign
  6094  0EB8  0AF7               	incf	___awmod@sign,f
  6095  0EB9                     l6523:	
  6096  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  6097  0EBA  2EC0               	goto	l6527
  6098  0EBB  09F2               	comf	___awmod@divisor,f
  6099  0EBC  09F3               	comf	___awmod@divisor+1,f
  6100  0EBD  0AF2               	incf	___awmod@divisor,f
  6101  0EBE  1903               	skipnz
  6102  0EBF  0AF3               	incf	___awmod@divisor+1,f
  6103  0EC0                     l6527:	
  6104  0EC0  0873               	movf	___awmod@divisor+1,w
  6105  0EC1  0472               	iorwf	___awmod@divisor,w
  6106  0EC2  1903               	skipnz
  6107  0EC3  2EDF               	goto	l6543
  6108  0EC4  01F6               	clrf	___awmod@counter
  6109  0EC5                     L8:	
  6110  0EC5  0AF6               	incf	___awmod@counter,f
  6111  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  6112  0EC7  2ECC               	goto	l6535
  6113  0EC8  1003               	clrc
  6114  0EC9  0DF2               	rlf	___awmod@divisor,f
  6115  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  6116  0ECB  2EC5               	goto	L8
  6117  0ECC                     l6535:	
  6118  0ECC  0873               	movf	___awmod@divisor+1,w
  6119  0ECD  0275               	subwf	___awmod@dividend+1,w
  6120  0ECE  1D03               	skipz
  6121  0ECF  2ED2               	goto	u2725
  6122  0ED0  0872               	movf	___awmod@divisor,w
  6123  0ED1  0274               	subwf	___awmod@dividend,w
  6124  0ED2                     u2725:	
  6125  0ED2  1C03               	skipc
  6126  0ED3  2EDB               	goto	L9
  6127  0ED4  0872               	movf	___awmod@divisor,w
  6128  0ED5  02F4               	subwf	___awmod@dividend,f
  6129  0ED6  0873               	movf	___awmod@divisor+1,w
  6130  0ED7  1C03               	skipc
  6131  0ED8  03F5               	decf	___awmod@dividend+1,f
  6132  0ED9  02F5               	subwf	___awmod@dividend+1,f
  6133  0EDA  1003               	clrc
  6134  0EDB                     L9:	
  6135  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  6136  0EDC  0CF2               	rrf	___awmod@divisor,f
  6137  0EDD  0BF6               	decfsz	___awmod@counter,f
  6138  0EDE  2ECC               	goto	l6535
  6139  0EDF                     l6543:	
  6140  0EDF  0877               	movf	___awmod@sign,w
  6141  0EE0  1903               	btfsc	3,2
  6142  0EE1  2EE7               	goto	l6547
  6143  0EE2  09F4               	comf	___awmod@dividend,f
  6144  0EE3  09F5               	comf	___awmod@dividend+1,f
  6145  0EE4  0AF4               	incf	___awmod@dividend,f
  6146  0EE5  1903               	skipnz
  6147  0EE6  0AF5               	incf	___awmod@dividend+1,f
  6148  0EE7                     l6547:	
  6149  0EE7  0875               	movf	___awmod@dividend+1,w
  6150  0EE8  00F3               	movwf	?___awmod+1
  6151  0EE9  0874               	movf	___awmod@dividend,w
  6152  0EEA  00F2               	movwf	?___awmod
  6153  0EEB  0008               	return
  6154  0EEC                     __end_of___awmod:	
  6155  0EEC                     __ptext541:	
  6156 ;; =============== function ___altoft ends ============
  6157                           
  6158                           
  6159 ;; *************** function ___ftmul *****************
  6160 ;; Defined at:
  6161 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  f1              3   17[BANK0 ] float 
  6164 ;;  f2              3   20[BANK0 ] float 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  6167 ;;  sign            1   31[BANK0 ] unsigned char 
  6168 ;;  cntr            1   30[BANK0 ] unsigned char 
  6169 ;;  exp             1   26[BANK0 ] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  3   17[BANK0 ] float 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, pclath, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 60/0
  6176 ;;		On exit  : 60/0
  6177 ;;		Unchanged: FFF9F/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6179 ;;      Params:         0       6       0       0       0
  6180 ;;      Locals:         0       6       0       0       0
  6181 ;;      Temps:          0       3       0       0       0
  6182 ;;      Totals:         0      15       0       0       0
  6183 ;;Total ram usage:       15 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    2
  6186 ;; This function calls:
  6187 ;;		___ftpack
  6188 ;; This function is called by:
  6189 ;;		_main
  6190 ;;		_fround
  6191 ;;		_scale
  6192 ;;		_printf
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195  0EEC                     ___ftmul:	
  6196                           
  6197                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6198  0EEC  0831               	movf	___ftmul@f1,w
  6199  0EED  00B7               	movwf	??___ftmul
  6200  0EEE  0832               	movf	___ftmul@f1+1,w
  6201  0EEF  00B8               	movwf	??___ftmul+1
  6202  0EF0  0833               	movf	___ftmul@f1+2,w
  6203  0EF1  00B9               	movwf	??___ftmul+2
  6204  0EF2  1003               	clrc
  6205  0EF3  0D38               	rlf	??___ftmul+1,w
  6206  0EF4  0D39               	rlf	??___ftmul+2,w
  6207  0EF5  00BA               	movwf	___ftmul@exp
  6208  0EF6  08BA               	movf	___ftmul@exp,f
  6209  0EF7  1D03               	skipz
  6210  0EF8  2EFD               	goto	l6685
  6211  0EF9  01B1               	clrf	?___ftmul
  6212  0EFA  01B2               	clrf	?___ftmul+1
  6213  0EFB  01B3               	clrf	?___ftmul+2
  6214  0EFC  0008               	return
  6215  0EFD                     l6685:	
  6216  0EFD  0834               	movf	___ftmul@f2,w
  6217  0EFE  00B7               	movwf	??___ftmul
  6218  0EFF  0835               	movf	___ftmul@f2+1,w
  6219  0F00  00B8               	movwf	??___ftmul+1
  6220  0F01  0836               	movf	___ftmul@f2+2,w
  6221  0F02  00B9               	movwf	??___ftmul+2
  6222  0F03  1003               	clrc
  6223  0F04  0D38               	rlf	??___ftmul+1,w
  6224  0F05  0D39               	rlf	??___ftmul+2,w
  6225  0F06  00BF               	movwf	___ftmul@sign
  6226  0F07  08BF               	movf	___ftmul@sign,f
  6227  0F08  1D03               	skipz
  6228  0F09  2F0E               	goto	l6691
  6229  0F0A  01B1               	clrf	?___ftmul
  6230  0F0B  01B2               	clrf	?___ftmul+1
  6231  0F0C  01B3               	clrf	?___ftmul+2
  6232  0F0D  0008               	return
  6233  0F0E                     l6691:	
  6234  0F0E  083F               	movf	___ftmul@sign,w
  6235  0F0F  3E7B               	addlw	123
  6236  0F10  07BA               	addwf	___ftmul@exp,f
  6237  0F11  0833               	movf	___ftmul@f1+2,w
  6238  0F12  00BF               	movwf	___ftmul@sign
  6239  0F13  0836               	movf	___ftmul@f2+2,w
  6240  0F14  06BF               	xorwf	___ftmul@sign,f
  6241  0F15  3080               	movlw	128
  6242  0F16  05BF               	andwf	___ftmul@sign,f
  6243  0F17  3007               	movlw	7
  6244  0F18  17B2               	bsf	___ftmul@f1+1,7
  6245  0F19  17B5               	bsf	___ftmul@f2+1,7
  6246  0F1A  01B6               	clrf	___ftmul@f2+2
  6247  0F1B  01BB               	clrf	___ftmul@f3_as_product
  6248  0F1C  01BC               	clrf	___ftmul@f3_as_product+1
  6249  0F1D  01BD               	clrf	___ftmul@f3_as_product+2
  6250  0F1E  00BE               	movwf	___ftmul@cntr
  6251  0F1F                     l6709:	
  6252  0F1F  1C31               	btfss	___ftmul@f1,0
  6253  0F20  2F29               	goto	l6713
  6254  0F21  0834               	movf	___ftmul@f2,w
  6255  0F22  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6256  0F25  1803               	skipnc
  6257  0F26  0A36               	incf	___ftmul@f2+2,w
  6258  0F27  1D03               	btfss	3,2
  6259  0F28  07BD               	addwf	___ftmul@f3_as_product+2,f
  6260  0F29                     l6713:	
  6261  0F29  1003               	clrc
  6262  0F2A  0CB3               	rrf	___ftmul@f1+2,f
  6263  0F2B  0CB2               	rrf	___ftmul@f1+1,f
  6264  0F2C  0CB1               	rrf	___ftmul@f1,f
  6265  0F2D  1003               	clrc
  6266  0F2E  0DB4               	rlf	___ftmul@f2,f
  6267  0F2F  0DB5               	rlf	___ftmul@f2+1,f
  6268  0F30  0DB6               	rlf	___ftmul@f2+2,f
  6269  0F31  0BBE               	decfsz	___ftmul@cntr,f
  6270  0F32  2F1F               	goto	l6709
  6271  0F33  3009               	movlw	9
  6272  0F34  00BE               	movwf	___ftmul@cntr
  6273  0F35                     l6721:	
  6274  0F35  1C31               	btfss	___ftmul@f1,0
  6275  0F36  2F3F               	goto	l6725
  6276  0F37  0834               	movf	___ftmul@f2,w
  6277  0F38  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6278  0F3B  1803               	skipnc
  6279  0F3C  0A36               	incf	___ftmul@f2+2,w
  6280  0F3D  1D03               	btfss	3,2
  6281  0F3E  07BD               	addwf	___ftmul@f3_as_product+2,f
  6282  0F3F                     l6725:	
  6283  0F3F  1003               	clrc
  6284  0F40  0CB3               	rrf	___ftmul@f1+2,f
  6285  0F41  0CB2               	rrf	___ftmul@f1+1,f
  6286  0F42  0CB1               	rrf	___ftmul@f1,f
  6287  0F43  1003               	clrc
  6288  0F44  0CBD               	rrf	___ftmul@f3_as_product+2,f
  6289  0F45  0CBC               	rrf	___ftmul@f3_as_product+1,f
  6290  0F46  0CBB               	rrf	___ftmul@f3_as_product,f
  6291  0F47  0BBE               	decfsz	___ftmul@cntr,f
  6292  0F48  2F35               	goto	l6721
  6293  0F49  083B               	movf	___ftmul@f3_as_product,w
  6294  0F4A  00F2               	movwf	?___ftpack
  6295  0F4B  083C               	movf	___ftmul@f3_as_product+1,w
  6296  0F4C  00F3               	movwf	?___ftpack+1
  6297  0F4D  083D               	movf	___ftmul@f3_as_product+2,w
  6298  0F4E  00F4               	movwf	?___ftpack+2
  6299  0F4F  083A               	movf	___ftmul@exp,w
  6300  0F50  00F5               	movwf	?___ftpack+3
  6301  0F51  083F               	movf	___ftmul@sign,w
  6302  0F52  00F6               	movwf	?___ftpack+4
  6303  0F53  2769               	fcall	___ftpack
  6304  0F54  0872               	movf	?___ftpack,w
  6305  0F55  00B1               	movwf	?___ftmul
  6306  0F56  0873               	movf	?___ftpack+1,w
  6307  0F57  00B2               	movwf	?___ftmul+1
  6308  0F58  0874               	movf	?___ftpack+2,w
  6309  0F59  00B3               	movwf	?___ftmul+2
  6310  0F5A  0008               	return
  6311  0F5B                     __end_of___ftmul:	
  6312  0F5B                     __ptext556:	
  6313 ;; =============== function ___wmul ends ============
  6314                           
  6315                           
  6316 ;; *************** function ___bmul *****************
  6317 ;; Defined at:
  6318 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  multiplier      1    wreg     unsigned char 
  6321 ;;  multiplicand    1   11[COMMON] unsigned char 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  multiplier      1    1[BANK0 ] unsigned char 
  6324 ;;  product         1    0[BANK0 ] unsigned char 
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      unsigned char 
  6327 ;; Registers used:
  6328 ;;		wreg, status,2, status,0
  6329 ;; Tracked objects:
  6330 ;;		On entry : 60/0
  6331 ;;		On exit  : 60/0
  6332 ;;		Unchanged: FFF9F/0
  6333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6334 ;;      Params:         1       0       0       0       0
  6335 ;;      Locals:         0       2       0       0       0
  6336 ;;      Temps:          0       0       0       0       0
  6337 ;;      Totals:         1       2       0       0       0
  6338 ;;Total ram usage:        3 bytes
  6339 ;; Hardware stack levels used:    1
  6340 ;; Hardware stack levels required when called:    1
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_fround
  6345 ;;		_scale
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348  0F5B                     ___bmul:	
  6349                           
  6350                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6351                           ;___bmul@multiplier stored from wreg
  6352  0F5B  00A1               	movwf	___bmul@multiplier
  6353  0F5C  01A0               	clrf	___bmul@product
  6354  0F5D                     l6259:	
  6355  0F5D  087B               	movf	___bmul@multiplicand,w
  6356  0F5E  1821               	btfsc	___bmul@multiplier,0
  6357  0F5F  07A0               	addwf	___bmul@product,f
  6358  0F60  1003               	clrc
  6359  0F61  0DFB               	rlf	___bmul@multiplicand,f
  6360  0F62  1003               	clrc
  6361  0F63  0CA1               	rrf	___bmul@multiplier,f
  6362  0F64  08A1               	movf	___bmul@multiplier,f
  6363  0F65  1D03               	skipz
  6364  0F66  2F5D               	goto	l6259
  6365  0F67  0820               	movf	___bmul@product,w
  6366  0F68  0008               	return
  6367  0F69                     __end_of___bmul:	
  6368  0F69                     __ptext552:	
  6369 ;; =============== function ___fttol ends ============
  6370                           
  6371                           
  6372 ;; *************** function ___ftpack *****************
  6373 ;; Defined at:
  6374 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  arg             3    2[COMMON] unsigned um
  6377 ;;  exp             1    5[COMMON] unsigned char 
  6378 ;;  sign            1    6[COMMON] unsigned char 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  3    2[COMMON] float 
  6383 ;; Registers used:
  6384 ;;		wreg, status,2, status,0
  6385 ;; Tracked objects:
  6386 ;;		On entry : 60/0
  6387 ;;		On exit  : 60/0
  6388 ;;		Unchanged: FFF9F/0
  6389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6390 ;;      Params:         5       0       0       0       0
  6391 ;;      Locals:         0       0       0       0       0
  6392 ;;      Temps:          3       0       0       0       0
  6393 ;;      Totals:         8       0       0       0       0
  6394 ;;Total ram usage:        8 bytes
  6395 ;; Hardware stack levels used:    1
  6396 ;; Hardware stack levels required when called:    1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		___ftadd
  6401 ;;		___ftmul
  6402 ;;		___altoft
  6403 ;;		___lltoft
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406  0F69                     ___ftpack:	
  6407                           
  6408                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6409  0F69  0875               	movf	___ftpack@exp,w
  6410  0F6A  1903               	btfsc	3,2
  6411  0F6B  2F71               	goto	l6335
  6412  0F6C  0874               	movf	___ftpack@arg+2,w
  6413  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6414  0F6E  0472               	iorwf	___ftpack@arg,w
  6415  0F6F  1D03               	skipz
  6416  0F70  2F7A               	goto	l6341
  6417  0F71                     l6335:	
  6418  0F71  01F2               	clrf	?___ftpack
  6419  0F72  01F3               	clrf	?___ftpack+1
  6420  0F73  01F4               	clrf	?___ftpack+2
  6421  0F74  0008               	return
  6422  0F75                     l6339:	
  6423  0F75  0AF5               	incf	___ftpack@exp,f
  6424  0F76  1003               	clrc
  6425  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6426  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6427  0F79  0CF2               	rrf	___ftpack@arg,f
  6428  0F7A                     l6341:	
  6429  0F7A  30FE               	movlw	254
  6430  0F7B  0574               	andwf	___ftpack@arg+2,w
  6431  0F7C  1903               	btfsc	3,2
  6432  0F7D  2F89               	goto	l6345
  6433  0F7E  2F75               	goto	l6339
  6434  0F7F                     l6343:	
  6435  0F7F  0AF5               	incf	___ftpack@exp,f
  6436  0F80  0AF2               	incf	___ftpack@arg,f
  6437  0F81  1903               	skipnz
  6438  0F82  0AF3               	incf	___ftpack@arg+1,f
  6439  0F83  1903               	skipnz
  6440  0F84  0AF4               	incf	___ftpack@arg+2,f
  6441  0F85  1003               	clrc
  6442  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6443  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6444  0F88  0CF2               	rrf	___ftpack@arg,f
  6445  0F89                     l6345:	
  6446  0F89  30FF               	movlw	255
  6447  0F8A  0574               	andwf	___ftpack@arg+2,w
  6448  0F8B  1903               	btfsc	3,2
  6449  0F8C  2F93               	goto	l6349
  6450  0F8D  2F7F               	goto	l6343
  6451  0F8E                     l6347:	
  6452  0F8E  03F5               	decf	___ftpack@exp,f
  6453  0F8F  1003               	clrc
  6454  0F90  0DF2               	rlf	___ftpack@arg,f
  6455  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6456  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6457  0F93                     l6349:	
  6458  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6459  0F94  2F8E               	goto	l6347
  6460  0F95  1C75               	btfss	___ftpack@exp,0
  6461  0F96  13F3               	bcf	___ftpack@arg+1,7
  6462  0F97  1003               	clrc
  6463  0F98  0CF5               	rrf	___ftpack@exp,f
  6464  0F99  0875               	movf	___ftpack@exp,w
  6465  0F9A  00F9               	movwf	??___ftpack+2
  6466  0F9B  01F8               	clrf	??___ftpack+1
  6467  0F9C  01F7               	clrf	??___ftpack
  6468  0F9D  0877               	movf	??___ftpack,w
  6469  0F9E  04F2               	iorwf	___ftpack@arg,f
  6470  0F9F  0878               	movf	??___ftpack+1,w
  6471  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6472  0FA1  0879               	movf	??___ftpack+2,w
  6473  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6474  0FA3  0876               	movf	___ftpack@sign,w
  6475  0FA4  1D03               	skipz
  6476  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6477  0FA6  0008               	return
  6478  0FA7                     __end_of___ftpack:	
  6479  0FA7                     PL7:	
  6480  0FA7  0831               	movf	?___ftmul,w
  6481  0FA8  00C7               	movwf	_scale$4124
  6482  0FA9  0832               	movf	?___ftmul+1,w
  6483  0FAA  00C8               	movwf	_scale$4124+1
  6484  0FAB  0833               	movf	?___ftmul+2,w
  6485  0FAC  00C9               	movwf	_scale$4124+2
  6486  0FAD  300A               	movlw	10
  6487  0FAE  00F2               	movwf	?___awmod
  6488  0FAF  01F3               	clrf	?___awmod+1
  6489  0FB0  084A               	movf	scale@scl,w
  6490  0FB1  00F4               	movwf	?___awmod+2
  6491  0FB2  01F5               	clrf	?___awmod+3
  6492  0FB3  0008               	return
  6493  0FB4                     PL9:	
  6494  0FB4  0872               	movf	?___awmod,w
  6495  0FB5  00C3               	movwf	??_scale
  6496  0FB6  0873               	movf	?___awmod+1,w
  6497  0FB7  00C4               	movwf	??_scale+1
  6498  0FB8  0843               	movf	??_scale,w
  6499  0FB9  0743               	addwf	??_scale,w
  6500  0FBA  0743               	addwf	??_scale,w
  6501  0FBB  0008               	return
  6502  0FBC                     PL10:	
  6503  0FBC  0878               	movf	?___awdiv,w
  6504  0FBD  00C5               	movwf	??_scale+2
  6505  0FBE  0879               	movf	?___awdiv+1,w
  6506  0FBF  00C6               	movwf	??_scale+3
  6507  0FC0  0845               	movf	??_scale+2,w
  6508  0FC1  0745               	addwf	??_scale+2,w
  6509  0FC2  0745               	addwf	??_scale+2,w
  6510  0FC3  0008               	return
  6511  0FC4                     PL11:	
  6512  0FC4  0831               	movf	?___ftmul,w
  6513  0FC5  00C0               	movwf	?_scale
  6514  0FC6  0832               	movf	?___ftmul+1,w
  6515  0FC7  00C1               	movwf	?_scale+1
  6516  0FC8  0833               	movf	?___ftmul+2,w
  6517  0FC9  00C2               	movwf	?_scale+2
  6518  0FCA  0008               	return
  6519  0FCB                     PL15:	
  6520  0FCB  00F8               	movwf	?___awdiv
  6521  0FCC  01F9               	clrf	?___awdiv+1
  6522  0FCD  084A               	movf	scale@scl,w
  6523  0FCE  00F4               	movwf	?___awmod+2
  6524  0FCF  01F5               	clrf	?___awmod+3
  6525  0FD0  1BF4               	btfsc	?___awmod+2,7
  6526  0FD1  03F5               	decf	?___awmod+3,f
  6527  0FD2  3064               	movlw	100
  6528  0FD3  00F2               	movwf	?___awmod
  6529  0FD4  01F3               	clrf	?___awmod+1
  6530  0FD5  0008               	return
  6531  0FD6                     PL19:	
  6532  0FD6  07BB               	addwf	___ftmul@f3_as_product,f
  6533  0FD7  0835               	movf	___ftmul@f2+1,w
  6534  0FD8  1103               	clrz
  6535  0FD9  1803               	skipnc
  6536  0FDA  0A35               	incf	___ftmul@f2+1,w
  6537  0FDB  1D03               	btfss	3,2
  6538  0FDC  07BC               	addwf	___ftmul@f3_as_product+1,f
  6539  0FDD  0836               	movf	___ftmul@f2+2,w
  6540  0FDE  1103               	clrz
  6541  0FDF  0008               	return
  6542  0FE0                     PL22:	
  6543  0FE0  0878               	movf	?___awdiv,w
  6544  0FE1  00C3               	movwf	??_scale
  6545  0FE2  0879               	movf	?___awdiv+1,w
  6546  0FE3  00C4               	movwf	??_scale+1
  6547  0FE4  0843               	movf	??_scale,w
  6548  0FE5  0743               	addwf	??_scale,w
  6549  0FE6  0743               	addwf	??_scale,w
  6550  0FE7  0008               	return
  6551  0FE8                     PL24:	
  6552  0FE8  00B3               	movwf	?___ftmul+2
  6553  0FE9  0847               	movf	_scale$4124,w
  6554  0FEA  00B4               	movwf	?___ftmul+3
  6555  0FEB  0848               	movf	_scale$4124+1,w
  6556  0FEC  00B5               	movwf	?___ftmul+4
  6557  0FED  0849               	movf	_scale$4124+2,w
  6558  0FEE  00B6               	movwf	?___ftmul+5
  6559  0FEF  0008               	return
  6560  0FF0                     PL25:	
  6561  0FF0  00B3               	movwf	?___ftmul+2
  6562  0FF1  3064               	movlw	100
  6563  0FF2  00F8               	movwf	?___awdiv
  6564  0FF3  01F9               	clrf	?___awdiv+1
  6565  0FF4  084A               	movf	scale@scl,w
  6566  0FF5  00FA               	movwf	?___awdiv+2
  6567  0FF6  01FB               	clrf	?___awdiv+3
  6568  0FF7  0008               	return
  6569  0FF8                     PL26:	
  6570  0FF8  00B3               	movwf	?___ftmul+2
  6571  0FF9  300A               	movlw	10
  6572  0FFA  00F8               	movwf	?___awdiv
  6573  0FFB  01F9               	clrf	?___awdiv+1
  6574  0FFC  084A               	movf	scale@scl,w
  6575  0FFD  00FA               	movwf	?___awdiv+2
  6576  0FFE  01FB               	clrf	?___awdiv+3
  6577  0FFF  0008               	return
  6578                           
  6579                           	psect	text557
  6580  1662                     __ptext557:	
  6581 ;; =============== function ___bmul ends ============
  6582                           
  6583                           
  6584 ;; *************** function __div_to_l_ *****************
  6585 ;; Defined at:
  6586 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  f1              3    2[COMMON] unsigned char 
  6589 ;;  f2              3    5[COMMON] unsigned char 
  6590 ;; Auto vars:     Size  Location     Type
  6591 ;;  quot            4    8[BANK0 ] unsigned long 
  6592 ;;  exp1            1   13[BANK0 ] unsigned char 
  6593 ;;  cntr            1   12[BANK0 ] unsigned char 
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  4    2[COMMON] unsigned long 
  6596 ;; Registers used:
  6597 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 60/0
  6601 ;;		Unchanged: FFF9F/0
  6602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6603 ;;      Params:         6       0       0       0       0
  6604 ;;      Locals:         0       6       0       0       0
  6605 ;;      Temps:          0       8       0       0       0
  6606 ;;      Totals:         6      14       0       0       0
  6607 ;;Total ram usage:       20 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    1
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		_printf
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616  1662                     __div_to_l_:	
  6617                           
  6618                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6619  1662  3072               	movlw	low __div_to_l_@f1
  6620  1663  0084               	movwf	4
  6621  1664  0800               	movf	0,w
  6622  1665  1283               	bcf	3,5	;RP0=0, select bank0
  6623  1666  1303               	bcf	3,6	;RP1=0, select bank0
  6624  1667  00A0               	movwf	??__div_to_l_
  6625  1668  0A84               	incf	4,f
  6626  1669  0800               	movf	0,w
  6627  166A  00A1               	movwf	??__div_to_l_+1
  6628  166B  0A84               	incf	4,f
  6629  166C  0800               	movf	0,w
  6630  166D  00A2               	movwf	??__div_to_l_+2
  6631  166E  0A84               	incf	4,f
  6632  166F  0800               	movf	0,w
  6633  1670  00A3               	movwf	??__div_to_l_+3
  6634  1671  1003               	clrc
  6635  1672  0D22               	rlf	??__div_to_l_+2,w
  6636  1673  0D23               	rlf	??__div_to_l_+3,w
  6637  1674  00AD               	movwf	__div_to_l_@exp1
  6638  1675  08AD               	movf	__div_to_l_@exp1,f
  6639  1676  1D03               	skipz
  6640  1677  2E7D               	goto	l6215
  6641  1678                     l6213:	
  6642  1678  01F2               	clrf	?__div_to_l_
  6643  1679  01F3               	clrf	?__div_to_l_+1
  6644  167A  01F4               	clrf	?__div_to_l_+2
  6645  167B  01F5               	clrf	?__div_to_l_+3
  6646  167C  0008               	return
  6647  167D                     l6215:	
  6648  167D  3075               	movlw	low __div_to_l_@f2
  6649  167E  2720  160A  118A   	fcall	PL3	;call to abstracted procedure
  6650  1681  1003               	clrc
  6651  1682  0D22               	rlf	??__div_to_l_+2,w
  6652  1683  0D23               	rlf	??__div_to_l_+3,w
  6653  1684  00AC               	movwf	__div_to_l_@cntr
  6654  1685  08AC               	movf	__div_to_l_@cntr,f
  6655  1686  1903               	btfsc	3,2
  6656  1687  2E78               	goto	l6213
  6657  1688  3072               	movlw	low __div_to_l_@f1
  6658  1689  0084               	movwf	4
  6659  168A  3080               	movlw	128
  6660  168B  0A84               	incf	4,f
  6661  168C  0A84               	incf	4,f
  6662  168D  0480               	iorwf	0,f
  6663  168E  3072               	movlw	low __div_to_l_@f1
  6664  168F  0A84               	incf	4,f
  6665  1690  0084               	movwf	4
  6666  1691  3075               	movlw	low __div_to_l_@f2
  6667  1692  0A84               	incf	4,f
  6668  1693  0A84               	incf	4,f
  6669  1694  0A84               	incf	4,f
  6670  1695  0180               	clrf	0
  6671  1696  0084               	movwf	4
  6672  1697  3080               	movlw	128
  6673  1698  0A84               	incf	4,f
  6674  1699  0A84               	incf	4,f
  6675  169A  0480               	iorwf	0,f
  6676  169B  3075               	movlw	low __div_to_l_@f2
  6677  169C  0A84               	incf	4,f
  6678  169D  0084               	movwf	4
  6679  169E  307F               	movlw	127
  6680  169F  0A84               	incf	4,f
  6681  16A0  0A84               	incf	4,f
  6682  16A1  0A84               	incf	4,f
  6683  16A2  0180               	clrf	0
  6684  16A3  01A8               	clrf	__div_to_l_@quot
  6685  16A4  01A9               	clrf	__div_to_l_@quot+1
  6686  16A5  01AA               	clrf	__div_to_l_@quot+2
  6687  16A6  01AB               	clrf	__div_to_l_@quot+3
  6688  16A7  02AD               	subwf	__div_to_l_@exp1,f
  6689  16A8  30A0               	movlw	160
  6690  16A9  072C               	addwf	__div_to_l_@cntr,w
  6691  16AA  00A0               	movwf	??__div_to_l_
  6692  16AB  02AD               	subwf	__div_to_l_@exp1,f
  6693  16AC  3020               	movlw	32
  6694  16AD  00AC               	movwf	__div_to_l_@cntr
  6695  16AE                     l6229:	
  6696  16AE  3075               	movlw	low __div_to_l_@f2
  6697  16AF  1003               	clrc
  6698  16B0  0DA8               	rlf	__div_to_l_@quot,f
  6699  16B1  0DA9               	rlf	__div_to_l_@quot+1,f
  6700  16B2  0DAA               	rlf	__div_to_l_@quot+2,f
  6701  16B3  0DAB               	rlf	__div_to_l_@quot+3,f
  6702  16B4  2720  160A  118A   	fcall	PL3	;call to abstracted procedure
  6703  16B7  3072               	movlw	low __div_to_l_@f1
  6704  16B8  0084               	movwf	4
  6705  16B9  0800               	movf	0,w
  6706  16BA  00A4               	movwf	??__div_to_l_+4
  6707  16BB  0A84               	incf	4,f
  6708  16BC  0800               	movf	0,w
  6709  16BD  00A5               	movwf	??__div_to_l_+5
  6710  16BE  0A84               	incf	4,f
  6711  16BF  0800               	movf	0,w
  6712  16C0  00A6               	movwf	??__div_to_l_+6
  6713  16C1  0A84               	incf	4,f
  6714  16C2  0800               	movf	0,w
  6715  16C3  00A7               	movwf	??__div_to_l_+7
  6716  16C4  0823               	movf	??__div_to_l_+3,w
  6717  16C5  0227               	subwf	??__div_to_l_+7,w
  6718  16C6  1D03               	skipz
  6719  16C7  2ED2               	goto	u2165
  6720  16C8  0822               	movf	??__div_to_l_+2,w
  6721  16C9  0226               	subwf	??__div_to_l_+6,w
  6722  16CA  1D03               	skipz
  6723  16CB  2ED2               	goto	u2165
  6724  16CC  0821               	movf	??__div_to_l_+1,w
  6725  16CD  0225               	subwf	??__div_to_l_+5,w
  6726  16CE  1D03               	skipz
  6727  16CF  2ED2               	goto	u2165
  6728  16D0  0820               	movf	??__div_to_l_,w
  6729  16D1  0224               	subwf	??__div_to_l_+4,w
  6730  16D2                     u2165:	
  6731  16D2  1C03               	skipc
  6732  16D3  2EEE               	goto	l3605
  6733  16D4  3075               	movlw	low __div_to_l_@f2
  6734  16D5  2720  160A  118A   	fcall	PL3	;call to abstracted procedure
  6735  16D8  3072               	movlw	low __div_to_l_@f1
  6736  16D9  0084               	movwf	4
  6737  16DA  0820               	movf	??__div_to_l_,w
  6738  16DB  0280               	subwf	0,f
  6739  16DC  0A84               	incf	4,f
  6740  16DD  0821               	movf	??__div_to_l_+1,w
  6741  16DE  1C03               	skipc
  6742  16DF  0F21               	incfsz	??__div_to_l_+1,w
  6743  16E0  0280               	subwf	0,f
  6744  16E1  0A84               	incf	4,f
  6745  16E2  0822               	movf	??__div_to_l_+2,w
  6746  16E3  1C03               	skipc
  6747  16E4  0F22               	incfsz	??__div_to_l_+2,w
  6748  16E5  0280               	subwf	0,f
  6749  16E6  0A84               	incf	4,f
  6750  16E7  0823               	movf	??__div_to_l_+3,w
  6751  16E8  1C03               	skipc
  6752  16E9  0A23               	incf	??__div_to_l_+3,w
  6753  16EA  0280               	subwf	0,f
  6754  16EB  3003               	movlw	3
  6755  16EC  0284               	subwf	4,f
  6756  16ED  1428               	bsf	__div_to_l_@quot,0
  6757  16EE                     l3605:	
  6758  16EE  3072               	movlw	low __div_to_l_@f1
  6759  16EF  0084               	movwf	4
  6760  16F0  1003               	clrc
  6761  16F1  0D80               	rlf	0,f
  6762  16F2  0A84               	incf	4,f
  6763  16F3  0D80               	rlf	0,f
  6764  16F4  0A84               	incf	4,f
  6765  16F5  0D80               	rlf	0,f
  6766  16F6  0A84               	incf	4,f
  6767  16F7  0D80               	rlf	0,f
  6768  16F8  0BAC               	decfsz	__div_to_l_@cntr,f
  6769  16F9  2EAE               	goto	l6229
  6770  16FA  1FAD               	btfss	__div_to_l_@exp1,7
  6771  16FB  2F09               	goto	l6247
  6772  16FC  082D               	movf	__div_to_l_@exp1,w
  6773  16FD  3A80               	xorlw	128
  6774  16FE  3E9F               	addlw	159
  6775  16FF  1C03               	btfss	3,0
  6776  1700  2E78               	goto	l6213
  6777  1701                     l6243:	
  6778  1701  1003               	clrc
  6779  1702  0CAB               	rrf	__div_to_l_@quot+3,f
  6780  1703  0CAA               	rrf	__div_to_l_@quot+2,f
  6781  1704  0CA9               	rrf	__div_to_l_@quot+1,f
  6782  1705  0CA8               	rrf	__div_to_l_@quot,f
  6783  1706  0FAD               	incfsz	__div_to_l_@exp1,f
  6784  1707  2F01               	goto	l6243
  6785  1708  2F17               	goto	l6253
  6786  1709                     l6247:	
  6787  1709  3020               	movlw	32
  6788  170A  022D               	subwf	__div_to_l_@exp1,w
  6789  170B  1803               	btfsc	3,0
  6790  170C  2E78               	goto	l6213
  6791  170D                     l3613:	
  6792  170D  08AD               	movf	__div_to_l_@exp1,f
  6793  170E  1903               	btfsc	3,2
  6794  170F  2F17               	goto	l6253
  6795  1710  1003               	clrc
  6796  1711  0DA8               	rlf	__div_to_l_@quot,f
  6797  1712  0DA9               	rlf	__div_to_l_@quot+1,f
  6798  1713  0DAA               	rlf	__div_to_l_@quot+2,f
  6799  1714  0DAB               	rlf	__div_to_l_@quot+3,f
  6800  1715  03AD               	decf	__div_to_l_@exp1,f
  6801  1716  2F0D               	goto	l3613
  6802  1717                     l6253:	
  6803  1717  082B               	movf	__div_to_l_@quot+3,w
  6804  1718  00F5               	movwf	?__div_to_l_+3
  6805  1719  082A               	movf	__div_to_l_@quot+2,w
  6806  171A  00F4               	movwf	?__div_to_l_+2
  6807  171B  0829               	movf	__div_to_l_@quot+1,w
  6808  171C  00F3               	movwf	?__div_to_l_+1
  6809  171D  0828               	movf	__div_to_l_@quot,w
  6810  171E  00F2               	movwf	?__div_to_l_
  6811  171F  0008               	return
  6812  1720                     __end_of__div_to_l_:	
  6813  1720                     PL3:	
  6814  1720  0084               	movwf	4
  6815  1721  0800               	movf	0,w
  6816  1722  00A0               	movwf	??__div_to_l_
  6817  1723  0A84               	incf	4,f
  6818  1724  0800               	movf	0,w
  6819  1725  00A1               	movwf	??__div_to_l_+1
  6820  1726  0A84               	incf	4,f
  6821  1727  0800               	movf	0,w
  6822  1728  00A2               	movwf	??__div_to_l_+2
  6823  1729  0A84               	incf	4,f
  6824  172A  0800               	movf	0,w
  6825  172B  00A3               	movwf	??__div_to_l_+3
  6826  172C  0008               	return
  6827                           
  6828                           	psect	text561
  6829  07C4                     __ptext561:	
  6830 ;; =============== function _isprint ends ============
  6831                           
  6832                           
  6833 ;; *************** function _abs *****************
  6834 ;; Defined at:
  6835 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\abs.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  a               2    2[COMMON] int 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;		None
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  2    2[COMMON] int 
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0
  6844 ;; Tracked objects:
  6845 ;;		On entry : 60/0
  6846 ;;		On exit  : 60/0
  6847 ;;		Unchanged: FFF9F/0
  6848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6849 ;;      Params:         2       0       0       0       0
  6850 ;;      Locals:         0       0       0       0       0
  6851 ;;      Temps:          2       0       0       0       0
  6852 ;;      Totals:         4       0       0       0       0
  6853 ;;Total ram usage:        4 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:    1
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_main
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862  07C4                     _abs:	
  6863                           
  6864                           ; Regs used in _abs: [wreg+status,2+status,0]
  6865  07C4  1FF3               	btfss	abs@a+1,7
  6866  07C5  0008               	return
  6867  07C6  0972               	comf	abs@a,w
  6868  07C7  00F4               	movwf	??_abs
  6869  07C8  0973               	comf	abs@a+1,w
  6870  07C9  00F5               	movwf	??_abs+1
  6871  07CA  0AF4               	incf	??_abs,f
  6872  07CB  1903               	skipnz
  6873  07CC  0AF5               	incf	??_abs+1,f
  6874  07CD  0874               	movf	??_abs,w
  6875  07CE  00F2               	movwf	?_abs
  6876  07CF  0875               	movf	??_abs+1,w
  6877  07D0  00F3               	movwf	?_abs+1
  6878  07D1  0008               	return
  6879  07D2                     __end_of_abs:	
  6880                           
  6881                           	psect	text562
  6882  079B                     __ptext562:	
  6883 ;; =============== function _abs ends ============
  6884                           
  6885                           
  6886 ;; *************** function _ngat *****************
  6887 ;; Defined at:
  6888 ;;		line 73 in file "D:\TTVXL\Project TTVXL\BT05week12ttvxl\BT05week12ttvxl.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;		None
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;		None               void
  6895 ;; Registers used:
  6896 ;;		wreg
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 60/0
  6900 ;;		Unchanged: FFF9F/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6902 ;;      Params:         0       0       0       0       0
  6903 ;;      Locals:         0       0       0       0       0
  6904 ;;      Temps:          2       0       0       0       0
  6905 ;;      Totals:         2       0       0       0       0
  6906 ;;Total ram usage:        2 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; This function calls:
  6909 ;;		Nothing
  6910 ;; This function is called by:
  6911 ;;		Interrupt level 1
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914  079B                     _ngat:	
  6915                           
  6916                           ;BT05week12ttvxl.c: 74: if(CCP1IF)
  6917  079B  1283               	bcf	3,5	;RP0=0, select bank0
  6918  079C  1303               	bcf	3,6	;RP1=0, select bank0
  6919  079D  1D0C               	btfss	12,2
  6920  079E  2FA3               	goto	i1l6131
  6921                           
  6922                           ;BT05week12ttvxl.c: 75: {
  6923                           ;BT05week12ttvxl.c: 76: count1=CCPR1;
  6924  079F  0816               	movf	22,w	;volatile
  6925  07A0  00EA               	movwf	_count1+1	;volatile
  6926  07A1  0815               	movf	21,w	;volatile
  6927  07A2  00E9               	movwf	_count1	;volatile
  6928  07A3                     i1l6131:	
  6929                           
  6930                           ;BT05week12ttvxl.c: 77: }
  6931                           ;BT05week12ttvxl.c: 78: if(CCP2IF)
  6932  07A3  1C0D               	btfss	13,0
  6933  07A4  2FA9               	goto	i1l6135
  6934                           
  6935                           ;BT05week12ttvxl.c: 79: {
  6936                           ;BT05week12ttvxl.c: 80: count2=CCPR2;
  6937  07A5  081C               	movf	28,w	;volatile
  6938  07A6  00EC               	movwf	_count2+1	;volatile
  6939  07A7  081B               	movf	27,w	;volatile
  6940  07A8  00EB               	movwf	_count2	;volatile
  6941  07A9                     i1l6135:	
  6942                           
  6943                           ;BT05week12ttvxl.c: 81: }
  6944                           ;BT05week12ttvxl.c: 82: CCP1IF = 0;
  6945  07A9  110C               	bcf	12,2
  6946                           
  6947                           ;BT05week12ttvxl.c: 83: CCP2IF = 0;
  6948  07AA  100D               	bcf	13,0
  6949  07AB  0871               	movf	??_ngat+1,w
  6950  07AC  008A               	movwf	10
  6951  07AD  0E70               	swapf	??_ngat^(0+-128),w
  6952  07AE  0083               	movwf	3
  6953  07AF  0EFE               	swapf	126,f
  6954  07B0  0E7E               	swapf	126,w
  6955  07B1  0009               	retfie
  6956  07B2                     __end_of_ngat:	
  6957                           
  6958                           	psect	intentry
  6959  0004                     __pintentry:	
  6960                           ; Regs used in _ngat: [wreg]
  6961                           
  6962  0004                     interrupt_function:	
  6963  007E                     saved_w	set	btemp
  6964  0004  00FE               	movwf	btemp
  6965  0005  0E03               	swapf	3,w
  6966  0006  00F0               	movwf	??_ngat
  6967  0007  080A               	movf	10,w
  6968  0008  00F1               	movwf	??_ngat+1
  6969  0009  120A  118A  2F9B   	ljmp	_ngat
  6970                           
  6971                           	psect	text563
  6972  0000                     __ptext563:	
  6973 ;; =============== function _ngat ends ============
  6974                           
  6975  007E                     btemp	set	126	;btemp
  6976  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 02 13:41:42 2022

         ___altoft@exp 007A                      _d 0066                      _t 006D                      pc 0002  
       ___bmul@product 0020          ___altoft@sign 007B           ___awdiv@sign 0021                     fsr 0004  
  ___wmul@multiplicand 0074           ___ftadd@exp1 004B           ___ftadd@exp2 004A          ?_lcd_put_byte 0072  
         ___ftadd@sign 0049                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RE1 0049                    _RD3 0043                    _RD4 0044                    _RD5 0045  
                  _RD6 0046                    _RD7 0047                    _abs 07C4                    fsr0 0004  
                  indf 0000           ___awmod@sign 0077                   ?_abs 0072                   l1071 0000  
                 l2132 0000                   l2214 002D                   l2143 0000                   l2135 0000  
                 l2308 054C                   l2229 00A1                   l3302 0000                   l2166 0000  
                 l3312 0000                   l2274 0374                   l3318 0000                   l3432 061C  
                 l3345 0A78                   l3354 0000                   l3348 0000                   l3613 170D  
                 l3605 16EE                   l3533 0000                   l3606 0000                   l3376 0921  
                 l6121 0000                   l3297 0000                   l6201 06E7                   l3465 0000  
                 l3570 06EB                   l3563 0000                   l6211 0000                   l3475 0000  
                 l3547 0000                   l3555 0000                   l7011 01FC                   l6141 0000  
                 l6221 0000                   l6213 1678                   l7101 0000                   l7021 0000  
                 l3494 0000                   l3398 0000                   l6151 0000                   l6207 06F5  
                 l6231 0000                   l6223 0000                   l6215 167D                   l6303 0000  
                 l3479 0000                   l7103 0000                   l7023 022C                   l7007 01EB  
                 l6153 0000                   l6225 0000                   l6321 0000                   l6313 0000  
                 l7121 0000                   l7041 02A5                   l7033 0271                   l7025 0000  
                 l7017 0000                   l7201 0000                   l6147 0C7E                   l6139 0000  
                 l6171 0000                   l6163 0000                   l6243 1701                   l6235 0000  
                 l6227 0000                   l6307 0000                   l6315 0000                   l6331 0000  
                 l6411 0E7D                   l6403 0000                   l7131 048F                   l7123 0463  
                 l7115 042F                   l7051 02D6                   l7043 0000                   l7027 026F  
                 l7019 0000                   l7211 0000                   l7203 0000                   l6181 06B6  
                 l6173 0000                   l6165 0694                   l6253 1717                   l6245 0000  
                 l6237 0000                   l6229 16AE                   l6309 0A85                   l6325 0A9F  
                 l6317 0A8B                   l6341 0F7A                   l6333 0000                   l6421 0E8B  
                 l6413 0000                   l6405 0E74                   l6501 0000                   l7109 042D  
                 l7061 02EE                   l7221 0000                   l7213 0000                   l7205 0000  
                 l6159 05C7                   l6191 0000                   l6183 0000                   l6175 0000  
                 l6167 0699                   l6247 1709                   l6327 0000                   l6319 0000  
                 l6343 0F7F                   l6335 0F71                   l6431 0000                   l6423 0000  
                 l6511 067D                   l7151 04D8                   l7143 04B6                   l7127 0477  
                 l7071 0309                   l7063 0000                   l7055 02D9                   l7047 02CE  
                 l7039 0000                   l7231 0000                   l7223 0000                   l7215 0000  
                 l7207 0000                   l6177 0000                   l6265 0000                   l6257 0000  
                 l6281 0000                   l6273 0000                   l6353 0000                   l6345 0F89  
                 l6361 05EC                   l6433 0EA2                   l6409 0000                   l6441 0000  
                 l6505 0000                   l6521 0000                   l6601 0000                   l7161 0000  
                 l7145 04B9                   l7137 049C                   l7081 034E                   l7073 0335  
                 l7057 0000                   l7065 02F7                   l7233 0000                   l7225 0000  
                 l7217 0000                   l7209 0000                   l6187 0000                   l6179 0000  
                 l6267 0000                   l6259 0F5D                   l6283 0000                   l6275 05CB  
                 l6291 0000                   l6355 0000                   l6347 0F8E                   l6339 0F75  
                 l6371 0000                   l6363 05F1                   l6435 0000                   l6427 0000  
                 l6523 0EB9                   l6515 0000                   l6603 0000                   l7163 04F1  
                 l7059 02E2                   l7235 0000                   l7227 0000                   l7219 0000  
                 l6197 06DF                   l6293 0000                   l6357 0000                   l6349 0F93  
                 l6381 0000                   l6373 0000                   l6365 0000                   l6437 0EAA  
                 l6461 0000                   l6509 0000                   l6541 0000                   l6517 0000  
                 l6621 0000                   l6613 08CF                   l6605 0000                   l6701 0000  
                 l7165 04F5                   l7157 04E2                   l7149 04D5                   l7085 035D  
                 l7077 0000                   l7237 0000                   l7229 1757                   l7181 0000  
                 l6199 0000                   l6279 05D3                   l6295 0A72                   l6391 0000  
                 l6383 0618                   l6367 0000                   l6359 0000                   l6455 0000  
                 l6535 0ECC                   l6543 0EDF                   l6527 0EC0                   l6551 0000  
                 l6631 08EC                   l6615 0000                   l6703 0000                   l7167 0000  
                 l7175 050A                   l7095 0000                   l7087 0000                   l7079 0339  
                 l7239 0000                   l7191 0000                   l7183 0000                   l6289 0000  
                 l6393 0634                   l6369 0000                   l6449 0561                   l6457 0586  
                 l6481 0000                   l6473 059E                   l6545 0000                   l6561 0000  
                 l6553 0000                   l6633 0000                   l6641 0905                   l6609 08C8  
                 l6721 0F35                   l6713 0F29                   l6705 0000                   l6801 0000  
                 l7169 0502                   l7097 0401                   l7089 0396                   l7177 0013  
                 l7193 0000                   l7185 0000                   l6299 0000                   l6379 0610  
                 l6491 0000                   l6547 0EE7                   l6571 0000                   l6563 0000  
                 l6555 0000                   l6651 091D                   l6643 0909                   l6627 0000  
                 l6619 08DE                   l6731 0000                   l6715 0000                   l6707 0000  
                 l6803 0AC0                   l6811 0000                   l7099 040F                   l7195 0000  
                 l7187 0000                   l7179 0000                   l6389 0626                   l6397 0000  
                 l6477 05AD                   l6469 0000                   l6581 0C33                   l6573 0000  
                 l6565 0BE0                   l6661 0000                   l6645 0000                   l6637 08FB  
                 l6629 0000                   l6725 0F3F                   l6717 0000                   l6709 0F1F  
                 l6805 0AC1                   l6821 09F2                   l7197 0000                   l7189 0000  
                 l6399 0000                   l6479 0000                   l6583 0000                   l6575 0000  
                 l6567 0BED                   l6559 0000                   l6591 0000                   l6671 0000  
                 l6663 0937                   l6655 0000                   l6639 0900                   l6727 0000  
                 l6719 0000                   l6735 0000                   l6751 0000                   l6807 0000  
                 l6815 0000                   l6911 002F                   l7199 0000                   l6489 0000  
                 l6585 0000                   l6577 0C1B                   l6569 0BF8                   l6593 0000  
                 l6673 0000                   l6665 0000                   l6657 092C                   l6649 0918  
                 l6729 0000                   l6745 0CBA                   l6737 0000                   l6761 0000  
                 l6809 0ACA                   l6825 0000                   l6833 0000                   l6921 0000  
                 l6913 003A                   l6905 0028                   l6499 0652                   l6579 0C26  
                 l6595 0000                   l6587 0000                   l6675 0953                   l6667 0000  
                 l6691 0F0E                   l6747 0CC5                   l6739 0000                   l6755 0C8C  
                 l6771 0000                   l6763 0000                   l6851 0D8C                   l6923 006A  
                 l6907 0000                   l6597 0000                   l6589 0000                   l6693 0000  
                 l6685 0EFD                   l6757 0C97                   l6781 0B84                   l6773 0B6C  
                 l6765 0000                   l6829 0A46                   l6845 0D47                   l6837 0000  
                 l6941 00A3                   l6933 0000                   l6917 0048                   l6695 0000  
                 l6679 0000                   l6767 0000                   l6863 0E0D                   l6855 0DA3  
                 l6935 0078                   l6927 0000                   l6919 0000                   l6697 0000  
                 l6793 0BA8                   l6785 0B90                   l6777 0B78                   l6769 0000  
                 l6873 0000                   l6881 0AD3                   l6961 0000                   l6953 00C9  
                 l6945 00A6                   l6929 0000                   l6937 009D                   l6699 0000  
                 l6875 0000                   l6891 0AF0                   l6883 0AD9                   l6971 0000  
                 l6963 00F5                   l6955 0000                   l6947 00B9                   l6939 0000  
                 l6797 0BB4                   l6789 0B9C                   l6869 0E52                   l6885 0AE0  
                 l6973 0000                   l6965 0000                   l6957 0000                   l6799 0000  
                 l6887 0AE4                   l6895 0AF7                   l6879 0000                   l6991 017C  
                 l6983 0143                   l6975 0000                   l6897 0000                   l6985 0000  
                 l6977 0000                   l6969 0000                   l6987 0000                   l6979 0000  
                 l6995 018C                   l6899 0000                   l6999 01C0                   STR_1 107C  
                 STR_2 1087                   u2075 06C5                   u2420 0000                   u2165 16D2  
                 u4007 0B4B                   u2425 05F5                   u4017 0B58                   u4107 0C0C  
                 u4027 0B65                   u4117 0C40                   u4037 0C56                   u3510 0000  
                 u2535 0E94                   u4127 0C46                   u4047 0C5C                   u2800 0BF6  
                 u4057 0C66                   u4067 0C6C                   u3515 0108                   u2900 0C3C  
                 u2820 0C02                   u2725 0ED2                   u4077 0BC9                   u4087 0BCF  
                 u3615 029E                   u2840 0C19                   u2760 0BDE                   u2585 056F  
                 u2665 0665                   u4097 0C06                   u3705 0342                   u2914 0C3E  
                 u2834 0C04                   u3715 0358                   u3555 0195                   _PEIE 005E  
                 u2860 0C24                   u2780 0BEB                   u3805 0487                   u3565 01CA  
                 u2880 0C31                   u3665 02EB                   u3675 0300                   u3595 01E9  
                 u3845 04AC                   u3855 04C7                   u3775 045C                   u3795 0471  
                 u3957 175E                   u3967 176C                   u3977 0B12                   u3987 0B25  
                 u3997 0B38                   abs@a 0072                   _main 172D                   _ngat 079B  
         ___ftpack@arg 0072           ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E  
                 _xung 0062                   start 000C      ___bmul@multiplier 0021           ___ftmul@cntr 003E  
         ___ftmul@sign 003F           ___fttol@exp1 0030                  ??_abs 0074           ___fttol@lval 002C  
       ??_lcd_put_byte 0073                  ?_main 0070                  ?_ngat 0070        __end_of___awdiv 0EAF  
      __end_of___lbdiv 0A87        __end_of___ftadd 0967                  _CCPR1 0015                  _CCPR2 001B  
      __end_of___awmod 0EEC        __end_of___lbmod 0AA3        __end_of___ftneg 0706                  _ANSEL 0188  
      __end_of___lldiv 0686        __end_of___ftmul 0F5B        ___awdiv@divisor 0078        __end_of___llmod 058F  
      __end_of___ftsub 08A5        __end_of___fttol 063D        ___awdiv@counter 0020                  _TMR1H 000F  
                _TMR1L 000E                  _TRISD 0088           ___lltoft@exp 007A                  _scale 0CD7  
      __end_of_isdigit 05C9          ___ftpack@sign 0076                  _putch 054D        __end_of_isprint 0C80  
                pclath 000A                  status 0003                  wtemp0 007E        ___lbdiv@divisor 0077  
      ___lbdiv@counter 0079           __end_of_main 1800           __end_of_ngat 07B2          lcd_gotoxy@col 0078  
        lcd_gotoxy@row 0077                 ??_main 005F          ___fttol@sign1 002B                 ??_ngat 0070  
 __size_of__tdiv_to_l_ 0078                 _CCP1IE 0462                 _CCP1IF 0062                 _CCP2IE 0468  
               _CCP2IF 0068       __end_of___altoft 0CD7       ___llmod@dividend 0029                 ?_scale 0040  
     ___awdiv@dividend 007A                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lltoft 0CA8                 i1l1076 0000                 i1l6131 07A3                 _T1SYNC 0082  
               i1l6135 07A9                 i1l6127 0000                 i1l6137 0000                 _TMR1GE 0086  
               _TMR1CS 0081                 _TMR1ON 0080                 _TRISA4 042C                 _TRISC1 0439  
               _TRISC2 043A                 _TRISD1 0441                 _TRISE0 0448                 _TRISD2 0442  
               _TRISE1 0449                 _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445  
               _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C72       __end_of_lcd_init 0BBB  
     __end_of_lcd_putc 0B00                 ___bmul 0F5B                 ___ftge 058F                 ___wmul 05C9  
            ??___awdiv 007C              ??___lbdiv 0078              ??___ftadd 0046              ??___awmod 0076  
            ??___lbmod 0073              ??___ftneg 0075              ??___lldiv 007A              ??___ftmul 0037  
            ??___llmod 007A              ??___ftsub 007C              ??___fttol 0028                 _count1 0069  
               _count2 006B                 _fround 0967       ___awdiv@quotient 0022        ___awmod@divisor 0072  
      ___awmod@counter 0076                 _printf 000F          lcd_put_byte@b 0072  ___ftmul@f3_as_product 003B  
            ??_isdigit 0072                 saved_w 007E              ??_isprint 0072                 putch@c 007B  
     ___lbdiv@dividend 0078        ___lbmod@divisor 0072             ___altoft@c 0020        ___lbmod@counter 0075  
 __end_of_lcd_put_byte 0C4B             ___ftadd@f1 0040             ___ftadd@f2 0043             ___ftge@ff1 0072  
           ___ftge@ff2 0075             ___ftneg@f1 0072    ___bmul@multiplicand 007B             ___ftmul@f1 0031  
           ___ftmul@f2 0034             ___ftsub@f1 004F             ___ftsub@f2 004C             ___fttol@f1 0024  
       __pcstackCOMMON 0070             ___lltoft@c 0020          __end_of_scale 0E69          __end_of_putch 0551  
     ___lbdiv@quotient 007A             __div_to_l_ 1662      lcd_gotoxy@address 0079        __div_to_l_@exp1 002D  
      __div_to_l_@cntr 002C                ??_scale 0043        __div_to_l_@quot 0028                ??_putch 007B  
           __pbssBANK0 0062          __div_to_l_@f1 0072          __div_to_l_@f2 0075             __pmaintext 172D  
              ?___bmul 007B                ?___ftge 0072                ?___wmul 0072             __pintentry 0004  
              _CCP1CON 0017                _CCP2CON 001D              ?___altoft 0020                ?_fround 004C  
            ?___ftpack 0072                ?_printf 0056              ?___lltoft 0020                _T1CKPS0 0084  
              _T1CKPS1 0085             _lcd_gotoxy 0AB9              ?_lcd_busy 0070              ?_lcd_init 0070  
            ?_lcd_putc 0070             _scale$4124 0047        __size_of___bmul 000E        __size_of___ftge 002C  
              ___awdiv 0E69                ___lbdiv 0A6C                ___ftadd 08A5                ___awmod 0EAF  
              ___lbmod 0A87                ___ftneg 06FE                ___lldiv 063D        __size_of___wmul 0019  
              ___ftmul 0EEC                ___llmod 0551                ___ftsub 088F                ___fttol 05E2  
           ??___altoft 007A             ??___ftpack 0077        __size_of_fround 0105             ??___lltoft 007A  
      __size_of_printf 053E            ?__div_to_l_ 0072                _dpowers 1054           __size_of_abs 000E  
              _isdigit 05BB       ___awmod@dividend 0074                _isprint 0C72  __size_of_lcd_put_byte 0090  
           ??_lcd_busy 0072             ??_lcd_init 0077             ??_lcd_putc 007A   end_of_initialization 07C0  
       lcd_put_byte@rs 0075        ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8  
              printf@f 00AC         __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0078  
         _lcd_put_byte 0BBB       ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076  
          printf@integ 00A5            printf@width 00B1    __size_of__div_to_l_ 00BE            ___ftmul@exp 003A  
       __end_of___bmul 0F69         __end_of___ftge 05BB         __end_of___wmul 05E2         __end_of_fround 0A6C  
       __end_of_printf 054D    start_initialization 07B2    __end_of__tdiv_to_l_ 06FE            __end_of_abs 07D2  
      ___llmod@divisor 0025        ___llmod@counter 007A               ??___bmul 007C               ??___ftge 0078  
  __size_of_lcd_gotoxy 0018               ??___wmul 0076               ??_fround 007C               ??_printf 005A  
    __size_of___altoft 002F             fround@prec 0055      __size_of___ftpack 003E      __size_of___lltoft 001E  
        __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3685 0072      __size_of_lcd_busy 0027  
    __size_of_lcd_init 00BB      __size_of_lcd_putc 002F               ?___awdiv 0078               ?___lbdiv 0077  
             ?___ftadd 0040              __ptext531 000F               ?___awmod 0072              __ptext540 0CA8  
            __ptext532 054D              __ptext541 0EEC              __ptext533 0AD1              __ptext550 0E69  
            __ptext542 08A5              __ptext534 088F              __ptext551 05E2              __ptext543 0C4B  
            __ptext535 0CD7              __ptext560 0C72              __ptext552 0F69              __ptext544 0BBB  
            __ptext536 0967              __ptext561 07C4              __ptext553 0A87              __ptext545 0EAF  
            __ptext537 0AB9              __ptext562 079B              __ptext554 0A6C              __ptext546 063D  
            __ptext538 0B00              __ptext563 0000              __ptext555 05C9              __ptext547 058F  
            __ptext539 0C8A               ?___lbmod 0072              __ptext556 0F5B              __ptext548 06FE  
            __ptext557 1662              __ptext549 0551              __ptext558 0686              __ptext559 05BB  
             ?___ftneg 0072               ?___lldiv 0072               ?___ftmul 0031               ?___llmod 0025  
             ?___ftsub 004C              __npowers_ 1006               ?___fttol 0024              __pstrings 1000  
          __tdiv_to_l_ 0686           ??__div_to_l_ 0020               ?_isdigit 0070               ?_isprint 0070  
       __size_of_scale 0192         __size_of_putch 0004      interrupt_function 0004         ___wmul@product 0076  
   __end_of__div_to_l_ 1720            __stringbase 1005      ___wmul@multiplier 0072             printf@_val 00A8  
           printf@flag 00AD             printf@fval 00B3             printf@prec 00B6              lcd_putc@c 007A  
         ??_lcd_gotoxy 0078       lcd_put_byte@temp 0076           _isprint$3688 0072     __end_of_lcd_gotoxy 0AD1  
     __size_of___awdiv 0046       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0049               ___altoft 0CA8  
     __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B  
             ___ftpack 0F69            _fround$4122 0052            _fround$4123 004F               ___lltoft 0C8A  
     __size_of_isdigit 000E       __size_of_isprint 000E               __powers_ 102D               _lcd_busy 0C4B  
             _lcd_init 0B00               _lcd_putc 0AD1          __size_of_main 00D3          __size_of_ngat 0017  
            printf@exp 00AF               isdigit@c 0073               scale@scl 004A               intlevel1 0000  
     __tdiv_to_l_@exp1 0025       __tdiv_to_l_@cntr 0024       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0076  
             isprint@c 0073              stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0072  
          _printf$3175 00A0       ___lldiv@quotient 0020               stringdir 1000               stringtab 1000  
