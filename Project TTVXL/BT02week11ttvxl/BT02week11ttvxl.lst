

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Nov 05 17:15:16 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,delta=2
    15                           	psect	text690,local,class=CODE,delta=2
    16                           	psect	text695,local,class=CODE,delta=2
    17                           	psect	text696,local,class=CODE,delta=2
    18                           	psect	text699,local,class=CODE,delta=2
    19                           	psect	text707,local,class=CODE,delta=2
    20                           	psect	text722,local,class=CODE,delta=2
    21                           	psect	text726,local,class=CODE,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text729,local,class=CODE,delta=2
    24                           	psect	pa_nodes,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  000A                     	;#
    27                           
    28                           	psect	config
    29  2007  E3C2               	dw	58306	;#
    30                           
    31                           	psect	strings
    32  1000                     __pstrings:	
    33  1000                     stringtab:	
    34                           ;	global	stringdir,stringtab,__stringbase
    35                           
    36  1000                     stringcode:	
    37                           ;	String table - string pointers are 1 byte each
    38                           
    39  1000                     stringdir:	
    40  1000  3010               	movlw	high stringdir
    41  1001  008A               	movwf	10
    42  1002  0804               	movf	4,w
    43  1003  0A84               	incf	4,f
    44  1004  0782               	addwf	2,f
    45  1005                     __stringbase:	
    46  1005  3400               	retlw	0
    47  1006                     __npowers_:	
    48  1006  3400               	retlw	0
    49  1007  3480               	retlw	128
    50  1008  343F               	retlw	63
    51  1009  34CD               	retlw	205
    52  100A  34CC               	retlw	204
    53  100B  343D               	retlw	61
    54  100C  34D7               	retlw	215
    55  100D  3423               	retlw	35
    56  100E  343C               	retlw	60
    57  100F  3412               	retlw	18
    58  1010  3483               	retlw	131
    59  1011  343A               	retlw	58
    60  1012  34B7               	retlw	183
    61  1013  34D1               	retlw	209
    62  1014  3438               	retlw	56
    63  1015  34C6               	retlw	198
    64  1016  3427               	retlw	39
    65  1017  3437               	retlw	55
    66  1018  3438               	retlw	56
    67  1019  3486               	retlw	134
    68  101A  3435               	retlw	53
    69  101B  34C0               	retlw	192
    70  101C  34D6               	retlw	214
    71  101D  3433               	retlw	51
    72  101E  34CC               	retlw	204
    73  101F  342B               	retlw	43
    74  1020  3432               	retlw	50
    75  1021  3470               	retlw	112
    76  1022  3489               	retlw	137
    77  1023  3430               	retlw	48
    78  1024  34E7               	retlw	231
    79  1025  34DB               	retlw	219
    80  1026  342E               	retlw	46
    81  1027  34E5               	retlw	229
    82  1028  343C               	retlw	60
    83  1029  341E               	retlw	30
    84  102A  3442               	retlw	66
    85  102B  34A2               	retlw	162
    86  102C  340D               	retlw	13
    87  102D                     __powers_:	
    88  102D  3400               	retlw	0
    89  102E  3480               	retlw	128
    90  102F  343F               	retlw	63
    91  1030  3400               	retlw	0
    92  1031  3420               	retlw	32
    93  1032  3441               	retlw	65
    94  1033  3400               	retlw	0
    95  1034  34C8               	retlw	200
    96  1035  3442               	retlw	66
    97  1036  3400               	retlw	0
    98  1037  347A               	retlw	122
    99  1038  3444               	retlw	68
   100  1039  3440               	retlw	64
   101  103A  341C               	retlw	28
   102  103B  3446               	retlw	70
   103  103C  3450               	retlw	80
   104  103D  34C3               	retlw	195
   105  103E  3447               	retlw	71
   106  103F  3424               	retlw	36
   107  1040  3474               	retlw	116
   108  1041  3449               	retlw	73
   109  1042  3497               	retlw	151
   110  1043  3418               	retlw	24
   111  1044  344B               	retlw	75
   112  1045  34BC               	retlw	188
   113  1046  34BE               	retlw	190
   114  1047  344C               	retlw	76
   115  1048  346B               	retlw	107
   116  1049  346E               	retlw	110
   117  104A  344E               	retlw	78
   118  104B  3403               	retlw	3
   119  104C  3415               	retlw	21
   120  104D  3450               	retlw	80
   121  104E  3479               	retlw	121
   122  104F  34AD               	retlw	173
   123  1050  3460               	retlw	96
   124  1051  34F3               	retlw	243
   125  1052  3449               	retlw	73
   126  1053  3471               	retlw	113
   127  1054                     _dpowers:	
   128  1054  3401               	retlw	1
   129  1055  3400               	retlw	0
   130  1056  3400               	retlw	0
   131  1057  3400               	retlw	0
   132  1058  340A               	retlw	10
   133  1059  3400               	retlw	0
   134  105A  3400               	retlw	0
   135  105B  3400               	retlw	0
   136  105C  3464               	retlw	100
   137  105D  3400               	retlw	0
   138  105E  3400               	retlw	0
   139  105F  3400               	retlw	0
   140  1060  34E8               	retlw	232
   141  1061  3403               	retlw	3
   142  1062  3400               	retlw	0
   143  1063  3400               	retlw	0
   144  1064  3410               	retlw	16
   145  1065  3427               	retlw	39
   146  1066  3400               	retlw	0
   147  1067  3400               	retlw	0
   148  1068  34A0               	retlw	160
   149  1069  3486               	retlw	134
   150  106A  3401               	retlw	1
   151  106B  3400               	retlw	0
   152  106C  3440               	retlw	64
   153  106D  3442               	retlw	66
   154  106E  340F               	retlw	15
   155  106F  3400               	retlw	0
   156  1070  3480               	retlw	128
   157  1071  3496               	retlw	150
   158  1072  3498               	retlw	152
   159  1073  3400               	retlw	0
   160  1074  3400               	retlw	0
   161  1075  34E1               	retlw	225
   162  1076  34F5               	retlw	245
   163  1077  3405               	retlw	5
   164  1078  3400               	retlw	0
   165  1079  34CA               	retlw	202
   166  107A  349A               	retlw	154
   167  107B  343B               	retlw	59
   168  001E                     _ADRESH	set	30
   169  00FE                     _ADCS0	set	254
   170  00FF                     _ADCS1	set	255
   171  00F8                     _ADON	set	248
   172  00FA                     _CHS0	set	250
   173  00FB                     _CHS1	set	251
   174  00FC                     _CHS2	set	252
   175  00FD                     _CHS3	set	253
   176  005F                     _GIE	set	95
   177  00F9                     _GO_nDONE	set	249
   178  0030                     _RB0	set	48
   179  0031                     _RB1	set	49
   180  0032                     _RB2	set	50
   181  0033                     _RB3	set	51
   182  0034                     _RB4	set	52
   183  005B                     _RBIE	set	91
   184  0058                     _RBIF	set	88
   185  0041                     _RD1	set	65
   186  0042                     _RD2	set	66
   187  0043                     _RD3	set	67
   188  0044                     _RD4	set	68
   189  0045                     _RD5	set	69
   190  0046                     _RD6	set	70
   191  0047                     _RD7	set	71
   192  0096                     _IOCB	set	150
   193  0086                     _TRISB	set	134
   194  0088                     _TRISD	set	136
   195  04FF                     _ADFM	set	1279
   196  0428                     _TRISA0	set	1064
   197  0429                     _TRISA1	set	1065
   198  042A                     _TRISA2	set	1066
   199  042B                     _TRISA3	set	1067
   200  0441                     _TRISD1	set	1089
   201  0442                     _TRISD2	set	1090
   202  0443                     _TRISD3	set	1091
   203  0444                     _TRISD4	set	1092
   204  0445                     _TRISD5	set	1093
   205  0446                     _TRISD6	set	1094
   206  0447                     _TRISD7	set	1095
   207  0448                     _TRISE0	set	1096
   208  04FC                     _VCFG0	set	1276
   209  04FD                     _VCFG1	set	1277
   210  0188                     _ANSEL	set	392
   211  0189                     _ANSELH	set	393
   212  0C40                     _ANS0	set	3136
   213  0C41                     _ANS1	set	3137
   214  0C42                     _ANS2	set	3138
   215  0C43                     _ANS3	set	3139
   216  0C45                     _ANS5	set	3141
   217  107C                     STR_2:	
   218  107C  344E               	retlw	78	;'N'
   219  107D  3467               	retlw	103	;'g'
   220  107E  3475               	retlw	117	;'u'
   221  107F  3479               	retlw	121	;'y'
   222  1080  3465               	retlw	101	;'e'
   223  1081  346E               	retlw	110	;'n'
   224  1082  3420               	retlw	32	;' '
   225  1083  3450               	retlw	80	;'P'
   226  1084  3468               	retlw	104	;'h'
   227  1085  3475               	retlw	117	;'u'
   228  1086  3463               	retlw	99	;'c'
   229  1087  3420               	retlw	32	;' '
   230  1088  3444               	retlw	68	;'D'
   231  1089  3475               	retlw	117	;'u'
   232  108A  346E               	retlw	110	;'n'
   233  108B  3467               	retlw	103	;'g'
   234  108C  3400               	retlw	0
   235  108D                     STR_3:	
   236  108D  344E               	retlw	78	;'N'
   237  108E  3468               	retlw	104	;'h'
   238  108F  3469               	retlw	105	;'i'
   239  1090  3465               	retlw	101	;'e'
   240  1091  3474               	retlw	116	;'t'
   241  1092  3420               	retlw	32	;' '
   242  1093  3444               	retlw	68	;'D'
   243  1094  346F               	retlw	111	;'o'
   244  1095  3420               	retlw	32	;' '
   245  1096  3452               	retlw	82	;'R'
   246  1097  346F               	retlw	111	;'o'
   247  1098  346F               	retlw	111	;'o'
   248  1099  346D               	retlw	109	;'m'
   249  109A  3420               	retlw	32	;' '
   250  109B  3431               	retlw	49	;'1'
   251  109C  3400               	retlw	0
   252  109D                     STR_5:	
   253  109D  344E               	retlw	78	;'N'
   254  109E  3468               	retlw	104	;'h'
   255  109F  3469               	retlw	105	;'i'
   256  10A0  3465               	retlw	101	;'e'
   257  10A1  3474               	retlw	116	;'t'
   258  10A2  3420               	retlw	32	;' '
   259  10A3  3444               	retlw	68	;'D'
   260  10A4  346F               	retlw	111	;'o'
   261  10A5  3420               	retlw	32	;' '
   262  10A6  3452               	retlw	82	;'R'
   263  10A7  346F               	retlw	111	;'o'
   264  10A8  346F               	retlw	111	;'o'
   265  10A9  346D               	retlw	109	;'m'
   266  10AA  3420               	retlw	32	;' '
   267  10AB  3432               	retlw	50	;'2'
   268  10AC  3400               	retlw	0
   269  10AD                     STR_7:	
   270  10AD  344E               	retlw	78	;'N'
   271  10AE  3468               	retlw	104	;'h'
   272  10AF  3469               	retlw	105	;'i'
   273  10B0  3465               	retlw	101	;'e'
   274  10B1  3474               	retlw	116	;'t'
   275  10B2  3420               	retlw	32	;' '
   276  10B3  3444               	retlw	68	;'D'
   277  10B4  346F               	retlw	111	;'o'
   278  10B5  3420               	retlw	32	;' '
   279  10B6  3452               	retlw	82	;'R'
   280  10B7  346F               	retlw	111	;'o'
   281  10B8  346F               	retlw	111	;'o'
   282  10B9  346D               	retlw	109	;'m'
   283  10BA  3420               	retlw	32	;' '
   284  10BB  3433               	retlw	51	;'3'
   285  10BC  3400               	retlw	0
   286  10BD                     STR_9:	
   287  10BD  344E               	retlw	78	;'N'
   288  10BE  3468               	retlw	104	;'h'
   289  10BF  3469               	retlw	105	;'i'
   290  10C0  3465               	retlw	101	;'e'
   291  10C1  3474               	retlw	116	;'t'
   292  10C2  3420               	retlw	32	;' '
   293  10C3  3444               	retlw	68	;'D'
   294  10C4  346F               	retlw	111	;'o'
   295  10C5  3420               	retlw	32	;' '
   296  10C6  3452               	retlw	82	;'R'
   297  10C7  346F               	retlw	111	;'o'
   298  10C8  346F               	retlw	111	;'o'
   299  10C9  346D               	retlw	109	;'m'
   300  10CA  3420               	retlw	32	;' '
   301  10CB  3434               	retlw	52	;'4'
   302  10CC  3400               	retlw	0
   303  10CD                     STR_11:	
   304  10CD  344E               	retlw	78	;'N'
   305  10CE  3468               	retlw	104	;'h'
   306  10CF  3469               	retlw	105	;'i'
   307  10D0  3465               	retlw	101	;'e'
   308  10D1  3474               	retlw	116	;'t'
   309  10D2  3420               	retlw	32	;' '
   310  10D3  3444               	retlw	68	;'D'
   311  10D4  346F               	retlw	111	;'o'
   312  10D5  3420               	retlw	32	;' '
   313  10D6  3452               	retlw	82	;'R'
   314  10D7  346F               	retlw	111	;'o'
   315  10D8  346F               	retlw	111	;'o'
   316  10D9  346D               	retlw	109	;'m'
   317  10DA  3420               	retlw	32	;' '
   318  10DB  3435               	retlw	53	;'5'
   319  10DC  3400               	retlw	0
   320  10DD                     STR_4:	
   321  10DD  3447               	retlw	71	;'G'
   322  10DE  3469               	retlw	105	;'i'
   323  10DF  3461               	retlw	97	;'a'
   324  10E0  3420               	retlw	32	;' '
   325  10E1  3474               	retlw	116	;'t'
   326  10E2  3472               	retlw	114	;'r'
   327  10E3  3469               	retlw	105	;'i'
   328  10E4  343A               	retlw	58	;':'
   329  10E5  3420               	retlw	32	;' '
   330  10E6  3425               	retlw	37	;'%'
   331  10E7  3433               	retlw	51	;'3'
   332  10E8  342E               	retlw	46	;'.'
   333  10E9  3431               	retlw	49	;'1'
   334  10EA  3466               	retlw	102	;'f'
   335  10EB  3400               	retlw	0
   336  10EC                     STR_1:	
   337  10EC  3457               	retlw	87	;'W'
   338  10ED  3445               	retlw	69	;'E'
   339  10EE  344C               	retlw	76	;'L'
   340  10EF  3443               	retlw	67	;'C'
   341  10F0  344F               	retlw	79	;'O'
   342  10F1  344D               	retlw	77	;'M'
   343  10F2  3445               	retlw	69	;'E'
   344  10F3  3400               	retlw	0
   345  10DD                     
   346                           	psect	cinit
   347  07B3                     start_initialization:	
   348  07B3  30B9               	movlw	low __pbssBANK1
   349                           
   350                           ; Clear objects allocated to COMMON
   351  07B4  01FA               	clrf	__pbssCOMMON& (0+127)
   352  07B5  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   353  07B6  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   354  07B7  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   355                           
   356                           ; Clear objects allocated to BANK0
   357  07B8  01EA               	clrf	__pbssBANK0& (0+127)
   358  07B9  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   359  07BA  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   360  07BB  01ED               	clrf	(__pbssBANK0+3)& (0+127)
   361  07BC  01EE               	clrf	(__pbssBANK0+4)& (0+127)
   362                           
   363                           ; Clear objects allocated to BANK1
   364  07BD  1383               	bcf	3,7	;select IRP bank0
   365  07BE  0084               	movwf	4
   366  07BF  30CA               	movlw	low (__pbssBANK1+17)
   367  07C0  120A  118A  27C7   	fcall	clear_ram
   368  07C3                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  07C3  0183               	clrf	3
   372  07C4  160A  118A  2D3A   	ljmp	_main	;jump to C main() function
   373                           
   374                           	psect	bssCOMMON
   375  007A                     __pbssCOMMON:	
   376  007A                     _adc3:	
   377  007A                     	ds	2
   378  007C                     _adc4:	
   379  007C                     	ds	2
   380                           
   381                           	psect	bssBANK0
   382  006A                     __pbssBANK0:	
   383  006A                     _adc1:	
   384  006A                     	ds	2
   385  006C                     _adc2:	
   386  006C                     	ds	2
   387  006E                     _S1_state:	
   388  006E                     	ds	1
   389                           
   390                           	psect	bssBANK1
   391  00B9                     __pbssBANK1:	
   392  00B9                     _res1:	
   393  00B9                     	ds	3
   394  00BC                     _res2:	
   395  00BC                     	ds	3
   396  00BF                     _res3:	
   397  00BF                     	ds	3
   398  00C2                     _res4:	
   399  00C2                     	ds	3
   400  00C5                     _res5:	
   401  00C5                     	ds	3
   402  00C8                     _adc5:	
   403  00C8                     	ds	2
   404                           
   405                           	psect	clrtext
   406  07C7                     clear_ram:	
   407                           ;	Called with FSR containing the base address, and
   408                           ;	W with the last address+1
   409                           
   410  07C7  0064               	clrwdt	;clear the watchdog before getting into this loop
   411  07C8                     clrloop:	
   412  07C8  0180               	clrf	0	;clear RAM location pointed to by FSR
   413  07C9  0A84               	incf	4,f	;increment pointer
   414  07CA  0604               	xorwf	4,w	;XOR with final address
   415  07CB  1903               	btfsc	3,2	;have we reached the end yet?
   416  07CC  3400               	retlw	0	;all done for this memory range, return
   417  07CD  0604               	xorwf	4,w	;XOR again to restore value
   418  07CE  2FC8               	goto	clrloop	;do the next byte
   419                           
   420                           	psect	cstackBANK1
   421  00A0                     __pcstackBANK1:	
   422  00A0                     _printf$3186:	
   423                           
   424                           ; 4 bytes @ 0x0
   425  00A0                     	ds	4
   426  00A4                     printf@ap:	
   427                           
   428                           ; 1 bytes @ 0x4
   429  00A4                     	ds	1
   430  00A5                     printf@integ:	
   431                           
   432                           ; 3 bytes @ 0x5
   433  00A5                     	ds	3
   434  00A8                     printf@_val:	
   435                           
   436                           ; 4 bytes @ 0x8
   437  00A8                     	ds	4
   438  00AC                     printf@flag:	
   439                           
   440                           ; 2 bytes @ 0xC
   441  00AC                     	ds	2
   442  00AE                     printf@f:	
   443                           
   444                           ; 1 bytes @ 0xE
   445  00AE                     	ds	1
   446  00AF                     printf@width:	
   447                           
   448                           ; 2 bytes @ 0xF
   449  00AF                     	ds	2
   450  00B1                     printf@exp:	
   451                           
   452                           ; 2 bytes @ 0x11
   453  00B1                     	ds	2
   454  00B3                     printf@fval:	
   455                           
   456                           ; 3 bytes @ 0x13
   457  00B3                     	ds	3
   458  00B6                     printf@prec:	
   459                           
   460                           ; 2 bytes @ 0x16
   461  00B6                     	ds	2
   462  00B8                     printf@c:	
   463                           
   464                           ; 1 bytes @ 0x18
   465  00B8                     	ds	1
   466                           
   467                           	psect	cstackCOMMON
   468  0070                     __pcstackCOMMON:	
   469  0070                     ?_lcd_init:	
   470  0070                     ?_lcd_putc:	
   471                           ; 0 bytes @ 0x0
   472                           
   473  0070                     ?_isprint:	
   474                           ; 0 bytes @ 0x0
   475                           
   476  0070                     ?_isdigit:	
   477                           ; 1 bit 
   478                           
   479  0070                     ?_read_adc_AN0:	
   480                           ; 1 bit 
   481                           
   482  0070                     ?_read_adc_AN1:	
   483                           ; 0 bytes @ 0x0
   484                           
   485  0070                     ?_read_adc_AN2:	
   486                           ; 0 bytes @ 0x0
   487                           
   488  0070                     ?_read_adc_AN3:	
   489                           ; 0 bytes @ 0x0
   490                           
   491  0070                     ?_read_adc_AN5:	
   492                           ; 0 bytes @ 0x0
   493                           
   494  0070                     ?_main:	
   495                           ; 0 bytes @ 0x0
   496                           
   497  0070                     ?_putch:	
   498                           ; 0 bytes @ 0x0
   499                           
   500  0070                     ?_button:	
   501                           ; 0 bytes @ 0x0
   502                           
   503  0070                     ??i1_lcd_busy:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0070                     ?i1_lcd_put_byte:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0070                     ?_lcd_busy:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0070                     ?i1_lcd_busy:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     i1lcd_put_byte@b:	
   516                           ; 1 bytes @ 0x0
   517                           
   518                           
   519                           ; 1 bytes @ 0x0
   520  0070                     	ds	1
   521  0071                     ??i1_lcd_put_byte:	
   522  0071                     i1lcd_busy@busy:	
   523                           ; 0 bytes @ 0x1
   524                           
   525                           
   526                           ; 1 bytes @ 0x1
   527  0071                     	ds	2
   528  0073                     i1lcd_put_byte@rs:	
   529                           
   530                           ; 1 bytes @ 0x3
   531  0073                     	ds	1
   532  0074                     i1lcd_put_byte@temp:	
   533                           
   534                           ; 1 bytes @ 0x4
   535  0074                     	ds	1
   536  0075                     ??_button:	
   537                           
   538                           ; 0 bytes @ 0x5
   539  0075                     	ds	5
   540                           
   541                           	psect	cstackBANK0
   542  0020                     __pcstackBANK0:	
   543  0020                     ?_lcd_put_byte:	
   544  0020                     ??_lcd_busy:	
   545                           ; 0 bytes @ 0x0
   546                           
   547  0020                     ??_isprint:	
   548                           ; 0 bytes @ 0x0
   549                           
   550  0020                     ??_isdigit:	
   551                           ; 0 bytes @ 0x0
   552                           
   553  0020                     ?___ftge:	
   554                           ; 0 bytes @ 0x0
   555                           
   556  0020                     ?___lbmod:	
   557                           ; 1 bit 
   558                           
   559  0020                     ?___wmul:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0020                     ?___awmod:	
   563                           ; 2 bytes @ 0x0
   564                           
   565  0020                     ?___ftpack:	
   566                           ; 2 bytes @ 0x0
   567                           
   568  0020                     ?___ftneg:	
   569                           ; 3 bytes @ 0x0
   570                           
   571  0020                     ?__tdiv_to_l_:	
   572                           ; 3 bytes @ 0x0
   573                           
   574  0020                     ?__div_to_l_:	
   575                           ; 4 bytes @ 0x0
   576                           
   577  0020                     ?___lldiv:	
   578                           ; 4 bytes @ 0x0
   579                           
   580  0020                     lcd_put_byte@b:	
   581                           ; 4 bytes @ 0x0
   582                           
   583  0020                     _isdigit$3694:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0020                     _isprint$3697:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0020                     ___lbmod@divisor:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0020                     ___wmul@multiplier:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0020                     ___awmod@divisor:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0020                     ___ftneg@f1:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  0020                     ___ftge@ff1:	
   602                           ; 3 bytes @ 0x0
   603                           
   604  0020                     __tdiv_to_l_@f1:	
   605                           ; 3 bytes @ 0x0
   606                           
   607  0020                     __div_to_l_@f1:	
   608                           ; 3 bytes @ 0x0
   609                           
   610  0020                     ___ftpack@arg:	
   611                           ; 3 bytes @ 0x0
   612                           
   613  0020                     ___lldiv@divisor:	
   614                           ; 3 bytes @ 0x0
   615                           
   616                           
   617                           ; 4 bytes @ 0x0
   618  0020                     	ds	1
   619  0021                     ??_lcd_put_byte:	
   620  0021                     ??___lbmod:	
   621                           ; 0 bytes @ 0x1
   622                           
   623  0021                     lcd_busy@busy:	
   624                           ; 0 bytes @ 0x1
   625                           
   626  0021                     isdigit@c:	
   627                           ; 1 bytes @ 0x1
   628                           
   629  0021                     isprint@c:	
   630                           ; 1 bytes @ 0x1
   631                           
   632                           
   633                           ; 1 bytes @ 0x1
   634  0021                     	ds	1
   635  0022                     ___lbmod@dividend:	
   636  0022                     ___wmul@multiplicand:	
   637                           ; 1 bytes @ 0x2
   638                           
   639  0022                     ___awmod@dividend:	
   640                           ; 2 bytes @ 0x2
   641                           
   642                           
   643                           ; 2 bytes @ 0x2
   644  0022                     	ds	1
   645  0023                     ??___ftneg:	
   646  0023                     lcd_put_byte@rs:	
   647                           ; 0 bytes @ 0x3
   648                           
   649  0023                     ___lbmod@counter:	
   650                           ; 1 bytes @ 0x3
   651                           
   652  0023                     ___ftpack@exp:	
   653                           ; 1 bytes @ 0x3
   654                           
   655  0023                     ___ftge@ff2:	
   656                           ; 1 bytes @ 0x3
   657                           
   658  0023                     __tdiv_to_l_@f2:	
   659                           ; 3 bytes @ 0x3
   660                           
   661  0023                     __div_to_l_@f2:	
   662                           ; 3 bytes @ 0x3
   663                           
   664                           
   665                           ; 3 bytes @ 0x3
   666  0023                     	ds	1
   667  0024                     ??___wmul:	
   668  0024                     ??___awmod:	
   669                           ; 0 bytes @ 0x4
   670                           
   671  0024                     lcd_put_byte@temp:	
   672                           ; 0 bytes @ 0x4
   673                           
   674  0024                     ___lbmod@rem:	
   675                           ; 1 bytes @ 0x4
   676                           
   677  0024                     ___awmod@counter:	
   678                           ; 1 bytes @ 0x4
   679                           
   680  0024                     ___ftpack@sign:	
   681                           ; 1 bytes @ 0x4
   682                           
   683  0024                     ___wmul@product:	
   684                           ; 1 bytes @ 0x4
   685                           
   686  0024                     ___lldiv@dividend:	
   687                           ; 2 bytes @ 0x4
   688                           
   689                           
   690                           ; 4 bytes @ 0x4
   691  0024                     	ds	1
   692  0025                     ??_lcd_init:	
   693  0025                     ?_lcd_gotoxy:	
   694                           ; 0 bytes @ 0x5
   695                           
   696  0025                     ??___ftpack:	
   697                           ; 0 bytes @ 0x5
   698                           
   699  0025                     ?___lbdiv:	
   700                           ; 0 bytes @ 0x5
   701                           
   702  0025                     lcd_gotoxy@row:	
   703                           ; 1 bytes @ 0x5
   704                           
   705  0025                     ___lbdiv@divisor:	
   706                           ; 1 bytes @ 0x5
   707                           
   708  0025                     ___awmod@sign:	
   709                           ; 1 bytes @ 0x5
   710                           
   711                           
   712                           ; 1 bytes @ 0x5
   713  0025                     	ds	1
   714  0026                     ??_lcd_gotoxy:	
   715  0026                     ??__tdiv_to_l_:	
   716                           ; 0 bytes @ 0x6
   717                           
   718  0026                     ??__div_to_l_:	
   719                           ; 0 bytes @ 0x6
   720                           
   721  0026                     ??___lbdiv:	
   722                           ; 0 bytes @ 0x6
   723                           
   724  0026                     ??___ftge:	
   725                           ; 0 bytes @ 0x6
   726                           
   727  0026                     ?___awdiv:	
   728                           ; 0 bytes @ 0x6
   729                           
   730  0026                     lcd_gotoxy@col:	
   731                           ; 2 bytes @ 0x6
   732                           
   733  0026                     ___lbdiv@dividend:	
   734                           ; 1 bytes @ 0x6
   735                           
   736  0026                     ___awdiv@divisor:	
   737                           ; 1 bytes @ 0x6
   738                           
   739                           
   740                           ; 2 bytes @ 0x6
   741  0026                     	ds	1
   742  0027                     lcd_gotoxy@address:	
   743  0027                     ___lbdiv@counter:	
   744                           ; 1 bytes @ 0x7
   745                           
   746                           
   747                           ; 1 bytes @ 0x7
   748  0027                     	ds	1
   749  0028                     ??_lcd_putc:	
   750  0028                     ??___lldiv:	
   751                           ; 0 bytes @ 0x8
   752                           
   753  0028                     ?___awtoft:	
   754                           ; 0 bytes @ 0x8
   755                           
   756  0028                     ?___lltoft:	
   757                           ; 3 bytes @ 0x8
   758                           
   759  0028                     lcd_putc@c:	
   760                           ; 3 bytes @ 0x8
   761                           
   762  0028                     ___lbdiv@quotient:	
   763                           ; 1 bytes @ 0x8
   764                           
   765  0028                     ___awtoft@c:	
   766                           ; 1 bytes @ 0x8
   767                           
   768  0028                     ___awdiv@dividend:	
   769                           ; 2 bytes @ 0x8
   770                           
   771  0028                     ___lldiv@quotient:	
   772                           ; 2 bytes @ 0x8
   773                           
   774  0028                     ___lltoft@c:	
   775                           ; 4 bytes @ 0x8
   776                           
   777                           
   778                           ; 4 bytes @ 0x8
   779  0028                     	ds	1
   780  0029                     ??_putch:	
   781  0029                     ?___bmul:	
   782                           ; 0 bytes @ 0x9
   783                           
   784  0029                     putch@c:	
   785                           ; 1 bytes @ 0x9
   786                           
   787  0029                     ___bmul@multiplicand:	
   788                           ; 1 bytes @ 0x9
   789                           
   790  0029                     __tdiv_to_l_@quot:	
   791                           ; 1 bytes @ 0x9
   792                           
   793                           
   794                           ; 4 bytes @ 0x9
   795  0029                     	ds	1
   796  002A                     ??___bmul:	
   797  002A                     ??___awdiv:	
   798                           ; 0 bytes @ 0xA
   799                           
   800  002A                     ___bmul@product:	
   801                           ; 0 bytes @ 0xA
   802                           
   803  002A                     ___awdiv@counter:	
   804                           ; 1 bytes @ 0xA
   805                           
   806                           
   807                           ; 1 bytes @ 0xA
   808  002A                     	ds	1
   809  002B                     ??___awtoft:	
   810  002B                     ___bmul@multiplier:	
   811                           ; 0 bytes @ 0xB
   812                           
   813  002B                     ___awtoft@sign:	
   814                           ; 1 bytes @ 0xB
   815                           
   816  002B                     ___awdiv@sign:	
   817                           ; 1 bytes @ 0xB
   818                           
   819                           
   820                           ; 1 bytes @ 0xB
   821  002B                     	ds	1
   822  002C                     ??___lltoft:	
   823  002C                     ?___ftdiv:	
   824                           ; 0 bytes @ 0xC
   825                           
   826  002C                     ___lldiv@counter:	
   827                           ; 3 bytes @ 0xC
   828                           
   829  002C                     ___lltoft@exp:	
   830                           ; 1 bytes @ 0xC
   831                           
   832  002C                     ___awdiv@quotient:	
   833                           ; 1 bytes @ 0xC
   834                           
   835  002C                     ___ftdiv@f2:	
   836                           ; 2 bytes @ 0xC
   837                           
   838                           
   839                           ; 3 bytes @ 0xC
   840  002C                     	ds	1
   841  002D                     ?___llmod:	
   842  002D                     __tdiv_to_l_@cntr:	
   843                           ; 4 bytes @ 0xD
   844                           
   845  002D                     ___llmod@divisor:	
   846                           ; 1 bytes @ 0xD
   847                           
   848                           
   849                           ; 4 bytes @ 0xD
   850  002D                     	ds	1
   851  002E                     ?___fttol:	
   852  002E                     __tdiv_to_l_@exp1:	
   853                           ; 4 bytes @ 0xE
   854                           
   855  002E                     ___fttol@f1:	
   856                           ; 1 bytes @ 0xE
   857                           
   858  002E                     __div_to_l_@quot:	
   859                           ; 3 bytes @ 0xE
   860                           
   861                           
   862                           ; 4 bytes @ 0xE
   863  002E                     	ds	1
   864  002F                     ___ftdiv@f1:	
   865                           
   866                           ; 3 bytes @ 0xF
   867  002F                     	ds	2
   868  0031                     ___llmod@dividend:	
   869                           
   870                           ; 4 bytes @ 0x11
   871  0031                     	ds	1
   872  0032                     ??___ftdiv:	
   873  0032                     ??___fttol:	
   874                           ; 0 bytes @ 0x12
   875                           
   876  0032                     __div_to_l_@cntr:	
   877                           ; 0 bytes @ 0x12
   878                           
   879                           
   880                           ; 1 bytes @ 0x12
   881  0032                     	ds	1
   882  0033                     __div_to_l_@exp1:	
   883                           
   884                           ; 1 bytes @ 0x13
   885  0033                     	ds	2
   886  0035                     ??___llmod:	
   887  0035                     ___ftdiv@cntr:	
   888                           ; 0 bytes @ 0x15
   889                           
   890  0035                     ___fttol@sign1:	
   891                           ; 1 bytes @ 0x15
   892                           
   893  0035                     ___llmod@counter:	
   894                           ; 1 bytes @ 0x15
   895                           
   896                           
   897                           ; 1 bytes @ 0x15
   898  0035                     	ds	1
   899  0036                     ___ftdiv@f3:	
   900  0036                     ___fttol@lval:	
   901                           ; 3 bytes @ 0x16
   902                           
   903                           
   904                           ; 4 bytes @ 0x16
   905  0036                     	ds	3
   906  0039                     ___ftdiv@exp:	
   907                           
   908                           ; 1 bytes @ 0x19
   909  0039                     	ds	1
   910  003A                     ___ftdiv@sign:	
   911  003A                     ___fttol@exp1:	
   912                           ; 1 bytes @ 0x1A
   913                           
   914                           
   915                           ; 1 bytes @ 0x1A
   916  003A                     	ds	1
   917  003B                     ?___ftmul:	
   918  003B                     ___ftmul@f1:	
   919                           ; 3 bytes @ 0x1B
   920                           
   921                           
   922                           ; 3 bytes @ 0x1B
   923  003B                     	ds	3
   924  003E                     ___ftmul@f2:	
   925                           
   926                           ; 3 bytes @ 0x1E
   927  003E                     	ds	3
   928  0041                     ??___ftmul:	
   929                           
   930                           ; 0 bytes @ 0x21
   931  0041                     	ds	3
   932  0044                     ___ftmul@exp:	
   933                           
   934                           ; 1 bytes @ 0x24
   935  0044                     	ds	1
   936  0045                     ___ftmul@f3_as_product:	
   937                           
   938                           ; 3 bytes @ 0x25
   939  0045                     	ds	3
   940  0048                     ___ftmul@cntr:	
   941                           
   942                           ; 1 bytes @ 0x28
   943  0048                     	ds	1
   944  0049                     ___ftmul@sign:	
   945                           
   946                           ; 1 bytes @ 0x29
   947  0049                     	ds	1
   948  004A                     ??_read_adc_AN0:	
   949  004A                     ??_read_adc_AN1:	
   950                           ; 0 bytes @ 0x2A
   951                           
   952  004A                     ??_read_adc_AN2:	
   953                           ; 0 bytes @ 0x2A
   954                           
   955  004A                     ??_read_adc_AN3:	
   956                           ; 0 bytes @ 0x2A
   957                           
   958  004A                     ??_read_adc_AN5:	
   959                           ; 0 bytes @ 0x2A
   960                           
   961  004A                     ?_scale:	
   962                           ; 0 bytes @ 0x2A
   963                           
   964  004A                     ?___ftadd:	
   965                           ; 3 bytes @ 0x2A
   966                           
   967  004A                     ___ftadd@f1:	
   968                           ; 3 bytes @ 0x2A
   969                           
   970                           
   971                           ; 3 bytes @ 0x2A
   972  004A                     	ds	3
   973  004D                     ??_scale:	
   974  004D                     ___ftadd@f2:	
   975                           ; 0 bytes @ 0x2D
   976                           
   977                           
   978                           ; 3 bytes @ 0x2D
   979  004D                     	ds	3
   980  0050                     ??___ftadd:	
   981                           
   982                           ; 0 bytes @ 0x30
   983  0050                     	ds	1
   984  0051                     _scale$4157:	
   985                           
   986                           ; 3 bytes @ 0x31
   987  0051                     	ds	2
   988  0053                     ___ftadd@sign:	
   989                           
   990                           ; 1 bytes @ 0x33
   991  0053                     	ds	1
   992  0054                     scale@scl:	
   993  0054                     ___ftadd@exp2:	
   994                           ; 1 bytes @ 0x34
   995                           
   996                           
   997                           ; 1 bytes @ 0x34
   998  0054                     	ds	1
   999  0055                     ___ftadd@exp1:	
  1000                           
  1001                           ; 1 bytes @ 0x35
  1002  0055                     	ds	1
  1003  0056                     ?_fround:	
  1004  0056                     ?___ftsub:	
  1005                           ; 3 bytes @ 0x36
  1006                           
  1007  0056                     ___ftsub@f2:	
  1008                           ; 3 bytes @ 0x36
  1009                           
  1010                           
  1011                           ; 3 bytes @ 0x36
  1012  0056                     	ds	3
  1013  0059                     ??_fround:	
  1014  0059                     ___ftsub@f1:	
  1015                           ; 0 bytes @ 0x39
  1016                           
  1017  0059                     _fround$4156:	
  1018                           ; 3 bytes @ 0x39
  1019                           
  1020                           
  1021                           ; 3 bytes @ 0x39
  1022  0059                     	ds	3
  1023  005C                     ??___ftsub:	
  1024  005C                     _fround$4155:	
  1025                           ; 0 bytes @ 0x3C
  1026                           
  1027                           
  1028                           ; 3 bytes @ 0x3C
  1029  005C                     	ds	3
  1030  005F                     fround@prec:	
  1031                           
  1032                           ; 1 bytes @ 0x3F
  1033  005F                     	ds	1
  1034  0060                     ?_printf:	
  1035                           
  1036                           ; 2 bytes @ 0x40
  1037  0060                     	ds	3
  1038  0063                     ??_printf:	
  1039                           
  1040                           ; 0 bytes @ 0x43
  1041  0063                     	ds	5
  1042  0068                     ??_main:	
  1043                           
  1044                           ; 0 bytes @ 0x48
  1045  0068                     	ds	2
  1046                           
  1047                           	psect	maintext
  1048  153A                     __pmaintext:	
  1049 ;;Data sizes: Strings 120, constant 118, data 0, bss 26, persistent 0 stack 0
  1050 ;;Auto spaces:   Size  Autos    Used
  1051 ;; COMMON          14     10      14
  1052 ;; BANK0           80     74      79
  1053 ;; BANK1           80     25      42
  1054 ;; BANK3           96      0       0
  1055 ;; BANK2           96      0       0
  1056 ;;
  1057 ;; Pointer list with targets:
  1058 ;; ?___ftpack	float  size(1) Largest target is 0
  1059 ;;
  1060 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
  1061 ;;
  1062 ;; ?___llmod	unsigned long  size(1) Largest target is 0
  1063 ;;
  1064 ;; ?___ftsub	float  size(1) Largest target is 0
  1065 ;;
  1066 ;; ?___lltoft	float  size(1) Largest target is 0
  1067 ;;
  1068 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
  1069 ;;
  1070 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
  1071 ;;
  1072 ;; ?___fttol	long  size(1) Largest target is 0
  1073 ;;
  1074 ;; ?___ftadd	float  size(1) Largest target is 0
  1075 ;;
  1076 ;; ?___ftneg	float  size(1) Largest target is 0
  1077 ;;
  1078 ;; ?___awmod	int  size(1) Largest target is 40
  1079 ;;		 -> dpowers(CODE[40]), 
  1080 ;;
  1081 ;; ?___awdiv	int  size(1) Largest target is 0
  1082 ;;
  1083 ;; ?_scale	int  size(1) Largest target is 0
  1084 ;;
  1085 ;; ?___wmul	unsigned int  size(1) Largest target is 0
  1086 ;;
  1087 ;; ?_fround	unsigned int  size(1) Largest target is 0
  1088 ;;
  1089 ;; ?___ftdiv	float  size(1) Largest target is 0
  1090 ;;
  1091 ;; ?___awtoft	float  size(1) Largest target is 0
  1092 ;;
  1093 ;; ?___ftmul	float  size(1) Largest target is 0
  1094 ;;
  1095 ;; printf@f	PTR const unsigned char  size(1) Largest target is 17
  1096 ;;		 -> STR_12(CODE[15]), STR_11(CODE[16]), STR_10(CODE[15]), STR_9(CODE[16]), 
  1097 ;;		 -> STR_8(CODE[15]), STR_7(CODE[16]), STR_6(CODE[15]), STR_5(CODE[16]), 
  1098 ;;		 -> STR_4(CODE[15]), STR_3(CODE[16]), STR_2(CODE[17]), STR_1(CODE[8]), 
  1099 ;;
  1100 ;; ?_printf	int  size(1) Largest target is 0
  1101 ;;
  1102 ;; printf@ap	PTR void [1] size(1) Largest target is 2
  1103 ;;		 -> ?_printf(BANK0[2]), 
  1104 ;;
  1105 ;; S3175$_cp	PTR const unsigned char  size(1) Largest target is 0
  1106 ;;
  1107 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
  1108 ;;
  1109 ;;
  1110 ;; Critical Paths under _main in COMMON
  1111 ;;
  1112 ;;   None.
  1113 ;;
  1114 ;; Critical Paths under _button in COMMON
  1115 ;;
  1116 ;;   _button->i1_lcd_put_byte
  1117 ;;
  1118 ;; Critical Paths under _main in BANK0
  1119 ;;
  1120 ;;   _main->_printf
  1121 ;;   _printf->_fround
  1122 ;;   _putch->_lcd_putc
  1123 ;;   _lcd_putc->_lcd_gotoxy
  1124 ;;   ___ftsub->___ftadd
  1125 ;;   _scale->___ftmul
  1126 ;;   _fround->___ftadd
  1127 ;;   _lcd_gotoxy->_lcd_put_byte
  1128 ;;   _lcd_init->_lcd_put_byte
  1129 ;;   _read_adc_AN5->___ftmul
  1130 ;;   _read_adc_AN3->___ftmul
  1131 ;;   _read_adc_AN2->___ftmul
  1132 ;;   _read_adc_AN1->___ftmul
  1133 ;;   _read_adc_AN0->___ftmul
  1134 ;;   ___lltoft->___ftpack
  1135 ;;   ___awtoft->___ftpack
  1136 ;;   ___ftmul->___fttol
  1137 ;;   ___ftmul->___ftdiv
  1138 ;;   ___ftdiv->___awtoft
  1139 ;;   ___ftadd->___ftmul
  1140 ;;   ___llmod->___lldiv
  1141 ;;   ___awdiv->___awmod
  1142 ;;   ___fttol->___awdiv
  1143 ;;   ___lbdiv->___lbmod
  1144 ;;   ___bmul->___lbdiv
  1145 ;;
  1146 ;; Critical Paths under _button in BANK0
  1147 ;;
  1148 ;;   None.
  1149 ;;
  1150 ;; Critical Paths under _main in BANK1
  1151 ;;
  1152 ;;   _main->_printf
  1153 ;;
  1154 ;; Critical Paths under _button in BANK1
  1155 ;;
  1156 ;;   None.
  1157 ;;
  1158 ;; Critical Paths under _main in BANK3
  1159 ;;
  1160 ;;   None.
  1161 ;;
  1162 ;; Critical Paths under _button in BANK3
  1163 ;;
  1164 ;;   None.
  1165 ;;
  1166 ;; Critical Paths under _main in BANK2
  1167 ;;
  1168 ;;   None.
  1169 ;;
  1170 ;; Critical Paths under _button in BANK2
  1171 ;;
  1172 ;;   None.
  1173 ;;
  1174 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1175 ;;
  1176 ;;
  1177 ;;Call Graph Tables:
  1178 ;;
  1179 ;; ---------------------------------------------------------------------------------
  1180 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1181 ;; ---------------------------------------------------------------------------------
  1182 ;; (0) _main                                                 2     2      0   17780
  1183 ;;                                             72 BANK0      2     2      0
  1184 ;;                           _lcd_init
  1185 ;;                         _lcd_gotoxy
  1186 ;;                             _printf
  1187 ;;                       _read_adc_AN0
  1188 ;;                       _read_adc_AN1
  1189 ;;                       _read_adc_AN2
  1190 ;;                       _read_adc_AN3
  1191 ;;                       _read_adc_AN5
  1192 ;; ---------------------------------------------------------------------------------
  1193 ;; (1) _printf                                              37    34      3   10603
  1194 ;;                                             64 BANK0      8     5      3
  1195 ;;                                              0 BANK1     25    25      0
  1196 ;;                              _putch
  1197 ;;                            _isdigit
  1198 ;;                             ___wmul
  1199 ;;                             ___ftge
  1200 ;;                            ___ftneg
  1201 ;;                            ___awdiv
  1202 ;;                              _scale
  1203 ;;                            ___ftmul
  1204 ;;                             _fround
  1205 ;;                            ___ftadd
  1206 ;;                            ___fttol
  1207 ;;                         __div_to_l_
  1208 ;;                        __tdiv_to_l_
  1209 ;;                           ___lltoft
  1210 ;;                            ___ftsub
  1211 ;;                            ___lldiv
  1212 ;;                            ___llmod
  1213 ;; ---------------------------------------------------------------------------------
  1214 ;; (2) _putch                                                1     1      0     713
  1215 ;;                                              9 BANK0      1     1      0
  1216 ;;                           _lcd_putc
  1217 ;; ---------------------------------------------------------------------------------
  1218 ;; (3) _lcd_putc                                             1     1      0     691
  1219 ;;                                              8 BANK0      1     1      0
  1220 ;;                       _lcd_put_byte
  1221 ;;                           _lcd_busy
  1222 ;;                         _lcd_gotoxy
  1223 ;;                            _isprint
  1224 ;; ---------------------------------------------------------------------------------
  1225 ;; (2) ___ftsub                                              6     0      6    1094
  1226 ;;                                             54 BANK0      6     0      6
  1227 ;;                            ___ftadd
  1228 ;;                           ___lltoft (ARG)
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (2) _scale                                               14    11      3    1688
  1231 ;;                                             42 BANK0     11     8      3
  1232 ;;                            ___awmod
  1233 ;;                            ___awdiv
  1234 ;;                            ___ftmul
  1235 ;;                             ___bmul
  1236 ;;                            ___fttol (ARG)
  1237 ;; ---------------------------------------------------------------------------------
  1238 ;; (2) _fround                                              13    10      3    1215
  1239 ;;                                             54 BANK0     10     7      3
  1240 ;;                            ___lbmod
  1241 ;;                             ___bmul
  1242 ;;                            ___lbdiv
  1243 ;;                            ___ftmul
  1244 ;;                            ___ftadd (ARG)
  1245 ;; ---------------------------------------------------------------------------------
  1246 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1247 ;;                                              5 BANK0      3     2      1
  1248 ;;                       _lcd_put_byte
  1249 ;;                           _lcd_busy
  1250 ;; ---------------------------------------------------------------------------------
  1251 ;; (1) _lcd_init                                             4     4      0     244
  1252 ;;                                              5 BANK0      3     3      0
  1253 ;;                       _lcd_put_byte
  1254 ;;                           _lcd_busy
  1255 ;; ---------------------------------------------------------------------------------
  1256 ;; (1) _read_adc_AN5                                         3     3      0    1324
  1257 ;;                                             42 BANK0      3     3      0
  1258 ;;                           ___awtoft
  1259 ;;                            ___ftdiv
  1260 ;;                            ___ftmul
  1261 ;; ---------------------------------------------------------------------------------
  1262 ;; (1) _read_adc_AN3                                         3     3      0    1324
  1263 ;;                                             42 BANK0      3     3      0
  1264 ;;                           ___awtoft
  1265 ;;                            ___ftdiv
  1266 ;;                            ___ftmul
  1267 ;; ---------------------------------------------------------------------------------
  1268 ;; (1) _read_adc_AN2                                         3     3      0    1324
  1269 ;;                                             42 BANK0      3     3      0
  1270 ;;                           ___awtoft
  1271 ;;                            ___ftdiv
  1272 ;;                            ___ftmul
  1273 ;; ---------------------------------------------------------------------------------
  1274 ;; (1) _read_adc_AN1                                         3     3      0    1324
  1275 ;;                                             42 BANK0      3     3      0
  1276 ;;                           ___awtoft
  1277 ;;                            ___ftdiv
  1278 ;;                            ___ftmul
  1279 ;; ---------------------------------------------------------------------------------
  1280 ;; (1) _read_adc_AN0                                         3     3      0    1324
  1281 ;;                                             42 BANK0      3     3      0
  1282 ;;                           ___awtoft
  1283 ;;                            ___ftdiv
  1284 ;;                            ___ftmul
  1285 ;; ---------------------------------------------------------------------------------
  1286 ;; (2) ___lltoft                                             5     1      4     278
  1287 ;;                                              8 BANK0      5     1      4
  1288 ;;                           ___ftpack
  1289 ;; ---------------------------------------------------------------------------------
  1290 ;; (2) ___awtoft                                             4     1      3     300
  1291 ;;                                              8 BANK0      4     1      3
  1292 ;;                           ___ftpack
  1293 ;; ---------------------------------------------------------------------------------
  1294 ;; (2) ___ftmul                                             15     9      6     535
  1295 ;;                                             27 BANK0     15     9      6
  1296 ;;                           ___ftpack
  1297 ;;                            ___fttol (ARG)
  1298 ;;                            ___awdiv (ARG)
  1299 ;;                            ___awmod (ARG)
  1300 ;;                             ___bmul (ARG)
  1301 ;;                            ___lbdiv (ARG)
  1302 ;;                            ___lbmod (ARG)
  1303 ;;                            ___ftdiv (ARG)
  1304 ;;                           ___awtoft (ARG)
  1305 ;; ---------------------------------------------------------------------------------
  1306 ;; (2) ___ftdiv                                             15     9      6     489
  1307 ;;                                             12 BANK0     15     9      6
  1308 ;;                           ___ftpack
  1309 ;;                           ___awtoft (ARG)
  1310 ;; ---------------------------------------------------------------------------------
  1311 ;; (3) ___ftadd                                             12     6      6    1049
  1312 ;;                                             42 BANK0     12     6      6
  1313 ;;                           ___ftpack
  1314 ;;                            ___lbmod (ARG)
  1315 ;;                             ___bmul (ARG)
  1316 ;;                            ___lbdiv (ARG)
  1317 ;;                            ___ftmul (ARG)
  1318 ;; ---------------------------------------------------------------------------------
  1319 ;; (5) _lcd_busy                                             2     2      0      23
  1320 ;;                                              0 BANK0      2     2      0
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (5) _lcd_put_byte                                         5     4      1     221
  1323 ;;                                              0 BANK0      5     4      1
  1324 ;; ---------------------------------------------------------------------------------
  1325 ;; (3) ___awmod                                              6     2      4     296
  1326 ;;                                              0 BANK0      6     2      4
  1327 ;; ---------------------------------------------------------------------------------
  1328 ;; (2) ___lldiv                                             13     5      8     162
  1329 ;;                                              0 BANK0     13     5      8
  1330 ;; ---------------------------------------------------------------------------------
  1331 ;; (2) ___ftge                                               6     0      6     136
  1332 ;;                                              0 BANK0      6     0      6
  1333 ;; ---------------------------------------------------------------------------------
  1334 ;; (2) ___ftneg                                              3     0      3      45
  1335 ;;                                              0 BANK0      3     0      3
  1336 ;; ---------------------------------------------------------------------------------
  1337 ;; (2) ___llmod                                              9     1      8     159
  1338 ;;                                             13 BANK0      9     1      8
  1339 ;;                            ___lldiv (ARG)
  1340 ;; ---------------------------------------------------------------------------------
  1341 ;; (3) ___awdiv                                              8     4      4     300
  1342 ;;                                              6 BANK0      8     4      4
  1343 ;;                            ___awmod (ARG)
  1344 ;; ---------------------------------------------------------------------------------
  1345 ;; (2) ___fttol                                             13     9      4     252
  1346 ;;                                             14 BANK0     13     9      4
  1347 ;;                           ___ftpack (ARG)
  1348 ;;                            ___awmod (ARG)
  1349 ;;                            ___awdiv (ARG)
  1350 ;;                             ___bmul (ARG)
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (3) ___ftpack                                             8     3      5     209
  1353 ;;                                              0 BANK0      8     3      5
  1354 ;; ---------------------------------------------------------------------------------
  1355 ;; (3) ___lbmod                                              5     4      1     159
  1356 ;;                                              0 BANK0      5     4      1
  1357 ;; ---------------------------------------------------------------------------------
  1358 ;; (3) ___lbdiv                                              4     3      1     162
  1359 ;;                                              5 BANK0      4     3      1
  1360 ;;                            ___lbmod (ARG)
  1361 ;; ---------------------------------------------------------------------------------
  1362 ;; (2) ___wmul                                               6     2      4      92
  1363 ;;                                              0 BANK0      6     2      4
  1364 ;; ---------------------------------------------------------------------------------
  1365 ;; (3) ___bmul                                               3     2      1      68
  1366 ;;                                              9 BANK0      3     2      1
  1367 ;;                            ___lbmod (ARG)
  1368 ;;                            ___lbdiv (ARG)
  1369 ;; ---------------------------------------------------------------------------------
  1370 ;; (2) __div_to_l_                                          20    14      6     446
  1371 ;;                                              0 BANK0     20    14      6
  1372 ;; ---------------------------------------------------------------------------------
  1373 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1374 ;;                                              0 BANK0     15     9      6
  1375 ;; ---------------------------------------------------------------------------------
  1376 ;; (2) _isdigit                                              2     2      0      68
  1377 ;;                                              0 BANK0      2     2      0
  1378 ;; ---------------------------------------------------------------------------------
  1379 ;; (4) _isprint                                              2     2      0      68
  1380 ;;                                              0 BANK0      2     2      0
  1381 ;; ---------------------------------------------------------------------------------
  1382 ;; Estimated maximum stack depth 5
  1383 ;; ---------------------------------------------------------------------------------
  1384 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1385 ;; ---------------------------------------------------------------------------------
  1386 ;; (6) _button                                               5     5      0     807
  1387 ;;                                              5 COMMON     5     5      0
  1388 ;;                     i1_lcd_put_byte
  1389 ;;                         i1_lcd_busy
  1390 ;; ---------------------------------------------------------------------------------
  1391 ;; (7) i1_lcd_put_byte                                       5     4      1     732
  1392 ;;                                              0 COMMON     5     4      1
  1393 ;; ---------------------------------------------------------------------------------
  1394 ;; (7) i1_lcd_busy                                           2     2      0      75
  1395 ;;                                              0 COMMON     2     2      0
  1396 ;; ---------------------------------------------------------------------------------
  1397 ;; Estimated maximum stack depth 7
  1398 ;; ---------------------------------------------------------------------------------
  1399 ;; Call Graph Graphs:
  1400 ;; _main (ROOT)
  1401 ;;   _lcd_init
  1402 ;;     _lcd_put_byte
  1403 ;;     _lcd_busy
  1404 ;;   _lcd_gotoxy
  1405 ;;     _lcd_put_byte
  1406 ;;     _lcd_busy
  1407 ;;   _printf
  1408 ;;     _putch
  1409 ;;       _lcd_putc
  1410 ;;         _lcd_put_byte
  1411 ;;         _lcd_busy
  1412 ;;         _lcd_gotoxy
  1413 ;;           _lcd_put_byte
  1414 ;;           _lcd_busy
  1415 ;;         _isprint
  1416 ;;     _isdigit
  1417 ;;     ___wmul
  1418 ;;     ___ftge
  1419 ;;     ___ftneg
  1420 ;;     ___awdiv
  1421 ;;       ___awmod (ARG)
  1422 ;;     _scale
  1423 ;;       ___awmod
  1424 ;;       ___awdiv
  1425 ;;         ___awmod (ARG)
  1426 ;;       ___ftmul
  1427 ;;         ___ftpack
  1428 ;;         ___fttol (ARG)
  1429 ;;           ___ftpack (ARG)
  1430 ;;           ___awmod (ARG)
  1431 ;;           ___awdiv (ARG)
  1432 ;;             ___awmod (ARG)
  1433 ;;           ___bmul (ARG)
  1434 ;;             ___lbmod (ARG)
  1435 ;;             ___lbdiv (ARG)
  1436 ;;               ___lbmod (ARG)
  1437 ;;         ___awdiv (ARG)
  1438 ;;           ___awmod (ARG)
  1439 ;;         ___awmod (ARG)
  1440 ;;         ___bmul (ARG)
  1441 ;;           ___lbmod (ARG)
  1442 ;;           ___lbdiv (ARG)
  1443 ;;             ___lbmod (ARG)
  1444 ;;         ___lbdiv (ARG)
  1445 ;;           ___lbmod (ARG)
  1446 ;;         ___lbmod (ARG)
  1447 ;;         ___ftdiv (ARG)
  1448 ;;           ___ftpack
  1449 ;;           ___awtoft (ARG)
  1450 ;;             ___ftpack
  1451 ;;         ___awtoft (ARG)
  1452 ;;           ___ftpack
  1453 ;;       ___bmul
  1454 ;;         ___lbmod (ARG)
  1455 ;;         ___lbdiv (ARG)
  1456 ;;           ___lbmod (ARG)
  1457 ;;       ___fttol (ARG)
  1458 ;;         ___ftpack (ARG)
  1459 ;;         ___awmod (ARG)
  1460 ;;         ___awdiv (ARG)
  1461 ;;           ___awmod (ARG)
  1462 ;;         ___bmul (ARG)
  1463 ;;           ___lbmod (ARG)
  1464 ;;           ___lbdiv (ARG)
  1465 ;;             ___lbmod (ARG)
  1466 ;;     ___ftmul
  1467 ;;       ___ftpack
  1468 ;;       ___fttol (ARG)
  1469 ;;         ___ftpack (ARG)
  1470 ;;         ___awmod (ARG)
  1471 ;;         ___awdiv (ARG)
  1472 ;;           ___awmod (ARG)
  1473 ;;         ___bmul (ARG)
  1474 ;;           ___lbmod (ARG)
  1475 ;;           ___lbdiv (ARG)
  1476 ;;             ___lbmod (ARG)
  1477 ;;       ___awdiv (ARG)
  1478 ;;         ___awmod (ARG)
  1479 ;;       ___awmod (ARG)
  1480 ;;       ___bmul (ARG)
  1481 ;;         ___lbmod (ARG)
  1482 ;;         ___lbdiv (ARG)
  1483 ;;           ___lbmod (ARG)
  1484 ;;       ___lbdiv (ARG)
  1485 ;;         ___lbmod (ARG)
  1486 ;;       ___lbmod (ARG)
  1487 ;;       ___ftdiv (ARG)
  1488 ;;         ___ftpack
  1489 ;;         ___awtoft (ARG)
  1490 ;;           ___ftpack
  1491 ;;       ___awtoft (ARG)
  1492 ;;         ___ftpack
  1493 ;;     _fround
  1494 ;;       ___lbmod
  1495 ;;       ___bmul
  1496 ;;         ___lbmod (ARG)
  1497 ;;         ___lbdiv (ARG)
  1498 ;;           ___lbmod (ARG)
  1499 ;;       ___lbdiv
  1500 ;;         ___lbmod (ARG)
  1501 ;;       ___ftmul
  1502 ;;         ___ftpack
  1503 ;;         ___fttol (ARG)
  1504 ;;           ___ftpack (ARG)
  1505 ;;           ___awmod (ARG)
  1506 ;;           ___awdiv (ARG)
  1507 ;;             ___awmod (ARG)
  1508 ;;           ___bmul (ARG)
  1509 ;;             ___lbmod (ARG)
  1510 ;;             ___lbdiv (ARG)
  1511 ;;               ___lbmod (ARG)
  1512 ;;         ___awdiv (ARG)
  1513 ;;           ___awmod (ARG)
  1514 ;;         ___awmod (ARG)
  1515 ;;         ___bmul (ARG)
  1516 ;;           ___lbmod (ARG)
  1517 ;;           ___lbdiv (ARG)
  1518 ;;             ___lbmod (ARG)
  1519 ;;         ___lbdiv (ARG)
  1520 ;;           ___lbmod (ARG)
  1521 ;;         ___lbmod (ARG)
  1522 ;;         ___ftdiv (ARG)
  1523 ;;           ___ftpack
  1524 ;;           ___awtoft (ARG)
  1525 ;;             ___ftpack
  1526 ;;         ___awtoft (ARG)
  1527 ;;           ___ftpack
  1528 ;;       ___ftadd (ARG)
  1529 ;;         ___ftpack
  1530 ;;         ___lbmod (ARG)
  1531 ;;         ___bmul (ARG)
  1532 ;;           ___lbmod (ARG)
  1533 ;;           ___lbdiv (ARG)
  1534 ;;             ___lbmod (ARG)
  1535 ;;         ___lbdiv (ARG)
  1536 ;;           ___lbmod (ARG)
  1537 ;;         ___ftmul (ARG)
  1538 ;;           ___ftpack
  1539 ;;           ___fttol (ARG)
  1540 ;;             ___ftpack (ARG)
  1541 ;;             ___awmod (ARG)
  1542 ;;             ___awdiv (ARG)
  1543 ;;               ___awmod (ARG)
  1544 ;;             ___bmul (ARG)
  1545 ;;               ___lbmod (ARG)
  1546 ;;               ___lbdiv (ARG)
  1547 ;;                 ___lbmod (ARG)
  1548 ;;           ___awdiv (ARG)
  1549 ;;             ___awmod (ARG)
  1550 ;;           ___awmod (ARG)
  1551 ;;           ___bmul (ARG)
  1552 ;;             ___lbmod (ARG)
  1553 ;;             ___lbdiv (ARG)
  1554 ;;               ___lbmod (ARG)
  1555 ;;           ___lbdiv (ARG)
  1556 ;;             ___lbmod (ARG)
  1557 ;;           ___lbmod (ARG)
  1558 ;;           ___ftdiv (ARG)
  1559 ;;             ___ftpack
  1560 ;;             ___awtoft (ARG)
  1561 ;;               ___ftpack
  1562 ;;           ___awtoft (ARG)
  1563 ;;             ___ftpack
  1564 ;;     ___ftadd
  1565 ;;       ___ftpack
  1566 ;;       ___lbmod (ARG)
  1567 ;;       ___bmul (ARG)
  1568 ;;         ___lbmod (ARG)
  1569 ;;         ___lbdiv (ARG)
  1570 ;;           ___lbmod (ARG)
  1571 ;;       ___lbdiv (ARG)
  1572 ;;         ___lbmod (ARG)
  1573 ;;       ___ftmul (ARG)
  1574 ;;         ___ftpack
  1575 ;;         ___fttol (ARG)
  1576 ;;           ___ftpack (ARG)
  1577 ;;           ___awmod (ARG)
  1578 ;;           ___awdiv (ARG)
  1579 ;;             ___awmod (ARG)
  1580 ;;           ___bmul (ARG)
  1581 ;;             ___lbmod (ARG)
  1582 ;;             ___lbdiv (ARG)
  1583 ;;               ___lbmod (ARG)
  1584 ;;         ___awdiv (ARG)
  1585 ;;           ___awmod (ARG)
  1586 ;;         ___awmod (ARG)
  1587 ;;         ___bmul (ARG)
  1588 ;;           ___lbmod (ARG)
  1589 ;;           ___lbdiv (ARG)
  1590 ;;             ___lbmod (ARG)
  1591 ;;         ___lbdiv (ARG)
  1592 ;;           ___lbmod (ARG)
  1593 ;;         ___lbmod (ARG)
  1594 ;;         ___ftdiv (ARG)
  1595 ;;           ___ftpack
  1596 ;;           ___awtoft (ARG)
  1597 ;;             ___ftpack
  1598 ;;         ___awtoft (ARG)
  1599 ;;           ___ftpack
  1600 ;;     ___fttol
  1601 ;;       ___ftpack (ARG)
  1602 ;;       ___awmod (ARG)
  1603 ;;       ___awdiv (ARG)
  1604 ;;         ___awmod (ARG)
  1605 ;;       ___bmul (ARG)
  1606 ;;         ___lbmod (ARG)
  1607 ;;         ___lbdiv (ARG)
  1608 ;;           ___lbmod (ARG)
  1609 ;;     __div_to_l_
  1610 ;;     __tdiv_to_l_
  1611 ;;     ___lltoft
  1612 ;;       ___ftpack
  1613 ;;     ___ftsub
  1614 ;;       ___ftadd
  1615 ;;         ___ftpack
  1616 ;;         ___lbmod (ARG)
  1617 ;;         ___bmul (ARG)
  1618 ;;           ___lbmod (ARG)
  1619 ;;           ___lbdiv (ARG)
  1620 ;;             ___lbmod (ARG)
  1621 ;;         ___lbdiv (ARG)
  1622 ;;           ___lbmod (ARG)
  1623 ;;         ___ftmul (ARG)
  1624 ;;           ___ftpack
  1625 ;;           ___fttol (ARG)
  1626 ;;             ___ftpack (ARG)
  1627 ;;             ___awmod (ARG)
  1628 ;;             ___awdiv (ARG)
  1629 ;;               ___awmod (ARG)
  1630 ;;             ___bmul (ARG)
  1631 ;;               ___lbmod (ARG)
  1632 ;;               ___lbdiv (ARG)
  1633 ;;                 ___lbmod (ARG)
  1634 ;;           ___awdiv (ARG)
  1635 ;;             ___awmod (ARG)
  1636 ;;           ___awmod (ARG)
  1637 ;;           ___bmul (ARG)
  1638 ;;             ___lbmod (ARG)
  1639 ;;             ___lbdiv (ARG)
  1640 ;;               ___lbmod (ARG)
  1641 ;;           ___lbdiv (ARG)
  1642 ;;             ___lbmod (ARG)
  1643 ;;           ___lbmod (ARG)
  1644 ;;           ___ftdiv (ARG)
  1645 ;;             ___ftpack
  1646 ;;             ___awtoft (ARG)
  1647 ;;               ___ftpack
  1648 ;;           ___awtoft (ARG)
  1649 ;;             ___ftpack
  1650 ;;       ___lltoft (ARG)
  1651 ;;         ___ftpack
  1652 ;;     ___lldiv
  1653 ;;     ___llmod
  1654 ;;       ___lldiv (ARG)
  1655 ;;   _read_adc_AN0
  1656 ;;     ___awtoft
  1657 ;;       ___ftpack
  1658 ;;     ___ftdiv
  1659 ;;       ___ftpack
  1660 ;;       ___awtoft (ARG)
  1661 ;;         ___ftpack
  1662 ;;     ___ftmul
  1663 ;;       ___ftpack
  1664 ;;       ___fttol (ARG)
  1665 ;;         ___ftpack (ARG)
  1666 ;;         ___awmod (ARG)
  1667 ;;         ___awdiv (ARG)
  1668 ;;           ___awmod (ARG)
  1669 ;;         ___bmul (ARG)
  1670 ;;           ___lbmod (ARG)
  1671 ;;           ___lbdiv (ARG)
  1672 ;;             ___lbmod (ARG)
  1673 ;;       ___awdiv (ARG)
  1674 ;;         ___awmod (ARG)
  1675 ;;       ___awmod (ARG)
  1676 ;;       ___bmul (ARG)
  1677 ;;         ___lbmod (ARG)
  1678 ;;         ___lbdiv (ARG)
  1679 ;;           ___lbmod (ARG)
  1680 ;;       ___lbdiv (ARG)
  1681 ;;         ___lbmod (ARG)
  1682 ;;       ___lbmod (ARG)
  1683 ;;       ___ftdiv (ARG)
  1684 ;;         ___ftpack
  1685 ;;         ___awtoft (ARG)
  1686 ;;           ___ftpack
  1687 ;;       ___awtoft (ARG)
  1688 ;;         ___ftpack
  1689 ;;   _read_adc_AN1
  1690 ;;     ___awtoft
  1691 ;;       ___ftpack
  1692 ;;     ___ftdiv
  1693 ;;       ___ftpack
  1694 ;;       ___awtoft (ARG)
  1695 ;;         ___ftpack
  1696 ;;     ___ftmul
  1697 ;;       ___ftpack
  1698 ;;       ___fttol (ARG)
  1699 ;;         ___ftpack (ARG)
  1700 ;;         ___awmod (ARG)
  1701 ;;         ___awdiv (ARG)
  1702 ;;           ___awmod (ARG)
  1703 ;;         ___bmul (ARG)
  1704 ;;           ___lbmod (ARG)
  1705 ;;           ___lbdiv (ARG)
  1706 ;;             ___lbmod (ARG)
  1707 ;;       ___awdiv (ARG)
  1708 ;;         ___awmod (ARG)
  1709 ;;       ___awmod (ARG)
  1710 ;;       ___bmul (ARG)
  1711 ;;         ___lbmod (ARG)
  1712 ;;         ___lbdiv (ARG)
  1713 ;;           ___lbmod (ARG)
  1714 ;;       ___lbdiv (ARG)
  1715 ;;         ___lbmod (ARG)
  1716 ;;       ___lbmod (ARG)
  1717 ;;       ___ftdiv (ARG)
  1718 ;;         ___ftpack
  1719 ;;         ___awtoft (ARG)
  1720 ;;           ___ftpack
  1721 ;;       ___awtoft (ARG)
  1722 ;;         ___ftpack
  1723 ;;   _read_adc_AN2
  1724 ;;     ___awtoft
  1725 ;;       ___ftpack
  1726 ;;     ___ftdiv
  1727 ;;       ___ftpack
  1728 ;;       ___awtoft (ARG)
  1729 ;;         ___ftpack
  1730 ;;     ___ftmul
  1731 ;;       ___ftpack
  1732 ;;       ___fttol (ARG)
  1733 ;;         ___ftpack (ARG)
  1734 ;;         ___awmod (ARG)
  1735 ;;         ___awdiv (ARG)
  1736 ;;           ___awmod (ARG)
  1737 ;;         ___bmul (ARG)
  1738 ;;           ___lbmod (ARG)
  1739 ;;           ___lbdiv (ARG)
  1740 ;;             ___lbmod (ARG)
  1741 ;;       ___awdiv (ARG)
  1742 ;;         ___awmod (ARG)
  1743 ;;       ___awmod (ARG)
  1744 ;;       ___bmul (ARG)
  1745 ;;         ___lbmod (ARG)
  1746 ;;         ___lbdiv (ARG)
  1747 ;;           ___lbmod (ARG)
  1748 ;;       ___lbdiv (ARG)
  1749 ;;         ___lbmod (ARG)
  1750 ;;       ___lbmod (ARG)
  1751 ;;       ___ftdiv (ARG)
  1752 ;;         ___ftpack
  1753 ;;         ___awtoft (ARG)
  1754 ;;           ___ftpack
  1755 ;;       ___awtoft (ARG)
  1756 ;;         ___ftpack
  1757 ;;   _read_adc_AN3
  1758 ;;     ___awtoft
  1759 ;;       ___ftpack
  1760 ;;     ___ftdiv
  1761 ;;       ___ftpack
  1762 ;;       ___awtoft (ARG)
  1763 ;;         ___ftpack
  1764 ;;     ___ftmul
  1765 ;;       ___ftpack
  1766 ;;       ___fttol (ARG)
  1767 ;;         ___ftpack (ARG)
  1768 ;;         ___awmod (ARG)
  1769 ;;         ___awdiv (ARG)
  1770 ;;           ___awmod (ARG)
  1771 ;;         ___bmul (ARG)
  1772 ;;           ___lbmod (ARG)
  1773 ;;           ___lbdiv (ARG)
  1774 ;;             ___lbmod (ARG)
  1775 ;;       ___awdiv (ARG)
  1776 ;;         ___awmod (ARG)
  1777 ;;       ___awmod (ARG)
  1778 ;;       ___bmul (ARG)
  1779 ;;         ___lbmod (ARG)
  1780 ;;         ___lbdiv (ARG)
  1781 ;;           ___lbmod (ARG)
  1782 ;;       ___lbdiv (ARG)
  1783 ;;         ___lbmod (ARG)
  1784 ;;       ___lbmod (ARG)
  1785 ;;       ___ftdiv (ARG)
  1786 ;;         ___ftpack
  1787 ;;         ___awtoft (ARG)
  1788 ;;           ___ftpack
  1789 ;;       ___awtoft (ARG)
  1790 ;;         ___ftpack
  1791 ;;   _read_adc_AN5
  1792 ;;     ___awtoft
  1793 ;;       ___ftpack
  1794 ;;     ___ftdiv
  1795 ;;       ___ftpack
  1796 ;;       ___awtoft (ARG)
  1797 ;;         ___ftpack
  1798 ;;     ___ftmul
  1799 ;;       ___ftpack
  1800 ;;       ___fttol (ARG)
  1801 ;;         ___ftpack (ARG)
  1802 ;;         ___awmod (ARG)
  1803 ;;         ___awdiv (ARG)
  1804 ;;           ___awmod (ARG)
  1805 ;;         ___bmul (ARG)
  1806 ;;           ___lbmod (ARG)
  1807 ;;           ___lbdiv (ARG)
  1808 ;;             ___lbmod (ARG)
  1809 ;;       ___awdiv (ARG)
  1810 ;;         ___awmod (ARG)
  1811 ;;       ___awmod (ARG)
  1812 ;;       ___bmul (ARG)
  1813 ;;         ___lbmod (ARG)
  1814 ;;         ___lbdiv (ARG)
  1815 ;;           ___lbmod (ARG)
  1816 ;;       ___lbdiv (ARG)
  1817 ;;         ___lbmod (ARG)
  1818 ;;       ___lbmod (ARG)
  1819 ;;       ___ftdiv (ARG)
  1820 ;;         ___ftpack
  1821 ;;         ___awtoft (ARG)
  1822 ;;           ___ftpack
  1823 ;;       ___awtoft (ARG)
  1824 ;;         ___ftpack
  1825 ;;
  1826 ;; _button (ROOT)
  1827 ;;   i1_lcd_put_byte
  1828 ;;   i1_lcd_busy
  1829 ;;
  1830 ;; Address spaces:
  1831 ;;Name               Size   Autos  Total    Cost      Usage
  1832 ;;BITCOMMON            E      0       0       0        0.0%
  1833 ;;EEDATA             100      0       0       0        0.0%
  1834 ;;NULL                 0      0       0       0        0.0%
  1835 ;;CODE                 0      0       0       0        0.0%
  1836 ;;COMMON               E      A       E       1      100.0%
  1837 ;;BITSFR0              0      0       0       1        0.0%
  1838 ;;SFR0                 0      0       0       1        0.0%
  1839 ;;BITSFR1              0      0       0       2        0.0%
  1840 ;;SFR1                 0      0       0       2        0.0%
  1841 ;;STACK                0      0       9       2        0.0%
  1842 ;;ABS                  0      0      87       3        0.0%
  1843 ;;BITBANK0            50      0       0       4        0.0%
  1844 ;;BITSFR3              0      0       0       4        0.0%
  1845 ;;SFR3                 0      0       0       4        0.0%
  1846 ;;BANK0               50     4A      4F       5       98.8%
  1847 ;;BITSFR2              0      0       0       5        0.0%
  1848 ;;SFR2                 0      0       0       5        0.0%
  1849 ;;BITBANK1            50      0       0       6        0.0%
  1850 ;;BANK1               50     19      2A       7       52.5%
  1851 ;;BITBANK3            60      0       0       8        0.0%
  1852 ;;BANK3               60      0       0       9        0.0%
  1853 ;;BITBANK2            60      0       0      10        0.0%
  1854 ;;BANK2               60      0       0      11        0.0%
  1855 ;;DATA                 0      0      90      12        0.0%
  1856                           
  1857                           
  1858 ;; *************** function _main *****************
  1859 ;; Defined at:
  1860 ;;		line 69 in file "D:\TTVXL\Project TTVXL\BT02week11ttvxl\BT02week11ttvxl.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;		None               void
  1867 ;; Registers used:
  1868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 17F/0
  1871 ;;		On exit  : 60/20
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         0       0       0       0       0
  1875 ;;      Locals:         0       0       0       0       0
  1876 ;;      Temps:          0       2       0       0       0
  1877 ;;      Totals:         0       2       0       0       0
  1878 ;;Total ram usage:        2 bytes
  1879 ;; Hardware stack levels required when called:    7
  1880 ;; This function calls:
  1881 ;;		_lcd_init
  1882 ;;		_lcd_gotoxy
  1883 ;;		_printf
  1884 ;;		_read_adc_AN0
  1885 ;;		_read_adc_AN1
  1886 ;;		_read_adc_AN2
  1887 ;;		_read_adc_AN3
  1888 ;;		_read_adc_AN5
  1889 ;; This function is called by:
  1890 ;;		Startup code after reset
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893  153A                     _main:	
  1894                           
  1895                           ;BT02week11ttvxl.c: 70: ANSEL = ANSELH = 0;
  1896                           
  1897                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1898  153A  1683               	bsf	3,5	;RP0=1, select bank3
  1899  153B  1703               	bsf	3,6	;RP1=1, select bank3
  1900  153C  0189               	clrf	9	;volatile
  1901  153D  0188               	clrf	8	;volatile
  1902                           
  1903                           ;BT02week11ttvxl.c: 71: lcd_init();
  1904  153E  120A  158A  20B9   	fcall	_lcd_init
      +       160A  118A         
  1905  1543  30FF               	movlw	255
  1906                           
  1907                           ;BT02week11ttvxl.c: 73: GIE = 1;
  1908  1544  178B               	bsf	11,7
  1909                           
  1910                           ;BT02week11ttvxl.c: 74: RBIE = 1;
  1911  1545  158B               	bsf	11,3
  1912                           
  1913                           ;BT02week11ttvxl.c: 75: RBIF = 0;
  1914  1546  100B               	bcf	11,0
  1915                           
  1916                           ;BT02week11ttvxl.c: 76: IOCB = 0xFF;
  1917  1547  1683               	bsf	3,5	;RP0=1, select bank1
  1918  1548  0096               	movwf	22	;volatile
  1919                           
  1920                           ;BT02week11ttvxl.c: 78: TRISD= 0x00;
  1921  1549  0188               	clrf	8	;volatile
  1922                           
  1923                           ;BT02week11ttvxl.c: 79: TRISB = 0xFF;
  1924  154A  0086               	movwf	6	;volatile
  1925                           
  1926                           ;BT02week11ttvxl.c: 81: lcd_gotoxy(4,0);
  1927  154B  1283               	bcf	3,5	;RP0=0, select bank0
  1928  154C  3004               	movlw	4
  1929  154D  01A5               	clrf	?_lcd_gotoxy
  1930  154E  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  1931                           
  1932                           ;BT02week11ttvxl.c: 82: printf("WELCOME");
  1933  1553  30E7               	movlw	(STR_1-__stringbase)& (0+255)
  1934  1554  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1935                           
  1936                           ;BT02week11ttvxl.c: 83: lcd_gotoxy(0,1);
  1937  1559  1283               	bcf	3,5	;RP0=0, select bank0
  1938  155A  3000               	movlw	0
  1939  155B  01A5               	clrf	?_lcd_gotoxy
  1940  155C  0AA5               	incf	?_lcd_gotoxy,f
  1941  155D  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  1942                           
  1943                           ;BT02week11ttvxl.c: 84: printf("Nguyen Phuc Dung");
  1944  1562  3077               	movlw	(STR_2-__stringbase)& (0+255)
  1945  1563  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1946                           
  1947                           ;BT02week11ttvxl.c: 86: TRISE0 = 1;
  1948  1568  1409               	bsf	9,0
  1949                           
  1950                           ;BT02week11ttvxl.c: 87: ANS5 = 1;
  1951  1569  1703               	bsf	3,6	;RP1=1, select bank3
  1952  156A  1688               	bsf	8,5
  1953                           
  1954                           ;BT02week11ttvxl.c: 88: TRISA0 = 1;
  1955  156B  1303               	bcf	3,6	;RP1=0, select bank1
  1956  156C  1405               	bsf	5,0
  1957                           
  1958                           ;BT02week11ttvxl.c: 89: ANS0 = 1;
  1959  156D  1703               	bsf	3,6	;RP1=1, select bank3
  1960  156E  1408               	bsf	8,0
  1961                           
  1962                           ;BT02week11ttvxl.c: 90: TRISA1 = 1;
  1963  156F  1303               	bcf	3,6	;RP1=0, select bank1
  1964  1570  1485               	bsf	5,1
  1965                           
  1966                           ;BT02week11ttvxl.c: 91: ANS1 = 1;
  1967  1571  1703               	bsf	3,6	;RP1=1, select bank3
  1968  1572  1488               	bsf	8,1
  1969                           
  1970                           ;BT02week11ttvxl.c: 92: TRISA2 = 1;
  1971  1573  1303               	bcf	3,6	;RP1=0, select bank1
  1972  1574  1505               	bsf	5,2
  1973                           
  1974                           ;BT02week11ttvxl.c: 93: ANS2 = 1;
  1975  1575  1703               	bsf	3,6	;RP1=1, select bank3
  1976  1576  1508               	bsf	8,2
  1977                           
  1978                           ;BT02week11ttvxl.c: 94: TRISA3 = 1;
  1979  1577  1303               	bcf	3,6	;RP1=0, select bank1
  1980  1578  1585               	bsf	5,3
  1981                           
  1982                           ;BT02week11ttvxl.c: 95: ANS3 = 1;
  1983  1579  1703               	bsf	3,6	;RP1=1, select bank3
  1984  157A  1588               	bsf	8,3
  1985                           
  1986                           ;BT02week11ttvxl.c: 96: VCFG1 = 0;VCFG0 = 0;
  1987  157B  1303               	bcf	3,6	;RP1=0, select bank1
  1988  157C  129F               	bcf	31,5
  1989  157D  121F               	bcf	31,4
  1990                           
  1991                           ;BT02week11ttvxl.c: 97: ADCS1 = 1; ADCS0 = 0;
  1992  157E  1283               	bcf	3,5	;RP0=0, select bank0
  1993  157F  179F               	bsf	31,7
  1994  1580  131F               	bcf	31,6
  1995                           
  1996                           ;BT02week11ttvxl.c: 98: ADFM = 0;
  1997  1581  1683               	bsf	3,5	;RP0=1, select bank1
  1998  1582  139F               	bcf	31,7
  1999                           
  2000                           ;BT02week11ttvxl.c: 99: ADON = 1;
  2001  1583  1283               	bcf	3,5	;RP0=0, select bank0
  2002  1584  3041               	movlw	65
  2003  1585  141F               	bsf	31,0
  2004                           
  2005                           ;BT02week11ttvxl.c: 100: _delay((unsigned long)((10)*(20000000/4000.0)));
  2006  1586  00E9               	movwf	??_main+1
  2007  1587  30EE               	movlw	238
  2008  1588  00E8               	movwf	??_main
  2009  1589                     u4887:	
  2010  1589  0BE8               	decfsz	??_main,f
  2011  158A  2D89               	goto	u4887
  2012  158B  0BE9               	decfsz	??_main+1,f
  2013  158C  2D89               	goto	u4887
  2014  158D  0064               	clrwdt
  2015  158E                     l7802:	
  2016                           
  2017                           ;BT02week11ttvxl.c: 103: {
  2018                           ;BT02week11ttvxl.c: 104: if (S1_state == 1){
  2019  158E  1283               	bcf	3,5	;RP0=0, select bank0
  2020  158F  1303               	bcf	3,6	;RP1=0, select bank0
  2021  1590  036E               	decf	_S1_state,w
  2022  1591  1D03               	skipz
  2023  1592  2DC2               	goto	l7810
  2024                           
  2025                           ;BT02week11ttvxl.c: 105: read_adc_AN0();
  2026  1593  120A  158A  22E6   	fcall	_read_adc_AN0
      +       160A  118A         
  2027                           
  2028                           ;BT02week11ttvxl.c: 106: lcd_gotoxy(0,0);
  2029  1598  1283               	bcf	3,5	;RP0=0, select bank0
  2030  1599  1303               	bcf	3,6	;RP1=0, select bank0
  2031  159A  3000               	movlw	0
  2032  159B  01A5               	clrf	?_lcd_gotoxy
  2033  159C  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2034                           
  2035                           ;BT02week11ttvxl.c: 107: printf("Nhiet Do Room 1");
  2036  15A1  3088               	movlw	(STR_3-__stringbase)& (0+255)
  2037  15A2  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2038                           
  2039                           ;BT02week11ttvxl.c: 108: lcd_gotoxy(0,1);
  2040  15A7  1283               	bcf	3,5	;RP0=0, select bank0
  2041  15A8  3000               	movlw	0
  2042  15A9  01A5               	clrf	?_lcd_gotoxy
  2043  15AA  0AA5               	incf	?_lcd_gotoxy,f
  2044  15AB  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2045                           
  2046                           ;BT02week11ttvxl.c: 109: printf("Gia tri: %3.1f",res1);
  2047  15B0  1683               	bsf	3,5	;RP0=1, select bank1
  2048  15B1  0839               	movf	_res1^(0+128),w
  2049  15B2  1283               	bcf	3,5	;RP0=0, select bank0
  2050  15B3  00E0               	movwf	?_printf
  2051  15B4  1683               	bsf	3,5	;RP0=1, select bank1
  2052  15B5  083A               	movf	(_res1+1)^(0+128),w
  2053  15B6  1283               	bcf	3,5	;RP0=0, select bank0
  2054  15B7  00E1               	movwf	?_printf+1
  2055  15B8  1683               	bsf	3,5	;RP0=1, select bank1
  2056  15B9  083B               	movf	(_res1+2)^(0+128),w
  2057  15BA  1283               	bcf	3,5	;RP0=0, select bank0
  2058  15BB  00E2               	movwf	?_printf+2
  2059  15BC  30D8               	movlw	(STR_4-__stringbase)& (0+255)
  2060  15BD  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2061  15C2                     l7810:	
  2062                           
  2063                           ;BT02week11ttvxl.c: 110: }
  2064                           ;BT02week11ttvxl.c: 111: if (S1_state == 2){
  2065  15C2  1283               	bcf	3,5	;RP0=0, select bank0
  2066  15C3  086E               	movf	_S1_state,w
  2067  15C4  3A02               	xorlw	2
  2068  15C5  1D03               	skipz
  2069  15C6  2DF6               	goto	l7818
  2070                           
  2071                           ;BT02week11ttvxl.c: 112: read_adc_AN1();
  2072  15C7  120A  158A  22A1   	fcall	_read_adc_AN1
      +       160A  118A         
  2073                           
  2074                           ;BT02week11ttvxl.c: 113: lcd_gotoxy(0,0);
  2075  15CC  1283               	bcf	3,5	;RP0=0, select bank0
  2076  15CD  1303               	bcf	3,6	;RP1=0, select bank0
  2077  15CE  3000               	movlw	0
  2078  15CF  01A5               	clrf	?_lcd_gotoxy
  2079  15D0  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2080                           
  2081                           ;BT02week11ttvxl.c: 114: printf("Nhiet Do Room 2");
  2082  15D5  3098               	movlw	(STR_5-__stringbase)& (0+255)
  2083  15D6  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2084                           
  2085                           ;BT02week11ttvxl.c: 115: lcd_gotoxy(0,1);
  2086  15DB  1283               	bcf	3,5	;RP0=0, select bank0
  2087  15DC  3000               	movlw	0
  2088  15DD  01A5               	clrf	?_lcd_gotoxy
  2089  15DE  0AA5               	incf	?_lcd_gotoxy,f
  2090  15DF  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2091                           
  2092                           ;BT02week11ttvxl.c: 116: printf("Gia tri: %3.1f",res2);
  2093  15E4  1683               	bsf	3,5	;RP0=1, select bank1
  2094  15E5  083C               	movf	_res2^(0+128),w
  2095  15E6  1283               	bcf	3,5	;RP0=0, select bank0
  2096  15E7  00E0               	movwf	?_printf
  2097  15E8  1683               	bsf	3,5	;RP0=1, select bank1
  2098  15E9  083D               	movf	(_res2+1)^(0+128),w
  2099  15EA  1283               	bcf	3,5	;RP0=0, select bank0
  2100  15EB  00E1               	movwf	?_printf+1
  2101  15EC  1683               	bsf	3,5	;RP0=1, select bank1
  2102  15ED  083E               	movf	(_res2+2)^(0+128),w
  2103  15EE  1283               	bcf	3,5	;RP0=0, select bank0
  2104  15EF  00E2               	movwf	?_printf+2
  2105  15F0  30D8               	movlw	(STR_4-__stringbase)& (0+255)
  2106  15F1  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2107  15F6                     l7818:	
  2108                           
  2109                           ;BT02week11ttvxl.c: 117: }
  2110                           ;BT02week11ttvxl.c: 118: if (S1_state == 3){
  2111  15F6  1283               	bcf	3,5	;RP0=0, select bank0
  2112  15F7  086E               	movf	_S1_state,w
  2113  15F8  3A03               	xorlw	3
  2114  15F9  1D03               	skipz
  2115  15FA  2E2A               	goto	l7826
  2116                           
  2117                           ;BT02week11ttvxl.c: 119: read_adc_AN2();
  2118  15FB  120A  158A  225C   	fcall	_read_adc_AN2
      +       160A  118A         
  2119                           
  2120                           ;BT02week11ttvxl.c: 120: lcd_gotoxy(0,0);
  2121  1600  1283               	bcf	3,5	;RP0=0, select bank0
  2122  1601  1303               	bcf	3,6	;RP1=0, select bank0
  2123  1602  3000               	movlw	0
  2124  1603  01A5               	clrf	?_lcd_gotoxy
  2125  1604  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2126                           
  2127                           ;BT02week11ttvxl.c: 121: printf("Nhiet Do Room 3");
  2128  1609  30A8               	movlw	(STR_7-__stringbase)& (0+255)
  2129  160A  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2130                           
  2131                           ;BT02week11ttvxl.c: 122: lcd_gotoxy(0,1);
  2132  160F  1283               	bcf	3,5	;RP0=0, select bank0
  2133  1610  3000               	movlw	0
  2134  1611  01A5               	clrf	?_lcd_gotoxy
  2135  1612  0AA5               	incf	?_lcd_gotoxy,f
  2136  1613  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2137                           
  2138                           ;BT02week11ttvxl.c: 123: printf("Gia tri: %3.1f",res3);
  2139  1618  1683               	bsf	3,5	;RP0=1, select bank1
  2140  1619  083F               	movf	_res3^(0+128),w
  2141  161A  1283               	bcf	3,5	;RP0=0, select bank0
  2142  161B  00E0               	movwf	?_printf
  2143  161C  1683               	bsf	3,5	;RP0=1, select bank1
  2144  161D  0840               	movf	(_res3+1)^(0+128),w
  2145  161E  1283               	bcf	3,5	;RP0=0, select bank0
  2146  161F  00E1               	movwf	?_printf+1
  2147  1620  1683               	bsf	3,5	;RP0=1, select bank1
  2148  1621  0841               	movf	(_res3+2)^(0+128),w
  2149  1622  1283               	bcf	3,5	;RP0=0, select bank0
  2150  1623  00E2               	movwf	?_printf+2
  2151  1624  30D8               	movlw	(STR_4-__stringbase)& (0+255)
  2152  1625  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2153  162A                     l7826:	
  2154                           
  2155                           ;BT02week11ttvxl.c: 124: }
  2156                           ;BT02week11ttvxl.c: 125: if (S1_state == 4){
  2157  162A  1283               	bcf	3,5	;RP0=0, select bank0
  2158  162B  086E               	movf	_S1_state,w
  2159  162C  3A04               	xorlw	4
  2160  162D  1D03               	skipz
  2161  162E  2E5E               	goto	l7834
  2162                           
  2163                           ;BT02week11ttvxl.c: 126: read_adc_AN3();
  2164  162F  120A  158A  2217   	fcall	_read_adc_AN3
      +       160A  118A         
  2165                           
  2166                           ;BT02week11ttvxl.c: 127: lcd_gotoxy(0,0);
  2167  1634  1283               	bcf	3,5	;RP0=0, select bank0
  2168  1635  1303               	bcf	3,6	;RP1=0, select bank0
  2169  1636  3000               	movlw	0
  2170  1637  01A5               	clrf	?_lcd_gotoxy
  2171  1638  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2172                           
  2173                           ;BT02week11ttvxl.c: 128: printf("Nhiet Do Room 4");
  2174  163D  30B8               	movlw	(STR_9-__stringbase)& (0+255)
  2175  163E  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2176                           
  2177                           ;BT02week11ttvxl.c: 129: lcd_gotoxy(0,1);
  2178  1643  1283               	bcf	3,5	;RP0=0, select bank0
  2179  1644  3000               	movlw	0
  2180  1645  01A5               	clrf	?_lcd_gotoxy
  2181  1646  0AA5               	incf	?_lcd_gotoxy,f
  2182  1647  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2183                           
  2184                           ;BT02week11ttvxl.c: 130: printf("Gia tri: %3.1f",res4);
  2185  164C  1683               	bsf	3,5	;RP0=1, select bank1
  2186  164D  0842               	movf	_res4^(0+128),w
  2187  164E  1283               	bcf	3,5	;RP0=0, select bank0
  2188  164F  00E0               	movwf	?_printf
  2189  1650  1683               	bsf	3,5	;RP0=1, select bank1
  2190  1651  0843               	movf	(_res4+1)^(0+128),w
  2191  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2192  1653  00E1               	movwf	?_printf+1
  2193  1654  1683               	bsf	3,5	;RP0=1, select bank1
  2194  1655  0844               	movf	(_res4+2)^(0+128),w
  2195  1656  1283               	bcf	3,5	;RP0=0, select bank0
  2196  1657  00E2               	movwf	?_printf+2
  2197  1658  30D8               	movlw	(STR_4-__stringbase)& (0+255)
  2198  1659  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2199  165E                     l7834:	
  2200                           
  2201                           ;BT02week11ttvxl.c: 131: }
  2202                           ;BT02week11ttvxl.c: 132: if (S1_state == 5){
  2203  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2204  165F  086E               	movf	_S1_state,w
  2205  1660  3A05               	xorlw	5
  2206  1661  1D03               	skipz
  2207  1662  2D8E               	goto	l7802
  2208                           
  2209                           ;BT02week11ttvxl.c: 133: read_adc_AN5();
  2210  1663  120A  158A  232B   	fcall	_read_adc_AN5
      +       160A  118A         
  2211                           
  2212                           ;BT02week11ttvxl.c: 134: lcd_gotoxy(0,0);
  2213  1668  1283               	bcf	3,5	;RP0=0, select bank0
  2214  1669  1303               	bcf	3,6	;RP1=0, select bank0
  2215  166A  3000               	movlw	0
  2216  166B  01A5               	clrf	?_lcd_gotoxy
  2217  166C  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2218                           
  2219                           ;BT02week11ttvxl.c: 135: printf("Nhiet Do Room 5");
  2220  1671  30C8               	movlw	(STR_11-__stringbase)& (0+255)
  2221  1672  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2222                           
  2223                           ;BT02week11ttvxl.c: 136: lcd_gotoxy(0,1);
  2224  1677  1283               	bcf	3,5	;RP0=0, select bank0
  2225  1678  3000               	movlw	0
  2226  1679  01A5               	clrf	?_lcd_gotoxy
  2227  167A  0AA5               	incf	?_lcd_gotoxy,f
  2228  167B  120A  158A  20A1   	fcall	_lcd_gotoxy
      +       160A  118A         
  2229                           
  2230                           ;BT02week11ttvxl.c: 137: printf("Gia tri: %3.1f",res5);
  2231  1680  1683               	bsf	3,5	;RP0=1, select bank1
  2232  1681  0845               	movf	_res5^(0+128),w
  2233  1682  1283               	bcf	3,5	;RP0=0, select bank0
  2234  1683  00E0               	movwf	?_printf
  2235  1684  1683               	bsf	3,5	;RP0=1, select bank1
  2236  1685  0846               	movf	(_res5+1)^(0+128),w
  2237  1686  1283               	bcf	3,5	;RP0=0, select bank0
  2238  1687  00E1               	movwf	?_printf+1
  2239  1688  1683               	bsf	3,5	;RP0=1, select bank1
  2240  1689  0847               	movf	(_res5+2)^(0+128),w
  2241  168A  1283               	bcf	3,5	;RP0=0, select bank0
  2242  168B  00E2               	movwf	?_printf+2
  2243  168C  30D8               	movlw	(STR_4-__stringbase)& (0+255)
  2244  168D  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  2245  1692  2D8E               	goto	l7802
  2246  1693                     __end_of_main:	
  2247                           
  2248                           	psect	text690
  2249  000F                     __ptext690:	
  2250 ;; =============== function _main ends ============
  2251                           
  2252                           
  2253 ;; *************** function _printf *****************
  2254 ;; Defined at:
  2255 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  f               1    wreg     PTR const unsigned char 
  2258 ;;		 -> STR_12(15), STR_11(16), STR_10(15), STR_9(16), 
  2259 ;;		 -> STR_8(15), STR_7(16), STR_6(15), STR_5(16), 
  2260 ;;		 -> STR_4(15), STR_3(16), STR_2(17), STR_1(8), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  2263 ;;		 -> STR_12(15), STR_11(16), STR_10(15), STR_9(16), 
  2264 ;;		 -> STR_8(15), STR_7(16), STR_6(15), STR_5(16), 
  2265 ;;		 -> STR_4(15), STR_3(16), STR_2(17), STR_1(8), 
  2266 ;;  _val            4    8[BANK1 ] struct .
  2267 ;;  fval            3   19[BANK1 ] struct .
  2268 ;;  integ           3    5[BANK1 ] struct .
  2269 ;;  ival            3    0        struct .
  2270 ;;  prec            2   22[BANK1 ] int 
  2271 ;;  exp             2   17[BANK1 ] int 
  2272 ;;  width           2   15[BANK1 ] int 
  2273 ;;  flag            2   12[BANK1 ] unsigned short 
  2274 ;;  c               1   24[BANK1 ] char 
  2275 ;;  ap              1    4[BANK1 ] PTR void [1]
  2276 ;;		 -> ?_printf(2), 
  2277 ;;  d               1    0        unsigned char 
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  2   64[BANK0 ] int 
  2280 ;; Registers used:
  2281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 60/0
  2284 ;;		On exit  : 60/20
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         0       3       0       0       0
  2288 ;;      Locals:         0       0      25       0       0
  2289 ;;      Temps:          0       5       0       0       0
  2290 ;;      Totals:         0       8      25       0       0
  2291 ;;Total ram usage:       33 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    6
  2294 ;; This function calls:
  2295 ;;		_putch
  2296 ;;		_isdigit
  2297 ;;		___wmul
  2298 ;;		___ftge
  2299 ;;		___ftneg
  2300 ;;		___awdiv
  2301 ;;		_scale
  2302 ;;		___ftmul
  2303 ;;		_fround
  2304 ;;		___ftadd
  2305 ;;		___fttol
  2306 ;;		__div_to_l_
  2307 ;;		__tdiv_to_l_
  2308 ;;		___lltoft
  2309 ;;		___ftsub
  2310 ;;		___lldiv
  2311 ;;		___llmod
  2312 ;; This function is called by:
  2313 ;;		_main
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316  000F                     _printf:	
  2317                           
  2318                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2319                           ;printf@f stored from wreg
  2320  000F  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0010  00AE               	movwf	printf@f^(0+128)
  2322  0011  3060               	movlw	?_printf& (0+255)
  2323  0012  00A4               	movwf	printf@ap^(0+128)
  2324  0013                     l7746:	
  2325  0013  1683               	bsf	3,5	;RP0=1, select bank1
  2326  0014  082E               	movf	printf@f^(0+128),w
  2327  0015  0AAE               	incf	printf@f^(0+128),f
  2328  0016  0084               	movwf	4
  2329  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2330  001C  00B8               	movwf	printf@c^(0+128)
  2331  001D  08B8               	movf	printf@c^(0+128),f
  2332  001E  1903               	btfsc	3,2
  2333  001F  0008               	return
  2334  0020  3A25               	xorlw	37
  2335  0021  1903               	skipnz
  2336  0022  2825               	goto	l7526
  2337  0023  0838               	movf	printf@c^(0+128),w
  2338  0024  2CB3               	goto	L1
  2339  0025                     l7526:	
  2340  0025  01AF               	clrf	printf@width^(0+128)
  2341  0026  01B0               	clrf	(printf@width+1)^(0+128)
  2342  0027  01AC               	clrf	printf@flag^(0+128)
  2343  0028  01AD               	clrf	(printf@flag+1)^(0+128)
  2344  0029  082E               	movf	printf@f^(0+128),w
  2345  002A  0084               	movwf	4
  2346  002B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2347  0030  24E7  120A  118A   	fcall	_isdigit
  2348  0033  1C03               	btfss	3,0
  2349  0034  285D               	goto	l7538
  2350  0035  1683               	bsf	3,5	;RP0=1, select bank1
  2351  0036  01AF               	clrf	printf@width^(0+128)
  2352  0037  01B0               	clrf	(printf@width+1)^(0+128)
  2353  0038                     l7532:	
  2354  0038  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0039  0830               	movf	(printf@width+1)^(0+128),w
  2356  003A  1283               	bcf	3,5	;RP0=0, select bank0
  2357  003B  00A1               	movwf	?___wmul+1
  2358  003C  1683               	bsf	3,5	;RP0=1, select bank1
  2359  003D  082F               	movf	printf@width^(0+128),w
  2360  003E  27A7  120A  118A   	fcall	PL36	;call to abstracted procedure
  2361  0041  24F6               	fcall	___wmul
  2362  0042  1683               	bsf	3,5	;RP0=1, select bank1
  2363  0043  082E               	movf	printf@f^(0+128),w
  2364  0044  0084               	movwf	4
  2365  0045  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2366  004A  275C  120A  118A   	fcall	PL14	;call to abstracted procedure
  2367  004D  00AF               	movwf	printf@width^(0+128)
  2368  004E  2799               	fcall	PL30	;call to abstracted procedure
  2369  004F  00B0               	movwf	(printf@width+1)^(0+128)
  2370  0050  0AAE               	incf	printf@f^(0+128),f
  2371  0051  082E               	movf	printf@f^(0+128),w
  2372  0052  0084               	movwf	4
  2373  0053  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2374  0058  24E7  120A  118A   	fcall	_isdigit
  2375  005B  1803               	btfsc	3,0
  2376  005C  2838               	goto	l7532
  2377  005D                     l7538:	
  2378  005D  1683               	bsf	3,5	;RP0=1, select bank1
  2379  005E  082E               	movf	printf@f^(0+128),w
  2380  005F  0084               	movwf	4
  2381  0060  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2382  0065  3A2E               	xorlw	46
  2383  0066  1D03               	skipz
  2384  0067  2894               	goto	l7552
  2385  0068  172D               	bsf	(printf@flag^(0+128)+1),6
  2386  0069  0AAE               	incf	printf@f^(0+128),f
  2387  006A  01B6               	clrf	printf@prec^(0+128)
  2388  006B  01B7               	clrf	(printf@prec+1)^(0+128)
  2389  006C                     l7550:	
  2390  006C  082E               	movf	printf@f^(0+128),w
  2391  006D  0084               	movwf	4
  2392  006E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2393  0073  24E7  120A  118A   	fcall	_isdigit
  2394  0076  1C03               	btfss	3,0
  2395  0077  289A               	goto	l7558
  2396  0078  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0079  0837               	movf	(printf@prec+1)^(0+128),w
  2398  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2399  007B  00A1               	movwf	?___wmul+1
  2400  007C  1683               	bsf	3,5	;RP0=1, select bank1
  2401  007D  0836               	movf	printf@prec^(0+128),w
  2402  007E  27A7  120A  118A   	fcall	PL36	;call to abstracted procedure
  2403  0081  24F6               	fcall	___wmul
  2404  0082  1683               	bsf	3,5	;RP0=1, select bank1
  2405  0083  082E               	movf	printf@f^(0+128),w
  2406  0084  0084               	movwf	4
  2407  0085  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2408  008A  275C  120A  118A   	fcall	PL14	;call to abstracted procedure
  2409  008D  00B6               	movwf	printf@prec^(0+128)
  2410  008E  2799  120A  118A   	fcall	PL30	;call to abstracted procedure
  2411  0091  00B7               	movwf	(printf@prec+1)^(0+128)
  2412  0092  0AAE               	incf	printf@f^(0+128),f
  2413  0093  286C               	goto	l7550
  2414  0094                     l7552:	
  2415  0094  01B6               	clrf	printf@prec^(0+128)
  2416  0095  01B7               	clrf	(printf@prec+1)^(0+128)
  2417  0096  162D               	bsf	(printf@flag^(0+128)+1),4
  2418  0097  289A               	goto	l7558
  2419  0098                     l2296:	
  2420  0098  152D               	bsf	(printf@flag^(0+128)+1),2
  2421  0099  28AB               	goto	l7560
  2422  009A                     l7558:	
  2423  009A  1683               	bsf	3,5	;RP0=1, select bank1
  2424  009B  082E               	movf	printf@f^(0+128),w
  2425  009C  0AAE               	incf	printf@f^(0+128),f
  2426  009D  0084               	movwf	4
  2427  009E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2428  00A3  00B8               	movwf	printf@c^(0+128)
  2429                           
  2430                           ; Switch size 1, requested type "space"
  2431                           ; Number of cases is 2, Range of values is 0 to 102
  2432                           ; switch strategies available:
  2433                           ; Name         Instructions Cycles
  2434                           ; simple_byte            7     4 (average)
  2435                           ; jumptable            260     6 (fixed)
  2436                           ; rangetable           107     6 (fixed)
  2437                           ; spacedrange          212     9 (fixed)
  2438                           ; locatedrange         103     3 (fixed)
  2439                           ;	Chosen strategy is simple_byte
  2440  00A4  3A00               	xorlw	0	; case 0
  2441  00A5  1903               	skipnz
  2442  00A6  2CB7               	goto	l2357
  2443  00A7  3A66               	xorlw	102	; case 102
  2444  00A8  1903               	skipnz
  2445  00A9  2898               	goto	l2296
  2446  00AA  2813               	goto	l7746
  2447  00AB                     l7560:	
  2448  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  2449  00AC  3007               	movlw	7
  2450  00AD  01E3               	clrf	??_printf
  2451  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  2452  00AF  052D               	andwf	(printf@flag+1)^(0+128),w
  2453  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  2454  00B1  00E4               	movwf	??_printf+1
  2455  00B2  0463               	iorwf	??_printf,w
  2456  00B3  1903               	skipnz
  2457  00B4  2C1B               	goto	l7702
  2458  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  2459  00B6  1E2D               	btfss	(printf@flag+1)^(0+128),4
  2460  00B7  28BB               	goto	l7566
  2461  00B8  3006               	movlw	6
  2462  00B9  00B6               	movwf	printf@prec^(0+128)
  2463  00BA  01B7               	clrf	(printf@prec+1)^(0+128)
  2464  00BB                     l7566:	
  2465  00BB  0824               	movf	printf@ap^(0+128),w
  2466  00BC  0084               	movwf	4
  2467  00BD  1383               	bcf	3,7	;select IRP bank0
  2468  00BE  0800               	movf	0,w
  2469  00BF  00B3               	movwf	printf@fval^(0+128)
  2470  00C0  0A84               	incf	4,f
  2471  00C1  0800               	movf	0,w
  2472  00C2  00B4               	movwf	(printf@fval+1)^(0+128)
  2473  00C3  0A84               	incf	4,f
  2474  00C4  0800               	movf	0,w
  2475  00C5  00B5               	movwf	(printf@fval+2)^(0+128)
  2476  00C6  3003               	movlw	3
  2477  00C7  07A4               	addwf	printf@ap^(0+128),f
  2478  00C8  0833               	movf	printf@fval^(0+128),w
  2479  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  2480  00CA  00A0               	movwf	?___ftge
  2481  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  2482  00CC  0834               	movf	(printf@fval+1)^(0+128),w
  2483  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2484  00CE  00A1               	movwf	?___ftge+1
  2485  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  2486  00D0  0835               	movf	(printf@fval+2)^(0+128),w
  2487  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  2488  00D2  00A2               	movwf	?___ftge+2
  2489  00D3  01A3               	clrf	?___ftge+3
  2490  00D4  01A4               	clrf	?___ftge+4
  2491  00D5  01A5               	clrf	?___ftge+5
  2492  00D6  24BB  120A  118A   	fcall	___ftge
  2493  00D9  1803               	btfsc	3,0
  2494  00DA  28F7               	goto	l7576
  2495  00DB  1683               	bsf	3,5	;RP0=1, select bank1
  2496  00DC  0833               	movf	printf@fval^(0+128),w
  2497  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  2498  00DE  00A0               	movwf	?___ftneg
  2499  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  2500  00E0  0834               	movf	(printf@fval+1)^(0+128),w
  2501  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2502  00E2  00A1               	movwf	?___ftneg+1
  2503  00E3  1683               	bsf	3,5	;RP0=1, select bank1
  2504  00E4  0835               	movf	(printf@fval+2)^(0+128),w
  2505  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2506  00E6  00A2               	movwf	?___ftneg+2
  2507  00E7  2667  120A  118A   	fcall	___ftneg
  2508  00EA  0820               	movf	?___ftneg,w
  2509  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  2510  00EC  00B3               	movwf	printf@fval^(0+128)
  2511  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  2512  00EE  0821               	movf	?___ftneg+1,w
  2513  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  2514  00F0  00B4               	movwf	(printf@fval+1)^(0+128)
  2515  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2516  00F2  0822               	movf	?___ftneg+2,w
  2517  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  2518  00F4  00B5               	movwf	(printf@fval+2)^(0+128)
  2519  00F5  3003               	movlw	3
  2520  00F6  04AC               	iorwf	printf@flag^(0+128),f
  2521  00F7                     l7576:	
  2522  00F7  1683               	bsf	3,5	;RP0=1, select bank1
  2523  00F8  01B1               	clrf	printf@exp^(0+128)
  2524  00F9  01B2               	clrf	(printf@exp+1)^(0+128)
  2525  00FA  0835               	movf	(printf@fval+2)^(0+128),w
  2526  00FB  0434               	iorwf	(printf@fval+1)^(0+128),w
  2527  00FC  0433               	iorwf	printf@fval^(0+128),w
  2528  00FD  1903               	skipnz
  2529  00FE  29A4               	goto	l7608
  2530  00FF  30B3               	movlw	low printf@fval
  2531  0100  0084               	movwf	4
  2532  0101  0800               	movf	0,w
  2533  0102  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0103  00E3               	movwf	??_printf
  2535  0104  0A84               	incf	4,f
  2536  0105  0800               	movf	0,w
  2537  0106  00E4               	movwf	??_printf+1
  2538  0107  0A84               	incf	4,f
  2539  0108  0800               	movf	0,w
  2540  0109  00E5               	movwf	??_printf+2
  2541  010A  0A84               	incf	4,f
  2542  010B  0800               	movf	0,w
  2543  010C  00E6               	movwf	??_printf+3
  2544  010D  300F               	movlw	15
  2545  010E                     u4485:	
  2546  010E  1003               	clrc
  2547  010F  0CE6               	rrf	??_printf+3,f
  2548  0110  0CE5               	rrf	??_printf+2,f
  2549  0111  0CE4               	rrf	??_printf+1,f
  2550  0112  0CE3               	rrf	??_printf,f
  2551  0113  3EFF               	addlw	-1
  2552  0114  1D03               	skipz
  2553  0115  290E               	goto	u4485
  2554  0116  0864               	movf	??_printf+1,w
  2555  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2556  0118  00B2               	movwf	(printf@exp+1)^(0+128)
  2557  0119  1283               	bcf	3,5	;RP0=0, select bank0
  2558  011A  0863               	movf	??_printf,w
  2559  011B  1683               	bsf	3,5	;RP0=1, select bank1
  2560  011C  00B1               	movwf	printf@exp^(0+128)
  2561  011D  3082               	movlw	-126
  2562  011E  01B2               	clrf	(printf@exp+1)^(0+128)
  2563  011F  07B1               	addwf	printf@exp^(0+128),f
  2564  0120  1C03               	skipc
  2565  0121  03B2               	decf	(printf@exp+1)^(0+128),f
  2566  0122  30FF               	movlw	-1
  2567  0123  07B1               	addwf	printf@exp^(0+128),f
  2568  0124  1C03               	skipc
  2569  0125  03B2               	decf	(printf@exp+1)^(0+128),f
  2570  0126  3003               	movlw	3
  2571  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0128  00A0               	movwf	?___wmul
  2573  0129  01A1               	clrf	?___wmul+1
  2574  012A  1683               	bsf	3,5	;RP0=1, select bank1
  2575  012B  0832               	movf	(printf@exp+1)^(0+128),w
  2576  012C  1283               	bcf	3,5	;RP0=0, select bank0
  2577  012D  00A3               	movwf	?___wmul+3
  2578  012E  1683               	bsf	3,5	;RP0=1, select bank1
  2579  012F  0831               	movf	printf@exp^(0+128),w
  2580  0130  1283               	bcf	3,5	;RP0=0, select bank0
  2581  0131  00A2               	movwf	?___wmul+2
  2582  0132  24F6               	fcall	___wmul
  2583  0133  0821               	movf	?___wmul+1,w
  2584  0134  1683               	bsf	3,5	;RP0=1, select bank1
  2585  0135  00B2               	movwf	(printf@exp+1)^(0+128)
  2586  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2587  0137  0820               	movf	?___wmul,w
  2588  0138  1683               	bsf	3,5	;RP0=1, select bank1
  2589  0139  00B1               	movwf	printf@exp^(0+128)
  2590  013A  300A               	movlw	10
  2591  013B  1283               	bcf	3,5	;RP0=0, select bank0
  2592  013C  00A6               	movwf	?___awdiv
  2593  013D  01A7               	clrf	?___awdiv+1
  2594  013E  1683               	bsf	3,5	;RP0=1, select bank1
  2595  013F  0832               	movf	(printf@exp+1)^(0+128),w
  2596  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2597  0141  00A9               	movwf	?___awdiv+3
  2598  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0143  0831               	movf	printf@exp^(0+128),w
  2600  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0145  00A8               	movwf	?___awdiv+2
  2602  0146  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2603  014B  0827               	movf	?___awdiv+1,w
  2604  014C  1683               	bsf	3,5	;RP0=1, select bank1
  2605  014D  00B2               	movwf	(printf@exp+1)^(0+128)
  2606  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2607  014F  0826               	movf	?___awdiv,w
  2608  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2609  0151  00B1               	movwf	printf@exp^(0+128)
  2610  0152  1FB2               	btfss	(printf@exp+1)^(0+128),7
  2611  0153  2958               	goto	l7596
  2612  0154  30FF               	movlw	-1
  2613  0155  07B1               	addwf	printf@exp^(0+128),f
  2614  0156  1C03               	skipc
  2615  0157  03B2               	decf	(printf@exp+1)^(0+128),f
  2616  0158                     l7596:	
  2617  0158  0331               	decf	printf@exp^(0+128),w
  2618  0159  3AFF               	xorlw	255
  2619  015A  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2620  015F  274E  120A  118A   	fcall	PL9	;call to abstracted procedure
  2621  0162  2773               	fcall	PL20	;call to abstracted procedure
  2622  0163  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0164  0825               	movf	printf@integ^(0+128),w
  2624  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0166  00BE               	movwf	?___ftmul+3
  2626  0167  1683               	bsf	3,5	;RP0=1, select bank1
  2627  0168  0826               	movf	(printf@integ+1)^(0+128),w
  2628  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2629  016A  00BF               	movwf	?___ftmul+4
  2630  016B  1683               	bsf	3,5	;RP0=1, select bank1
  2631  016C  0827               	movf	(printf@integ+2)^(0+128),w
  2632  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2633  016E  00C0               	movwf	?___ftmul+5
  2634  016F  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2635  0174  083B               	movf	?___ftmul,w
  2636  0175  1683               	bsf	3,5	;RP0=1, select bank1
  2637  0176  00A5               	movwf	printf@integ^(0+128)
  2638  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2639  0178  083C               	movf	?___ftmul+1,w
  2640  0179  1683               	bsf	3,5	;RP0=1, select bank1
  2641  017A  00A6               	movwf	(printf@integ+1)^(0+128)
  2642  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2643  017C  083D               	movf	?___ftmul+2,w
  2644  017D  1683               	bsf	3,5	;RP0=1, select bank1
  2645  017E  00A7               	movwf	(printf@integ+2)^(0+128)
  2646  017F  271A  120A  118A   	fcall	PL5	;call to abstracted procedure
  2647  0182  3080               	movlw	128
  2648  0183  01A3               	clrf	?___ftge+3
  2649  0184  00A4               	movwf	?___ftge+4
  2650  0185  303F               	movlw	63
  2651  0186  00A5               	movwf	?___ftge+5
  2652  0187  24BB  120A  118A   	fcall	___ftge
  2653  018A  1803               	btfsc	3,0
  2654  018B  2992               	goto	l7604
  2655  018C  30FF               	movlw	-1
  2656  018D  1683               	bsf	3,5	;RP0=1, select bank1
  2657  018E  07B1               	addwf	printf@exp^(0+128),f
  2658  018F  1C03               	skipc
  2659  0190  03B2               	decf	(printf@exp+1)^(0+128),f
  2660  0191  29A4               	goto	l7608
  2661  0192                     l7604:	
  2662  0192  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0193  271A  120A  118A   	fcall	PL5	;call to abstracted procedure
  2664  0196  3020               	movlw	32
  2665  0197  01A3               	clrf	?___ftge+3
  2666  0198  00A4               	movwf	?___ftge+4
  2667  0199  3041               	movlw	65
  2668  019A  00A5               	movwf	?___ftge+5
  2669  019B  24BB  120A  118A   	fcall	___ftge
  2670  019E  1C03               	btfss	3,0
  2671  019F  29A4               	goto	l7608
  2672  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  2673  01A1  0AB1               	incf	printf@exp^(0+128),f
  2674  01A2  1903               	skipnz
  2675  01A3  0AB2               	incf	(printf@exp+1)^(0+128),f
  2676  01A4                     l7608:	
  2677  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2678  01A5  0837               	movf	(printf@prec+1)^(0+128),w
  2679  01A6  3A80               	xorlw	128
  2680  01A7  00FF               	movwf	127
  2681  01A8  3080               	movlw	128
  2682  01A9  027F               	subwf	127,w
  2683  01AA  1D03               	skipz
  2684  01AB  29AE               	goto	u4525
  2685  01AC  300D               	movlw	13
  2686  01AD  0236               	subwf	printf@prec^(0+128),w
  2687  01AE                     u4525:	
  2688  01AE  1803               	skipnc
  2689  01AF  29D9               	goto	l7612
  2690  01B0  27AD               	call	PL37	;select bank 1
  2691  01B1  0836               	movf	printf@prec^(0+128),w
  2692  01B2  160A  118A  23E8   	fcall	_fround
      +       120A  118A         
  2693  01B7  0856               	movf	?_fround,w
  2694  01B8  00CA               	movwf	?___ftadd
  2695  01B9  0857               	movf	?_fround+1,w
  2696  01BA  00CB               	movwf	?___ftadd+1
  2697  01BB  0858               	movf	?_fround+2,w
  2698  01BC  00CC               	movwf	?___ftadd+2
  2699  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2700  01BE  0833               	movf	printf@fval^(0+128),w
  2701  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2702  01C0  00CD               	movwf	?___ftadd+3
  2703  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2704  01C2  0834               	movf	(printf@fval+1)^(0+128),w
  2705  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2706  01C4  00CE               	movwf	?___ftadd+4
  2707  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2708  01C6  0835               	movf	(printf@fval+2)^(0+128),w
  2709  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2710  01C8  00CF               	movwf	?___ftadd+5
  2711  01C9  120A  158A  2418   	fcall	___ftadd
      +       120A  118A         
  2712  01CE  084A               	movf	?___ftadd,w
  2713  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2714  01D0  00B3               	movwf	printf@fval^(0+128)
  2715  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2716  01D2  084B               	movf	?___ftadd+1,w
  2717  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2718  01D4  00B4               	movwf	(printf@fval+1)^(0+128)
  2719  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2720  01D6  084C               	movf	?___ftadd+2,w
  2721  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  2722  01D8  00B5               	movwf	(printf@fval+2)^(0+128)
  2723  01D9                     l7612:	
  2724  01D9  27AD               	call	PL37	;select bank 1
  2725  01DA  0832               	movf	(printf@exp+1)^(0+128),w
  2726  01DB  3A80               	xorlw	128
  2727  01DC  00FF               	movwf	127
  2728  01DD  3080               	movlw	128
  2729  01DE  027F               	subwf	127,w
  2730  01DF  1D03               	skipz
  2731  01E0  29E3               	goto	u4535
  2732  01E1  300A               	movlw	10
  2733  01E2  0231               	subwf	printf@exp^(0+128),w
  2734  01E3                     u4535:	
  2735  01E3  1803               	skipnc
  2736  01E4  2A04               	goto	l7620
  2737  01E5  27AD               	call	PL37	;select bank 1
  2738  01E6  0835               	movf	(printf@fval+2)^(0+128),w
  2739  01E7  0434               	iorwf	(printf@fval+1)^(0+128),w
  2740  01E8  0433               	iorwf	printf@fval^(0+128),w
  2741  01E9  1903               	skipnz
  2742  01EA  2A56               	goto	l7636
  2743  01EB  0833               	movf	printf@fval^(0+128),w
  2744  01EC  2768  120A  118A   	fcall	PL17	;call to abstracted procedure
  2745  01EF  250F  120A  118A   	fcall	___fttol
  2746  01F2  0831               	movf	?___fttol+3,w
  2747  01F3  0430               	iorwf	?___fttol+2,w
  2748  01F4  042F               	iorwf	?___fttol+1,w
  2749  01F5  042E               	iorwf	?___fttol,w
  2750  01F6  1D03               	skipz
  2751  01F7  2A56               	goto	l7636
  2752  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  2753  01F9  0832               	movf	(printf@exp+1)^(0+128),w
  2754  01FA  3A80               	xorlw	128
  2755  01FB  00FF               	movwf	127
  2756  01FC  3080               	movlw	128
  2757  01FD  027F               	subwf	127,w
  2758  01FE  1D03               	skipz
  2759  01FF  2A02               	goto	u4565
  2760  0200  3002               	movlw	2
  2761  0201  0231               	subwf	printf@exp^(0+128),w
  2762  0202                     u4565:	
  2763  0202  1C03               	skipc
  2764  0203  2A56               	goto	l7636
  2765  0204                     l7620:	
  2766  0204  27AD               	call	PL37	;select bank 1
  2767  0205  271A  120A  118A   	fcall	PL5	;call to abstracted procedure
  2768  0208  3070               	movlw	112
  2769  0209  00A3               	movwf	?___ftge+3
  2770  020A  3089               	movlw	137
  2771  020B  00A4               	movwf	?___ftge+4
  2772  020C  3040               	movlw	64
  2773  020D  00A5               	movwf	?___ftge+5
  2774  020E  24BB  120A  118A   	fcall	___ftge
  2775  0211  1803               	btfsc	3,0
  2776  0212  2A15               	goto	l7624
  2777  0213  30F7               	movlw	-9
  2778  0214  2A16               	goto	L2
  2779  0215                     l7624:	
  2780  0215  30F8               	movlw	-8
  2781  0216                     L2:	
  2782  0216  1683               	bsf	3,5	;RP0=1, select bank1
  2783  0217  07B1               	addwf	printf@exp^(0+128),f
  2784  0218  1C03               	skipc
  2785  0219  03B2               	decf	(printf@exp+1)^(0+128),f
  2786  021A  0831               	movf	printf@exp^(0+128),w
  2787  021B  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2788  0220  274E  120A  118A   	fcall	PL9	;call to abstracted procedure
  2789  0223  00A0               	movwf	?__tdiv_to_l_
  2790  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0225  0834               	movf	(printf@fval+1)^(0+128),w
  2792  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0227  00A1               	movwf	?__tdiv_to_l_+1
  2794  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0229  0835               	movf	(printf@fval+2)^(0+128),w
  2796  022A  1283               	bcf	3,5	;RP0=0, select bank0
  2797  022B  00A2               	movwf	?__tdiv_to_l_+2
  2798  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2799  022D  0825               	movf	printf@integ^(0+128),w
  2800  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2801  022F  00A3               	movwf	?__tdiv_to_l_+3
  2802  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2803  0231  0826               	movf	(printf@integ+1)^(0+128),w
  2804  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0233  00A4               	movwf	?__tdiv_to_l_+4
  2806  0234  1683               	bsf	3,5	;RP0=1, select bank1
  2807  0235  0827               	movf	(printf@integ+2)^(0+128),w
  2808  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0237  00A5               	movwf	?__tdiv_to_l_+5
  2810  0238  25F0  120A  118A   	fcall	__tdiv_to_l_
  2811  023B  0823               	movf	?__tdiv_to_l_+3,w
  2812  023C  1683               	bsf	3,5	;RP0=1, select bank1
  2813  023D  00A3               	movwf	(_printf$3186+3)^(0+128)
  2814  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2815  023F  0822               	movf	?__tdiv_to_l_+2,w
  2816  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2817  0241  00A2               	movwf	(_printf$3186+2)^(0+128)
  2818  0242  1283               	bcf	3,5	;RP0=0, select bank0
  2819  0243  0821               	movf	?__tdiv_to_l_+1,w
  2820  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2821  0245  00A1               	movwf	(_printf$3186+1)^(0+128)
  2822  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2823  0247  0820               	movf	?__tdiv_to_l_,w
  2824  0248  1683               	bsf	3,5	;RP0=1, select bank1
  2825  0249  00A0               	movwf	_printf$3186^(0+128)
  2826  024A  0823               	movf	(_printf$3186+3)^(0+128),w
  2827  024B  00AB               	movwf	(printf@_val+3)^(0+128)
  2828  024C  0822               	movf	(_printf$3186+2)^(0+128),w
  2829  024D  00AA               	movwf	(printf@_val+2)^(0+128)
  2830  024E  0821               	movf	(_printf$3186+1)^(0+128),w
  2831  024F  00A9               	movwf	(printf@_val+1)^(0+128)
  2832  0250  0820               	movf	_printf$3186^(0+128),w
  2833  0251  00A8               	movwf	printf@_val^(0+128)
  2834  0252  01B3               	clrf	printf@fval^(0+128)
  2835  0253  01B4               	clrf	(printf@fval+1)^(0+128)
  2836  0254  01B5               	clrf	(printf@fval+2)^(0+128)
  2837  0255  2A97               	goto	l7640
  2838  0256                     l7636:	
  2839  0256  27AD               	call	PL37	;select bank 1
  2840  0257  0833               	movf	printf@fval^(0+128),w
  2841  0258  2768  120A  118A   	fcall	PL17	;call to abstracted procedure
  2842  025B  250F  120A  118A   	fcall	___fttol
  2843  025E  2740  120A  118A   	fcall	PL8	;call to abstracted procedure
  2844  0261  1683               	bsf	3,5	;RP0=1, select bank1
  2845  0262  00A8               	movwf	printf@_val^(0+128)
  2846  0263  082B               	movf	(printf@_val+3)^(0+128),w
  2847  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0265  00AB               	movwf	?___lltoft+3
  2849  0266  1683               	bsf	3,5	;RP0=1, select bank1
  2850  0267  082A               	movf	(printf@_val+2)^(0+128),w
  2851  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2852  0269  00AA               	movwf	?___lltoft+2
  2853  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2854  026B  0829               	movf	(printf@_val+1)^(0+128),w
  2855  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2856  026D  00A9               	movwf	?___lltoft+1
  2857  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2858  026F  0828               	movf	printf@_val^(0+128),w
  2859  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0271  00A8               	movwf	?___lltoft
  2861  0272  266F  120A  118A   	fcall	___lltoft
  2862  0275  0828               	movf	?___lltoft,w
  2863  0276  00D6               	movwf	?___ftsub
  2864  0277  0829               	movf	?___lltoft+1,w
  2865  0278  00D7               	movwf	?___ftsub+1
  2866  0279  082A               	movf	?___lltoft+2,w
  2867  027A  00D8               	movwf	?___ftsub+2
  2868  027B  1683               	bsf	3,5	;RP0=1, select bank1
  2869  027C  0833               	movf	printf@fval^(0+128),w
  2870  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2871  027E  00D9               	movwf	?___ftsub+3
  2872  027F  1683               	bsf	3,5	;RP0=1, select bank1
  2873  0280  0834               	movf	(printf@fval+1)^(0+128),w
  2874  0281  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0282  00DA               	movwf	?___ftsub+4
  2876  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2877  0284  0835               	movf	(printf@fval+2)^(0+128),w
  2878  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0286  00DB               	movwf	?___ftsub+5
  2880  0287  268F  120A  118A   	fcall	___ftsub
  2881  028A  0856               	movf	?___ftsub,w
  2882  028B  1683               	bsf	3,5	;RP0=1, select bank1
  2883  028C  00B3               	movwf	printf@fval^(0+128)
  2884  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2885  028E  0857               	movf	?___ftsub+1,w
  2886  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2887  0290  00B4               	movwf	(printf@fval+1)^(0+128)
  2888  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0292  0858               	movf	?___ftsub+2,w
  2890  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2891  0294  00B5               	movwf	(printf@fval+2)^(0+128)
  2892  0295  01B1               	clrf	printf@exp^(0+128)
  2893  0296  01B2               	clrf	(printf@exp+1)^(0+128)
  2894  0297                     l7640:	
  2895  0297  01B8               	clrf	printf@c^(0+128)
  2896  0298  0AB8               	incf	printf@c^(0+128),f
  2897  0299                     l7646:	
  2898  0299  2710               	fcall	PL4	;call to abstracted procedure
  2899  029A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2900  029F  00E4               	movwf	??_printf+1
  2901  02A0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2902  02A5  00E5               	movwf	??_printf+2
  2903  02A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2904  02AB  00E6               	movwf	??_printf+3
  2905  02AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2906  02B1  00E7               	movwf	??_printf+4
  2907  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  2908  02B3  022B               	subwf	(printf@_val+3)^(0+128),w
  2909  02B4  1D03               	skipz
  2910  02B5  2AC6               	goto	u4585
  2911  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2912  02B7  0866               	movf	??_printf+3,w
  2913  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2914  02B9  022A               	subwf	(printf@_val+2)^(0+128),w
  2915  02BA  1D03               	skipz
  2916  02BB  2AC6               	goto	u4585
  2917  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2918  02BD  0865               	movf	??_printf+2,w
  2919  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2920  02BF  0229               	subwf	(printf@_val+1)^(0+128),w
  2921  02C0  1D03               	skipz
  2922  02C1  2AC6               	goto	u4585
  2923  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2924  02C3  0864               	movf	??_printf+1,w
  2925  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2926  02C5  0228               	subwf	printf@_val^(0+128),w
  2927  02C6                     u4585:	
  2928  02C6  1C03               	btfss	3,0
  2929  02C7  2ACD               	goto	l7654
  2930  02C8  0AB8               	incf	printf@c^(0+128),f
  2931  02C9  0838               	movf	printf@c^(0+128),w
  2932  02CA  3A0A               	xorlw	10
  2933  02CB  1D03               	skipz
  2934  02CC  2A99               	goto	l7646
  2935  02CD                     l7654:	
  2936  02CD  0836               	movf	printf@prec^(0+128),w
  2937  02CE  0738               	addwf	printf@c^(0+128),w
  2938  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2939  02D0  00E3               	movwf	??_printf
  2940  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  2941  02D2  0837               	movf	(printf@prec+1)^(0+128),w
  2942  02D3  1803               	skipnc
  2943  02D4  0A37               	incf	(printf@prec+1)^(0+128),w
  2944  02D5  1BB8               	btfsc	printf@c^(0+128),7
  2945  02D6  3EFF               	addlw	255
  2946  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  2947  02D8  00E4               	movwf	??_printf+1
  2948  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2949  02DA  0831               	movf	printf@exp^(0+128),w
  2950  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2951  02DC  0763               	addwf	??_printf,w
  2952  02DD  00E5               	movwf	??_printf+2
  2953  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2954  02DF  0832               	movf	(printf@exp+1)^(0+128),w
  2955  02E0  1803               	skipnc
  2956  02E1  0A32               	incf	(printf@exp+1)^(0+128),w
  2957  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  2958  02E3  0764               	addwf	??_printf+1,w
  2959  02E4  00E6               	movwf	??_printf+3
  2960  02E5  0865               	movf	??_printf+2,w
  2961  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  2962  02E7  02AF               	subwf	printf@width^(0+128),f
  2963  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2964  02E9  0866               	movf	??_printf+3,w
  2965  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2966  02EB  1C03               	skipc
  2967  02EC  03B0               	decf	(printf@width+1)^(0+128),f
  2968  02ED  02B0               	subwf	(printf@width+1)^(0+128),f
  2969  02EE  0837               	movf	(printf@prec+1)^(0+128),w
  2970  02EF  0436               	iorwf	printf@prec^(0+128),w
  2971  02F0  1903               	skipnz
  2972  02F1  2AF6               	goto	l7660
  2973  02F2  30FF               	movlw	-1
  2974  02F3  07AF               	addwf	printf@width^(0+128),f
  2975  02F4  1C03               	skipc
  2976  02F5  03B0               	decf	(printf@width+1)^(0+128),f
  2977  02F6                     l7660:	
  2978  02F6  082C               	movf	printf@flag^(0+128),w
  2979  02F7  3903               	andlw	3
  2980  02F8  1D03               	btfss	3,2
  2981  02F9  2B09               	goto	l7662
  2982  02FA                     l7668:	
  2983  02FA  0830               	movf	(printf@width+1)^(0+128),w
  2984  02FB  3A80               	xorlw	128
  2985  02FC  00FF               	movwf	127
  2986  02FD  3080               	movlw	128
  2987  02FE  027F               	subwf	127,w
  2988  02FF  1D03               	skipz
  2989  0300  2B03               	goto	u4625
  2990  0301  3001               	movlw	1
  2991  0302  022F               	subwf	printf@width^(0+128),w
  2992  0303                     u4625:	
  2993  0303  1C03               	btfss	3,0
  2994  0304  2B0F               	goto	l7670
  2995  0305  3020               	movlw	32
  2996  0306  24B8  120A  118A   	fcall	_putch
  2997  0309                     l7662:	
  2998  0309  30FF               	movlw	-1
  2999  030A  1683               	bsf	3,5	;RP0=1, select bank1
  3000  030B  07AF               	addwf	printf@width^(0+128),f
  3001  030C  1C03               	skipc
  3002  030D  03B0               	decf	(printf@width+1)^(0+128),f
  3003  030E  2AFA               	goto	l7668
  3004  030F                     l7670:	
  3005  030F  27AD               	call	PL37	;select bank 1
  3006  0310  082C               	movf	printf@flag^(0+128),w
  3007  0311  3903               	andlw	3
  3008  0312  1903               	btfsc	3,2
  3009  0313  2B42               	goto	l7676
  3010  0314  302D               	movlw	45
  3011  0315  2B3F               	goto	L3
  3012  0316                     l7674:	
  3013  0316  2738  120A  118A   	fcall	PL7	;call to abstracted procedure
  3014  0319  2710               	fcall	PL4	;call to abstracted procedure
  3015  031A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3016  031F  00A0               	movwf	?___lldiv
  3017  0320  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3018  0325  00A1               	movwf	?___lldiv+1
  3019  0326  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3020  032B  00A2               	movwf	?___lldiv+2
  3021  032C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3022  0331  2726  120A  118A   	fcall	PL6	;call to abstracted procedure
  3023  0334  25A8  120A  118A   	fcall	___lldiv
  3024  0337  2790  120A  118A   	fcall	PL24	;call to abstracted procedure
  3025  033A  256A  120A  118A   	fcall	___llmod
  3026  033D  082D               	movf	?___llmod,w
  3027  033E  3E30               	addlw	48
  3028  033F                     L3:	
  3029  033F  24B8  120A  118A   	fcall	_putch
  3030  0342                     l7676:	
  3031  0342  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0343  03B8               	decf	printf@c^(0+128),f
  3033  0344  0F38               	incfsz	printf@c^(0+128),w
  3034  0345  2B16               	goto	l7674
  3035  0346                     l7682:	
  3036  0346  0832               	movf	(printf@exp+1)^(0+128),w
  3037  0347  3A80               	xorlw	128
  3038  0348  00FF               	movwf	127
  3039  0349  3080               	movlw	128
  3040  034A  027F               	subwf	127,w
  3041  034B  1D03               	skipz
  3042  034C  2B4F               	goto	u4655
  3043  034D  3001               	movlw	1
  3044  034E  0231               	subwf	printf@exp^(0+128),w
  3045  034F                     u4655:	
  3046  034F  1C03               	btfss	3,0
  3047  0350  2B5B               	goto	l7684
  3048  0351  3030               	movlw	48
  3049  0352  24B8  120A  118A   	fcall	_putch
  3050  0355  30FF               	movlw	-1
  3051  0356  1683               	bsf	3,5	;RP0=1, select bank1
  3052  0357  07B1               	addwf	printf@exp^(0+128),f
  3053  0358  1C03               	skipc
  3054  0359  03B2               	decf	(printf@exp+1)^(0+128),f
  3055  035A  2B46               	goto	l7682
  3056  035B                     l7684:	
  3057  035B  27AD               	call	PL37	;select bank 1
  3058  035C  0837               	movf	(printf@prec+1)^(0+128),w
  3059  035D  3A80               	xorlw	128
  3060  035E  00FF               	movwf	127
  3061  035F  3080               	movlw	128
  3062  0360  027F               	subwf	127,w
  3063  0361  1D03               	skipz
  3064  0362  2B65               	goto	u4665
  3065  0363  3009               	movlw	9
  3066  0364  0236               	subwf	printf@prec^(0+128),w
  3067  0365                     u4665:	
  3068  0365  1C03               	skipc
  3069  0366  2B6A               	goto	l7688
  3070  0367  3008               	movlw	8
  3071  0368  27AD               	call	PL37	;select bank 1
  3072  0369  2B6C               	goto	L4
  3073  036A                     l7688:	
  3074  036A  27AD               	call	PL37	;select bank 1
  3075  036B  0836               	movf	printf@prec^(0+128),w
  3076  036C                     L4:	
  3077  036C  00B8               	movwf	printf@c^(0+128)
  3078  036D  1283               	bcf	3,5	;RP0=0, select bank0
  3079  036E  00E3               	movwf	??_printf
  3080  036F  01E4               	clrf	??_printf+1
  3081  0370  1BE3               	btfsc	??_printf,7
  3082  0371  03E4               	decf	??_printf+1,f
  3083  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0373  02B6               	subwf	printf@prec^(0+128),f
  3085  0374  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0375  0864               	movf	??_printf+1,w
  3087  0376  1683               	bsf	3,5	;RP0=1, select bank1
  3088  0377  1C03               	skipc
  3089  0378  03B7               	decf	(printf@prec+1)^(0+128),f
  3090  0379  02B7               	subwf	(printf@prec+1)^(0+128),f
  3091  037A  0838               	movf	printf@c^(0+128),w
  3092  037B  1903               	btfsc	3,2
  3093  037C  2B7F               	goto	l2335
  3094  037D  302E               	movlw	46
  3095  037E  24B8               	fcall	_putch
  3096  037F                     l2335:	
  3097  037F  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0380  0838               	movf	printf@c^(0+128),w
  3099  0381  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  3100  0386  084A               	movf	?_scale,w
  3101  0387  00BE               	movwf	?___ftmul+3
  3102  0388  084B               	movf	?_scale+1,w
  3103  0389  00BF               	movwf	?___ftmul+4
  3104  038A  084C               	movf	?_scale+2,w
  3105  038B  00C0               	movwf	?___ftmul+5
  3106  038C  1683               	bsf	3,5	;RP0=1, select bank1
  3107  038D  0833               	movf	printf@fval^(0+128),w
  3108  038E  1283               	bcf	3,5	;RP0=0, select bank0
  3109  038F  2773               	fcall	PL20	;call to abstracted procedure
  3110  0390  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  3111  0395  083B               	movf	?___ftmul,w
  3112  0396  00AE               	movwf	?___fttol
  3113  0397  083C               	movf	?___ftmul+1,w
  3114  0398  00AF               	movwf	?___fttol+1
  3115  0399  083D               	movf	?___ftmul+2,w
  3116  039A  00B0               	movwf	?___fttol+2
  3117  039B  250F  120A  118A   	fcall	___fttol
  3118  039E  2740  120A  118A   	fcall	PL8	;call to abstracted procedure
  3119  03A1  2C08               	goto	L5
  3120  03A2                     l7692:	
  3121  03A2  2738  120A  118A   	fcall	PL7	;call to abstracted procedure
  3122  03A5  2710               	fcall	PL4	;call to abstracted procedure
  3123  03A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3124  03AB  00A0               	movwf	?___lldiv
  3125  03AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3126  03B1  00A1               	movwf	?___lldiv+1
  3127  03B2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3128  03B7  00A2               	movwf	?___lldiv+2
  3129  03B8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3130  03BD  2726  120A  118A   	fcall	PL6	;call to abstracted procedure
  3131  03C0  25A8  120A  118A   	fcall	___lldiv
  3132  03C3  2790  120A  118A   	fcall	PL24	;call to abstracted procedure
  3133  03C6  256A  120A  118A   	fcall	___llmod
  3134  03C9  082D               	movf	?___llmod,w
  3135  03CA  3E30               	addlw	48
  3136  03CB  24B8  120A  118A   	fcall	_putch
  3137  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  3138  03CF  2710               	fcall	PL4	;call to abstracted procedure
  3139  03D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3140  03D5  00AD               	movwf	?___llmod
  3141  03D6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3142  03DB  00AE               	movwf	?___llmod+1
  3143  03DC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3144  03E1  00AF               	movwf	?___llmod+2
  3145  03E2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3146  03E7  00B0               	movwf	?___llmod+3
  3147  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  3148  03E9  082B               	movf	(printf@_val+3)^(0+128),w
  3149  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3150  03EB  00B4               	movwf	?___llmod+7
  3151  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  3152  03ED  082A               	movf	(printf@_val+2)^(0+128),w
  3153  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  3154  03EF  00B3               	movwf	?___llmod+6
  3155  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  3156  03F1  0829               	movf	(printf@_val+1)^(0+128),w
  3157  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3158  03F3  00B2               	movwf	?___llmod+5
  3159  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  3160  03F5  0828               	movf	printf@_val^(0+128),w
  3161  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3162  03F7  00B1               	movwf	?___llmod+4
  3163  03F8  256A  120A  118A   	fcall	___llmod
  3164  03FB  0830               	movf	?___llmod+3,w
  3165  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  3166  03FD  00AB               	movwf	(printf@_val+3)^(0+128)
  3167  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3168  03FF  082F               	movf	?___llmod+2,w
  3169  0400  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0401  00AA               	movwf	(printf@_val+2)^(0+128)
  3171  0402  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0403  082E               	movf	?___llmod+1,w
  3173  0404  1683               	bsf	3,5	;RP0=1, select bank1
  3174  0405  00A9               	movwf	(printf@_val+1)^(0+128)
  3175  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0407  082D               	movf	?___llmod,w
  3177  0408                     L5:	
  3178  0408  1683               	bsf	3,5	;RP0=1, select bank1
  3179  0409  00A8               	movwf	printf@_val^(0+128)
  3180  040A  03B8               	decf	printf@c^(0+128),f
  3181  040B  0F38               	incfsz	printf@c^(0+128),w
  3182  040C  2BA2               	goto	l7692
  3183  040D                     l7700:	
  3184  040D  0837               	movf	(printf@prec+1)^(0+128),w
  3185  040E  0436               	iorwf	printf@prec^(0+128),w
  3186  040F  1903               	btfsc	3,2
  3187  0410  2813               	goto	l7746
  3188  0411  3030               	movlw	48
  3189  0412  24B8  120A  118A   	fcall	_putch
  3190  0415  30FF               	movlw	-1
  3191  0416  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0417  07B6               	addwf	printf@prec^(0+128),f
  3193  0418  1C03               	skipc
  3194  0419  03B7               	decf	(printf@prec+1)^(0+128),f
  3195  041A  2C0D               	goto	l7700
  3196  041B                     l7702:	
  3197  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3198  041C  0837               	movf	(printf@prec+1)^(0+128),w
  3199  041D  0436               	iorwf	printf@prec^(0+128),w
  3200  041E  1D03               	skipz
  3201  041F  2C28               	goto	l7708
  3202  0420  082B               	movf	(printf@_val+3)^(0+128),w
  3203  0421  042A               	iorwf	(printf@_val+2)^(0+128),w
  3204  0422  0429               	iorwf	(printf@_val+1)^(0+128),w
  3205  0423  0428               	iorwf	printf@_val^(0+128),w
  3206  0424  1903               	btfsc	3,2
  3207  0425  0AB6               	incf	printf@prec^(0+128),f
  3208  0426  1903               	skipnz
  3209  0427  0AB7               	incf	(printf@prec+1)^(0+128),f
  3210  0428                     l7708:	
  3211  0428  0838               	movf	printf@c^(0+128),w
  3212  0429  277D  120A  118A   	fcall	PL22	;call to abstracted procedure
  3213  042C  0837               	movf	(printf@prec+1)^(0+128),w
  3214  042D  3A80               	xorlw	128
  3215  042E  1283               	bcf	3,5	;RP0=0, select bank0
  3216  042F  0265               	subwf	??_printf+2,w
  3217  0430  1D03               	skipz
  3218  0431  2C36               	goto	u4725
  3219  0432  1683               	bsf	3,5	;RP0=1, select bank1
  3220  0433  0836               	movf	printf@prec^(0+128),w
  3221  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0435  0263               	subwf	??_printf,w
  3223  0436                     u4725:	
  3224  0436  1803               	skipnc
  3225  0437  2C3C               	goto	l7712
  3226  0438  27AD               	call	PL37	;select bank 1
  3227  0439  0836               	movf	printf@prec^(0+128),w
  3228  043A  00B8               	movwf	printf@c^(0+128)
  3229  043B  2C54               	goto	l7716
  3230  043C                     l7712:	
  3231  043C  1683               	bsf	3,5	;RP0=1, select bank1
  3232  043D  2787  120A  118A   	fcall	PL23	;call to abstracted procedure
  3233  0440  0837               	movf	(printf@prec+1)^(0+128),w
  3234  0441  3A80               	xorlw	128
  3235  0442  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0443  00E5               	movwf	??_printf+2
  3237  0444  0864               	movf	??_printf+1,w
  3238  0445  3A80               	xorlw	128
  3239  0446  0265               	subwf	??_printf+2,w
  3240  0447  1D03               	skipz
  3241  0448  2C4C               	goto	u4735
  3242  0449  0863               	movf	??_printf,w
  3243  044A  1683               	bsf	3,5	;RP0=1, select bank1
  3244  044B  0236               	subwf	printf@prec^(0+128),w
  3245  044C                     u4735:	
  3246  044C  1803               	skipnc
  3247  044D  2C54               	goto	l7716
  3248  044E  27AD               	call	PL37	;select bank 1
  3249  044F  0838               	movf	printf@c^(0+128),w
  3250  0450  00B6               	movwf	printf@prec^(0+128)
  3251  0451  01B7               	clrf	(printf@prec+1)^(0+128)
  3252  0452  1BB6               	btfsc	printf@prec^(0+128),7
  3253  0453  03B7               	decf	(printf@prec+1)^(0+128),f
  3254  0454                     l7716:	
  3255  0454  27AD               	call	PL37	;select bank 1
  3256  0455  0830               	movf	(printf@width+1)^(0+128),w
  3257  0456  042F               	iorwf	printf@width^(0+128),w
  3258  0457  1903               	skipnz
  3259  0458  2C61               	goto	l7722
  3260  0459  082C               	movf	printf@flag^(0+128),w
  3261  045A  3903               	andlw	3
  3262  045B  1903               	btfsc	3,2
  3263  045C  2C61               	goto	l7722
  3264  045D  30FF               	movlw	-1
  3265  045E  07AF               	addwf	printf@width^(0+128),f
  3266  045F  1C03               	skipc
  3267  0460  03B0               	decf	(printf@width+1)^(0+128),f
  3268  0461                     l7722:	
  3269  0461  1F2D               	btfss	(printf@flag+1)^(0+128),6
  3270  0462  2C7E               	goto	l7730
  3271  0463  0837               	movf	(printf@prec+1)^(0+128),w
  3272  0464  3A80               	xorlw	128
  3273  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0466  00E3               	movwf	??_printf
  3275  0467  1683               	bsf	3,5	;RP0=1, select bank1
  3276  0468  0830               	movf	(printf@width+1)^(0+128),w
  3277  0469  3A80               	xorlw	128
  3278  046A  1283               	bcf	3,5	;RP0=0, select bank0
  3279  046B  0263               	subwf	??_printf,w
  3280  046C  1D03               	skipz
  3281  046D  2C71               	goto	u4775
  3282  046E  1683               	bsf	3,5	;RP0=1, select bank1
  3283  046F  082F               	movf	printf@width^(0+128),w
  3284  0470  0236               	subwf	printf@prec^(0+128),w
  3285  0471                     u4775:	
  3286  0471  1803               	skipnc
  3287  0472  2C7B               	goto	l7728
  3288  0473  27AD               	call	PL37	;select bank 1
  3289  0474  0836               	movf	printf@prec^(0+128),w
  3290  0475  02AF               	subwf	printf@width^(0+128),f
  3291  0476  0837               	movf	(printf@prec+1)^(0+128),w
  3292  0477  1C03               	skipc
  3293  0478  03B0               	decf	(printf@width+1)^(0+128),f
  3294  0479  02B0               	subwf	(printf@width+1)^(0+128),f
  3295  047A  2C7E               	goto	l7730
  3296  047B                     l7728:	
  3297  047B  27AD               	call	PL37	;select bank 1
  3298  047C  01AF               	clrf	printf@width^(0+128)
  3299  047D  01B0               	clrf	(printf@width+1)^(0+128)
  3300  047E                     l7730:	
  3301  047E  0838               	movf	printf@c^(0+128),w
  3302  047F  277D  120A  118A   	fcall	PL22	;call to abstracted procedure
  3303  0482  0830               	movf	(printf@width+1)^(0+128),w
  3304  0483  3A80               	xorlw	128
  3305  0484  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0485  0265               	subwf	??_printf+2,w
  3307  0486  1D03               	skipz
  3308  0487  2C8C               	goto	u4785
  3309  0488  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0489  082F               	movf	printf@width^(0+128),w
  3311  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3312  048B  0263               	subwf	??_printf,w
  3313  048C                     u4785:	
  3314  048C  1803               	skipnc
  3315  048D  2C9A               	goto	l7734
  3316  048E  1683               	bsf	3,5	;RP0=1, select bank1
  3317  048F  2787  120A  118A   	fcall	PL23	;call to abstracted procedure
  3318  0492  02AF               	subwf	printf@width^(0+128),f
  3319  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0494  0864               	movf	??_printf+1,w
  3321  0495  1683               	bsf	3,5	;RP0=1, select bank1
  3322  0496  1C03               	skipc
  3323  0497  03B0               	decf	(printf@width+1)^(0+128),f
  3324  0498  02B0               	subwf	(printf@width+1)^(0+128),f
  3325  0499  2C9D               	goto	l7736
  3326  049A                     l7734:	
  3327  049A  27AD               	call	PL37	;select bank 1
  3328  049B  01AF               	clrf	printf@width^(0+128)
  3329  049C  01B0               	clrf	(printf@width+1)^(0+128)
  3330  049D                     l7736:	
  3331  049D  0830               	movf	(printf@width+1)^(0+128),w
  3332  049E  042F               	iorwf	printf@width^(0+128),w
  3333  049F  1903               	skipnz
  3334  04A0  2CAE               	goto	l7742
  3335  04A1                     l7738:	
  3336  04A1  3020               	movlw	32
  3337  04A2  24B8  120A  118A   	fcall	_putch
  3338  04A5  30FF               	movlw	-1
  3339  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  3340  04A7  07AF               	addwf	printf@width^(0+128),f
  3341  04A8  1C03               	skipc
  3342  04A9  03B0               	decf	(printf@width+1)^(0+128),f
  3343  04AA  0830               	movf	(printf@width+1)^(0+128),w
  3344  04AB  042F               	iorwf	printf@width^(0+128),w
  3345  04AC  1D03               	skipz
  3346  04AD  2CA1               	goto	l7738
  3347  04AE                     l7742:	
  3348  04AE  082C               	movf	printf@flag^(0+128),w
  3349  04AF  3903               	andlw	3
  3350  04B0  1903               	btfsc	3,2
  3351  04B1  2813               	goto	l7746
  3352  04B2  302D               	movlw	45
  3353  04B3                     L1:	
  3354  04B3  24B8  120A  118A   	fcall	_putch
  3355  04B6  2813               	goto	l7746
  3356  04B7                     l2357:	
  3357  04B7  0008               	return
  3358  04B8                     __end_of_printf:	
  3359  04B8                     __ptext691:	
  3360 ;; =============== function _printf ends ============
  3361                           
  3362                           
  3363 ;; *************** function _putch *****************
  3364 ;; Defined at:
  3365 ;;		line 142 in file "D:\TTVXL\Project TTVXL\BT02week11ttvxl\BT02week11ttvxl.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  c               1    wreg     unsigned char 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  c               1    9[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;		None               void
  3372 ;; Registers used:
  3373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/20
  3376 ;;		On exit  : 60/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3379 ;;      Params:         0       0       0       0       0
  3380 ;;      Locals:         0       1       0       0       0
  3381 ;;      Temps:          0       0       0       0       0
  3382 ;;      Totals:         0       1       0       0       0
  3383 ;;Total ram usage:        1 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:    5
  3386 ;; This function calls:
  3387 ;;		_lcd_putc
  3388 ;; This function is called by:
  3389 ;;		_printf
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392  04B8                     _putch:	
  3393  04B8  27B0               	call	PL38	;select bank 0
  3394                           
  3395                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3396                           ;putch@c stored from wreg
  3397  04B9  00A9               	movwf	putch@c
  3398                           
  3399                           ;BT02week11ttvxl.c: 143: lcd_putc(c);
  3400  04BA  2EA7               	ljmp	_lcd_putc
  3401  04BB                     __end_of_putch:	
  3402  04BB                     __ptext712:	
  3403 ;; =============== function ___lldiv ends ============
  3404                           
  3405                           
  3406 ;; *************** function ___ftge *****************
  3407 ;; Defined at:
  3408 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  ff1             3    0[BANK0 ] float 
  3411 ;;  ff2             3    3[BANK0 ] float 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;		None               void
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0
  3418 ;; Tracked objects:
  3419 ;;		On entry : 60/0
  3420 ;;		On exit  : 60/0
  3421 ;;		Unchanged: FFF9F/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3423 ;;      Params:         0       6       0       0       0
  3424 ;;      Locals:         0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0
  3426 ;;      Totals:         0       6       0       0       0
  3427 ;;Total ram usage:        6 bytes
  3428 ;; Hardware stack levels used:    1
  3429 ;; Hardware stack levels required when called:    2
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_printf
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436  04BB                     ___ftge:	
  3437                           
  3438                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3439  04BB  1FA2               	btfss	___ftge@ff1+2,7
  3440  04BC  2CCA               	goto	l6944
  3441  04BD  0820               	movf	___ftge@ff1,w
  3442  04BE  3C00               	sublw	0
  3443  04BF  00A0               	movwf	___ftge@ff1
  3444  04C0  0821               	movf	___ftge@ff1+1,w
  3445  04C1  1C03               	skipc
  3446  04C2  0F21               	incfsz	___ftge@ff1+1,w
  3447  04C3  3C00               	sublw	0
  3448  04C4  00A1               	movwf	___ftge@ff1+1
  3449  04C5  0822               	movf	___ftge@ff1+2,w
  3450  04C6  1C03               	skipc
  3451  04C7  0F22               	incfsz	___ftge@ff1+2,w
  3452  04C8  3C80               	sublw	128
  3453  04C9  00A2               	movwf	___ftge@ff1+2
  3454  04CA                     l6944:	
  3455  04CA  1FA5               	btfss	___ftge@ff2+2,7
  3456  04CB  2CD9               	goto	l6948
  3457  04CC  0823               	movf	___ftge@ff2,w
  3458  04CD  3C00               	sublw	0
  3459  04CE  00A3               	movwf	___ftge@ff2
  3460  04CF  0824               	movf	___ftge@ff2+1,w
  3461  04D0  1C03               	skipc
  3462  04D1  0F24               	incfsz	___ftge@ff2+1,w
  3463  04D2  3C00               	sublw	0
  3464  04D3  00A4               	movwf	___ftge@ff2+1
  3465  04D4  0825               	movf	___ftge@ff2+2,w
  3466  04D5  1C03               	skipc
  3467  04D6  0F25               	incfsz	___ftge@ff2+2,w
  3468  04D7  3C80               	sublw	128
  3469  04D8  00A5               	movwf	___ftge@ff2+2
  3470  04D9                     l6948:	
  3471  04D9  3080               	movlw	128
  3472  04DA  06A2               	xorwf	___ftge@ff1+2,f
  3473  04DB  06A5               	xorwf	___ftge@ff2+2,f
  3474  04DC  0825               	movf	___ftge@ff2+2,w
  3475  04DD  0222               	subwf	___ftge@ff1+2,w
  3476  04DE  1D03               	skipz
  3477  04DF  0008               	return
  3478  04E0  0824               	movf	___ftge@ff2+1,w
  3479  04E1  0221               	subwf	___ftge@ff1+1,w
  3480  04E2  1D03               	skipz
  3481  04E3  0008               	return
  3482  04E4  0823               	movf	___ftge@ff2,w
  3483  04E5  0220               	subwf	___ftge@ff1,w
  3484  04E6  0008               	return
  3485  04E7                     __end_of___ftge:	
  3486  04E7                     __ptext724:	
  3487 ;; =============== function __tdiv_to_l_ ends ============
  3488                           
  3489                           
  3490 ;; *************** function _isdigit *****************
  3491 ;; Defined at:
  3492 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  c               1    wreg     unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  c               1    1[BANK0 ] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;		None               void
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0
  3501 ;; Tracked objects:
  3502 ;;		On entry : 60/20
  3503 ;;		On exit  : 60/0
  3504 ;;		Unchanged: FFF9F/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         0       2       0       0       0
  3508 ;;      Temps:          0       0       0       0       0
  3509 ;;      Totals:         0       2       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used:    1
  3512 ;; Hardware stack levels required when called:    2
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_printf
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519  04E7                     _isdigit:	
  3520                           
  3521                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3522                           ;isdigit@c stored from wreg
  3523  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  3524  04E8  00A1               	movwf	isdigit@c
  3525  04E9  303A               	movlw	58
  3526  04EA  01A0               	clrf	_isdigit$3694
  3527  04EB  0221               	subwf	isdigit@c,w
  3528  04EC  1803               	skipnc
  3529  04ED  2CF4               	goto	l6630
  3530  04EE  3030               	movlw	48
  3531  04EF  0221               	subwf	isdigit@c,w
  3532  04F0  1C03               	skipc
  3533  04F1  2CF4               	goto	l6630
  3534  04F2  01A0               	clrf	_isdigit$3694
  3535  04F3  0AA0               	incf	_isdigit$3694,f
  3536  04F4                     l6630:	
  3537  04F4  0C20               	rrf	_isdigit$3694,w
  3538  04F5  0008               	return
  3539  04F6                     __end_of_isdigit:	
  3540  04F6                     __ptext720:	
  3541 ;; =============== function ___lbdiv ends ============
  3542                           
  3543                           
  3544 ;; *************** function ___wmul *****************
  3545 ;; Defined at:
  3546 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3549 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;  product         2    4[BANK0 ] unsigned int 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  2    0[BANK0 ] unsigned int 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 60/0
  3558 ;;		On exit  : 60/0
  3559 ;;		Unchanged: FFF9F/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3561 ;;      Params:         0       4       0       0       0
  3562 ;;      Locals:         0       2       0       0       0
  3563 ;;      Temps:          0       0       0       0       0
  3564 ;;      Totals:         0       6       0       0       0
  3565 ;;Total ram usage:        6 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    2
  3568 ;; This function calls:
  3569 ;;		Nothing
  3570 ;; This function is called by:
  3571 ;;		_fround
  3572 ;;		_scale
  3573 ;;		_printf
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576  04F6                     ___wmul:	
  3577                           
  3578                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3579  04F6  01A4               	clrf	___wmul@product
  3580  04F7  01A5               	clrf	___wmul@product+1
  3581  04F8                     l6746:	
  3582  04F8  1C20               	btfss	___wmul@multiplier,0
  3583  04F9  2D00               	goto	l6750
  3584  04FA  0822               	movf	___wmul@multiplicand,w
  3585  04FB  07A4               	addwf	___wmul@product,f
  3586  04FC  1803               	skipnc
  3587  04FD  0AA5               	incf	___wmul@product+1,f
  3588  04FE  0823               	movf	___wmul@multiplicand+1,w
  3589  04FF  07A5               	addwf	___wmul@product+1,f
  3590  0500                     l6750:	
  3591  0500  1003               	clrc
  3592  0501  0DA2               	rlf	___wmul@multiplicand,f
  3593  0502  0DA3               	rlf	___wmul@multiplicand+1,f
  3594  0503  1003               	clrc
  3595  0504  0CA1               	rrf	___wmul@multiplier+1,f
  3596  0505  0CA0               	rrf	___wmul@multiplier,f
  3597  0506  0821               	movf	___wmul@multiplier+1,w
  3598  0507  0420               	iorwf	___wmul@multiplier,w
  3599  0508  1D03               	skipz
  3600  0509  2CF8               	goto	l6746
  3601  050A  0825               	movf	___wmul@product+1,w
  3602  050B  00A1               	movwf	?___wmul+1
  3603  050C  0824               	movf	___wmul@product,w
  3604  050D  00A0               	movwf	?___wmul
  3605  050E  0008               	return
  3606  050F                     __end_of___wmul:	
  3607  050F                     __ptext716:	
  3608 ;; =============== function ___awdiv ends ============
  3609                           
  3610                           
  3611 ;; *************** function ___fttol *****************
  3612 ;; Defined at:
  3613 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  f1              3   14[BANK0 ] float 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  lval            4   22[BANK0 ] unsigned long 
  3618 ;;  exp1            1   26[BANK0 ] unsigned char 
  3619 ;;  sign1           1   21[BANK0 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  4   14[BANK0 ] long 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0
  3624 ;; Tracked objects:
  3625 ;;		On entry : 60/0
  3626 ;;		On exit  : 60/0
  3627 ;;		Unchanged: FFF9F/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         0       4       0       0       0
  3630 ;;      Locals:         0       6       0       0       0
  3631 ;;      Temps:          0       3       0       0       0
  3632 ;;      Totals:         0      13       0       0       0
  3633 ;;Total ram usage:       13 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    2
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_printf
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642  050F                     ___fttol:	
  3643                           
  3644                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3645  050F  27A0  120A  118A   	fcall	PL32	;call to abstracted procedure
  3646  0512  1003               	clrc
  3647  0513  0D33               	rlf	??___fttol+1,w
  3648  0514  0D34               	rlf	??___fttol+2,w
  3649  0515  00BA               	movwf	___fttol@exp1
  3650  0516  08BA               	movf	___fttol@exp1,f
  3651  0517  1D03               	skipz
  3652  0518  2D1E               	goto	l6834
  3653  0519                     l6832:	
  3654  0519  01AE               	clrf	?___fttol
  3655  051A  01AF               	clrf	?___fttol+1
  3656  051B  01B0               	clrf	?___fttol+2
  3657  051C  01B1               	clrf	?___fttol+3
  3658  051D  0008               	return
  3659  051E                     l6834:	
  3660  051E  27A0  120A  118A   	fcall	PL32	;call to abstracted procedure
  3661  0521  3017               	movlw	23
  3662  0522                     u3145:	
  3663  0522  1003               	clrc
  3664  0523  0CB4               	rrf	??___fttol+2,f
  3665  0524  0CB3               	rrf	??___fttol+1,f
  3666  0525  0CB2               	rrf	??___fttol,f
  3667  0526  3EFF               	addlw	-1
  3668  0527  1D03               	skipz
  3669  0528  2D22               	goto	u3145
  3670  0529  0832               	movf	??___fttol,w
  3671  052A  00B5               	movwf	___fttol@sign1
  3672  052B  17AF               	bsf	___fttol@f1+1,7
  3673  052C  01B0               	clrf	___fttol@f1+2
  3674  052D  082E               	movf	___fttol@f1,w
  3675  052E  00B6               	movwf	___fttol@lval
  3676  052F  082F               	movf	___fttol@f1+1,w
  3677  0530  00B7               	movwf	___fttol@lval+1
  3678  0531  0830               	movf	___fttol@f1+2,w
  3679  0532  00B8               	movwf	___fttol@lval+2
  3680  0533  308E               	movlw	142
  3681  0534  01B9               	clrf	___fttol@lval+3
  3682  0535  02BA               	subwf	___fttol@exp1,f
  3683  0536  1FBA               	btfss	___fttol@exp1,7
  3684  0537  2D45               	goto	l6854
  3685  0538  083A               	movf	___fttol@exp1,w
  3686  0539  3A80               	xorlw	128
  3687  053A  3E8F               	addlw	143
  3688  053B  1C03               	btfss	3,0
  3689  053C  2D19               	goto	l6832
  3690  053D                     l6850:	
  3691  053D  1003               	clrc
  3692  053E  0CB9               	rrf	___fttol@lval+3,f
  3693  053F  0CB8               	rrf	___fttol@lval+2,f
  3694  0540  0CB7               	rrf	___fttol@lval+1,f
  3695  0541  0CB6               	rrf	___fttol@lval,f
  3696  0542  0FBA               	incfsz	___fttol@exp1,f
  3697  0543  2D3D               	goto	l6850
  3698  0544  2D53               	goto	l6860
  3699  0545                     l6854:	
  3700  0545  3018               	movlw	24
  3701  0546  023A               	subwf	___fttol@exp1,w
  3702  0547  1803               	btfsc	3,0
  3703  0548  2D19               	goto	l6832
  3704  0549                     l3477:	
  3705  0549  08BA               	movf	___fttol@exp1,f
  3706  054A  1903               	btfsc	3,2
  3707  054B  2D53               	goto	l6860
  3708  054C  1003               	clrc
  3709  054D  0DB6               	rlf	___fttol@lval,f
  3710  054E  0DB7               	rlf	___fttol@lval+1,f
  3711  054F  0DB8               	rlf	___fttol@lval+2,f
  3712  0550  0DB9               	rlf	___fttol@lval+3,f
  3713  0551  03BA               	decf	___fttol@exp1,f
  3714  0552  2D49               	goto	l3477
  3715  0553                     l6860:	
  3716  0553  0835               	movf	___fttol@sign1,w
  3717  0554  1903               	btfsc	3,2
  3718  0555  2D61               	goto	l6864
  3719  0556  09B6               	comf	___fttol@lval,f
  3720  0557  09B7               	comf	___fttol@lval+1,f
  3721  0558  09B8               	comf	___fttol@lval+2,f
  3722  0559  09B9               	comf	___fttol@lval+3,f
  3723  055A  0AB6               	incf	___fttol@lval,f
  3724  055B  1903               	skipnz
  3725  055C  0AB7               	incf	___fttol@lval+1,f
  3726  055D  1903               	skipnz
  3727  055E  0AB8               	incf	___fttol@lval+2,f
  3728  055F  1903               	skipnz
  3729  0560  0AB9               	incf	___fttol@lval+3,f
  3730  0561                     l6864:	
  3731  0561  0839               	movf	___fttol@lval+3,w
  3732  0562  00B1               	movwf	?___fttol+3
  3733  0563  0838               	movf	___fttol@lval+2,w
  3734  0564  00B0               	movwf	?___fttol+2
  3735  0565  0837               	movf	___fttol@lval+1,w
  3736  0566  00AF               	movwf	?___fttol+1
  3737  0567  0836               	movf	___fttol@lval,w
  3738  0568  00AE               	movwf	?___fttol
  3739  0569  0008               	return
  3740  056A                     __end_of___fttol:	
  3741  056A                     __ptext714:	
  3742 ;; =============== function ___ftneg ends ============
  3743                           
  3744                           
  3745 ;; *************** function ___llmod *****************
  3746 ;; Defined at:
  3747 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  divisor         4   13[BANK0 ] unsigned long 
  3750 ;;  dividend        4   17[BANK0 ] unsigned long 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  counter         1   21[BANK0 ] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  4   13[BANK0 ] unsigned long 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0
  3757 ;; Tracked objects:
  3758 ;;		On entry : 60/0
  3759 ;;		On exit  : 60/0
  3760 ;;		Unchanged: FFF9F/0
  3761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3762 ;;      Params:         0       8       0       0       0
  3763 ;;      Locals:         0       1       0       0       0
  3764 ;;      Temps:          0       0       0       0       0
  3765 ;;      Totals:         0       9       0       0       0
  3766 ;;Total ram usage:        9 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    2
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_printf
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775  056A                     ___llmod:	
  3776                           
  3777                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3778  056A  0830               	movf	___llmod@divisor+3,w
  3779  056B  042F               	iorwf	___llmod@divisor+2,w
  3780  056C  042E               	iorwf	___llmod@divisor+1,w
  3781  056D  042D               	iorwf	___llmod@divisor,w
  3782  056E  1903               	skipnz
  3783  056F  2D9F               	goto	l6928
  3784  0570  01B5               	clrf	___llmod@counter
  3785  0571                     L13:	
  3786  0571  0AB5               	incf	___llmod@counter,f
  3787  0572  1BB0               	btfsc	___llmod@divisor+3,7
  3788  0573  2D7A               	goto	l6920
  3789  0574  1003               	clrc
  3790  0575  0DAD               	rlf	___llmod@divisor,f
  3791  0576  0DAE               	rlf	___llmod@divisor+1,f
  3792  0577  0DAF               	rlf	___llmod@divisor+2,f
  3793  0578  0DB0               	rlf	___llmod@divisor+3,f
  3794  0579  2D71               	goto	L13
  3795  057A                     l6920:	
  3796  057A  0830               	movf	___llmod@divisor+3,w
  3797  057B  0234               	subwf	___llmod@dividend+3,w
  3798  057C  1D03               	skipz
  3799  057D  2D88               	goto	u3305
  3800  057E  082F               	movf	___llmod@divisor+2,w
  3801  057F  0233               	subwf	___llmod@dividend+2,w
  3802  0580  1D03               	skipz
  3803  0581  2D88               	goto	u3305
  3804  0582  082E               	movf	___llmod@divisor+1,w
  3805  0583  0232               	subwf	___llmod@dividend+1,w
  3806  0584  1D03               	skipz
  3807  0585  2D88               	goto	u3305
  3808  0586  082D               	movf	___llmod@divisor,w
  3809  0587  0231               	subwf	___llmod@dividend,w
  3810  0588                     u3305:	
  3811  0588  1C03               	skipc
  3812  0589  2D99               	goto	L14
  3813  058A  082D               	movf	___llmod@divisor,w
  3814  058B  02B1               	subwf	___llmod@dividend,f
  3815  058C  082E               	movf	___llmod@divisor+1,w
  3816  058D  1C03               	skipc
  3817  058E  0F2E               	incfsz	___llmod@divisor+1,w
  3818  058F  02B2               	subwf	___llmod@dividend+1,f
  3819  0590  082F               	movf	___llmod@divisor+2,w
  3820  0591  1C03               	skipc
  3821  0592  0F2F               	incfsz	___llmod@divisor+2,w
  3822  0593  02B3               	subwf	___llmod@dividend+2,f
  3823  0594  0830               	movf	___llmod@divisor+3,w
  3824  0595  1C03               	skipc
  3825  0596  0F30               	incfsz	___llmod@divisor+3,w
  3826  0597  02B4               	subwf	___llmod@dividend+3,f
  3827  0598  1003               	clrc
  3828  0599                     L14:	
  3829  0599  0CB0               	rrf	___llmod@divisor+3,f
  3830  059A  0CAF               	rrf	___llmod@divisor+2,f
  3831  059B  0CAE               	rrf	___llmod@divisor+1,f
  3832  059C  0CAD               	rrf	___llmod@divisor,f
  3833  059D  0BB5               	decfsz	___llmod@counter,f
  3834  059E  2D7A               	goto	l6920
  3835  059F                     l6928:	
  3836  059F  0834               	movf	___llmod@dividend+3,w
  3837  05A0  00B0               	movwf	?___llmod+3
  3838  05A1  0833               	movf	___llmod@dividend+2,w
  3839  05A2  00AF               	movwf	?___llmod+2
  3840  05A3  0832               	movf	___llmod@dividend+1,w
  3841  05A4  00AE               	movwf	?___llmod+1
  3842  05A5  0831               	movf	___llmod@dividend,w
  3843  05A6  00AD               	movwf	?___llmod
  3844  05A7  0008               	return
  3845  05A8                     __end_of___llmod:	
  3846  05A8                     __ptext711:	
  3847 ;; =============== function ___awmod ends ============
  3848                           
  3849                           
  3850 ;; *************** function ___lldiv *****************
  3851 ;; Defined at:
  3852 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;  divisor         4    0[BANK0 ] unsigned long 
  3855 ;;  dividend        4    4[BANK0 ] unsigned long 
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;  quotient        4    8[BANK0 ] unsigned long 
  3858 ;;  counter         1   12[BANK0 ] unsigned char 
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  4    0[BANK0 ] unsigned long 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0
  3863 ;; Tracked objects:
  3864 ;;		On entry : 60/0
  3865 ;;		On exit  : 60/0
  3866 ;;		Unchanged: FFF9F/0
  3867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3868 ;;      Params:         0       8       0       0       0
  3869 ;;      Locals:         0       5       0       0       0
  3870 ;;      Temps:          0       0       0       0       0
  3871 ;;      Totals:         0      13       0       0       0
  3872 ;;Total ram usage:       13 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    2
  3875 ;; This function calls:
  3876 ;;		Nothing
  3877 ;; This function is called by:
  3878 ;;		_printf
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881  05A8                     ___lldiv:	
  3882                           
  3883                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3884  05A8  01A8               	clrf	___lldiv@quotient
  3885  05A9  01A9               	clrf	___lldiv@quotient+1
  3886  05AA  01AA               	clrf	___lldiv@quotient+2
  3887  05AB  01AB               	clrf	___lldiv@quotient+3
  3888  05AC  0823               	movf	___lldiv@divisor+3,w
  3889  05AD  0422               	iorwf	___lldiv@divisor+2,w
  3890  05AE  0421               	iorwf	___lldiv@divisor+1,w
  3891  05AF  0420               	iorwf	___lldiv@divisor,w
  3892  05B0  1903               	skipnz
  3893  05B1  2DE7               	goto	l6982
  3894  05B2  01AC               	clrf	___lldiv@counter
  3895  05B3                     L10:	
  3896  05B3  0AAC               	incf	___lldiv@counter,f
  3897  05B4  1BA3               	btfsc	___lldiv@divisor+3,7
  3898  05B5  2DBC               	goto	l6970
  3899  05B6  1003               	clrc
  3900  05B7  0DA0               	rlf	___lldiv@divisor,f
  3901  05B8  0DA1               	rlf	___lldiv@divisor+1,f
  3902  05B9  0DA2               	rlf	___lldiv@divisor+2,f
  3903  05BA  0DA3               	rlf	___lldiv@divisor+3,f
  3904  05BB  2DB3               	goto	L10
  3905  05BC                     l6970:	
  3906  05BC  1003               	clrc
  3907  05BD  0DA8               	rlf	___lldiv@quotient,f
  3908  05BE  0DA9               	rlf	___lldiv@quotient+1,f
  3909  05BF  0DAA               	rlf	___lldiv@quotient+2,f
  3910  05C0  0DAB               	rlf	___lldiv@quotient+3,f
  3911  05C1  0823               	movf	___lldiv@divisor+3,w
  3912  05C2  0227               	subwf	___lldiv@dividend+3,w
  3913  05C3  1D03               	skipz
  3914  05C4  2DCF               	goto	u3385
  3915  05C5  0822               	movf	___lldiv@divisor+2,w
  3916  05C6  0226               	subwf	___lldiv@dividend+2,w
  3917  05C7  1D03               	skipz
  3918  05C8  2DCF               	goto	u3385
  3919  05C9  0821               	movf	___lldiv@divisor+1,w
  3920  05CA  0225               	subwf	___lldiv@dividend+1,w
  3921  05CB  1D03               	skipz
  3922  05CC  2DCF               	goto	u3385
  3923  05CD  0820               	movf	___lldiv@divisor,w
  3924  05CE  0224               	subwf	___lldiv@dividend,w
  3925  05CF                     u3385:	
  3926  05CF  1C03               	skipc
  3927  05D0  2DE1               	goto	L11
  3928  05D1  0820               	movf	___lldiv@divisor,w
  3929  05D2  02A4               	subwf	___lldiv@dividend,f
  3930  05D3  0821               	movf	___lldiv@divisor+1,w
  3931  05D4  1C03               	skipc
  3932  05D5  0F21               	incfsz	___lldiv@divisor+1,w
  3933  05D6  02A5               	subwf	___lldiv@dividend+1,f
  3934  05D7  0822               	movf	___lldiv@divisor+2,w
  3935  05D8  1C03               	skipc
  3936  05D9  0F22               	incfsz	___lldiv@divisor+2,w
  3937  05DA  02A6               	subwf	___lldiv@dividend+2,f
  3938  05DB  0823               	movf	___lldiv@divisor+3,w
  3939  05DC  1C03               	skipc
  3940  05DD  0F23               	incfsz	___lldiv@divisor+3,w
  3941  05DE  02A7               	subwf	___lldiv@dividend+3,f
  3942  05DF  1428               	bsf	___lldiv@quotient,0
  3943  05E0  1003               	clrc
  3944  05E1                     L11:	
  3945  05E1  0CA3               	rrf	___lldiv@divisor+3,f
  3946  05E2  0CA2               	rrf	___lldiv@divisor+2,f
  3947  05E3  0CA1               	rrf	___lldiv@divisor+1,f
  3948  05E4  0CA0               	rrf	___lldiv@divisor,f
  3949  05E5  0BAC               	decfsz	___lldiv@counter,f
  3950  05E6  2DBC               	goto	l6970
  3951  05E7                     l6982:	
  3952  05E7  082B               	movf	___lldiv@quotient+3,w
  3953  05E8  00A3               	movwf	?___lldiv+3
  3954  05E9  082A               	movf	___lldiv@quotient+2,w
  3955  05EA  00A2               	movwf	?___lldiv+2
  3956  05EB  0829               	movf	___lldiv@quotient+1,w
  3957  05EC  00A1               	movwf	?___lldiv+1
  3958  05ED  0828               	movf	___lldiv@quotient,w
  3959  05EE  00A0               	movwf	?___lldiv
  3960  05EF  0008               	return
  3961  05F0                     __end_of___lldiv:	
  3962  05F0                     __ptext723:	
  3963 ;; =============== function __div_to_l_ ends ============
  3964                           
  3965                           
  3966 ;; *************** function __tdiv_to_l_ *****************
  3967 ;; Defined at:
  3968 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  f1              3    0[BANK0 ] float 
  3971 ;;  f2              3    3[BANK0 ] float 
  3972 ;; Auto vars:     Size  Location     Type
  3973 ;;  quot            4    9[BANK0 ] unsigned long 
  3974 ;;  exp1            1   14[BANK0 ] unsigned char 
  3975 ;;  cntr            1   13[BANK0 ] unsigned char 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  4    0[BANK0 ] unsigned long 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0
  3980 ;; Tracked objects:
  3981 ;;		On entry : 60/0
  3982 ;;		On exit  : 60/0
  3983 ;;		Unchanged: FFF9F/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         0       6       0       0       0
  3986 ;;      Locals:         0       6       0       0       0
  3987 ;;      Temps:          0       3       0       0       0
  3988 ;;      Totals:         0      15       0       0       0
  3989 ;;Total ram usage:       15 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    2
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_printf
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998  05F0                     __tdiv_to_l_:	
  3999                           
  4000                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4001  05F0  0820               	movf	__tdiv_to_l_@f1,w
  4002  05F1  00A6               	movwf	??__tdiv_to_l_
  4003  05F2  0821               	movf	__tdiv_to_l_@f1+1,w
  4004  05F3  00A7               	movwf	??__tdiv_to_l_+1
  4005  05F4  0822               	movf	__tdiv_to_l_@f1+2,w
  4006  05F5  00A8               	movwf	??__tdiv_to_l_+2
  4007  05F6  1003               	clrc
  4008  05F7  0D27               	rlf	??__tdiv_to_l_+1,w
  4009  05F8  0D28               	rlf	??__tdiv_to_l_+2,w
  4010  05F9  00AE               	movwf	__tdiv_to_l_@exp1
  4011  05FA  08AE               	movf	__tdiv_to_l_@exp1,f
  4012  05FB  1D03               	skipz
  4013  05FC  2E02               	goto	l6638
  4014  05FD                     l6636:	
  4015  05FD  01A0               	clrf	?__tdiv_to_l_
  4016  05FE  01A1               	clrf	?__tdiv_to_l_+1
  4017  05FF  01A2               	clrf	?__tdiv_to_l_+2
  4018  0600  01A3               	clrf	?__tdiv_to_l_+3
  4019  0601  0008               	return
  4020  0602                     l6638:	
  4021  0602  0823               	movf	__tdiv_to_l_@f2,w
  4022  0603  00A6               	movwf	??__tdiv_to_l_
  4023  0604  0824               	movf	__tdiv_to_l_@f2+1,w
  4024  0605  00A7               	movwf	??__tdiv_to_l_+1
  4025  0606  0825               	movf	__tdiv_to_l_@f2+2,w
  4026  0607  00A8               	movwf	??__tdiv_to_l_+2
  4027  0608  1003               	clrc
  4028  0609  0D27               	rlf	??__tdiv_to_l_+1,w
  4029  060A  0D28               	rlf	??__tdiv_to_l_+2,w
  4030  060B  00AD               	movwf	__tdiv_to_l_@cntr
  4031  060C  08AD               	movf	__tdiv_to_l_@cntr,f
  4032  060D  1903               	btfsc	3,2
  4033  060E  2DFD               	goto	l6636
  4034  060F  307F               	movlw	127
  4035  0610  17A1               	bsf	__tdiv_to_l_@f1+1,7
  4036  0611  01A2               	clrf	__tdiv_to_l_@f1+2
  4037  0612  17A4               	bsf	__tdiv_to_l_@f2+1,7
  4038  0613  01A5               	clrf	__tdiv_to_l_@f2+2
  4039  0614  01A9               	clrf	__tdiv_to_l_@quot
  4040  0615  01AA               	clrf	__tdiv_to_l_@quot+1
  4041  0616  01AB               	clrf	__tdiv_to_l_@quot+2
  4042  0617  01AC               	clrf	__tdiv_to_l_@quot+3
  4043  0618  02AE               	subwf	__tdiv_to_l_@exp1,f
  4044  0619  3098               	movlw	152
  4045  061A  072D               	addwf	__tdiv_to_l_@cntr,w
  4046  061B  00A6               	movwf	??__tdiv_to_l_
  4047  061C  02AE               	subwf	__tdiv_to_l_@exp1,f
  4048  061D  3018               	movlw	24
  4049  061E  00AD               	movwf	__tdiv_to_l_@cntr
  4050  061F                     l6652:	
  4051  061F  1003               	clrc
  4052  0620  0DA9               	rlf	__tdiv_to_l_@quot,f
  4053  0621  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  4054  0622  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  4055  0623  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  4056  0624  0825               	movf	__tdiv_to_l_@f2+2,w
  4057  0625  0222               	subwf	__tdiv_to_l_@f1+2,w
  4058  0626  1D03               	skipz
  4059  0627  2E2E               	goto	u2795
  4060  0628  0824               	movf	__tdiv_to_l_@f2+1,w
  4061  0629  0221               	subwf	__tdiv_to_l_@f1+1,w
  4062  062A  1D03               	skipz
  4063  062B  2E2E               	goto	u2795
  4064  062C  0823               	movf	__tdiv_to_l_@f2,w
  4065  062D  0220               	subwf	__tdiv_to_l_@f1,w
  4066  062E                     u2795:	
  4067  062E  1C03               	skipc
  4068  062F  2E3C               	goto	L19
  4069  0630  0823               	movf	__tdiv_to_l_@f2,w
  4070  0631  02A0               	subwf	__tdiv_to_l_@f1,f
  4071  0632  0824               	movf	__tdiv_to_l_@f2+1,w
  4072  0633  1C03               	skipc
  4073  0634  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  4074  0635  02A1               	subwf	__tdiv_to_l_@f1+1,f
  4075  0636  0825               	movf	__tdiv_to_l_@f2+2,w
  4076  0637  1C03               	skipc
  4077  0638  0A25               	incf	__tdiv_to_l_@f2+2,w
  4078  0639  02A2               	subwf	__tdiv_to_l_@f1+2,f
  4079  063A  1429               	bsf	__tdiv_to_l_@quot,0
  4080  063B  1003               	clrc
  4081  063C                     L19:	
  4082  063C  0DA0               	rlf	__tdiv_to_l_@f1,f
  4083  063D  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  4084  063E  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  4085  063F  0BAD               	decfsz	__tdiv_to_l_@cntr,f
  4086  0640  2E1F               	goto	l6652
  4087  0641  1FAE               	btfss	__tdiv_to_l_@exp1,7
  4088  0642  2E50               	goto	l6672
  4089  0643  082E               	movf	__tdiv_to_l_@exp1,w
  4090  0644  3A80               	xorlw	128
  4091  0645  3E97               	addlw	151
  4092  0646  1C03               	btfss	3,0
  4093  0647  2DFD               	goto	l6636
  4094  0648                     l6668:	
  4095  0648  1003               	clrc
  4096  0649  0CAC               	rrf	__tdiv_to_l_@quot+3,f
  4097  064A  0CAB               	rrf	__tdiv_to_l_@quot+2,f
  4098  064B  0CAA               	rrf	__tdiv_to_l_@quot+1,f
  4099  064C  0CA9               	rrf	__tdiv_to_l_@quot,f
  4100  064D  0FAE               	incfsz	__tdiv_to_l_@exp1,f
  4101  064E  2E48               	goto	l6668
  4102  064F  2E5E               	goto	l6678
  4103  0650                     l6672:	
  4104  0650  3018               	movlw	24
  4105  0651  022E               	subwf	__tdiv_to_l_@exp1,w
  4106  0652  1803               	btfsc	3,0
  4107  0653  2DFD               	goto	l6636
  4108  0654                     l3615:	
  4109  0654  08AE               	movf	__tdiv_to_l_@exp1,f
  4110  0655  1903               	btfsc	3,2
  4111  0656  2E5E               	goto	l6678
  4112  0657  1003               	clrc
  4113  0658  0DA9               	rlf	__tdiv_to_l_@quot,f
  4114  0659  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  4115  065A  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  4116  065B  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  4117  065C  03AE               	decf	__tdiv_to_l_@exp1,f
  4118  065D  2E54               	goto	l3615
  4119  065E                     l6678:	
  4120  065E  082C               	movf	__tdiv_to_l_@quot+3,w
  4121  065F  00A3               	movwf	?__tdiv_to_l_+3
  4122  0660  082B               	movf	__tdiv_to_l_@quot+2,w
  4123  0661  00A2               	movwf	?__tdiv_to_l_+2
  4124  0662  082A               	movf	__tdiv_to_l_@quot+1,w
  4125  0663  00A1               	movwf	?__tdiv_to_l_+1
  4126  0664  0829               	movf	__tdiv_to_l_@quot,w
  4127  0665  00A0               	movwf	?__tdiv_to_l_
  4128  0666  0008               	return
  4129  0667                     __end_of__tdiv_to_l_:	
  4130  0667                     __ptext713:	
  4131 ;; =============== function ___ftge ends ============
  4132                           
  4133                           
  4134 ;; *************** function ___ftneg *****************
  4135 ;; Defined at:
  4136 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  f1              3    0[BANK0 ] float 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  3    0[BANK0 ] float 
  4143 ;; Registers used:
  4144 ;;		wreg
  4145 ;; Tracked objects:
  4146 ;;		On entry : 160/0
  4147 ;;		On exit  : 160/0
  4148 ;;		Unchanged: FFE9F/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4150 ;;      Params:         0       3       0       0       0
  4151 ;;      Locals:         0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0
  4153 ;;      Totals:         0       3       0       0       0
  4154 ;;Total ram usage:        3 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    2
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_printf
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163  0667                     ___ftneg:	
  4164                           
  4165                           ; Regs used in ___ftneg: [wreg]
  4166  0667  0822               	movf	___ftneg@f1+2,w
  4167  0668  0421               	iorwf	___ftneg@f1+1,w
  4168  0669  0420               	iorwf	___ftneg@f1,w
  4169  066A  1903               	skipnz
  4170  066B  0008               	return
  4171  066C  3080               	movlw	128
  4172  066D  06A2               	xorwf	___ftneg@f1+2,f
  4173  066E  0008               	return
  4174  066F                     __end_of___ftneg:	
  4175  066F                     __ptext703:	
  4176 ;; =============== function _read_adc_AN0 ends ============
  4177                           
  4178                           
  4179 ;; *************** function ___lltoft *****************
  4180 ;; Defined at:
  4181 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  c               4    8[BANK0 ] unsigned long 
  4184 ;; Auto vars:     Size  Location     Type
  4185 ;;  exp             1   12[BANK0 ] unsigned char 
  4186 ;; Return value:  Size  Location     Type
  4187 ;;                  3    8[BANK0 ] float 
  4188 ;; Registers used:
  4189 ;;		wreg, status,2, status,0, pclath, cstack
  4190 ;; Tracked objects:
  4191 ;;		On entry : 60/0
  4192 ;;		On exit  : 60/0
  4193 ;;		Unchanged: FFF9F/0
  4194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4195 ;;      Params:         0       4       0       0       0
  4196 ;;      Locals:         0       1       0       0       0
  4197 ;;      Temps:          0       0       0       0       0
  4198 ;;      Totals:         0       5       0       0       0
  4199 ;;Total ram usage:        5 bytes
  4200 ;; Hardware stack levels used:    1
  4201 ;; Hardware stack levels required when called:    3
  4202 ;; This function calls:
  4203 ;;		___ftpack
  4204 ;; This function is called by:
  4205 ;;		_printf
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208  066F                     ___lltoft:	
  4209                           
  4210                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4211  066F  308E               	movlw	142
  4212  0670  00AC               	movwf	___lltoft@exp
  4213  0671                     l7316:	
  4214  0671  30FF               	movlw	255
  4215  0672  052B               	andwf	___lltoft@c+3,w
  4216  0673  1903               	btfsc	3,2
  4217  0674  2E7C               	goto	l7318
  4218  0675  1003               	clrc
  4219  0676  0CAB               	rrf	___lltoft@c+3,f
  4220  0677  0CAA               	rrf	___lltoft@c+2,f
  4221  0678  0CA9               	rrf	___lltoft@c+1,f
  4222  0679  0CA8               	rrf	___lltoft@c,f
  4223  067A  0AAC               	incf	___lltoft@exp,f
  4224  067B  2E71               	goto	l7316
  4225  067C                     l7318:	
  4226  067C  0828               	movf	___lltoft@c,w
  4227  067D  00A0               	movwf	?___ftpack
  4228  067E  0829               	movf	___lltoft@c+1,w
  4229  067F  00A1               	movwf	?___ftpack+1
  4230  0680  082A               	movf	___lltoft@c+2,w
  4231  0681  00A2               	movwf	?___ftpack+2
  4232  0682  082C               	movf	___lltoft@exp,w
  4233  0683  00A3               	movwf	?___ftpack+3
  4234  0684  01A4               	clrf	?___ftpack+4
  4235  0685  120A  158A  2769   	fcall	___ftpack
  4236  0688  0820               	movf	?___ftpack,w
  4237  0689  00A8               	movwf	?___lltoft
  4238  068A  0821               	movf	?___ftpack+1,w
  4239  068B  00A9               	movwf	?___lltoft+1
  4240  068C  0822               	movf	?___ftpack+2,w
  4241  068D  00AA               	movwf	?___lltoft+2
  4242  068E  0008               	return
  4243  068F                     __end_of___lltoft:	
  4244  068F                     __ptext693:	
  4245 ;; =============== function _lcd_putc ends ============
  4246                           
  4247                           
  4248 ;; *************** function ___ftsub *****************
  4249 ;; Defined at:
  4250 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  f2              3   54[BANK0 ] float 
  4253 ;;  f1              3   57[BANK0 ] float 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  3   54[BANK0 ] float 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, pclath, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 60/0
  4262 ;;		On exit  : 60/0
  4263 ;;		Unchanged: FFF9F/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4265 ;;      Params:         0       6       0       0       0
  4266 ;;      Locals:         0       0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0
  4268 ;;      Totals:         0       6       0       0       0
  4269 ;;Total ram usage:        6 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    4
  4272 ;; This function calls:
  4273 ;;		___ftadd
  4274 ;; This function is called by:
  4275 ;;		_printf
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278  068F                     ___ftsub:	
  4279                           
  4280                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4281  068F  3080               	movlw	128
  4282  0690  06D8               	xorwf	___ftsub@f2+2,f
  4283  0691  0859               	movf	___ftsub@f1,w
  4284  0692  00CA               	movwf	?___ftadd
  4285  0693  085A               	movf	___ftsub@f1+1,w
  4286  0694  00CB               	movwf	?___ftadd+1
  4287  0695  085B               	movf	___ftsub@f1+2,w
  4288  0696  00CC               	movwf	?___ftadd+2
  4289  0697  0856               	movf	___ftsub@f2,w
  4290  0698  00CD               	movwf	?___ftadd+3
  4291  0699  0857               	movf	___ftsub@f2+1,w
  4292  069A  00CE               	movwf	?___ftadd+4
  4293  069B  0858               	movf	___ftsub@f2+2,w
  4294  069C  00CF               	movwf	?___ftadd+5
  4295  069D  120A  158A  2418   	fcall	___ftadd
  4296  06A0  084A               	movf	?___ftadd,w
  4297  06A1  00D6               	movwf	?___ftsub
  4298  06A2  084B               	movf	?___ftadd+1,w
  4299  06A3  00D7               	movwf	?___ftsub+1
  4300  06A4  084C               	movf	?___ftadd+2,w
  4301  06A5  00D8               	movwf	?___ftsub+2
  4302  06A6  0008               	return
  4303  06A7                     __end_of___ftsub:	
  4304  06A7                     __ptext692:	
  4305 ;; =============== function _putch ends ============
  4306                           
  4307                           
  4308 ;; *************** function _lcd_putc *****************
  4309 ;; Defined at:
  4310 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  c               1    wreg     unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  c               1    8[BANK0 ] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;		None               void
  4317 ;; Registers used:
  4318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 60/0
  4321 ;;		On exit  : 60/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4324 ;;      Params:         0       0       0       0       0
  4325 ;;      Locals:         0       1       0       0       0
  4326 ;;      Temps:          0       0       0       0       0
  4327 ;;      Totals:         0       1       0       0       0
  4328 ;;Total ram usage:        1 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    4
  4331 ;; This function calls:
  4332 ;;		_lcd_put_byte
  4333 ;;		_lcd_busy
  4334 ;;		_lcd_gotoxy
  4335 ;;		_isprint
  4336 ;; This function is called by:
  4337 ;;		_putch
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340  06A7                     _lcd_putc:	
  4341                           
  4342                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4343                           ;lcd_putc@c stored from wreg
  4344  06A7  00A8               	movwf	lcd_putc@c
  4345                           
  4346                           ;lcd(16).c: 144: switch(c){
  4347  06A8  2ED3               	goto	l7516
  4348  06A9                     l7502:	
  4349  06A9  3000               	movlw	0
  4350                           
  4351                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4352  06AA  01A0               	clrf	?_lcd_put_byte
  4353  06AB  0AA0               	incf	?_lcd_put_byte,f
  4354  06AC  120A  158A  2179   	fcall	_lcd_put_byte
      +       120A  118A         
  4355  06B1                     l7504:	
  4356                           ;lcd(16).c: 147: while(lcd_busy());
  4357                           
  4358  06B1  26DC  120A  118A   	fcall	_lcd_busy
  4359  06B4  3800               	iorlw	0
  4360  06B5  1903               	btfsc	3,2
  4361  06B6  0008               	return
  4362  06B7  2EB1               	goto	l7504
  4363  06B8                     l7506:	
  4364  06B8  3000               	movlw	0
  4365                           
  4366                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4367  06B9  01A5               	clrf	?_lcd_gotoxy
  4368  06BA  0AA5               	incf	?_lcd_gotoxy,f
  4369  06BB  120A  158A  28A1   	ljmp	_lcd_gotoxy
  4370  06BE                     l7508:	
  4371                           ;lcd(16).c: 151: break;
  4372                           
  4373                           
  4374                           ;lcd(16).c: 153: if(isprint(c)){
  4375  06BE  0828               	movf	lcd_putc@c,w
  4376  06BF  2702  120A  118A   	fcall	_isprint
  4377  06C2  1C03               	btfss	3,0
  4378  06C3  0008               	return
  4379                           
  4380                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4381  06C4  0828               	movf	lcd_putc@c,w
  4382  06C5  00A0               	movwf	?_lcd_put_byte
  4383  06C6  3001               	movlw	1
  4384  06C7  120A  158A  2179   	fcall	_lcd_put_byte
      +       120A  118A         
  4385  06CC                     l7512:	
  4386                           ;lcd(16).c: 155: while(lcd_busy());
  4387                           
  4388  06CC  26DC  120A  118A   	fcall	_lcd_busy
  4389  06CF  3800               	iorlw	0
  4390  06D0  1903               	btfsc	3,2
  4391  06D1  0008               	return
  4392  06D2  2ECC               	goto	l7512
  4393  06D3                     l7516:	
  4394  06D3  0828               	movf	lcd_putc@c,w
  4395                           
  4396                           ; Switch size 1, requested type "space"
  4397                           ; Number of cases is 2, Range of values is 10 to 12
  4398                           ; switch strategies available:
  4399                           ; Name         Instructions Cycles
  4400                           ; simple_byte            7     4 (average)
  4401                           ; direct_byte           20    11 (fixed)
  4402                           ; jumptable            263     9 (fixed)
  4403                           ;	Chosen strategy is simple_byte
  4404  06D4  3A0A               	xorlw	10	; case 10
  4405  06D5  1903               	skipnz
  4406  06D6  2EB8               	goto	l7506
  4407  06D7  3A06               	xorlw	6	; case 12
  4408  06D8  1903               	skipnz
  4409  06D9  2EA9               	goto	l7502
  4410  06DA  2EBE               	goto	l7508
  4411  06DB  0008               	return
  4412  06DC                     __end_of_lcd_putc:	
  4413  06DC                     __ptext708:	
  4414 ;; =============== function ___ftadd ends ============
  4415                           
  4416                           
  4417 ;; *************** function _lcd_busy *****************
  4418 ;; Defined at:
  4419 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;		None
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;  busy            1    1[BANK0 ] unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1    wreg      unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 60/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4433 ;;      Params:         0       0       0       0       0
  4434 ;;      Locals:         0       1       0       0       0
  4435 ;;      Temps:          0       1       0       0       0
  4436 ;;      Totals:         0       2       0       0       0
  4437 ;;Total ram usage:        2 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:    2
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_lcd_init
  4444 ;;		_lcd_putc
  4445 ;;		_lcd_gotoxy
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448  06DC                     _lcd_busy:	
  4449  06DC  27AD               	call	PL37	;select bank 1
  4450                           
  4451                           ;lcd(16).c: 48: unsigned char busy;
  4452                           ;lcd(16).c: 50: TRISD4 = 1;
  4453                           
  4454                           ; Regs used in _lcd_busy: [wreg]
  4455  06DD  1608               	bsf	8,4
  4456                           
  4457                           ;lcd(16).c: 51: TRISD5 = 1;
  4458  06DE  1688               	bsf	8,5
  4459                           
  4460                           ;lcd(16).c: 52: TRISD6 = 1;
  4461  06DF  1708               	bsf	8,6
  4462                           
  4463                           ;lcd(16).c: 53: TRISD7 = 1;
  4464  06E0  1788               	bsf	8,7
  4465                           
  4466                           ;lcd(16).c: 55: RD2 = 1;
  4467  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  4468  06E2  3021               	movlw	33
  4469  06E3  1508               	bsf	8,2
  4470                           
  4471                           ;lcd(16).c: 56: RD1 = 0;
  4472  06E4  1088               	bcf	8,1
  4473                           
  4474                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4475  06E5  00A0               	movwf	??_lcd_busy
  4476  06E6                     u5057:	
  4477  06E6  0BA0               	decfsz	??_lcd_busy,f
  4478  06E7  2EE6               	goto	u5057
  4479  06E8  27B0               	call	PL38	;select bank 0
  4480                           
  4481                           ;lcd(16).c: 58: RD3 = 1;
  4482  06E9  3021               	movlw	33
  4483  06EA  1588               	bsf	8,3
  4484                           
  4485                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4486  06EB  00A0               	movwf	??_lcd_busy
  4487  06EC                     u5067:	
  4488  06EC  0BA0               	decfsz	??_lcd_busy,f
  4489  06ED  2EEC               	goto	u5067
  4490                           
  4491                           ;lcd(16).c: 61: busy = RD7;
  4492  06EE  3000               	movlw	0
  4493  06EF  27B0               	call	PL38	;select bank 0
  4494  06F0  1B88               	btfsc	8,7
  4495  06F1  3001               	movlw	1
  4496  06F2  00A1               	movwf	lcd_busy@busy
  4497  06F3  3021               	movlw	33
  4498                           
  4499                           ;lcd(16).c: 63: RD3 = 0;
  4500  06F4  1188               	bcf	8,3
  4501                           
  4502                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4503  06F5  00A0               	movwf	??_lcd_busy
  4504  06F6                     u5077:	
  4505  06F6  0BA0               	decfsz	??_lcd_busy,f
  4506  06F7  2EF6               	goto	u5077
  4507  06F8  27B0               	call	PL38	;select bank 0
  4508                           
  4509                           ;lcd(16).c: 65: RD3 = 1;
  4510  06F9  3021               	movlw	33
  4511  06FA  1588               	bsf	8,3
  4512                           
  4513                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  4514  06FB  00A0               	movwf	??_lcd_busy
  4515  06FC                     u5087:	
  4516  06FC  0BA0               	decfsz	??_lcd_busy,f
  4517  06FD  2EFC               	goto	u5087
  4518  06FE  27B0               	call	PL38	;select bank 0
  4519                           
  4520                           ;lcd(16).c: 67: RD3 = 0;
  4521  06FF  1188               	bcf	8,3
  4522                           
  4523                           ;lcd(16).c: 70: return busy;
  4524  0700  0821               	movf	lcd_busy@busy,w
  4525  0701  0008               	return
  4526  0702                     __end_of_lcd_busy:	
  4527  0702                     __ptext725:	
  4528 ;; =============== function _isdigit ends ============
  4529                           
  4530                           
  4531 ;; *************** function _isprint *****************
  4532 ;; Defined at:
  4533 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  c               1    wreg     unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  c               1    1[BANK0 ] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;		None               void
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0
  4542 ;; Tracked objects:
  4543 ;;		On entry : 60/0
  4544 ;;		On exit  : 60/0
  4545 ;;		Unchanged: FFF9F/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         0       0       0       0       0
  4548 ;;      Locals:         0       2       0       0       0
  4549 ;;      Temps:          0       0       0       0       0
  4550 ;;      Totals:         0       2       0       0       0
  4551 ;;Total ram usage:        2 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    2
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_lcd_putc
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560  0702                     _isprint:	
  4561                           
  4562                           ; Regs used in _isprint: [wreg+status,2+status,0]
  4563                           ;isprint@c stored from wreg
  4564  0702  00A1               	movwf	isprint@c
  4565  0703  307F               	movlw	127
  4566  0704  01A0               	clrf	_isprint$3697
  4567  0705  0221               	subwf	isprint@c,w
  4568  0706  1803               	skipnc
  4569  0707  2F0E               	goto	l6618
  4570  0708  3020               	movlw	32
  4571  0709  0221               	subwf	isprint@c,w
  4572  070A  1C03               	skipc
  4573  070B  2F0E               	goto	l6618
  4574  070C  01A0               	clrf	_isprint$3697
  4575  070D  0AA0               	incf	_isprint$3697,f
  4576  070E                     l6618:	
  4577  070E  0C20               	rrf	_isprint$3697,w
  4578  070F  0008               	return
  4579  0710                     __end_of_isprint:	
  4580  0710                     PL4:	
  4581  0710  0838               	movf	printf@c^(0+128),w
  4582  0711  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0712  00E3               	movwf	??_printf
  4584  0713  1003               	clrc
  4585  0714  0DE3               	rlf	??_printf,f
  4586  0715  1003               	clrc
  4587  0716  0D63               	rlf	??_printf,w
  4588  0717  3E4F               	addlw	low (_dpowers-__stringbase)
  4589  0718  0084               	movwf	4
  4590  0719  0008               	return
  4591  071A                     PL5:	
  4592  071A  0825               	movf	printf@integ^(0+128),w
  4593  071B  1283               	bcf	3,5	;RP0=0, select bank0
  4594  071C  00A0               	movwf	?___ftge
  4595  071D  1683               	bsf	3,5	;RP0=1, select bank1
  4596  071E  0826               	movf	(printf@integ+1)^(0+128),w
  4597  071F  1283               	bcf	3,5	;RP0=0, select bank0
  4598  0720  00A1               	movwf	?___ftge+1
  4599  0721  1683               	bsf	3,5	;RP0=1, select bank1
  4600  0722  0827               	movf	(printf@integ+2)^(0+128),w
  4601  0723  1283               	bcf	3,5	;RP0=0, select bank0
  4602  0724  00A2               	movwf	?___ftge+2
  4603  0725  0008               	return
  4604  0726                     PL6:	
  4605  0726  00A3               	movwf	?___lldiv+3
  4606  0727  1683               	bsf	3,5	;RP0=1, select bank1
  4607  0728  082B               	movf	(printf@_val+3)^(0+128),w
  4608  0729  1283               	bcf	3,5	;RP0=0, select bank0
  4609  072A  00A7               	movwf	?___lldiv+7
  4610  072B  1683               	bsf	3,5	;RP0=1, select bank1
  4611  072C  082A               	movf	(printf@_val+2)^(0+128),w
  4612  072D  1283               	bcf	3,5	;RP0=0, select bank0
  4613  072E  00A6               	movwf	?___lldiv+6
  4614  072F  1683               	bsf	3,5	;RP0=1, select bank1
  4615  0730  0829               	movf	(printf@_val+1)^(0+128),w
  4616  0731  1283               	bcf	3,5	;RP0=0, select bank0
  4617  0732  00A5               	movwf	?___lldiv+5
  4618  0733  1683               	bsf	3,5	;RP0=1, select bank1
  4619  0734  0828               	movf	printf@_val^(0+128),w
  4620  0735  1283               	bcf	3,5	;RP0=0, select bank0
  4621  0736  00A4               	movwf	?___lldiv+4
  4622  0737  0008               	return
  4623  0738                     PL7:	
  4624  0738  300A               	movlw	10
  4625  0739  1283               	bcf	3,5	;RP0=0, select bank0
  4626  073A  00AD               	movwf	?___llmod
  4627  073B  01AE               	clrf	?___llmod+1
  4628  073C  01AF               	clrf	?___llmod+2
  4629  073D  01B0               	clrf	?___llmod+3
  4630  073E  1683               	bsf	3,5	;RP0=1, select bank1
  4631  073F  0008               	return
  4632  0740                     PL8:	
  4633  0740  0831               	movf	?___fttol+3,w
  4634  0741  1683               	bsf	3,5	;RP0=1, select bank1
  4635  0742  00AB               	movwf	(printf@_val+3)^(0+128)
  4636  0743  1283               	bcf	3,5	;RP0=0, select bank0
  4637  0744  0830               	movf	?___fttol+2,w
  4638  0745  1683               	bsf	3,5	;RP0=1, select bank1
  4639  0746  00AA               	movwf	(printf@_val+2)^(0+128)
  4640  0747  1283               	bcf	3,5	;RP0=0, select bank0
  4641  0748  082F               	movf	?___fttol+1,w
  4642  0749  1683               	bsf	3,5	;RP0=1, select bank1
  4643  074A  00A9               	movwf	(printf@_val+1)^(0+128)
  4644  074B  1283               	bcf	3,5	;RP0=0, select bank0
  4645  074C  082E               	movf	?___fttol,w
  4646  074D  0008               	return
  4647  074E                     PL9:	
  4648  074E  084A               	movf	?_scale,w
  4649  074F  1683               	bsf	3,5	;RP0=1, select bank1
  4650  0750  00A5               	movwf	printf@integ^(0+128)
  4651  0751  1283               	bcf	3,5	;RP0=0, select bank0
  4652  0752  084B               	movf	?_scale+1,w
  4653  0753  1683               	bsf	3,5	;RP0=1, select bank1
  4654  0754  00A6               	movwf	(printf@integ+1)^(0+128)
  4655  0755  1283               	bcf	3,5	;RP0=0, select bank0
  4656  0756  084C               	movf	?_scale+2,w
  4657  0757  1683               	bsf	3,5	;RP0=1, select bank1
  4658  0758  00A7               	movwf	(printf@integ+2)^(0+128)
  4659  0759  0833               	movf	printf@fval^(0+128),w
  4660  075A  1283               	bcf	3,5	;RP0=0, select bank0
  4661  075B  0008               	return
  4662  075C                     PL14:	
  4663  075C  1283               	bcf	3,5	;RP0=0, select bank0
  4664  075D  0720               	addwf	?___wmul,w
  4665  075E  00E3               	movwf	??_printf
  4666  075F  3000               	movlw	0
  4667  0760  1803               	skipnc
  4668  0761  3001               	movlw	1
  4669  0762  0721               	addwf	?___wmul+1,w
  4670  0763  00E4               	movwf	??_printf+1
  4671  0764  0863               	movf	??_printf,w
  4672  0765  3ED0               	addlw	208
  4673  0766  1683               	bsf	3,5	;RP0=1, select bank1
  4674  0767  0008               	return
  4675  0768                     PL17:	
  4676  0768  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0769  00AE               	movwf	?___fttol
  4678  076A  1683               	bsf	3,5	;RP0=1, select bank1
  4679  076B  0834               	movf	(printf@fval+1)^(0+128),w
  4680  076C  1283               	bcf	3,5	;RP0=0, select bank0
  4681  076D  00AF               	movwf	?___fttol+1
  4682  076E  1683               	bsf	3,5	;RP0=1, select bank1
  4683  076F  0835               	movf	(printf@fval+2)^(0+128),w
  4684  0770  1283               	bcf	3,5	;RP0=0, select bank0
  4685  0771  00B0               	movwf	?___fttol+2
  4686  0772  0008               	return
  4687  0773                     PL20:	
  4688  0773  00BB               	movwf	?___ftmul
  4689  0774  1683               	bsf	3,5	;RP0=1, select bank1
  4690  0775  0834               	movf	(printf@fval+1)^(0+128),w
  4691  0776  1283               	bcf	3,5	;RP0=0, select bank0
  4692  0777  00BC               	movwf	?___ftmul+1
  4693  0778  1683               	bsf	3,5	;RP0=1, select bank1
  4694  0779  0835               	movf	(printf@fval+2)^(0+128),w
  4695  077A  1283               	bcf	3,5	;RP0=0, select bank0
  4696  077B  00BD               	movwf	?___ftmul+2
  4697  077C  0008               	return
  4698  077D                     PL22:	
  4699  077D  1283               	bcf	3,5	;RP0=0, select bank0
  4700  077E  00E3               	movwf	??_printf
  4701  077F  01E4               	clrf	??_printf+1
  4702  0780  1BE3               	btfsc	??_printf,7
  4703  0781  03E4               	decf	??_printf+1,f
  4704  0782  0864               	movf	??_printf+1,w
  4705  0783  3A80               	xorlw	128
  4706  0784  00E5               	movwf	??_printf+2
  4707  0785  1683               	bsf	3,5	;RP0=1, select bank1
  4708  0786  0008               	return
  4709  0787                     PL23:	
  4710  0787  1303               	bcf	3,6	;RP1=0, select bank1
  4711  0788  0838               	movf	printf@c^(0+128),w
  4712  0789  1283               	bcf	3,5	;RP0=0, select bank0
  4713  078A  00E3               	movwf	??_printf
  4714  078B  01E4               	clrf	??_printf+1
  4715  078C  1BE3               	btfsc	??_printf,7
  4716  078D  03E4               	decf	??_printf+1,f
  4717  078E  1683               	bsf	3,5	;RP0=1, select bank1
  4718  078F  0008               	return
  4719  0790                     PL24:	
  4720  0790  0823               	movf	?___lldiv+3,w
  4721  0791  00B4               	movwf	?___llmod+7
  4722  0792  0822               	movf	?___lldiv+2,w
  4723  0793  00B3               	movwf	?___llmod+6
  4724  0794  0821               	movf	?___lldiv+1,w
  4725  0795  00B2               	movwf	?___llmod+5
  4726  0796  0820               	movf	?___lldiv,w
  4727  0797  00B1               	movwf	?___llmod+4
  4728  0798  0008               	return
  4729  0799                     PL30:	
  4730  0799  1283               	bcf	3,5	;RP0=0, select bank0
  4731  079A  0864               	movf	??_printf+1,w
  4732  079B  1803               	skipnc
  4733  079C  3E01               	addlw	1
  4734  079D  3EFF               	addlw	255
  4735  079E  1683               	bsf	3,5	;RP0=1, select bank1
  4736  079F  0008               	return
  4737  07A0                     PL32:	
  4738  07A0  082E               	movf	___fttol@f1,w
  4739  07A1  00B2               	movwf	??___fttol
  4740  07A2  082F               	movf	___fttol@f1+1,w
  4741  07A3  00B3               	movwf	??___fttol+1
  4742  07A4  0830               	movf	___fttol@f1+2,w
  4743  07A5  00B4               	movwf	??___fttol+2
  4744  07A6  0008               	return
  4745  07A7                     PL36:	
  4746  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  4747  07A8  00A0               	movwf	?___wmul
  4748  07A9  300A               	movlw	10
  4749  07AA  00A2               	movwf	?___wmul+2
  4750  07AB  01A3               	clrf	?___wmul+3
  4751  07AC  0008               	return
  4752  07AD                     PL37:	
  4753  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  4754  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  4755  07AF  0008               	return
  4756  07B0                     PL38:	
  4757  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4758  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  4759  07B2  0008               	return
  4760                           
  4761                           	psect	text695
  4762  13E8                     __ptext695:	
  4763 ;; =============== function _scale ends ============
  4764                           
  4765                           
  4766 ;; *************** function _fround *****************
  4767 ;; Defined at:
  4768 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  prec            1    wreg     unsigned char 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  prec            1   63[BANK0 ] unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  3   54[BANK0 ] unsigned char 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 60/20
  4779 ;;		On exit  : 60/0
  4780 ;;		Unchanged: FFF9F/0
  4781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4782 ;;      Params:         0       3       0       0       0
  4783 ;;      Locals:         0       7       0       0       0
  4784 ;;      Temps:          0       0       0       0       0
  4785 ;;      Totals:         0      10       0       0       0
  4786 ;;Total ram usage:       10 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:    4
  4789 ;; This function calls:
  4790 ;;		___lbmod
  4791 ;;		___bmul
  4792 ;;		___lbdiv
  4793 ;;		___ftmul
  4794 ;; This function is called by:
  4795 ;;		_printf
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798  13E8                     _fround:	
  4799                           
  4800                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4801                           ;fround@prec stored from wreg
  4802  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  4803  13E9  00DF               	movwf	fround@prec
  4804  13EA  306E               	movlw	110
  4805  13EB  025F               	subwf	fround@prec,w
  4806  13EC  1C03               	skipc
  4807  13ED  2C73               	goto	l7442
  4808  13EE  3003               	movlw	3
  4809  13EF  00A9               	movwf	?___bmul
  4810  13F0  300A               	movlw	10
  4811  13F1  00A5               	movwf	?___lbdiv
  4812  13F2  3064               	movlw	100
  4813  13F3  00A0               	movwf	?___lbmod
  4814  13F4  085F               	movf	fround@prec,w
  4815  13F5  2508  160A  118A   	fcall	___lbmod
  4816  13F8  24ED               	fcall	___lbdiv
  4817  13F9  120A  158A  275B   	fcall	___bmul
      +       160A  118A         
  4818  13FE  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4819  13FF  0084               	movwf	4
  4820  1400  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4821  1405  00BB               	movwf	?___ftmul
  4822  1406  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4823  140B  00BC               	movwf	?___ftmul+1
  4824  140C  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4825  1411  00BD               	movwf	?___ftmul+2
  4826  1412  3003               	movlw	3
  4827  1413  00A9               	movwf	?___bmul
  4828  1414  3064               	movlw	100
  4829  1415  00A5               	movwf	?___lbdiv
  4830  1416  085F               	movf	fround@prec,w
  4831  1417  24ED               	fcall	___lbdiv
  4832  1418  120A  158A  275B   	fcall	___bmul
      +       160A  118A         
  4833  141D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4834  141E  0084               	movwf	4
  4835  141F  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4836  1424  00BE               	movwf	?___ftmul+3
  4837  1425  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4838  142A  00BF               	movwf	?___ftmul+4
  4839  142B  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4840  1430  00C0               	movwf	?___ftmul+5
  4841  1431  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  4842  1436  2533  160A  118A   	fcall	PL31	;call to abstracted procedure
  4843  1439  3003               	movlw	3
  4844  143A  00A9               	movwf	?___bmul
  4845  143B  300A               	movlw	10
  4846  143C  00A0               	movwf	?___lbmod
  4847  143D  085F               	movf	fround@prec,w
  4848  143E  2508               	fcall	___lbmod
  4849  143F  120A  158A  275B   	fcall	___bmul
      +       160A  118A         
  4850  1444  3E01               	addlw	low (__npowers_-__stringbase)
  4851  1445  0084               	movwf	4
  4852  1446  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4853  144B  00BB               	movwf	?___ftmul
  4854  144C  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4855  1451  00BC               	movwf	?___ftmul+1
  4856  1452  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4857  1457  252B               	fcall	PL26	;call to abstracted procedure
  4858  1458  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  4859  145D  083B               	movf	?___ftmul,w
  4860  145E  00D9               	movwf	_fround$4156
  4861  145F  083C               	movf	?___ftmul+1,w
  4862  1460  00DA               	movwf	_fround$4156+1
  4863  1461  083D               	movf	?___ftmul+2,w
  4864  1462  00DB               	movwf	_fround$4156+2
  4865  1463  303F               	movlw	63
  4866  1464  01BB               	clrf	?___ftmul
  4867  1465  01BC               	clrf	?___ftmul+1
  4868  1466  00BD               	movwf	?___ftmul+2
  4869  1467  0859               	movf	_fround$4156,w
  4870  1468  00BE               	movwf	?___ftmul+3
  4871  1469  085A               	movf	_fround$4156+1,w
  4872  146A  00BF               	movwf	?___ftmul+4
  4873  146B  085B               	movf	_fround$4156+2,w
  4874  146C  00C0               	movwf	?___ftmul+5
  4875  146D  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  4876  1472  2D24               	ljmp	PL19	;call to abstracted procedure
  4877  1473                     l7442:	
  4878  1473  300B               	movlw	11
  4879  1474  025F               	subwf	fround@prec,w
  4880  1475  1C03               	skipc
  4881  1476  2CC7               	goto	l7450
  4882  1477  3003               	movlw	3
  4883  1478  00A9               	movwf	?___bmul
  4884  1479  300A               	movlw	10
  4885  147A  00A0               	movwf	?___lbmod
  4886  147B  085F               	movf	fround@prec,w
  4887  147C  2508               	fcall	___lbmod
  4888  147D  120A  158A  275B   	fcall	___bmul
      +       160A  118A         
  4889  1482  3E01               	addlw	low (__npowers_-__stringbase)
  4890  1483  0084               	movwf	4
  4891  1484  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4892  1489  00BB               	movwf	?___ftmul
  4893  148A  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4894  148F  00BC               	movwf	?___ftmul+1
  4895  1490  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4896  1495  00BD               	movwf	?___ftmul+2
  4897  1496  3003               	movlw	3
  4898  1497  00A9               	movwf	?___bmul
  4899  1498  300A               	movlw	10
  4900  1499  00A5               	movwf	?___lbdiv
  4901  149A  085F               	movf	fround@prec,w
  4902  149B  24ED               	fcall	___lbdiv
  4903  149C  120A  158A  275B   	fcall	___bmul
      +       160A  118A         
  4904  14A1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4905  14A2  0084               	movwf	4
  4906  14A3  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4907  14A8  00BE               	movwf	?___ftmul+3
  4908  14A9  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4909  14AE  00BF               	movwf	?___ftmul+4
  4910  14AF  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4911  14B4  00C0               	movwf	?___ftmul+5
  4912  14B5  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  4913  14BA  2533  160A  118A   	fcall	PL31	;call to abstracted procedure
  4914  14BD  303F               	movlw	63
  4915  14BE  01BB               	clrf	?___ftmul
  4916  14BF  01BC               	clrf	?___ftmul+1
  4917  14C0  252B               	fcall	PL26	;call to abstracted procedure
  4918  14C1  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  4919  14C6  2D24               	ljmp	PL19	;call to abstracted procedure
  4920  14C7                     l7450:	
  4921  14C7  303F               	movlw	63
  4922  14C8  01BB               	clrf	?___ftmul
  4923  14C9  01BC               	clrf	?___ftmul+1
  4924  14CA  00BD               	movwf	?___ftmul+2
  4925  14CB  3003               	movlw	3
  4926  14CC  00A9               	movwf	?___bmul
  4927  14CD  085F               	movf	fround@prec,w
  4928  14CE  120A  158A  275B   	fcall	___bmul
      +       160A  118A         
  4929  14D3  3E01               	addlw	low (__npowers_-__stringbase)
  4930  14D4  0084               	movwf	4
  4931  14D5  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4932  14DA  00BE               	movwf	?___ftmul+3
  4933  14DB  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4934  14E0  00BF               	movwf	?___ftmul+4
  4935  14E1  160A  118A  2000   	fcall	stringdir
      +       160A  118A         
  4936  14E6  00C0               	movwf	?___ftmul+5
  4937  14E7  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  4938  14EC  2D24               	ljmp	PL19	;call to abstracted procedure
  4939  14ED                     __end_of_fround:	
  4940  14ED                     __ptext719:	
  4941 ;; =============== function ___lbmod ends ============
  4942                           
  4943                           
  4944 ;; *************** function ___lbdiv *****************
  4945 ;; Defined at:
  4946 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  dividend        1    wreg     unsigned char 
  4949 ;;  divisor         1    5[BANK0 ] unsigned char 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  dividend        1    6[BANK0 ] unsigned char 
  4952 ;;  quotient        1    8[BANK0 ] unsigned char 
  4953 ;;  counter         1    7[BANK0 ] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      unsigned char 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0
  4958 ;; Tracked objects:
  4959 ;;		On entry : 60/0
  4960 ;;		On exit  : 60/0
  4961 ;;		Unchanged: FFF9F/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4963 ;;      Params:         0       1       0       0       0
  4964 ;;      Locals:         0       3       0       0       0
  4965 ;;      Temps:          0       0       0       0       0
  4966 ;;      Totals:         0       4       0       0       0
  4967 ;;Total ram usage:        4 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    2
  4970 ;; This function calls:
  4971 ;;		Nothing
  4972 ;; This function is called by:
  4973 ;;		_fround
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976  14ED                     ___lbdiv:	
  4977                           
  4978                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4979                           ;___lbdiv@dividend stored from wreg
  4980  14ED  00A6               	movwf	___lbdiv@dividend
  4981  14EE  01A8               	clrf	___lbdiv@quotient
  4982  14EF  0825               	movf	___lbdiv@divisor,w
  4983  14F0  1903               	btfsc	3,2
  4984  14F1  2D06               	goto	l6780
  4985  14F2  01A7               	clrf	___lbdiv@counter
  4986  14F3                     l6766:	
  4987  14F3  0AA7               	incf	___lbdiv@counter,f
  4988  14F4  1BA5               	btfsc	___lbdiv@divisor,7
  4989  14F5  2CF9               	goto	l3390
  4990  14F6  1003               	clrc
  4991  14F7  0DA5               	rlf	___lbdiv@divisor,f
  4992  14F8  2CF3               	goto	l6766
  4993  14F9                     l3390:	
  4994  14F9  1003               	clrc
  4995  14FA  0DA8               	rlf	___lbdiv@quotient,f
  4996  14FB  0825               	movf	___lbdiv@divisor,w
  4997  14FC  0226               	subwf	___lbdiv@dividend,w
  4998  14FD  1C03               	skipc
  4999  14FE  2D03               	goto	L18
  5000  14FF  0825               	movf	___lbdiv@divisor,w
  5001  1500  02A6               	subwf	___lbdiv@dividend,f
  5002  1501  1428               	bsf	___lbdiv@quotient,0
  5003  1502  1003               	clrc
  5004  1503                     L18:	
  5005  1503  0CA5               	rrf	___lbdiv@divisor,f
  5006  1504  0BA7               	decfsz	___lbdiv@counter,f
  5007  1505  2CF9               	goto	l3390
  5008  1506                     l6780:	
  5009  1506  0828               	movf	___lbdiv@quotient,w
  5010  1507  0008               	return
  5011  1508                     __end_of___lbdiv:	
  5012  1508                     __ptext718:	
  5013 ;; =============== function ___ftpack ends ============
  5014                           
  5015                           
  5016 ;; *************** function ___lbmod *****************
  5017 ;; Defined at:
  5018 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  dividend        1    wreg     unsigned char 
  5021 ;;  divisor         1    0[BANK0 ] unsigned char 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  dividend        1    2[BANK0 ] unsigned char 
  5024 ;;  rem             1    4[BANK0 ] unsigned char 
  5025 ;;  counter         1    3[BANK0 ] unsigned char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  1    wreg      unsigned char 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 60/0
  5032 ;;		On exit  : 60/0
  5033 ;;		Unchanged: FFF9F/0
  5034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5035 ;;      Params:         0       1       0       0       0
  5036 ;;      Locals:         0       3       0       0       0
  5037 ;;      Temps:          0       1       0       0       0
  5038 ;;      Totals:         0       5       0       0       0
  5039 ;;Total ram usage:        5 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    2
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_fround
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048  1508                     ___lbmod:	
  5049                           
  5050                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5051                           ;___lbmod@dividend stored from wreg
  5052  1508  00A2               	movwf	___lbmod@dividend
  5053  1509  3008               	movlw	8
  5054  150A  00A3               	movwf	___lbmod@counter
  5055  150B  01A4               	clrf	___lbmod@rem
  5056  150C                     l6788:	
  5057  150C  0822               	movf	___lbmod@dividend,w
  5058  150D  00A1               	movwf	??___lbmod
  5059  150E  3007               	movlw	7
  5060  150F  1003               	clrc
  5061  1510                     L17:	
  5062  1510  0CA1               	rrf	??___lbmod,f
  5063  1511  3EFF               	addlw	-1
  5064  1512  1003               	clrc
  5065  1513  1D03               	skipz
  5066  1514  2D10               	goto	L17
  5067  1515  0D24               	rlf	___lbmod@rem,w
  5068  1516  0421               	iorwf	??___lbmod,w
  5069  1517  00A4               	movwf	___lbmod@rem
  5070  1518  1003               	clrc
  5071  1519  0DA2               	rlf	___lbmod@dividend,f
  5072  151A  0820               	movf	___lbmod@divisor,w
  5073  151B  0224               	subwf	___lbmod@rem,w
  5074  151C  1C03               	skipc
  5075  151D  2D20               	goto	l6796
  5076  151E  0820               	movf	___lbmod@divisor,w
  5077  151F  02A4               	subwf	___lbmod@rem,f
  5078  1520                     l6796:	
  5079  1520  0BA3               	decfsz	___lbmod@counter,f
  5080  1521  2D0C               	goto	l6788
  5081  1522  0824               	movf	___lbmod@rem,w
  5082  1523  0008               	return
  5083  1524                     __end_of___lbmod:	
  5084  1524                     PL19:	
  5085  1524  083B               	movf	?___ftmul,w
  5086  1525  00D6               	movwf	?_fround
  5087  1526  083C               	movf	?___ftmul+1,w
  5088  1527  00D7               	movwf	?_fround+1
  5089  1528  083D               	movf	?___ftmul+2,w
  5090  1529  00D8               	movwf	?_fround+2
  5091  152A  0008               	return
  5092  152B                     PL26:	
  5093  152B  00BD               	movwf	?___ftmul+2
  5094  152C  085C               	movf	_fround$4155,w
  5095  152D  00BE               	movwf	?___ftmul+3
  5096  152E  085D               	movf	_fround$4155+1,w
  5097  152F  00BF               	movwf	?___ftmul+4
  5098  1530  085E               	movf	_fround$4155+2,w
  5099  1531  00C0               	movwf	?___ftmul+5
  5100  1532  0008               	return
  5101  1533                     PL31:	
  5102  1533  083B               	movf	?___ftmul,w
  5103  1534  00DC               	movwf	_fround$4155
  5104  1535  083C               	movf	?___ftmul+1,w
  5105  1536  00DD               	movwf	_fround$4155+1
  5106  1537  083D               	movf	?___ftmul+2,w
  5107  1538  00DE               	movwf	_fround$4155+2
  5108  1539  0008               	return
  5109                           
  5110                           	psect	text696
  5111  08A1                     __ptext696:	
  5112 ;; =============== function _fround ends ============
  5113                           
  5114                           
  5115 ;; *************** function _lcd_gotoxy *****************
  5116 ;; Defined at:
  5117 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  col             1    wreg     unsigned char 
  5120 ;;  row             1    5[BANK0 ] unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  col             1    6[BANK0 ] unsigned char 
  5123 ;;  address         1    7[BANK0 ] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;		None               void
  5126 ;; Registers used:
  5127 ;;		wreg, status,2, status,0, pclath, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 60/0
  5130 ;;		On exit  : 60/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5133 ;;      Params:         0       1       0       0       0
  5134 ;;      Locals:         0       2       0       0       0
  5135 ;;      Temps:          0       0       0       0       0
  5136 ;;      Totals:         0       3       0       0       0
  5137 ;;Total ram usage:        3 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    3
  5140 ;; This function calls:
  5141 ;;		_lcd_put_byte
  5142 ;;		_lcd_busy
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;;		_lcd_putc
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148  08A1                     _lcd_gotoxy:	
  5149                           
  5150                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  5151                           ;lcd_gotoxy@col stored from wreg
  5152  08A1  00A6               	movwf	lcd_gotoxy@col
  5153                           
  5154                           ;lcd(16).c: 163: unsigned char address;
  5155                           ;lcd(16).c: 165: if(row!=0)
  5156  08A2  0825               	movf	lcd_gotoxy@row,w
  5157  08A3  1903               	btfsc	3,2
  5158  08A4  28A8               	goto	l7424
  5159                           
  5160                           ;lcd(16).c: 166: address=0x40;
  5161  08A5  3040               	movlw	64
  5162  08A6  00A7               	movwf	lcd_gotoxy@address
  5163  08A7  28A9               	goto	l7426
  5164  08A8                     l7424:	
  5165                           
  5166                           ;lcd(16).c: 167: else
  5167                           ;lcd(16).c: 168: address=0;
  5168  08A8  01A7               	clrf	lcd_gotoxy@address
  5169  08A9                     l7426:	
  5170                           
  5171                           ;lcd(16).c: 170: address += col;
  5172  08A9  0826               	movf	lcd_gotoxy@col,w
  5173  08AA  07A7               	addwf	lcd_gotoxy@address,f
  5174                           
  5175                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  5176  08AB  0827               	movf	lcd_gotoxy@address,w
  5177  08AC  3880               	iorlw	128
  5178  08AD  00A0               	movwf	?_lcd_put_byte
  5179  08AE  3000               	movlw	0
  5180  08AF  2179               	fcall	_lcd_put_byte
  5181  08B0                     l7430:	
  5182                           ;lcd(16).c: 172: while(lcd_busy());
  5183                           
  5184  08B0  120A  118A  26DC   	fcall	_lcd_busy
      +       120A  158A         
  5185  08B5  3800               	iorlw	0
  5186  08B6  1903               	btfsc	3,2
  5187  08B7  0008               	return
  5188  08B8  28B0               	goto	l7430
  5189  08B9                     __end_of_lcd_gotoxy:	
  5190  08B9                     __ptext697:	
  5191 ;; =============== function _lcd_gotoxy ends ============
  5192                           
  5193                           
  5194 ;; *************** function _lcd_init *****************
  5195 ;; Defined at:
  5196 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  i               1    0        unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;		None               void
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, pclath, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 17F/60
  5207 ;;		On exit  : 60/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5210 ;;      Params:         0       0       0       0       0
  5211 ;;      Locals:         0       0       0       0       0
  5212 ;;      Temps:          0       3       0       0       0
  5213 ;;      Totals:         0       3       0       0       0
  5214 ;;Total ram usage:        3 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    3
  5217 ;; This function calls:
  5218 ;;		_lcd_put_byte
  5219 ;;		_lcd_busy
  5220 ;; This function is called by:
  5221 ;;		_main
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224  08B9                     _lcd_init:	
  5225                           
  5226                           ;lcd(16).c: 6: unsigned char i;
  5227                           ;lcd(16).c: 7: TRISD3 = 0;
  5228                           
  5229                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  5230  08B9  1303               	bcf	3,6	;RP1=0, select bank1
  5231  08BA  1188               	bcf	8,3
  5232                           
  5233                           ;lcd(16).c: 8: TRISD1 = 0;
  5234  08BB  1088               	bcf	8,1
  5235                           
  5236                           ;lcd(16).c: 9: TRISD2 = 0;
  5237  08BC  1108               	bcf	8,2
  5238                           
  5239                           ;lcd(16).c: 10: TRISD4 = 0;
  5240  08BD  1208               	bcf	8,4
  5241                           
  5242                           ;lcd(16).c: 11: TRISD5 = 0;
  5243  08BE  1288               	bcf	8,5
  5244                           
  5245                           ;lcd(16).c: 12: TRISD6 = 0;
  5246  08BF  1308               	bcf	8,6
  5247                           
  5248                           ;lcd(16).c: 13: TRISD7 = 0;
  5249  08C0  1388               	bcf	8,7
  5250                           
  5251                           ;lcd(16).c: 14: RD3 = 0;
  5252  08C1  1283               	bcf	3,5	;RP0=0, select bank0
  5253  08C2  3003               	movlw	3
  5254  08C3  1188               	bcf	8,3
  5255                           
  5256                           ;lcd(16).c: 15: RD1 = 0;
  5257  08C4  1088               	bcf	8,1
  5258                           
  5259                           ;lcd(16).c: 16: RD2 = 0;
  5260  08C5  1108               	bcf	8,2
  5261                           
  5262                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  5263  08C6  00A7               	movwf	??_lcd_init+2
  5264  08C7  308A               	movlw	138
  5265  08C8  00A6               	movwf	??_lcd_init+1
  5266  08C9  3056               	movlw	86
  5267  08CA  00A5               	movwf	??_lcd_init
  5268  08CB                     u4897:	
  5269  08CB  0BA5               	decfsz	??_lcd_init,f
  5270  08CC  28CB               	goto	u4897
  5271  08CD  0BA6               	decfsz	??_lcd_init+1,f
  5272  08CE  28CB               	goto	u4897
  5273  08CF  0BA7               	decfsz	??_lcd_init+2,f
  5274  08D0  28CB               	goto	u4897
  5275  08D1  28D2               	nop2
  5276                           
  5277                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  5278  08D2  220F  120A  158A   	fcall	PL35	;call to abstracted procedure
  5279  08D5  2179  120A  158A   	fcall	_lcd_put_byte
  5280                           
  5281                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  5282  08D8  3002               	movlw	2
  5283  08D9  00A7               	movwf	??_lcd_init+2
  5284  08DA  3045               	movlw	69
  5285  08DB  00A6               	movwf	??_lcd_init+1
  5286  08DC  30A9               	movlw	169
  5287  08DD  00A5               	movwf	??_lcd_init
  5288  08DE                     u4907:	
  5289  08DE  0BA5               	decfsz	??_lcd_init,f
  5290  08DF  28DE               	goto	u4907
  5291  08E0  0BA6               	decfsz	??_lcd_init+1,f
  5292  08E1  28DE               	goto	u4907
  5293  08E2  0BA7               	decfsz	??_lcd_init+2,f
  5294  08E3  28DE               	goto	u4907
  5295  08E4  28E5               	nop2
  5296                           
  5297                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  5298  08E5  220F  120A  158A   	fcall	PL35	;call to abstracted procedure
  5299  08E8  2179  120A  158A   	fcall	_lcd_put_byte
  5300                           
  5301                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  5302  08EB  3002               	movlw	2
  5303  08EC  00A7               	movwf	??_lcd_init+2
  5304  08ED  3045               	movlw	69
  5305  08EE  00A6               	movwf	??_lcd_init+1
  5306  08EF  30A9               	movlw	169
  5307  08F0  00A5               	movwf	??_lcd_init
  5308  08F1                     u4917:	
  5309  08F1  0BA5               	decfsz	??_lcd_init,f
  5310  08F2  28F1               	goto	u4917
  5311  08F3  0BA6               	decfsz	??_lcd_init+1,f
  5312  08F4  28F1               	goto	u4917
  5313  08F5  0BA7               	decfsz	??_lcd_init+2,f
  5314  08F6  28F1               	goto	u4917
  5315  08F7  28F8               	nop2
  5316                           
  5317                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  5318  08F8  3032               	movlw	50
  5319  08F9  2214               	call	PL39	;select bank 0
  5320  08FA  00A0               	movwf	?_lcd_put_byte
  5321  08FB  3000               	movlw	0
  5322  08FC  2179  120A  158A   	fcall	_lcd_put_byte
  5323                           
  5324                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  5325  08FF  3003               	movlw	3
  5326  0900  00A7               	movwf	??_lcd_init+2
  5327  0901  308A               	movlw	138
  5328  0902  00A6               	movwf	??_lcd_init+1
  5329  0903  3056               	movlw	86
  5330  0904  00A5               	movwf	??_lcd_init
  5331  0905                     u4927:	
  5332  0905  0BA5               	decfsz	??_lcd_init,f
  5333  0906  2905               	goto	u4927
  5334  0907  0BA6               	decfsz	??_lcd_init+1,f
  5335  0908  2905               	goto	u4927
  5336  0909  0BA7               	decfsz	??_lcd_init+2,f
  5337  090A  2905               	goto	u4927
  5338  090B  290C               	nop2
  5339                           
  5340                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  5341  090C  3003               	movlw	3
  5342  090D  2214               	call	PL39	;select bank 0
  5343  090E  00A7               	movwf	??_lcd_init+2
  5344  090F  308A               	movlw	138
  5345  0910  00A6               	movwf	??_lcd_init+1
  5346  0911  3056               	movlw	86
  5347  0912  00A5               	movwf	??_lcd_init
  5348  0913                     u4937:	
  5349  0913  0BA5               	decfsz	??_lcd_init,f
  5350  0914  2913               	goto	u4937
  5351  0915  0BA6               	decfsz	??_lcd_init+1,f
  5352  0916  2913               	goto	u4937
  5353  0917  0BA7               	decfsz	??_lcd_init+2,f
  5354  0918  2913               	goto	u4937
  5355  0919  291A               	nop2
  5356                           
  5357                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5358  091A  3003               	movlw	3
  5359  091B  2214               	call	PL39	;select bank 0
  5360  091C  00A7               	movwf	??_lcd_init+2
  5361  091D  308A               	movlw	138
  5362  091E  00A6               	movwf	??_lcd_init+1
  5363  091F  3056               	movlw	86
  5364  0920  00A5               	movwf	??_lcd_init
  5365  0921                     u4947:	
  5366  0921  0BA5               	decfsz	??_lcd_init,f
  5367  0922  2921               	goto	u4947
  5368  0923  0BA6               	decfsz	??_lcd_init+1,f
  5369  0924  2921               	goto	u4947
  5370  0925  0BA7               	decfsz	??_lcd_init+2,f
  5371  0926  2921               	goto	u4947
  5372  0927  2928               	nop2
  5373  0928                     l7394:	
  5374                           ;lcd(16).c: 30: while(lcd_busy());
  5375                           
  5376  0928  120A  118A  26DC   	fcall	_lcd_busy
      +       120A  158A         
  5377  092D  3800               	iorlw	0
  5378  092E  1D03               	skipz
  5379  092F  2928               	goto	l7394
  5380                           
  5381                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5382  0930  3028               	movlw	40
  5383  0931  00A0               	movwf	?_lcd_put_byte
  5384  0932  3000               	movlw	0
  5385  0933  2179               	fcall	_lcd_put_byte
  5386  0934                     l7398:	
  5387                           ;lcd(16).c: 32: while(lcd_busy());
  5388                           
  5389  0934  120A  118A  26DC   	fcall	_lcd_busy
      +       120A  158A         
  5390  0939  3800               	iorlw	0
  5391  093A  1D03               	skipz
  5392  093B  2934               	goto	l7398
  5393                           
  5394                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5395  093C  3008               	movlw	8
  5396  093D  00A0               	movwf	?_lcd_put_byte
  5397  093E  3000               	movlw	0
  5398  093F  2179               	fcall	_lcd_put_byte
  5399  0940                     l7402:	
  5400                           ;lcd(16).c: 35: while(lcd_busy());
  5401                           
  5402  0940  120A  118A  26DC   	fcall	_lcd_busy
      +       120A  158A         
  5403  0945  3800               	iorlw	0
  5404  0946  1D03               	skipz
  5405  0947  2940               	goto	l7402
  5406                           
  5407                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5408  0948  300C               	movlw	12
  5409  0949  00A0               	movwf	?_lcd_put_byte
  5410  094A  3000               	movlw	0
  5411  094B  2179               	fcall	_lcd_put_byte
  5412  094C                     l7406:	
  5413                           ;lcd(16).c: 37: while(lcd_busy());
  5414                           
  5415  094C  120A  118A  26DC   	fcall	_lcd_busy
      +       120A  158A         
  5416  0951  3800               	iorlw	0
  5417  0952  1D03               	skipz
  5418  0953  294C               	goto	l7406
  5419  0954  3000               	movlw	0
  5420                           
  5421                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5422  0955  01A0               	clrf	?_lcd_put_byte
  5423  0956  0AA0               	incf	?_lcd_put_byte,f
  5424  0957  2179               	fcall	_lcd_put_byte
  5425  0958                     l7410:	
  5426                           ;lcd(16).c: 40: while(lcd_busy());
  5427                           
  5428  0958  120A  118A  26DC   	fcall	_lcd_busy
      +       120A  158A         
  5429  095D  3800               	iorlw	0
  5430  095E  1D03               	skipz
  5431  095F  2958               	goto	l7410
  5432                           
  5433                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5434  0960  3004               	movlw	4
  5435  0961  00A0               	movwf	?_lcd_put_byte
  5436  0962  3000               	movlw	0
  5437  0963  2179               	fcall	_lcd_put_byte
  5438  0964                     l7414:	
  5439                           ;lcd(16).c: 42: while(lcd_busy());
  5440                           
  5441  0964  120A  118A  26DC   	fcall	_lcd_busy
      +       120A  158A         
  5442  0969  3800               	iorlw	0
  5443  096A  1D03               	skipz
  5444  096B  2964               	goto	l7414
  5445  096C  3000               	movlw	0
  5446                           
  5447                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5448  096D  01A0               	clrf	?_lcd_put_byte
  5449  096E  0AA0               	incf	?_lcd_put_byte,f
  5450  096F  2179               	fcall	_lcd_put_byte
  5451  0970                     l7418:	
  5452                           ;lcd(16).c: 44: while(lcd_busy());
  5453                           
  5454  0970  120A  118A  26DC   	fcall	_lcd_busy
      +       120A  158A         
  5455  0975  3800               	iorlw	0
  5456  0976  1903               	btfsc	3,2
  5457  0977  0008               	return
  5458  0978  2970               	goto	l7418
  5459  0979                     __end_of_lcd_init:	
  5460  0979                     __ptext709:	
  5461 ;; =============== function _lcd_busy ends ============
  5462                           
  5463                           
  5464 ;; *************** function _lcd_put_byte *****************
  5465 ;; Defined at:
  5466 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  rs              1    wreg     unsigned char 
  5469 ;;  b               1    0[BANK0 ] unsigned char 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;  rs              1    3[BANK0 ] unsigned char 
  5472 ;;  temp            1    4[BANK0 ] struct _BYTE_VAL
  5473 ;; Return value:  Size  Location     Type
  5474 ;;		None               void
  5475 ;; Registers used:
  5476 ;;		wreg, status,2, status,0
  5477 ;; Tracked objects:
  5478 ;;		On entry : 60/0
  5479 ;;		On exit  : 60/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5482 ;;      Params:         0       1       0       0       0
  5483 ;;      Locals:         0       2       0       0       0
  5484 ;;      Temps:          0       2       0       0       0
  5485 ;;      Totals:         0       5       0       0       0
  5486 ;;Total ram usage:        5 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    2
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_lcd_init
  5493 ;;		_lcd_putc
  5494 ;;		_lcd_gotoxy
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497  0979                     _lcd_put_byte:	
  5498                           
  5499                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5500                           ;lcd_put_byte@rs stored from wreg
  5501  0979  00A3               	movwf	lcd_put_byte@rs
  5502                           
  5503                           ;lcd(16).c: 107: BYTE_VAL temp;
  5504                           ;lcd(16).c: 109: TRISD4 = 0;
  5505  097A  1683               	bsf	3,5	;RP0=1, select bank1
  5506  097B  1208               	bcf	8,4
  5507                           
  5508                           ;lcd(16).c: 110: TRISD5 = 0;
  5509  097C  1288               	bcf	8,5
  5510                           
  5511                           ;lcd(16).c: 111: TRISD6 = 0;
  5512  097D  1308               	bcf	8,6
  5513                           
  5514                           ;lcd(16).c: 112: TRISD7 = 0;
  5515  097E  1388               	bcf	8,7
  5516                           
  5517                           ;lcd(16).c: 114: RD1 = 0;
  5518  097F  1283               	bcf	3,5	;RP0=0, select bank0
  5519  0980  1088               	bcf	8,1
  5520                           
  5521                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5522  0981  0823               	movf	lcd_put_byte@rs,w
  5523  0982  1D03               	skipz
  5524  0983  1488               	bsf	8,1
  5525                           
  5526                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5527  0984  3021               	movlw	33
  5528  0985  00A1               	movwf	??_lcd_put_byte
  5529  0986                     u5097:	
  5530  0986  0BA1               	decfsz	??_lcd_put_byte,f
  5531  0987  2986               	goto	u5097
  5532  0988  2214               	call	PL39	;select bank 0
  5533                           
  5534                           ;lcd(16).c: 118: RD2 = 0;
  5535  0989  3021               	movlw	33
  5536  098A  1108               	bcf	8,2
  5537                           
  5538                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5539  098B  00A1               	movwf	??_lcd_put_byte
  5540  098C                     u5107:	
  5541  098C  0BA1               	decfsz	??_lcd_put_byte,f
  5542  098D  298C               	goto	u5107
  5543  098E  2214               	call	PL39	;select bank 0
  5544                           
  5545                           ;lcd(16).c: 120: RD3 = 0;
  5546  098F  1188               	bcf	8,3
  5547                           
  5548                           ;lcd(16).c: 122: temp.Val = b;
  5549  0990  0820               	movf	lcd_put_byte@b,w
  5550  0991  00A4               	movwf	lcd_put_byte@temp
  5551                           
  5552                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5553  0992  0E24               	swapf	lcd_put_byte@temp,w
  5554  0993  3901               	andlw	1
  5555  0994  00A1               	movwf	??_lcd_put_byte
  5556  0995  0C21               	rrf	??_lcd_put_byte,w
  5557  0996  1C03               	btfss	3,0
  5558  0997  299B               	goto	u3650
  5559  0998  2214               	call	PL39	;select bank 0
  5560  0999  1608               	bsf	8,4
  5561  099A  299D               	goto	l7086
  5562  099B                     u3650:	
  5563  099B  2214               	call	PL39	;select bank 0
  5564  099C  1208               	bcf	8,4
  5565  099D                     l7086:	
  5566                           
  5567                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5568  099D  0E24               	swapf	lcd_put_byte@temp,w
  5569  099E  00A1               	movwf	??_lcd_put_byte
  5570  099F  0C21               	rrf	??_lcd_put_byte,w
  5571  09A0  3901               	andlw	1
  5572  09A1  00A2               	movwf	??_lcd_put_byte+1
  5573  09A2  0C22               	rrf	??_lcd_put_byte+1,w
  5574  09A3  1C03               	btfss	3,0
  5575  09A4  29A8               	goto	u3670
  5576  09A5  2214               	call	PL39	;select bank 0
  5577  09A6  1688               	bsf	8,5
  5578  09A7  29AA               	goto	l7088
  5579  09A8                     u3670:	
  5580  09A8  2214               	call	PL39	;select bank 0
  5581  09A9  1288               	bcf	8,5
  5582  09AA                     l7088:	
  5583                           
  5584                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5585  09AA  0E24               	swapf	lcd_put_byte@temp,w
  5586  09AB  2208  120A  158A   	fcall	PL33	;call to abstracted procedure
  5587  09AE  1C03               	btfss	3,0
  5588  09AF  29B3               	goto	u3690
  5589  09B0  2214               	call	PL39	;select bank 0
  5590  09B1  1708               	bsf	8,6
  5591  09B2  29B5               	goto	l7090
  5592  09B3                     u3690:	
  5593  09B3  2214               	call	PL39	;select bank 0
  5594  09B4  1308               	bcf	8,6
  5595  09B5                     l7090:	
  5596                           
  5597                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5598  09B5  0D24               	rlf	lcd_put_byte@temp,w
  5599  09B6  0D24               	rlf	lcd_put_byte@temp,w
  5600  09B7  3901               	andlw	1
  5601  09B8  00A1               	movwf	??_lcd_put_byte
  5602  09B9  0C21               	rrf	??_lcd_put_byte,w
  5603  09BA  1C03               	btfss	3,0
  5604  09BB  29BF               	goto	u3710
  5605  09BC  2214               	call	PL39	;select bank 0
  5606  09BD  1788               	bsf	8,7
  5607  09BE  29C1               	goto	u3724
  5608  09BF                     u3710:	
  5609  09BF  2214               	call	PL39	;select bank 0
  5610  09C0  1388               	bcf	8,7
  5611  09C1                     u3724:	
  5612                           
  5613                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5614  09C1  3021               	movlw	33
  5615  09C2  00A1               	movwf	??_lcd_put_byte
  5616  09C3                     u5117:	
  5617  09C3  0BA1               	decfsz	??_lcd_put_byte,f
  5618  09C4  29C3               	goto	u5117
  5619  09C5  2214               	call	PL39	;select bank 0
  5620                           
  5621                           ;lcd(16).c: 130: RD3 = 1;
  5622  09C6  3021               	movlw	33
  5623  09C7  1588               	bsf	8,3
  5624                           
  5625                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5626  09C8  00A1               	movwf	??_lcd_put_byte
  5627  09C9                     u5127:	
  5628  09C9  0BA1               	decfsz	??_lcd_put_byte,f
  5629  09CA  29C9               	goto	u5127
  5630  09CB  2214               	call	PL39	;select bank 0
  5631                           
  5632                           ;lcd(16).c: 132: RD3 = 0;
  5633  09CC  1188               	bcf	8,3
  5634                           
  5635                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5636  09CD  0824               	movf	lcd_put_byte@temp,w
  5637  09CE  3901               	andlw	1
  5638  09CF  00A1               	movwf	??_lcd_put_byte
  5639  09D0  0C21               	rrf	??_lcd_put_byte,w
  5640  09D1  1C03               	btfss	3,0
  5641  09D2  29D6               	goto	u3730
  5642  09D3  2214               	call	PL39	;select bank 0
  5643  09D4  1608               	bsf	8,4
  5644  09D5  29D8               	goto	l7098
  5645  09D6                     u3730:	
  5646  09D6  2214               	call	PL39	;select bank 0
  5647  09D7  1208               	bcf	8,4
  5648  09D8                     l7098:	
  5649                           
  5650                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5651  09D8  0C24               	rrf	lcd_put_byte@temp,w
  5652  09D9  3901               	andlw	1
  5653  09DA  00A1               	movwf	??_lcd_put_byte
  5654  09DB  0C21               	rrf	??_lcd_put_byte,w
  5655  09DC  1C03               	btfss	3,0
  5656  09DD  29E1               	goto	u3750
  5657  09DE  2214               	call	PL39	;select bank 0
  5658  09DF  1688               	bsf	8,5
  5659  09E0  29E3               	goto	l7100
  5660  09E1                     u3750:	
  5661  09E1  2214               	call	PL39	;select bank 0
  5662  09E2  1288               	bcf	8,5
  5663  09E3                     l7100:	
  5664                           
  5665                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5666  09E3  0C24               	rrf	lcd_put_byte@temp,w
  5667  09E4  00A1               	movwf	??_lcd_put_byte
  5668  09E5  0C21               	rrf	??_lcd_put_byte,w
  5669  09E6  3901               	andlw	1
  5670  09E7  00A2               	movwf	??_lcd_put_byte+1
  5671  09E8  0C22               	rrf	??_lcd_put_byte+1,w
  5672  09E9  1C03               	btfss	3,0
  5673  09EA  29EE               	goto	u3770
  5674  09EB  2214               	call	PL39	;select bank 0
  5675  09EC  1708               	bsf	8,6
  5676  09ED  29F0               	goto	l7102
  5677  09EE                     u3770:	
  5678  09EE  2214               	call	PL39	;select bank 0
  5679  09EF  1308               	bcf	8,6
  5680  09F0                     l7102:	
  5681                           
  5682                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5683  09F0  0C24               	rrf	lcd_put_byte@temp,w
  5684  09F1  2208  120A  158A   	fcall	PL33	;call to abstracted procedure
  5685  09F4  1C03               	btfss	3,0
  5686  09F5  29F9               	goto	u3790
  5687  09F6  2214               	call	PL39	;select bank 0
  5688  09F7  1788               	bsf	8,7
  5689  09F8  29FB               	goto	u3804
  5690  09F9                     u3790:	
  5691  09F9  2214               	call	PL39	;select bank 0
  5692  09FA  1388               	bcf	8,7
  5693  09FB                     u3804:	
  5694                           
  5695                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5696  09FB  3021               	movlw	33
  5697  09FC  00A1               	movwf	??_lcd_put_byte
  5698  09FD                     u5137:	
  5699  09FD  0BA1               	decfsz	??_lcd_put_byte,f
  5700  09FE  29FD               	goto	u5137
  5701  09FF  2214               	call	PL39	;select bank 0
  5702                           
  5703                           ;lcd(16).c: 139: RD3 = 1;
  5704  0A00  3021               	movlw	33
  5705  0A01  1588               	bsf	8,3
  5706                           
  5707                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5708  0A02  00A1               	movwf	??_lcd_put_byte
  5709  0A03                     u5147:	
  5710  0A03  0BA1               	decfsz	??_lcd_put_byte,f
  5711  0A04  2A03               	goto	u5147
  5712  0A05  2214               	call	PL39	;select bank 0
  5713                           
  5714                           ;lcd(16).c: 141: RD3 = 0;
  5715  0A06  1188               	bcf	8,3
  5716  0A07  0008               	return
  5717  0A08                     __end_of_lcd_put_byte:	
  5718  0A08                     PL33:	
  5719  0A08  00A1               	movwf	??_lcd_put_byte
  5720  0A09  0CA1               	rrf	??_lcd_put_byte,f
  5721  0A0A  0C21               	rrf	??_lcd_put_byte,w
  5722  0A0B  3901               	andlw	1
  5723  0A0C  00A2               	movwf	??_lcd_put_byte+1
  5724  0A0D  0C22               	rrf	??_lcd_put_byte+1,w
  5725  0A0E  0008               	return
  5726  0A0F                     PL35:	
  5727  0A0F  3030               	movlw	48
  5728  0A10  1283               	bcf	3,5	;RP0=0, select bank0
  5729  0A11  1303               	bcf	3,6	;RP1=0, select bank0
  5730  0A12  00A0               	movwf	?_lcd_put_byte
  5731  0A13  3400               	retlw	0
  5732  0A14                     PL39:	
  5733  0A14  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0A15  1303               	bcf	3,6	;RP1=0, select bank0
  5735  0A16  0008               	return
  5736                           
  5737                           	psect	text699
  5738  0A17                     __ptext699:	
  5739 ;; =============== function _read_adc_AN5 ends ============
  5740                           
  5741                           
  5742 ;; *************** function _read_adc_AN3 *****************
  5743 ;; Defined at:
  5744 ;;		line 48 in file "D:\TTVXL\Project TTVXL\BT02week11ttvxl\BT02week11ttvxl.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;		None
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;		None               void
  5751 ;; Registers used:
  5752 ;;		wreg, status,2, status,0, pclath, cstack
  5753 ;; Tracked objects:
  5754 ;;		On entry : 60/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5758 ;;      Params:         0       0       0       0       0
  5759 ;;      Locals:         0       0       0       0       0
  5760 ;;      Temps:          0       3       0       0       0
  5761 ;;      Totals:         0       3       0       0       0
  5762 ;;Total ram usage:        3 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; Hardware stack levels required when called:    4
  5765 ;; This function calls:
  5766 ;;		___awtoft
  5767 ;;		___ftdiv
  5768 ;;		___ftmul
  5769 ;; This function is called by:
  5770 ;;		_main
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773  0A17                     _read_adc_AN3:	
  5774  0A17  3041               	movlw	65
  5775                           
  5776                           ;BT02week11ttvxl.c: 49: CHS3 = 0; CHS2 = 0;CHS1 =1;CHS0 =1;
  5777                           
  5778                           ; Regs used in _read_adc_AN3: [wreg+status,2+status,0+pclath+cstack]
  5779  0A18  129F               	bcf	31,5
  5780  0A19  121F               	bcf	31,4
  5781  0A1A  159F               	bsf	31,3
  5782  0A1B  151F               	bsf	31,2
  5783                           
  5784                           ;BT02week11ttvxl.c: 50: _delay((unsigned long)((10)*(20000000/4000.0)));
  5785  0A1C  00CB               	movwf	??_read_adc_AN3+1
  5786  0A1D  30EE               	movlw	238
  5787  0A1E  00CA               	movwf	??_read_adc_AN3
  5788  0A1F                     u4977:	
  5789  0A1F  0BCA               	decfsz	??_read_adc_AN3,f
  5790  0A20  2A1F               	goto	u4977
  5791  0A21  0BCB               	decfsz	??_read_adc_AN3+1,f
  5792  0A22  2A1F               	goto	u4977
  5793  0A23  0064               	clrwdt
  5794  0A24  2415               	call	PL40	;select bank 0
  5795                           
  5796                           ;BT02week11ttvxl.c: 51: GO_nDONE = 1;
  5797  0A25  149F               	bsf	31,1
  5798  0A26                     l1083:	
  5799                           ;BT02week11ttvxl.c: 52: while(GO_nDONE == 1){}
  5800                           
  5801  0A26  189F               	btfsc	31,1
  5802  0A27  2A26               	goto	l1083
  5803                           
  5804                           ;BT02week11ttvxl.c: 53: adc4 = ADRESH ;
  5805  0A28  081E               	movf	30,w	;volatile
  5806  0A29  00FC               	movwf	_adc4
  5807  0A2A  30FA               	movlw	250
  5808  0A2B  01FD               	clrf	_adc4+1
  5809                           
  5810                           ;BT02week11ttvxl.c: 54: res4 = (adc4/256.0)*500.0;
  5811  0A2C  23FD  120A  158A   	fcall	PL2	;call to abstracted procedure
  5812  0A2F  087D               	movf	_adc4+1,w
  5813  0A30  00A9               	movwf	?___awtoft+1
  5814  0A31  087C               	movf	_adc4,w
  5815  0A32  00A8               	movwf	?___awtoft
  5816  0A33  23E0  120A  158A   	fcall	___awtoft
  5817  0A36  2407  120A  158A   	fcall	PL15	;call to abstracted procedure
  5818  0A39  2376  120A  158A   	fcall	___ftdiv
  5819  0A3C  240E               	fcall	PL16	;call to abstracted procedure
  5820  0A3D  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5821  0A42  083B               	movf	?___ftmul,w
  5822  0A43  1683               	bsf	3,5	;RP0=1, select bank1
  5823  0A44  00C2               	movwf	_res4^(0+128)
  5824  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  5825  0A46  083C               	movf	?___ftmul+1,w
  5826  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  5827  0A48  00C3               	movwf	(_res4+1)^(0+128)
  5828  0A49  1283               	bcf	3,5	;RP0=0, select bank0
  5829  0A4A  083D               	movf	?___ftmul+2,w
  5830  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  5831  0A4C  00C4               	movwf	(_res4+2)^(0+128)
  5832                           
  5833                           ;BT02week11ttvxl.c: 55: _delay((unsigned long)((150)*(20000000/4000.0)));
  5834  0A4D  3004               	movlw	4
  5835  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  5836  0A4F  00CC               	movwf	??_read_adc_AN3+2
  5837  0A50  30CF               	movlw	207
  5838  0A51  00CB               	movwf	??_read_adc_AN3+1
  5839  0A52  3003               	movlw	3
  5840  0A53  00CA               	movwf	??_read_adc_AN3
  5841  0A54                     u4987:	
  5842  0A54  0BCA               	decfsz	??_read_adc_AN3,f
  5843  0A55  2A54               	goto	u4987
  5844  0A56  0BCB               	decfsz	??_read_adc_AN3+1,f
  5845  0A57  2A54               	goto	u4987
  5846  0A58  0BCC               	decfsz	??_read_adc_AN3+2,f
  5847  0A59  2A54               	goto	u4987
  5848  0A5A  2A5B               	nop2
  5849  0A5B  0008               	return
  5850  0A5C                     __end_of_read_adc_AN3:	
  5851  0A5C                     __ptext700:	
  5852 ;; =============== function _read_adc_AN3 ends ============
  5853                           
  5854                           
  5855 ;; *************** function _read_adc_AN2 *****************
  5856 ;; Defined at:
  5857 ;;		line 38 in file "D:\TTVXL\Project TTVXL\BT02week11ttvxl\BT02week11ttvxl.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;		None
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;		None               void
  5864 ;; Registers used:
  5865 ;;		wreg, status,2, status,0, pclath, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 60/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5871 ;;      Params:         0       0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0
  5873 ;;      Temps:          0       3       0       0       0
  5874 ;;      Totals:         0       3       0       0       0
  5875 ;;Total ram usage:        3 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    4
  5878 ;; This function calls:
  5879 ;;		___awtoft
  5880 ;;		___ftdiv
  5881 ;;		___ftmul
  5882 ;; This function is called by:
  5883 ;;		_main
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886  0A5C                     _read_adc_AN2:	
  5887  0A5C  3041               	movlw	65
  5888                           
  5889                           ;BT02week11ttvxl.c: 39: CHS3 = 0; CHS2 = 0;CHS1 =1;CHS0 =0;
  5890                           
  5891                           ; Regs used in _read_adc_AN2: [wreg+status,2+status,0+pclath+cstack]
  5892  0A5D  129F               	bcf	31,5
  5893  0A5E  121F               	bcf	31,4
  5894  0A5F  159F               	bsf	31,3
  5895  0A60  111F               	bcf	31,2
  5896                           
  5897                           ;BT02week11ttvxl.c: 40: _delay((unsigned long)((10)*(20000000/4000.0)));
  5898  0A61  00CB               	movwf	??_read_adc_AN2+1
  5899  0A62  30EE               	movlw	238
  5900  0A63  00CA               	movwf	??_read_adc_AN2
  5901  0A64                     u4997:	
  5902  0A64  0BCA               	decfsz	??_read_adc_AN2,f
  5903  0A65  2A64               	goto	u4997
  5904  0A66  0BCB               	decfsz	??_read_adc_AN2+1,f
  5905  0A67  2A64               	goto	u4997
  5906  0A68  0064               	clrwdt
  5907  0A69  2415               	call	PL40	;select bank 0
  5908                           
  5909                           ;BT02week11ttvxl.c: 41: GO_nDONE = 1;
  5910  0A6A  149F               	bsf	31,1
  5911  0A6B                     l1077:	
  5912                           ;BT02week11ttvxl.c: 42: while(GO_nDONE == 1){}
  5913                           
  5914  0A6B  189F               	btfsc	31,1
  5915  0A6C  2A6B               	goto	l1077
  5916                           
  5917                           ;BT02week11ttvxl.c: 43: adc3 = ADRESH ;
  5918  0A6D  081E               	movf	30,w	;volatile
  5919  0A6E  00FA               	movwf	_adc3
  5920  0A6F  30FA               	movlw	250
  5921  0A70  01FB               	clrf	_adc3+1
  5922                           
  5923                           ;BT02week11ttvxl.c: 44: res3 = (adc3/256.0)*500.0;
  5924  0A71  23FD  120A  158A   	fcall	PL2	;call to abstracted procedure
  5925  0A74  087B               	movf	_adc3+1,w
  5926  0A75  00A9               	movwf	?___awtoft+1
  5927  0A76  087A               	movf	_adc3,w
  5928  0A77  00A8               	movwf	?___awtoft
  5929  0A78  23E0  120A  158A   	fcall	___awtoft
  5930  0A7B  2407  120A  158A   	fcall	PL15	;call to abstracted procedure
  5931  0A7E  2376  120A  158A   	fcall	___ftdiv
  5932  0A81  240E               	fcall	PL16	;call to abstracted procedure
  5933  0A82  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  5934  0A87  083B               	movf	?___ftmul,w
  5935  0A88  1683               	bsf	3,5	;RP0=1, select bank1
  5936  0A89  00BF               	movwf	_res3^(0+128)
  5937  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  5938  0A8B  083C               	movf	?___ftmul+1,w
  5939  0A8C  1683               	bsf	3,5	;RP0=1, select bank1
  5940  0A8D  00C0               	movwf	(_res3+1)^(0+128)
  5941  0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0A8F  083D               	movf	?___ftmul+2,w
  5943  0A90  1683               	bsf	3,5	;RP0=1, select bank1
  5944  0A91  00C1               	movwf	(_res3+2)^(0+128)
  5945                           
  5946                           ;BT02week11ttvxl.c: 45: _delay((unsigned long)((150)*(20000000/4000.0)));
  5947  0A92  3004               	movlw	4
  5948  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  5949  0A94  00CC               	movwf	??_read_adc_AN2+2
  5950  0A95  30CF               	movlw	207
  5951  0A96  00CB               	movwf	??_read_adc_AN2+1
  5952  0A97  3003               	movlw	3
  5953  0A98  00CA               	movwf	??_read_adc_AN2
  5954  0A99                     u5007:	
  5955  0A99  0BCA               	decfsz	??_read_adc_AN2,f
  5956  0A9A  2A99               	goto	u5007
  5957  0A9B  0BCB               	decfsz	??_read_adc_AN2+1,f
  5958  0A9C  2A99               	goto	u5007
  5959  0A9D  0BCC               	decfsz	??_read_adc_AN2+2,f
  5960  0A9E  2A99               	goto	u5007
  5961  0A9F  2AA0               	nop2
  5962  0AA0  0008               	return
  5963  0AA1                     __end_of_read_adc_AN2:	
  5964  0AA1                     __ptext701:	
  5965 ;; =============== function _read_adc_AN2 ends ============
  5966                           
  5967                           
  5968 ;; *************** function _read_adc_AN1 *****************
  5969 ;; Defined at:
  5970 ;;		line 28 in file "D:\TTVXL\Project TTVXL\BT02week11ttvxl\BT02week11ttvxl.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;		None               void
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0, pclath, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 60/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5984 ;;      Params:         0       0       0       0       0
  5985 ;;      Locals:         0       0       0       0       0
  5986 ;;      Temps:          0       3       0       0       0
  5987 ;;      Totals:         0       3       0       0       0
  5988 ;;Total ram usage:        3 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    4
  5991 ;; This function calls:
  5992 ;;		___awtoft
  5993 ;;		___ftdiv
  5994 ;;		___ftmul
  5995 ;; This function is called by:
  5996 ;;		_main
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999  0AA1                     _read_adc_AN1:	
  6000  0AA1  3041               	movlw	65
  6001                           
  6002                           ;BT02week11ttvxl.c: 29: CHS3 = 0; CHS2 = 0;CHS1 =0;CHS0 =1;
  6003                           
  6004                           ; Regs used in _read_adc_AN1: [wreg+status,2+status,0+pclath+cstack]
  6005  0AA2  129F               	bcf	31,5
  6006  0AA3  121F               	bcf	31,4
  6007  0AA4  119F               	bcf	31,3
  6008  0AA5  151F               	bsf	31,2
  6009                           
  6010                           ;BT02week11ttvxl.c: 30: _delay((unsigned long)((10)*(20000000/4000.0)));
  6011  0AA6  00CB               	movwf	??_read_adc_AN1+1
  6012  0AA7  30EE               	movlw	238
  6013  0AA8  00CA               	movwf	??_read_adc_AN1
  6014  0AA9                     u5017:	
  6015  0AA9  0BCA               	decfsz	??_read_adc_AN1,f
  6016  0AAA  2AA9               	goto	u5017
  6017  0AAB  0BCB               	decfsz	??_read_adc_AN1+1,f
  6018  0AAC  2AA9               	goto	u5017
  6019  0AAD  0064               	clrwdt
  6020  0AAE  2415               	call	PL40	;select bank 0
  6021                           
  6022                           ;BT02week11ttvxl.c: 31: GO_nDONE = 1;
  6023  0AAF  149F               	bsf	31,1
  6024  0AB0                     l1071:	
  6025                           ;BT02week11ttvxl.c: 32: while(GO_nDONE == 1){}
  6026                           
  6027  0AB0  189F               	btfsc	31,1
  6028  0AB1  2AB0               	goto	l1071
  6029                           
  6030                           ;BT02week11ttvxl.c: 33: adc2 = ADRESH;
  6031  0AB2  081E               	movf	30,w	;volatile
  6032  0AB3  00EC               	movwf	_adc2
  6033  0AB4  30FA               	movlw	250
  6034  0AB5  01ED               	clrf	_adc2+1
  6035                           
  6036                           ;BT02week11ttvxl.c: 34: res2 = (adc2/256.0)*500.0;
  6037  0AB6  23FD  120A  158A   	fcall	PL2	;call to abstracted procedure
  6038  0AB9  086D               	movf	_adc2+1,w
  6039  0ABA  00A9               	movwf	?___awtoft+1
  6040  0ABB  086C               	movf	_adc2,w
  6041  0ABC  00A8               	movwf	?___awtoft
  6042  0ABD  23E0  120A  158A   	fcall	___awtoft
  6043  0AC0  2407  120A  158A   	fcall	PL15	;call to abstracted procedure
  6044  0AC3  2376  120A  158A   	fcall	___ftdiv
  6045  0AC6  240E               	fcall	PL16	;call to abstracted procedure
  6046  0AC7  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  6047  0ACC  083B               	movf	?___ftmul,w
  6048  0ACD  1683               	bsf	3,5	;RP0=1, select bank1
  6049  0ACE  00BC               	movwf	_res2^(0+128)
  6050  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  6051  0AD0  083C               	movf	?___ftmul+1,w
  6052  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  6053  0AD2  00BD               	movwf	(_res2+1)^(0+128)
  6054  0AD3  1283               	bcf	3,5	;RP0=0, select bank0
  6055  0AD4  083D               	movf	?___ftmul+2,w
  6056  0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  6057  0AD6  00BE               	movwf	(_res2+2)^(0+128)
  6058                           
  6059                           ;BT02week11ttvxl.c: 35: _delay((unsigned long)((150)*(20000000/4000.0)));
  6060  0AD7  3004               	movlw	4
  6061  0AD8  1283               	bcf	3,5	;RP0=0, select bank0
  6062  0AD9  00CC               	movwf	??_read_adc_AN1+2
  6063  0ADA  30CF               	movlw	207
  6064  0ADB  00CB               	movwf	??_read_adc_AN1+1
  6065  0ADC  3003               	movlw	3
  6066  0ADD  00CA               	movwf	??_read_adc_AN1
  6067  0ADE                     u5027:	
  6068  0ADE  0BCA               	decfsz	??_read_adc_AN1,f
  6069  0ADF  2ADE               	goto	u5027
  6070  0AE0  0BCB               	decfsz	??_read_adc_AN1+1,f
  6071  0AE1  2ADE               	goto	u5027
  6072  0AE2  0BCC               	decfsz	??_read_adc_AN1+2,f
  6073  0AE3  2ADE               	goto	u5027
  6074  0AE4  2AE5               	nop2
  6075  0AE5  0008               	return
  6076  0AE6                     __end_of_read_adc_AN1:	
  6077  0AE6                     __ptext702:	
  6078 ;; =============== function _read_adc_AN1 ends ============
  6079                           
  6080                           
  6081 ;; *************** function _read_adc_AN0 *****************
  6082 ;; Defined at:
  6083 ;;		line 18 in file "D:\TTVXL\Project TTVXL\BT02week11ttvxl\BT02week11ttvxl.c"
  6084 ;; Parameters:    Size  Location     Type
  6085 ;;		None
  6086 ;; Auto vars:     Size  Location     Type
  6087 ;;		None
  6088 ;; Return value:  Size  Location     Type
  6089 ;;		None               void
  6090 ;; Registers used:
  6091 ;;		wreg, status,2, status,0, pclath, cstack
  6092 ;; Tracked objects:
  6093 ;;		On entry : 60/0
  6094 ;;		On exit  : 0/0
  6095 ;;		Unchanged: 0/0
  6096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6097 ;;      Params:         0       0       0       0       0
  6098 ;;      Locals:         0       0       0       0       0
  6099 ;;      Temps:          0       3       0       0       0
  6100 ;;      Totals:         0       3       0       0       0
  6101 ;;Total ram usage:        3 bytes
  6102 ;; Hardware stack levels used:    1
  6103 ;; Hardware stack levels required when called:    4
  6104 ;; This function calls:
  6105 ;;		___awtoft
  6106 ;;		___ftdiv
  6107 ;;		___ftmul
  6108 ;; This function is called by:
  6109 ;;		_main
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112  0AE6                     _read_adc_AN0:	
  6113  0AE6  3041               	movlw	65
  6114                           
  6115                           ;BT02week11ttvxl.c: 19: CHS3 = 0; CHS2 = 0;CHS1 =0;CHS0 =0;
  6116                           
  6117                           ; Regs used in _read_adc_AN0: [wreg+status,2+status,0+pclath+cstack]
  6118  0AE7  129F               	bcf	31,5
  6119  0AE8  121F               	bcf	31,4
  6120  0AE9  119F               	bcf	31,3
  6121  0AEA  111F               	bcf	31,2
  6122                           
  6123                           ;BT02week11ttvxl.c: 20: _delay((unsigned long)((10)*(20000000/4000.0)));
  6124  0AEB  00CB               	movwf	??_read_adc_AN0+1
  6125  0AEC  30EE               	movlw	238
  6126  0AED  00CA               	movwf	??_read_adc_AN0
  6127  0AEE                     u5037:	
  6128  0AEE  0BCA               	decfsz	??_read_adc_AN0,f
  6129  0AEF  2AEE               	goto	u5037
  6130  0AF0  0BCB               	decfsz	??_read_adc_AN0+1,f
  6131  0AF1  2AEE               	goto	u5037
  6132  0AF2  0064               	clrwdt
  6133  0AF3  2415               	call	PL40	;select bank 0
  6134                           
  6135                           ;BT02week11ttvxl.c: 21: GO_nDONE = 1;
  6136  0AF4  149F               	bsf	31,1
  6137  0AF5                     l1065:	
  6138                           ;BT02week11ttvxl.c: 22: while(GO_nDONE == 1){}
  6139                           
  6140  0AF5  189F               	btfsc	31,1
  6141  0AF6  2AF5               	goto	l1065
  6142                           
  6143                           ;BT02week11ttvxl.c: 23: adc1 = ADRESH ;
  6144  0AF7  081E               	movf	30,w	;volatile
  6145  0AF8  00EA               	movwf	_adc1
  6146  0AF9  30FA               	movlw	250
  6147  0AFA  01EB               	clrf	_adc1+1
  6148                           
  6149                           ;BT02week11ttvxl.c: 24: res1 = (adc1/256.0)*500.0;
  6150  0AFB  23FD  120A  158A   	fcall	PL2	;call to abstracted procedure
  6151  0AFE  086B               	movf	_adc1+1,w
  6152  0AFF  00A9               	movwf	?___awtoft+1
  6153  0B00  086A               	movf	_adc1,w
  6154  0B01  00A8               	movwf	?___awtoft
  6155  0B02  23E0  120A  158A   	fcall	___awtoft
  6156  0B05  2407  120A  158A   	fcall	PL15	;call to abstracted procedure
  6157  0B08  2376  120A  158A   	fcall	___ftdiv
  6158  0B0B  240E               	fcall	PL16	;call to abstracted procedure
  6159  0B0C  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  6160  0B11  083B               	movf	?___ftmul,w
  6161  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  6162  0B13  00B9               	movwf	_res1^(0+128)
  6163  0B14  1283               	bcf	3,5	;RP0=0, select bank0
  6164  0B15  083C               	movf	?___ftmul+1,w
  6165  0B16  1683               	bsf	3,5	;RP0=1, select bank1
  6166  0B17  00BA               	movwf	(_res1+1)^(0+128)
  6167  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  6168  0B19  083D               	movf	?___ftmul+2,w
  6169  0B1A  1683               	bsf	3,5	;RP0=1, select bank1
  6170  0B1B  00BB               	movwf	(_res1+2)^(0+128)
  6171                           
  6172                           ;BT02week11ttvxl.c: 25: _delay((unsigned long)((150)*(20000000/4000.0)));
  6173  0B1C  3004               	movlw	4
  6174  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0B1E  00CC               	movwf	??_read_adc_AN0+2
  6176  0B1F  30CF               	movlw	207
  6177  0B20  00CB               	movwf	??_read_adc_AN0+1
  6178  0B21  3003               	movlw	3
  6179  0B22  00CA               	movwf	??_read_adc_AN0
  6180  0B23                     u5047:	
  6181  0B23  0BCA               	decfsz	??_read_adc_AN0,f
  6182  0B24  2B23               	goto	u5047
  6183  0B25  0BCB               	decfsz	??_read_adc_AN0+1,f
  6184  0B26  2B23               	goto	u5047
  6185  0B27  0BCC               	decfsz	??_read_adc_AN0+2,f
  6186  0B28  2B23               	goto	u5047
  6187  0B29  2B2A               	nop2
  6188  0B2A  0008               	return
  6189  0B2B                     __end_of_read_adc_AN0:	
  6190  0B2B                     __ptext698:	
  6191 ;; =============== function _lcd_init ends ============
  6192                           
  6193                           
  6194 ;; *************** function _read_adc_AN5 *****************
  6195 ;; Defined at:
  6196 ;;		line 58 in file "D:\TTVXL\Project TTVXL\BT02week11ttvxl\BT02week11ttvxl.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;		None
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;		None               void
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0, pclath, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 60/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6210 ;;      Params:         0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0
  6212 ;;      Temps:          0       3       0       0       0
  6213 ;;      Totals:         0       3       0       0       0
  6214 ;;Total ram usage:        3 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    4
  6217 ;; This function calls:
  6218 ;;		___awtoft
  6219 ;;		___ftdiv
  6220 ;;		___ftmul
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225  0B2B                     _read_adc_AN5:	
  6226  0B2B  3041               	movlw	65
  6227                           
  6228                           ;BT02week11ttvxl.c: 59: CHS3 = 0; CHS2 = 1;CHS1 =0;CHS0 =1;
  6229                           
  6230                           ; Regs used in _read_adc_AN5: [wreg+status,2+status,0+pclath+cstack]
  6231  0B2C  129F               	bcf	31,5
  6232  0B2D  161F               	bsf	31,4
  6233  0B2E  119F               	bcf	31,3
  6234  0B2F  151F               	bsf	31,2
  6235                           
  6236                           ;BT02week11ttvxl.c: 60: _delay((unsigned long)((10)*(20000000/4000.0)));
  6237  0B30  00CB               	movwf	??_read_adc_AN5+1
  6238  0B31  30EE               	movlw	238
  6239  0B32  00CA               	movwf	??_read_adc_AN5
  6240  0B33                     u4957:	
  6241  0B33  0BCA               	decfsz	??_read_adc_AN5,f
  6242  0B34  2B33               	goto	u4957
  6243  0B35  0BCB               	decfsz	??_read_adc_AN5+1,f
  6244  0B36  2B33               	goto	u4957
  6245  0B37  0064               	clrwdt
  6246  0B38  2415               	call	PL40	;select bank 0
  6247                           
  6248                           ;BT02week11ttvxl.c: 61: GO_nDONE = 1;
  6249  0B39  149F               	bsf	31,1
  6250  0B3A                     l1089:	
  6251                           ;BT02week11ttvxl.c: 62: while(GO_nDONE == 1){}
  6252                           
  6253  0B3A  189F               	btfsc	31,1
  6254  0B3B  2B3A               	goto	l1089
  6255                           
  6256                           ;BT02week11ttvxl.c: 63: adc5 = ADRESH ;
  6257  0B3C  081E               	movf	30,w	;volatile
  6258  0B3D  1683               	bsf	3,5	;RP0=1, select bank1
  6259  0B3E  00C8               	movwf	_adc5^(0+128)
  6260  0B3F  01C9               	clrf	(_adc5+1)^(0+128)
  6261                           
  6262                           ;BT02week11ttvxl.c: 64: res5 = (adc5/256.0)*500.0;
  6263  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  6264  0B41  30FA               	movlw	250
  6265  0B42  23FD  120A  158A   	fcall	PL2	;call to abstracted procedure
  6266  0B45  1683               	bsf	3,5	;RP0=1, select bank1
  6267  0B46  0849               	movf	(_adc5+1)^(0+128),w
  6268  0B47  1283               	bcf	3,5	;RP0=0, select bank0
  6269  0B48  00A9               	movwf	?___awtoft+1
  6270  0B49  1683               	bsf	3,5	;RP0=1, select bank1
  6271  0B4A  0848               	movf	_adc5^(0+128),w
  6272  0B4B  1283               	bcf	3,5	;RP0=0, select bank0
  6273  0B4C  00A8               	movwf	?___awtoft
  6274  0B4D  23E0  120A  158A   	fcall	___awtoft
  6275  0B50  2407  120A  158A   	fcall	PL15	;call to abstracted procedure
  6276  0B53  2376  120A  158A   	fcall	___ftdiv
  6277  0B56  240E               	fcall	PL16	;call to abstracted procedure
  6278  0B57  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  6279  0B5C  083B               	movf	?___ftmul,w
  6280  0B5D  1683               	bsf	3,5	;RP0=1, select bank1
  6281  0B5E  00C5               	movwf	_res5^(0+128)
  6282  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  6283  0B60  083C               	movf	?___ftmul+1,w
  6284  0B61  1683               	bsf	3,5	;RP0=1, select bank1
  6285  0B62  00C6               	movwf	(_res5+1)^(0+128)
  6286  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  6287  0B64  083D               	movf	?___ftmul+2,w
  6288  0B65  1683               	bsf	3,5	;RP0=1, select bank1
  6289  0B66  00C7               	movwf	(_res5+2)^(0+128)
  6290                           
  6291                           ;BT02week11ttvxl.c: 65: _delay((unsigned long)((150)*(20000000/4000.0)));
  6292  0B67  3004               	movlw	4
  6293  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  6294  0B69  00CC               	movwf	??_read_adc_AN5+2
  6295  0B6A  30CF               	movlw	207
  6296  0B6B  00CB               	movwf	??_read_adc_AN5+1
  6297  0B6C  3003               	movlw	3
  6298  0B6D  00CA               	movwf	??_read_adc_AN5
  6299  0B6E                     u4967:	
  6300  0B6E  0BCA               	decfsz	??_read_adc_AN5,f
  6301  0B6F  2B6E               	goto	u4967
  6302  0B70  0BCB               	decfsz	??_read_adc_AN5+1,f
  6303  0B71  2B6E               	goto	u4967
  6304  0B72  0BCC               	decfsz	??_read_adc_AN5+2,f
  6305  0B73  2B6E               	goto	u4967
  6306  0B74  2B75               	nop2
  6307  0B75  0008               	return
  6308  0B76                     __end_of_read_adc_AN5:	
  6309  0B76                     __ptext706:	
  6310 ;; =============== function ___ftmul ends ============
  6311                           
  6312                           
  6313 ;; *************** function ___ftdiv *****************
  6314 ;; Defined at:
  6315 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  f2              3   12[BANK0 ] float 
  6318 ;;  f1              3   15[BANK0 ] float 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  f3              3   22[BANK0 ] float 
  6321 ;;  sign            1   26[BANK0 ] unsigned char 
  6322 ;;  exp             1   25[BANK0 ] unsigned char 
  6323 ;;  cntr            1   21[BANK0 ] unsigned char 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  3   12[BANK0 ] float 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0, pclath, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 60/0
  6330 ;;		On exit  : 60/0
  6331 ;;		Unchanged: FFF9F/0
  6332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6333 ;;      Params:         0       6       0       0       0
  6334 ;;      Locals:         0       6       0       0       0
  6335 ;;      Temps:          0       3       0       0       0
  6336 ;;      Totals:         0      15       0       0       0
  6337 ;;Total ram usage:       15 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    3
  6340 ;; This function calls:
  6341 ;;		___ftpack
  6342 ;; This function is called by:
  6343 ;;		_read_adc_AN0
  6344 ;;		_read_adc_AN1
  6345 ;;		_read_adc_AN2
  6346 ;;		_read_adc_AN3
  6347 ;;		_read_adc_AN5
  6348 ;; This function uses a non-reentrant model
  6349 ;;
  6350  0B76                     ___ftdiv:	
  6351                           
  6352                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6353  0B76  082F               	movf	___ftdiv@f1,w
  6354  0B77  00B2               	movwf	??___ftdiv
  6355  0B78  0830               	movf	___ftdiv@f1+1,w
  6356  0B79  00B3               	movwf	??___ftdiv+1
  6357  0B7A  0831               	movf	___ftdiv@f1+2,w
  6358  0B7B  00B4               	movwf	??___ftdiv+2
  6359  0B7C  1003               	clrc
  6360  0B7D  0D33               	rlf	??___ftdiv+1,w
  6361  0B7E  0D34               	rlf	??___ftdiv+2,w
  6362  0B7F  00B9               	movwf	___ftdiv@exp
  6363  0B80  08B9               	movf	___ftdiv@exp,f
  6364  0B81  1D03               	skipz
  6365  0B82  2B87               	goto	l7206
  6366  0B83  01AC               	clrf	?___ftdiv
  6367  0B84  01AD               	clrf	?___ftdiv+1
  6368  0B85  01AE               	clrf	?___ftdiv+2
  6369  0B86  0008               	return
  6370  0B87                     l7206:	
  6371  0B87  082C               	movf	___ftdiv@f2,w
  6372  0B88  00B2               	movwf	??___ftdiv
  6373  0B89  082D               	movf	___ftdiv@f2+1,w
  6374  0B8A  00B3               	movwf	??___ftdiv+1
  6375  0B8B  082E               	movf	___ftdiv@f2+2,w
  6376  0B8C  00B4               	movwf	??___ftdiv+2
  6377  0B8D  1003               	clrc
  6378  0B8E  0D33               	rlf	??___ftdiv+1,w
  6379  0B8F  0D34               	rlf	??___ftdiv+2,w
  6380  0B90  00BA               	movwf	___ftdiv@sign
  6381  0B91  08BA               	movf	___ftdiv@sign,f
  6382  0B92  1D03               	skipz
  6383  0B93  2B98               	goto	l3450
  6384  0B94  01AC               	clrf	?___ftdiv
  6385  0B95  01AD               	clrf	?___ftdiv+1
  6386  0B96  01AE               	clrf	?___ftdiv+2
  6387  0B97  0008               	return
  6388  0B98                     l3450:	
  6389  0B98  3089               	movlw	137
  6390  0B99  01B6               	clrf	___ftdiv@f3
  6391  0B9A  01B7               	clrf	___ftdiv@f3+1
  6392  0B9B  01B8               	clrf	___ftdiv@f3+2
  6393  0B9C  073A               	addwf	___ftdiv@sign,w
  6394  0B9D  00B2               	movwf	??___ftdiv
  6395  0B9E  02B9               	subwf	___ftdiv@exp,f
  6396  0B9F  0831               	movf	___ftdiv@f1+2,w
  6397  0BA0  00BA               	movwf	___ftdiv@sign
  6398  0BA1  082E               	movf	___ftdiv@f2+2,w
  6399  0BA2  06BA               	xorwf	___ftdiv@sign,f
  6400  0BA3  3080               	movlw	128
  6401  0BA4  05BA               	andwf	___ftdiv@sign,f
  6402  0BA5  3018               	movlw	24
  6403  0BA6  17B0               	bsf	___ftdiv@f1+1,7
  6404  0BA7  01B1               	clrf	___ftdiv@f1+2
  6405  0BA8  17AD               	bsf	___ftdiv@f2+1,7
  6406  0BA9  01AE               	clrf	___ftdiv@f2+2
  6407  0BAA  00B5               	movwf	___ftdiv@cntr
  6408  0BAB                     l7230:	
  6409  0BAB  1003               	clrc
  6410  0BAC  0DB6               	rlf	___ftdiv@f3,f
  6411  0BAD  0DB7               	rlf	___ftdiv@f3+1,f
  6412  0BAE  0DB8               	rlf	___ftdiv@f3+2,f
  6413  0BAF  082E               	movf	___ftdiv@f2+2,w
  6414  0BB0  0231               	subwf	___ftdiv@f1+2,w
  6415  0BB1  1D03               	skipz
  6416  0BB2  2BB9               	goto	u4035
  6417  0BB3  082D               	movf	___ftdiv@f2+1,w
  6418  0BB4  0230               	subwf	___ftdiv@f1+1,w
  6419  0BB5  1D03               	skipz
  6420  0BB6  2BB9               	goto	u4035
  6421  0BB7  082C               	movf	___ftdiv@f2,w
  6422  0BB8  022F               	subwf	___ftdiv@f1,w
  6423  0BB9                     u4035:	
  6424  0BB9  1C03               	skipc
  6425  0BBA  2BC7               	goto	L6
  6426  0BBB  082C               	movf	___ftdiv@f2,w
  6427  0BBC  02AF               	subwf	___ftdiv@f1,f
  6428  0BBD  082D               	movf	___ftdiv@f2+1,w
  6429  0BBE  1C03               	skipc
  6430  0BBF  0F2D               	incfsz	___ftdiv@f2+1,w
  6431  0BC0  02B0               	subwf	___ftdiv@f1+1,f
  6432  0BC1  082E               	movf	___ftdiv@f2+2,w
  6433  0BC2  1C03               	skipc
  6434  0BC3  0A2E               	incf	___ftdiv@f2+2,w
  6435  0BC4  02B1               	subwf	___ftdiv@f1+2,f
  6436  0BC5  1436               	bsf	___ftdiv@f3,0
  6437  0BC6  1003               	clrc
  6438  0BC7                     L6:	
  6439  0BC7  0DAF               	rlf	___ftdiv@f1,f
  6440  0BC8  0DB0               	rlf	___ftdiv@f1+1,f
  6441  0BC9  0DB1               	rlf	___ftdiv@f1+2,f
  6442  0BCA  0BB5               	decfsz	___ftdiv@cntr,f
  6443  0BCB  2BAB               	goto	l7230
  6444  0BCC  0836               	movf	___ftdiv@f3,w
  6445  0BCD  00A0               	movwf	?___ftpack
  6446  0BCE  0837               	movf	___ftdiv@f3+1,w
  6447  0BCF  00A1               	movwf	?___ftpack+1
  6448  0BD0  0838               	movf	___ftdiv@f3+2,w
  6449  0BD1  00A2               	movwf	?___ftpack+2
  6450  0BD2  0839               	movf	___ftdiv@exp,w
  6451  0BD3  00A3               	movwf	?___ftpack+3
  6452  0BD4  083A               	movf	___ftdiv@sign,w
  6453  0BD5  00A4               	movwf	?___ftpack+4
  6454  0BD6  120A  158A  2769   	fcall	___ftpack
  6455  0BD9  0820               	movf	?___ftpack,w
  6456  0BDA  00AC               	movwf	?___ftdiv
  6457  0BDB  0821               	movf	?___ftpack+1,w
  6458  0BDC  00AD               	movwf	?___ftdiv+1
  6459  0BDD  0822               	movf	?___ftpack+2,w
  6460  0BDE  00AE               	movwf	?___ftdiv+2
  6461  0BDF  0008               	return
  6462  0BE0                     __end_of___ftdiv:	
  6463  0BE0                     __ptext704:	
  6464 ;; =============== function ___lltoft ends ============
  6465                           
  6466                           
  6467 ;; *************** function ___awtoft *****************
  6468 ;; Defined at:
  6469 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;  c               2    8[BANK0 ] int 
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  sign            1   11[BANK0 ] unsigned char 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  3    8[BANK0 ] float 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, pclath, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 60/0
  6480 ;;		On exit  : 60/0
  6481 ;;		Unchanged: FFF9F/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6483 ;;      Params:         0       3       0       0       0
  6484 ;;      Locals:         0       1       0       0       0
  6485 ;;      Temps:          0       0       0       0       0
  6486 ;;      Totals:         0       4       0       0       0
  6487 ;;Total ram usage:        4 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    3
  6490 ;; This function calls:
  6491 ;;		___ftpack
  6492 ;; This function is called by:
  6493 ;;		_read_adc_AN0
  6494 ;;		_read_adc_AN1
  6495 ;;		_read_adc_AN2
  6496 ;;		_read_adc_AN3
  6497 ;;		_read_adc_AN5
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500  0BE0                     ___awtoft:	
  6501                           
  6502                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6503  0BE0  01AB               	clrf	___awtoft@sign
  6504  0BE1  1FA9               	btfss	___awtoft@c+1,7
  6505  0BE2  2BEA               	goto	l7308
  6506  0BE3  09A8               	comf	___awtoft@c,f
  6507  0BE4  09A9               	comf	___awtoft@c+1,f
  6508  0BE5  0AA8               	incf	___awtoft@c,f
  6509  0BE6  1903               	skipnz
  6510  0BE7  0AA9               	incf	___awtoft@c+1,f
  6511  0BE8  01AB               	clrf	___awtoft@sign
  6512  0BE9  0AAB               	incf	___awtoft@sign,f
  6513  0BEA                     l7308:	
  6514  0BEA  0828               	movf	___awtoft@c,w
  6515  0BEB  00A0               	movwf	?___ftpack
  6516  0BEC  0829               	movf	___awtoft@c+1,w
  6517  0BED  00A1               	movwf	?___ftpack+1
  6518  0BEE  308E               	movlw	142
  6519  0BEF  01A2               	clrf	?___ftpack+2
  6520  0BF0  00A3               	movwf	?___ftpack+3
  6521  0BF1  082B               	movf	___awtoft@sign,w
  6522  0BF2  00A4               	movwf	?___ftpack+4
  6523  0BF3  120A  158A  2769   	fcall	___ftpack
  6524  0BF6  0820               	movf	?___ftpack,w
  6525  0BF7  00A8               	movwf	?___awtoft
  6526  0BF8  0821               	movf	?___ftpack+1,w
  6527  0BF9  00A9               	movwf	?___awtoft+1
  6528  0BFA  0822               	movf	?___ftpack+2,w
  6529  0BFB  00AA               	movwf	?___awtoft+2
  6530  0BFC  0008               	return
  6531  0BFD                     __end_of___awtoft:	
  6532  0BFD                     PL2:	
  6533  0BFD  01BB               	clrf	?___ftmul
  6534  0BFE  00BC               	movwf	?___ftmul+1
  6535  0BFF  3043               	movlw	67
  6536  0C00  00BD               	movwf	?___ftmul+2
  6537  0C01  3080               	movlw	128
  6538  0C02  01AC               	clrf	?___ftdiv
  6539  0C03  00AD               	movwf	?___ftdiv+1
  6540  0C04  3043               	movlw	67
  6541  0C05  00AE               	movwf	?___ftdiv+2
  6542  0C06  0008               	return
  6543  0C07                     PL15:	
  6544  0C07  0828               	movf	?___awtoft,w
  6545  0C08  00AF               	movwf	?___ftdiv+3
  6546  0C09  0829               	movf	?___awtoft+1,w
  6547  0C0A  00B0               	movwf	?___ftdiv+4
  6548  0C0B  082A               	movf	?___awtoft+2,w
  6549  0C0C  00B1               	movwf	?___ftdiv+5
  6550  0C0D  0008               	return
  6551  0C0E                     PL16:	
  6552  0C0E  082C               	movf	?___ftdiv,w
  6553  0C0F  00BE               	movwf	?___ftmul+3
  6554  0C10  082D               	movf	?___ftdiv+1,w
  6555  0C11  00BF               	movwf	?___ftmul+4
  6556  0C12  082E               	movf	?___ftdiv+2,w
  6557  0C13  00C0               	movwf	?___ftmul+5
  6558  0C14  0008               	return
  6559  0C15                     PL40:	
  6560  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  6561  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  6562  0C17  0008               	return
  6563                           
  6564                           	psect	text707
  6565  0C18                     __ptext707:	
  6566 ;; =============== function ___ftdiv ends ============
  6567                           
  6568                           
  6569 ;; *************** function ___ftadd *****************
  6570 ;; Defined at:
  6571 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  f1              3   42[BANK0 ] float 
  6574 ;;  f2              3   45[BANK0 ] float 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  exp1            1   53[BANK0 ] unsigned char 
  6577 ;;  exp2            1   52[BANK0 ] unsigned char 
  6578 ;;  sign            1   51[BANK0 ] unsigned char 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  3   42[BANK0 ] float 
  6581 ;; Registers used:
  6582 ;;		wreg, status,2, status,0, pclath, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : 60/0
  6585 ;;		On exit  : 60/0
  6586 ;;		Unchanged: FFF9F/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6588 ;;      Params:         0       6       0       0       0
  6589 ;;      Locals:         0       3       0       0       0
  6590 ;;      Temps:          0       3       0       0       0
  6591 ;;      Totals:         0      12       0       0       0
  6592 ;;Total ram usage:       12 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; Hardware stack levels required when called:    3
  6595 ;; This function calls:
  6596 ;;		___ftpack
  6597 ;; This function is called by:
  6598 ;;		_printf
  6599 ;;		___ftsub
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602  0C18                     ___ftadd:	
  6603                           
  6604                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6605  0C18  084A               	movf	___ftadd@f1,w
  6606  0C19  00D0               	movwf	??___ftadd
  6607  0C1A  084B               	movf	___ftadd@f1+1,w
  6608  0C1B  00D1               	movwf	??___ftadd+1
  6609  0C1C  084C               	movf	___ftadd@f1+2,w
  6610  0C1D  00D2               	movwf	??___ftadd+2
  6611  0C1E  1003               	clrc
  6612  0C1F  0D51               	rlf	??___ftadd+1,w
  6613  0C20  0D52               	rlf	??___ftadd+2,w
  6614  0C21  00D5               	movwf	___ftadd@exp1
  6615  0C22  084D               	movf	___ftadd@f2,w
  6616  0C23  00D0               	movwf	??___ftadd
  6617  0C24  084E               	movf	___ftadd@f2+1,w
  6618  0C25  00D1               	movwf	??___ftadd+1
  6619  0C26  084F               	movf	___ftadd@f2+2,w
  6620  0C27  00D2               	movwf	??___ftadd+2
  6621  0C28  1003               	clrc
  6622  0C29  0D51               	rlf	??___ftadd+1,w
  6623  0C2A  0D52               	rlf	??___ftadd+2,w
  6624  0C2B  00D4               	movwf	___ftadd@exp2
  6625  0C2C  0855               	movf	___ftadd@exp1,w
  6626  0C2D  1903               	btfsc	3,2
  6627  0C2E  2C3B               	goto	l7130
  6628  0C2F  0854               	movf	___ftadd@exp2,w
  6629  0C30  0255               	subwf	___ftadd@exp1,w
  6630  0C31  0854               	movf	___ftadd@exp2,w
  6631  0C32  1803               	skipnc
  6632  0C33  2C43               	goto	L7
  6633  0C34  00D0               	movwf	??___ftadd
  6634  0C35  0855               	movf	___ftadd@exp1,w
  6635  0C36  02D0               	subwf	??___ftadd,f
  6636  0C37  3019               	movlw	25
  6637  0C38  0250               	subwf	??___ftadd,w
  6638  0C39  1C03               	skipc
  6639  0C3A  2C42               	goto	l7134
  6640  0C3B                     l7130:	
  6641  0C3B  084D               	movf	___ftadd@f2,w
  6642  0C3C  00CA               	movwf	?___ftadd
  6643  0C3D  084E               	movf	___ftadd@f2+1,w
  6644  0C3E  00CB               	movwf	?___ftadd+1
  6645  0C3F  084F               	movf	___ftadd@f2+2,w
  6646  0C40  00CC               	movwf	?___ftadd+2
  6647  0C41  0008               	return
  6648  0C42                     l7134:	
  6649  0C42  0854               	movf	___ftadd@exp2,w
  6650  0C43                     L7:	
  6651  0C43  1903               	btfsc	3,2
  6652  0C44  0008               	return
  6653  0C45  0855               	movf	___ftadd@exp1,w
  6654  0C46  0254               	subwf	___ftadd@exp2,w
  6655  0C47  1803               	skipnc
  6656  0C48  2C51               	goto	l7140
  6657  0C49  0855               	movf	___ftadd@exp1,w
  6658  0C4A  00D0               	movwf	??___ftadd
  6659  0C4B  0854               	movf	___ftadd@exp2,w
  6660  0C4C  02D0               	subwf	??___ftadd,f
  6661  0C4D  3019               	movlw	25
  6662  0C4E  0250               	subwf	??___ftadd,w
  6663  0C4F  1803               	btfsc	3,0
  6664  0C50  0008               	return
  6665  0C51                     l7140:	
  6666  0C51  3006               	movlw	6
  6667  0C52  00D3               	movwf	___ftadd@sign
  6668  0C53  1BCC               	btfsc	___ftadd@f1+2,7
  6669  0C54  17D3               	bsf	___ftadd@sign,7
  6670  0C55  1BCF               	btfsc	___ftadd@f2+2,7
  6671  0C56  1753               	bsf	___ftadd@sign,6
  6672  0C57  17CB               	bsf	___ftadd@f1+1,7
  6673  0C58  01CC               	clrf	___ftadd@f1+2
  6674  0C59  17CE               	bsf	___ftadd@f2+1,7
  6675  0C5A  01CF               	clrf	___ftadd@f2+2
  6676  0C5B  0854               	movf	___ftadd@exp2,w
  6677  0C5C  0255               	subwf	___ftadd@exp1,w
  6678  0C5D  1803               	skipnc
  6679  0C5E  2C78               	goto	l7162
  6680  0C5F                     l7152:	
  6681  0C5F  1003               	clrc
  6682  0C60  0DCD               	rlf	___ftadd@f2,f
  6683  0C61  0DCE               	rlf	___ftadd@f2+1,f
  6684  0C62  0DCF               	rlf	___ftadd@f2+2,f
  6685  0C63  03D4               	decf	___ftadd@exp2,f
  6686  0C64  0854               	movf	___ftadd@exp2,w
  6687  0C65  0655               	xorwf	___ftadd@exp1,w
  6688  0C66  1903               	skipnz
  6689  0C67  2C73               	goto	l7160
  6690  0C68  03D3               	decf	___ftadd@sign,f
  6691  0C69  0853               	movf	___ftadd@sign,w
  6692  0C6A  3907               	andlw	7
  6693  0C6B  1903               	btfsc	3,2
  6694  0C6C  2C73               	goto	l7160
  6695  0C6D  2C5F               	goto	l7152
  6696  0C6E                     l7158:	
  6697  0C6E  1003               	clrc
  6698  0C6F  0CCC               	rrf	___ftadd@f1+2,f
  6699  0C70  0CCB               	rrf	___ftadd@f1+1,f
  6700  0C71  0CCA               	rrf	___ftadd@f1,f
  6701  0C72  0AD5               	incf	___ftadd@exp1,f
  6702  0C73                     l7160:	
  6703  0C73  0855               	movf	___ftadd@exp1,w
  6704  0C74  0654               	xorwf	___ftadd@exp2,w
  6705  0C75  1903               	btfsc	3,2
  6706  0C76  2C94               	goto	l3421
  6707  0C77  2C6E               	goto	l7158
  6708  0C78                     l7162:	
  6709  0C78  0855               	movf	___ftadd@exp1,w
  6710  0C79  0254               	subwf	___ftadd@exp2,w
  6711  0C7A  1803               	skipnc
  6712  0C7B  2C94               	goto	l3421
  6713  0C7C                     l7164:	
  6714  0C7C  1003               	clrc
  6715  0C7D  0DCA               	rlf	___ftadd@f1,f
  6716  0C7E  0DCB               	rlf	___ftadd@f1+1,f
  6717  0C7F  0DCC               	rlf	___ftadd@f1+2,f
  6718  0C80  03D5               	decf	___ftadd@exp1,f
  6719  0C81  0854               	movf	___ftadd@exp2,w
  6720  0C82  0655               	xorwf	___ftadd@exp1,w
  6721  0C83  1903               	skipnz
  6722  0C84  2C90               	goto	l7172
  6723  0C85  03D3               	decf	___ftadd@sign,f
  6724  0C86  0853               	movf	___ftadd@sign,w
  6725  0C87  3907               	andlw	7
  6726  0C88  1903               	btfsc	3,2
  6727  0C89  2C90               	goto	l7172
  6728  0C8A  2C7C               	goto	l7164
  6729  0C8B                     l7170:	
  6730  0C8B  1003               	clrc
  6731  0C8C  0CCF               	rrf	___ftadd@f2+2,f
  6732  0C8D  0CCE               	rrf	___ftadd@f2+1,f
  6733  0C8E  0CCD               	rrf	___ftadd@f2,f
  6734  0C8F  0AD4               	incf	___ftadd@exp2,f
  6735  0C90                     l7172:	
  6736  0C90  0855               	movf	___ftadd@exp1,w
  6737  0C91  0654               	xorwf	___ftadd@exp2,w
  6738  0C92  1D03               	skipz
  6739  0C93  2C8B               	goto	l7170
  6740  0C94                     l3421:	
  6741  0C94  1FD3               	btfss	___ftadd@sign,7
  6742  0C95  2C9F               	goto	l7178
  6743  0C96  30FF               	movlw	255
  6744  0C97  06CA               	xorwf	___ftadd@f1,f
  6745  0C98  06CB               	xorwf	___ftadd@f1+1,f
  6746  0C99  06CC               	xorwf	___ftadd@f1+2,f
  6747  0C9A  0ACA               	incf	___ftadd@f1,f
  6748  0C9B  1903               	skipnz
  6749  0C9C  0ACB               	incf	___ftadd@f1+1,f
  6750  0C9D  1903               	skipnz
  6751  0C9E  0ACC               	incf	___ftadd@f1+2,f
  6752  0C9F                     l7178:	
  6753  0C9F  1F53               	btfss	___ftadd@sign,6
  6754  0CA0  2CAA               	goto	l7184
  6755  0CA1  30FF               	movlw	255
  6756  0CA2  06CD               	xorwf	___ftadd@f2,f
  6757  0CA3  06CE               	xorwf	___ftadd@f2+1,f
  6758  0CA4  06CF               	xorwf	___ftadd@f2+2,f
  6759  0CA5  0ACD               	incf	___ftadd@f2,f
  6760  0CA6  1903               	skipnz
  6761  0CA7  0ACE               	incf	___ftadd@f2+1,f
  6762  0CA8  1903               	skipnz
  6763  0CA9  0ACF               	incf	___ftadd@f2+2,f
  6764  0CAA                     l7184:	
  6765  0CAA  01D3               	clrf	___ftadd@sign
  6766  0CAB  084A               	movf	___ftadd@f1,w
  6767  0CAC  07CD               	addwf	___ftadd@f2,f
  6768  0CAD  084B               	movf	___ftadd@f1+1,w
  6769  0CAE  1103               	clrz
  6770  0CAF  1803               	skipnc
  6771  0CB0  0A4B               	incf	___ftadd@f1+1,w
  6772  0CB1  1D03               	btfss	3,2
  6773  0CB2  07CE               	addwf	___ftadd@f2+1,f
  6774  0CB3  084C               	movf	___ftadd@f1+2,w
  6775  0CB4  1103               	clrz
  6776  0CB5  1803               	skipnc
  6777  0CB6  0A4C               	incf	___ftadd@f1+2,w
  6778  0CB7  1D03               	btfss	3,2
  6779  0CB8  07CF               	addwf	___ftadd@f2+2,f
  6780  0CB9  1FCF               	btfss	___ftadd@f2+2,7
  6781  0CBA  2CC6               	goto	l7196
  6782  0CBB  30FF               	movlw	255
  6783  0CBC  06CD               	xorwf	___ftadd@f2,f
  6784  0CBD  06CE               	xorwf	___ftadd@f2+1,f
  6785  0CBE  06CF               	xorwf	___ftadd@f2+2,f
  6786  0CBF  0ACD               	incf	___ftadd@f2,f
  6787  0CC0  1903               	skipnz
  6788  0CC1  0ACE               	incf	___ftadd@f2+1,f
  6789  0CC2  1903               	skipnz
  6790  0CC3  0ACF               	incf	___ftadd@f2+2,f
  6791  0CC4  01D3               	clrf	___ftadd@sign
  6792  0CC5  0AD3               	incf	___ftadd@sign,f
  6793  0CC6                     l7196:	
  6794  0CC6  084D               	movf	___ftadd@f2,w
  6795  0CC7  00A0               	movwf	?___ftpack
  6796  0CC8  084E               	movf	___ftadd@f2+1,w
  6797  0CC9  00A1               	movwf	?___ftpack+1
  6798  0CCA  084F               	movf	___ftadd@f2+2,w
  6799  0CCB  00A2               	movwf	?___ftpack+2
  6800  0CCC  0855               	movf	___ftadd@exp1,w
  6801  0CCD  00A3               	movwf	?___ftpack+3
  6802  0CCE  0853               	movf	___ftadd@sign,w
  6803  0CCF  00A4               	movwf	?___ftpack+4
  6804  0CD0  2769               	fcall	___ftpack
  6805  0CD1  0820               	movf	?___ftpack,w
  6806  0CD2  00CA               	movwf	?___ftadd
  6807  0CD3  0821               	movf	?___ftpack+1,w
  6808  0CD4  00CB               	movwf	?___ftadd+1
  6809  0CD5  0822               	movf	?___ftpack+2,w
  6810  0CD6  00CC               	movwf	?___ftadd+2
  6811  0CD7  0008               	return
  6812  0CD8                     __end_of___ftadd:	
  6813  0CD8                     __ptext694:	
  6814 ;; =============== function ___ftsub ends ============
  6815                           
  6816                           
  6817 ;; *************** function _scale *****************
  6818 ;; Defined at:
  6819 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  scl             1    wreg     char 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  scl             1   52[BANK0 ] char 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  3   42[BANK0 ] char 
  6826 ;; Registers used:
  6827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6828 ;; Tracked objects:
  6829 ;;		On entry : 60/20
  6830 ;;		On exit  : 60/0
  6831 ;;		Unchanged: FFF9F/0
  6832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6833 ;;      Params:         0       3       0       0       0
  6834 ;;      Locals:         0       4       0       0       0
  6835 ;;      Temps:          0       4       0       0       0
  6836 ;;      Totals:         0      11       0       0       0
  6837 ;;Total ram usage:       11 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    4
  6840 ;; This function calls:
  6841 ;;		___awmod
  6842 ;;		___awdiv
  6843 ;;		___ftmul
  6844 ;;		___bmul
  6845 ;; This function is called by:
  6846 ;;		_printf
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849  0CD8                     _scale:	
  6850                           
  6851                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6852                           ;scale@scl stored from wreg
  6853  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  6854  0CD9  00D4               	movwf	scale@scl
  6855  0CDA  1FD4               	btfss	scale@scl,7
  6856  0CDB  2DA4               	goto	l7476
  6857  0CDC  09D4               	comf	scale@scl,f
  6858  0CDD  0AD4               	incf	scale@scl,f
  6859  0CDE  0854               	movf	scale@scl,w
  6860  0CDF  3A80               	xorlw	128
  6861  0CE0  3E12               	addlw	-238
  6862  0CE1  1C03               	skipc
  6863  0CE2  2D48               	goto	l7466
  6864  0CE3  300A               	movlw	10
  6865  0CE4  27CB  120A  158A   	fcall	PL18	;call to abstracted procedure
  6866  0CE7  26AF  120A  158A   	fcall	___awmod
  6867  0CEA  0821               	movf	?___awmod+1,w
  6868  0CEB  00A9               	movwf	?___awdiv+3
  6869  0CEC  0820               	movf	?___awmod,w
  6870  0CED  00A8               	movwf	?___awdiv+2
  6871  0CEE  266A  120A  158A   	fcall	___awdiv
  6872  0CF1  27F0               	fcall	PL28	;call to abstracted procedure
  6873  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6874  0CF3  0084               	movwf	4
  6875  0CF4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6876  0CF9  00BB               	movwf	?___ftmul
  6877  0CFA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6878  0CFF  00BC               	movwf	?___ftmul+1
  6879  0D00  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6880  0D05  27E0  120A  158A   	fcall	PL25	;call to abstracted procedure
  6881  0D08  1BA8               	btfsc	?___awdiv+2,7
  6882  0D09  03A9               	decf	?___awdiv+3,f
  6883  0D0A  266A  120A  158A   	fcall	___awdiv
  6884  0D0D  27C3               	fcall	PL13	;call to abstracted procedure
  6885  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  6886  0D0F  0084               	movwf	4
  6887  0D10  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6888  0D15  00BE               	movwf	?___ftmul+3
  6889  0D16  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6890  0D1B  00BF               	movwf	?___ftmul+4
  6891  0D1C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6892  0D21  00C0               	movwf	?___ftmul+5
  6893  0D22  26EC  120A  158A   	fcall	___ftmul
  6894  0D25  27AE  120A  158A   	fcall	PL11	;call to abstracted procedure
  6895  0D28  1BA2               	btfsc	?___awmod+2,7
  6896  0D29  03A3               	decf	?___awmod+3,f
  6897  0D2A  26AF  120A  158A   	fcall	___awmod
  6898  0D2D  27BB               	fcall	PL12	;call to abstracted procedure
  6899  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  6900  0D2F  0084               	movwf	4
  6901  0D30  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6902  0D35  00BB               	movwf	?___ftmul
  6903  0D36  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6904  0D3B  00BC               	movwf	?___ftmul+1
  6905  0D3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6906  0D41  27F8  120A  158A   	fcall	PL29	;call to abstracted procedure
  6907  0D44  26EC  120A  158A   	fcall	___ftmul
  6908  0D47  2FA7               	ljmp	PL10	;call to abstracted procedure
  6909  0D48                     l7466:	
  6910  0D48  0854               	movf	scale@scl,w
  6911  0D49  3A80               	xorlw	128
  6912  0D4A  3E75               	addlw	-139
  6913  0D4B  1C03               	skipc
  6914  0D4C  2D8D               	goto	l7472
  6915  0D4D  300A               	movlw	10
  6916  0D4E  00A0               	movwf	?___awmod
  6917  0D4F  01A1               	clrf	?___awmod+1
  6918  0D50  0854               	movf	scale@scl,w
  6919  0D51  00A2               	movwf	?___awmod+2
  6920  0D52  01A3               	clrf	?___awmod+3
  6921  0D53  1BA2               	btfsc	?___awmod+2,7
  6922  0D54  03A3               	decf	?___awmod+3,f
  6923  0D55  26AF  120A  158A   	fcall	___awmod
  6924  0D58  27BB               	fcall	PL12	;call to abstracted procedure
  6925  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  6926  0D5A  0084               	movwf	4
  6927  0D5B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6928  0D60  00BB               	movwf	?___ftmul
  6929  0D61  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6930  0D66  00BC               	movwf	?___ftmul+1
  6931  0D67  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6932  0D6C  27E8  120A  158A   	fcall	PL27	;call to abstracted procedure
  6933  0D6F  1BA8               	btfsc	?___awdiv+2,7
  6934  0D70  03A9               	decf	?___awdiv+3,f
  6935  0D71  266A  120A  158A   	fcall	___awdiv
  6936  0D74  27C3               	fcall	PL13	;call to abstracted procedure
  6937  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6938  0D76  0084               	movwf	4
  6939  0D77  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6940  0D7C  00BE               	movwf	?___ftmul+3
  6941  0D7D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6942  0D82  00BF               	movwf	?___ftmul+4
  6943  0D83  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6944  0D88  00C0               	movwf	?___ftmul+5
  6945  0D89  26EC  120A  158A   	fcall	___ftmul
  6946  0D8C  2FA7               	ljmp	PL10	;call to abstracted procedure
  6947  0D8D                     l7472:	
  6948  0D8D  3003               	movlw	3
  6949  0D8E  00A9               	movwf	?___bmul
  6950  0D8F  0854               	movf	scale@scl,w
  6951  0D90  275B               	fcall	___bmul
  6952  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  6953  0D92  0084               	movwf	4
  6954  0D93  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6955  0D98  00CA               	movwf	?_scale
  6956  0D99  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6957  0D9E  00CB               	movwf	?_scale+1
  6958  0D9F  160A  118A  2000   	fcall	stringdir
  6959  0DA2  00CC               	movwf	?_scale+2
  6960  0DA3  0008               	return
  6961  0DA4                     l7476:	
  6962  0DA4  0854               	movf	scale@scl,w
  6963  0DA5  3A80               	xorlw	128
  6964  0DA6  3E12               	addlw	-238
  6965  0DA7  1C03               	skipc
  6966  0DA8  2E0E               	goto	l7484
  6967  0DA9  300A               	movlw	10
  6968  0DAA  27CB  120A  158A   	fcall	PL18	;call to abstracted procedure
  6969  0DAD  26AF  120A  158A   	fcall	___awmod
  6970  0DB0  0821               	movf	?___awmod+1,w
  6971  0DB1  00A9               	movwf	?___awdiv+3
  6972  0DB2  0820               	movf	?___awmod,w
  6973  0DB3  00A8               	movwf	?___awdiv+2
  6974  0DB4  266A  120A  158A   	fcall	___awdiv
  6975  0DB7  27F0               	fcall	PL28	;call to abstracted procedure
  6976  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  6977  0DB9  0084               	movwf	4
  6978  0DBA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6979  0DBF  00BB               	movwf	?___ftmul
  6980  0DC0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6981  0DC5  00BC               	movwf	?___ftmul+1
  6982  0DC6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6983  0DCB  27E0  120A  158A   	fcall	PL25	;call to abstracted procedure
  6984  0DCE  1BA8               	btfsc	?___awdiv+2,7
  6985  0DCF  03A9               	decf	?___awdiv+3,f
  6986  0DD0  266A  120A  158A   	fcall	___awdiv
  6987  0DD3  27C3               	fcall	PL13	;call to abstracted procedure
  6988  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6989  0DD5  0084               	movwf	4
  6990  0DD6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6991  0DDB  00BE               	movwf	?___ftmul+3
  6992  0DDC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6993  0DE1  00BF               	movwf	?___ftmul+4
  6994  0DE2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6995  0DE7  00C0               	movwf	?___ftmul+5
  6996  0DE8  26EC  120A  158A   	fcall	___ftmul
  6997  0DEB  27AE  120A  158A   	fcall	PL11	;call to abstracted procedure
  6998  0DEE  1BA2               	btfsc	?___awmod+2,7
  6999  0DEF  03A3               	decf	?___awmod+3,f
  7000  0DF0  26AF  120A  158A   	fcall	___awmod
  7001  0DF3  27BB               	fcall	PL12	;call to abstracted procedure
  7002  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  7003  0DF5  0084               	movwf	4
  7004  0DF6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7005  0DFB  00BB               	movwf	?___ftmul
  7006  0DFC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7007  0E01  00BC               	movwf	?___ftmul+1
  7008  0E02  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7009  0E07  27F8  120A  158A   	fcall	PL29	;call to abstracted procedure
  7010  0E0A  26EC  120A  158A   	fcall	___ftmul
  7011  0E0D  2FA7               	ljmp	PL10	;call to abstracted procedure
  7012  0E0E                     l7484:	
  7013  0E0E  0854               	movf	scale@scl,w
  7014  0E0F  3A80               	xorlw	128
  7015  0E10  3E75               	addlw	-139
  7016  0E11  1C03               	skipc
  7017  0E12  2E53               	goto	l7490
  7018  0E13  300A               	movlw	10
  7019  0E14  00A0               	movwf	?___awmod
  7020  0E15  01A1               	clrf	?___awmod+1
  7021  0E16  0854               	movf	scale@scl,w
  7022  0E17  00A2               	movwf	?___awmod+2
  7023  0E18  01A3               	clrf	?___awmod+3
  7024  0E19  1BA2               	btfsc	?___awmod+2,7
  7025  0E1A  03A3               	decf	?___awmod+3,f
  7026  0E1B  26AF  120A  158A   	fcall	___awmod
  7027  0E1E  27BB               	fcall	PL12	;call to abstracted procedure
  7028  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  7029  0E20  0084               	movwf	4
  7030  0E21  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7031  0E26  00BB               	movwf	?___ftmul
  7032  0E27  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7033  0E2C  00BC               	movwf	?___ftmul+1
  7034  0E2D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7035  0E32  27E8  120A  158A   	fcall	PL27	;call to abstracted procedure
  7036  0E35  1BA8               	btfsc	?___awdiv+2,7
  7037  0E36  03A9               	decf	?___awdiv+3,f
  7038  0E37  266A  120A  158A   	fcall	___awdiv
  7039  0E3A  27C3               	fcall	PL13	;call to abstracted procedure
  7040  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  7041  0E3C  0084               	movwf	4
  7042  0E3D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7043  0E42  00BE               	movwf	?___ftmul+3
  7044  0E43  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7045  0E48  00BF               	movwf	?___ftmul+4
  7046  0E49  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7047  0E4E  00C0               	movwf	?___ftmul+5
  7048  0E4F  26EC  120A  158A   	fcall	___ftmul
  7049  0E52  2FA7               	ljmp	PL10	;call to abstracted procedure
  7050  0E53                     l7490:	
  7051  0E53  3003               	movlw	3
  7052  0E54  00A9               	movwf	?___bmul
  7053  0E55  0854               	movf	scale@scl,w
  7054  0E56  275B               	fcall	___bmul
  7055  0E57  3E28               	addlw	low (__powers_-__stringbase)
  7056  0E58  0084               	movwf	4
  7057  0E59  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7058  0E5E  00CA               	movwf	?_scale
  7059  0E5F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  7060  0E64  00CB               	movwf	?_scale+1
  7061  0E65  160A  118A  2000   	fcall	stringdir
  7062  0E68  00CC               	movwf	?_scale+2
  7063  0E69  0008               	return
  7064  0E6A                     __end_of_scale:	
  7065  0E6A                     __ptext715:	
  7066 ;; =============== function ___llmod ends ============
  7067                           
  7068                           
  7069 ;; *************** function ___awdiv *****************
  7070 ;; Defined at:
  7071 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  divisor         2    6[BANK0 ] int 
  7074 ;;  dividend        2    8[BANK0 ] int 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  quotient        2   12[BANK0 ] int 
  7077 ;;  sign            1   11[BANK0 ] unsigned char 
  7078 ;;  counter         1   10[BANK0 ] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  2    6[BANK0 ] int 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0
  7083 ;; Tracked objects:
  7084 ;;		On entry : 60/0
  7085 ;;		On exit  : 60/0
  7086 ;;		Unchanged: FFF9F/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7088 ;;      Params:         0       4       0       0       0
  7089 ;;      Locals:         0       4       0       0       0
  7090 ;;      Temps:          0       0       0       0       0
  7091 ;;      Totals:         0       8       0       0       0
  7092 ;;Total ram usage:        8 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    2
  7095 ;; This function calls:
  7096 ;;		Nothing
  7097 ;; This function is called by:
  7098 ;;		_scale
  7099 ;;		_printf
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102  0E6A                     ___awdiv:	
  7103                           
  7104                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  7105  0E6A  01AB               	clrf	___awdiv@sign
  7106  0E6B  1FA7               	btfss	___awdiv@divisor+1,7
  7107  0E6C  2E74               	goto	l6876
  7108  0E6D  09A6               	comf	___awdiv@divisor,f
  7109  0E6E  09A7               	comf	___awdiv@divisor+1,f
  7110  0E6F  0AA6               	incf	___awdiv@divisor,f
  7111  0E70  1903               	skipnz
  7112  0E71  0AA7               	incf	___awdiv@divisor+1,f
  7113  0E72  01AB               	clrf	___awdiv@sign
  7114  0E73  0AAB               	incf	___awdiv@sign,f
  7115  0E74                     l6876:	
  7116  0E74  1FA9               	btfss	___awdiv@dividend+1,7
  7117  0E75  2E7D               	goto	l6882
  7118  0E76  09A8               	comf	___awdiv@dividend,f
  7119  0E77  09A9               	comf	___awdiv@dividend+1,f
  7120  0E78  0AA8               	incf	___awdiv@dividend,f
  7121  0E79  1903               	skipnz
  7122  0E7A  0AA9               	incf	___awdiv@dividend+1,f
  7123  0E7B  3001               	movlw	1
  7124  0E7C  06AB               	xorwf	___awdiv@sign,f
  7125  0E7D                     l6882:	
  7126  0E7D  01AC               	clrf	___awdiv@quotient
  7127  0E7E  01AD               	clrf	___awdiv@quotient+1
  7128  0E7F  0827               	movf	___awdiv@divisor+1,w
  7129  0E80  0426               	iorwf	___awdiv@divisor,w
  7130  0E81  1903               	skipnz
  7131  0E82  2EA2               	goto	l6904
  7132  0E83  01AA               	clrf	___awdiv@counter
  7133  0E84                     L15:	
  7134  0E84  0AAA               	incf	___awdiv@counter,f
  7135  0E85  1BA7               	btfsc	___awdiv@divisor+1,7
  7136  0E86  2E8B               	goto	l6892
  7137  0E87  1003               	clrc
  7138  0E88  0DA6               	rlf	___awdiv@divisor,f
  7139  0E89  0DA7               	rlf	___awdiv@divisor+1,f
  7140  0E8A  2E84               	goto	L15
  7141  0E8B                     l6892:	
  7142  0E8B  1003               	clrc
  7143  0E8C  0DAC               	rlf	___awdiv@quotient,f
  7144  0E8D  0DAD               	rlf	___awdiv@quotient+1,f
  7145  0E8E  0827               	movf	___awdiv@divisor+1,w
  7146  0E8F  0229               	subwf	___awdiv@dividend+1,w
  7147  0E90  1D03               	skipz
  7148  0E91  2E94               	goto	u3255
  7149  0E92  0826               	movf	___awdiv@divisor,w
  7150  0E93  0228               	subwf	___awdiv@dividend,w
  7151  0E94                     u3255:	
  7152  0E94  1C03               	skipc
  7153  0E95  2E9E               	goto	L16
  7154  0E96  0826               	movf	___awdiv@divisor,w
  7155  0E97  02A8               	subwf	___awdiv@dividend,f
  7156  0E98  0827               	movf	___awdiv@divisor+1,w
  7157  0E99  1C03               	skipc
  7158  0E9A  03A9               	decf	___awdiv@dividend+1,f
  7159  0E9B  02A9               	subwf	___awdiv@dividend+1,f
  7160  0E9C  142C               	bsf	___awdiv@quotient,0
  7161  0E9D  1003               	clrc
  7162  0E9E                     L16:	
  7163  0E9E  0CA7               	rrf	___awdiv@divisor+1,f
  7164  0E9F  0CA6               	rrf	___awdiv@divisor,f
  7165  0EA0  0BAA               	decfsz	___awdiv@counter,f
  7166  0EA1  2E8B               	goto	l6892
  7167  0EA2                     l6904:	
  7168  0EA2  082B               	movf	___awdiv@sign,w
  7169  0EA3  1903               	btfsc	3,2
  7170  0EA4  2EAA               	goto	l6908
  7171  0EA5  09AC               	comf	___awdiv@quotient,f
  7172  0EA6  09AD               	comf	___awdiv@quotient+1,f
  7173  0EA7  0AAC               	incf	___awdiv@quotient,f
  7174  0EA8  1903               	skipnz
  7175  0EA9  0AAD               	incf	___awdiv@quotient+1,f
  7176  0EAA                     l6908:	
  7177  0EAA  082D               	movf	___awdiv@quotient+1,w
  7178  0EAB  00A7               	movwf	?___awdiv+1
  7179  0EAC  082C               	movf	___awdiv@quotient,w
  7180  0EAD  00A6               	movwf	?___awdiv
  7181  0EAE  0008               	return
  7182  0EAF                     __end_of___awdiv:	
  7183  0EAF                     __ptext710:	
  7184 ;; =============== function _lcd_put_byte ends ============
  7185                           
  7186                           
  7187 ;; *************** function ___awmod *****************
  7188 ;; Defined at:
  7189 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  divisor         2    0[BANK0 ] int 
  7192 ;;  dividend        2    2[BANK0 ] int 
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;  sign            1    5[BANK0 ] unsigned char 
  7195 ;;  counter         1    4[BANK0 ] unsigned char 
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  2    0[BANK0 ] int 
  7198 ;; Registers used:
  7199 ;;		wreg, status,2, status,0
  7200 ;; Tracked objects:
  7201 ;;		On entry : 60/0
  7202 ;;		On exit  : 60/0
  7203 ;;		Unchanged: FFF9F/0
  7204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7205 ;;      Params:         0       4       0       0       0
  7206 ;;      Locals:         0       2       0       0       0
  7207 ;;      Temps:          0       0       0       0       0
  7208 ;;      Totals:         0       6       0       0       0
  7209 ;;Total ram usage:        6 bytes
  7210 ;; Hardware stack levels used:    1
  7211 ;; Hardware stack levels required when called:    2
  7212 ;; This function calls:
  7213 ;;		Nothing
  7214 ;; This function is called by:
  7215 ;;		_scale
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218  0EAF                     ___awmod:	
  7219                           
  7220                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7221  0EAF  01A5               	clrf	___awmod@sign
  7222  0EB0  1FA3               	btfss	___awmod@dividend+1,7
  7223  0EB1  2EB9               	goto	l6994
  7224  0EB2  09A2               	comf	___awmod@dividend,f
  7225  0EB3  09A3               	comf	___awmod@dividend+1,f
  7226  0EB4  0AA2               	incf	___awmod@dividend,f
  7227  0EB5  1903               	skipnz
  7228  0EB6  0AA3               	incf	___awmod@dividend+1,f
  7229  0EB7  01A5               	clrf	___awmod@sign
  7230  0EB8  0AA5               	incf	___awmod@sign,f
  7231  0EB9                     l6994:	
  7232  0EB9  1FA1               	btfss	___awmod@divisor+1,7
  7233  0EBA  2EC0               	goto	l6998
  7234  0EBB  09A0               	comf	___awmod@divisor,f
  7235  0EBC  09A1               	comf	___awmod@divisor+1,f
  7236  0EBD  0AA0               	incf	___awmod@divisor,f
  7237  0EBE  1903               	skipnz
  7238  0EBF  0AA1               	incf	___awmod@divisor+1,f
  7239  0EC0                     l6998:	
  7240  0EC0  0821               	movf	___awmod@divisor+1,w
  7241  0EC1  0420               	iorwf	___awmod@divisor,w
  7242  0EC2  1903               	skipnz
  7243  0EC3  2EDF               	goto	l7014
  7244  0EC4  01A4               	clrf	___awmod@counter
  7245  0EC5                     L8:	
  7246  0EC5  0AA4               	incf	___awmod@counter,f
  7247  0EC6  1BA1               	btfsc	___awmod@divisor+1,7
  7248  0EC7  2ECC               	goto	l7006
  7249  0EC8  1003               	clrc
  7250  0EC9  0DA0               	rlf	___awmod@divisor,f
  7251  0ECA  0DA1               	rlf	___awmod@divisor+1,f
  7252  0ECB  2EC5               	goto	L8
  7253  0ECC                     l7006:	
  7254  0ECC  0821               	movf	___awmod@divisor+1,w
  7255  0ECD  0223               	subwf	___awmod@dividend+1,w
  7256  0ECE  1D03               	skipz
  7257  0ECF  2ED2               	goto	u3445
  7258  0ED0  0820               	movf	___awmod@divisor,w
  7259  0ED1  0222               	subwf	___awmod@dividend,w
  7260  0ED2                     u3445:	
  7261  0ED2  1C03               	skipc
  7262  0ED3  2EDB               	goto	L9
  7263  0ED4  0820               	movf	___awmod@divisor,w
  7264  0ED5  02A2               	subwf	___awmod@dividend,f
  7265  0ED6  0821               	movf	___awmod@divisor+1,w
  7266  0ED7  1C03               	skipc
  7267  0ED8  03A3               	decf	___awmod@dividend+1,f
  7268  0ED9  02A3               	subwf	___awmod@dividend+1,f
  7269  0EDA  1003               	clrc
  7270  0EDB                     L9:	
  7271  0EDB  0CA1               	rrf	___awmod@divisor+1,f
  7272  0EDC  0CA0               	rrf	___awmod@divisor,f
  7273  0EDD  0BA4               	decfsz	___awmod@counter,f
  7274  0EDE  2ECC               	goto	l7006
  7275  0EDF                     l7014:	
  7276  0EDF  0825               	movf	___awmod@sign,w
  7277  0EE0  1903               	btfsc	3,2
  7278  0EE1  2EE7               	goto	l7018
  7279  0EE2  09A2               	comf	___awmod@dividend,f
  7280  0EE3  09A3               	comf	___awmod@dividend+1,f
  7281  0EE4  0AA2               	incf	___awmod@dividend,f
  7282  0EE5  1903               	skipnz
  7283  0EE6  0AA3               	incf	___awmod@dividend+1,f
  7284  0EE7                     l7018:	
  7285  0EE7  0823               	movf	___awmod@dividend+1,w
  7286  0EE8  00A1               	movwf	?___awmod+1
  7287  0EE9  0822               	movf	___awmod@dividend,w
  7288  0EEA  00A0               	movwf	?___awmod
  7289  0EEB  0008               	return
  7290  0EEC                     __end_of___awmod:	
  7291  0EEC                     __ptext705:	
  7292 ;; =============== function ___awtoft ends ============
  7293                           
  7294                           
  7295 ;; *************** function ___ftmul *****************
  7296 ;; Defined at:
  7297 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;  f1              3   27[BANK0 ] float 
  7300 ;;  f2              3   30[BANK0 ] float 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  f3_as_produc    3   37[BANK0 ] unsigned um
  7303 ;;  sign            1   41[BANK0 ] unsigned char 
  7304 ;;  cntr            1   40[BANK0 ] unsigned char 
  7305 ;;  exp             1   36[BANK0 ] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  3   27[BANK0 ] float 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, pclath, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 60/0
  7312 ;;		On exit  : 60/0
  7313 ;;		Unchanged: FFF9F/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7315 ;;      Params:         0       6       0       0       0
  7316 ;;      Locals:         0       6       0       0       0
  7317 ;;      Temps:          0       3       0       0       0
  7318 ;;      Totals:         0      15       0       0       0
  7319 ;;Total ram usage:       15 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    3
  7322 ;; This function calls:
  7323 ;;		___ftpack
  7324 ;; This function is called by:
  7325 ;;		_read_adc_AN0
  7326 ;;		_read_adc_AN1
  7327 ;;		_read_adc_AN2
  7328 ;;		_read_adc_AN3
  7329 ;;		_read_adc_AN5
  7330 ;;		_fround
  7331 ;;		_scale
  7332 ;;		_printf
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335  0EEC                     ___ftmul:	
  7336                           
  7337                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7338  0EEC  083B               	movf	___ftmul@f1,w
  7339  0EED  00C1               	movwf	??___ftmul
  7340  0EEE  083C               	movf	___ftmul@f1+1,w
  7341  0EEF  00C2               	movwf	??___ftmul+1
  7342  0EF0  083D               	movf	___ftmul@f1+2,w
  7343  0EF1  00C3               	movwf	??___ftmul+2
  7344  0EF2  1003               	clrc
  7345  0EF3  0D42               	rlf	??___ftmul+1,w
  7346  0EF4  0D43               	rlf	??___ftmul+2,w
  7347  0EF5  00C4               	movwf	___ftmul@exp
  7348  0EF6  08C4               	movf	___ftmul@exp,f
  7349  0EF7  1D03               	skipz
  7350  0EF8  2EFD               	goto	l7250
  7351  0EF9  01BB               	clrf	?___ftmul
  7352  0EFA  01BC               	clrf	?___ftmul+1
  7353  0EFB  01BD               	clrf	?___ftmul+2
  7354  0EFC  0008               	return
  7355  0EFD                     l7250:	
  7356  0EFD  083E               	movf	___ftmul@f2,w
  7357  0EFE  00C1               	movwf	??___ftmul
  7358  0EFF  083F               	movf	___ftmul@f2+1,w
  7359  0F00  00C2               	movwf	??___ftmul+1
  7360  0F01  0840               	movf	___ftmul@f2+2,w
  7361  0F02  00C3               	movwf	??___ftmul+2
  7362  0F03  1003               	clrc
  7363  0F04  0D42               	rlf	??___ftmul+1,w
  7364  0F05  0D43               	rlf	??___ftmul+2,w
  7365  0F06  00C9               	movwf	___ftmul@sign
  7366  0F07  08C9               	movf	___ftmul@sign,f
  7367  0F08  1D03               	skipz
  7368  0F09  2F0E               	goto	l7256
  7369  0F0A  01BB               	clrf	?___ftmul
  7370  0F0B  01BC               	clrf	?___ftmul+1
  7371  0F0C  01BD               	clrf	?___ftmul+2
  7372  0F0D  0008               	return
  7373  0F0E                     l7256:	
  7374  0F0E  0849               	movf	___ftmul@sign,w
  7375  0F0F  3E7B               	addlw	123
  7376  0F10  07C4               	addwf	___ftmul@exp,f
  7377  0F11  083D               	movf	___ftmul@f1+2,w
  7378  0F12  00C9               	movwf	___ftmul@sign
  7379  0F13  0840               	movf	___ftmul@f2+2,w
  7380  0F14  06C9               	xorwf	___ftmul@sign,f
  7381  0F15  3080               	movlw	128
  7382  0F16  05C9               	andwf	___ftmul@sign,f
  7383  0F17  3007               	movlw	7
  7384  0F18  17BC               	bsf	___ftmul@f1+1,7
  7385  0F19  17BF               	bsf	___ftmul@f2+1,7
  7386  0F1A  01C0               	clrf	___ftmul@f2+2
  7387  0F1B  01C5               	clrf	___ftmul@f3_as_product
  7388  0F1C  01C6               	clrf	___ftmul@f3_as_product+1
  7389  0F1D  01C7               	clrf	___ftmul@f3_as_product+2
  7390  0F1E  00C8               	movwf	___ftmul@cntr
  7391  0F1F                     l7274:	
  7392  0F1F  1C3B               	btfss	___ftmul@f1,0
  7393  0F20  2F29               	goto	l7278
  7394  0F21  083E               	movf	___ftmul@f2,w
  7395  0F22  27D6  120A  158A   	fcall	PL21	;call to abstracted procedure
  7396  0F25  1803               	skipnc
  7397  0F26  0A40               	incf	___ftmul@f2+2,w
  7398  0F27  1D03               	btfss	3,2
  7399  0F28  07C7               	addwf	___ftmul@f3_as_product+2,f
  7400  0F29                     l7278:	
  7401  0F29  1003               	clrc
  7402  0F2A  0CBD               	rrf	___ftmul@f1+2,f
  7403  0F2B  0CBC               	rrf	___ftmul@f1+1,f
  7404  0F2C  0CBB               	rrf	___ftmul@f1,f
  7405  0F2D  1003               	clrc
  7406  0F2E  0DBE               	rlf	___ftmul@f2,f
  7407  0F2F  0DBF               	rlf	___ftmul@f2+1,f
  7408  0F30  0DC0               	rlf	___ftmul@f2+2,f
  7409  0F31  0BC8               	decfsz	___ftmul@cntr,f
  7410  0F32  2F1F               	goto	l7274
  7411  0F33  3009               	movlw	9
  7412  0F34  00C8               	movwf	___ftmul@cntr
  7413  0F35                     l7286:	
  7414  0F35  1C3B               	btfss	___ftmul@f1,0
  7415  0F36  2F3F               	goto	l7290
  7416  0F37  083E               	movf	___ftmul@f2,w
  7417  0F38  27D6  120A  158A   	fcall	PL21	;call to abstracted procedure
  7418  0F3B  1803               	skipnc
  7419  0F3C  0A40               	incf	___ftmul@f2+2,w
  7420  0F3D  1D03               	btfss	3,2
  7421  0F3E  07C7               	addwf	___ftmul@f3_as_product+2,f
  7422  0F3F                     l7290:	
  7423  0F3F  1003               	clrc
  7424  0F40  0CBD               	rrf	___ftmul@f1+2,f
  7425  0F41  0CBC               	rrf	___ftmul@f1+1,f
  7426  0F42  0CBB               	rrf	___ftmul@f1,f
  7427  0F43  1003               	clrc
  7428  0F44  0CC7               	rrf	___ftmul@f3_as_product+2,f
  7429  0F45  0CC6               	rrf	___ftmul@f3_as_product+1,f
  7430  0F46  0CC5               	rrf	___ftmul@f3_as_product,f
  7431  0F47  0BC8               	decfsz	___ftmul@cntr,f
  7432  0F48  2F35               	goto	l7286
  7433  0F49  0845               	movf	___ftmul@f3_as_product,w
  7434  0F4A  00A0               	movwf	?___ftpack
  7435  0F4B  0846               	movf	___ftmul@f3_as_product+1,w
  7436  0F4C  00A1               	movwf	?___ftpack+1
  7437  0F4D  0847               	movf	___ftmul@f3_as_product+2,w
  7438  0F4E  00A2               	movwf	?___ftpack+2
  7439  0F4F  0844               	movf	___ftmul@exp,w
  7440  0F50  00A3               	movwf	?___ftpack+3
  7441  0F51  0849               	movf	___ftmul@sign,w
  7442  0F52  00A4               	movwf	?___ftpack+4
  7443  0F53  2769               	fcall	___ftpack
  7444  0F54  0820               	movf	?___ftpack,w
  7445  0F55  00BB               	movwf	?___ftmul
  7446  0F56  0821               	movf	?___ftpack+1,w
  7447  0F57  00BC               	movwf	?___ftmul+1
  7448  0F58  0822               	movf	?___ftpack+2,w
  7449  0F59  00BD               	movwf	?___ftmul+2
  7450  0F5A  0008               	return
  7451  0F5B                     __end_of___ftmul:	
  7452  0F5B                     __ptext721:	
  7453 ;; =============== function ___wmul ends ============
  7454                           
  7455                           
  7456 ;; *************** function ___bmul *****************
  7457 ;; Defined at:
  7458 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  multiplier      1    wreg     unsigned char 
  7461 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  multiplier      1   11[BANK0 ] unsigned char 
  7464 ;;  product         1   10[BANK0 ] unsigned char 
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  1    wreg      unsigned char 
  7467 ;; Registers used:
  7468 ;;		wreg, status,2, status,0
  7469 ;; Tracked objects:
  7470 ;;		On entry : 60/0
  7471 ;;		On exit  : 60/0
  7472 ;;		Unchanged: FFF9F/0
  7473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7474 ;;      Params:         0       1       0       0       0
  7475 ;;      Locals:         0       2       0       0       0
  7476 ;;      Temps:          0       0       0       0       0
  7477 ;;      Totals:         0       3       0       0       0
  7478 ;;Total ram usage:        3 bytes
  7479 ;; Hardware stack levels used:    1
  7480 ;; Hardware stack levels required when called:    2
  7481 ;; This function calls:
  7482 ;;		Nothing
  7483 ;; This function is called by:
  7484 ;;		_fround
  7485 ;;		_scale
  7486 ;; This function uses a non-reentrant model
  7487 ;;
  7488  0F5B                     ___bmul:	
  7489                           
  7490                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7491                           ;___bmul@multiplier stored from wreg
  7492  0F5B  00AB               	movwf	___bmul@multiplier
  7493  0F5C  01AA               	clrf	___bmul@product
  7494  0F5D                     l6730:	
  7495  0F5D  0829               	movf	___bmul@multiplicand,w
  7496  0F5E  182B               	btfsc	___bmul@multiplier,0
  7497  0F5F  07AA               	addwf	___bmul@product,f
  7498  0F60  1003               	clrc
  7499  0F61  0DA9               	rlf	___bmul@multiplicand,f
  7500  0F62  1003               	clrc
  7501  0F63  0CAB               	rrf	___bmul@multiplier,f
  7502  0F64  08AB               	movf	___bmul@multiplier,f
  7503  0F65  1D03               	skipz
  7504  0F66  2F5D               	goto	l6730
  7505  0F67  082A               	movf	___bmul@product,w
  7506  0F68  0008               	return
  7507  0F69                     __end_of___bmul:	
  7508  0F69                     __ptext717:	
  7509 ;; =============== function ___fttol ends ============
  7510                           
  7511                           
  7512 ;; *************** function ___ftpack *****************
  7513 ;; Defined at:
  7514 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  arg             3    0[BANK0 ] unsigned um
  7517 ;;  exp             1    3[BANK0 ] unsigned char 
  7518 ;;  sign            1    4[BANK0 ] unsigned char 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;                  3    0[BANK0 ] float 
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0
  7525 ;; Tracked objects:
  7526 ;;		On entry : 60/0
  7527 ;;		On exit  : 60/0
  7528 ;;		Unchanged: FFF9F/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7530 ;;      Params:         0       5       0       0       0
  7531 ;;      Locals:         0       0       0       0       0
  7532 ;;      Temps:          0       3       0       0       0
  7533 ;;      Totals:         0       8       0       0       0
  7534 ;;Total ram usage:        8 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    2
  7537 ;; This function calls:
  7538 ;;		Nothing
  7539 ;; This function is called by:
  7540 ;;		___ftadd
  7541 ;;		___ftdiv
  7542 ;;		___ftmul
  7543 ;;		___awtoft
  7544 ;;		___lltoft
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547  0F69                     ___ftpack:	
  7548                           
  7549                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7550  0F69  0823               	movf	___ftpack@exp,w
  7551  0F6A  1903               	btfsc	3,2
  7552  0F6B  2F71               	goto	l6806
  7553  0F6C  0822               	movf	___ftpack@arg+2,w
  7554  0F6D  0421               	iorwf	___ftpack@arg+1,w
  7555  0F6E  0420               	iorwf	___ftpack@arg,w
  7556  0F6F  1D03               	skipz
  7557  0F70  2F7A               	goto	l6812
  7558  0F71                     l6806:	
  7559  0F71  01A0               	clrf	?___ftpack
  7560  0F72  01A1               	clrf	?___ftpack+1
  7561  0F73  01A2               	clrf	?___ftpack+2
  7562  0F74  0008               	return
  7563  0F75                     l6810:	
  7564  0F75  0AA3               	incf	___ftpack@exp,f
  7565  0F76  1003               	clrc
  7566  0F77  0CA2               	rrf	___ftpack@arg+2,f
  7567  0F78  0CA1               	rrf	___ftpack@arg+1,f
  7568  0F79  0CA0               	rrf	___ftpack@arg,f
  7569  0F7A                     l6812:	
  7570  0F7A  30FE               	movlw	254
  7571  0F7B  0522               	andwf	___ftpack@arg+2,w
  7572  0F7C  1903               	btfsc	3,2
  7573  0F7D  2F89               	goto	l6816
  7574  0F7E  2F75               	goto	l6810
  7575  0F7F                     l6814:	
  7576  0F7F  0AA3               	incf	___ftpack@exp,f
  7577  0F80  0AA0               	incf	___ftpack@arg,f
  7578  0F81  1903               	skipnz
  7579  0F82  0AA1               	incf	___ftpack@arg+1,f
  7580  0F83  1903               	skipnz
  7581  0F84  0AA2               	incf	___ftpack@arg+2,f
  7582  0F85  1003               	clrc
  7583  0F86  0CA2               	rrf	___ftpack@arg+2,f
  7584  0F87  0CA1               	rrf	___ftpack@arg+1,f
  7585  0F88  0CA0               	rrf	___ftpack@arg,f
  7586  0F89                     l6816:	
  7587  0F89  30FF               	movlw	255
  7588  0F8A  0522               	andwf	___ftpack@arg+2,w
  7589  0F8B  1903               	btfsc	3,2
  7590  0F8C  2F93               	goto	l6820
  7591  0F8D  2F7F               	goto	l6814
  7592  0F8E                     l6818:	
  7593  0F8E  03A3               	decf	___ftpack@exp,f
  7594  0F8F  1003               	clrc
  7595  0F90  0DA0               	rlf	___ftpack@arg,f
  7596  0F91  0DA1               	rlf	___ftpack@arg+1,f
  7597  0F92  0DA2               	rlf	___ftpack@arg+2,f
  7598  0F93                     l6820:	
  7599  0F93  1FA1               	btfss	___ftpack@arg+1,7
  7600  0F94  2F8E               	goto	l6818
  7601  0F95  1C23               	btfss	___ftpack@exp,0
  7602  0F96  13A1               	bcf	___ftpack@arg+1,7
  7603  0F97  1003               	clrc
  7604  0F98  0CA3               	rrf	___ftpack@exp,f
  7605  0F99  0823               	movf	___ftpack@exp,w
  7606  0F9A  00A7               	movwf	??___ftpack+2
  7607  0F9B  01A6               	clrf	??___ftpack+1
  7608  0F9C  01A5               	clrf	??___ftpack
  7609  0F9D  0825               	movf	??___ftpack,w
  7610  0F9E  04A0               	iorwf	___ftpack@arg,f
  7611  0F9F  0826               	movf	??___ftpack+1,w
  7612  0FA0  04A1               	iorwf	___ftpack@arg+1,f
  7613  0FA1  0827               	movf	??___ftpack+2,w
  7614  0FA2  04A2               	iorwf	___ftpack@arg+2,f
  7615  0FA3  0824               	movf	___ftpack@sign,w
  7616  0FA4  1D03               	skipz
  7617  0FA5  17A2               	bsf	___ftpack@arg+2,7
  7618  0FA6  0008               	return
  7619  0FA7                     __end_of___ftpack:	
  7620  0FA7                     PL10:	
  7621  0FA7  083B               	movf	?___ftmul,w
  7622  0FA8  00CA               	movwf	?_scale
  7623  0FA9  083C               	movf	?___ftmul+1,w
  7624  0FAA  00CB               	movwf	?_scale+1
  7625  0FAB  083D               	movf	?___ftmul+2,w
  7626  0FAC  00CC               	movwf	?_scale+2
  7627  0FAD  0008               	return
  7628  0FAE                     PL11:	
  7629  0FAE  083B               	movf	?___ftmul,w
  7630  0FAF  00D1               	movwf	_scale$4157
  7631  0FB0  083C               	movf	?___ftmul+1,w
  7632  0FB1  00D2               	movwf	_scale$4157+1
  7633  0FB2  083D               	movf	?___ftmul+2,w
  7634  0FB3  00D3               	movwf	_scale$4157+2
  7635  0FB4  300A               	movlw	10
  7636  0FB5  00A0               	movwf	?___awmod
  7637  0FB6  01A1               	clrf	?___awmod+1
  7638  0FB7  0854               	movf	scale@scl,w
  7639  0FB8  00A2               	movwf	?___awmod+2
  7640  0FB9  01A3               	clrf	?___awmod+3
  7641  0FBA  0008               	return
  7642  0FBB                     PL12:	
  7643  0FBB  0820               	movf	?___awmod,w
  7644  0FBC  00CD               	movwf	??_scale
  7645  0FBD  0821               	movf	?___awmod+1,w
  7646  0FBE  00CE               	movwf	??_scale+1
  7647  0FBF  084D               	movf	??_scale,w
  7648  0FC0  074D               	addwf	??_scale,w
  7649  0FC1  074D               	addwf	??_scale,w
  7650  0FC2  0008               	return
  7651  0FC3                     PL13:	
  7652  0FC3  0826               	movf	?___awdiv,w
  7653  0FC4  00CF               	movwf	??_scale+2
  7654  0FC5  0827               	movf	?___awdiv+1,w
  7655  0FC6  00D0               	movwf	??_scale+3
  7656  0FC7  084F               	movf	??_scale+2,w
  7657  0FC8  074F               	addwf	??_scale+2,w
  7658  0FC9  074F               	addwf	??_scale+2,w
  7659  0FCA  0008               	return
  7660  0FCB                     PL18:	
  7661  0FCB  00A6               	movwf	?___awdiv
  7662  0FCC  01A7               	clrf	?___awdiv+1
  7663  0FCD  0854               	movf	scale@scl,w
  7664  0FCE  00A2               	movwf	?___awmod+2
  7665  0FCF  01A3               	clrf	?___awmod+3
  7666  0FD0  1BA2               	btfsc	?___awmod+2,7
  7667  0FD1  03A3               	decf	?___awmod+3,f
  7668  0FD2  3064               	movlw	100
  7669  0FD3  00A0               	movwf	?___awmod
  7670  0FD4  01A1               	clrf	?___awmod+1
  7671  0FD5  0008               	return
  7672  0FD6                     PL21:	
  7673  0FD6  07C5               	addwf	___ftmul@f3_as_product,f
  7674  0FD7  083F               	movf	___ftmul@f2+1,w
  7675  0FD8  1103               	clrz
  7676  0FD9  1803               	skipnc
  7677  0FDA  0A3F               	incf	___ftmul@f2+1,w
  7678  0FDB  1D03               	btfss	3,2
  7679  0FDC  07C6               	addwf	___ftmul@f3_as_product+1,f
  7680  0FDD  0840               	movf	___ftmul@f2+2,w
  7681  0FDE  1103               	clrz
  7682  0FDF  0008               	return
  7683  0FE0                     PL25:	
  7684  0FE0  00BD               	movwf	?___ftmul+2
  7685  0FE1  3064               	movlw	100
  7686  0FE2  00A6               	movwf	?___awdiv
  7687  0FE3  01A7               	clrf	?___awdiv+1
  7688  0FE4  0854               	movf	scale@scl,w
  7689  0FE5  00A8               	movwf	?___awdiv+2
  7690  0FE6  01A9               	clrf	?___awdiv+3
  7691  0FE7  0008               	return
  7692  0FE8                     PL27:	
  7693  0FE8  00BD               	movwf	?___ftmul+2
  7694  0FE9  300A               	movlw	10
  7695  0FEA  00A6               	movwf	?___awdiv
  7696  0FEB  01A7               	clrf	?___awdiv+1
  7697  0FEC  0854               	movf	scale@scl,w
  7698  0FED  00A8               	movwf	?___awdiv+2
  7699  0FEE  01A9               	clrf	?___awdiv+3
  7700  0FEF  0008               	return
  7701  0FF0                     PL28:	
  7702  0FF0  0826               	movf	?___awdiv,w
  7703  0FF1  00CD               	movwf	??_scale
  7704  0FF2  0827               	movf	?___awdiv+1,w
  7705  0FF3  00CE               	movwf	??_scale+1
  7706  0FF4  084D               	movf	??_scale,w
  7707  0FF5  074D               	addwf	??_scale,w
  7708  0FF6  074D               	addwf	??_scale,w
  7709  0FF7  0008               	return
  7710  0FF8                     PL29:	
  7711  0FF8  00BD               	movwf	?___ftmul+2
  7712  0FF9  0851               	movf	_scale$4157,w
  7713  0FFA  00BE               	movwf	?___ftmul+3
  7714  0FFB  0852               	movf	_scale$4157+1,w
  7715  0FFC  00BF               	movwf	?___ftmul+4
  7716  0FFD  0853               	movf	_scale$4157+2,w
  7717  0FFE  00C0               	movwf	?___ftmul+5
  7718  0FFF  0008               	return
  7719                           
  7720                           	psect	text722
  7721  131C                     __ptext722:	
  7722 ;; =============== function ___bmul ends ============
  7723                           
  7724                           
  7725 ;; *************** function __div_to_l_ *****************
  7726 ;; Defined at:
  7727 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;  f1              3    0[BANK0 ] unsigned char 
  7730 ;;  f2              3    3[BANK0 ] unsigned char 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  quot            4   14[BANK0 ] unsigned long 
  7733 ;;  exp1            1   19[BANK0 ] unsigned char 
  7734 ;;  cntr            1   18[BANK0 ] unsigned char 
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  4    0[BANK0 ] unsigned long 
  7737 ;; Registers used:
  7738 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 60/0
  7742 ;;		Unchanged: FFE9F/0
  7743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7744 ;;      Params:         0       6       0       0       0
  7745 ;;      Locals:         0       6       0       0       0
  7746 ;;      Temps:          0       8       0       0       0
  7747 ;;      Totals:         0      20       0       0       0
  7748 ;;Total ram usage:       20 bytes
  7749 ;; Hardware stack levels used:    1
  7750 ;; Hardware stack levels required when called:    2
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_printf
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757  131C                     __div_to_l_:	
  7758                           
  7759                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  7760  131C  3020               	movlw	low __div_to_l_@f1
  7761  131D  0084               	movwf	4
  7762  131E  1383               	bcf	3,7	;select IRP bank0
  7763  131F  0800               	movf	0,w
  7764  1320  1283               	bcf	3,5	;RP0=0, select bank0
  7765  1321  1303               	bcf	3,6	;RP1=0, select bank0
  7766  1322  00A6               	movwf	??__div_to_l_
  7767  1323  0A84               	incf	4,f
  7768  1324  0800               	movf	0,w
  7769  1325  00A7               	movwf	??__div_to_l_+1
  7770  1326  0A84               	incf	4,f
  7771  1327  0800               	movf	0,w
  7772  1328  00A8               	movwf	??__div_to_l_+2
  7773  1329  0A84               	incf	4,f
  7774  132A  0800               	movf	0,w
  7775  132B  00A9               	movwf	??__div_to_l_+3
  7776  132C  1003               	clrc
  7777  132D  0D28               	rlf	??__div_to_l_+2,w
  7778  132E  0D29               	rlf	??__div_to_l_+3,w
  7779  132F  00B3               	movwf	__div_to_l_@exp1
  7780  1330  08B3               	movf	__div_to_l_@exp1,f
  7781  1331  1D03               	skipz
  7782  1332  2B38               	goto	l6686
  7783  1333                     l6684:	
  7784  1333  01A0               	clrf	?__div_to_l_
  7785  1334  01A1               	clrf	?__div_to_l_+1
  7786  1335  01A2               	clrf	?__div_to_l_+2
  7787  1336  01A3               	clrf	?__div_to_l_+3
  7788  1337  0008               	return
  7789  1338                     l6686:	
  7790  1338  3023               	movlw	low __div_to_l_@f2
  7791  1339  23DB  160A  118A   	fcall	PL3	;call to abstracted procedure
  7792  133C  1003               	clrc
  7793  133D  0D28               	rlf	??__div_to_l_+2,w
  7794  133E  0D29               	rlf	??__div_to_l_+3,w
  7795  133F  00B2               	movwf	__div_to_l_@cntr
  7796  1340  08B2               	movf	__div_to_l_@cntr,f
  7797  1341  1903               	btfsc	3,2
  7798  1342  2B33               	goto	l6684
  7799  1343  3020               	movlw	low __div_to_l_@f1
  7800  1344  0084               	movwf	4
  7801  1345  3080               	movlw	128
  7802  1346  0A84               	incf	4,f
  7803  1347  0A84               	incf	4,f
  7804  1348  0480               	iorwf	0,f
  7805  1349  3020               	movlw	low __div_to_l_@f1
  7806  134A  0A84               	incf	4,f
  7807  134B  0084               	movwf	4
  7808  134C  3023               	movlw	low __div_to_l_@f2
  7809  134D  0A84               	incf	4,f
  7810  134E  0A84               	incf	4,f
  7811  134F  0A84               	incf	4,f
  7812  1350  0180               	clrf	0
  7813  1351  0084               	movwf	4
  7814  1352  3080               	movlw	128
  7815  1353  0A84               	incf	4,f
  7816  1354  0A84               	incf	4,f
  7817  1355  0480               	iorwf	0,f
  7818  1356  3023               	movlw	low __div_to_l_@f2
  7819  1357  0A84               	incf	4,f
  7820  1358  0084               	movwf	4
  7821  1359  307F               	movlw	127
  7822  135A  0A84               	incf	4,f
  7823  135B  0A84               	incf	4,f
  7824  135C  0A84               	incf	4,f
  7825  135D  0180               	clrf	0
  7826  135E  01AE               	clrf	__div_to_l_@quot
  7827  135F  01AF               	clrf	__div_to_l_@quot+1
  7828  1360  01B0               	clrf	__div_to_l_@quot+2
  7829  1361  01B1               	clrf	__div_to_l_@quot+3
  7830  1362  02B3               	subwf	__div_to_l_@exp1,f
  7831  1363  30A0               	movlw	160
  7832  1364  0732               	addwf	__div_to_l_@cntr,w
  7833  1365  00A6               	movwf	??__div_to_l_
  7834  1366  02B3               	subwf	__div_to_l_@exp1,f
  7835  1367  3020               	movlw	32
  7836  1368  00B2               	movwf	__div_to_l_@cntr
  7837  1369                     l6700:	
  7838  1369  3023               	movlw	low __div_to_l_@f2
  7839  136A  1003               	clrc
  7840  136B  0DAE               	rlf	__div_to_l_@quot,f
  7841  136C  0DAF               	rlf	__div_to_l_@quot+1,f
  7842  136D  0DB0               	rlf	__div_to_l_@quot+2,f
  7843  136E  0DB1               	rlf	__div_to_l_@quot+3,f
  7844  136F  23DB  160A  118A   	fcall	PL3	;call to abstracted procedure
  7845  1372  3020               	movlw	low __div_to_l_@f1
  7846  1373  0084               	movwf	4
  7847  1374  0800               	movf	0,w
  7848  1375  00AA               	movwf	??__div_to_l_+4
  7849  1376  0A84               	incf	4,f
  7850  1377  0800               	movf	0,w
  7851  1378  00AB               	movwf	??__div_to_l_+5
  7852  1379  0A84               	incf	4,f
  7853  137A  0800               	movf	0,w
  7854  137B  00AC               	movwf	??__div_to_l_+6
  7855  137C  0A84               	incf	4,f
  7856  137D  0800               	movf	0,w
  7857  137E  00AD               	movwf	??__div_to_l_+7
  7858  137F  0829               	movf	??__div_to_l_+3,w
  7859  1380  022D               	subwf	??__div_to_l_+7,w
  7860  1381  1D03               	skipz
  7861  1382  2B8D               	goto	u2885
  7862  1383  0828               	movf	??__div_to_l_+2,w
  7863  1384  022C               	subwf	??__div_to_l_+6,w
  7864  1385  1D03               	skipz
  7865  1386  2B8D               	goto	u2885
  7866  1387  0827               	movf	??__div_to_l_+1,w
  7867  1388  022B               	subwf	??__div_to_l_+5,w
  7868  1389  1D03               	skipz
  7869  138A  2B8D               	goto	u2885
  7870  138B  0826               	movf	??__div_to_l_,w
  7871  138C  022A               	subwf	??__div_to_l_+4,w
  7872  138D                     u2885:	
  7873  138D  1C03               	skipc
  7874  138E  2BA9               	goto	l3650
  7875  138F  3023               	movlw	low __div_to_l_@f2
  7876  1390  23DB  160A  118A   	fcall	PL3	;call to abstracted procedure
  7877  1393  3020               	movlw	low __div_to_l_@f1
  7878  1394  0084               	movwf	4
  7879  1395  0826               	movf	??__div_to_l_,w
  7880  1396  0280               	subwf	0,f
  7881  1397  0A84               	incf	4,f
  7882  1398  0827               	movf	??__div_to_l_+1,w
  7883  1399  1C03               	skipc
  7884  139A  0F27               	incfsz	??__div_to_l_+1,w
  7885  139B  0280               	subwf	0,f
  7886  139C  0A84               	incf	4,f
  7887  139D  0828               	movf	??__div_to_l_+2,w
  7888  139E  1C03               	skipc
  7889  139F  0F28               	incfsz	??__div_to_l_+2,w
  7890  13A0  0280               	subwf	0,f
  7891  13A1  0A84               	incf	4,f
  7892  13A2  0829               	movf	??__div_to_l_+3,w
  7893  13A3  1C03               	skipc
  7894  13A4  0A29               	incf	??__div_to_l_+3,w
  7895  13A5  0280               	subwf	0,f
  7896  13A6  3003               	movlw	3
  7897  13A7  0284               	subwf	4,f
  7898  13A8  142E               	bsf	__div_to_l_@quot,0
  7899  13A9                     l3650:	
  7900  13A9  3020               	movlw	low __div_to_l_@f1
  7901  13AA  0084               	movwf	4
  7902  13AB  1003               	clrc
  7903  13AC  0D80               	rlf	0,f
  7904  13AD  0A84               	incf	4,f
  7905  13AE  0D80               	rlf	0,f
  7906  13AF  0A84               	incf	4,f
  7907  13B0  0D80               	rlf	0,f
  7908  13B1  0A84               	incf	4,f
  7909  13B2  0D80               	rlf	0,f
  7910  13B3  0BB2               	decfsz	__div_to_l_@cntr,f
  7911  13B4  2B69               	goto	l6700
  7912  13B5  1FB3               	btfss	__div_to_l_@exp1,7
  7913  13B6  2BC4               	goto	l6718
  7914  13B7  0833               	movf	__div_to_l_@exp1,w
  7915  13B8  3A80               	xorlw	128
  7916  13B9  3E9F               	addlw	159
  7917  13BA  1C03               	btfss	3,0
  7918  13BB  2B33               	goto	l6684
  7919  13BC                     l6714:	
  7920  13BC  1003               	clrc
  7921  13BD  0CB1               	rrf	__div_to_l_@quot+3,f
  7922  13BE  0CB0               	rrf	__div_to_l_@quot+2,f
  7923  13BF  0CAF               	rrf	__div_to_l_@quot+1,f
  7924  13C0  0CAE               	rrf	__div_to_l_@quot,f
  7925  13C1  0FB3               	incfsz	__div_to_l_@exp1,f
  7926  13C2  2BBC               	goto	l6714
  7927  13C3  2BD2               	goto	l6724
  7928  13C4                     l6718:	
  7929  13C4  3020               	movlw	32
  7930  13C5  0233               	subwf	__div_to_l_@exp1,w
  7931  13C6  1803               	btfsc	3,0
  7932  13C7  2B33               	goto	l6684
  7933  13C8                     l3658:	
  7934  13C8  08B3               	movf	__div_to_l_@exp1,f
  7935  13C9  1903               	btfsc	3,2
  7936  13CA  2BD2               	goto	l6724
  7937  13CB  1003               	clrc
  7938  13CC  0DAE               	rlf	__div_to_l_@quot,f
  7939  13CD  0DAF               	rlf	__div_to_l_@quot+1,f
  7940  13CE  0DB0               	rlf	__div_to_l_@quot+2,f
  7941  13CF  0DB1               	rlf	__div_to_l_@quot+3,f
  7942  13D0  03B3               	decf	__div_to_l_@exp1,f
  7943  13D1  2BC8               	goto	l3658
  7944  13D2                     l6724:	
  7945  13D2  0831               	movf	__div_to_l_@quot+3,w
  7946  13D3  00A3               	movwf	?__div_to_l_+3
  7947  13D4  0830               	movf	__div_to_l_@quot+2,w
  7948  13D5  00A2               	movwf	?__div_to_l_+2
  7949  13D6  082F               	movf	__div_to_l_@quot+1,w
  7950  13D7  00A1               	movwf	?__div_to_l_+1
  7951  13D8  082E               	movf	__div_to_l_@quot,w
  7952  13D9  00A0               	movwf	?__div_to_l_
  7953  13DA  0008               	return
  7954  13DB                     __end_of__div_to_l_:	
  7955  13DB                     PL3:	
  7956  13DB  0084               	movwf	4
  7957  13DC  0800               	movf	0,w
  7958  13DD  00A6               	movwf	??__div_to_l_
  7959  13DE  0A84               	incf	4,f
  7960  13DF  0800               	movf	0,w
  7961  13E0  00A7               	movwf	??__div_to_l_+1
  7962  13E1  0A84               	incf	4,f
  7963  13E2  0800               	movf	0,w
  7964  13E3  00A8               	movwf	??__div_to_l_+2
  7965  13E4  0A84               	incf	4,f
  7966  13E5  0800               	movf	0,w
  7967  13E6  00A9               	movwf	??__div_to_l_+3
  7968  13E7  0008               	return
  7969                           
  7970                           	psect	text726
  7971  1693                     __ptext726:	
  7972 ;; =============== function _isprint ends ============
  7973                           
  7974                           
  7975 ;; *************** function _button *****************
  7976 ;; Defined at:
  7977 ;;		line 146 in file "D:\TTVXL\Project TTVXL\BT02week11ttvxl\BT02week11ttvxl.c"
  7978 ;; Parameters:    Size  Location     Type
  7979 ;;		None
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;		None
  7982 ;; Return value:  Size  Location     Type
  7983 ;;		None               void
  7984 ;; Registers used:
  7985 ;;		wreg, status,2, status,0, pclath, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7991 ;;      Params:         0       0       0       0       0
  7992 ;;      Locals:         0       0       0       0       0
  7993 ;;      Temps:          5       0       0       0       0
  7994 ;;      Totals:         5       0       0       0       0
  7995 ;;Total ram usage:        5 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:    1
  7998 ;; This function calls:
  7999 ;;		i1_lcd_put_byte
  8000 ;;		i1_lcd_busy
  8001 ;; This function is called by:
  8002 ;;		Interrupt level 1
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005  1693                     _button:	
  8006                           
  8007                           ;BT02week11ttvxl.c: 147: RBIF = 0;
  8008  1693  100B               	bcf	11,0
  8009  1694  27FD               	call	PL41	;select bank 0
  8010                           
  8011                           ;BT02week11ttvxl.c: 148: if (RB0 == 1){
  8012  1695  1C06               	btfss	6,0
  8013  1696  2EB5               	goto	i1l6562
  8014  1697                     i1l1110:	
  8015  1697  1806               	btfsc	6,0
  8016  1698  2E97               	goto	i1l1110
  8017                           
  8018                           ;BT02week11ttvxl.c: 150: }
  8019                           ;BT02week11ttvxl.c: 151: if (RB0 == 0){
  8020  1699  1806               	btfsc	6,0
  8021  169A  2EB5               	goto	i1l6562
  8022  169B  3000               	movlw	0
  8023                           
  8024                           ;BT02week11ttvxl.c: 152: S1_state = 1;
  8025  169C  01EE               	clrf	_S1_state
  8026  169D  0AEE               	incf	_S1_state,f
  8027  169E  01F0               	clrf	?i1_lcd_put_byte
  8028  169F  0AF0               	incf	?i1_lcd_put_byte,f
  8029  16A0  2767  160A  118A   	fcall	i1_lcd_put_byte
  8030  16A3                     i1l6558:	
  8031                           ;BT02week11ttvxl.c: 154: while(lcd_busy());
  8032                           
  8033  16A3  2740  160A  118A   	fcall	i1_lcd_busy
  8034  16A6  3800               	iorlw	0
  8035  16A7  1D03               	skipz
  8036  16A8  2EA3               	goto	i1l6558
  8037                           
  8038                           ;BT02week11ttvxl.c: 155: _delay((unsigned long)((60)*(20000000/4000.0)));
  8039  16A9  3002               	movlw	2
  8040  16AA  00F7               	movwf	??_button+2
  8041  16AB  3086               	movlw	134
  8042  16AC  00F6               	movwf	??_button+1
  8043  16AD  3099               	movlw	153
  8044  16AE  00F5               	movwf	??_button
  8045  16AF                     u515_27:	
  8046  16AF  0BF5               	decfsz	??_button,f
  8047  16B0  2EAF               	goto	u515_27
  8048  16B1  0BF6               	decfsz	??_button+1,f
  8049  16B2  2EAF               	goto	u515_27
  8050  16B3  0BF7               	decfsz	??_button+2,f
  8051  16B4  2EAF               	goto	u515_27
  8052  16B5                     i1l6562:	
  8053  16B5  27FD               	call	PL41	;select bank 0
  8054                           
  8055                           ;BT02week11ttvxl.c: 156: }
  8056                           ;BT02week11ttvxl.c: 157: }
  8057                           ;BT02week11ttvxl.c: 158: if (RB1 == 1){
  8058  16B6  1C86               	btfss	6,1
  8059  16B7  2ED6               	goto	i1l6574
  8060  16B8                     i1l1118:	
  8061  16B8  1886               	btfsc	6,1
  8062  16B9  2EB8               	goto	i1l1118
  8063                           
  8064                           ;BT02week11ttvxl.c: 160: }
  8065                           ;BT02week11ttvxl.c: 161: if (RB1 == 0){
  8066  16BA  1886               	btfsc	6,1
  8067  16BB  2ED6               	goto	i1l6574
  8068                           
  8069                           ;BT02week11ttvxl.c: 162: S1_state = 2;
  8070  16BC  3002               	movlw	2
  8071  16BD  00EE               	movwf	_S1_state
  8072  16BE  3000               	movlw	0
  8073                           
  8074                           ;BT02week11ttvxl.c: 163: lcd_put_byte(0,0x01);
  8075  16BF  01F0               	clrf	?i1_lcd_put_byte
  8076  16C0  0AF0               	incf	?i1_lcd_put_byte,f
  8077  16C1  2767  160A  118A   	fcall	i1_lcd_put_byte
  8078  16C4                     i1l6570:	
  8079                           ;BT02week11ttvxl.c: 164: while(lcd_busy());
  8080                           
  8081  16C4  2740  160A  118A   	fcall	i1_lcd_busy
  8082  16C7  3800               	iorlw	0
  8083  16C8  1D03               	skipz
  8084  16C9  2EC4               	goto	i1l6570
  8085                           
  8086                           ;BT02week11ttvxl.c: 165: _delay((unsigned long)((60)*(20000000/4000.0)));
  8087  16CA  3002               	movlw	2
  8088  16CB  00F7               	movwf	??_button+2
  8089  16CC  3086               	movlw	134
  8090  16CD  00F6               	movwf	??_button+1
  8091  16CE  3099               	movlw	153
  8092  16CF  00F5               	movwf	??_button
  8093  16D0                     u516_27:	
  8094  16D0  0BF5               	decfsz	??_button,f
  8095  16D1  2ED0               	goto	u516_27
  8096  16D2  0BF6               	decfsz	??_button+1,f
  8097  16D3  2ED0               	goto	u516_27
  8098  16D4  0BF7               	decfsz	??_button+2,f
  8099  16D5  2ED0               	goto	u516_27
  8100  16D6                     i1l6574:	
  8101  16D6  27FD               	call	PL41	;select bank 0
  8102                           
  8103                           ;BT02week11ttvxl.c: 166: }
  8104                           ;BT02week11ttvxl.c: 167: }
  8105                           ;BT02week11ttvxl.c: 168: if (RB2 == 1){
  8106  16D7  1D06               	btfss	6,2
  8107  16D8  2EF7               	goto	i1l6586
  8108  16D9                     i1l1126:	
  8109  16D9  1906               	btfsc	6,2
  8110  16DA  2ED9               	goto	i1l1126
  8111                           
  8112                           ;BT02week11ttvxl.c: 170: }
  8113                           ;BT02week11ttvxl.c: 171: if (RB2 == 0){
  8114  16DB  1906               	btfsc	6,2
  8115  16DC  2EF7               	goto	i1l6586
  8116                           
  8117                           ;BT02week11ttvxl.c: 172: S1_state = 3;
  8118  16DD  3003               	movlw	3
  8119  16DE  00EE               	movwf	_S1_state
  8120  16DF  3000               	movlw	0
  8121                           
  8122                           ;BT02week11ttvxl.c: 173: lcd_put_byte(0,0x01);
  8123  16E0  01F0               	clrf	?i1_lcd_put_byte
  8124  16E1  0AF0               	incf	?i1_lcd_put_byte,f
  8125  16E2  2767  160A  118A   	fcall	i1_lcd_put_byte
  8126  16E5                     i1l6582:	
  8127                           ;BT02week11ttvxl.c: 174: while(lcd_busy());
  8128                           
  8129  16E5  2740  160A  118A   	fcall	i1_lcd_busy
  8130  16E8  3800               	iorlw	0
  8131  16E9  1D03               	skipz
  8132  16EA  2EE5               	goto	i1l6582
  8133                           
  8134                           ;BT02week11ttvxl.c: 175: _delay((unsigned long)((60)*(20000000/4000.0)));
  8135  16EB  3002               	movlw	2
  8136  16EC  00F7               	movwf	??_button+2
  8137  16ED  3086               	movlw	134
  8138  16EE  00F6               	movwf	??_button+1
  8139  16EF  3099               	movlw	153
  8140  16F0  00F5               	movwf	??_button
  8141  16F1                     u517_27:	
  8142  16F1  0BF5               	decfsz	??_button,f
  8143  16F2  2EF1               	goto	u517_27
  8144  16F3  0BF6               	decfsz	??_button+1,f
  8145  16F4  2EF1               	goto	u517_27
  8146  16F5  0BF7               	decfsz	??_button+2,f
  8147  16F6  2EF1               	goto	u517_27
  8148  16F7                     i1l6586:	
  8149  16F7  27FD               	call	PL41	;select bank 0
  8150                           
  8151                           ;BT02week11ttvxl.c: 176: }
  8152                           ;BT02week11ttvxl.c: 177: }
  8153                           ;BT02week11ttvxl.c: 178: if (RB3 == 1){
  8154  16F8  1D86               	btfss	6,3
  8155  16F9  2F18               	goto	i1l6598
  8156  16FA                     i1l1134:	
  8157  16FA  1986               	btfsc	6,3
  8158  16FB  2EFA               	goto	i1l1134
  8159                           
  8160                           ;BT02week11ttvxl.c: 180: }
  8161                           ;BT02week11ttvxl.c: 181: if (RB3 == 0){
  8162  16FC  1986               	btfsc	6,3
  8163  16FD  2F18               	goto	i1l6598
  8164                           
  8165                           ;BT02week11ttvxl.c: 182: S1_state = 4;
  8166  16FE  3004               	movlw	4
  8167  16FF  00EE               	movwf	_S1_state
  8168  1700  3000               	movlw	0
  8169                           
  8170                           ;BT02week11ttvxl.c: 183: lcd_put_byte(0,0x01);
  8171  1701  01F0               	clrf	?i1_lcd_put_byte
  8172  1702  0AF0               	incf	?i1_lcd_put_byte,f
  8173  1703  2767  160A  118A   	fcall	i1_lcd_put_byte
  8174  1706                     i1l6594:	
  8175                           ;BT02week11ttvxl.c: 184: while(lcd_busy());
  8176                           
  8177  1706  2740  160A  118A   	fcall	i1_lcd_busy
  8178  1709  3800               	iorlw	0
  8179  170A  1D03               	skipz
  8180  170B  2F06               	goto	i1l6594
  8181                           
  8182                           ;BT02week11ttvxl.c: 185: _delay((unsigned long)((60)*(20000000/4000.0)));
  8183  170C  3002               	movlw	2
  8184  170D  00F7               	movwf	??_button+2
  8185  170E  3086               	movlw	134
  8186  170F  00F6               	movwf	??_button+1
  8187  1710  3099               	movlw	153
  8188  1711  00F5               	movwf	??_button
  8189  1712                     u518_27:	
  8190  1712  0BF5               	decfsz	??_button,f
  8191  1713  2F12               	goto	u518_27
  8192  1714  0BF6               	decfsz	??_button+1,f
  8193  1715  2F12               	goto	u518_27
  8194  1716  0BF7               	decfsz	??_button+2,f
  8195  1717  2F12               	goto	u518_27
  8196  1718                     i1l6598:	
  8197  1718  27FD               	call	PL41	;select bank 0
  8198                           
  8199                           ;BT02week11ttvxl.c: 186: }
  8200                           ;BT02week11ttvxl.c: 187: }
  8201                           ;BT02week11ttvxl.c: 188: if (RB4 == 1){
  8202  1719  1E06               	btfss	6,4
  8203  171A  2F39               	goto	i1l1149
  8204  171B                     i1l1142:	
  8205  171B  1A06               	btfsc	6,4
  8206  171C  2F1B               	goto	i1l1142
  8207                           
  8208                           ;BT02week11ttvxl.c: 190: }
  8209                           ;BT02week11ttvxl.c: 191: if (RB4 == 0){
  8210  171D  1A06               	btfsc	6,4
  8211  171E  2F39               	goto	i1l1149
  8212                           
  8213                           ;BT02week11ttvxl.c: 192: S1_state = 5;
  8214  171F  3005               	movlw	5
  8215  1720  00EE               	movwf	_S1_state
  8216  1721  3000               	movlw	0
  8217                           
  8218                           ;BT02week11ttvxl.c: 193: lcd_put_byte(0,0x01);
  8219  1722  01F0               	clrf	?i1_lcd_put_byte
  8220  1723  0AF0               	incf	?i1_lcd_put_byte,f
  8221  1724  2767  160A  118A   	fcall	i1_lcd_put_byte
  8222  1727                     i1l6606:	
  8223                           ;BT02week11ttvxl.c: 194: while(lcd_busy());
  8224                           
  8225  1727  2740  160A  118A   	fcall	i1_lcd_busy
  8226  172A  3800               	iorlw	0
  8227  172B  1D03               	skipz
  8228  172C  2F27               	goto	i1l6606
  8229                           
  8230                           ;BT02week11ttvxl.c: 195: _delay((unsigned long)((60)*(20000000/4000.0)));
  8231  172D  3002               	movlw	2
  8232  172E  00F7               	movwf	??_button+2
  8233  172F  3086               	movlw	134
  8234  1730  00F6               	movwf	??_button+1
  8235  1731  3099               	movlw	153
  8236  1732  00F5               	movwf	??_button
  8237  1733                     u519_27:	
  8238  1733  0BF5               	decfsz	??_button,f
  8239  1734  2F33               	goto	u519_27
  8240  1735  0BF6               	decfsz	??_button+1,f
  8241  1736  2F33               	goto	u519_27
  8242  1737  0BF7               	decfsz	??_button+2,f
  8243  1738  2F33               	goto	u519_27
  8244  1739                     i1l1149:	
  8245  1739  0879               	movf	??_button+4,w
  8246  173A  008A               	movwf	10
  8247  173B  0E78               	swapf	(??_button+3)^(0+-128),w
  8248  173C  0083               	movwf	3
  8249  173D  0EFE               	swapf	126,f
  8250  173E  0E7E               	swapf	126,w
  8251  173F  0009               	retfie
  8252  1740                     __end_of_button:	
  8253  1740                     __ptext728:	
  8254 ;; =============== function i1_lcd_put_byte ends ============
  8255                           
  8256                           
  8257 ;; *************** function i1_lcd_busy *****************
  8258 ;; Defined at:
  8259 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  lcd_busy        1    1[COMMON] unsigned char 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      unsigned char 
  8266 ;; Registers used:
  8267 ;;		wreg
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 60/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8273 ;;      Params:         0       0       0       0       0
  8274 ;;      Locals:         1       0       0       0       0
  8275 ;;      Temps:          1       0       0       0       0
  8276 ;;      Totals:         2       0       0       0       0
  8277 ;;Total ram usage:        2 bytes
  8278 ;; Hardware stack levels used:    1
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_button
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285  1740                     i1_lcd_busy:	
  8286                           
  8287                           ;lcd(16).c: 48: unsigned char busy;
  8288                           ;lcd(16).c: 50: TRISD4 = 1;
  8289                           
  8290                           ; Regs used in i1_lcd_busy: [wreg]
  8291  1740  1683               	bsf	3,5	;RP0=1, select bank1
  8292  1741  1303               	bcf	3,6	;RP1=0, select bank1
  8293  1742  1608               	bsf	8,4
  8294                           
  8295                           ;lcd(16).c: 51: TRISD5 = 1;
  8296  1743  1688               	bsf	8,5
  8297                           
  8298                           ;lcd(16).c: 52: TRISD6 = 1;
  8299  1744  1708               	bsf	8,6
  8300                           
  8301                           ;lcd(16).c: 53: TRISD7 = 1;
  8302  1745  1788               	bsf	8,7
  8303                           
  8304                           ;lcd(16).c: 55: RD2 = 1;
  8305  1746  1283               	bcf	3,5	;RP0=0, select bank0
  8306  1747  3021               	movlw	33
  8307  1748  1508               	bsf	8,2
  8308                           
  8309                           ;lcd(16).c: 56: RD1 = 0;
  8310  1749  1088               	bcf	8,1
  8311                           
  8312                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8313  174A  00F0               	movwf	??i1_lcd_busy
  8314  174B                     u526_27:	
  8315  174B  0BF0               	decfsz	??i1_lcd_busy,f
  8316  174C  2F4B               	goto	u526_27
  8317  174D  27FD               	call	PL41	;select bank 0
  8318                           
  8319                           ;lcd(16).c: 58: RD3 = 1;
  8320  174E  3021               	movlw	33
  8321  174F  1588               	bsf	8,3
  8322                           
  8323                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8324  1750  00F0               	movwf	??i1_lcd_busy
  8325  1751                     u527_27:	
  8326  1751  0BF0               	decfsz	??i1_lcd_busy,f
  8327  1752  2F51               	goto	u527_27
  8328                           
  8329                           ;lcd(16).c: 61: busy = RD7;
  8330  1753  3000               	movlw	0
  8331  1754  27FD               	call	PL41	;select bank 0
  8332  1755  1B88               	btfsc	8,7
  8333  1756  3001               	movlw	1
  8334  1757  00F1               	movwf	i1lcd_busy@busy
  8335  1758  3021               	movlw	33
  8336                           
  8337                           ;lcd(16).c: 63: RD3 = 0;
  8338  1759  1188               	bcf	8,3
  8339                           
  8340                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8341  175A  00F0               	movwf	??i1_lcd_busy
  8342  175B                     u528_27:	
  8343  175B  0BF0               	decfsz	??i1_lcd_busy,f
  8344  175C  2F5B               	goto	u528_27
  8345  175D  27FD               	call	PL41	;select bank 0
  8346                           
  8347                           ;lcd(16).c: 65: RD3 = 1;
  8348  175E  3021               	movlw	33
  8349  175F  1588               	bsf	8,3
  8350                           
  8351                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8352  1760  00F0               	movwf	??i1_lcd_busy
  8353  1761                     u529_27:	
  8354  1761  0BF0               	decfsz	??i1_lcd_busy,f
  8355  1762  2F61               	goto	u529_27
  8356  1763  27FD               	call	PL41	;select bank 0
  8357                           
  8358                           ;lcd(16).c: 67: RD3 = 0;
  8359  1764  1188               	bcf	8,3
  8360                           
  8361                           ;lcd(16).c: 70: return busy;
  8362  1765  0871               	movf	i1lcd_busy@busy,w
  8363  1766  0008               	return
  8364  1767                     __end_ofi1_lcd_busy:	
  8365  1767                     __ptext727:	
  8366 ;; =============== function _button ends ============
  8367                           
  8368                           
  8369 ;; *************** function i1_lcd_put_byte *****************
  8370 ;; Defined at:
  8371 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  lcd_put_byte    1    wreg     unsigned char 
  8374 ;;  lcd_put_byte    1    0[COMMON] unsigned char 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  lcd_put_byte    1    3[COMMON] unsigned char 
  8377 ;;  lcd_put_byte    1    4[COMMON] struct _BYTE_VAL
  8378 ;; Return value:  Size  Location     Type
  8379 ;;		None               void
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0
  8382 ;; Tracked objects:
  8383 ;;		On entry : 60/0
  8384 ;;		On exit  : 60/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8387 ;;      Params:         1       0       0       0       0
  8388 ;;      Locals:         2       0       0       0       0
  8389 ;;      Temps:          2       0       0       0       0
  8390 ;;      Totals:         5       0       0       0       0
  8391 ;;Total ram usage:        5 bytes
  8392 ;; Hardware stack levels used:    1
  8393 ;; This function calls:
  8394 ;;		Nothing
  8395 ;; This function is called by:
  8396 ;;		_button
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399  1767                     i1_lcd_put_byte:	
  8400                           
  8401                           ; Regs used in i1_lcd_put_byte: [wreg+status,2+status,0]
  8402                           ;i1lcd_put_byte@rs stored from wreg
  8403  1767  00F3               	movwf	i1lcd_put_byte@rs
  8404                           
  8405                           ;lcd(16).c: 107: BYTE_VAL temp;
  8406                           ;lcd(16).c: 109: TRISD4 = 0;
  8407  1768  1683               	bsf	3,5	;RP0=1, select bank1
  8408  1769  1208               	bcf	8,4
  8409                           
  8410                           ;lcd(16).c: 110: TRISD5 = 0;
  8411  176A  1288               	bcf	8,5
  8412                           
  8413                           ;lcd(16).c: 111: TRISD6 = 0;
  8414  176B  1308               	bcf	8,6
  8415                           
  8416                           ;lcd(16).c: 112: TRISD7 = 0;
  8417  176C  1388               	bcf	8,7
  8418                           
  8419                           ;lcd(16).c: 114: RD1 = 0;
  8420  176D  1283               	bcf	3,5	;RP0=0, select bank0
  8421  176E  1088               	bcf	8,1
  8422                           
  8423                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  8424  176F  0873               	movf	i1lcd_put_byte@rs,w
  8425  1770  1D03               	skipz
  8426  1771  1488               	bsf	8,1
  8427                           
  8428                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8429  1772  3021               	movlw	33
  8430  1773  00F1               	movwf	??i1_lcd_put_byte
  8431  1774                     u520_27:	
  8432  1774  0BF1               	decfsz	??i1_lcd_put_byte,f
  8433  1775  2F74               	goto	u520_27
  8434  1776  27FD               	call	PL41	;select bank 0
  8435                           
  8436                           ;lcd(16).c: 118: RD2 = 0;
  8437  1777  3021               	movlw	33
  8438  1778  1108               	bcf	8,2
  8439                           
  8440                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8441  1779  00F1               	movwf	??i1_lcd_put_byte
  8442  177A                     u521_27:	
  8443  177A  0BF1               	decfsz	??i1_lcd_put_byte,f
  8444  177B  2F7A               	goto	u521_27
  8445  177C  27FD               	call	PL41	;select bank 0
  8446                           
  8447                           ;lcd(16).c: 120: RD3 = 0;
  8448  177D  1188               	bcf	8,3
  8449                           
  8450                           ;lcd(16).c: 122: temp.Val = b;
  8451  177E  0870               	movf	i1lcd_put_byte@b,w
  8452  177F  00F4               	movwf	i1lcd_put_byte@temp
  8453                           
  8454                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  8455  1780  0E74               	swapf	i1lcd_put_byte@temp,w
  8456  1781  3901               	andlw	1
  8457  1782  00F1               	movwf	??i1_lcd_put_byte
  8458  1783  0C71               	rrf	??i1_lcd_put_byte,w
  8459  1784  1C03               	btfss	3,0
  8460  1785  2F89               	goto	u348_20
  8461  1786  27FD               	call	PL41	;select bank 0
  8462  1787  1608               	bsf	8,4
  8463  1788  2F8B               	goto	i1l7050
  8464  1789                     u348_20:	
  8465  1789  27FD               	call	PL41	;select bank 0
  8466  178A  1208               	bcf	8,4
  8467  178B                     i1l7050:	
  8468                           
  8469                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  8470  178B  0E74               	swapf	i1lcd_put_byte@temp,w
  8471  178C  00F1               	movwf	??i1_lcd_put_byte
  8472  178D  0C71               	rrf	??i1_lcd_put_byte,w
  8473  178E  3901               	andlw	1
  8474  178F  00F2               	movwf	??i1_lcd_put_byte+1
  8475  1790  0C72               	rrf	??i1_lcd_put_byte+1,w
  8476  1791  1C03               	btfss	3,0
  8477  1792  2F96               	goto	u350_20
  8478  1793  27FD               	call	PL41	;select bank 0
  8479  1794  1688               	bsf	8,5
  8480  1795  2F98               	goto	i1l7052
  8481  1796                     u350_20:	
  8482  1796  27FD               	call	PL41	;select bank 0
  8483  1797  1288               	bcf	8,5
  8484  1798                     i1l7052:	
  8485                           
  8486                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  8487  1798  0E74               	swapf	i1lcd_put_byte@temp,w
  8488  1799  27F6  160A  118A   	fcall	PL34	;call to abstracted procedure
  8489  179C  1C03               	btfss	3,0
  8490  179D  2FA1               	goto	u352_20
  8491  179E  27FD               	call	PL41	;select bank 0
  8492  179F  1708               	bsf	8,6
  8493  17A0  2FA3               	goto	i1l7054
  8494  17A1                     u352_20:	
  8495  17A1  27FD               	call	PL41	;select bank 0
  8496  17A2  1308               	bcf	8,6
  8497  17A3                     i1l7054:	
  8498                           
  8499                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  8500  17A3  0D74               	rlf	i1lcd_put_byte@temp,w
  8501  17A4  0D74               	rlf	i1lcd_put_byte@temp,w
  8502  17A5  3901               	andlw	1
  8503  17A6  00F1               	movwf	??i1_lcd_put_byte
  8504  17A7  0C71               	rrf	??i1_lcd_put_byte,w
  8505  17A8  1C03               	btfss	3,0
  8506  17A9  2FAD               	goto	u354_20
  8507  17AA  27FD               	call	PL41	;select bank 0
  8508  17AB  1788               	bsf	8,7
  8509  17AC  2FAF               	goto	u355_24
  8510  17AD                     u354_20:	
  8511  17AD  27FD               	call	PL41	;select bank 0
  8512  17AE  1388               	bcf	8,7
  8513  17AF                     u355_24:	
  8514                           
  8515                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8516  17AF  3021               	movlw	33
  8517  17B0  00F1               	movwf	??i1_lcd_put_byte
  8518  17B1                     u522_27:	
  8519  17B1  0BF1               	decfsz	??i1_lcd_put_byte,f
  8520  17B2  2FB1               	goto	u522_27
  8521  17B3  27FD               	call	PL41	;select bank 0
  8522                           
  8523                           ;lcd(16).c: 130: RD3 = 1;
  8524  17B4  3021               	movlw	33
  8525  17B5  1588               	bsf	8,3
  8526                           
  8527                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8528  17B6  00F1               	movwf	??i1_lcd_put_byte
  8529  17B7                     u523_27:	
  8530  17B7  0BF1               	decfsz	??i1_lcd_put_byte,f
  8531  17B8  2FB7               	goto	u523_27
  8532  17B9  27FD               	call	PL41	;select bank 0
  8533                           
  8534                           ;lcd(16).c: 132: RD3 = 0;
  8535  17BA  1188               	bcf	8,3
  8536                           
  8537                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  8538  17BB  0874               	movf	i1lcd_put_byte@temp,w
  8539  17BC  3901               	andlw	1
  8540  17BD  00F1               	movwf	??i1_lcd_put_byte
  8541  17BE  0C71               	rrf	??i1_lcd_put_byte,w
  8542  17BF  1C03               	btfss	3,0
  8543  17C0  2FC4               	goto	u356_20
  8544  17C1  27FD               	call	PL41	;select bank 0
  8545  17C2  1608               	bsf	8,4
  8546  17C3  2FC6               	goto	i1l7062
  8547  17C4                     u356_20:	
  8548  17C4  27FD               	call	PL41	;select bank 0
  8549  17C5  1208               	bcf	8,4
  8550  17C6                     i1l7062:	
  8551                           
  8552                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  8553  17C6  0C74               	rrf	i1lcd_put_byte@temp,w
  8554  17C7  3901               	andlw	1
  8555  17C8  00F1               	movwf	??i1_lcd_put_byte
  8556  17C9  0C71               	rrf	??i1_lcd_put_byte,w
  8557  17CA  1C03               	btfss	3,0
  8558  17CB  2FCF               	goto	u358_20
  8559  17CC  27FD               	call	PL41	;select bank 0
  8560  17CD  1688               	bsf	8,5
  8561  17CE  2FD1               	goto	i1l7064
  8562  17CF                     u358_20:	
  8563  17CF  27FD               	call	PL41	;select bank 0
  8564  17D0  1288               	bcf	8,5
  8565  17D1                     i1l7064:	
  8566                           
  8567                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  8568  17D1  0C74               	rrf	i1lcd_put_byte@temp,w
  8569  17D2  00F1               	movwf	??i1_lcd_put_byte
  8570  17D3  0C71               	rrf	??i1_lcd_put_byte,w
  8571  17D4  3901               	andlw	1
  8572  17D5  00F2               	movwf	??i1_lcd_put_byte+1
  8573  17D6  0C72               	rrf	??i1_lcd_put_byte+1,w
  8574  17D7  1C03               	btfss	3,0
  8575  17D8  2FDC               	goto	u360_20
  8576  17D9  27FD               	call	PL41	;select bank 0
  8577  17DA  1708               	bsf	8,6
  8578  17DB  2FDE               	goto	i1l7066
  8579  17DC                     u360_20:	
  8580  17DC  27FD               	call	PL41	;select bank 0
  8581  17DD  1308               	bcf	8,6
  8582  17DE                     i1l7066:	
  8583                           
  8584                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  8585  17DE  0C74               	rrf	i1lcd_put_byte@temp,w
  8586  17DF  27F6  160A  118A   	fcall	PL34	;call to abstracted procedure
  8587  17E2  1C03               	btfss	3,0
  8588  17E3  2FE7               	goto	u362_20
  8589  17E4  27FD               	call	PL41	;select bank 0
  8590  17E5  1788               	bsf	8,7
  8591  17E6  2FE9               	goto	u363_24
  8592  17E7                     u362_20:	
  8593  17E7  27FD               	call	PL41	;select bank 0
  8594  17E8  1388               	bcf	8,7
  8595  17E9                     u363_24:	
  8596                           
  8597                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8598  17E9  3021               	movlw	33
  8599  17EA  00F1               	movwf	??i1_lcd_put_byte
  8600  17EB                     u524_27:	
  8601  17EB  0BF1               	decfsz	??i1_lcd_put_byte,f
  8602  17EC  2FEB               	goto	u524_27
  8603  17ED  27FD               	call	PL41	;select bank 0
  8604                           
  8605                           ;lcd(16).c: 139: RD3 = 1;
  8606  17EE  3021               	movlw	33
  8607  17EF  1588               	bsf	8,3
  8608                           
  8609                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  8610  17F0  00F1               	movwf	??i1_lcd_put_byte
  8611  17F1                     u525_27:	
  8612  17F1  0BF1               	decfsz	??i1_lcd_put_byte,f
  8613  17F2  2FF1               	goto	u525_27
  8614  17F3  27FD               	call	PL41	;select bank 0
  8615                           
  8616                           ;lcd(16).c: 141: RD3 = 0;
  8617  17F4  1188               	bcf	8,3
  8618  17F5  0008               	return
  8619  17F6                     __end_ofi1_lcd_put_byte:	
  8620  17F6                     PL34:	
  8621  17F6  00F1               	movwf	??i1_lcd_put_byte
  8622  17F7  0CF1               	rrf	??i1_lcd_put_byte,f
  8623  17F8  0C71               	rrf	??i1_lcd_put_byte,w
  8624  17F9  3901               	andlw	1
  8625  17FA  00F2               	movwf	??i1_lcd_put_byte+1
  8626  17FB  0C72               	rrf	??i1_lcd_put_byte+1,w
  8627  17FC  0008               	return
  8628  17FD                     PL41:	
  8629  17FD  1283               	bcf	3,5	;RP0=0, select bank0
  8630  17FE  1303               	bcf	3,6	;RP1=0, select bank0
  8631  17FF  0008               	return
  8632                           
  8633                           	psect	intentry
  8634  0004                     __pintentry:	
  8635                           ; Regs used in _button: [wreg+status,2+status,0+pclath+cstack]
  8636                           
  8637  0004                     interrupt_function:	
  8638  007E                     saved_w	set	btemp
  8639  0004  00FE               	movwf	btemp
  8640  0005  0E03               	swapf	3,w
  8641  0006  00F8               	movwf	??_button+3
  8642  0007  080A               	movf	10,w
  8643  0008  00F9               	movwf	??_button+4
  8644  0009  160A  118A  2E93   	ljmp	_button
  8645                           
  8646                           	psect	text729
  8647  0000                     __ptext729:	
  8648 ;; =============== function i1_lcd_busy ends ============
  8649                           
  8650  007E                     btemp	set	126	;btemp
  8651  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Nov 05 17:15:16 2022

                      pc 0002           ___bmul@product 002A             ___awdiv@sign 002B  
                     fsr 0004      ___wmul@multiplicand 0022             ___ftadd@exp1 0055  
           ___ftadd@exp2 0054            ?_lcd_put_byte 0020             ___ftadd@sign 0053  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _RB4 0034  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      fsr0 0004                      indf 0000  
           ___awmod@sign 0025               i1_lcd_busy 1740             ___ftdiv@cntr 0035  
           ___ftdiv@sign 003A                     l1106 0000                     l1071 0AB0  
                   l1080 0000                     l1065 0AF5                     l1074 0000  
                   l1083 0A26                     l1068 0000                     l1092 0000  
                   l1077 0A6B                     l2205 0000                     l1086 0000  
                   l2216 0000                     l2208 0000                     l1089 0B3A  
                   l2239 0000                     l2335 037F                     l3421 0C94  
                   l2357 04B7                     l3342 0000                     l3510 0000  
                   l3520 0000                     l3600 0000                     l2296 0098  
                   l3450 0B98                     l3347 0000                     l3363 0000  
                   l3443 0000                     l3524 0000                     l3357 0000  
                   l3390 14F9                     l3615 0654                     l3608 0000  
                   l3393 0000                     l3650 13A9                     l3651 0000  
                   l3539 0000                     l7012 0000                     l7100 09E3  
                   l3477 0549                     l7006 0ECC                     l7014 0EDF  
                   l7102 09F0                     l7110 0000                     l3399 0000  
                   l7016 0000                     l7104 0000                     l7112 0000  
                   l7200 0000                     l3497 0000                     l3658 13C8  
                   l3578 0000                     l7018 0EE7                     l7106 0000  
                   l7114 0000                     l7130 0C3B                     l7122 0000  
                   l7116 0000                     l7108 0000                     l7140 0C51  
                   l7124 0000                     l7220 0000                     l7212 0000  
                   l7300 0000                     l7118 0000                     l7150 0000  
                   l7142 0000                     l7134 0C42                     l7126 0000  
                   l7230 0BAB                     l7222 0000                     l7214 0000  
                   l7206 0B87                     l7302 0000                     l7080 0000  
                   l7072 0000                     l7160 0C73                     l7152 0C5F  
                   l7136 0000                     l7240 0000                     l7224 0000  
                   l7216 0000                     l7312 0000                     l6610 0000  
                   l7090 09B5                     l7082 0000                     l7074 0000  
                   l7170 0C8B                     l7154 0000                     l7162 0C78  
                   l7234 0000                     l7226 0000                     l7218 0000  
                   l7250 0EFD                     l7306 0000                     l7330 0000  
                   l7322 0000                     l7410 0958                     l7402 0940  
                   l6612 0000                     l6700 1369                     l7092 0000  
                   l7084 0000                     l7076 0000                     l7172 0C90  
                   l7164 0C7C                     l7148 0000                     l7228 0000  
                   l7260 0000                     l7244 0000                     l7308 0BEA  
                   l7316 0671                     l7332 0000                     l7324 0000  
                   l7420 0000                     l7500 0000                     l6630 04F4  
                   l6622 0000                     l6702 0000                     l7094 0000  
                   l7086 099D                     l7182 0000                     l7166 0000  
                   l7158 0C6E                     l7238 0000                     l7270 0000  
                   l7262 0000                     l7318 067C                     l7326 0000  
                   l7342 0000                     l7334 0000                     l7350 0000  
                   l7414 0964                     l7406 094C                     l7430 08B0  
                   l7422 0000                     l7502 06A9                     l6624 0000  
                   l7096 0000                     l7088 09AA                     l7192 0000  
                   l7184 0CAA                     l7176 0000                     l7280 0000  
                   l7272 0000                     l7264 0000                     l7256 0F0E  
                   l7344 0000                     l7336 0000                     l7360 0000  
                   l7424 08A8                     l7432 0000                     l7512 06CC  
                   l7504 06B1                     l7600 0000                     l7520 0000  
                   _ADFM 04FF                     l6618 070E                     l6650 0000  
                   l6642 0000                     l6634 0000                     l6714 13BC  
                   l6706 0000                     l6730 0F5D                     l6810 0F75  
                   l6802 0000                     l7098 09D8                     l7194 0000  
                   l7186 0000                     l7178 0C9F                     l7290 0F3F  
                   l7282 0000                     l7274 0F1F                     l7266 0000  
                   l7258 0000                     l7338 0000                     l7354 0000  
                   l7346 0000                     l7362 0000                     l7370 0000  
                   l7418 0970                     l7426 08A9                     l7450 14C7  
                   l7442 1473                     l7506 06B8                     l6652 061F  
                   l6644 0000                     l6636 05FD                     l6724 13D2  
                   l6716 0000                     l6708 0000                     l6820 0F93  
                   l6812 0F7A                     l6804 0000                     l7196 0CC6  
                   l7188 0000                     l7292 0000                     l7284 0000  
                   l7268 0000                     l7356 0000                     l7348 0000  
                   l7380 0000                     l7372 0000                     l7428 0000  
                   l7436 0000                     l7508 06BE                     l7516 06D3  
                   l7700 040D                     l7620 0204                     l7612 01D9  
                   l7604 0192                     l7532 0038                     l6670 0000  
                   l6662 0000                     l6654 0000                     l6646 0000  
                   l6638 0602                     l6718 13C4                     l6750 0500  
                   l6814 0F7F                     l6806 0F71                     l6830 0000  
                   l6902 0000                     l7294 0000                     l7286 0F35  
                   l7278 0F29                     l7366 0000                     l7358 0000  
                   l7374 0000                     l7390 0000                     l7382 0000  
                   l7446 0000                     l7454 0000                     l7518 0000  
                   l7630 0000                     l7702 041B                     l7550 006C  
                   l7542 0000                     l7534 0000                     l7526 0025  
                   l6672 0650                     l6648 0000                     l6736 0000  
                   l6728 0000                     l6752 0000                     l6744 0000  
                   l6760 0000                     l6824 0000                     l6816 0F89  
                   l6840 0000                     l6832 0519                     l6904 0EA2  
                   l6920 057A                     l6912 0000                     l7296 0000  
                   l7368 0000                     l7392 0000                     l7384 0000  
                   l7472 0D8D                     l7712 043C                     l7640 0297  
                   l7632 0000                     l7624 0215                     l7608 01A4  
                   l7560 00AB                     l7544 0000                     l7552 0094  
                   l7536 0000                     l7528 0000                     l7800 0000  
                   l6658 0000                     l6682 0000                     l6738 0000  
                   l6754 0000                     l6746 04F8                     l6770 0000  
                   l6762 0000                     l6826 0000                     l6818 0F8E  
                   l6850 053D                     l6842 0000                     l6834 051E  
                   l6906 0000                     l7378 0000                     l7394 0928  
                   l7386 0000                     l7490 0E53                     l7466 0D48  
                   l7458 0000                     l7730 047E                     l7722 0461  
                   l7634 0000                     l7570 0000                     l7554 0000  
                   l7538 005D                     l7810 15C2                     l7802 158E  
                   l6668 0648                     l6692 0000                     l6684 1333  
                   l6764 0000                     l6780 1506                     l6828 0000  
                   l6860 0553                     l6852 0000                     l6844 0000  
                   l6836 0000                     l6908 0EAA                     l6932 0000  
                   l6940 0000                     l7388 0000                     l7484 0E0E  
                   l7476 0DA4                     l7740 0000                     l7716 0454  
                   l7708 0428                     l7660 02F6                     l7652 0000  
                   l7636 0256                     l7548 0000                     l6678 065E  
                   l6694 0000                     l6686 1338                     l6774 0000  
                   l6766 14F3                     l6790 0000                     l6862 0000  
                   l6854 0545                     l6838 0000                     l6870 0000  
                   l6926 0000                     l6950 0000                     l7398 0934  
                   l7494 0000                     l7742 04AE                     l7734 049A  
                   l7670 030F                     l7662 0309                     l7654 02CD  
                   l7646 0299                     l7638 0000                     l7590 0000  
                   l7582 0000                     l7574 0000                     l7566 00BB  
                   l7558 009A                     l7830 0000                     l7822 0000  
                   l7814 0000                     l7806 0000                     l7750 0000  
                   l6696 0000                     l6792 0000                     l6784 0000  
                   l6864 0561                     l6880 0000                     l6928 059F  
                   l6952 0000                     l6944 04CA                     l6960 0000  
                   l7496 0000                     l7736 049D                     l7728 047B  
                   l7680 0000                     l7656 0000                     l7592 0000  
                   l7584 0000                     l7576 00F7                     l7568 0000  
                   l7840 0000                     l7832 0000                     l7824 0000  
                   l7816 0000                     l7808 0000                     l7760 0000  
                   l7752 0000                     l6698 0000                     l6778 0000  
                   l6786 0000                     l6882 0E7D                     l6874 0000  
                   l6970 05BC                     l6962 0000                     l7738 04A1  
                   l7690 0000                     l7682 0346                     l7674 0316  
                   l7586 0000                     l7578 0000                     l7746 0013  
                   l7834 165E                     l7826 162A                     l7818 15F6  
                   l7770 0000                     l7762 0000                     l7754 0000  
                   l6796 1520                     l6788 150C                     l6892 0E8B  
                   l6884 0000                     l6876 0E74                     l6868 0000  
                   l6948 04D9                     l6980 0000                     l6972 0000  
                   l7692 03A2                     l7684 035B                     l7676 0342  
                   l7668 02FA                     l7596 0158                     l7588 0000  
                   l7780 0000                     l7772 0000                     l7764 0000  
                   l7756 0000                     l7748 0000                     _ADON 00F8  
                   l6798 0000                     l6894 0000                     l6982 05E7  
                   l7598 0000                     l7838 0000                     l7790 0000  
                   l7782 0000                     l7774 0000                     l7766 0000  
                   l7758 0000                     l6976 0000                     l6992 0000  
                   l7688 036A                     l7792 0000                     l7784 0000  
                   l7776 0000                     l7768 0000                     l6898 0000  
                   l6994 0EB9                     l6986 0000                     l7698 0000  
                   l7794 0000                     l7786 0000                     l7778 0000  
                   l6988 0000                     l7796 0000                     l7788 0000  
                   l6998 0EC0                     l7798 0000                     _CHS0 00FA  
                   _CHS1 00FB                     _CHS2 00FC                     _CHS3 00FD  
                   _ANS0 0C40                     STR_1 10EC                     _ANS1 0C41  
                   STR_2 107C                     _ANS2 0C42                     STR_3 108D  
                   _ANS3 0C43                     STR_4 10DD                     STR_5 109D  
                   _ANS5 0C45                     STR_6 10DD                     STR_7 10AD  
                   STR_8 10DD                     STR_9 10BD                     _IOCB 0096  
                   u3140 0000                     u3145 0522                     u3305 0588  
                   u4035 0BB9                     u3255 0E94                     u5007 0A99  
                   u5017 0AA9                     u5107 098C                     u5027 0ADE  
                   u3445 0ED2                     u5117 09C3                     u5037 0AEE  
                   u3710 09BF                     u5127 09C9                     u5047 0B23  
                   u3385 05CF                     u5137 09FD                     u5057 06E6  
                   u3730 09D6                     u3650 099B                     u5147 0A03  
                   u5067 06EC                     u3804 09FB                     u3724 09C1  
                   u5077 06F6                     u4525 01AE                     u3750 09E1  
                   u3670 09A8                     u5087 06FC                     u4535 01E3  
                   _RBIE 005B                     u4480 0000                     _RBIF 0058  
                   u5097 0986                     u4625 0303                     u3770 09EE  
                   u3690 09B3                     u2795 062E                     u2885 138D  
                   u4725 0436                     u4565 0202                     u4485 010E  
                   u3790 09F9                     u4735 044C                     u4655 034F  
                   u4665 0365                     u4585 02C6                     u4907 08DE  
                   u4917 08F1                     u4927 0905                     u4775 0471  
                   u4937 0913                     u4785 048C                     u4947 0921  
                   u4957 0B33                     u4967 0B6E                     u4887 1589  
                   u4977 0A1F                     u4897 08CB                     u4987 0A54  
                   u4997 0A64                     _adc1 006A                     _adc2 006C  
                   _adc3 007A                     _adc4 007C                     _adc5 00C8  
                   _main 153A                     _res1 00B9                     _res2 00BC  
                   _res3 00BF                     _res4 00C2                     _res5 00C5  
           ___ftpack@arg 0020             ___ftpack@exp 0023             lcd_busy@busy 0021  
                   btemp 007E                     start 000C        ___bmul@multiplier 002B  
           ___ftmul@cntr 0048             ___ftmul@sign 0049             ___fttol@exp1 003A  
           ___fttol@lval 0036           ??_lcd_put_byte 0021                    _ADCS0 00FE  
                  _ADCS1 00FF                    ?_main 0070          __end_of___awdiv 0EAF  
        __end_of___lbdiv 1508          __end_of___ftadd 0CD8                    STR_10 10DD  
                  STR_11 10CD                    STR_12 10DD          __end_of___awmod 0EEC  
        __end_of___lbmod 1524          __end_of___ftdiv 0BE0          __end_of___ftneg 066F  
                  _ANSEL 0188          __end_of___lldiv 05F0          __end_of___ftmul 0F5B  
        ___awdiv@divisor 0026          __end_of___llmod 05A8          __end_of___ftsub 06A7  
        __end_of___fttol 056A          ___awdiv@counter 002A                    _VCFG0 04FC  
                  _VCFG1 04FD                    _TRISB 0086                    _TRISD 0088  
           ___lltoft@exp 002C            ___awtoft@sign 002B                    _scale 0CD8  
        __end_of_isdigit 04F6            ___ftpack@sign 0024                    _putch 04B8  
        __end_of_isprint 0710                    pclath 000A                    status 0003  
                  wtemp0 007E          ___lbdiv@divisor 0025          ___lbdiv@counter 0027  
         i1lcd_busy@busy 0071             __end_of_main 1693            lcd_gotoxy@col 0026  
          lcd_gotoxy@row 0025                   ??_main 0068            ___fttol@sign1 0035  
   __size_of__tdiv_to_l_ 0077              ?i1_lcd_busy 0070         ___llmod@dividend 0031  
                 ?_scale 004A                   _ADRESH 001E         ___awdiv@dividend 0028  
       __end_of___awtoft 0BFD                   ?_putch 0070         __end_of___ftpack 0FA7  
                 _ANSELH 0189         __end_of___lltoft 068F                   i1l1110 1697  
                 i1l1142 171B                   i1l1134 16FA                   i1l1126 16D9  
                 i1l1118 16B8                   i1l1149 1739                   i1l2208 0000  
                 i1l2216 0000                   i1l7030 0000                   i1l7022 0000  
                 i1l7032 0000                   i1l7024 0000                   i1l7040 0000  
                 i1l7026 0000                   i1l7050 178B                   i1l7028 0000  
                 i1l7060 0000                   i1l7052 1798                   i1l7044 0000  
                 i1l7036 0000                   i1l7070 0000                   i1l7062 17C6  
                 i1l7054 17A3                   i1l7046 0000                   i1l7038 0000  
                 i1l7064 17D1                   i1l7056 0000                   i1l7048 0000  
                 i1l7066 17DE                   i1l7058 0000                   i1l7068 0000  
                 i1l6604 0000                   i1l6606 1727                   i1l6550 0000  
                 i1l6570 16C4                   i1l6562 16B5                   i1l6580 0000  
                 i1l6556 0000                   i1l6582 16E5                   i1l6574 16D6  
                 i1l6558 16A3                   i1l6592 0000                   i1l6568 0000  
                 i1l6594 1706                   i1l6586 16F7                   i1l6598 1718  
                 u350_20 1796                   u360_20 17DC                   u352_20 17A1  
                 u520_27 1774            ?_read_adc_AN0 0070            ?_read_adc_AN1 0070  
          ?_read_adc_AN2 0070            ?_read_adc_AN3 0070                   u521_27 177A  
          ?_read_adc_AN5 0070                   u362_20 17E7                   u354_20 17AD  
                 u522_27 17B1                   u363_24 17E9                   u355_24 17AF  
                 u523_27 17B7                   u515_27 16AF                   u356_20 17C4  
                 u348_20 1789                   u524_27 17EB                   u516_27 16D0  
                 u525_27 17F1                   u517_27 16F1                   u358_20 17CF  
                 u526_27 174B                   u518_27 1712                   u527_27 1751  
                 u519_27 1733                   u528_27 175B                   u529_27 1761  
                 _TRISA0 0428                   _TRISA1 0429                   _TRISA2 042A  
                 _TRISA3 042B                   _TRISD1 0441                   _TRISE0 0448  
                 _TRISD2 0442                   _TRISD3 0443                   _TRISD4 0444  
                 _TRISD5 0445                   _TRISD6 0446                   _TRISD7 0447  
       __end_of_lcd_busy 0702         __end_of_lcd_init 0979         __end_of_lcd_putc 06DC  
                 ___bmul 0F5B                   ___ftge 04BB                   ___wmul 04F6  
              ??___awdiv 002A                ??___lbdiv 0026                ??___ftadd 0050  
              ??___awmod 0024                ??___lbmod 0021                ??___ftdiv 0032  
              ??___ftneg 0023                ??___lldiv 0028                ??___ftmul 0041  
              ??___llmod 0035                ??___ftsub 005C                ??___fttol 0032  
                 _button 1693                   _fround 13E8         ___awdiv@quotient 002C  
        ___awmod@divisor 0020          ___awmod@counter 0024                   _printf 000F  
                 clrloop 07C8            lcd_put_byte@b 0020    ___ftmul@f3_as_product 0045  
              ??_isdigit 0020                   saved_w 007E                ??_isprint 0020  
                 putch@c 0029         ___lbdiv@dividend 0026           ??_read_adc_AN0 004A  
         ??_read_adc_AN1 004A           ??_read_adc_AN2 004A           ??_read_adc_AN3 004A  
         ??_read_adc_AN5 004A          ___lbmod@divisor 0020          ___lbmod@counter 0023  
   __end_of_lcd_put_byte 0A08               ___ftadd@f1 004A               ___ftadd@f2 004D  
             ___ftge@ff1 0020               ___ftge@ff2 0023               ___ftdiv@f1 002F  
             ___ftdiv@f2 002C               ___ftdiv@f3 0036               ___ftneg@f1 0020  
             ___awtoft@c 0028      ___bmul@multiplicand 0029               ___ftmul@f1 003B  
             ___ftmul@f2 003E               ___ftsub@f1 0059               ___ftsub@f2 0056  
             ___fttol@f1 002E           __pcstackCOMMON 0070      __size_ofi1_lcd_busy 0027  
             ___lltoft@c 0028            __end_of_scale 0E6A            __end_of_putch 04BB  
       ___lbdiv@quotient 0028               __div_to_l_ 131C        lcd_gotoxy@address 0027  
        __div_to_l_@exp1 0033          __div_to_l_@cntr 0032                  ??_scale 004D  
        __div_to_l_@quot 002E                  ??_putch 0029               __pbssBANK0 006A  
             __pbssBANK1 00B9            __div_to_l_@f1 0020            __div_to_l_@f2 0023  
             __pmaintext 153A                  ?___bmul 0029                  ?___ftge 0020  
                ?___wmul 0020               __pintentry 0004                  ?_button 0070  
                ?_fround 0056                ?___awtoft 0028                ?___ftpack 0020  
                ?_printf 0060                ?___lltoft 0028  __size_ofi1_lcd_put_byte 008F  
             _lcd_gotoxy 08A1          i1lcd_put_byte@b 0070                ?_lcd_busy 0070  
              ?_lcd_init 0070                ?_lcd_putc 0070               _scale$4157 0051  
        __size_of___bmul 000E          __size_of___ftge 002C                  ___awdiv 0E6A  
                ___lbdiv 14ED                  ___ftadd 0C18                  ___awmod 0EAF  
                ___lbmod 1508                  ___ftdiv 0B76                  ___ftneg 0667  
                ___lldiv 05A8          __size_of___wmul 0019                  ___ftmul 0EEC  
                ___llmod 056A                  ___ftsub 068F                  ___fttol 050F  
   __end_of_read_adc_AN0 0B2B     __end_of_read_adc_AN1 0AE6     __end_of_read_adc_AN2 0AA1  
   __end_of_read_adc_AN3 0A5C     __end_of_read_adc_AN5 0B76               ??___awtoft 002B  
             ??___ftpack 0025          __size_of_button 00AD          __size_of_fround 0105  
             ??___lltoft 002C          __size_of_printf 04A9              ?__div_to_l_ 0020  
                _dpowers 1054                  _isdigit 04E7         ___awmod@dividend 0022  
                _isprint 0702             ??i1_lcd_busy 0070    __size_of_lcd_put_byte 008F  
             ??_lcd_busy 0020               ??_lcd_init 0025               ??_lcd_putc 0028  
   end_of_initialization 07C3           lcd_put_byte@rs 0023          ___lldiv@divisor 0020  
        ___lldiv@counter 002C                  printf@c 00B8                  printf@f 00AE  
     __end_ofi1_lcd_busy 1767           __tdiv_to_l_@f1 0020           __tdiv_to_l_@f2 0023  
          ??__tdiv_to_l_ 0026             _lcd_put_byte 0979         ___lbmod@dividend 0022  
            ?_lcd_gotoxy 0025              ___lbmod@rem 0024              printf@integ 00A5  
            ___ftdiv@exp 0039              printf@width 00AF      __size_of__div_to_l_ 00BF  
            ___ftmul@exp 0044           __end_of___bmul 0F69           __end_of___ftge 04E7  
         __end_of___wmul 050F           __end_of_button 1740           __end_of_fround 14ED  
         __end_of_printf 04B8           i1_lcd_put_byte 1767      start_initialization 07B3  
    __end_of__tdiv_to_l_ 0667          ___llmod@divisor 002D          ___llmod@counter 0035  
  __size_of_read_adc_AN0 0045    __size_of_read_adc_AN1 0045    __size_of_read_adc_AN2 0045  
  __size_of_read_adc_AN3 0045    __size_of_read_adc_AN5 004B                 ??___bmul 002A  
               ??___ftge 0026      __size_of_lcd_gotoxy 0018                 ??___wmul 0024  
               ??_button 0075                 ??_fround 0059                 ??_printf 0063  
 __end_ofi1_lcd_put_byte 17F6               fround@prec 005F        __size_of___awtoft 001D  
      __size_of___ftpack 003E        __size_of___lltoft 0020              __pbssCOMMON 007A  
          __pcstackBANK0 0020            __pcstackBANK1 00A0             _isdigit$3694 0020  
           _read_adc_AN0 0AE6             _read_adc_AN1 0AA1             _read_adc_AN2 0A5C  
           _read_adc_AN3 0A17             _read_adc_AN5 0B2B        __size_of_lcd_busy 0026  
      __size_of_lcd_init 00C0        __size_of_lcd_putc 0035                 ?___awdiv 0026  
               ?___lbdiv 0025                 ?___ftadd 004A                 ?___awmod 0020  
              __ptext700 0A5C                __ptext701 0AA1                __ptext710 0EAF  
              __ptext702 0AE6                __ptext711 05A8                __ptext703 066F  
              __ptext720 04F6                __ptext712 04BB                __ptext704 0BE0  
              __ptext721 0F5B                __ptext713 0667                __ptext705 0EEC  
              __ptext722 131C                __ptext714 056A                __ptext706 0B76  
              __ptext723 05F0                __ptext715 0E6A                __ptext707 0C18  
               ?___lbmod 0020                __ptext724 04E7                __ptext716 050F  
              __ptext708 06DC                __ptext725 0702                __ptext717 0F69  
              __ptext709 0979                __ptext726 1693                __ptext718 1508  
              __ptext727 1767                __ptext719 14ED                __ptext728 1740  
              __ptext729 0000                __ptext690 000F                __ptext691 04B8  
              __ptext692 06A7                __ptext693 068F                __ptext694 0CD8  
              __ptext695 13E8                __ptext696 08A1                __ptext697 08B9  
              __ptext698 0B2B                __ptext699 0A17                 ?___ftdiv 002C  
               ?___ftneg 0020                 ?___lldiv 0020                 ?___ftmul 003B  
               ?___llmod 002D                 ?___ftsub 0056                __npowers_ 1006  
               ?___fttol 002E                __pstrings 1000              __tdiv_to_l_ 05F0  
        ?i1_lcd_put_byte 0070             ??__div_to_l_ 0026                 ?_isdigit 0070  
               ?_isprint 0070           __size_of_scale 0192           __size_of_putch 0003  
      interrupt_function 0004           ___wmul@product 0024       __end_of__div_to_l_ 13DB  
               _GO_nDONE 00F9                 _S1_state 006E         i1lcd_put_byte@rs 0073  
            __stringbase 1005        ___wmul@multiplier 0020               printf@_val 00A8  
             printf@flag 00AC               printf@fval 00B3               printf@prec 00B6  
              lcd_putc@c 0028             ??_lcd_gotoxy 0026         lcd_put_byte@temp 0024  
           _isprint$3697 0020       __end_of_lcd_gotoxy 08B9         __size_of___awdiv 0045  
       __size_of___lbdiv 001B         __size_of___ftadd 00C0         __size_of___awmod 003D  
       __size_of___lbmod 001C         __size_of___ftdiv 006A         __size_of___ftneg 0008  
       __size_of___lldiv 0048         __size_of___ftmul 006F         __size_of___llmod 003E  
       __size_of___ftsub 0018         __size_of___fttol 005B                 ___awtoft 0BE0  
               ___ftpack 0F69              _fround$4155 005C              _fround$4156 0059  
               ___lltoft 066F         __size_of_isdigit 000F         __size_of_isprint 000E  
               __powers_ 102D                 _lcd_busy 06DC                 _lcd_init 08B9  
               _lcd_putc 06A7            __size_of_main 0159                 clear_ram 07C7  
              printf@exp 00B1                 isdigit@c 0021                 scale@scl 0054  
               intlevel1 0000         __tdiv_to_l_@exp1 002E         __tdiv_to_l_@cntr 002D  
       __tdiv_to_l_@quot 0029         ___lldiv@dividend 0024                 isprint@c 0021  
              stringcode 1000                 printf@ap 00A4         ??i1_lcd_put_byte 0071  
           ?__tdiv_to_l_ 0020              _printf$3186 00A0         ___lldiv@quotient 0028  
               stringdir 1000                 stringtab 1000       i1lcd_put_byte@temp 0074  
