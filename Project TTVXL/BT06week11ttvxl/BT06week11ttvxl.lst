

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Nov 11 16:50:09 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text531,local,class=CODE,delta=2
    13                           	psect	text534,local,class=CODE,delta=2
    14                           	psect	text536,local,class=CODE,delta=2
    15                           	psect	text537,local,class=CODE,delta=2
    16                           	psect	text539,local,class=CODE,delta=2
    17                           	psect	text557,local,class=CODE,delta=2
    18                           	psect	text561,local,class=CODE,delta=2
    19                           	psect	text562,local,class=CODE,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text563,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E3C2               	dw	58306	;#
    28                           
    29                           	psect	strings
    30  1000                     __pstrings:	
    31  1000                     stringtab:	
    32                           ;	global	stringdir,stringtab,__stringbase
    33                           
    34  1000                     stringcode:	
    35                           ;	String table - string pointers are 1 byte each
    36                           
    37  1000                     stringdir:	
    38  1000  3010               	movlw	high stringdir
    39  1001  008A               	movwf	10
    40  1002  0804               	movf	4,w
    41  1003  0A84               	incf	4,f
    42  1004  0782               	addwf	2,f
    43  1005                     __stringbase:	
    44  1005  3400               	retlw	0
    45  1006                     __npowers_:	
    46  1006  3400               	retlw	0
    47  1007  3480               	retlw	128
    48  1008  343F               	retlw	63
    49  1009  34CD               	retlw	205
    50  100A  34CC               	retlw	204
    51  100B  343D               	retlw	61
    52  100C  34D7               	retlw	215
    53  100D  3423               	retlw	35
    54  100E  343C               	retlw	60
    55  100F  3412               	retlw	18
    56  1010  3483               	retlw	131
    57  1011  343A               	retlw	58
    58  1012  34B7               	retlw	183
    59  1013  34D1               	retlw	209
    60  1014  3438               	retlw	56
    61  1015  34C6               	retlw	198
    62  1016  3427               	retlw	39
    63  1017  3437               	retlw	55
    64  1018  3438               	retlw	56
    65  1019  3486               	retlw	134
    66  101A  3435               	retlw	53
    67  101B  34C0               	retlw	192
    68  101C  34D6               	retlw	214
    69  101D  3433               	retlw	51
    70  101E  34CC               	retlw	204
    71  101F  342B               	retlw	43
    72  1020  3432               	retlw	50
    73  1021  3470               	retlw	112
    74  1022  3489               	retlw	137
    75  1023  3430               	retlw	48
    76  1024  34E7               	retlw	231
    77  1025  34DB               	retlw	219
    78  1026  342E               	retlw	46
    79  1027  34E5               	retlw	229
    80  1028  343C               	retlw	60
    81  1029  341E               	retlw	30
    82  102A  3442               	retlw	66
    83  102B  34A2               	retlw	162
    84  102C  340D               	retlw	13
    85  102D                     __powers_:	
    86  102D  3400               	retlw	0
    87  102E  3480               	retlw	128
    88  102F  343F               	retlw	63
    89  1030  3400               	retlw	0
    90  1031  3420               	retlw	32
    91  1032  3441               	retlw	65
    92  1033  3400               	retlw	0
    93  1034  34C8               	retlw	200
    94  1035  3442               	retlw	66
    95  1036  3400               	retlw	0
    96  1037  347A               	retlw	122
    97  1038  3444               	retlw	68
    98  1039  3440               	retlw	64
    99  103A  341C               	retlw	28
   100  103B  3446               	retlw	70
   101  103C  3450               	retlw	80
   102  103D  34C3               	retlw	195
   103  103E  3447               	retlw	71
   104  103F  3424               	retlw	36
   105  1040  3474               	retlw	116
   106  1041  3449               	retlw	73
   107  1042  3497               	retlw	151
   108  1043  3418               	retlw	24
   109  1044  344B               	retlw	75
   110  1045  34BC               	retlw	188
   111  1046  34BE               	retlw	190
   112  1047  344C               	retlw	76
   113  1048  346B               	retlw	107
   114  1049  346E               	retlw	110
   115  104A  344E               	retlw	78
   116  104B  3403               	retlw	3
   117  104C  3415               	retlw	21
   118  104D  3450               	retlw	80
   119  104E  3479               	retlw	121
   120  104F  34AD               	retlw	173
   121  1050  3460               	retlw	96
   122  1051  34F3               	retlw	243
   123  1052  3449               	retlw	73
   124  1053  3471               	retlw	113
   125  1054                     _dpowers:	
   126  1054  3401               	retlw	1
   127  1055  3400               	retlw	0
   128  1056  3400               	retlw	0
   129  1057  3400               	retlw	0
   130  1058  340A               	retlw	10
   131  1059  3400               	retlw	0
   132  105A  3400               	retlw	0
   133  105B  3400               	retlw	0
   134  105C  3464               	retlw	100
   135  105D  3400               	retlw	0
   136  105E  3400               	retlw	0
   137  105F  3400               	retlw	0
   138  1060  34E8               	retlw	232
   139  1061  3403               	retlw	3
   140  1062  3400               	retlw	0
   141  1063  3400               	retlw	0
   142  1064  3410               	retlw	16
   143  1065  3427               	retlw	39
   144  1066  3400               	retlw	0
   145  1067  3400               	retlw	0
   146  1068  34A0               	retlw	160
   147  1069  3486               	retlw	134
   148  106A  3401               	retlw	1
   149  106B  3400               	retlw	0
   150  106C  3440               	retlw	64
   151  106D  3442               	retlw	66
   152  106E  340F               	retlw	15
   153  106F  3400               	retlw	0
   154  1070  3480               	retlw	128
   155  1071  3496               	retlw	150
   156  1072  3498               	retlw	152
   157  1073  3400               	retlw	0
   158  1074  3400               	retlw	0
   159  1075  34E1               	retlw	225
   160  1076  34F5               	retlw	245
   161  1077  3405               	retlw	5
   162  1078  3400               	retlw	0
   163  1079  34CA               	retlw	202
   164  107A  349A               	retlw	154
   165  107B  343B               	retlw	59
   166  0015                     _CCPR1	set	21
   167  001B                     _CCPR2	set	27
   168  0017                     _CCP1CON	set	23
   169  001D                     _CCP2CON	set	29
   170  000F                     _TMR1H	set	15
   171  000E                     _TMR1L	set	14
   172  0062                     _CCP1IF	set	98
   173  0068                     _CCP2IF	set	104
   174  005F                     _GIE	set	95
   175  005E                     _PEIE	set	94
   176  0041                     _RD1	set	65
   177  0042                     _RD2	set	66
   178  0043                     _RD3	set	67
   179  0044                     _RD4	set	68
   180  0045                     _RD5	set	69
   181  0046                     _RD6	set	70
   182  0047                     _RD7	set	71
   183  0049                     _RE1	set	73
   184  0084                     _T1CKPS0	set	132
   185  0085                     _T1CKPS1	set	133
   186  0082                     _T1SYNC	set	130
   187  0081                     _TMR1CS	set	129
   188  0086                     _TMR1GE	set	134
   189  0080                     _TMR1ON	set	128
   190  0088                     _TRISD	set	136
   191  0462                     _CCP1IE	set	1122
   192  0468                     _CCP2IE	set	1128
   193  042C                     _TRISA4	set	1068
   194  0439                     _TRISC1	set	1081
   195  043A                     _TRISC2	set	1082
   196  0441                     _TRISD1	set	1089
   197  0442                     _TRISD2	set	1090
   198  0443                     _TRISD3	set	1091
   199  0444                     _TRISD4	set	1092
   200  0445                     _TRISD5	set	1093
   201  0446                     _TRISD6	set	1094
   202  0447                     _TRISD7	set	1095
   203  0448                     _TRISE0	set	1096
   204  0449                     _TRISE1	set	1097
   205  0188                     _ANSEL	set	392
   206  0189                     _ANSELH	set	393
   207  107C                     STR_1:	
   208  107C  3478               	retlw	120	;'x'
   209  107D  3475               	retlw	117	;'u'
   210  107E  346E               	retlw	110	;'n'
   211  107F  3467               	retlw	103	;'g'
   212  1080  343A               	retlw	58	;':'
   213  1081  3420               	retlw	32	;' '
   214  1082  3425               	retlw	37	;'%'
   215  1083  3430               	retlw	48	;'0'
   216  1084  3438               	retlw	56	;'8'
   217  1085  3475               	retlw	117	;'u'
   218  1086  3400               	retlw	0
   219  1087                     STR_2:	
   220  1087  3466               	retlw	102	;'f'
   221  1088  343A               	retlw	58	;':'
   222  1089  3420               	retlw	32	;' '
   223  108A  3425               	retlw	37	;'%'
   224  108B  3435               	retlw	53	;'5'
   225  108C  342E               	retlw	46	;'.'
   226  108D  3432               	retlw	50	;'2'
   227  108E  3466               	retlw	102	;'f'
   228  108F  3400               	retlw	0
   229                           
   230                           	psect	cinit
   231  07B2                     start_initialization:	
   232                           
   233                           ; Clear objects allocated to BANK0
   234  07B2  01E2               	clrf	__pbssBANK0& (0+127)
   235  07B3  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   236  07B4  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   237  07B5  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   238  07B6  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   239  07B7  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   240  07B8  01E8               	clrf	(__pbssBANK0+6)& (0+127)
   241  07B9  01E9               	clrf	(__pbssBANK0+7)& (0+127)
   242  07BA  01EA               	clrf	(__pbssBANK0+8)& (0+127)
   243  07BB  01EB               	clrf	(__pbssBANK0+9)& (0+127)
   244  07BC  01EC               	clrf	(__pbssBANK0+10)& (0+127)
   245  07BD  01ED               	clrf	(__pbssBANK0+11)& (0+127)
   246  07BE  01EE               	clrf	(__pbssBANK0+12)& (0+127)
   247  07BF  01EF               	clrf	(__pbssBANK0+13)& (0+127)
   248  07C0                     end_of_initialization:	
   249                           ;End of C runtime variable initialization code
   250                           
   251  07C0  0183               	clrf	3
   252  07C1  160A  118A  2E72   	ljmp	_main	;jump to C main() function
   253                           
   254                           	psect	bssBANK0
   255  0062                     __pbssBANK0:	
   256  0062                     _xung:	
   257  0062                     	ds	4
   258  0066                     _d:	
   259  0066                     	ds	3
   260  0069                     _count1:	
   261  0069                     	ds	2
   262  006B                     _count2:	
   263  006B                     	ds	2
   264  006D                     _t:	
   265  006D                     	ds	3
   266                           
   267                           	psect	cstackBANK1
   268  00A0                     __pcstackBANK1:	
   269  00A0                     _printf$3175:	
   270                           
   271                           ; 4 bytes @ 0x0
   272  00A0                     	ds	4
   273  00A4                     printf@ap:	
   274                           
   275                           ; 1 bytes @ 0x4
   276  00A4                     	ds	1
   277  00A5                     printf@integ:	
   278                           
   279                           ; 3 bytes @ 0x5
   280  00A5                     	ds	3
   281  00A8                     printf@_val:	
   282                           
   283                           ; 4 bytes @ 0x8
   284  00A8                     	ds	4
   285  00AC                     printf@f:	
   286                           
   287                           ; 1 bytes @ 0xC
   288  00AC                     	ds	1
   289  00AD                     printf@flag:	
   290                           
   291                           ; 2 bytes @ 0xD
   292  00AD                     	ds	2
   293  00AF                     printf@exp:	
   294                           
   295                           ; 2 bytes @ 0xF
   296  00AF                     	ds	2
   297  00B1                     printf@width:	
   298                           
   299                           ; 2 bytes @ 0x11
   300  00B1                     	ds	2
   301  00B3                     printf@fval:	
   302                           
   303                           ; 3 bytes @ 0x13
   304  00B3                     	ds	3
   305  00B6                     printf@prec:	
   306                           
   307                           ; 2 bytes @ 0x16
   308  00B6                     	ds	2
   309  00B8                     printf@c:	
   310                           
   311                           ; 1 bytes @ 0x18
   312  00B8                     	ds	1
   313                           
   314                           	psect	cstackCOMMON
   315  0070                     __pcstackCOMMON:	
   316  0070                     ?_lcd_init:	
   317  0070                     ?_lcd_putc:	
   318                           ; 0 bytes @ 0x0
   319                           
   320  0070                     ?_isprint:	
   321                           ; 0 bytes @ 0x0
   322                           
   323  0070                     ?_isdigit:	
   324                           ; 1 bit 
   325                           
   326  0070                     ?_main:	
   327                           ; 1 bit 
   328                           
   329  0070                     ?_putch:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ?_ngat:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ??_ngat:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_lcd_busy:	
   339                           ; 0 bytes @ 0x0
   340                           
   341                           
   342                           ; 1 bytes @ 0x0
   343  0070                     	ds	2
   344  0072                     ?_lcd_put_byte:	
   345  0072                     ??_lcd_busy:	
   346                           ; 0 bytes @ 0x2
   347                           
   348  0072                     ??_isprint:	
   349                           ; 0 bytes @ 0x2
   350                           
   351  0072                     ??_isdigit:	
   352                           ; 0 bytes @ 0x2
   353                           
   354  0072                     ?___ftge:	
   355                           ; 0 bytes @ 0x2
   356                           
   357  0072                     ?___lbmod:	
   358                           ; 1 bit 
   359                           
   360  0072                     ?_abs:	
   361                           ; 1 bytes @ 0x2
   362                           
   363  0072                     ?___wmul:	
   364                           ; 2 bytes @ 0x2
   365                           
   366  0072                     ?___awmod:	
   367                           ; 2 bytes @ 0x2
   368                           
   369  0072                     ?___ftpack:	
   370                           ; 2 bytes @ 0x2
   371                           
   372  0072                     ?___ftneg:	
   373                           ; 3 bytes @ 0x2
   374                           
   375  0072                     ?__tdiv_to_l_:	
   376                           ; 3 bytes @ 0x2
   377                           
   378  0072                     ?__div_to_l_:	
   379                           ; 4 bytes @ 0x2
   380                           
   381  0072                     ?___lldiv:	
   382                           ; 4 bytes @ 0x2
   383                           
   384  0072                     lcd_put_byte@b:	
   385                           ; 4 bytes @ 0x2
   386                           
   387  0072                     _isdigit$3685:	
   388                           ; 1 bytes @ 0x2
   389                           
   390  0072                     _isprint$3688:	
   391                           ; 1 bytes @ 0x2
   392                           
   393  0072                     ___lbmod@divisor:	
   394                           ; 1 bytes @ 0x2
   395                           
   396  0072                     abs@a:	
   397                           ; 1 bytes @ 0x2
   398                           
   399  0072                     ___wmul@multiplier:	
   400                           ; 2 bytes @ 0x2
   401                           
   402  0072                     ___awmod@divisor:	
   403                           ; 2 bytes @ 0x2
   404                           
   405  0072                     ___ftneg@f1:	
   406                           ; 2 bytes @ 0x2
   407                           
   408  0072                     ___ftge@ff1:	
   409                           ; 3 bytes @ 0x2
   410                           
   411  0072                     __tdiv_to_l_@f1:	
   412                           ; 3 bytes @ 0x2
   413                           
   414  0072                     __div_to_l_@f1:	
   415                           ; 3 bytes @ 0x2
   416                           
   417  0072                     ___ftpack@arg:	
   418                           ; 3 bytes @ 0x2
   419                           
   420  0072                     ___lldiv@divisor:	
   421                           ; 3 bytes @ 0x2
   422                           
   423                           
   424                           ; 4 bytes @ 0x2
   425  0072                     	ds	1
   426  0073                     ??_lcd_put_byte:	
   427  0073                     ??___lbmod:	
   428                           ; 0 bytes @ 0x3
   429                           
   430  0073                     lcd_busy@busy:	
   431                           ; 0 bytes @ 0x3
   432                           
   433  0073                     isdigit@c:	
   434                           ; 1 bytes @ 0x3
   435                           
   436  0073                     isprint@c:	
   437                           ; 1 bytes @ 0x3
   438                           
   439                           
   440                           ; 1 bytes @ 0x3
   441  0073                     	ds	1
   442  0074                     ??_abs:	
   443  0074                     ___lbmod@dividend:	
   444                           ; 0 bytes @ 0x4
   445                           
   446  0074                     ___wmul@multiplicand:	
   447                           ; 1 bytes @ 0x4
   448                           
   449  0074                     ___awmod@dividend:	
   450                           ; 2 bytes @ 0x4
   451                           
   452                           
   453                           ; 2 bytes @ 0x4
   454  0074                     	ds	1
   455  0075                     ??___ftneg:	
   456  0075                     lcd_put_byte@rs:	
   457                           ; 0 bytes @ 0x5
   458                           
   459  0075                     ___lbmod@counter:	
   460                           ; 1 bytes @ 0x5
   461                           
   462  0075                     ___ftpack@exp:	
   463                           ; 1 bytes @ 0x5
   464                           
   465  0075                     ___ftge@ff2:	
   466                           ; 1 bytes @ 0x5
   467                           
   468  0075                     __tdiv_to_l_@f2:	
   469                           ; 3 bytes @ 0x5
   470                           
   471  0075                     __div_to_l_@f2:	
   472                           ; 3 bytes @ 0x5
   473                           
   474                           
   475                           ; 3 bytes @ 0x5
   476  0075                     	ds	1
   477  0076                     ??___wmul:	
   478  0076                     ??___awmod:	
   479                           ; 0 bytes @ 0x6
   480                           
   481  0076                     lcd_put_byte@temp:	
   482                           ; 0 bytes @ 0x6
   483                           
   484  0076                     ___lbmod@rem:	
   485                           ; 1 bytes @ 0x6
   486                           
   487  0076                     ___awmod@counter:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     ___ftpack@sign:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0076                     ___wmul@product:	
   494                           ; 1 bytes @ 0x6
   495                           
   496  0076                     ___lldiv@dividend:	
   497                           ; 2 bytes @ 0x6
   498                           
   499                           
   500                           ; 4 bytes @ 0x6
   501  0076                     	ds	1
   502  0077                     ??_lcd_init:	
   503  0077                     ?_lcd_gotoxy:	
   504                           ; 0 bytes @ 0x7
   505                           
   506  0077                     ??___ftpack:	
   507                           ; 0 bytes @ 0x7
   508                           
   509  0077                     ?___lbdiv:	
   510                           ; 0 bytes @ 0x7
   511                           
   512  0077                     lcd_gotoxy@row:	
   513                           ; 1 bytes @ 0x7
   514                           
   515  0077                     ___lbdiv@divisor:	
   516                           ; 1 bytes @ 0x7
   517                           
   518  0077                     ___awmod@sign:	
   519                           ; 1 bytes @ 0x7
   520                           
   521                           
   522                           ; 1 bytes @ 0x7
   523  0077                     	ds	1
   524  0078                     ??_lcd_gotoxy:	
   525  0078                     ??__tdiv_to_l_:	
   526                           ; 0 bytes @ 0x8
   527                           
   528  0078                     ??___lbdiv:	
   529                           ; 0 bytes @ 0x8
   530                           
   531  0078                     ??___ftge:	
   532                           ; 0 bytes @ 0x8
   533                           
   534  0078                     ?___awdiv:	
   535                           ; 0 bytes @ 0x8
   536                           
   537  0078                     lcd_gotoxy@col:	
   538                           ; 2 bytes @ 0x8
   539                           
   540  0078                     ___lbdiv@dividend:	
   541                           ; 1 bytes @ 0x8
   542                           
   543  0078                     ___awdiv@divisor:	
   544                           ; 1 bytes @ 0x8
   545                           
   546                           
   547                           ; 2 bytes @ 0x8
   548  0078                     	ds	1
   549  0079                     lcd_gotoxy@address:	
   550  0079                     ___lbdiv@counter:	
   551                           ; 1 bytes @ 0x9
   552                           
   553                           
   554                           ; 1 bytes @ 0x9
   555  0079                     	ds	1
   556  007A                     ??_lcd_putc:	
   557  007A                     ??___llmod:	
   558                           ; 0 bytes @ 0xA
   559                           
   560  007A                     ??___lldiv:	
   561                           ; 0 bytes @ 0xA
   562                           
   563  007A                     ??___altoft:	
   564                           ; 0 bytes @ 0xA
   565                           
   566  007A                     ??___lltoft:	
   567                           ; 0 bytes @ 0xA
   568                           
   569  007A                     lcd_putc@c:	
   570                           ; 0 bytes @ 0xA
   571                           
   572  007A                     ___lbdiv@quotient:	
   573                           ; 1 bytes @ 0xA
   574                           
   575  007A                     ___llmod@counter:	
   576                           ; 1 bytes @ 0xA
   577                           
   578  007A                     ___altoft@exp:	
   579                           ; 1 bytes @ 0xA
   580                           
   581  007A                     ___lltoft@exp:	
   582                           ; 1 bytes @ 0xA
   583                           
   584  007A                     ___awdiv@dividend:	
   585                           ; 1 bytes @ 0xA
   586                           
   587                           
   588                           ; 2 bytes @ 0xA
   589  007A                     	ds	1
   590  007B                     ??_putch:	
   591  007B                     ?___bmul:	
   592                           ; 0 bytes @ 0xB
   593                           
   594  007B                     putch@c:	
   595                           ; 1 bytes @ 0xB
   596                           
   597  007B                     ___bmul@multiplicand:	
   598                           ; 1 bytes @ 0xB
   599                           
   600  007B                     ___altoft@sign:	
   601                           ; 1 bytes @ 0xB
   602                           
   603                           
   604                           ; 1 bytes @ 0xB
   605  007B                     	ds	1
   606  007C                     ??_fround:	
   607  007C                     ??___bmul:	
   608                           ; 0 bytes @ 0xC
   609                           
   610  007C                     ??___ftsub:	
   611                           ; 0 bytes @ 0xC
   612                           
   613  007C                     ??___awdiv:	
   614                           ; 0 bytes @ 0xC
   615                           
   616                           
   617                           	psect	cstackBANK0
   618  0020                     __pcstackBANK0:	
   619                           ; 0 bytes @ 0xC
   620                           
   621  0020                     ??__div_to_l_:	
   622  0020                     ?___altoft:	
   623                           ; 0 bytes @ 0x0
   624                           
   625  0020                     ?___lltoft:	
   626                           ; 3 bytes @ 0x0
   627                           
   628  0020                     ___bmul@product:	
   629                           ; 3 bytes @ 0x0
   630                           
   631  0020                     ___awdiv@counter:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0020                     ___lldiv@quotient:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0020                     ___altoft@c:	
   638                           ; 4 bytes @ 0x0
   639                           
   640  0020                     ___lltoft@c:	
   641                           ; 4 bytes @ 0x0
   642                           
   643  0020                     __tdiv_to_l_@quot:	
   644                           ; 4 bytes @ 0x0
   645                           
   646                           
   647                           ; 4 bytes @ 0x0
   648  0020                     	ds	1
   649  0021                     ___bmul@multiplier:	
   650  0021                     ___awdiv@sign:	
   651                           ; 1 bytes @ 0x1
   652                           
   653                           
   654                           ; 1 bytes @ 0x1
   655  0021                     	ds	1
   656  0022                     ___awdiv@quotient:	
   657                           
   658                           ; 2 bytes @ 0x2
   659  0022                     	ds	2
   660  0024                     ?___fttol:	
   661  0024                     ___lldiv@counter:	
   662                           ; 4 bytes @ 0x4
   663                           
   664  0024                     __tdiv_to_l_@cntr:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0024                     ___fttol@f1:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 3 bytes @ 0x4
   672  0024                     	ds	1
   673  0025                     ?___llmod:	
   674  0025                     __tdiv_to_l_@exp1:	
   675                           ; 4 bytes @ 0x5
   676                           
   677  0025                     ___llmod@divisor:	
   678                           ; 1 bytes @ 0x5
   679                           
   680                           
   681                           ; 4 bytes @ 0x5
   682  0025                     	ds	3
   683  0028                     ??___fttol:	
   684  0028                     __div_to_l_@quot:	
   685                           ; 0 bytes @ 0x8
   686                           
   687                           
   688                           ; 4 bytes @ 0x8
   689  0028                     	ds	1
   690  0029                     ___llmod@dividend:	
   691                           
   692                           ; 4 bytes @ 0x9
   693  0029                     	ds	2
   694  002B                     ___fttol@sign1:	
   695                           
   696                           ; 1 bytes @ 0xB
   697  002B                     	ds	1
   698  002C                     __div_to_l_@cntr:	
   699  002C                     ___fttol@lval:	
   700                           ; 1 bytes @ 0xC
   701                           
   702                           
   703                           ; 4 bytes @ 0xC
   704  002C                     	ds	1
   705  002D                     __div_to_l_@exp1:	
   706                           
   707                           ; 1 bytes @ 0xD
   708  002D                     	ds	3
   709  0030                     ___fttol@exp1:	
   710                           
   711                           ; 1 bytes @ 0x10
   712  0030                     	ds	1
   713  0031                     ?___ftmul:	
   714  0031                     ___ftmul@f1:	
   715                           ; 3 bytes @ 0x11
   716                           
   717                           
   718                           ; 3 bytes @ 0x11
   719  0031                     	ds	3
   720  0034                     ___ftmul@f2:	
   721                           
   722                           ; 3 bytes @ 0x14
   723  0034                     	ds	3
   724  0037                     ??___ftmul:	
   725                           
   726                           ; 0 bytes @ 0x17
   727  0037                     	ds	3
   728  003A                     ___ftmul@exp:	
   729                           
   730                           ; 1 bytes @ 0x1A
   731  003A                     	ds	1
   732  003B                     ___ftmul@f3_as_product:	
   733                           
   734                           ; 3 bytes @ 0x1B
   735  003B                     	ds	3
   736  003E                     ___ftmul@cntr:	
   737                           
   738                           ; 1 bytes @ 0x1E
   739  003E                     	ds	1
   740  003F                     ___ftmul@sign:	
   741                           
   742                           ; 1 bytes @ 0x1F
   743  003F                     	ds	1
   744  0040                     ?_scale:	
   745  0040                     ?___ftadd:	
   746                           ; 3 bytes @ 0x20
   747                           
   748  0040                     ___ftadd@f1:	
   749                           ; 3 bytes @ 0x20
   750                           
   751                           
   752                           ; 3 bytes @ 0x20
   753  0040                     	ds	3
   754  0043                     ??_scale:	
   755  0043                     ___ftadd@f2:	
   756                           ; 0 bytes @ 0x23
   757                           
   758                           
   759                           ; 3 bytes @ 0x23
   760  0043                     	ds	3
   761  0046                     ??___ftadd:	
   762                           
   763                           ; 0 bytes @ 0x26
   764  0046                     	ds	1
   765  0047                     _scale$4123:	
   766                           
   767                           ; 3 bytes @ 0x27
   768  0047                     	ds	2
   769  0049                     ___ftadd@sign:	
   770                           
   771                           ; 1 bytes @ 0x29
   772  0049                     	ds	1
   773  004A                     scale@scl:	
   774  004A                     ___ftadd@exp2:	
   775                           ; 1 bytes @ 0x2A
   776                           
   777                           
   778                           ; 1 bytes @ 0x2A
   779  004A                     	ds	1
   780  004B                     ___ftadd@exp1:	
   781                           
   782                           ; 1 bytes @ 0x2B
   783  004B                     	ds	1
   784  004C                     ?_fround:	
   785  004C                     ?___ftsub:	
   786                           ; 3 bytes @ 0x2C
   787                           
   788  004C                     ___ftsub@f2:	
   789                           ; 3 bytes @ 0x2C
   790                           
   791                           
   792                           ; 3 bytes @ 0x2C
   793  004C                     	ds	3
   794  004F                     ___ftsub@f1:	
   795  004F                     _fround$4122:	
   796                           ; 3 bytes @ 0x2F
   797                           
   798                           
   799                           ; 3 bytes @ 0x2F
   800  004F                     	ds	3
   801  0052                     _fround$4121:	
   802                           
   803                           ; 3 bytes @ 0x32
   804  0052                     	ds	3
   805  0055                     fround@prec:	
   806                           
   807                           ; 1 bytes @ 0x35
   808  0055                     	ds	1
   809  0056                     ?_printf:	
   810                           
   811                           ; 2 bytes @ 0x36
   812  0056                     	ds	4
   813  005A                     ??_printf:	
   814                           
   815                           ; 0 bytes @ 0x3A
   816  005A                     	ds	5
   817  005F                     ??_main:	
   818                           
   819                           ; 0 bytes @ 0x3F
   820  005F                     	ds	3
   821                           
   822                           	psect	maintext
   823  1672                     __pmaintext:	
   824 ;;Data sizes: Strings 20, constant 118, data 0, bss 14, persistent 0 stack 0
   825 ;;Auto spaces:   Size  Autos    Used
   826 ;; COMMON          14     12      12
   827 ;; BANK0           80     66      80
   828 ;; BANK1           80     25      25
   829 ;; BANK3           96      0       0
   830 ;; BANK2           96      0       0
   831 ;;
   832 ;; Pointer list with targets:
   833 ;; ?___ftpack	float  size(1) Largest target is 3
   834 ;;		 -> t(BANK0[3]), 
   835 ;;
   836 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   837 ;;
   838 ;; ?___llmod	unsigned long  size(1) Largest target is 3
   839 ;;		 -> t(BANK0[3]), 
   840 ;;
   841 ;; ?___ftsub	float  size(1) Largest target is 0
   842 ;;
   843 ;; ?___lltoft	float  size(1) Largest target is 0
   844 ;;
   845 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   846 ;;
   847 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   848 ;;
   849 ;; ?___fttol	long  size(1) Largest target is 3
   850 ;;		 -> t(BANK0[3]), 
   851 ;;
   852 ;; ?___ftadd	float  size(1) Largest target is 3
   853 ;;		 -> t(BANK0[3]), 
   854 ;;
   855 ;; ?___ftneg	float  size(1) Largest target is 3
   856 ;;		 -> t(BANK0[3]), 
   857 ;;
   858 ;; ?___awmod	int  size(2) Largest target is 40
   859 ;;		 -> dpowers(CODE[40]), t(BANK0[3]), 
   860 ;;
   861 ;; ?___awdiv	int  size(1) Largest target is 0
   862 ;;
   863 ;; ?_scale	int  size(1) Largest target is 0
   864 ;;
   865 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   866 ;;
   867 ;; ?_fround	unsigned int  size(1) Largest target is 0
   868 ;;
   869 ;; ?___ftmul	float  size(1) Largest target is 0
   870 ;;
   871 ;; ?___altoft	float  size(1) Largest target is 0
   872 ;;
   873 ;; ?_abs	int  size(1) Largest target is 0
   874 ;;
   875 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   876 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   877 ;;
   878 ;; ?_printf	int  size(1) Largest target is 3
   879 ;;		 -> t(BANK0[3]), 
   880 ;;
   881 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   882 ;;		 -> ?_printf(BANK0[2]), 
   883 ;;
   884 ;; S3164$_cp	PTR const unsigned char  size(1) Largest target is 0
   885 ;;
   886 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   887 ;;
   888 ;;
   889 ;; Critical Paths under _main in COMMON
   890 ;;
   891 ;;   _main->___altoft
   892 ;;   _printf->_putch
   893 ;;   _printf->___awdiv
   894 ;;   _putch->_lcd_putc
   895 ;;   _lcd_putc->_lcd_gotoxy
   896 ;;   _scale->___awdiv
   897 ;;   _scale->___bmul
   898 ;;   _fround->___bmul
   899 ;;   _lcd_gotoxy->_lcd_put_byte
   900 ;;   _lcd_init->_lcd_put_byte
   901 ;;   ___lltoft->___ftpack
   902 ;;   ___altoft->___ftpack
   903 ;;   ___ftmul->___altoft
   904 ;;   ___ftmul->___awdiv
   905 ;;   ___ftmul->___bmul
   906 ;;   ___ftadd->___bmul
   907 ;;   ___llmod->___lldiv
   908 ;;   ___awdiv->___awmod
   909 ;;   ___fttol->___awdiv
   910 ;;   ___fttol->___bmul
   911 ;;   ___lbdiv->___lbmod
   912 ;;   ___bmul->___lbdiv
   913 ;;
   914 ;; Critical Paths under _ngat in COMMON
   915 ;;
   916 ;;   None.
   917 ;;
   918 ;; Critical Paths under _main in BANK0
   919 ;;
   920 ;;   _main->_printf
   921 ;;   _printf->_fround
   922 ;;   ___ftsub->___ftadd
   923 ;;   _scale->___ftmul
   924 ;;   _fround->___ftadd
   925 ;;   ___ftmul->___fttol
   926 ;;   ___ftadd->___ftmul
   927 ;;   ___llmod->___lldiv
   928 ;;   ___fttol->___awdiv
   929 ;;
   930 ;; Critical Paths under _ngat in BANK0
   931 ;;
   932 ;;   None.
   933 ;;
   934 ;; Critical Paths under _main in BANK1
   935 ;;
   936 ;;   _main->_printf
   937 ;;
   938 ;; Critical Paths under _ngat in BANK1
   939 ;;
   940 ;;   None.
   941 ;;
   942 ;; Critical Paths under _main in BANK3
   943 ;;
   944 ;;   None.
   945 ;;
   946 ;; Critical Paths under _ngat in BANK3
   947 ;;
   948 ;;   None.
   949 ;;
   950 ;; Critical Paths under _main in BANK2
   951 ;;
   952 ;;   None.
   953 ;;
   954 ;; Critical Paths under _ngat in BANK2
   955 ;;
   956 ;;   None.
   957 ;;
   958 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   959 ;;
   960 ;;
   961 ;;Call Graph Tables:
   962 ;;
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   965 ;; ---------------------------------------------------------------------------------
   966 ;; (0) _main                                                 3     3      0   12469
   967 ;;                                             63 BANK0      3     3      0
   968 ;;                           _lcd_init
   969 ;;                                _abs
   970 ;;                           ___altoft
   971 ;;                            ___ftmul
   972 ;;                         _lcd_gotoxy
   973 ;;                             _printf
   974 ;; ---------------------------------------------------------------------------------
   975 ;; (1) _printf                                              38    34      4   10964
   976 ;;                                             54 BANK0      9     5      4
   977 ;;                                              0 BANK1     25    25      0
   978 ;;                              _putch
   979 ;;                            _isdigit
   980 ;;                             ___wmul
   981 ;;                             ___ftge
   982 ;;                            ___ftneg
   983 ;;                            ___awdiv
   984 ;;                              _scale
   985 ;;                            ___ftmul
   986 ;;                             _fround
   987 ;;                            ___ftadd
   988 ;;                            ___fttol
   989 ;;                         __div_to_l_
   990 ;;                        __tdiv_to_l_
   991 ;;                           ___lltoft
   992 ;;                            ___ftsub
   993 ;;                            ___lldiv
   994 ;;                            ___llmod
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (2) _putch                                                1     1      0     713
   997 ;;                                             11 COMMON     1     1      0
   998 ;;                           _lcd_putc
   999 ;; ---------------------------------------------------------------------------------
  1000 ;; (3) _lcd_putc                                             1     1      0     691
  1001 ;;                                             10 COMMON     1     1      0
  1002 ;;                       _lcd_put_byte
  1003 ;;                           _lcd_busy
  1004 ;;                         _lcd_gotoxy
  1005 ;;                            _isprint
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (2) ___ftsub                                              6     0      6    1094
  1008 ;;                                             44 BANK0      6     0      6
  1009 ;;                            ___ftadd
  1010 ;;                           ___lltoft (ARG)
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (2) _scale                                               14    11      3    1688
  1013 ;;                                             32 BANK0     11     8      3
  1014 ;;                            ___awmod
  1015 ;;                            ___awdiv
  1016 ;;                            ___ftmul
  1017 ;;                             ___bmul
  1018 ;;                            ___fttol (ARG)
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (2) _fround                                              13    10      3    1215
  1021 ;;                                             44 BANK0     10     7      3
  1022 ;;                            ___lbmod
  1023 ;;                             ___bmul
  1024 ;;                            ___lbdiv
  1025 ;;                            ___ftmul
  1026 ;;                            ___ftadd (ARG)
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1029 ;;                                              7 COMMON     3     2      1
  1030 ;;                       _lcd_put_byte
  1031 ;;                           _lcd_busy
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (1) _lcd_init                                             4     4      0     244
  1034 ;;                                              7 COMMON     3     3      0
  1035 ;;                       _lcd_put_byte
  1036 ;;                           _lcd_busy
  1037 ;; ---------------------------------------------------------------------------------
  1038 ;; (2) ___lltoft                                             5     1      4     278
  1039 ;;                                             10 COMMON     1     1      0
  1040 ;;                                              0 BANK0      4     0      4
  1041 ;;                           ___ftpack
  1042 ;; ---------------------------------------------------------------------------------
  1043 ;; (1) ___altoft                                             6     2      4     347
  1044 ;;                                             10 COMMON     2     2      0
  1045 ;;                                              0 BANK0      4     0      4
  1046 ;;                           ___ftpack
  1047 ;; ---------------------------------------------------------------------------------
  1048 ;; (3) ___ftmul                                             15     9      6     535
  1049 ;;                                             17 BANK0     15     9      6
  1050 ;;                           ___ftpack
  1051 ;;                           ___altoft (ARG)
  1052 ;;                            ___fttol (ARG)
  1053 ;;                            ___awdiv (ARG)
  1054 ;;                            ___awmod (ARG)
  1055 ;;                             ___bmul (ARG)
  1056 ;;                            ___lbdiv (ARG)
  1057 ;;                            ___lbmod (ARG)
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (3) ___ftadd                                             12     6      6    1049
  1060 ;;                                             32 BANK0     12     6      6
  1061 ;;                           ___ftpack
  1062 ;;                            ___lbmod (ARG)
  1063 ;;                             ___bmul (ARG)
  1064 ;;                            ___lbdiv (ARG)
  1065 ;;                            ___ftmul (ARG)
  1066 ;; ---------------------------------------------------------------------------------
  1067 ;; (5) _lcd_busy                                             2     2      0      23
  1068 ;;                                              2 COMMON     2     2      0
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; (5) _lcd_put_byte                                         5     4      1     221
  1071 ;;                                              2 COMMON     5     4      1
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (3) ___awmod                                              6     2      4     296
  1074 ;;                                              2 COMMON     6     2      4
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (2) ___lldiv                                             13     5      8     162
  1077 ;;                                              2 COMMON     8     0      8
  1078 ;;                                              0 BANK0      5     5      0
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (2) ___ftge                                               6     0      6     136
  1081 ;;                                              2 COMMON     6     0      6
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (2) ___ftneg                                              3     0      3      45
  1084 ;;                                              2 COMMON     3     0      3
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (2) ___llmod                                              9     1      8     159
  1087 ;;                                             10 COMMON     1     1      0
  1088 ;;                                              5 BANK0      8     0      8
  1089 ;;                            ___lldiv (ARG)
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (3) ___awdiv                                              8     4      4     300
  1092 ;;                                              8 COMMON     4     0      4
  1093 ;;                                              0 BANK0      4     4      0
  1094 ;;                            ___awmod (ARG)
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (2) ___fttol                                             13     9      4     252
  1097 ;;                                              4 BANK0     13     9      4
  1098 ;;                           ___ftpack (ARG)
  1099 ;;                            ___awmod (ARG)
  1100 ;;                            ___awdiv (ARG)
  1101 ;;                             ___bmul (ARG)
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (4) ___ftpack                                             8     3      5     209
  1104 ;;                                              2 COMMON     8     3      5
  1105 ;; ---------------------------------------------------------------------------------
  1106 ;; (3) ___lbmod                                              5     4      1     159
  1107 ;;                                              2 COMMON     5     4      1
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (3) ___lbdiv                                              4     3      1     162
  1110 ;;                                              7 COMMON     4     3      1
  1111 ;;                            ___lbmod (ARG)
  1112 ;; ---------------------------------------------------------------------------------
  1113 ;; (2) ___wmul                                               6     2      4      92
  1114 ;;                                              2 COMMON     6     2      4
  1115 ;; ---------------------------------------------------------------------------------
  1116 ;; (3) ___bmul                                               3     2      1      68
  1117 ;;                                             11 COMMON     1     0      1
  1118 ;;                                              0 BANK0      2     2      0
  1119 ;;                            ___lbmod (ARG)
  1120 ;;                            ___lbdiv (ARG)
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; (2) __div_to_l_                                          20    14      6     446
  1123 ;;                                              2 COMMON     6     0      6
  1124 ;;                                              0 BANK0     14    14      0
  1125 ;; ---------------------------------------------------------------------------------
  1126 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1127 ;;                                              2 COMMON     9     3      6
  1128 ;;                                              0 BANK0      6     6      0
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (2) _isdigit                                              2     2      0      68
  1131 ;;                                              2 COMMON     2     2      0
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (4) _isprint                                              2     2      0      68
  1134 ;;                                              2 COMMON     2     2      0
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (1) _abs                                                  4     2      2      66
  1137 ;;                                              2 COMMON     4     2      2
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; Estimated maximum stack depth 5
  1140 ;; ---------------------------------------------------------------------------------
  1141 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (6) _ngat                                                 2     2      0       0
  1144 ;;                                              0 COMMON     2     2      0
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; Estimated maximum stack depth 6
  1147 ;; ---------------------------------------------------------------------------------
  1148 ;; Call Graph Graphs:
  1149 ;; _main (ROOT)
  1150 ;;   _lcd_init
  1151 ;;     _lcd_put_byte
  1152 ;;     _lcd_busy
  1153 ;;   _abs
  1154 ;;   ___altoft
  1155 ;;     ___ftpack
  1156 ;;   ___ftmul
  1157 ;;     ___ftpack
  1158 ;;     ___altoft (ARG)
  1159 ;;       ___ftpack
  1160 ;;     ___fttol (ARG)
  1161 ;;       ___ftpack (ARG)
  1162 ;;       ___awmod (ARG)
  1163 ;;       ___awdiv (ARG)
  1164 ;;         ___awmod (ARG)
  1165 ;;       ___bmul (ARG)
  1166 ;;         ___lbmod (ARG)
  1167 ;;         ___lbdiv (ARG)
  1168 ;;           ___lbmod (ARG)
  1169 ;;     ___awdiv (ARG)
  1170 ;;       ___awmod (ARG)
  1171 ;;     ___awmod (ARG)
  1172 ;;     ___bmul (ARG)
  1173 ;;       ___lbmod (ARG)
  1174 ;;       ___lbdiv (ARG)
  1175 ;;         ___lbmod (ARG)
  1176 ;;     ___lbdiv (ARG)
  1177 ;;       ___lbmod (ARG)
  1178 ;;     ___lbmod (ARG)
  1179 ;;   _lcd_gotoxy
  1180 ;;     _lcd_put_byte
  1181 ;;     _lcd_busy
  1182 ;;   _printf
  1183 ;;     _putch
  1184 ;;       _lcd_putc
  1185 ;;         _lcd_put_byte
  1186 ;;         _lcd_busy
  1187 ;;         _lcd_gotoxy
  1188 ;;           _lcd_put_byte
  1189 ;;           _lcd_busy
  1190 ;;         _isprint
  1191 ;;     _isdigit
  1192 ;;     ___wmul
  1193 ;;     ___ftge
  1194 ;;     ___ftneg
  1195 ;;     ___awdiv
  1196 ;;       ___awmod (ARG)
  1197 ;;     _scale
  1198 ;;       ___awmod
  1199 ;;       ___awdiv
  1200 ;;         ___awmod (ARG)
  1201 ;;       ___ftmul
  1202 ;;         ___ftpack
  1203 ;;         ___altoft (ARG)
  1204 ;;           ___ftpack
  1205 ;;         ___fttol (ARG)
  1206 ;;           ___ftpack (ARG)
  1207 ;;           ___awmod (ARG)
  1208 ;;           ___awdiv (ARG)
  1209 ;;             ___awmod (ARG)
  1210 ;;           ___bmul (ARG)
  1211 ;;             ___lbmod (ARG)
  1212 ;;             ___lbdiv (ARG)
  1213 ;;               ___lbmod (ARG)
  1214 ;;         ___awdiv (ARG)
  1215 ;;           ___awmod (ARG)
  1216 ;;         ___awmod (ARG)
  1217 ;;         ___bmul (ARG)
  1218 ;;           ___lbmod (ARG)
  1219 ;;           ___lbdiv (ARG)
  1220 ;;             ___lbmod (ARG)
  1221 ;;         ___lbdiv (ARG)
  1222 ;;           ___lbmod (ARG)
  1223 ;;         ___lbmod (ARG)
  1224 ;;       ___bmul
  1225 ;;         ___lbmod (ARG)
  1226 ;;         ___lbdiv (ARG)
  1227 ;;           ___lbmod (ARG)
  1228 ;;       ___fttol (ARG)
  1229 ;;         ___ftpack (ARG)
  1230 ;;         ___awmod (ARG)
  1231 ;;         ___awdiv (ARG)
  1232 ;;           ___awmod (ARG)
  1233 ;;         ___bmul (ARG)
  1234 ;;           ___lbmod (ARG)
  1235 ;;           ___lbdiv (ARG)
  1236 ;;             ___lbmod (ARG)
  1237 ;;     ___ftmul
  1238 ;;       ___ftpack
  1239 ;;       ___altoft (ARG)
  1240 ;;         ___ftpack
  1241 ;;       ___fttol (ARG)
  1242 ;;         ___ftpack (ARG)
  1243 ;;         ___awmod (ARG)
  1244 ;;         ___awdiv (ARG)
  1245 ;;           ___awmod (ARG)
  1246 ;;         ___bmul (ARG)
  1247 ;;           ___lbmod (ARG)
  1248 ;;           ___lbdiv (ARG)
  1249 ;;             ___lbmod (ARG)
  1250 ;;       ___awdiv (ARG)
  1251 ;;         ___awmod (ARG)
  1252 ;;       ___awmod (ARG)
  1253 ;;       ___bmul (ARG)
  1254 ;;         ___lbmod (ARG)
  1255 ;;         ___lbdiv (ARG)
  1256 ;;           ___lbmod (ARG)
  1257 ;;       ___lbdiv (ARG)
  1258 ;;         ___lbmod (ARG)
  1259 ;;       ___lbmod (ARG)
  1260 ;;     _fround
  1261 ;;       ___lbmod
  1262 ;;       ___bmul
  1263 ;;         ___lbmod (ARG)
  1264 ;;         ___lbdiv (ARG)
  1265 ;;           ___lbmod (ARG)
  1266 ;;       ___lbdiv
  1267 ;;         ___lbmod (ARG)
  1268 ;;       ___ftmul
  1269 ;;         ___ftpack
  1270 ;;         ___altoft (ARG)
  1271 ;;           ___ftpack
  1272 ;;         ___fttol (ARG)
  1273 ;;           ___ftpack (ARG)
  1274 ;;           ___awmod (ARG)
  1275 ;;           ___awdiv (ARG)
  1276 ;;             ___awmod (ARG)
  1277 ;;           ___bmul (ARG)
  1278 ;;             ___lbmod (ARG)
  1279 ;;             ___lbdiv (ARG)
  1280 ;;               ___lbmod (ARG)
  1281 ;;         ___awdiv (ARG)
  1282 ;;           ___awmod (ARG)
  1283 ;;         ___awmod (ARG)
  1284 ;;         ___bmul (ARG)
  1285 ;;           ___lbmod (ARG)
  1286 ;;           ___lbdiv (ARG)
  1287 ;;             ___lbmod (ARG)
  1288 ;;         ___lbdiv (ARG)
  1289 ;;           ___lbmod (ARG)
  1290 ;;         ___lbmod (ARG)
  1291 ;;       ___ftadd (ARG)
  1292 ;;         ___ftpack
  1293 ;;         ___lbmod (ARG)
  1294 ;;         ___bmul (ARG)
  1295 ;;           ___lbmod (ARG)
  1296 ;;           ___lbdiv (ARG)
  1297 ;;             ___lbmod (ARG)
  1298 ;;         ___lbdiv (ARG)
  1299 ;;           ___lbmod (ARG)
  1300 ;;         ___ftmul (ARG)
  1301 ;;           ___ftpack
  1302 ;;           ___altoft (ARG)
  1303 ;;             ___ftpack
  1304 ;;           ___fttol (ARG)
  1305 ;;             ___ftpack (ARG)
  1306 ;;             ___awmod (ARG)
  1307 ;;             ___awdiv (ARG)
  1308 ;;               ___awmod (ARG)
  1309 ;;             ___bmul (ARG)
  1310 ;;               ___lbmod (ARG)
  1311 ;;               ___lbdiv (ARG)
  1312 ;;                 ___lbmod (ARG)
  1313 ;;           ___awdiv (ARG)
  1314 ;;             ___awmod (ARG)
  1315 ;;           ___awmod (ARG)
  1316 ;;           ___bmul (ARG)
  1317 ;;             ___lbmod (ARG)
  1318 ;;             ___lbdiv (ARG)
  1319 ;;               ___lbmod (ARG)
  1320 ;;           ___lbdiv (ARG)
  1321 ;;             ___lbmod (ARG)
  1322 ;;           ___lbmod (ARG)
  1323 ;;     ___ftadd
  1324 ;;       ___ftpack
  1325 ;;       ___lbmod (ARG)
  1326 ;;       ___bmul (ARG)
  1327 ;;         ___lbmod (ARG)
  1328 ;;         ___lbdiv (ARG)
  1329 ;;           ___lbmod (ARG)
  1330 ;;       ___lbdiv (ARG)
  1331 ;;         ___lbmod (ARG)
  1332 ;;       ___ftmul (ARG)
  1333 ;;         ___ftpack
  1334 ;;         ___altoft (ARG)
  1335 ;;           ___ftpack
  1336 ;;         ___fttol (ARG)
  1337 ;;           ___ftpack (ARG)
  1338 ;;           ___awmod (ARG)
  1339 ;;           ___awdiv (ARG)
  1340 ;;             ___awmod (ARG)
  1341 ;;           ___bmul (ARG)
  1342 ;;             ___lbmod (ARG)
  1343 ;;             ___lbdiv (ARG)
  1344 ;;               ___lbmod (ARG)
  1345 ;;         ___awdiv (ARG)
  1346 ;;           ___awmod (ARG)
  1347 ;;         ___awmod (ARG)
  1348 ;;         ___bmul (ARG)
  1349 ;;           ___lbmod (ARG)
  1350 ;;           ___lbdiv (ARG)
  1351 ;;             ___lbmod (ARG)
  1352 ;;         ___lbdiv (ARG)
  1353 ;;           ___lbmod (ARG)
  1354 ;;         ___lbmod (ARG)
  1355 ;;     ___fttol
  1356 ;;       ___ftpack (ARG)
  1357 ;;       ___awmod (ARG)
  1358 ;;       ___awdiv (ARG)
  1359 ;;         ___awmod (ARG)
  1360 ;;       ___bmul (ARG)
  1361 ;;         ___lbmod (ARG)
  1362 ;;         ___lbdiv (ARG)
  1363 ;;           ___lbmod (ARG)
  1364 ;;     __div_to_l_
  1365 ;;     __tdiv_to_l_
  1366 ;;     ___lltoft
  1367 ;;       ___ftpack
  1368 ;;     ___ftsub
  1369 ;;       ___ftadd
  1370 ;;         ___ftpack
  1371 ;;         ___lbmod (ARG)
  1372 ;;         ___bmul (ARG)
  1373 ;;           ___lbmod (ARG)
  1374 ;;           ___lbdiv (ARG)
  1375 ;;             ___lbmod (ARG)
  1376 ;;         ___lbdiv (ARG)
  1377 ;;           ___lbmod (ARG)
  1378 ;;         ___ftmul (ARG)
  1379 ;;           ___ftpack
  1380 ;;           ___altoft (ARG)
  1381 ;;             ___ftpack
  1382 ;;           ___fttol (ARG)
  1383 ;;             ___ftpack (ARG)
  1384 ;;             ___awmod (ARG)
  1385 ;;             ___awdiv (ARG)
  1386 ;;               ___awmod (ARG)
  1387 ;;             ___bmul (ARG)
  1388 ;;               ___lbmod (ARG)
  1389 ;;               ___lbdiv (ARG)
  1390 ;;                 ___lbmod (ARG)
  1391 ;;           ___awdiv (ARG)
  1392 ;;             ___awmod (ARG)
  1393 ;;           ___awmod (ARG)
  1394 ;;           ___bmul (ARG)
  1395 ;;             ___lbmod (ARG)
  1396 ;;             ___lbdiv (ARG)
  1397 ;;               ___lbmod (ARG)
  1398 ;;           ___lbdiv (ARG)
  1399 ;;             ___lbmod (ARG)
  1400 ;;           ___lbmod (ARG)
  1401 ;;       ___lltoft (ARG)
  1402 ;;         ___ftpack
  1403 ;;     ___lldiv
  1404 ;;     ___llmod
  1405 ;;       ___lldiv (ARG)
  1406 ;;
  1407 ;; _ngat (ROOT)
  1408 ;;
  1409 ;; Address spaces:
  1410 ;;Name               Size   Autos  Total    Cost      Usage
  1411 ;;BITCOMMON            E      0       0       0        0.0%
  1412 ;;EEDATA             100      0       0       0        0.0%
  1413 ;;NULL                 0      0       0       0        0.0%
  1414 ;;CODE                 0      0       0       0        0.0%
  1415 ;;COMMON               E      C       C       1       85.7%
  1416 ;;BITSFR0              0      0       0       1        0.0%
  1417 ;;SFR0                 0      0       0       1        0.0%
  1418 ;;BITSFR1              0      0       0       2        0.0%
  1419 ;;SFR1                 0      0       0       2        0.0%
  1420 ;;STACK                0      0       5       2        0.0%
  1421 ;;ABS                  0      0      75       3        0.0%
  1422 ;;BITBANK0            50      0       0       4        0.0%
  1423 ;;BITSFR3              0      0       0       4        0.0%
  1424 ;;SFR3                 0      0       0       4        0.0%
  1425 ;;BANK0               50     42      50       5      100.0%
  1426 ;;BITSFR2              0      0       0       5        0.0%
  1427 ;;SFR2                 0      0       0       5        0.0%
  1428 ;;BITBANK1            50      0       0       6        0.0%
  1429 ;;BANK1               50     19      19       7       31.3%
  1430 ;;BITBANK3            60      0       0       8        0.0%
  1431 ;;BANK3               60      0       0       9        0.0%
  1432 ;;BITBANK2            60      0       0      10        0.0%
  1433 ;;BANK2               60      0       0      11        0.0%
  1434 ;;DATA                 0      0      7A      12        0.0%
  1435                           
  1436                           
  1437 ;; *************** function _main *****************
  1438 ;; Defined at:
  1439 ;;		line 19 in file "D:\TTVXL\Project TTVXL\BT06week11ttvxl\BT06week11ttvxl.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;		None               void
  1446 ;; Registers used:
  1447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 17F/0
  1450 ;;		On exit  : 60/20
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1453 ;;      Params:         0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0
  1455 ;;      Temps:          0       3       0       0       0
  1456 ;;      Totals:         0       3       0       0       0
  1457 ;;Total ram usage:        3 bytes
  1458 ;; Hardware stack levels required when called:    6
  1459 ;; This function calls:
  1460 ;;		_lcd_init
  1461 ;;		_abs
  1462 ;;		___altoft
  1463 ;;		___ftmul
  1464 ;;		_lcd_gotoxy
  1465 ;;		_printf
  1466 ;; This function is called by:
  1467 ;;		Startup code after reset
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470  1672                     _main:	
  1471                           
  1472                           ;BT06week11ttvxl.c: 20: ANSEL = ANSELH = 0;
  1473                           
  1474                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1475  1672  1683               	bsf	3,5	;RP0=1, select bank3
  1476  1673  1703               	bsf	3,6	;RP1=1, select bank3
  1477  1674  0189               	clrf	9	;volatile
  1478  1675  0188               	clrf	8	;volatile
  1479                           
  1480                           ;BT06week11ttvxl.c: 21: lcd_init();
  1481  1676  120A  158A  2300   	fcall	_lcd_init
      +       160A  118A         
  1482                           
  1483                           ;BT06week11ttvxl.c: 22: TRISA4 = 1;
  1484  167B  1683               	bsf	3,5	;RP0=1, select bank1
  1485  167C  1605               	bsf	5,4
  1486                           
  1487                           ;BT06week11ttvxl.c: 23: TRISD = 0x00;
  1488  167D  0188               	clrf	8	;volatile
  1489                           
  1490                           ;BT06week11ttvxl.c: 24: TRISE0 = 0;
  1491  167E  1009               	bcf	9,0
  1492                           
  1493                           ;BT06week11ttvxl.c: 25: TRISE1 = 0;
  1494  167F  1089               	bcf	9,1
  1495                           
  1496                           ;BT06week11ttvxl.c: 26: RE1 =0;
  1497  1680  1283               	bcf	3,5	;RP0=0, select bank0
  1498  1681  1089               	bcf	9,1
  1499                           
  1500                           ;BT06week11ttvxl.c: 29: TMR1GE=0;
  1501  1682  1310               	bcf	16,6
  1502                           
  1503                           ;BT06week11ttvxl.c: 30: TMR1CS=0;
  1504  1683  1090               	bcf	16,1
  1505                           
  1506                           ;BT06week11ttvxl.c: 31: T1SYNC=1;
  1507  1684  1510               	bsf	16,2
  1508                           
  1509                           ;BT06week11ttvxl.c: 32: T1CKPS1=0;T1CKPS0=0;
  1510  1685  1290               	bcf	16,5
  1511  1686  1210               	bcf	16,4
  1512                           
  1513                           ;BT06week11ttvxl.c: 34: TMR1H=0;
  1514  1687  018F               	clrf	15	;volatile
  1515                           
  1516                           ;BT06week11ttvxl.c: 35: TMR1L=0;
  1517  1688  018E               	clrf	14	;volatile
  1518                           
  1519                           ;BT06week11ttvxl.c: 36: TMR1ON=1;
  1520  1689  1410               	bsf	16,0
  1521                           
  1522                           ;BT06week11ttvxl.c: 39: TRISC2 =1;
  1523  168A  1683               	bsf	3,5	;RP0=1, select bank1
  1524  168B  3005               	movlw	5
  1525  168C  1507               	bsf	7,2
  1526                           
  1527                           ;BT06week11ttvxl.c: 40: TRISC1 =1;
  1528  168D  1487               	bsf	7,1
  1529                           
  1530                           ;BT06week11ttvxl.c: 41: CCP1CON = 0b00000101;
  1531  168E  1283               	bcf	3,5	;RP0=0, select bank0
  1532  168F  0097               	movwf	23	;volatile
  1533                           
  1534                           ;BT06week11ttvxl.c: 42: CCP2CON = 0b00000100;
  1535  1690  3004               	movlw	4
  1536  1691  009D               	movwf	29	;volatile
  1537                           
  1538                           ;BT06week11ttvxl.c: 43: CCP1IE=1;
  1539  1692  1683               	bsf	3,5	;RP0=1, select bank1
  1540  1693  150C               	bsf	12,2
  1541                           
  1542                           ;BT06week11ttvxl.c: 44: CCP1IF=0;
  1543  1694  1283               	bcf	3,5	;RP0=0, select bank0
  1544  1695  110C               	bcf	12,2
  1545                           
  1546                           ;BT06week11ttvxl.c: 45: CCP2IE=1;
  1547  1696  1683               	bsf	3,5	;RP0=1, select bank1
  1548  1697  140D               	bsf	13,0
  1549                           
  1550                           ;BT06week11ttvxl.c: 46: CCP2IF=0;
  1551  1698  1283               	bcf	3,5	;RP0=0, select bank0
  1552  1699  100D               	bcf	13,0
  1553                           
  1554                           ;BT06week11ttvxl.c: 47: PEIE=1;
  1555  169A  170B               	bsf	11,6
  1556                           
  1557                           ;BT06week11ttvxl.c: 48: GIE=1;
  1558  169B  178B               	bsf	11,7
  1559  169C                     l7211:	
  1560                           
  1561                           ;BT06week11ttvxl.c: 51: {
  1562                           ;BT06week11ttvxl.c: 53: _delay((unsigned long)((100)*(20000000/4000.0)));
  1563  169C  3003               	movlw	3
  1564  169D  1283               	bcf	3,5	;RP0=0, select bank0
  1565  169E  00E1               	movwf	??_main+2
  1566  169F  308A               	movlw	138
  1567  16A0  00E0               	movwf	??_main+1
  1568  16A1  3056               	movlw	86
  1569  16A2  00DF               	movwf	??_main
  1570  16A3                     u3957:	
  1571  16A3  0BDF               	decfsz	??_main,f
  1572  16A4  2EA3               	goto	u3957
  1573  16A5  0BE0               	decfsz	??_main+1,f
  1574  16A6  2EA3               	goto	u3957
  1575  16A7  0BE1               	decfsz	??_main+2,f
  1576  16A8  2EA3               	goto	u3957
  1577  16A9  2EAA               	nop2
  1578                           
  1579                           ;BT06week11ttvxl.c: 54: RE1=1;
  1580  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  1581  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  1582  16AC  3007               	movlw	7
  1583  16AD  1489               	bsf	9,1
  1584                           
  1585                           ;BT06week11ttvxl.c: 55: _delay((unsigned long)((1)*(20000000/4000.0)));
  1586  16AE  00E0               	movwf	??_main+1
  1587  16AF  307D               	movlw	125
  1588  16B0  00DF               	movwf	??_main
  1589  16B1                     u3967:	
  1590  16B1  0BDF               	decfsz	??_main,f
  1591  16B2  2EB1               	goto	u3967
  1592  16B3  0BE0               	decfsz	??_main+1,f
  1593  16B4  2EB1               	goto	u3967
  1594                           
  1595                           ;BT06week11ttvxl.c: 56: RE1=0;
  1596  16B5  1283               	bcf	3,5	;RP0=0, select bank0
  1597  16B6  1303               	bcf	3,6	;RP1=0, select bank0
  1598  16B7  1089               	bcf	9,1
  1599                           
  1600                           ;BT06week11ttvxl.c: 58: xung = abs(count2-count1);
  1601  16B8  086C               	movf	_count2+1,w
  1602  16B9  00F3               	movwf	?_abs+1
  1603  16BA  086B               	movf	_count2,w
  1604  16BB  00F2               	movwf	?_abs
  1605  16BC  0869               	movf	_count1,w
  1606  16BD  02F2               	subwf	?_abs,f
  1607  16BE  086A               	movf	_count1+1,w
  1608  16BF  1C03               	skipc
  1609  16C0  03F3               	decf	?_abs+1,f
  1610  16C1  02F3               	subwf	?_abs+1,f
  1611  16C2  120A  118A  27C4   	fcall	_abs
      +       160A  118A         
  1612  16C7  0872               	movf	?_abs,w
  1613  16C8  00E2               	movwf	_xung
  1614  16C9  0873               	movf	?_abs+1,w
  1615  16CA  00E3               	movwf	_xung+1
  1616  16CB  3000               	movlw	0
  1617  16CC  1BE3               	btfsc	_xung+1,7
  1618  16CD  30FF               	movlw	255
  1619  16CE  00E4               	movwf	_xung+2
  1620  16CF  00E5               	movwf	_xung+3
  1621                           
  1622                           ;BT06week11ttvxl.c: 59: t = xung*(1.0/5000000.0);
  1623  16D0  30C0               	movlw	192
  1624  16D1  00B1               	movwf	?___ftmul
  1625  16D2  3056               	movlw	86
  1626  16D3  00B2               	movwf	?___ftmul+1
  1627  16D4  3034               	movlw	52
  1628  16D5  00B3               	movwf	?___ftmul+2
  1629  16D6  0865               	movf	_xung+3,w
  1630  16D7  00A3               	movwf	?___altoft+3
  1631  16D8  0864               	movf	_xung+2,w
  1632  16D9  00A2               	movwf	?___altoft+2
  1633  16DA  0863               	movf	_xung+1,w
  1634  16DB  00A1               	movwf	?___altoft+1
  1635  16DC  0862               	movf	_xung,w
  1636  16DD  00A0               	movwf	?___altoft
  1637  16DE  120A  158A  24A8   	fcall	___altoft
      +       160A  118A         
  1638  16E3  0820               	movf	?___altoft,w
  1639  16E4  00B4               	movwf	?___ftmul+3
  1640  16E5  0821               	movf	?___altoft+1,w
  1641  16E6  00B5               	movwf	?___ftmul+4
  1642  16E7  0822               	movf	?___altoft+2,w
  1643  16E8  00B6               	movwf	?___ftmul+5
  1644  16E9  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1645  16EE  0831               	movf	?___ftmul,w
  1646  16EF  00ED               	movwf	_t
  1647  16F0  0832               	movf	?___ftmul+1,w
  1648  16F1  00EE               	movwf	_t+1
  1649  16F2  0833               	movf	?___ftmul+2,w
  1650  16F3  00EF               	movwf	_t+2
  1651                           
  1652                           ;BT06week11ttvxl.c: 60: d = 17000.0*t;
  1653  16F4  30D0               	movlw	208
  1654  16F5  00B1               	movwf	?___ftmul
  1655  16F6  3084               	movlw	132
  1656  16F7  00B2               	movwf	?___ftmul+1
  1657  16F8  3046               	movlw	70
  1658  16F9  00B3               	movwf	?___ftmul+2
  1659  16FA  086D               	movf	_t,w
  1660  16FB  00B4               	movwf	?___ftmul+3
  1661  16FC  086E               	movf	_t+1,w
  1662  16FD  00B5               	movwf	?___ftmul+4
  1663  16FE  086F               	movf	_t+2,w
  1664  16FF  00B6               	movwf	?___ftmul+5
  1665  1700  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1666  1705  0831               	movf	?___ftmul,w
  1667  1706  00E6               	movwf	_d
  1668  1707  0832               	movf	?___ftmul+1,w
  1669  1708  00E7               	movwf	_d+1
  1670  1709  0833               	movf	?___ftmul+2,w
  1671  170A  00E8               	movwf	_d+2
  1672  170B  3000               	movlw	0
  1673                           
  1674                           ;BT06week11ttvxl.c: 61: lcd_gotoxy(0,0);
  1675  170C  01F7               	clrf	?_lcd_gotoxy
  1676  170D  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1677                           
  1678                           ;BT06week11ttvxl.c: 62: printf("xung: %08u",xung);
  1679  1712  0865               	movf	_xung+3,w
  1680  1713  00D9               	movwf	?_printf+3
  1681  1714  0864               	movf	_xung+2,w
  1682  1715  00D8               	movwf	?_printf+2
  1683  1716  0863               	movf	_xung+1,w
  1684  1717  00D7               	movwf	?_printf+1
  1685  1718  0862               	movf	_xung,w
  1686  1719  00D6               	movwf	?_printf
  1687  171A  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1688  171B  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1689  1720  3000               	movlw	0
  1690                           
  1691                           ;BT06week11ttvxl.c: 63: lcd_gotoxy(0,1);
  1692  1721  01F7               	clrf	?_lcd_gotoxy
  1693  1722  0AF7               	incf	?_lcd_gotoxy,f
  1694  1723  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1695                           
  1696                           ;BT06week11ttvxl.c: 64: printf("f: %5.2f",d);
  1697  1728  0866               	movf	_d,w
  1698  1729  00D6               	movwf	?_printf
  1699  172A  0867               	movf	_d+1,w
  1700  172B  00D7               	movwf	?_printf+1
  1701  172C  0868               	movf	_d+2,w
  1702  172D  00D8               	movwf	?_printf+2
  1703  172E  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1704  172F  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1705  1734  2E9C               	goto	l7211
  1706  1735                     __end_of_main:	
  1707                           
  1708                           	psect	text531
  1709  000F                     __ptext531:	
  1710 ;; =============== function _main ends ============
  1711                           
  1712                           
  1713 ;; *************** function _printf *****************
  1714 ;; Defined at:
  1715 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  f               1    wreg     PTR const unsigned char 
  1718 ;;		 -> STR_2(9), STR_1(11), 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1721 ;;		 -> STR_2(9), STR_1(11), 
  1722 ;;  _val            4    8[BANK1 ] struct .
  1723 ;;  fval            3   19[BANK1 ] struct .
  1724 ;;  integ           3    5[BANK1 ] struct .
  1725 ;;  ival            3    0        struct .
  1726 ;;  prec            2   22[BANK1 ] int 
  1727 ;;  width           2   17[BANK1 ] int 
  1728 ;;  exp             2   15[BANK1 ] int 
  1729 ;;  flag            2   13[BANK1 ] unsigned short 
  1730 ;;  c               1   24[BANK1 ] char 
  1731 ;;  ap              1    4[BANK1 ] PTR void [1]
  1732 ;;		 -> ?_printf(2), 
  1733 ;;  d               1    0        unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  2   54[BANK0 ] int 
  1736 ;; Registers used:
  1737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 60/0
  1740 ;;		On exit  : 60/20
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1743 ;;      Params:         0       4       0       0       0
  1744 ;;      Locals:         0       0      25       0       0
  1745 ;;      Temps:          0       5       0       0       0
  1746 ;;      Totals:         0       9      25       0       0
  1747 ;;Total ram usage:       34 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    5
  1750 ;; This function calls:
  1751 ;;		_putch
  1752 ;;		_isdigit
  1753 ;;		___wmul
  1754 ;;		___ftge
  1755 ;;		___ftneg
  1756 ;;		___awdiv
  1757 ;;		_scale
  1758 ;;		___ftmul
  1759 ;;		_fround
  1760 ;;		___ftadd
  1761 ;;		___fttol
  1762 ;;		__div_to_l_
  1763 ;;		__tdiv_to_l_
  1764 ;;		___lltoft
  1765 ;;		___ftsub
  1766 ;;		___lldiv
  1767 ;;		___llmod
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772  000F                     _printf:	
  1773                           
  1774                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1775                           ;printf@f stored from wreg
  1776  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1777  0010  00AC               	movwf	printf@f^(0+128)
  1778  0011  3056               	movlw	?_printf& (0+255)
  1779  0012  00A4               	movwf	printf@ap^(0+128)
  1780  0013                     l7159:	
  1781  0013  2798               	call	PL32	;select bank 1
  1782  0014  082C               	movf	printf@f^(0+128),w
  1783  0015  0AAC               	incf	printf@f^(0+128),f
  1784  0016  0084               	movwf	4
  1785  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1786  001C  00B8               	movwf	printf@c^(0+128)
  1787  001D  08B8               	movf	printf@c^(0+128),f
  1788  001E  1903               	btfsc	3,2
  1789  001F  0008               	return
  1790  0020  3A25               	xorlw	37
  1791  0021  1903               	skipnz
  1792  0022  2828               	goto	l6887
  1793  0023  0838               	movf	printf@c^(0+128),w
  1794  0024  254D  120A  118A   	fcall	_putch
  1795  0027  2813               	goto	l7159
  1796  0028                     l6887:	
  1797  0028  01B1               	clrf	printf@width^(0+128)
  1798  0029  01B2               	clrf	(printf@width+1)^(0+128)
  1799  002A  01AD               	clrf	printf@flag^(0+128)
  1800  002B  01AE               	clrf	(printf@flag+1)^(0+128)
  1801  002C  282F               	goto	l6893
  1802  002D                     l2214:	
  1803  002D  152D               	bsf	printf@flag^(0+128),2
  1804  002E  0AAC               	incf	printf@f^(0+128),f
  1805  002F                     l6893:	
  1806  002F  082C               	movf	printf@f^(0+128),w
  1807  0030  0084               	movwf	4
  1808  0031  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1809                           
  1810                           ; Switch size 1, requested type "space"
  1811                           ; Number of cases is 1, Range of values is 48 to 48
  1812                           ; switch strategies available:
  1813                           ; Name         Instructions Cycles
  1814                           ; simple_byte            4     3 (average)
  1815                           ; direct_byte           14    11 (fixed)
  1816                           ; jumptable            263     9 (fixed)
  1817                           ;	Chosen strategy is simple_byte
  1818  0036  3A30               	xorlw	48	; case 48
  1819  0037  1903               	skipnz
  1820  0038  282D               	goto	l2214
  1821  0039  283A               	goto	l6895
  1822  003A                     l6895:	
  1823  003A  082C               	movf	printf@f^(0+128),w
  1824  003B  0084               	movwf	4
  1825  003C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1826  0041  25BB  120A  118A   	fcall	_isdigit
  1827  0044  1C03               	btfss	3,0
  1828  0045  286A               	goto	l6905
  1829  0046  01B1               	clrf	printf@width^(0+128)
  1830  0047  01B2               	clrf	(printf@width+1)^(0+128)
  1831  0048                     l6899:	
  1832  0048  0832               	movf	(printf@width+1)^(0+128),w
  1833  0049  00F3               	movwf	?___wmul+1
  1834  004A  0831               	movf	printf@width^(0+128),w
  1835  004B  00F2               	movwf	?___wmul
  1836  004C  300A               	movlw	10
  1837  004D  00F4               	movwf	?___wmul+2
  1838  004E  01F5               	clrf	?___wmul+3
  1839  004F  25C9               	fcall	___wmul
  1840  0050  082C               	movf	printf@f^(0+128),w
  1841  0051  0084               	movwf	4
  1842  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1843  0057  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1844  005A  00B1               	movwf	printf@width^(0+128)
  1845  005B  2783               	fcall	PL27	;call to abstracted procedure
  1846  005C  00B2               	movwf	(printf@width+1)^(0+128)
  1847  005D  0AAC               	incf	printf@f^(0+128),f
  1848  005E  082C               	movf	printf@f^(0+128),w
  1849  005F  0084               	movwf	4
  1850  0060  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1851  0065  25BB  120A  118A   	fcall	_isdigit
  1852  0068  1803               	btfsc	3,0
  1853  0069  2848               	goto	l6899
  1854  006A                     l6905:	
  1855  006A  082C               	movf	printf@f^(0+128),w
  1856  006B  0084               	movwf	4
  1857  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1858  0071  3A2E               	xorlw	46
  1859  0072  1D03               	skipz
  1860  0073  289D               	goto	l6919
  1861  0074  172E               	bsf	(printf@flag^(0+128)+1),6
  1862  0075  0AAC               	incf	printf@f^(0+128),f
  1863  0076  01B6               	clrf	printf@prec^(0+128)
  1864  0077  01B7               	clrf	(printf@prec+1)^(0+128)
  1865  0078                     l6917:	
  1866  0078  082C               	movf	printf@f^(0+128),w
  1867  0079  0084               	movwf	4
  1868  007A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1869  007F  25BB  120A  118A   	fcall	_isdigit
  1870  0082  1C03               	btfss	3,0
  1871  0083  28A6               	goto	l6927
  1872  0084  0837               	movf	(printf@prec+1)^(0+128),w
  1873  0085  00F3               	movwf	?___wmul+1
  1874  0086  0836               	movf	printf@prec^(0+128),w
  1875  0087  00F2               	movwf	?___wmul
  1876  0088  300A               	movlw	10
  1877  0089  00F4               	movwf	?___wmul+2
  1878  008A  01F5               	clrf	?___wmul+3
  1879  008B  25C9               	fcall	___wmul
  1880  008C  082C               	movf	printf@f^(0+128),w
  1881  008D  0084               	movwf	4
  1882  008E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1883  0093  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1884  0096  00B6               	movwf	printf@prec^(0+128)
  1885  0097  2783  120A  118A   	fcall	PL27	;call to abstracted procedure
  1886  009A  00B7               	movwf	(printf@prec+1)^(0+128)
  1887  009B  0AAC               	incf	printf@f^(0+128),f
  1888  009C  2878               	goto	l6917
  1889  009D                     l6919:	
  1890  009D  01B6               	clrf	printf@prec^(0+128)
  1891  009E  01B7               	clrf	(printf@prec+1)^(0+128)
  1892  009F  162E               	bsf	(printf@flag^(0+128)+1),4
  1893  00A0  28A6               	goto	l6927
  1894  00A1                     l2229:	
  1895  00A1  152E               	bsf	(printf@flag^(0+128)+1),2
  1896  00A2  28B9               	goto	l6929
  1897  00A3                     l6923:	
  1898  00A3  30C0               	movlw	192
  1899  00A4  04AD               	iorwf	printf@flag^(0+128),f
  1900  00A5  28B9               	goto	l6929
  1901  00A6                     l6927:	
  1902  00A6  082C               	movf	printf@f^(0+128),w
  1903  00A7  0AAC               	incf	printf@f^(0+128),f
  1904  00A8  0084               	movwf	4
  1905  00A9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1906  00AE  00B8               	movwf	printf@c^(0+128)
  1907                           
  1908                           ; Switch size 1, requested type "space"
  1909                           ; Number of cases is 3, Range of values is 0 to 117
  1910                           ; switch strategies available:
  1911                           ; Name         Instructions Cycles
  1912                           ; simple_byte           10     6 (average)
  1913                           ; jumptable            260     6 (fixed)
  1914                           ; rangetable           122     6 (fixed)
  1915                           ; spacedrange          242     9 (fixed)
  1916                           ; locatedrange         118     3 (fixed)
  1917                           ;	Chosen strategy is simple_byte
  1918  00AF  3A00               	xorlw	0	; case 0
  1919  00B0  1903               	skipnz
  1920  00B1  2D4C               	goto	l2308
  1921  00B2  3A66               	xorlw	102	; case 102
  1922  00B3  1903               	skipnz
  1923  00B4  28A1               	goto	l2229
  1924  00B5  3A13               	xorlw	19	; case 117
  1925  00B6  1903               	skipnz
  1926  00B7  28A3               	goto	l6923
  1927  00B8  2813               	goto	l7159
  1928  00B9                     l6929:	
  1929  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1930  00BA  3007               	movlw	7
  1931  00BB  01DA               	clrf	??_printf
  1932  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1933  00BD  052E               	andwf	(printf@flag+1)^(0+128),w
  1934  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1935  00BF  00DB               	movwf	??_printf+1
  1936  00C0  045A               	iorwf	??_printf,w
  1937  00C1  1903               	skipnz
  1938  00C2  2C0F               	goto	l7081
  1939  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1940  00C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  1941  00C5  28C9               	goto	l6935
  1942  00C6  3006               	movlw	6
  1943  00C7  00B6               	movwf	printf@prec^(0+128)
  1944  00C8  01B7               	clrf	(printf@prec+1)^(0+128)
  1945  00C9                     l6935:	
  1946  00C9  0824               	movf	printf@ap^(0+128),w
  1947  00CA  0084               	movwf	4
  1948  00CB  1383               	bcf	3,7	;select IRP bank0
  1949  00CC  0800               	movf	0,w
  1950  00CD  00B3               	movwf	printf@fval^(0+128)
  1951  00CE  0A84               	incf	4,f
  1952  00CF  0800               	movf	0,w
  1953  00D0  00B4               	movwf	(printf@fval+1)^(0+128)
  1954  00D1  0A84               	incf	4,f
  1955  00D2  0800               	movf	0,w
  1956  00D3  00B5               	movwf	(printf@fval+2)^(0+128)
  1957  00D4  3003               	movlw	3
  1958  00D5  07A4               	addwf	printf@ap^(0+128),f
  1959  00D6  0833               	movf	printf@fval^(0+128),w
  1960  00D7  00F2               	movwf	?___ftge
  1961  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  1962  00D9  00F3               	movwf	?___ftge+1
  1963  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  1964  00DB  00F4               	movwf	?___ftge+2
  1965  00DC  01F5               	clrf	?___ftge+3
  1966  00DD  01F6               	clrf	?___ftge+4
  1967  00DE  01F7               	clrf	?___ftge+5
  1968  00DF  258F  120A  118A   	fcall	___ftge
  1969  00E2  1803               	btfsc	3,0
  1970  00E3  28F5               	goto	l6945
  1971  00E4  0833               	movf	printf@fval^(0+128),w
  1972  00E5  00F2               	movwf	?___ftneg
  1973  00E6  0834               	movf	(printf@fval+1)^(0+128),w
  1974  00E7  00F3               	movwf	?___ftneg+1
  1975  00E8  0835               	movf	(printf@fval+2)^(0+128),w
  1976  00E9  00F4               	movwf	?___ftneg+2
  1977  00EA  26FE  120A  118A   	fcall	___ftneg
  1978  00ED  0872               	movf	?___ftneg,w
  1979  00EE  00B3               	movwf	printf@fval^(0+128)
  1980  00EF  0873               	movf	?___ftneg+1,w
  1981  00F0  00B4               	movwf	(printf@fval+1)^(0+128)
  1982  00F1  0874               	movf	?___ftneg+2,w
  1983  00F2  00B5               	movwf	(printf@fval+2)^(0+128)
  1984  00F3  3003               	movlw	3
  1985  00F4  04AD               	iorwf	printf@flag^(0+128),f
  1986  00F5                     l6945:	
  1987  00F5  01AF               	clrf	printf@exp^(0+128)
  1988  00F6  01B0               	clrf	(printf@exp+1)^(0+128)
  1989  00F7  0835               	movf	(printf@fval+2)^(0+128),w
  1990  00F8  0434               	iorwf	(printf@fval+1)^(0+128),w
  1991  00F9  0433               	iorwf	printf@fval^(0+128),w
  1992  00FA  1903               	skipnz
  1993  00FB  298C               	goto	l6977
  1994  00FC  30B3               	movlw	low printf@fval
  1995  00FD  0084               	movwf	4
  1996  00FE  2791  120A  118A   	fcall	PL31	;call to abstracted procedure
  1997  0101  0A84               	incf	4,f
  1998  0102  0800               	movf	0,w
  1999  0103  00DC               	movwf	??_printf+2
  2000  0104  0A84               	incf	4,f
  2001  0105  0800               	movf	0,w
  2002  0106  00DD               	movwf	??_printf+3
  2003  0107  300F               	movlw	15
  2004  0108                     u3515:	
  2005  0108  1003               	clrc
  2006  0109  0CDD               	rrf	??_printf+3,f
  2007  010A  0CDC               	rrf	??_printf+2,f
  2008  010B  0CDB               	rrf	??_printf+1,f
  2009  010C  0CDA               	rrf	??_printf,f
  2010  010D  3EFF               	addlw	-1
  2011  010E  1D03               	skipz
  2012  010F  2908               	goto	u3515
  2013  0110  085B               	movf	??_printf+1,w
  2014  0111  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0112  00B0               	movwf	(printf@exp+1)^(0+128)
  2016  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0114  085A               	movf	??_printf,w
  2018  0115  1683               	bsf	3,5	;RP0=1, select bank1
  2019  0116  00AF               	movwf	printf@exp^(0+128)
  2020  0117  3082               	movlw	-126
  2021  0118  01B0               	clrf	(printf@exp+1)^(0+128)
  2022  0119  07AF               	addwf	printf@exp^(0+128),f
  2023  011A  1C03               	skipc
  2024  011B  03B0               	decf	(printf@exp+1)^(0+128),f
  2025  011C  30FF               	movlw	-1
  2026  011D  07AF               	addwf	printf@exp^(0+128),f
  2027  011E  1C03               	skipc
  2028  011F  03B0               	decf	(printf@exp+1)^(0+128),f
  2029  0120  3003               	movlw	3
  2030  0121  00F2               	movwf	?___wmul
  2031  0122  01F3               	clrf	?___wmul+1
  2032  0123  0830               	movf	(printf@exp+1)^(0+128),w
  2033  0124  00F5               	movwf	?___wmul+3
  2034  0125  082F               	movf	printf@exp^(0+128),w
  2035  0126  00F4               	movwf	?___wmul+2
  2036  0127  25C9               	fcall	___wmul
  2037  0128  0873               	movf	?___wmul+1,w
  2038  0129  00B0               	movwf	(printf@exp+1)^(0+128)
  2039  012A  0872               	movf	?___wmul,w
  2040  012B  00AF               	movwf	printf@exp^(0+128)
  2041  012C  300A               	movlw	10
  2042  012D  00F8               	movwf	?___awdiv
  2043  012E  01F9               	clrf	?___awdiv+1
  2044  012F  0830               	movf	(printf@exp+1)^(0+128),w
  2045  0130  00FB               	movwf	?___awdiv+3
  2046  0131  082F               	movf	printf@exp^(0+128),w
  2047  0132  00FA               	movwf	?___awdiv+2
  2048  0133  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  2049  0138  0879               	movf	?___awdiv+1,w
  2050  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2051  013A  00B0               	movwf	(printf@exp+1)^(0+128)
  2052  013B  0878               	movf	?___awdiv,w
  2053  013C  00AF               	movwf	printf@exp^(0+128)
  2054  013D  1FB0               	btfss	(printf@exp+1)^(0+128),7
  2055  013E  2943               	goto	l6965
  2056  013F  30FF               	movlw	-1
  2057  0140  07AF               	addwf	printf@exp^(0+128),f
  2058  0141  1C03               	skipc
  2059  0142  03B0               	decf	(printf@exp+1)^(0+128),f
  2060  0143                     l6965:	
  2061  0143  032F               	decf	printf@exp^(0+128),w
  2062  0144  3AFF               	xorlw	255
  2063  0145  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2064  014A  2731  120A  118A   	fcall	PL7	;call to abstracted procedure
  2065  014D  275E               	fcall	PL16	;call to abstracted procedure
  2066  014E  1683               	bsf	3,5	;RP0=1, select bank1
  2067  014F  0825               	movf	printf@integ^(0+128),w
  2068  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0151  00B4               	movwf	?___ftmul+3
  2070  0152  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0153  0826               	movf	(printf@integ+1)^(0+128),w
  2072  0154  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0155  00B5               	movwf	?___ftmul+4
  2074  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2075  0157  0827               	movf	(printf@integ+2)^(0+128),w
  2076  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0159  00B6               	movwf	?___ftmul+5
  2078  015A  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2079  015F  0831               	movf	?___ftmul,w
  2080  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0161  00A5               	movwf	printf@integ^(0+128)
  2082  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2083  0163  0832               	movf	?___ftmul+1,w
  2084  0164  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0165  00A6               	movwf	(printf@integ+1)^(0+128)
  2086  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0167  0833               	movf	?___ftmul+2,w
  2088  0168  1683               	bsf	3,5	;RP0=1, select bank1
  2089  0169  00A7               	movwf	(printf@integ+2)^(0+128)
  2090  016A  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2091  016D  3080               	movlw	128
  2092  016E  01F5               	clrf	?___ftge+3
  2093  016F  00F6               	movwf	?___ftge+4
  2094  0170  303F               	movlw	63
  2095  0171  00F7               	movwf	?___ftge+5
  2096  0172  258F  120A  118A   	fcall	___ftge
  2097  0175  1803               	btfsc	3,0
  2098  0176  297C               	goto	l6973
  2099  0177  30FF               	movlw	-1
  2100  0178  07AF               	addwf	printf@exp^(0+128),f
  2101  0179  1C03               	skipc
  2102  017A  03B0               	decf	(printf@exp+1)^(0+128),f
  2103  017B  298C               	goto	l6977
  2104  017C                     l6973:	
  2105  017C  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2106  017F  3020               	movlw	32
  2107  0180  01F5               	clrf	?___ftge+3
  2108  0181  00F6               	movwf	?___ftge+4
  2109  0182  3041               	movlw	65
  2110  0183  00F7               	movwf	?___ftge+5
  2111  0184  258F  120A  118A   	fcall	___ftge
  2112  0187  1C03               	btfss	3,0
  2113  0188  298C               	goto	l6977
  2114  0189  0AAF               	incf	printf@exp^(0+128),f
  2115  018A  1903               	skipnz
  2116  018B  0AB0               	incf	(printf@exp+1)^(0+128),f
  2117  018C                     l6977:	
  2118  018C  0837               	movf	(printf@prec+1)^(0+128),w
  2119  018D  3A80               	xorlw	128
  2120  018E  00FF               	movwf	127
  2121  018F  3080               	movlw	128
  2122  0190  027F               	subwf	127,w
  2123  0191  1D03               	skipz
  2124  0192  2995               	goto	u3555
  2125  0193  300D               	movlw	13
  2126  0194  0236               	subwf	printf@prec^(0+128),w
  2127  0195                     u3555:	
  2128  0195  1803               	skipnc
  2129  0196  29C0               	goto	l6981
  2130  0197  2798               	call	PL32	;select bank 1
  2131  0198  0836               	movf	printf@prec^(0+128),w
  2132  0199  120A  158A  2167   	fcall	_fround
      +       120A  118A         
  2133  019E  084C               	movf	?_fround,w
  2134  019F  00C0               	movwf	?___ftadd
  2135  01A0  084D               	movf	?_fround+1,w
  2136  01A1  00C1               	movwf	?___ftadd+1
  2137  01A2  084E               	movf	?_fround+2,w
  2138  01A3  00C2               	movwf	?___ftadd+2
  2139  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2140  01A5  0833               	movf	printf@fval^(0+128),w
  2141  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2142  01A7  00C3               	movwf	?___ftadd+3
  2143  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2144  01A9  0834               	movf	(printf@fval+1)^(0+128),w
  2145  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2146  01AB  00C4               	movwf	?___ftadd+4
  2147  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2148  01AD  0835               	movf	(printf@fval+2)^(0+128),w
  2149  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2150  01AF  00C5               	movwf	?___ftadd+5
  2151  01B0  120A  158A  20A5   	fcall	___ftadd
      +       120A  118A         
  2152  01B5  0840               	movf	?___ftadd,w
  2153  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2154  01B7  00B3               	movwf	printf@fval^(0+128)
  2155  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2156  01B9  0841               	movf	?___ftadd+1,w
  2157  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2158  01BB  00B4               	movwf	(printf@fval+1)^(0+128)
  2159  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2160  01BD  0842               	movf	?___ftadd+2,w
  2161  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2162  01BF  00B5               	movwf	(printf@fval+2)^(0+128)
  2163  01C0                     l6981:	
  2164  01C0  2798               	call	PL32	;select bank 1
  2165  01C1  0830               	movf	(printf@exp+1)^(0+128),w
  2166  01C2  3A80               	xorlw	128
  2167  01C3  00FF               	movwf	127
  2168  01C4  3080               	movlw	128
  2169  01C5  027F               	subwf	127,w
  2170  01C6  1D03               	skipz
  2171  01C7  29CA               	goto	u3565
  2172  01C8  300A               	movlw	10
  2173  01C9  022F               	subwf	printf@exp^(0+128),w
  2174  01CA                     u3565:	
  2175  01CA  1803               	skipnc
  2176  01CB  29EB               	goto	l6989
  2177  01CC  2798               	call	PL32	;select bank 1
  2178  01CD  0835               	movf	(printf@fval+2)^(0+128),w
  2179  01CE  0434               	iorwf	(printf@fval+1)^(0+128),w
  2180  01CF  0433               	iorwf	printf@fval^(0+128),w
  2181  01D0  1903               	skipnz
  2182  01D1  2A2C               	goto	l7005
  2183  01D2  0833               	movf	printf@fval^(0+128),w
  2184  01D3  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2185  01D6  25E2  120A  118A   	fcall	___fttol
  2186  01D9  0827               	movf	?___fttol+3,w
  2187  01DA  0426               	iorwf	?___fttol+2,w
  2188  01DB  0425               	iorwf	?___fttol+1,w
  2189  01DC  0424               	iorwf	?___fttol,w
  2190  01DD  1D03               	skipz
  2191  01DE  2A2C               	goto	l7005
  2192  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2193  01E0  0830               	movf	(printf@exp+1)^(0+128),w
  2194  01E1  3A80               	xorlw	128
  2195  01E2  00FF               	movwf	127
  2196  01E3  3080               	movlw	128
  2197  01E4  027F               	subwf	127,w
  2198  01E5  1D03               	skipz
  2199  01E6  29E9               	goto	u3595
  2200  01E7  3002               	movlw	2
  2201  01E8  022F               	subwf	printf@exp^(0+128),w
  2202  01E9                     u3595:	
  2203  01E9  1C03               	skipc
  2204  01EA  2A2C               	goto	l7005
  2205  01EB                     l6989:	
  2206  01EB  2798               	call	PL32	;select bank 1
  2207  01EC  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2208  01EF  3070               	movlw	112
  2209  01F0  00F5               	movwf	?___ftge+3
  2210  01F1  3089               	movlw	137
  2211  01F2  00F6               	movwf	?___ftge+4
  2212  01F3  3040               	movlw	64
  2213  01F4  00F7               	movwf	?___ftge+5
  2214  01F5  258F  120A  118A   	fcall	___ftge
  2215  01F8  1803               	btfsc	3,0
  2216  01F9  29FC               	goto	l6993
  2217  01FA  30F7               	movlw	-9
  2218  01FB  29FD               	goto	L1
  2219  01FC                     l6993:	
  2220  01FC  30F8               	movlw	-8
  2221  01FD                     L1:	
  2222  01FD  07AF               	addwf	printf@exp^(0+128),f
  2223  01FE  1C03               	skipc
  2224  01FF  03B0               	decf	(printf@exp+1)^(0+128),f
  2225  0200  082F               	movf	printf@exp^(0+128),w
  2226  0201  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2227  0206  2731  120A  118A   	fcall	PL7	;call to abstracted procedure
  2228  0209  00F2               	movwf	?__tdiv_to_l_
  2229  020A  0834               	movf	(printf@fval+1)^(0+128),w
  2230  020B  00F3               	movwf	?__tdiv_to_l_+1
  2231  020C  0835               	movf	(printf@fval+2)^(0+128),w
  2232  020D  00F4               	movwf	?__tdiv_to_l_+2
  2233  020E  0825               	movf	printf@integ^(0+128),w
  2234  020F  00F5               	movwf	?__tdiv_to_l_+3
  2235  0210  0826               	movf	(printf@integ+1)^(0+128),w
  2236  0211  00F6               	movwf	?__tdiv_to_l_+4
  2237  0212  0827               	movf	(printf@integ+2)^(0+128),w
  2238  0213  00F7               	movwf	?__tdiv_to_l_+5
  2239  0214  2686  120A  118A   	fcall	__tdiv_to_l_
  2240  0217  0875               	movf	?__tdiv_to_l_+3,w
  2241  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0219  00A3               	movwf	(_printf$3175+3)^(0+128)
  2243  021A  0874               	movf	?__tdiv_to_l_+2,w
  2244  021B  00A2               	movwf	(_printf$3175+2)^(0+128)
  2245  021C  0873               	movf	?__tdiv_to_l_+1,w
  2246  021D  00A1               	movwf	(_printf$3175+1)^(0+128)
  2247  021E  0872               	movf	?__tdiv_to_l_,w
  2248  021F  00A0               	movwf	_printf$3175^(0+128)
  2249  0220  0823               	movf	(_printf$3175+3)^(0+128),w
  2250  0221  00AB               	movwf	(printf@_val+3)^(0+128)
  2251  0222  0822               	movf	(_printf$3175+2)^(0+128),w
  2252  0223  00AA               	movwf	(printf@_val+2)^(0+128)
  2253  0224  0821               	movf	(_printf$3175+1)^(0+128),w
  2254  0225  00A9               	movwf	(printf@_val+1)^(0+128)
  2255  0226  0820               	movf	_printf$3175^(0+128),w
  2256  0227  00A8               	movwf	printf@_val^(0+128)
  2257  0228  01B3               	clrf	printf@fval^(0+128)
  2258  0229  01B4               	clrf	(printf@fval+1)^(0+128)
  2259  022A  01B5               	clrf	(printf@fval+2)^(0+128)
  2260  022B  2A6F               	goto	l7009
  2261  022C                     l7005:	
  2262  022C  2798               	call	PL32	;select bank 1
  2263  022D  0833               	movf	printf@fval^(0+128),w
  2264  022E  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2265  0231  25E2  120A  118A   	fcall	___fttol
  2266  0234  2723               	fcall	PL6	;call to abstracted procedure
  2267  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2268  0236  00A8               	movwf	printf@_val^(0+128)
  2269  0237  082B               	movf	(printf@_val+3)^(0+128),w
  2270  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0239  00A3               	movwf	?___lltoft+3
  2272  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2273  023B  082A               	movf	(printf@_val+2)^(0+128),w
  2274  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2275  023D  00A2               	movwf	?___lltoft+2
  2276  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2277  023F  0829               	movf	(printf@_val+1)^(0+128),w
  2278  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0241  00A1               	movwf	?___lltoft+1
  2280  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0243  0828               	movf	printf@_val^(0+128),w
  2282  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0245  00A0               	movwf	?___lltoft
  2284  0246  120A  158A  248A   	fcall	___lltoft
      +       120A  118A         
  2285  024B  0820               	movf	?___lltoft,w
  2286  024C  00CC               	movwf	?___ftsub
  2287  024D  0821               	movf	?___lltoft+1,w
  2288  024E  00CD               	movwf	?___ftsub+1
  2289  024F  0822               	movf	?___lltoft+2,w
  2290  0250  00CE               	movwf	?___ftsub+2
  2291  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0252  0833               	movf	printf@fval^(0+128),w
  2293  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0254  00CF               	movwf	?___ftsub+3
  2295  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2296  0256  0834               	movf	(printf@fval+1)^(0+128),w
  2297  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2298  0258  00D0               	movwf	?___ftsub+4
  2299  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2300  025A  0835               	movf	(printf@fval+2)^(0+128),w
  2301  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2302  025C  00D1               	movwf	?___ftsub+5
  2303  025D  120A  158A  208F   	fcall	___ftsub
      +       120A  118A         
  2304  0262  084C               	movf	?___ftsub,w
  2305  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2306  0264  00B3               	movwf	printf@fval^(0+128)
  2307  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0266  084D               	movf	?___ftsub+1,w
  2309  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2310  0268  00B4               	movwf	(printf@fval+1)^(0+128)
  2311  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2312  026A  084E               	movf	?___ftsub+2,w
  2313  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2314  026C  00B5               	movwf	(printf@fval+2)^(0+128)
  2315  026D  01AF               	clrf	printf@exp^(0+128)
  2316  026E  01B0               	clrf	(printf@exp+1)^(0+128)
  2317  026F                     l7009:	
  2318  026F  01B8               	clrf	printf@c^(0+128)
  2319  0270  0AB8               	incf	printf@c^(0+128),f
  2320  0271                     l7015:	
  2321  0271  2706               	fcall	PL2	;call to abstracted procedure
  2322  0272  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2323  0277  00DB               	movwf	??_printf+1
  2324  0278  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2325  027D  00DC               	movwf	??_printf+2
  2326  027E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2327  0283  00DD               	movwf	??_printf+3
  2328  0284  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2329  0289  00DE               	movwf	??_printf+4
  2330  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2331  028B  022B               	subwf	(printf@_val+3)^(0+128),w
  2332  028C  1D03               	skipz
  2333  028D  2A9E               	goto	u3615
  2334  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2335  028F  085D               	movf	??_printf+3,w
  2336  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2337  0291  022A               	subwf	(printf@_val+2)^(0+128),w
  2338  0292  1D03               	skipz
  2339  0293  2A9E               	goto	u3615
  2340  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2341  0295  085C               	movf	??_printf+2,w
  2342  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0297  0229               	subwf	(printf@_val+1)^(0+128),w
  2344  0298  1D03               	skipz
  2345  0299  2A9E               	goto	u3615
  2346  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2347  029B  085B               	movf	??_printf+1,w
  2348  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2349  029D  0228               	subwf	printf@_val^(0+128),w
  2350  029E                     u3615:	
  2351  029E  1C03               	btfss	3,0
  2352  029F  2AA5               	goto	l7023
  2353  02A0  0AB8               	incf	printf@c^(0+128),f
  2354  02A1  0838               	movf	printf@c^(0+128),w
  2355  02A2  3A0A               	xorlw	10
  2356  02A3  1D03               	skipz
  2357  02A4  2A71               	goto	l7015
  2358  02A5                     l7023:	
  2359  02A5  0836               	movf	printf@prec^(0+128),w
  2360  02A6  0738               	addwf	printf@c^(0+128),w
  2361  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2362  02A8  00DA               	movwf	??_printf
  2363  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2364  02AA  0837               	movf	(printf@prec+1)^(0+128),w
  2365  02AB  1803               	skipnc
  2366  02AC  0A37               	incf	(printf@prec+1)^(0+128),w
  2367  02AD  1BB8               	btfsc	printf@c^(0+128),7
  2368  02AE  3EFF               	addlw	255
  2369  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2370  02B0  00DB               	movwf	??_printf+1
  2371  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2372  02B2  082F               	movf	printf@exp^(0+128),w
  2373  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2374  02B4  075A               	addwf	??_printf,w
  2375  02B5  00DC               	movwf	??_printf+2
  2376  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2377  02B7  0830               	movf	(printf@exp+1)^(0+128),w
  2378  02B8  1803               	skipnc
  2379  02B9  0A30               	incf	(printf@exp+1)^(0+128),w
  2380  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2381  02BB  075B               	addwf	??_printf+1,w
  2382  02BC  00DD               	movwf	??_printf+3
  2383  02BD  085C               	movf	??_printf+2,w
  2384  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2385  02BF  02B1               	subwf	printf@width^(0+128),f
  2386  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2387  02C1  085D               	movf	??_printf+3,w
  2388  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2389  02C3  1C03               	skipc
  2390  02C4  03B2               	decf	(printf@width+1)^(0+128),f
  2391  02C5  02B2               	subwf	(printf@width+1)^(0+128),f
  2392  02C6  0837               	movf	(printf@prec+1)^(0+128),w
  2393  02C7  0436               	iorwf	printf@prec^(0+128),w
  2394  02C8  1903               	skipnz
  2395  02C9  2ACE               	goto	l7029
  2396  02CA  30FF               	movlw	-1
  2397  02CB  07B1               	addwf	printf@width^(0+128),f
  2398  02CC  1C03               	skipc
  2399  02CD  03B2               	decf	(printf@width+1)^(0+128),f
  2400  02CE                     l7029:	
  2401  02CE  082D               	movf	printf@flag^(0+128),w
  2402  02CF  3903               	andlw	3
  2403  02D0  1903               	btfsc	3,2
  2404  02D1  2AD6               	goto	l7033
  2405  02D2  30FF               	movlw	-1
  2406  02D3  07B1               	addwf	printf@width^(0+128),f
  2407  02D4  1C03               	skipc
  2408  02D5  03B2               	decf	(printf@width+1)^(0+128),f
  2409  02D6                     l7033:	
  2410  02D6  192D               	btfsc	printf@flag^(0+128),2
  2411  02D7  2AE2               	goto	l7041
  2412  02D8  2AF7               	goto	l7047
  2413  02D9                     l7037:	
  2414  02D9  3030               	movlw	48
  2415  02DA  254D  120A  118A   	fcall	_putch
  2416  02DD  30FF               	movlw	-1
  2417  02DE  2798               	call	PL32	;select bank 1
  2418  02DF  07B1               	addwf	printf@width^(0+128),f
  2419  02E0  1C03               	skipc
  2420  02E1  03B2               	decf	(printf@width+1)^(0+128),f
  2421  02E2                     l7041:	
  2422  02E2  0832               	movf	(printf@width+1)^(0+128),w
  2423  02E3  3A80               	xorlw	128
  2424  02E4  00FF               	movwf	127
  2425  02E5  3080               	movlw	128
  2426  02E6  027F               	subwf	127,w
  2427  02E7  1D03               	skipz
  2428  02E8  2AEB               	goto	u3665
  2429  02E9  3001               	movlw	1
  2430  02EA  0231               	subwf	printf@width^(0+128),w
  2431  02EB                     u3665:	
  2432  02EB  1C03               	btfss	3,0
  2433  02EC  2B35               	goto	l7055
  2434  02ED  2AD9               	goto	l7037
  2435  02EE                     l7043:	
  2436  02EE  3020               	movlw	32
  2437  02EF  254D  120A  118A   	fcall	_putch
  2438  02F2  30FF               	movlw	-1
  2439  02F3  2798               	call	PL32	;select bank 1
  2440  02F4  07B1               	addwf	printf@width^(0+128),f
  2441  02F5  1C03               	skipc
  2442  02F6  03B2               	decf	(printf@width+1)^(0+128),f
  2443  02F7                     l7047:	
  2444  02F7  0832               	movf	(printf@width+1)^(0+128),w
  2445  02F8  3A80               	xorlw	128
  2446  02F9  00FF               	movwf	127
  2447  02FA  3080               	movlw	128
  2448  02FB  027F               	subwf	127,w
  2449  02FC  1D03               	skipz
  2450  02FD  2B00               	goto	u3675
  2451  02FE  3001               	movlw	1
  2452  02FF  0231               	subwf	printf@width^(0+128),w
  2453  0300                     u3675:	
  2454  0300  1803               	skipnc
  2455  0301  2AEE               	goto	l7043
  2456  0302  2798               	call	PL32	;select bank 1
  2457  0303  082D               	movf	printf@flag^(0+128),w
  2458  0304  3903               	andlw	3
  2459  0305  1903               	btfsc	3,2
  2460  0306  2B35               	goto	l7055
  2461  0307  302D               	movlw	45
  2462  0308  2B32               	goto	L2
  2463  0309                     l7053:	
  2464  0309  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2465  030C  2706               	fcall	PL2	;call to abstracted procedure
  2466  030D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2467  0312  00F2               	movwf	?___lldiv
  2468  0313  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2469  0318  00F3               	movwf	?___lldiv+1
  2470  0319  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2471  031E  00F4               	movwf	?___lldiv+2
  2472  031F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2473  0324  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2474  0327  263D  120A  118A   	fcall	___lldiv
  2475  032A  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2476  032D  2551  120A  118A   	fcall	___llmod
  2477  0330  0825               	movf	?___llmod,w
  2478  0331  3E30               	addlw	48
  2479  0332                     L2:	
  2480  0332  254D  120A  118A   	fcall	_putch
  2481  0335                     l7055:	
  2482  0335  2798               	call	PL32	;select bank 1
  2483  0336  03B8               	decf	printf@c^(0+128),f
  2484  0337  0F38               	incfsz	printf@c^(0+128),w
  2485  0338  2B09               	goto	l7053
  2486  0339                     l7061:	
  2487  0339  0830               	movf	(printf@exp+1)^(0+128),w
  2488  033A  3A80               	xorlw	128
  2489  033B  00FF               	movwf	127
  2490  033C  3080               	movlw	128
  2491  033D  027F               	subwf	127,w
  2492  033E  1D03               	skipz
  2493  033F  2B42               	goto	u3705
  2494  0340  3001               	movlw	1
  2495  0341  022F               	subwf	printf@exp^(0+128),w
  2496  0342                     u3705:	
  2497  0342  1C03               	btfss	3,0
  2498  0343  2B4E               	goto	l7063
  2499  0344  3030               	movlw	48
  2500  0345  254D  120A  118A   	fcall	_putch
  2501  0348  30FF               	movlw	-1
  2502  0349  2798               	call	PL32	;select bank 1
  2503  034A  07AF               	addwf	printf@exp^(0+128),f
  2504  034B  1C03               	skipc
  2505  034C  03B0               	decf	(printf@exp+1)^(0+128),f
  2506  034D  2B39               	goto	l7061
  2507  034E                     l7063:	
  2508  034E  2798               	call	PL32	;select bank 1
  2509  034F  0837               	movf	(printf@prec+1)^(0+128),w
  2510  0350  3A80               	xorlw	128
  2511  0351  00FF               	movwf	127
  2512  0352  3080               	movlw	128
  2513  0353  027F               	subwf	127,w
  2514  0354  1D03               	skipz
  2515  0355  2B58               	goto	u3715
  2516  0356  3009               	movlw	9
  2517  0357  0236               	subwf	printf@prec^(0+128),w
  2518  0358                     u3715:	
  2519  0358  1C03               	skipc
  2520  0359  2B5D               	goto	l7067
  2521  035A  3008               	movlw	8
  2522  035B  2798               	call	PL32	;select bank 1
  2523  035C  2B5F               	goto	L3
  2524  035D                     l7067:	
  2525  035D  2798               	call	PL32	;select bank 1
  2526  035E  0836               	movf	printf@prec^(0+128),w
  2527  035F                     L3:	
  2528  035F  00B8               	movwf	printf@c^(0+128)
  2529  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0361  00DA               	movwf	??_printf
  2531  0362  01DB               	clrf	??_printf+1
  2532  0363  1BDA               	btfsc	??_printf,7
  2533  0364  03DB               	decf	??_printf+1,f
  2534  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2535  0366  02B6               	subwf	printf@prec^(0+128),f
  2536  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0368  085B               	movf	??_printf+1,w
  2538  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2539  036A  1C03               	skipc
  2540  036B  03B7               	decf	(printf@prec+1)^(0+128),f
  2541  036C  02B7               	subwf	(printf@prec+1)^(0+128),f
  2542  036D  0838               	movf	printf@c^(0+128),w
  2543  036E  1903               	btfsc	3,2
  2544  036F  2B74               	goto	l2274
  2545  0370  302E               	movlw	46
  2546  0371  254D  120A  118A   	fcall	_putch
  2547  0374                     l2274:	
  2548  0374  2798               	call	PL32	;select bank 1
  2549  0375  0838               	movf	printf@c^(0+128),w
  2550  0376  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2551  037B  0840               	movf	?_scale,w
  2552  037C  00B4               	movwf	?___ftmul+3
  2553  037D  0841               	movf	?_scale+1,w
  2554  037E  00B5               	movwf	?___ftmul+4
  2555  037F  0842               	movf	?_scale+2,w
  2556  0380  00B6               	movwf	?___ftmul+5
  2557  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0382  0833               	movf	printf@fval^(0+128),w
  2559  0383  275E               	fcall	PL16	;call to abstracted procedure
  2560  0384  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2561  0389  0831               	movf	?___ftmul,w
  2562  038A  00A4               	movwf	?___fttol
  2563  038B  0832               	movf	?___ftmul+1,w
  2564  038C  00A5               	movwf	?___fttol+1
  2565  038D  0833               	movf	?___ftmul+2,w
  2566  038E  00A6               	movwf	?___fttol+2
  2567  038F  25E2  120A  118A   	fcall	___fttol
  2568  0392  2723  120A  118A   	fcall	PL6	;call to abstracted procedure
  2569  0395  2BFC               	goto	L4
  2570  0396                     l7071:	
  2571  0396  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2572  0399  2706               	fcall	PL2	;call to abstracted procedure
  2573  039A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2574  039F  00F2               	movwf	?___lldiv
  2575  03A0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2576  03A5  00F3               	movwf	?___lldiv+1
  2577  03A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2578  03AB  00F4               	movwf	?___lldiv+2
  2579  03AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2580  03B1  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2581  03B4  263D  120A  118A   	fcall	___lldiv
  2582  03B7  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2583  03BA  2551  120A  118A   	fcall	___llmod
  2584  03BD  0825               	movf	?___llmod,w
  2585  03BE  3E30               	addlw	48
  2586  03BF  254D  120A  118A   	fcall	_putch
  2587  03C2  2798               	call	PL32	;select bank 1
  2588  03C3  2706               	fcall	PL2	;call to abstracted procedure
  2589  03C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2590  03C9  00A5               	movwf	?___llmod
  2591  03CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2592  03CF  00A6               	movwf	?___llmod+1
  2593  03D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2594  03D5  00A7               	movwf	?___llmod+2
  2595  03D6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2596  03DB  00A8               	movwf	?___llmod+3
  2597  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2598  03DD  082B               	movf	(printf@_val+3)^(0+128),w
  2599  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2600  03DF  00AC               	movwf	?___llmod+7
  2601  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2602  03E1  082A               	movf	(printf@_val+2)^(0+128),w
  2603  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2604  03E3  00AB               	movwf	?___llmod+6
  2605  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2606  03E5  0829               	movf	(printf@_val+1)^(0+128),w
  2607  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2608  03E7  00AA               	movwf	?___llmod+5
  2609  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2610  03E9  0828               	movf	printf@_val^(0+128),w
  2611  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2612  03EB  00A9               	movwf	?___llmod+4
  2613  03EC  2551  120A  118A   	fcall	___llmod
  2614  03EF  0828               	movf	?___llmod+3,w
  2615  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2616  03F1  00AB               	movwf	(printf@_val+3)^(0+128)
  2617  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2618  03F3  0827               	movf	?___llmod+2,w
  2619  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2620  03F5  00AA               	movwf	(printf@_val+2)^(0+128)
  2621  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2622  03F7  0826               	movf	?___llmod+1,w
  2623  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2624  03F9  00A9               	movwf	(printf@_val+1)^(0+128)
  2625  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2626  03FB  0825               	movf	?___llmod,w
  2627  03FC                     L4:	
  2628  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2629  03FD  00A8               	movwf	printf@_val^(0+128)
  2630  03FE  03B8               	decf	printf@c^(0+128),f
  2631  03FF  0F38               	incfsz	printf@c^(0+128),w
  2632  0400  2B96               	goto	l7071
  2633  0401                     l7079:	
  2634  0401  0837               	movf	(printf@prec+1)^(0+128),w
  2635  0402  0436               	iorwf	printf@prec^(0+128),w
  2636  0403  1903               	btfsc	3,2
  2637  0404  2813               	goto	l7159
  2638  0405  3030               	movlw	48
  2639  0406  254D  120A  118A   	fcall	_putch
  2640  0409  30FF               	movlw	-1
  2641  040A  2798               	call	PL32	;select bank 1
  2642  040B  07B6               	addwf	printf@prec^(0+128),f
  2643  040C  1C03               	skipc
  2644  040D  03B7               	decf	(printf@prec+1)^(0+128),f
  2645  040E  2C01               	goto	l7079
  2646  040F                     l7081:	
  2647  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2648  0410  0824               	movf	printf@ap^(0+128),w
  2649  0411  0084               	movwf	4
  2650  0412  1383               	bcf	3,7	;select IRP bank0
  2651  0413  2791  120A  118A   	fcall	PL31	;call to abstracted procedure
  2652  0416  085A               	movf	??_printf,w
  2653  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0418  00A8               	movwf	printf@_val^(0+128)
  2655  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2656  041A  085B               	movf	??_printf+1,w
  2657  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2658  041C  00A9               	movwf	(printf@_val^(0+128)+1)
  2659  041D  01AA               	clrf	(printf@_val^(0+128)+2)
  2660  041E  01AB               	clrf	(printf@_val^(0+128)+3)
  2661  041F  0AA4               	incf	printf@ap^(0+128),f
  2662  0420  0AA4               	incf	printf@ap^(0+128),f
  2663  0421  0837               	movf	(printf@prec+1)^(0+128),w
  2664  0422  0436               	iorwf	printf@prec^(0+128),w
  2665  0423  1D03               	skipz
  2666  0424  2C2D               	goto	l7091
  2667  0425  082B               	movf	(printf@_val+3)^(0+128),w
  2668  0426  042A               	iorwf	(printf@_val+2)^(0+128),w
  2669  0427  0429               	iorwf	(printf@_val+1)^(0+128),w
  2670  0428  0428               	iorwf	printf@_val^(0+128),w
  2671  0429  1903               	btfsc	3,2
  2672  042A  0AB6               	incf	printf@prec^(0+128),f
  2673  042B  1903               	skipnz
  2674  042C  0AB7               	incf	(printf@prec+1)^(0+128),f
  2675  042D                     l7091:	
  2676  042D  01B8               	clrf	printf@c^(0+128)
  2677  042E  0AB8               	incf	printf@c^(0+128),f
  2678  042F                     l7097:	
  2679  042F  2706               	fcall	PL2	;call to abstracted procedure
  2680  0430  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2681  0435  00DB               	movwf	??_printf+1
  2682  0436  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2683  043B  00DC               	movwf	??_printf+2
  2684  043C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2685  0441  00DD               	movwf	??_printf+3
  2686  0442  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2687  0447  00DE               	movwf	??_printf+4
  2688  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0449  022B               	subwf	(printf@_val+3)^(0+128),w
  2690  044A  1D03               	skipz
  2691  044B  2C5C               	goto	u3775
  2692  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2693  044D  085D               	movf	??_printf+3,w
  2694  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2695  044F  022A               	subwf	(printf@_val+2)^(0+128),w
  2696  0450  1D03               	skipz
  2697  0451  2C5C               	goto	u3775
  2698  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0453  085C               	movf	??_printf+2,w
  2700  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2701  0455  0229               	subwf	(printf@_val+1)^(0+128),w
  2702  0456  1D03               	skipz
  2703  0457  2C5C               	goto	u3775
  2704  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0459  085B               	movf	??_printf+1,w
  2706  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2707  045B  0228               	subwf	printf@_val^(0+128),w
  2708  045C                     u3775:	
  2709  045C  1C03               	btfss	3,0
  2710  045D  2C63               	goto	l7105
  2711  045E  0AB8               	incf	printf@c^(0+128),f
  2712  045F  0838               	movf	printf@c^(0+128),w
  2713  0460  3A0A               	xorlw	10
  2714  0461  1D03               	skipz
  2715  0462  2C2F               	goto	l7097
  2716  0463                     l7105:	
  2717  0463  0838               	movf	printf@c^(0+128),w
  2718  0464  2769  120A  118A   	fcall	PL18	;call to abstracted procedure
  2719  0467  0837               	movf	(printf@prec+1)^(0+128),w
  2720  0468  3A80               	xorlw	128
  2721  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2722  046A  025C               	subwf	??_printf+2,w
  2723  046B  1D03               	skipz
  2724  046C  2C71               	goto	u3795
  2725  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2726  046E  0836               	movf	printf@prec^(0+128),w
  2727  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0470  025A               	subwf	??_printf,w
  2729  0471                     u3795:	
  2730  0471  1803               	skipnc
  2731  0472  2C77               	goto	l7109
  2732  0473  2798               	call	PL32	;select bank 1
  2733  0474  0836               	movf	printf@prec^(0+128),w
  2734  0475  00B8               	movwf	printf@c^(0+128)
  2735  0476  2C8F               	goto	l7113
  2736  0477                     l7109:	
  2737  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2738  0478  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2739  047B  0837               	movf	(printf@prec+1)^(0+128),w
  2740  047C  3A80               	xorlw	128
  2741  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2742  047E  00DC               	movwf	??_printf+2
  2743  047F  085B               	movf	??_printf+1,w
  2744  0480  3A80               	xorlw	128
  2745  0481  025C               	subwf	??_printf+2,w
  2746  0482  1D03               	skipz
  2747  0483  2C87               	goto	u3805
  2748  0484  085A               	movf	??_printf,w
  2749  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2750  0486  0236               	subwf	printf@prec^(0+128),w
  2751  0487                     u3805:	
  2752  0487  1803               	skipnc
  2753  0488  2C8F               	goto	l7113
  2754  0489  2798               	call	PL32	;select bank 1
  2755  048A  0838               	movf	printf@c^(0+128),w
  2756  048B  00B6               	movwf	printf@prec^(0+128)
  2757  048C  01B7               	clrf	(printf@prec+1)^(0+128)
  2758  048D  1BB6               	btfsc	printf@prec^(0+128),7
  2759  048E  03B7               	decf	(printf@prec+1)^(0+128),f
  2760  048F                     l7113:	
  2761  048F  2798               	call	PL32	;select bank 1
  2762  0490  0832               	movf	(printf@width+1)^(0+128),w
  2763  0491  0431               	iorwf	printf@width^(0+128),w
  2764  0492  1903               	skipnz
  2765  0493  2C9C               	goto	l7119
  2766  0494  082D               	movf	printf@flag^(0+128),w
  2767  0495  3903               	andlw	3
  2768  0496  1903               	btfsc	3,2
  2769  0497  2C9C               	goto	l7119
  2770  0498  30FF               	movlw	-1
  2771  0499  07B1               	addwf	printf@width^(0+128),f
  2772  049A  1C03               	skipc
  2773  049B  03B2               	decf	(printf@width+1)^(0+128),f
  2774  049C                     l7119:	
  2775  049C  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2776  049D  2CB9               	goto	l7127
  2777  049E  0837               	movf	(printf@prec+1)^(0+128),w
  2778  049F  3A80               	xorlw	128
  2779  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2780  04A1  00DA               	movwf	??_printf
  2781  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2782  04A3  0832               	movf	(printf@width+1)^(0+128),w
  2783  04A4  3A80               	xorlw	128
  2784  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2785  04A6  025A               	subwf	??_printf,w
  2786  04A7  1D03               	skipz
  2787  04A8  2CAC               	goto	u3845
  2788  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  2789  04AA  0831               	movf	printf@width^(0+128),w
  2790  04AB  0236               	subwf	printf@prec^(0+128),w
  2791  04AC                     u3845:	
  2792  04AC  1803               	skipnc
  2793  04AD  2CB6               	goto	l7125
  2794  04AE  2798               	call	PL32	;select bank 1
  2795  04AF  0836               	movf	printf@prec^(0+128),w
  2796  04B0  02B1               	subwf	printf@width^(0+128),f
  2797  04B1  0837               	movf	(printf@prec+1)^(0+128),w
  2798  04B2  1C03               	skipc
  2799  04B3  03B2               	decf	(printf@width+1)^(0+128),f
  2800  04B4  02B2               	subwf	(printf@width+1)^(0+128),f
  2801  04B5  2CB9               	goto	l7127
  2802  04B6                     l7125:	
  2803  04B6  2798               	call	PL32	;select bank 1
  2804  04B7  01B1               	clrf	printf@width^(0+128)
  2805  04B8  01B2               	clrf	(printf@width+1)^(0+128)
  2806  04B9                     l7127:	
  2807  04B9  0838               	movf	printf@c^(0+128),w
  2808  04BA  2769  120A  118A   	fcall	PL18	;call to abstracted procedure
  2809  04BD  0832               	movf	(printf@width+1)^(0+128),w
  2810  04BE  3A80               	xorlw	128
  2811  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2812  04C0  025C               	subwf	??_printf+2,w
  2813  04C1  1D03               	skipz
  2814  04C2  2CC7               	goto	u3855
  2815  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2816  04C4  0831               	movf	printf@width^(0+128),w
  2817  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2818  04C6  025A               	subwf	??_printf,w
  2819  04C7                     u3855:	
  2820  04C7  1803               	skipnc
  2821  04C8  2CD5               	goto	l7131
  2822  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2823  04CA  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2824  04CD  02B1               	subwf	printf@width^(0+128),f
  2825  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2826  04CF  085B               	movf	??_printf+1,w
  2827  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2828  04D1  1C03               	skipc
  2829  04D2  03B2               	decf	(printf@width+1)^(0+128),f
  2830  04D3  02B2               	subwf	(printf@width+1)^(0+128),f
  2831  04D4  2CD8               	goto	l7133
  2832  04D5                     l7131:	
  2833  04D5  2798               	call	PL32	;select bank 1
  2834  04D6  01B1               	clrf	printf@width^(0+128)
  2835  04D7  01B2               	clrf	(printf@width+1)^(0+128)
  2836  04D8                     l7133:	
  2837  04D8  1D2D               	btfss	printf@flag^(0+128),2
  2838  04D9  2CF1               	goto	l7145
  2839  04DA  082D               	movf	printf@flag^(0+128),w
  2840  04DB  3903               	andlw	3
  2841  04DC  1903               	btfsc	3,2
  2842  04DD  2CE2               	goto	l7139
  2843  04DE  302D               	movlw	45
  2844  04DF  254D  120A  118A   	fcall	_putch
  2845  04E2                     l7139:	
  2846  04E2  2798               	call	PL32	;select bank 1
  2847  04E3                     L6:	
  2848  04E3  0832               	movf	(printf@width+1)^(0+128),w
  2849  04E4  0431               	iorwf	printf@width^(0+128),w
  2850  04E5  1903               	skipnz
  2851  04E6  2D0A               	goto	l7157
  2852  04E7  3030               	movlw	48
  2853  04E8  254D  120A  118A   	fcall	_putch
  2854  04EB  30FF               	movlw	-1
  2855  04EC  2798               	call	PL32	;select bank 1
  2856  04ED  07B1               	addwf	printf@width^(0+128),f
  2857  04EE  1C03               	skipc
  2858  04EF  03B2               	decf	(printf@width+1)^(0+128),f
  2859  04F0  2CE3               	goto	L6
  2860  04F1                     l7145:	
  2861  04F1  0832               	movf	(printf@width+1)^(0+128),w
  2862  04F2  0431               	iorwf	printf@width^(0+128),w
  2863  04F3  1903               	skipnz
  2864  04F4  2D02               	goto	l7151
  2865  04F5                     l7147:	
  2866  04F5  3020               	movlw	32
  2867  04F6  254D  120A  118A   	fcall	_putch
  2868  04F9  30FF               	movlw	-1
  2869  04FA  2798               	call	PL32	;select bank 1
  2870  04FB  07B1               	addwf	printf@width^(0+128),f
  2871  04FC  1C03               	skipc
  2872  04FD  03B2               	decf	(printf@width+1)^(0+128),f
  2873  04FE  0832               	movf	(printf@width+1)^(0+128),w
  2874  04FF  0431               	iorwf	printf@width^(0+128),w
  2875  0500  1D03               	skipz
  2876  0501  2CF5               	goto	l7147
  2877  0502                     l7151:	
  2878  0502  082D               	movf	printf@flag^(0+128),w
  2879  0503  3903               	andlw	3
  2880  0504  1903               	btfsc	3,2
  2881  0505  2D0A               	goto	l7157
  2882  0506  302D               	movlw	45
  2883  0507                     L5:	
  2884  0507  254D  120A  118A   	fcall	_putch
  2885  050A                     l7157:	
  2886  050A  30FF               	movlw	-1
  2887  050B  2798               	call	PL32	;select bank 1
  2888  050C  07B6               	addwf	printf@prec^(0+128),f
  2889  050D  1C03               	skipc
  2890  050E  03B7               	decf	(printf@prec+1)^(0+128),f
  2891  050F  0A36               	incf	printf@prec^(0+128),w
  2892  0510  1903               	skipnz
  2893  0511  0A37               	incf	(printf@prec+1)^(0+128),w
  2894  0512  1903               	btfsc	3,2
  2895  0513  2813               	goto	l7159
  2896  0514  300A               	movlw	10
  2897  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0516  00A5               	movwf	?___llmod
  2899  0517  01A6               	clrf	?___llmod+1
  2900  0518  01A7               	clrf	?___llmod+2
  2901  0519  01A8               	clrf	?___llmod+3
  2902  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2903  051B  0836               	movf	printf@prec^(0+128),w
  2904  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2905  051D  00DA               	movwf	??_printf
  2906  051E  1003               	clrc
  2907  051F  0DDA               	rlf	??_printf,f
  2908  0520  1003               	clrc
  2909  0521  0D5A               	rlf	??_printf,w
  2910  0522  3E4F               	addlw	low (_dpowers-__stringbase)
  2911  0523  0084               	movwf	4
  2912  0524  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2913  0529  00F2               	movwf	?___lldiv
  2914  052A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2915  052F  00F3               	movwf	?___lldiv+1
  2916  0530  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2917  0535  00F4               	movwf	?___lldiv+2
  2918  0536  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2919  053B  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2920  053E  263D  120A  118A   	fcall	___lldiv
  2921  0541  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2922  0544  2551  120A  118A   	fcall	___llmod
  2923  0547  0825               	movf	?___llmod,w
  2924  0548  3E30               	addlw	48
  2925  0549  1683               	bsf	3,5	;RP0=1, select bank1
  2926  054A  00B8               	movwf	printf@c^(0+128)
  2927  054B  2D07               	goto	L5
  2928  054C                     l2308:	
  2929  054C  0008               	return
  2930  054D                     __end_of_printf:	
  2931  054D                     __ptext532:	
  2932 ;; =============== function _printf ends ============
  2933                           
  2934                           
  2935 ;; *************** function _putch *****************
  2936 ;; Defined at:
  2937 ;;		line 69 in file "D:\TTVXL\Project TTVXL\BT06week11ttvxl\BT06week11ttvxl.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  c               1    wreg     unsigned char 
  2940 ;; Auto vars:     Size  Location     Type
  2941 ;;  c               1   11[COMMON] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/20
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2951 ;;      Params:         0       0       0       0       0
  2952 ;;      Locals:         1       0       0       0       0
  2953 ;;      Temps:          0       0       0       0       0
  2954 ;;      Totals:         1       0       0       0       0
  2955 ;;Total ram usage:        1 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    4
  2958 ;; This function calls:
  2959 ;;		_lcd_putc
  2960 ;; This function is called by:
  2961 ;;		_printf
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964  054D                     _putch:	
  2965                           
  2966                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2967                           ;putch@c stored from wreg
  2968  054D  00FB               	movwf	putch@c
  2969                           
  2970                           ;BT06week11ttvxl.c: 70: lcd_putc(c);
  2971  054E  120A  158A  2AD1   	ljmp	_lcd_putc
  2972  0551                     __end_of_putch:	
  2973  0551                     __ptext549:	
  2974 ;; =============== function ___ftneg ends ============
  2975                           
  2976                           
  2977 ;; *************** function ___llmod *****************
  2978 ;; Defined at:
  2979 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  divisor         4    5[BANK0 ] unsigned long 
  2982 ;;  dividend        4    9[BANK0 ] unsigned long 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  counter         1   10[COMMON] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  4    5[BANK0 ] unsigned long 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 60/0
  2991 ;;		On exit  : 60/0
  2992 ;;		Unchanged: FFF9F/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2994 ;;      Params:         0       8       0       0       0
  2995 ;;      Locals:         1       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0
  2997 ;;      Totals:         1       8       0       0       0
  2998 ;;Total ram usage:        9 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_printf
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007  0551                     ___llmod:	
  3008                           
  3009                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3010  0551  0828               	movf	___llmod@divisor+3,w
  3011  0552  0427               	iorwf	___llmod@divisor+2,w
  3012  0553  0426               	iorwf	___llmod@divisor+1,w
  3013  0554  0425               	iorwf	___llmod@divisor,w
  3014  0555  1903               	skipnz
  3015  0556  2D86               	goto	l6439
  3016  0557  01FA               	clrf	___llmod@counter
  3017  0558                     L13:	
  3018  0558  0AFA               	incf	___llmod@counter,f
  3019  0559  1BA8               	btfsc	___llmod@divisor+3,7
  3020  055A  2D61               	goto	l6431
  3021  055B  1003               	clrc
  3022  055C  0DA5               	rlf	___llmod@divisor,f
  3023  055D  0DA6               	rlf	___llmod@divisor+1,f
  3024  055E  0DA7               	rlf	___llmod@divisor+2,f
  3025  055F  0DA8               	rlf	___llmod@divisor+3,f
  3026  0560  2D58               	goto	L13
  3027  0561                     l6431:	
  3028  0561  0828               	movf	___llmod@divisor+3,w
  3029  0562  022C               	subwf	___llmod@dividend+3,w
  3030  0563  1D03               	skipz
  3031  0564  2D6F               	goto	u2585
  3032  0565  0827               	movf	___llmod@divisor+2,w
  3033  0566  022B               	subwf	___llmod@dividend+2,w
  3034  0567  1D03               	skipz
  3035  0568  2D6F               	goto	u2585
  3036  0569  0826               	movf	___llmod@divisor+1,w
  3037  056A  022A               	subwf	___llmod@dividend+1,w
  3038  056B  1D03               	skipz
  3039  056C  2D6F               	goto	u2585
  3040  056D  0825               	movf	___llmod@divisor,w
  3041  056E  0229               	subwf	___llmod@dividend,w
  3042  056F                     u2585:	
  3043  056F  1C03               	skipc
  3044  0570  2D80               	goto	L14
  3045  0571  0825               	movf	___llmod@divisor,w
  3046  0572  02A9               	subwf	___llmod@dividend,f
  3047  0573  0826               	movf	___llmod@divisor+1,w
  3048  0574  1C03               	skipc
  3049  0575  0F26               	incfsz	___llmod@divisor+1,w
  3050  0576  02AA               	subwf	___llmod@dividend+1,f
  3051  0577  0827               	movf	___llmod@divisor+2,w
  3052  0578  1C03               	skipc
  3053  0579  0F27               	incfsz	___llmod@divisor+2,w
  3054  057A  02AB               	subwf	___llmod@dividend+2,f
  3055  057B  0828               	movf	___llmod@divisor+3,w
  3056  057C  1C03               	skipc
  3057  057D  0F28               	incfsz	___llmod@divisor+3,w
  3058  057E  02AC               	subwf	___llmod@dividend+3,f
  3059  057F  1003               	clrc
  3060  0580                     L14:	
  3061  0580  0CA8               	rrf	___llmod@divisor+3,f
  3062  0581  0CA7               	rrf	___llmod@divisor+2,f
  3063  0582  0CA6               	rrf	___llmod@divisor+1,f
  3064  0583  0CA5               	rrf	___llmod@divisor,f
  3065  0584  0BFA               	decfsz	___llmod@counter,f
  3066  0585  2D61               	goto	l6431
  3067  0586                     l6439:	
  3068  0586  082C               	movf	___llmod@dividend+3,w
  3069  0587  00A8               	movwf	?___llmod+3
  3070  0588  082B               	movf	___llmod@dividend+2,w
  3071  0589  00A7               	movwf	?___llmod+2
  3072  058A  082A               	movf	___llmod@dividend+1,w
  3073  058B  00A6               	movwf	?___llmod+1
  3074  058C  0829               	movf	___llmod@dividend,w
  3075  058D  00A5               	movwf	?___llmod
  3076  058E  0008               	return
  3077  058F                     __end_of___llmod:	
  3078  058F                     __ptext547:	
  3079 ;; =============== function ___lldiv ends ============
  3080                           
  3081                           
  3082 ;; *************** function ___ftge *****************
  3083 ;; Defined at:
  3084 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;  ff1             3    2[COMMON] float 
  3087 ;;  ff2             3    5[COMMON] float 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 60/20
  3096 ;;		On exit  : 60/20
  3097 ;;		Unchanged: FFF9F/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         6       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0
  3102 ;;      Totals:         6       0       0       0       0
  3103 ;;Total ram usage:        6 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_printf
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112  058F                     ___ftge:	
  3113                           
  3114                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3115  058F  1FF4               	btfss	___ftge@ff1+2,7
  3116  0590  2D9E               	goto	l6455
  3117  0591  0872               	movf	___ftge@ff1,w
  3118  0592  3C00               	sublw	0
  3119  0593  00F2               	movwf	___ftge@ff1
  3120  0594  0873               	movf	___ftge@ff1+1,w
  3121  0595  1C03               	skipc
  3122  0596  0F73               	incfsz	___ftge@ff1+1,w
  3123  0597  3C00               	sublw	0
  3124  0598  00F3               	movwf	___ftge@ff1+1
  3125  0599  0874               	movf	___ftge@ff1+2,w
  3126  059A  1C03               	skipc
  3127  059B  0F74               	incfsz	___ftge@ff1+2,w
  3128  059C  3C80               	sublw	128
  3129  059D  00F4               	movwf	___ftge@ff1+2
  3130  059E                     l6455:	
  3131  059E  1FF7               	btfss	___ftge@ff2+2,7
  3132  059F  2DAD               	goto	l6459
  3133  05A0  0875               	movf	___ftge@ff2,w
  3134  05A1  3C00               	sublw	0
  3135  05A2  00F5               	movwf	___ftge@ff2
  3136  05A3  0876               	movf	___ftge@ff2+1,w
  3137  05A4  1C03               	skipc
  3138  05A5  0F76               	incfsz	___ftge@ff2+1,w
  3139  05A6  3C00               	sublw	0
  3140  05A7  00F6               	movwf	___ftge@ff2+1
  3141  05A8  0877               	movf	___ftge@ff2+2,w
  3142  05A9  1C03               	skipc
  3143  05AA  0F77               	incfsz	___ftge@ff2+2,w
  3144  05AB  3C80               	sublw	128
  3145  05AC  00F7               	movwf	___ftge@ff2+2
  3146  05AD                     l6459:	
  3147  05AD  3080               	movlw	128
  3148  05AE  06F4               	xorwf	___ftge@ff1+2,f
  3149  05AF  06F7               	xorwf	___ftge@ff2+2,f
  3150  05B0  0877               	movf	___ftge@ff2+2,w
  3151  05B1  0274               	subwf	___ftge@ff1+2,w
  3152  05B2  1D03               	skipz
  3153  05B3  0008               	return
  3154  05B4  0876               	movf	___ftge@ff2+1,w
  3155  05B5  0273               	subwf	___ftge@ff1+1,w
  3156  05B6  1D03               	skipz
  3157  05B7  0008               	return
  3158  05B8  0875               	movf	___ftge@ff2,w
  3159  05B9  0272               	subwf	___ftge@ff1,w
  3160  05BA  0008               	return
  3161  05BB                     __end_of___ftge:	
  3162  05BB                     __ptext559:	
  3163 ;; =============== function __tdiv_to_l_ ends ============
  3164                           
  3165                           
  3166 ;; *************** function _isdigit *****************
  3167 ;; Defined at:
  3168 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  c               1    wreg     unsigned char 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  c               1    3[COMMON] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;		None               void
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0
  3177 ;; Tracked objects:
  3178 ;;		On entry : 60/20
  3179 ;;		On exit  : 60/20
  3180 ;;		Unchanged: FFF9F/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3182 ;;      Params:         0       0       0       0       0
  3183 ;;      Locals:         2       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0
  3185 ;;      Totals:         2       0       0       0       0
  3186 ;;Total ram usage:        2 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_printf
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195  05BB                     _isdigit:	
  3196                           
  3197                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3198                           ;isdigit@c stored from wreg
  3199  05BB  00F3               	movwf	isdigit@c
  3200  05BC  303A               	movlw	58
  3201  05BD  01F2               	clrf	_isdigit$3685
  3202  05BE  0273               	subwf	isdigit@c,w
  3203  05BF  1803               	skipnc
  3204  05C0  2DC7               	goto	l6141
  3205  05C1  3030               	movlw	48
  3206  05C2  0273               	subwf	isdigit@c,w
  3207  05C3  1C03               	skipc
  3208  05C4  2DC7               	goto	l6141
  3209  05C5  01F2               	clrf	_isdigit$3685
  3210  05C6  0AF2               	incf	_isdigit$3685,f
  3211  05C7                     l6141:	
  3212  05C7  0C72               	rrf	_isdigit$3685,w
  3213  05C8  0008               	return
  3214  05C9                     __end_of_isdigit:	
  3215  05C9                     __ptext555:	
  3216 ;; =============== function ___lbdiv ends ============
  3217                           
  3218                           
  3219 ;; *************** function ___wmul *****************
  3220 ;; Defined at:
  3221 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  multiplier      2    2[COMMON] unsigned int 
  3224 ;;  multiplicand    2    4[COMMON] unsigned int 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  product         2    6[COMMON] unsigned int 
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  2    2[COMMON] unsigned int 
  3229 ;; Registers used:
  3230 ;;		wreg, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 60/20
  3233 ;;		On exit  : 60/20
  3234 ;;		Unchanged: FFF9F/0
  3235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3236 ;;      Params:         4       0       0       0       0
  3237 ;;      Locals:         2       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         6       0       0       0       0
  3240 ;;Total ram usage:        6 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    1
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_fround
  3247 ;;		_scale
  3248 ;;		_printf
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251  05C9                     ___wmul:	
  3252                           
  3253                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3254  05C9  01F6               	clrf	___wmul@product
  3255  05CA  01F7               	clrf	___wmul@product+1
  3256  05CB                     l6257:	
  3257  05CB  1C72               	btfss	___wmul@multiplier,0
  3258  05CC  2DD3               	goto	l6261
  3259  05CD  0874               	movf	___wmul@multiplicand,w
  3260  05CE  07F6               	addwf	___wmul@product,f
  3261  05CF  1803               	skipnc
  3262  05D0  0AF7               	incf	___wmul@product+1,f
  3263  05D1  0875               	movf	___wmul@multiplicand+1,w
  3264  05D2  07F7               	addwf	___wmul@product+1,f
  3265  05D3                     l6261:	
  3266  05D3  1003               	clrc
  3267  05D4  0DF4               	rlf	___wmul@multiplicand,f
  3268  05D5  0DF5               	rlf	___wmul@multiplicand+1,f
  3269  05D6  1003               	clrc
  3270  05D7  0CF3               	rrf	___wmul@multiplier+1,f
  3271  05D8  0CF2               	rrf	___wmul@multiplier,f
  3272  05D9  0873               	movf	___wmul@multiplier+1,w
  3273  05DA  0472               	iorwf	___wmul@multiplier,w
  3274  05DB  1D03               	skipz
  3275  05DC  2DCB               	goto	l6257
  3276  05DD  0877               	movf	___wmul@product+1,w
  3277  05DE  00F3               	movwf	?___wmul+1
  3278  05DF  0876               	movf	___wmul@product,w
  3279  05E0  00F2               	movwf	?___wmul
  3280  05E1  0008               	return
  3281  05E2                     __end_of___wmul:	
  3282  05E2                     __ptext551:	
  3283 ;; =============== function ___awdiv ends ============
  3284                           
  3285                           
  3286 ;; *************** function ___fttol *****************
  3287 ;; Defined at:
  3288 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  f1              3    4[BANK0 ] float 
  3291 ;; Auto vars:     Size  Location     Type
  3292 ;;  lval            4   12[BANK0 ] unsigned long 
  3293 ;;  exp1            1   16[BANK0 ] unsigned char 
  3294 ;;  sign1           1   11[BANK0 ] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  4    4[BANK0 ] long 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0
  3299 ;; Tracked objects:
  3300 ;;		On entry : 60/0
  3301 ;;		On exit  : 60/0
  3302 ;;		Unchanged: FFF9F/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       4       0       0       0
  3305 ;;      Locals:         0       6       0       0       0
  3306 ;;      Temps:          0       3       0       0       0
  3307 ;;      Totals:         0      13       0       0       0
  3308 ;;Total ram usage:       13 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    1
  3311 ;; This function calls:
  3312 ;;		Nothing
  3313 ;; This function is called by:
  3314 ;;		_printf
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317  05E2                     ___fttol:	
  3318                           
  3319                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3320  05E2  278A  120A  118A   	fcall	PL28	;call to abstracted procedure
  3321  05E5  1003               	clrc
  3322  05E6  0D29               	rlf	??___fttol+1,w
  3323  05E7  0D2A               	rlf	??___fttol+2,w
  3324  05E8  00B0               	movwf	___fttol@exp1
  3325  05E9  08B0               	movf	___fttol@exp1,f
  3326  05EA  1D03               	skipz
  3327  05EB  2DF1               	goto	l6345
  3328  05EC                     l6343:	
  3329  05EC  01A4               	clrf	?___fttol
  3330  05ED  01A5               	clrf	?___fttol+1
  3331  05EE  01A6               	clrf	?___fttol+2
  3332  05EF  01A7               	clrf	?___fttol+3
  3333  05F0  0008               	return
  3334  05F1                     l6345:	
  3335  05F1  278A  120A  118A   	fcall	PL28	;call to abstracted procedure
  3336  05F4  3017               	movlw	23
  3337  05F5                     u2425:	
  3338  05F5  1003               	clrc
  3339  05F6  0CAA               	rrf	??___fttol+2,f
  3340  05F7  0CA9               	rrf	??___fttol+1,f
  3341  05F8  0CA8               	rrf	??___fttol,f
  3342  05F9  3EFF               	addlw	-1
  3343  05FA  1D03               	skipz
  3344  05FB  2DF5               	goto	u2425
  3345  05FC  0828               	movf	??___fttol,w
  3346  05FD  00AB               	movwf	___fttol@sign1
  3347  05FE  17A5               	bsf	___fttol@f1+1,7
  3348  05FF  01A6               	clrf	___fttol@f1+2
  3349  0600  0824               	movf	___fttol@f1,w
  3350  0601  00AC               	movwf	___fttol@lval
  3351  0602  0825               	movf	___fttol@f1+1,w
  3352  0603  00AD               	movwf	___fttol@lval+1
  3353  0604  0826               	movf	___fttol@f1+2,w
  3354  0605  00AE               	movwf	___fttol@lval+2
  3355  0606  308E               	movlw	142
  3356  0607  01AF               	clrf	___fttol@lval+3
  3357  0608  02B0               	subwf	___fttol@exp1,f
  3358  0609  1FB0               	btfss	___fttol@exp1,7
  3359  060A  2E18               	goto	l6365
  3360  060B  0830               	movf	___fttol@exp1,w
  3361  060C  3A80               	xorlw	128
  3362  060D  3E8F               	addlw	143
  3363  060E  1C03               	btfss	3,0
  3364  060F  2DEC               	goto	l6343
  3365  0610                     l6361:	
  3366  0610  1003               	clrc
  3367  0611  0CAF               	rrf	___fttol@lval+3,f
  3368  0612  0CAE               	rrf	___fttol@lval+2,f
  3369  0613  0CAD               	rrf	___fttol@lval+1,f
  3370  0614  0CAC               	rrf	___fttol@lval,f
  3371  0615  0FB0               	incfsz	___fttol@exp1,f
  3372  0616  2E10               	goto	l6361
  3373  0617  2E26               	goto	l6371
  3374  0618                     l6365:	
  3375  0618  3018               	movlw	24
  3376  0619  0230               	subwf	___fttol@exp1,w
  3377  061A  1803               	btfsc	3,0
  3378  061B  2DEC               	goto	l6343
  3379  061C                     l3432:	
  3380  061C  08B0               	movf	___fttol@exp1,f
  3381  061D  1903               	btfsc	3,2
  3382  061E  2E26               	goto	l6371
  3383  061F  1003               	clrc
  3384  0620  0DAC               	rlf	___fttol@lval,f
  3385  0621  0DAD               	rlf	___fttol@lval+1,f
  3386  0622  0DAE               	rlf	___fttol@lval+2,f
  3387  0623  0DAF               	rlf	___fttol@lval+3,f
  3388  0624  03B0               	decf	___fttol@exp1,f
  3389  0625  2E1C               	goto	l3432
  3390  0626                     l6371:	
  3391  0626  082B               	movf	___fttol@sign1,w
  3392  0627  1903               	btfsc	3,2
  3393  0628  2E34               	goto	l6375
  3394  0629  09AC               	comf	___fttol@lval,f
  3395  062A  09AD               	comf	___fttol@lval+1,f
  3396  062B  09AE               	comf	___fttol@lval+2,f
  3397  062C  09AF               	comf	___fttol@lval+3,f
  3398  062D  0AAC               	incf	___fttol@lval,f
  3399  062E  1903               	skipnz
  3400  062F  0AAD               	incf	___fttol@lval+1,f
  3401  0630  1903               	skipnz
  3402  0631  0AAE               	incf	___fttol@lval+2,f
  3403  0632  1903               	skipnz
  3404  0633  0AAF               	incf	___fttol@lval+3,f
  3405  0634                     l6375:	
  3406  0634  082F               	movf	___fttol@lval+3,w
  3407  0635  00A7               	movwf	?___fttol+3
  3408  0636  082E               	movf	___fttol@lval+2,w
  3409  0637  00A6               	movwf	?___fttol+2
  3410  0638  082D               	movf	___fttol@lval+1,w
  3411  0639  00A5               	movwf	?___fttol+1
  3412  063A  082C               	movf	___fttol@lval,w
  3413  063B  00A4               	movwf	?___fttol
  3414  063C  0008               	return
  3415  063D                     __end_of___fttol:	
  3416  063D                     __ptext546:	
  3417 ;; =============== function ___awmod ends ============
  3418                           
  3419                           
  3420 ;; *************** function ___lldiv *****************
  3421 ;; Defined at:
  3422 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  divisor         4    2[COMMON] unsigned long 
  3425 ;;  dividend        4    6[COMMON] unsigned long 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  quotient        4    0[BANK0 ] unsigned long 
  3428 ;;  counter         1    4[BANK0 ] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  4    2[COMMON] unsigned long 
  3431 ;; Registers used:
  3432 ;;		wreg, status,2, status,0
  3433 ;; Tracked objects:
  3434 ;;		On entry : 60/20
  3435 ;;		On exit  : 60/0
  3436 ;;		Unchanged: FFF9F/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         8       0       0       0       0
  3439 ;;      Locals:         0       5       0       0       0
  3440 ;;      Temps:          0       0       0       0       0
  3441 ;;      Totals:         8       5       0       0       0
  3442 ;;Total ram usage:       13 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; Hardware stack levels required when called:    1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_printf
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451  063D                     ___lldiv:	
  3452                           
  3453                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3454  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3455  063E  01A0               	clrf	___lldiv@quotient
  3456  063F  01A1               	clrf	___lldiv@quotient+1
  3457  0640  01A2               	clrf	___lldiv@quotient+2
  3458  0641  01A3               	clrf	___lldiv@quotient+3
  3459  0642  0875               	movf	___lldiv@divisor+3,w
  3460  0643  0474               	iorwf	___lldiv@divisor+2,w
  3461  0644  0473               	iorwf	___lldiv@divisor+1,w
  3462  0645  0472               	iorwf	___lldiv@divisor,w
  3463  0646  1903               	skipnz
  3464  0647  2E7D               	goto	l6493
  3465  0648  01A4               	clrf	___lldiv@counter
  3466  0649                     L10:	
  3467  0649  0AA4               	incf	___lldiv@counter,f
  3468  064A  1BF5               	btfsc	___lldiv@divisor+3,7
  3469  064B  2E52               	goto	l6481
  3470  064C  1003               	clrc
  3471  064D  0DF2               	rlf	___lldiv@divisor,f
  3472  064E  0DF3               	rlf	___lldiv@divisor+1,f
  3473  064F  0DF4               	rlf	___lldiv@divisor+2,f
  3474  0650  0DF5               	rlf	___lldiv@divisor+3,f
  3475  0651  2E49               	goto	L10
  3476  0652                     l6481:	
  3477  0652  1003               	clrc
  3478  0653  0DA0               	rlf	___lldiv@quotient,f
  3479  0654  0DA1               	rlf	___lldiv@quotient+1,f
  3480  0655  0DA2               	rlf	___lldiv@quotient+2,f
  3481  0656  0DA3               	rlf	___lldiv@quotient+3,f
  3482  0657  0875               	movf	___lldiv@divisor+3,w
  3483  0658  0279               	subwf	___lldiv@dividend+3,w
  3484  0659  1D03               	skipz
  3485  065A  2E65               	goto	u2665
  3486  065B  0874               	movf	___lldiv@divisor+2,w
  3487  065C  0278               	subwf	___lldiv@dividend+2,w
  3488  065D  1D03               	skipz
  3489  065E  2E65               	goto	u2665
  3490  065F  0873               	movf	___lldiv@divisor+1,w
  3491  0660  0277               	subwf	___lldiv@dividend+1,w
  3492  0661  1D03               	skipz
  3493  0662  2E65               	goto	u2665
  3494  0663  0872               	movf	___lldiv@divisor,w
  3495  0664  0276               	subwf	___lldiv@dividend,w
  3496  0665                     u2665:	
  3497  0665  1C03               	skipc
  3498  0666  2E77               	goto	L11
  3499  0667  0872               	movf	___lldiv@divisor,w
  3500  0668  02F6               	subwf	___lldiv@dividend,f
  3501  0669  0873               	movf	___lldiv@divisor+1,w
  3502  066A  1C03               	skipc
  3503  066B  0F73               	incfsz	___lldiv@divisor+1,w
  3504  066C  02F7               	subwf	___lldiv@dividend+1,f
  3505  066D  0874               	movf	___lldiv@divisor+2,w
  3506  066E  1C03               	skipc
  3507  066F  0F74               	incfsz	___lldiv@divisor+2,w
  3508  0670  02F8               	subwf	___lldiv@dividend+2,f
  3509  0671  0875               	movf	___lldiv@divisor+3,w
  3510  0672  1C03               	skipc
  3511  0673  0F75               	incfsz	___lldiv@divisor+3,w
  3512  0674  02F9               	subwf	___lldiv@dividend+3,f
  3513  0675  1420               	bsf	___lldiv@quotient,0
  3514  0676  1003               	clrc
  3515  0677                     L11:	
  3516  0677  0CF5               	rrf	___lldiv@divisor+3,f
  3517  0678  0CF4               	rrf	___lldiv@divisor+2,f
  3518  0679  0CF3               	rrf	___lldiv@divisor+1,f
  3519  067A  0CF2               	rrf	___lldiv@divisor,f
  3520  067B  0BA4               	decfsz	___lldiv@counter,f
  3521  067C  2E52               	goto	l6481
  3522  067D                     l6493:	
  3523  067D  0823               	movf	___lldiv@quotient+3,w
  3524  067E  00F5               	movwf	?___lldiv+3
  3525  067F  0822               	movf	___lldiv@quotient+2,w
  3526  0680  00F4               	movwf	?___lldiv+2
  3527  0681  0821               	movf	___lldiv@quotient+1,w
  3528  0682  00F3               	movwf	?___lldiv+1
  3529  0683  0820               	movf	___lldiv@quotient,w
  3530  0684  00F2               	movwf	?___lldiv
  3531  0685  0008               	return
  3532  0686                     __end_of___lldiv:	
  3533  0686                     __ptext558:	
  3534 ;; =============== function __div_to_l_ ends ============
  3535                           
  3536                           
  3537 ;; *************** function __tdiv_to_l_ *****************
  3538 ;; Defined at:
  3539 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  f1              3    2[COMMON] float 
  3542 ;;  f2              3    5[COMMON] float 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  quot            4    0[BANK0 ] unsigned long 
  3545 ;;  exp1            1    5[BANK0 ] unsigned char 
  3546 ;;  cntr            1    4[BANK0 ] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  4    2[COMMON] unsigned long 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 60/20
  3553 ;;		On exit  : 60/0
  3554 ;;		Unchanged: FFF9F/0
  3555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3556 ;;      Params:         6       0       0       0       0
  3557 ;;      Locals:         0       6       0       0       0
  3558 ;;      Temps:          3       0       0       0       0
  3559 ;;      Totals:         9       6       0       0       0
  3560 ;;Total ram usage:       15 bytes
  3561 ;; Hardware stack levels used:    1
  3562 ;; Hardware stack levels required when called:    1
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_printf
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569  0686                     __tdiv_to_l_:	
  3570                           
  3571                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3572  0686  0872               	movf	__tdiv_to_l_@f1,w
  3573  0687  00F8               	movwf	??__tdiv_to_l_
  3574  0688  0873               	movf	__tdiv_to_l_@f1+1,w
  3575  0689  00F9               	movwf	??__tdiv_to_l_+1
  3576  068A  0874               	movf	__tdiv_to_l_@f1+2,w
  3577  068B  00FA               	movwf	??__tdiv_to_l_+2
  3578  068C  1003               	clrc
  3579  068D  0D79               	rlf	??__tdiv_to_l_+1,w
  3580  068E  0D7A               	rlf	??__tdiv_to_l_+2,w
  3581  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0690  00A5               	movwf	__tdiv_to_l_@exp1
  3583  0691  08A5               	movf	__tdiv_to_l_@exp1,f
  3584  0692  1D03               	skipz
  3585  0693  2E99               	goto	l6149
  3586  0694                     l6147:	
  3587  0694  01F2               	clrf	?__tdiv_to_l_
  3588  0695  01F3               	clrf	?__tdiv_to_l_+1
  3589  0696  01F4               	clrf	?__tdiv_to_l_+2
  3590  0697  01F5               	clrf	?__tdiv_to_l_+3
  3591  0698  0008               	return
  3592  0699                     l6149:	
  3593  0699  0875               	movf	__tdiv_to_l_@f2,w
  3594  069A  00F8               	movwf	??__tdiv_to_l_
  3595  069B  0876               	movf	__tdiv_to_l_@f2+1,w
  3596  069C  00F9               	movwf	??__tdiv_to_l_+1
  3597  069D  0877               	movf	__tdiv_to_l_@f2+2,w
  3598  069E  00FA               	movwf	??__tdiv_to_l_+2
  3599  069F  1003               	clrc
  3600  06A0  0D79               	rlf	??__tdiv_to_l_+1,w
  3601  06A1  0D7A               	rlf	??__tdiv_to_l_+2,w
  3602  06A2  00A4               	movwf	__tdiv_to_l_@cntr
  3603  06A3  08A4               	movf	__tdiv_to_l_@cntr,f
  3604  06A4  1903               	btfsc	3,2
  3605  06A5  2E94               	goto	l6147
  3606  06A6  307F               	movlw	127
  3607  06A7  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3608  06A8  01F4               	clrf	__tdiv_to_l_@f1+2
  3609  06A9  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3610  06AA  01F7               	clrf	__tdiv_to_l_@f2+2
  3611  06AB  01A0               	clrf	__tdiv_to_l_@quot
  3612  06AC  01A1               	clrf	__tdiv_to_l_@quot+1
  3613  06AD  01A2               	clrf	__tdiv_to_l_@quot+2
  3614  06AE  01A3               	clrf	__tdiv_to_l_@quot+3
  3615  06AF  02A5               	subwf	__tdiv_to_l_@exp1,f
  3616  06B0  3098               	movlw	152
  3617  06B1  0724               	addwf	__tdiv_to_l_@cntr,w
  3618  06B2  00F8               	movwf	??__tdiv_to_l_
  3619  06B3  02A5               	subwf	__tdiv_to_l_@exp1,f
  3620  06B4  3018               	movlw	24
  3621  06B5  00A4               	movwf	__tdiv_to_l_@cntr
  3622  06B6                     l6163:	
  3623  06B6  1003               	clrc
  3624  06B7  0DA0               	rlf	__tdiv_to_l_@quot,f
  3625  06B8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3626  06B9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3627  06BA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3628  06BB  0877               	movf	__tdiv_to_l_@f2+2,w
  3629  06BC  0274               	subwf	__tdiv_to_l_@f1+2,w
  3630  06BD  1D03               	skipz
  3631  06BE  2EC5               	goto	u2075
  3632  06BF  0876               	movf	__tdiv_to_l_@f2+1,w
  3633  06C0  0273               	subwf	__tdiv_to_l_@f1+1,w
  3634  06C1  1D03               	skipz
  3635  06C2  2EC5               	goto	u2075
  3636  06C3  0875               	movf	__tdiv_to_l_@f2,w
  3637  06C4  0272               	subwf	__tdiv_to_l_@f1,w
  3638  06C5                     u2075:	
  3639  06C5  1C03               	skipc
  3640  06C6  2ED3               	goto	L19
  3641  06C7  0875               	movf	__tdiv_to_l_@f2,w
  3642  06C8  02F2               	subwf	__tdiv_to_l_@f1,f
  3643  06C9  0876               	movf	__tdiv_to_l_@f2+1,w
  3644  06CA  1C03               	skipc
  3645  06CB  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3646  06CC  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3647  06CD  0877               	movf	__tdiv_to_l_@f2+2,w
  3648  06CE  1C03               	skipc
  3649  06CF  0A77               	incf	__tdiv_to_l_@f2+2,w
  3650  06D0  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3651  06D1  1420               	bsf	__tdiv_to_l_@quot,0
  3652  06D2  1003               	clrc
  3653  06D3                     L19:	
  3654  06D3  0DF2               	rlf	__tdiv_to_l_@f1,f
  3655  06D4  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3656  06D5  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3657  06D6  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3658  06D7  2EB6               	goto	l6163
  3659  06D8  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3660  06D9  2EE7               	goto	l6183
  3661  06DA  0825               	movf	__tdiv_to_l_@exp1,w
  3662  06DB  3A80               	xorlw	128
  3663  06DC  3E97               	addlw	151
  3664  06DD  1C03               	btfss	3,0
  3665  06DE  2E94               	goto	l6147
  3666  06DF                     l6179:	
  3667  06DF  1003               	clrc
  3668  06E0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3669  06E1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3670  06E2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3671  06E3  0CA0               	rrf	__tdiv_to_l_@quot,f
  3672  06E4  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3673  06E5  2EDF               	goto	l6179
  3674  06E6  2EF5               	goto	l6189
  3675  06E7                     l6183:	
  3676  06E7  3018               	movlw	24
  3677  06E8  0225               	subwf	__tdiv_to_l_@exp1,w
  3678  06E9  1803               	btfsc	3,0
  3679  06EA  2E94               	goto	l6147
  3680  06EB                     l3570:	
  3681  06EB  08A5               	movf	__tdiv_to_l_@exp1,f
  3682  06EC  1903               	btfsc	3,2
  3683  06ED  2EF5               	goto	l6189
  3684  06EE  1003               	clrc
  3685  06EF  0DA0               	rlf	__tdiv_to_l_@quot,f
  3686  06F0  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3687  06F1  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3688  06F2  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3689  06F3  03A5               	decf	__tdiv_to_l_@exp1,f
  3690  06F4  2EEB               	goto	l3570
  3691  06F5                     l6189:	
  3692  06F5  0823               	movf	__tdiv_to_l_@quot+3,w
  3693  06F6  00F5               	movwf	?__tdiv_to_l_+3
  3694  06F7  0822               	movf	__tdiv_to_l_@quot+2,w
  3695  06F8  00F4               	movwf	?__tdiv_to_l_+2
  3696  06F9  0821               	movf	__tdiv_to_l_@quot+1,w
  3697  06FA  00F3               	movwf	?__tdiv_to_l_+1
  3698  06FB  0820               	movf	__tdiv_to_l_@quot,w
  3699  06FC  00F2               	movwf	?__tdiv_to_l_
  3700  06FD  0008               	return
  3701  06FE                     __end_of__tdiv_to_l_:	
  3702  06FE                     __ptext548:	
  3703 ;; =============== function ___ftge ends ============
  3704                           
  3705                           
  3706 ;; *************** function ___ftneg *****************
  3707 ;; Defined at:
  3708 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;  f1              3    2[COMMON] float 
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  3    2[COMMON] float 
  3715 ;; Registers used:
  3716 ;;		wreg
  3717 ;; Tracked objects:
  3718 ;;		On entry : 160/20
  3719 ;;		On exit  : 160/20
  3720 ;;		Unchanged: FFE9F/0
  3721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3722 ;;      Params:         3       0       0       0       0
  3723 ;;      Locals:         0       0       0       0       0
  3724 ;;      Temps:          0       0       0       0       0
  3725 ;;      Totals:         3       0       0       0       0
  3726 ;;Total ram usage:        3 bytes
  3727 ;; Hardware stack levels used:    1
  3728 ;; Hardware stack levels required when called:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_printf
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735  06FE                     ___ftneg:	
  3736                           
  3737                           ; Regs used in ___ftneg: [wreg]
  3738  06FE  0874               	movf	___ftneg@f1+2,w
  3739  06FF  0473               	iorwf	___ftneg@f1+1,w
  3740  0700  0472               	iorwf	___ftneg@f1,w
  3741  0701  1903               	skipnz
  3742  0702  0008               	return
  3743  0703  3080               	movlw	128
  3744  0704  06F4               	xorwf	___ftneg@f1+2,f
  3745  0705  0008               	return
  3746  0706                     __end_of___ftneg:	
  3747  0706                     PL2:	
  3748  0706  0838               	movf	printf@c^(0+128),w
  3749  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0708  00DA               	movwf	??_printf
  3751  0709  1003               	clrc
  3752  070A  0DDA               	rlf	??_printf,f
  3753  070B  1003               	clrc
  3754  070C  0D5A               	rlf	??_printf,w
  3755  070D  3E4F               	addlw	low (_dpowers-__stringbase)
  3756  070E  0084               	movwf	4
  3757  070F  0008               	return
  3758  0710                     PL4:	
  3759  0710  300A               	movlw	10
  3760  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0712  00A5               	movwf	?___llmod
  3762  0713  01A6               	clrf	?___llmod+1
  3763  0714  01A7               	clrf	?___llmod+2
  3764  0715  01A8               	clrf	?___llmod+3
  3765  0716  1683               	bsf	3,5	;RP0=1, select bank1
  3766  0717  0008               	return
  3767  0718                     PL5:	
  3768  0718  00F5               	movwf	?___lldiv+3
  3769  0719  1683               	bsf	3,5	;RP0=1, select bank1
  3770  071A  082B               	movf	(printf@_val+3)^(0+128),w
  3771  071B  00F9               	movwf	?___lldiv+7
  3772  071C  082A               	movf	(printf@_val+2)^(0+128),w
  3773  071D  00F8               	movwf	?___lldiv+6
  3774  071E  0829               	movf	(printf@_val+1)^(0+128),w
  3775  071F  00F7               	movwf	?___lldiv+5
  3776  0720  0828               	movf	printf@_val^(0+128),w
  3777  0721  00F6               	movwf	?___lldiv+4
  3778  0722  0008               	return
  3779  0723                     PL6:	
  3780  0723  0827               	movf	?___fttol+3,w
  3781  0724  1683               	bsf	3,5	;RP0=1, select bank1
  3782  0725  00AB               	movwf	(printf@_val+3)^(0+128)
  3783  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3784  0727  0826               	movf	?___fttol+2,w
  3785  0728  1683               	bsf	3,5	;RP0=1, select bank1
  3786  0729  00AA               	movwf	(printf@_val+2)^(0+128)
  3787  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3788  072B  0825               	movf	?___fttol+1,w
  3789  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3790  072D  00A9               	movwf	(printf@_val+1)^(0+128)
  3791  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3792  072F  0824               	movf	?___fttol,w
  3793  0730  0008               	return
  3794  0731                     PL7:	
  3795  0731  0840               	movf	?_scale,w
  3796  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3797  0733  00A5               	movwf	printf@integ^(0+128)
  3798  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0735  0841               	movf	?_scale+1,w
  3800  0736  1683               	bsf	3,5	;RP0=1, select bank1
  3801  0737  00A6               	movwf	(printf@integ+1)^(0+128)
  3802  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0739  0842               	movf	?_scale+2,w
  3804  073A  1683               	bsf	3,5	;RP0=1, select bank1
  3805  073B  00A7               	movwf	(printf@integ+2)^(0+128)
  3806  073C  0833               	movf	printf@fval^(0+128),w
  3807  073D  0008               	return
  3808  073E                     PL12:	
  3809  073E  0875               	movf	?___lldiv+3,w
  3810  073F  00AC               	movwf	?___llmod+7
  3811  0740  0874               	movf	?___lldiv+2,w
  3812  0741  00AB               	movwf	?___llmod+6
  3813  0742  0873               	movf	?___lldiv+1,w
  3814  0743  00AA               	movwf	?___llmod+5
  3815  0744  0872               	movf	?___lldiv,w
  3816  0745  00A9               	movwf	?___llmod+4
  3817  0746  0008               	return
  3818  0747                     PL13:	
  3819  0747  0772               	addwf	?___wmul,w
  3820  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0749  00DA               	movwf	??_printf
  3822  074A  3000               	movlw	0
  3823  074B  1803               	skipnc
  3824  074C  3001               	movlw	1
  3825  074D  0773               	addwf	?___wmul+1,w
  3826  074E  00DB               	movwf	??_printf+1
  3827  074F  085A               	movf	??_printf,w
  3828  0750  3ED0               	addlw	208
  3829  0751  1683               	bsf	3,5	;RP0=1, select bank1
  3830  0752  0008               	return
  3831  0753                     PL14:	
  3832  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3833  0754  00A4               	movwf	?___fttol
  3834  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3835  0756  0834               	movf	(printf@fval+1)^(0+128),w
  3836  0757  1283               	bcf	3,5	;RP0=0, select bank0
  3837  0758  00A5               	movwf	?___fttol+1
  3838  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3839  075A  0835               	movf	(printf@fval+2)^(0+128),w
  3840  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3841  075C  00A6               	movwf	?___fttol+2
  3842  075D  0008               	return
  3843  075E                     PL16:	
  3844  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3845  075F  00B1               	movwf	?___ftmul
  3846  0760  1683               	bsf	3,5	;RP0=1, select bank1
  3847  0761  0834               	movf	(printf@fval+1)^(0+128),w
  3848  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0763  00B2               	movwf	?___ftmul+1
  3850  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3851  0765  0835               	movf	(printf@fval+2)^(0+128),w
  3852  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3853  0767  00B3               	movwf	?___ftmul+2
  3854  0768  0008               	return
  3855  0769                     PL18:	
  3856  0769  1283               	bcf	3,5	;RP0=0, select bank0
  3857  076A  00DA               	movwf	??_printf
  3858  076B  01DB               	clrf	??_printf+1
  3859  076C  1BDA               	btfsc	??_printf,7
  3860  076D  03DB               	decf	??_printf+1,f
  3861  076E  085B               	movf	??_printf+1,w
  3862  076F  3A80               	xorlw	128
  3863  0770  00DC               	movwf	??_printf+2
  3864  0771  1683               	bsf	3,5	;RP0=1, select bank1
  3865  0772  0008               	return
  3866  0773                     PL20:	
  3867  0773  1303               	bcf	3,6	;RP1=0, select bank1
  3868  0774  0838               	movf	printf@c^(0+128),w
  3869  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0776  00DA               	movwf	??_printf
  3871  0777  01DB               	clrf	??_printf+1
  3872  0778  1BDA               	btfsc	??_printf,7
  3873  0779  03DB               	decf	??_printf+1,f
  3874  077A  1683               	bsf	3,5	;RP0=1, select bank1
  3875  077B  0008               	return
  3876  077C                     PL21:	
  3877  077C  0825               	movf	printf@integ^(0+128),w
  3878  077D  00F2               	movwf	?___ftge
  3879  077E  0826               	movf	(printf@integ+1)^(0+128),w
  3880  077F  00F3               	movwf	?___ftge+1
  3881  0780  0827               	movf	(printf@integ+2)^(0+128),w
  3882  0781  00F4               	movwf	?___ftge+2
  3883  0782  0008               	return
  3884  0783                     PL27:	
  3885  0783  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0784  085B               	movf	??_printf+1,w
  3887  0785  1803               	skipnc
  3888  0786  3E01               	addlw	1
  3889  0787  3EFF               	addlw	255
  3890  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3891  0789  0008               	return
  3892  078A                     PL28:	
  3893  078A  0824               	movf	___fttol@f1,w
  3894  078B  00A8               	movwf	??___fttol
  3895  078C  0825               	movf	___fttol@f1+1,w
  3896  078D  00A9               	movwf	??___fttol+1
  3897  078E  0826               	movf	___fttol@f1+2,w
  3898  078F  00AA               	movwf	??___fttol+2
  3899  0790  0008               	return
  3900  0791                     PL31:	
  3901  0791  0800               	movf	0,w
  3902  0792  1283               	bcf	3,5	;RP0=0, select bank0
  3903  0793  00DA               	movwf	??_printf
  3904  0794  0A84               	incf	4,f
  3905  0795  0800               	movf	0,w
  3906  0796  00DB               	movwf	??_printf+1
  3907  0797  0008               	return
  3908  0798                     PL32:	
  3909  0798  1683               	bsf	3,5	;RP0=1, select bank1
  3910  0799  1303               	bcf	3,6	;RP1=0, select bank1
  3911  079A  0008               	return
  3912                           
  3913                           	psect	text534
  3914  088F                     __ptext534:	
  3915 ;; =============== function _lcd_putc ends ============
  3916                           
  3917                           
  3918 ;; *************** function ___ftsub *****************
  3919 ;; Defined at:
  3920 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;  f2              3   44[BANK0 ] float 
  3923 ;;  f1              3   47[BANK0 ] float 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  3   44[BANK0 ] float 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0, pclath, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 60/0
  3932 ;;		On exit  : 60/0
  3933 ;;		Unchanged: FFF9F/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       6       0       0       0
  3936 ;;      Locals:         0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0
  3938 ;;      Totals:         0       6       0       0       0
  3939 ;;Total ram usage:        6 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    3
  3942 ;; This function calls:
  3943 ;;		___ftadd
  3944 ;; This function is called by:
  3945 ;;		_printf
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948  088F                     ___ftsub:	
  3949                           
  3950                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3951  088F  3080               	movlw	128
  3952  0890  06CE               	xorwf	___ftsub@f2+2,f
  3953  0891  084F               	movf	___ftsub@f1,w
  3954  0892  00C0               	movwf	?___ftadd
  3955  0893  0850               	movf	___ftsub@f1+1,w
  3956  0894  00C1               	movwf	?___ftadd+1
  3957  0895  0851               	movf	___ftsub@f1+2,w
  3958  0896  00C2               	movwf	?___ftadd+2
  3959  0897  084C               	movf	___ftsub@f2,w
  3960  0898  00C3               	movwf	?___ftadd+3
  3961  0899  084D               	movf	___ftsub@f2+1,w
  3962  089A  00C4               	movwf	?___ftadd+4
  3963  089B  084E               	movf	___ftsub@f2+2,w
  3964  089C  00C5               	movwf	?___ftadd+5
  3965  089D  20A5               	fcall	___ftadd
  3966  089E  0840               	movf	?___ftadd,w
  3967  089F  00CC               	movwf	?___ftsub
  3968  08A0  0841               	movf	?___ftadd+1,w
  3969  08A1  00CD               	movwf	?___ftsub+1
  3970  08A2  0842               	movf	?___ftadd+2,w
  3971  08A3  00CE               	movwf	?___ftsub+2
  3972  08A4  0008               	return
  3973  08A5                     __end_of___ftsub:	
  3974  08A5                     __ptext542:	
  3975 ;; =============== function ___ftmul ends ============
  3976                           
  3977                           
  3978 ;; *************** function ___ftadd *****************
  3979 ;; Defined at:
  3980 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  f1              3   32[BANK0 ] float 
  3983 ;;  f2              3   35[BANK0 ] float 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  exp1            1   43[BANK0 ] unsigned char 
  3986 ;;  exp2            1   42[BANK0 ] unsigned char 
  3987 ;;  sign            1   41[BANK0 ] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  3   32[BANK0 ] float 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0, pclath, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 60/0
  3994 ;;		On exit  : 60/0
  3995 ;;		Unchanged: FFF9F/0
  3996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3997 ;;      Params:         0       6       0       0       0
  3998 ;;      Locals:         0       3       0       0       0
  3999 ;;      Temps:          0       3       0       0       0
  4000 ;;      Totals:         0      12       0       0       0
  4001 ;;Total ram usage:       12 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    2
  4004 ;; This function calls:
  4005 ;;		___ftpack
  4006 ;; This function is called by:
  4007 ;;		_printf
  4008 ;;		___ftsub
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011  08A5                     ___ftadd:	
  4012                           
  4013                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4014  08A5  0840               	movf	___ftadd@f1,w
  4015  08A6  00C6               	movwf	??___ftadd
  4016  08A7  0841               	movf	___ftadd@f1+1,w
  4017  08A8  00C7               	movwf	??___ftadd+1
  4018  08A9  0842               	movf	___ftadd@f1+2,w
  4019  08AA  00C8               	movwf	??___ftadd+2
  4020  08AB  1003               	clrc
  4021  08AC  0D47               	rlf	??___ftadd+1,w
  4022  08AD  0D48               	rlf	??___ftadd+2,w
  4023  08AE  00CB               	movwf	___ftadd@exp1
  4024  08AF  0843               	movf	___ftadd@f2,w
  4025  08B0  00C6               	movwf	??___ftadd
  4026  08B1  0844               	movf	___ftadd@f2+1,w
  4027  08B2  00C7               	movwf	??___ftadd+1
  4028  08B3  0845               	movf	___ftadd@f2+2,w
  4029  08B4  00C8               	movwf	??___ftadd+2
  4030  08B5  1003               	clrc
  4031  08B6  0D47               	rlf	??___ftadd+1,w
  4032  08B7  0D48               	rlf	??___ftadd+2,w
  4033  08B8  00CA               	movwf	___ftadd@exp2
  4034  08B9  084B               	movf	___ftadd@exp1,w
  4035  08BA  1903               	btfsc	3,2
  4036  08BB  28C8               	goto	l6591
  4037  08BC  084A               	movf	___ftadd@exp2,w
  4038  08BD  024B               	subwf	___ftadd@exp1,w
  4039  08BE  084A               	movf	___ftadd@exp2,w
  4040  08BF  1803               	skipnc
  4041  08C0  28D0               	goto	L7
  4042  08C1  00C6               	movwf	??___ftadd
  4043  08C2  084B               	movf	___ftadd@exp1,w
  4044  08C3  02C6               	subwf	??___ftadd,f
  4045  08C4  3019               	movlw	25
  4046  08C5  0246               	subwf	??___ftadd,w
  4047  08C6  1C03               	skipc
  4048  08C7  28CF               	goto	l6595
  4049  08C8                     l6591:	
  4050  08C8  0843               	movf	___ftadd@f2,w
  4051  08C9  00C0               	movwf	?___ftadd
  4052  08CA  0844               	movf	___ftadd@f2+1,w
  4053  08CB  00C1               	movwf	?___ftadd+1
  4054  08CC  0845               	movf	___ftadd@f2+2,w
  4055  08CD  00C2               	movwf	?___ftadd+2
  4056  08CE  0008               	return
  4057  08CF                     l6595:	
  4058  08CF  084A               	movf	___ftadd@exp2,w
  4059  08D0                     L7:	
  4060  08D0  1903               	btfsc	3,2
  4061  08D1  0008               	return
  4062  08D2  084B               	movf	___ftadd@exp1,w
  4063  08D3  024A               	subwf	___ftadd@exp2,w
  4064  08D4  1803               	skipnc
  4065  08D5  28DE               	goto	l6601
  4066  08D6  084B               	movf	___ftadd@exp1,w
  4067  08D7  00C6               	movwf	??___ftadd
  4068  08D8  084A               	movf	___ftadd@exp2,w
  4069  08D9  02C6               	subwf	??___ftadd,f
  4070  08DA  3019               	movlw	25
  4071  08DB  0246               	subwf	??___ftadd,w
  4072  08DC  1803               	btfsc	3,0
  4073  08DD  0008               	return
  4074  08DE                     l6601:	
  4075  08DE  3006               	movlw	6
  4076  08DF  00C9               	movwf	___ftadd@sign
  4077  08E0  1BC2               	btfsc	___ftadd@f1+2,7
  4078  08E1  17C9               	bsf	___ftadd@sign,7
  4079  08E2  1BC5               	btfsc	___ftadd@f2+2,7
  4080  08E3  1749               	bsf	___ftadd@sign,6
  4081  08E4  17C1               	bsf	___ftadd@f1+1,7
  4082  08E5  01C2               	clrf	___ftadd@f1+2
  4083  08E6  17C4               	bsf	___ftadd@f2+1,7
  4084  08E7  01C5               	clrf	___ftadd@f2+2
  4085  08E8  084A               	movf	___ftadd@exp2,w
  4086  08E9  024B               	subwf	___ftadd@exp1,w
  4087  08EA  1803               	skipnc
  4088  08EB  2905               	goto	l6623
  4089  08EC                     l6613:	
  4090  08EC  1003               	clrc
  4091  08ED  0DC3               	rlf	___ftadd@f2,f
  4092  08EE  0DC4               	rlf	___ftadd@f2+1,f
  4093  08EF  0DC5               	rlf	___ftadd@f2+2,f
  4094  08F0  03CA               	decf	___ftadd@exp2,f
  4095  08F1  084A               	movf	___ftadd@exp2,w
  4096  08F2  064B               	xorwf	___ftadd@exp1,w
  4097  08F3  1903               	skipnz
  4098  08F4  2900               	goto	l6621
  4099  08F5  03C9               	decf	___ftadd@sign,f
  4100  08F6  0849               	movf	___ftadd@sign,w
  4101  08F7  3907               	andlw	7
  4102  08F8  1903               	btfsc	3,2
  4103  08F9  2900               	goto	l6621
  4104  08FA  28EC               	goto	l6613
  4105  08FB                     l6619:	
  4106  08FB  1003               	clrc
  4107  08FC  0CC2               	rrf	___ftadd@f1+2,f
  4108  08FD  0CC1               	rrf	___ftadd@f1+1,f
  4109  08FE  0CC0               	rrf	___ftadd@f1,f
  4110  08FF  0ACB               	incf	___ftadd@exp1,f
  4111  0900                     l6621:	
  4112  0900  084B               	movf	___ftadd@exp1,w
  4113  0901  064A               	xorwf	___ftadd@exp2,w
  4114  0902  1903               	btfsc	3,2
  4115  0903  2921               	goto	l3376
  4116  0904  28FB               	goto	l6619
  4117  0905                     l6623:	
  4118  0905  084B               	movf	___ftadd@exp1,w
  4119  0906  024A               	subwf	___ftadd@exp2,w
  4120  0907  1803               	skipnc
  4121  0908  2921               	goto	l3376
  4122  0909                     l6625:	
  4123  0909  1003               	clrc
  4124  090A  0DC0               	rlf	___ftadd@f1,f
  4125  090B  0DC1               	rlf	___ftadd@f1+1,f
  4126  090C  0DC2               	rlf	___ftadd@f1+2,f
  4127  090D  03CB               	decf	___ftadd@exp1,f
  4128  090E  084A               	movf	___ftadd@exp2,w
  4129  090F  064B               	xorwf	___ftadd@exp1,w
  4130  0910  1903               	skipnz
  4131  0911  291D               	goto	l6633
  4132  0912  03C9               	decf	___ftadd@sign,f
  4133  0913  0849               	movf	___ftadd@sign,w
  4134  0914  3907               	andlw	7
  4135  0915  1903               	btfsc	3,2
  4136  0916  291D               	goto	l6633
  4137  0917  2909               	goto	l6625
  4138  0918                     l6631:	
  4139  0918  1003               	clrc
  4140  0919  0CC5               	rrf	___ftadd@f2+2,f
  4141  091A  0CC4               	rrf	___ftadd@f2+1,f
  4142  091B  0CC3               	rrf	___ftadd@f2,f
  4143  091C  0ACA               	incf	___ftadd@exp2,f
  4144  091D                     l6633:	
  4145  091D  084B               	movf	___ftadd@exp1,w
  4146  091E  064A               	xorwf	___ftadd@exp2,w
  4147  091F  1D03               	skipz
  4148  0920  2918               	goto	l6631
  4149  0921                     l3376:	
  4150  0921  1FC9               	btfss	___ftadd@sign,7
  4151  0922  292C               	goto	l6639
  4152  0923  30FF               	movlw	255
  4153  0924  06C0               	xorwf	___ftadd@f1,f
  4154  0925  06C1               	xorwf	___ftadd@f1+1,f
  4155  0926  06C2               	xorwf	___ftadd@f1+2,f
  4156  0927  0AC0               	incf	___ftadd@f1,f
  4157  0928  1903               	skipnz
  4158  0929  0AC1               	incf	___ftadd@f1+1,f
  4159  092A  1903               	skipnz
  4160  092B  0AC2               	incf	___ftadd@f1+2,f
  4161  092C                     l6639:	
  4162  092C  1F49               	btfss	___ftadd@sign,6
  4163  092D  2937               	goto	l6645
  4164  092E  30FF               	movlw	255
  4165  092F  06C3               	xorwf	___ftadd@f2,f
  4166  0930  06C4               	xorwf	___ftadd@f2+1,f
  4167  0931  06C5               	xorwf	___ftadd@f2+2,f
  4168  0932  0AC3               	incf	___ftadd@f2,f
  4169  0933  1903               	skipnz
  4170  0934  0AC4               	incf	___ftadd@f2+1,f
  4171  0935  1903               	skipnz
  4172  0936  0AC5               	incf	___ftadd@f2+2,f
  4173  0937                     l6645:	
  4174  0937  01C9               	clrf	___ftadd@sign
  4175  0938  0840               	movf	___ftadd@f1,w
  4176  0939  07C3               	addwf	___ftadd@f2,f
  4177  093A  0841               	movf	___ftadd@f1+1,w
  4178  093B  1103               	clrz
  4179  093C  1803               	skipnc
  4180  093D  0A41               	incf	___ftadd@f1+1,w
  4181  093E  1D03               	btfss	3,2
  4182  093F  07C4               	addwf	___ftadd@f2+1,f
  4183  0940  0842               	movf	___ftadd@f1+2,w
  4184  0941  1103               	clrz
  4185  0942  1803               	skipnc
  4186  0943  0A42               	incf	___ftadd@f1+2,w
  4187  0944  1D03               	btfss	3,2
  4188  0945  07C5               	addwf	___ftadd@f2+2,f
  4189  0946  1FC5               	btfss	___ftadd@f2+2,7
  4190  0947  2953               	goto	l6657
  4191  0948  30FF               	movlw	255
  4192  0949  06C3               	xorwf	___ftadd@f2,f
  4193  094A  06C4               	xorwf	___ftadd@f2+1,f
  4194  094B  06C5               	xorwf	___ftadd@f2+2,f
  4195  094C  0AC3               	incf	___ftadd@f2,f
  4196  094D  1903               	skipnz
  4197  094E  0AC4               	incf	___ftadd@f2+1,f
  4198  094F  1903               	skipnz
  4199  0950  0AC5               	incf	___ftadd@f2+2,f
  4200  0951  01C9               	clrf	___ftadd@sign
  4201  0952  0AC9               	incf	___ftadd@sign,f
  4202  0953                     l6657:	
  4203  0953  0843               	movf	___ftadd@f2,w
  4204  0954  00F2               	movwf	?___ftpack
  4205  0955  0844               	movf	___ftadd@f2+1,w
  4206  0956  00F3               	movwf	?___ftpack+1
  4207  0957  0845               	movf	___ftadd@f2+2,w
  4208  0958  00F4               	movwf	?___ftpack+2
  4209  0959  084B               	movf	___ftadd@exp1,w
  4210  095A  00F5               	movwf	?___ftpack+3
  4211  095B  0849               	movf	___ftadd@sign,w
  4212  095C  00F6               	movwf	?___ftpack+4
  4213  095D  120A  158A  2769   	fcall	___ftpack
  4214  0960  0872               	movf	?___ftpack,w
  4215  0961  00C0               	movwf	?___ftadd
  4216  0962  0873               	movf	?___ftpack+1,w
  4217  0963  00C1               	movwf	?___ftadd+1
  4218  0964  0874               	movf	?___ftpack+2,w
  4219  0965  00C2               	movwf	?___ftadd+2
  4220  0966  0008               	return
  4221  0967                     __end_of___ftadd:	
  4222                           
  4223                           	psect	text536
  4224  0967                     __ptext536:	
  4225 ;; =============== function _scale ends ============
  4226                           
  4227                           
  4228 ;; *************** function _fround *****************
  4229 ;; Defined at:
  4230 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  prec            1    wreg     unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  prec            1   53[BANK0 ] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  3   44[BANK0 ] unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 60/20
  4241 ;;		On exit  : 60/0
  4242 ;;		Unchanged: FFF9F/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4244 ;;      Params:         0       3       0       0       0
  4245 ;;      Locals:         0       7       0       0       0
  4246 ;;      Temps:          0       0       0       0       0
  4247 ;;      Totals:         0      10       0       0       0
  4248 ;;Total ram usage:       10 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    3
  4251 ;; This function calls:
  4252 ;;		___lbmod
  4253 ;;		___bmul
  4254 ;;		___lbdiv
  4255 ;;		___ftmul
  4256 ;; This function is called by:
  4257 ;;		_printf
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260  0967                     _fround:	
  4261                           
  4262                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4263                           ;fround@prec stored from wreg
  4264  0967  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0968  00D5               	movwf	fround@prec
  4266  0969  306E               	movlw	110
  4267  096A  0255               	subwf	fround@prec,w
  4268  096B  1C03               	skipc
  4269  096C  29F2               	goto	l6803
  4270  096D  3003               	movlw	3
  4271  096E  00FB               	movwf	?___bmul
  4272  096F  300A               	movlw	10
  4273  0970  00F7               	movwf	?___lbdiv
  4274  0971  3064               	movlw	100
  4275  0972  00F2               	movwf	?___lbmod
  4276  0973  0855               	movf	fround@prec,w
  4277  0974  2287  120A  158A   	fcall	___lbmod
  4278  0977  226C               	fcall	___lbdiv
  4279  0978  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4280  097D  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4281  097E  0084               	movwf	4
  4282  097F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4283  0984  00B1               	movwf	?___ftmul
  4284  0985  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4285  098A  00B2               	movwf	?___ftmul+1
  4286  098B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4287  0990  00B3               	movwf	?___ftmul+2
  4288  0991  3003               	movlw	3
  4289  0992  00FB               	movwf	?___bmul
  4290  0993  3064               	movlw	100
  4291  0994  00F7               	movwf	?___lbdiv
  4292  0995  0855               	movf	fround@prec,w
  4293  0996  226C               	fcall	___lbdiv
  4294  0997  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4295  099C  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4296  099D  0084               	movwf	4
  4297  099E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4298  09A3  00B4               	movwf	?___ftmul+3
  4299  09A4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4300  09A9  00B5               	movwf	?___ftmul+4
  4301  09AA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4302  09AF  00B6               	movwf	?___ftmul+5
  4303  09B0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4304  09B5  22B2  120A  158A   	fcall	PL30	;call to abstracted procedure
  4305  09B8  3003               	movlw	3
  4306  09B9  00FB               	movwf	?___bmul
  4307  09BA  300A               	movlw	10
  4308  09BB  00F2               	movwf	?___lbmod
  4309  09BC  0855               	movf	fround@prec,w
  4310  09BD  2287               	fcall	___lbmod
  4311  09BE  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4312  09C3  3E01               	addlw	low (__npowers_-__stringbase)
  4313  09C4  0084               	movwf	4
  4314  09C5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4315  09CA  00B1               	movwf	?___ftmul
  4316  09CB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4317  09D0  00B2               	movwf	?___ftmul+1
  4318  09D1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4319  09D6  22AA               	fcall	PL23	;call to abstracted procedure
  4320  09D7  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4321  09DC  0831               	movf	?___ftmul,w
  4322  09DD  00CF               	movwf	_fround$4122
  4323  09DE  0832               	movf	?___ftmul+1,w
  4324  09DF  00D0               	movwf	_fround$4122+1
  4325  09E0  0833               	movf	?___ftmul+2,w
  4326  09E1  00D1               	movwf	_fround$4122+2
  4327  09E2  303F               	movlw	63
  4328  09E3  01B1               	clrf	?___ftmul
  4329  09E4  01B2               	clrf	?___ftmul+1
  4330  09E5  00B3               	movwf	?___ftmul+2
  4331  09E6  084F               	movf	_fround$4122,w
  4332  09E7  00B4               	movwf	?___ftmul+3
  4333  09E8  0850               	movf	_fround$4122+1,w
  4334  09E9  00B5               	movwf	?___ftmul+4
  4335  09EA  0851               	movf	_fround$4122+2,w
  4336  09EB  00B6               	movwf	?___ftmul+5
  4337  09EC  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4338  09F1  2AA3               	ljmp	PL17	;call to abstracted procedure
  4339  09F2                     l6803:	
  4340  09F2  300B               	movlw	11
  4341  09F3  0255               	subwf	fround@prec,w
  4342  09F4  1C03               	skipc
  4343  09F5  2A46               	goto	l6811
  4344  09F6  3003               	movlw	3
  4345  09F7  00FB               	movwf	?___bmul
  4346  09F8  300A               	movlw	10
  4347  09F9  00F2               	movwf	?___lbmod
  4348  09FA  0855               	movf	fround@prec,w
  4349  09FB  2287               	fcall	___lbmod
  4350  09FC  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4351  0A01  3E01               	addlw	low (__npowers_-__stringbase)
  4352  0A02  0084               	movwf	4
  4353  0A03  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4354  0A08  00B1               	movwf	?___ftmul
  4355  0A09  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4356  0A0E  00B2               	movwf	?___ftmul+1
  4357  0A0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4358  0A14  00B3               	movwf	?___ftmul+2
  4359  0A15  3003               	movlw	3
  4360  0A16  00FB               	movwf	?___bmul
  4361  0A17  300A               	movlw	10
  4362  0A18  00F7               	movwf	?___lbdiv
  4363  0A19  0855               	movf	fround@prec,w
  4364  0A1A  226C               	fcall	___lbdiv
  4365  0A1B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4366  0A20  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4367  0A21  0084               	movwf	4
  4368  0A22  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4369  0A27  00B4               	movwf	?___ftmul+3
  4370  0A28  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4371  0A2D  00B5               	movwf	?___ftmul+4
  4372  0A2E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4373  0A33  00B6               	movwf	?___ftmul+5
  4374  0A34  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4375  0A39  22B2  120A  158A   	fcall	PL30	;call to abstracted procedure
  4376  0A3C  303F               	movlw	63
  4377  0A3D  01B1               	clrf	?___ftmul
  4378  0A3E  01B2               	clrf	?___ftmul+1
  4379  0A3F  22AA               	fcall	PL23	;call to abstracted procedure
  4380  0A40  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4381  0A45  2AA3               	ljmp	PL17	;call to abstracted procedure
  4382  0A46                     l6811:	
  4383  0A46  303F               	movlw	63
  4384  0A47  01B1               	clrf	?___ftmul
  4385  0A48  01B2               	clrf	?___ftmul+1
  4386  0A49  00B3               	movwf	?___ftmul+2
  4387  0A4A  3003               	movlw	3
  4388  0A4B  00FB               	movwf	?___bmul
  4389  0A4C  0855               	movf	fround@prec,w
  4390  0A4D  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4391  0A52  3E01               	addlw	low (__npowers_-__stringbase)
  4392  0A53  0084               	movwf	4
  4393  0A54  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4394  0A59  00B4               	movwf	?___ftmul+3
  4395  0A5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4396  0A5F  00B5               	movwf	?___ftmul+4
  4397  0A60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4398  0A65  00B6               	movwf	?___ftmul+5
  4399  0A66  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4400  0A6B  2AA3               	ljmp	PL17	;call to abstracted procedure
  4401  0A6C                     __end_of_fround:	
  4402  0A6C                     __ptext554:	
  4403 ;; =============== function ___lbmod ends ============
  4404                           
  4405                           
  4406 ;; *************** function ___lbdiv *****************
  4407 ;; Defined at:
  4408 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  dividend        1    wreg     unsigned char 
  4411 ;;  divisor         1    7[COMMON] unsigned char 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  dividend        1    8[COMMON] unsigned char 
  4414 ;;  quotient        1   10[COMMON] unsigned char 
  4415 ;;  counter         1    9[COMMON] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      unsigned char 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0
  4420 ;; Tracked objects:
  4421 ;;		On entry : 60/0
  4422 ;;		On exit  : 60/0
  4423 ;;		Unchanged: FFF9F/0
  4424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4425 ;;      Params:         1       0       0       0       0
  4426 ;;      Locals:         3       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0
  4428 ;;      Totals:         4       0       0       0       0
  4429 ;;Total ram usage:        4 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    1
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_fround
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438  0A6C                     ___lbdiv:	
  4439                           
  4440                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4441                           ;___lbdiv@dividend stored from wreg
  4442  0A6C  00F8               	movwf	___lbdiv@dividend
  4443  0A6D  01FA               	clrf	___lbdiv@quotient
  4444  0A6E  0877               	movf	___lbdiv@divisor,w
  4445  0A6F  1903               	btfsc	3,2
  4446  0A70  2A85               	goto	l6291
  4447  0A71  01F9               	clrf	___lbdiv@counter
  4448  0A72                     l6277:	
  4449  0A72  0AF9               	incf	___lbdiv@counter,f
  4450  0A73  1BF7               	btfsc	___lbdiv@divisor,7
  4451  0A74  2A78               	goto	l3345
  4452  0A75  1003               	clrc
  4453  0A76  0DF7               	rlf	___lbdiv@divisor,f
  4454  0A77  2A72               	goto	l6277
  4455  0A78                     l3345:	
  4456  0A78  1003               	clrc
  4457  0A79  0DFA               	rlf	___lbdiv@quotient,f
  4458  0A7A  0877               	movf	___lbdiv@divisor,w
  4459  0A7B  0278               	subwf	___lbdiv@dividend,w
  4460  0A7C  1C03               	skipc
  4461  0A7D  2A82               	goto	L18
  4462  0A7E  0877               	movf	___lbdiv@divisor,w
  4463  0A7F  02F8               	subwf	___lbdiv@dividend,f
  4464  0A80  147A               	bsf	___lbdiv@quotient,0
  4465  0A81  1003               	clrc
  4466  0A82                     L18:	
  4467  0A82  0CF7               	rrf	___lbdiv@divisor,f
  4468  0A83  0BF9               	decfsz	___lbdiv@counter,f
  4469  0A84  2A78               	goto	l3345
  4470  0A85                     l6291:	
  4471  0A85  087A               	movf	___lbdiv@quotient,w
  4472  0A86  0008               	return
  4473  0A87                     __end_of___lbdiv:	
  4474  0A87                     __ptext553:	
  4475 ;; =============== function ___ftpack ends ============
  4476                           
  4477                           
  4478 ;; *************** function ___lbmod *****************
  4479 ;; Defined at:
  4480 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  dividend        1    wreg     unsigned char 
  4483 ;;  divisor         1    2[COMMON] unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  dividend        1    4[COMMON] unsigned char 
  4486 ;;  rem             1    6[COMMON] unsigned char 
  4487 ;;  counter         1    5[COMMON] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      unsigned char 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 60/0
  4494 ;;		On exit  : 60/0
  4495 ;;		Unchanged: FFF9F/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4497 ;;      Params:         1       0       0       0       0
  4498 ;;      Locals:         3       0       0       0       0
  4499 ;;      Temps:          1       0       0       0       0
  4500 ;;      Totals:         5       0       0       0       0
  4501 ;;Total ram usage:        5 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:    1
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_fround
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510  0A87                     ___lbmod:	
  4511                           
  4512                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4513                           ;___lbmod@dividend stored from wreg
  4514  0A87  00F4               	movwf	___lbmod@dividend
  4515  0A88  3008               	movlw	8
  4516  0A89  00F5               	movwf	___lbmod@counter
  4517  0A8A  01F6               	clrf	___lbmod@rem
  4518  0A8B                     l6299:	
  4519  0A8B  0874               	movf	___lbmod@dividend,w
  4520  0A8C  00F3               	movwf	??___lbmod
  4521  0A8D  3007               	movlw	7
  4522  0A8E  1003               	clrc
  4523  0A8F                     L17:	
  4524  0A8F  0CF3               	rrf	??___lbmod,f
  4525  0A90  3EFF               	addlw	-1
  4526  0A91  1003               	clrc
  4527  0A92  1D03               	skipz
  4528  0A93  2A8F               	goto	L17
  4529  0A94  0D76               	rlf	___lbmod@rem,w
  4530  0A95  0473               	iorwf	??___lbmod,w
  4531  0A96  00F6               	movwf	___lbmod@rem
  4532  0A97  1003               	clrc
  4533  0A98  0DF4               	rlf	___lbmod@dividend,f
  4534  0A99  0872               	movf	___lbmod@divisor,w
  4535  0A9A  0276               	subwf	___lbmod@rem,w
  4536  0A9B  1C03               	skipc
  4537  0A9C  2A9F               	goto	l6307
  4538  0A9D  0872               	movf	___lbmod@divisor,w
  4539  0A9E  02F6               	subwf	___lbmod@rem,f
  4540  0A9F                     l6307:	
  4541  0A9F  0BF5               	decfsz	___lbmod@counter,f
  4542  0AA0  2A8B               	goto	l6299
  4543  0AA1  0876               	movf	___lbmod@rem,w
  4544  0AA2  0008               	return
  4545  0AA3                     __end_of___lbmod:	
  4546  0AA3                     PL17:	
  4547  0AA3  0831               	movf	?___ftmul,w
  4548  0AA4  00CC               	movwf	?_fround
  4549  0AA5  0832               	movf	?___ftmul+1,w
  4550  0AA6  00CD               	movwf	?_fround+1
  4551  0AA7  0833               	movf	?___ftmul+2,w
  4552  0AA8  00CE               	movwf	?_fround+2
  4553  0AA9  0008               	return
  4554  0AAA                     PL23:	
  4555  0AAA  00B3               	movwf	?___ftmul+2
  4556  0AAB  0852               	movf	_fround$4121,w
  4557  0AAC  00B4               	movwf	?___ftmul+3
  4558  0AAD  0853               	movf	_fround$4121+1,w
  4559  0AAE  00B5               	movwf	?___ftmul+4
  4560  0AAF  0854               	movf	_fround$4121+2,w
  4561  0AB0  00B6               	movwf	?___ftmul+5
  4562  0AB1  0008               	return
  4563  0AB2                     PL30:	
  4564  0AB2  0831               	movf	?___ftmul,w
  4565  0AB3  00D2               	movwf	_fround$4121
  4566  0AB4  0832               	movf	?___ftmul+1,w
  4567  0AB5  00D3               	movwf	_fround$4121+1
  4568  0AB6  0833               	movf	?___ftmul+2,w
  4569  0AB7  00D4               	movwf	_fround$4121+2
  4570  0AB8  0008               	return
  4571                           
  4572                           	psect	text537
  4573  0AB9                     __ptext537:	
  4574 ;; =============== function _fround ends ============
  4575                           
  4576                           
  4577 ;; *************** function _lcd_gotoxy *****************
  4578 ;; Defined at:
  4579 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  col             1    wreg     unsigned char 
  4582 ;;  row             1    7[COMMON] unsigned char 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  col             1    8[COMMON] unsigned char 
  4585 ;;  address         1    9[COMMON] unsigned char 
  4586 ;; Return value:  Size  Location     Type
  4587 ;;		None               void
  4588 ;; Registers used:
  4589 ;;		wreg, status,2, status,0, pclath, cstack
  4590 ;; Tracked objects:
  4591 ;;		On entry : 0/0
  4592 ;;		On exit  : 60/0
  4593 ;;		Unchanged: 0/0
  4594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4595 ;;      Params:         1       0       0       0       0
  4596 ;;      Locals:         2       0       0       0       0
  4597 ;;      Temps:          0       0       0       0       0
  4598 ;;      Totals:         3       0       0       0       0
  4599 ;;Total ram usage:        3 bytes
  4600 ;; Hardware stack levels used:    1
  4601 ;; Hardware stack levels required when called:    2
  4602 ;; This function calls:
  4603 ;;		_lcd_put_byte
  4604 ;;		_lcd_busy
  4605 ;; This function is called by:
  4606 ;;		_main
  4607 ;;		_lcd_putc
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610  0AB9                     _lcd_gotoxy:	
  4611                           
  4612                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4613                           ;lcd_gotoxy@col stored from wreg
  4614  0AB9  00F8               	movwf	lcd_gotoxy@col
  4615                           
  4616                           ;lcd(16).c: 163: unsigned char address;
  4617                           ;lcd(16).c: 165: if(row!=0)
  4618  0ABA  0877               	movf	lcd_gotoxy@row,w
  4619  0ABB  1903               	btfsc	3,2
  4620  0ABC  2AC0               	goto	l6785
  4621                           
  4622                           ;lcd(16).c: 166: address=0x40;
  4623  0ABD  3040               	movlw	64
  4624  0ABE  00F9               	movwf	lcd_gotoxy@address
  4625  0ABF  2AC1               	goto	l6787
  4626  0AC0                     l6785:	
  4627                           
  4628                           ;lcd(16).c: 167: else
  4629                           ;lcd(16).c: 168: address=0;
  4630  0AC0  01F9               	clrf	lcd_gotoxy@address
  4631  0AC1                     l6787:	
  4632                           
  4633                           ;lcd(16).c: 170: address += col;
  4634  0AC1  0878               	movf	lcd_gotoxy@col,w
  4635  0AC2  07F9               	addwf	lcd_gotoxy@address,f
  4636                           
  4637                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4638  0AC3  0879               	movf	lcd_gotoxy@address,w
  4639  0AC4  3880               	iorlw	128
  4640  0AC5  00F2               	movwf	?_lcd_put_byte
  4641  0AC6  3000               	movlw	0
  4642  0AC7  23BB  120A  158A   	fcall	_lcd_put_byte
  4643  0ACA                     l6791:	
  4644                           ;lcd(16).c: 172: while(lcd_busy());
  4645                           
  4646  0ACA  244B  120A  158A   	fcall	_lcd_busy
  4647  0ACD  3800               	iorlw	0
  4648  0ACE  1903               	btfsc	3,2
  4649  0ACF  0008               	return
  4650  0AD0  2ACA               	goto	l6791
  4651  0AD1                     __end_of_lcd_gotoxy:	
  4652  0AD1                     __ptext533:	
  4653 ;; =============== function _putch ends ============
  4654                           
  4655                           
  4656 ;; *************** function _lcd_putc *****************
  4657 ;; Defined at:
  4658 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  c               1    wreg     unsigned char 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  c               1   10[COMMON] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;		None               void
  4665 ;; Registers used:
  4666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/20
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         0       0       0       0       0
  4673 ;;      Locals:         1       0       0       0       0
  4674 ;;      Temps:          0       0       0       0       0
  4675 ;;      Totals:         1       0       0       0       0
  4676 ;;Total ram usage:        1 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    3
  4679 ;; This function calls:
  4680 ;;		_lcd_put_byte
  4681 ;;		_lcd_busy
  4682 ;;		_lcd_gotoxy
  4683 ;;		_isprint
  4684 ;; This function is called by:
  4685 ;;		_putch
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688  0AD1                     _lcd_putc:	
  4689                           
  4690                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4691                           ;lcd_putc@c stored from wreg
  4692  0AD1  00FA               	movwf	lcd_putc@c
  4693                           
  4694                           ;lcd(16).c: 144: switch(c){
  4695  0AD2  2AF7               	goto	l6877
  4696  0AD3                     l6863:	
  4697  0AD3  3000               	movlw	0
  4698                           
  4699                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4700  0AD4  01F2               	clrf	?_lcd_put_byte
  4701  0AD5  0AF2               	incf	?_lcd_put_byte,f
  4702  0AD6  23BB  120A  158A   	fcall	_lcd_put_byte
  4703  0AD9                     l6865:	
  4704                           ;lcd(16).c: 147: while(lcd_busy());
  4705                           
  4706  0AD9  244B  120A  158A   	fcall	_lcd_busy
  4707  0ADC  3800               	iorlw	0
  4708  0ADD  1903               	btfsc	3,2
  4709  0ADE  0008               	return
  4710  0ADF  2AD9               	goto	l6865
  4711  0AE0                     l6867:	
  4712  0AE0  3000               	movlw	0
  4713                           
  4714                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4715  0AE1  01F7               	clrf	?_lcd_gotoxy
  4716  0AE2  0AF7               	incf	?_lcd_gotoxy,f
  4717  0AE3  2AB9               	ljmp	_lcd_gotoxy
  4718  0AE4                     l6869:	
  4719                           ;lcd(16).c: 151: break;
  4720                           
  4721                           
  4722                           ;lcd(16).c: 153: if(isprint(c)){
  4723  0AE4  087A               	movf	lcd_putc@c,w
  4724  0AE5  2472  120A  158A   	fcall	_isprint
  4725  0AE8  1C03               	btfss	3,0
  4726  0AE9  0008               	return
  4727                           
  4728                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4729  0AEA  087A               	movf	lcd_putc@c,w
  4730  0AEB  00F2               	movwf	?_lcd_put_byte
  4731  0AEC  3001               	movlw	1
  4732  0AED  23BB  120A  158A   	fcall	_lcd_put_byte
  4733  0AF0                     l6873:	
  4734                           ;lcd(16).c: 155: while(lcd_busy());
  4735                           
  4736  0AF0  244B  120A  158A   	fcall	_lcd_busy
  4737  0AF3  3800               	iorlw	0
  4738  0AF4  1903               	btfsc	3,2
  4739  0AF5  0008               	return
  4740  0AF6  2AF0               	goto	l6873
  4741  0AF7                     l6877:	
  4742  0AF7  087A               	movf	lcd_putc@c,w
  4743                           
  4744                           ; Switch size 1, requested type "space"
  4745                           ; Number of cases is 2, Range of values is 10 to 12
  4746                           ; switch strategies available:
  4747                           ; Name         Instructions Cycles
  4748                           ; simple_byte            7     4 (average)
  4749                           ; direct_byte           20    11 (fixed)
  4750                           ; jumptable            263     9 (fixed)
  4751                           ;	Chosen strategy is simple_byte
  4752  0AF8  3A0A               	xorlw	10	; case 10
  4753  0AF9  1903               	skipnz
  4754  0AFA  2AE0               	goto	l6867
  4755  0AFB  3A06               	xorlw	6	; case 12
  4756  0AFC  1903               	skipnz
  4757  0AFD  2AD3               	goto	l6863
  4758  0AFE  2AE4               	goto	l6869
  4759  0AFF  0008               	return
  4760  0B00                     __end_of_lcd_putc:	
  4761  0B00                     __ptext538:	
  4762 ;; =============== function _lcd_gotoxy ends ============
  4763                           
  4764                           
  4765 ;; *************** function _lcd_init *****************
  4766 ;; Defined at:
  4767 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  i               1    0        unsigned char 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;		None               void
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 17F/60
  4778 ;;		On exit  : 60/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4781 ;;      Params:         0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0
  4783 ;;      Temps:          3       0       0       0       0
  4784 ;;      Totals:         3       0       0       0       0
  4785 ;;Total ram usage:        3 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    2
  4788 ;; This function calls:
  4789 ;;		_lcd_put_byte
  4790 ;;		_lcd_busy
  4791 ;; This function is called by:
  4792 ;;		_main
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795  0B00                     _lcd_init:	
  4796                           
  4797                           ;lcd(16).c: 6: unsigned char i;
  4798                           ;lcd(16).c: 7: TRISD3 = 0;
  4799                           
  4800                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4801  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  4802  0B01  1188               	bcf	8,3
  4803                           
  4804                           ;lcd(16).c: 8: TRISD1 = 0;
  4805  0B02  1088               	bcf	8,1
  4806                           
  4807                           ;lcd(16).c: 9: TRISD2 = 0;
  4808  0B03  1108               	bcf	8,2
  4809                           
  4810                           ;lcd(16).c: 10: TRISD4 = 0;
  4811  0B04  1208               	bcf	8,4
  4812                           
  4813                           ;lcd(16).c: 11: TRISD5 = 0;
  4814  0B05  1288               	bcf	8,5
  4815                           
  4816                           ;lcd(16).c: 12: TRISD6 = 0;
  4817  0B06  1308               	bcf	8,6
  4818                           
  4819                           ;lcd(16).c: 13: TRISD7 = 0;
  4820  0B07  1388               	bcf	8,7
  4821                           
  4822                           ;lcd(16).c: 14: RD3 = 0;
  4823  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  4824  0B09  3003               	movlw	3
  4825  0B0A  1188               	bcf	8,3
  4826                           
  4827                           ;lcd(16).c: 15: RD1 = 0;
  4828  0B0B  1088               	bcf	8,1
  4829                           
  4830                           ;lcd(16).c: 16: RD2 = 0;
  4831  0B0C  1108               	bcf	8,2
  4832                           
  4833                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4834  0B0D  00F9               	movwf	??_lcd_init+2
  4835  0B0E  308A               	movlw	138
  4836  0B0F  00F8               	movwf	??_lcd_init+1
  4837  0B10  3056               	movlw	86
  4838  0B11  00F7               	movwf	??_lcd_init
  4839  0B12                     u3977:	
  4840  0B12  0BF7               	decfsz	??_lcd_init,f
  4841  0B13  2B12               	goto	u3977
  4842  0B14  0BF8               	decfsz	??_lcd_init+1,f
  4843  0B15  2B12               	goto	u3977
  4844  0B16  0BF9               	decfsz	??_lcd_init+2,f
  4845  0B17  2B12               	goto	u3977
  4846  0B18  2B19               	nop2
  4847                           
  4848                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4849  0B19  3030               	movlw	48
  4850  0B1A  00F2               	movwf	?_lcd_put_byte
  4851  0B1B  3000               	movlw	0
  4852  0B1C  23BB  120A  158A   	fcall	_lcd_put_byte
  4853                           
  4854                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4855  0B1F  3002               	movlw	2
  4856  0B20  00F9               	movwf	??_lcd_init+2
  4857  0B21  3045               	movlw	69
  4858  0B22  00F8               	movwf	??_lcd_init+1
  4859  0B23  30A9               	movlw	169
  4860  0B24  00F7               	movwf	??_lcd_init
  4861  0B25                     u3987:	
  4862  0B25  0BF7               	decfsz	??_lcd_init,f
  4863  0B26  2B25               	goto	u3987
  4864  0B27  0BF8               	decfsz	??_lcd_init+1,f
  4865  0B28  2B25               	goto	u3987
  4866  0B29  0BF9               	decfsz	??_lcd_init+2,f
  4867  0B2A  2B25               	goto	u3987
  4868  0B2B  2B2C               	nop2
  4869                           
  4870                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4871  0B2C  3030               	movlw	48
  4872  0B2D  00F2               	movwf	?_lcd_put_byte
  4873  0B2E  3000               	movlw	0
  4874  0B2F  23BB  120A  158A   	fcall	_lcd_put_byte
  4875                           
  4876                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4877  0B32  3002               	movlw	2
  4878  0B33  00F9               	movwf	??_lcd_init+2
  4879  0B34  3045               	movlw	69
  4880  0B35  00F8               	movwf	??_lcd_init+1
  4881  0B36  30A9               	movlw	169
  4882  0B37  00F7               	movwf	??_lcd_init
  4883  0B38                     u3997:	
  4884  0B38  0BF7               	decfsz	??_lcd_init,f
  4885  0B39  2B38               	goto	u3997
  4886  0B3A  0BF8               	decfsz	??_lcd_init+1,f
  4887  0B3B  2B38               	goto	u3997
  4888  0B3C  0BF9               	decfsz	??_lcd_init+2,f
  4889  0B3D  2B38               	goto	u3997
  4890  0B3E  2B3F               	nop2
  4891                           
  4892                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4893  0B3F  3032               	movlw	50
  4894  0B40  00F2               	movwf	?_lcd_put_byte
  4895  0B41  3000               	movlw	0
  4896  0B42  23BB  120A  158A   	fcall	_lcd_put_byte
  4897                           
  4898                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4899  0B45  3003               	movlw	3
  4900  0B46  00F9               	movwf	??_lcd_init+2
  4901  0B47  308A               	movlw	138
  4902  0B48  00F8               	movwf	??_lcd_init+1
  4903  0B49  3056               	movlw	86
  4904  0B4A  00F7               	movwf	??_lcd_init
  4905  0B4B                     u4007:	
  4906  0B4B  0BF7               	decfsz	??_lcd_init,f
  4907  0B4C  2B4B               	goto	u4007
  4908  0B4D  0BF8               	decfsz	??_lcd_init+1,f
  4909  0B4E  2B4B               	goto	u4007
  4910  0B4F  0BF9               	decfsz	??_lcd_init+2,f
  4911  0B50  2B4B               	goto	u4007
  4912  0B51  2B52               	nop2
  4913                           
  4914                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4915  0B52  3003               	movlw	3
  4916  0B53  00F9               	movwf	??_lcd_init+2
  4917  0B54  308A               	movlw	138
  4918  0B55  00F8               	movwf	??_lcd_init+1
  4919  0B56  3056               	movlw	86
  4920  0B57  00F7               	movwf	??_lcd_init
  4921  0B58                     u4017:	
  4922  0B58  0BF7               	decfsz	??_lcd_init,f
  4923  0B59  2B58               	goto	u4017
  4924  0B5A  0BF8               	decfsz	??_lcd_init+1,f
  4925  0B5B  2B58               	goto	u4017
  4926  0B5C  0BF9               	decfsz	??_lcd_init+2,f
  4927  0B5D  2B58               	goto	u4017
  4928  0B5E  2B5F               	nop2
  4929                           
  4930                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4931  0B5F  3003               	movlw	3
  4932  0B60  00F9               	movwf	??_lcd_init+2
  4933  0B61  308A               	movlw	138
  4934  0B62  00F8               	movwf	??_lcd_init+1
  4935  0B63  3056               	movlw	86
  4936  0B64  00F7               	movwf	??_lcd_init
  4937  0B65                     u4027:	
  4938  0B65  0BF7               	decfsz	??_lcd_init,f
  4939  0B66  2B65               	goto	u4027
  4940  0B67  0BF8               	decfsz	??_lcd_init+1,f
  4941  0B68  2B65               	goto	u4027
  4942  0B69  0BF9               	decfsz	??_lcd_init+2,f
  4943  0B6A  2B65               	goto	u4027
  4944  0B6B  2B6C               	nop2
  4945  0B6C                     l6755:	
  4946                           ;lcd(16).c: 30: while(lcd_busy());
  4947                           
  4948  0B6C  244B  120A  158A   	fcall	_lcd_busy
  4949  0B6F  3800               	iorlw	0
  4950  0B70  1D03               	skipz
  4951  0B71  2B6C               	goto	l6755
  4952                           
  4953                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4954  0B72  3028               	movlw	40
  4955  0B73  00F2               	movwf	?_lcd_put_byte
  4956  0B74  3000               	movlw	0
  4957  0B75  23BB  120A  158A   	fcall	_lcd_put_byte
  4958  0B78                     l6759:	
  4959                           ;lcd(16).c: 32: while(lcd_busy());
  4960                           
  4961  0B78  244B  120A  158A   	fcall	_lcd_busy
  4962  0B7B  3800               	iorlw	0
  4963  0B7C  1D03               	skipz
  4964  0B7D  2B78               	goto	l6759
  4965                           
  4966                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4967  0B7E  3008               	movlw	8
  4968  0B7F  00F2               	movwf	?_lcd_put_byte
  4969  0B80  3000               	movlw	0
  4970  0B81  23BB  120A  158A   	fcall	_lcd_put_byte
  4971  0B84                     l6763:	
  4972                           ;lcd(16).c: 35: while(lcd_busy());
  4973                           
  4974  0B84  244B  120A  158A   	fcall	_lcd_busy
  4975  0B87  3800               	iorlw	0
  4976  0B88  1D03               	skipz
  4977  0B89  2B84               	goto	l6763
  4978                           
  4979                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4980  0B8A  300C               	movlw	12
  4981  0B8B  00F2               	movwf	?_lcd_put_byte
  4982  0B8C  3000               	movlw	0
  4983  0B8D  23BB  120A  158A   	fcall	_lcd_put_byte
  4984  0B90                     l6767:	
  4985                           ;lcd(16).c: 37: while(lcd_busy());
  4986                           
  4987  0B90  244B  120A  158A   	fcall	_lcd_busy
  4988  0B93  3800               	iorlw	0
  4989  0B94  1D03               	skipz
  4990  0B95  2B90               	goto	l6767
  4991  0B96  3000               	movlw	0
  4992                           
  4993                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4994  0B97  01F2               	clrf	?_lcd_put_byte
  4995  0B98  0AF2               	incf	?_lcd_put_byte,f
  4996  0B99  23BB  120A  158A   	fcall	_lcd_put_byte
  4997  0B9C                     l6771:	
  4998                           ;lcd(16).c: 40: while(lcd_busy());
  4999                           
  5000  0B9C  244B  120A  158A   	fcall	_lcd_busy
  5001  0B9F  3800               	iorlw	0
  5002  0BA0  1D03               	skipz
  5003  0BA1  2B9C               	goto	l6771
  5004                           
  5005                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5006  0BA2  3004               	movlw	4
  5007  0BA3  00F2               	movwf	?_lcd_put_byte
  5008  0BA4  3000               	movlw	0
  5009  0BA5  23BB  120A  158A   	fcall	_lcd_put_byte
  5010  0BA8                     l6775:	
  5011                           ;lcd(16).c: 42: while(lcd_busy());
  5012                           
  5013  0BA8  244B  120A  158A   	fcall	_lcd_busy
  5014  0BAB  3800               	iorlw	0
  5015  0BAC  1D03               	skipz
  5016  0BAD  2BA8               	goto	l6775
  5017  0BAE  3000               	movlw	0
  5018                           
  5019                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5020  0BAF  01F2               	clrf	?_lcd_put_byte
  5021  0BB0  0AF2               	incf	?_lcd_put_byte,f
  5022  0BB1  23BB  120A  158A   	fcall	_lcd_put_byte
  5023  0BB4                     l6779:	
  5024                           ;lcd(16).c: 44: while(lcd_busy());
  5025                           
  5026  0BB4  244B  120A  158A   	fcall	_lcd_busy
  5027  0BB7  3800               	iorlw	0
  5028  0BB8  1903               	btfsc	3,2
  5029  0BB9  0008               	return
  5030  0BBA  2BB4               	goto	l6779
  5031  0BBB                     __end_of_lcd_init:	
  5032  0BBB                     __ptext544:	
  5033 ;; =============== function _lcd_busy ends ============
  5034                           
  5035                           
  5036 ;; *************** function _lcd_put_byte *****************
  5037 ;; Defined at:
  5038 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  rs              1    wreg     unsigned char 
  5041 ;;  b               1    2[COMMON] unsigned char 
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;  rs              1    5[COMMON] unsigned char 
  5044 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  5045 ;; Return value:  Size  Location     Type
  5046 ;;		None               void
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/20
  5051 ;;		On exit  : 60/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5054 ;;      Params:         1       0       0       0       0
  5055 ;;      Locals:         2       0       0       0       0
  5056 ;;      Temps:          2       0       0       0       0
  5057 ;;      Totals:         5       0       0       0       0
  5058 ;;Total ram usage:        5 bytes
  5059 ;; Hardware stack levels used:    1
  5060 ;; Hardware stack levels required when called:    1
  5061 ;; This function calls:
  5062 ;;		Nothing
  5063 ;; This function is called by:
  5064 ;;		_lcd_init
  5065 ;;		_lcd_putc
  5066 ;;		_lcd_gotoxy
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069  0BBB                     _lcd_put_byte:	
  5070                           
  5071                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5072                           ;lcd_put_byte@rs stored from wreg
  5073  0BBB  00F5               	movwf	lcd_put_byte@rs
  5074                           
  5075                           ;lcd(16).c: 107: BYTE_VAL temp;
  5076                           ;lcd(16).c: 109: TRISD4 = 0;
  5077  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  5078  0BBD  1303               	bcf	3,6	;RP1=0, select bank1
  5079  0BBE  1208               	bcf	8,4
  5080                           
  5081                           ;lcd(16).c: 110: TRISD5 = 0;
  5082  0BBF  1288               	bcf	8,5
  5083                           
  5084                           ;lcd(16).c: 111: TRISD6 = 0;
  5085  0BC0  1308               	bcf	8,6
  5086                           
  5087                           ;lcd(16).c: 112: TRISD7 = 0;
  5088  0BC1  1388               	bcf	8,7
  5089                           
  5090                           ;lcd(16).c: 114: RD1 = 0;
  5091  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  5092  0BC3  1088               	bcf	8,1
  5093                           
  5094                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5095  0BC4  0875               	movf	lcd_put_byte@rs,w
  5096  0BC5  1D03               	skipz
  5097  0BC6  1488               	bsf	8,1
  5098                           
  5099                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5100  0BC7  3021               	movlw	33
  5101  0BC8  00F3               	movwf	??_lcd_put_byte
  5102  0BC9                     u4077:	
  5103  0BC9  0BF3               	decfsz	??_lcd_put_byte,f
  5104  0BCA  2BC9               	goto	u4077
  5105  0BCB  2487               	call	PL33	;select bank 0
  5106                           
  5107                           ;lcd(16).c: 118: RD2 = 0;
  5108  0BCC  3021               	movlw	33
  5109  0BCD  1108               	bcf	8,2
  5110                           
  5111                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5112  0BCE  00F3               	movwf	??_lcd_put_byte
  5113  0BCF                     u4087:	
  5114  0BCF  0BF3               	decfsz	??_lcd_put_byte,f
  5115  0BD0  2BCF               	goto	u4087
  5116  0BD1  2487               	call	PL33	;select bank 0
  5117                           
  5118                           ;lcd(16).c: 120: RD3 = 0;
  5119  0BD2  1188               	bcf	8,3
  5120                           
  5121                           ;lcd(16).c: 122: temp.Val = b;
  5122  0BD3  0872               	movf	lcd_put_byte@b,w
  5123  0BD4  00F6               	movwf	lcd_put_byte@temp
  5124                           
  5125                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5126  0BD5  0E76               	swapf	lcd_put_byte@temp,w
  5127  0BD6  3901               	andlw	1
  5128  0BD7  00F3               	movwf	??_lcd_put_byte
  5129  0BD8  0C73               	rrf	??_lcd_put_byte,w
  5130  0BD9  1C03               	btfss	3,0
  5131  0BDA  2BDE               	goto	u2760
  5132  0BDB  2487               	call	PL33	;select bank 0
  5133  0BDC  1608               	bsf	8,4
  5134  0BDD  2BE0               	goto	l6547
  5135  0BDE                     u2760:	
  5136  0BDE  2487               	call	PL33	;select bank 0
  5137  0BDF  1208               	bcf	8,4
  5138  0BE0                     l6547:	
  5139                           
  5140                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5141  0BE0  0E76               	swapf	lcd_put_byte@temp,w
  5142  0BE1  00F3               	movwf	??_lcd_put_byte
  5143  0BE2  0C73               	rrf	??_lcd_put_byte,w
  5144  0BE3  3901               	andlw	1
  5145  0BE4  00F4               	movwf	??_lcd_put_byte+1
  5146  0BE5  0C74               	rrf	??_lcd_put_byte+1,w
  5147  0BE6  1C03               	btfss	3,0
  5148  0BE7  2BEB               	goto	u2780
  5149  0BE8  2487               	call	PL33	;select bank 0
  5150  0BE9  1688               	bsf	8,5
  5151  0BEA  2BED               	goto	l6549
  5152  0BEB                     u2780:	
  5153  0BEB  2487               	call	PL33	;select bank 0
  5154  0BEC  1288               	bcf	8,5
  5155  0BED                     l6549:	
  5156                           
  5157                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5158  0BED  0E76               	swapf	lcd_put_byte@temp,w
  5159  0BEE  2480  120A  158A   	fcall	PL29	;call to abstracted procedure
  5160  0BF1  1C03               	btfss	3,0
  5161  0BF2  2BF6               	goto	u2800
  5162  0BF3  2487               	call	PL33	;select bank 0
  5163  0BF4  1708               	bsf	8,6
  5164  0BF5  2BF8               	goto	l6551
  5165  0BF6                     u2800:	
  5166  0BF6  2487               	call	PL33	;select bank 0
  5167  0BF7  1308               	bcf	8,6
  5168  0BF8                     l6551:	
  5169                           
  5170                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5171  0BF8  0D76               	rlf	lcd_put_byte@temp,w
  5172  0BF9  0D76               	rlf	lcd_put_byte@temp,w
  5173  0BFA  3901               	andlw	1
  5174  0BFB  00F3               	movwf	??_lcd_put_byte
  5175  0BFC  0C73               	rrf	??_lcd_put_byte,w
  5176  0BFD  1C03               	btfss	3,0
  5177  0BFE  2C02               	goto	u2820
  5178  0BFF  2487               	call	PL33	;select bank 0
  5179  0C00  1788               	bsf	8,7
  5180  0C01  2C04               	goto	u2834
  5181  0C02                     u2820:	
  5182  0C02  2487               	call	PL33	;select bank 0
  5183  0C03  1388               	bcf	8,7
  5184  0C04                     u2834:	
  5185                           
  5186                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5187  0C04  3021               	movlw	33
  5188  0C05  00F3               	movwf	??_lcd_put_byte
  5189  0C06                     u4097:	
  5190  0C06  0BF3               	decfsz	??_lcd_put_byte,f
  5191  0C07  2C06               	goto	u4097
  5192  0C08  2487               	call	PL33	;select bank 0
  5193                           
  5194                           ;lcd(16).c: 130: RD3 = 1;
  5195  0C09  3021               	movlw	33
  5196  0C0A  1588               	bsf	8,3
  5197                           
  5198                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5199  0C0B  00F3               	movwf	??_lcd_put_byte
  5200  0C0C                     u4107:	
  5201  0C0C  0BF3               	decfsz	??_lcd_put_byte,f
  5202  0C0D  2C0C               	goto	u4107
  5203  0C0E  2487               	call	PL33	;select bank 0
  5204                           
  5205                           ;lcd(16).c: 132: RD3 = 0;
  5206  0C0F  1188               	bcf	8,3
  5207                           
  5208                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5209  0C10  0876               	movf	lcd_put_byte@temp,w
  5210  0C11  3901               	andlw	1
  5211  0C12  00F3               	movwf	??_lcd_put_byte
  5212  0C13  0C73               	rrf	??_lcd_put_byte,w
  5213  0C14  1C03               	btfss	3,0
  5214  0C15  2C19               	goto	u2840
  5215  0C16  2487               	call	PL33	;select bank 0
  5216  0C17  1608               	bsf	8,4
  5217  0C18  2C1B               	goto	l6559
  5218  0C19                     u2840:	
  5219  0C19  2487               	call	PL33	;select bank 0
  5220  0C1A  1208               	bcf	8,4
  5221  0C1B                     l6559:	
  5222                           
  5223                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5224  0C1B  0C76               	rrf	lcd_put_byte@temp,w
  5225  0C1C  3901               	andlw	1
  5226  0C1D  00F3               	movwf	??_lcd_put_byte
  5227  0C1E  0C73               	rrf	??_lcd_put_byte,w
  5228  0C1F  1C03               	btfss	3,0
  5229  0C20  2C24               	goto	u2860
  5230  0C21  2487               	call	PL33	;select bank 0
  5231  0C22  1688               	bsf	8,5
  5232  0C23  2C26               	goto	l6561
  5233  0C24                     u2860:	
  5234  0C24  2487               	call	PL33	;select bank 0
  5235  0C25  1288               	bcf	8,5
  5236  0C26                     l6561:	
  5237                           
  5238                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5239  0C26  0C76               	rrf	lcd_put_byte@temp,w
  5240  0C27  00F3               	movwf	??_lcd_put_byte
  5241  0C28  0C73               	rrf	??_lcd_put_byte,w
  5242  0C29  3901               	andlw	1
  5243  0C2A  00F4               	movwf	??_lcd_put_byte+1
  5244  0C2B  0C74               	rrf	??_lcd_put_byte+1,w
  5245  0C2C  1C03               	btfss	3,0
  5246  0C2D  2C31               	goto	u2880
  5247  0C2E  2487               	call	PL33	;select bank 0
  5248  0C2F  1708               	bsf	8,6
  5249  0C30  2C33               	goto	l6563
  5250  0C31                     u2880:	
  5251  0C31  2487               	call	PL33	;select bank 0
  5252  0C32  1308               	bcf	8,6
  5253  0C33                     l6563:	
  5254                           
  5255                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5256  0C33  0C76               	rrf	lcd_put_byte@temp,w
  5257  0C34  2480  120A  158A   	fcall	PL29	;call to abstracted procedure
  5258  0C37  1C03               	btfss	3,0
  5259  0C38  2C3C               	goto	u2900
  5260  0C39  2487               	call	PL33	;select bank 0
  5261  0C3A  1788               	bsf	8,7
  5262  0C3B  2C3E               	goto	u2914
  5263  0C3C                     u2900:	
  5264  0C3C  2487               	call	PL33	;select bank 0
  5265  0C3D  1388               	bcf	8,7
  5266  0C3E                     u2914:	
  5267                           
  5268                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5269  0C3E  3021               	movlw	33
  5270  0C3F  00F3               	movwf	??_lcd_put_byte
  5271  0C40                     u4117:	
  5272  0C40  0BF3               	decfsz	??_lcd_put_byte,f
  5273  0C41  2C40               	goto	u4117
  5274  0C42  2487               	call	PL33	;select bank 0
  5275                           
  5276                           ;lcd(16).c: 139: RD3 = 1;
  5277  0C43  3021               	movlw	33
  5278  0C44  1588               	bsf	8,3
  5279                           
  5280                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5281  0C45  00F3               	movwf	??_lcd_put_byte
  5282  0C46                     u4127:	
  5283  0C46  0BF3               	decfsz	??_lcd_put_byte,f
  5284  0C47  2C46               	goto	u4127
  5285  0C48  2487               	call	PL33	;select bank 0
  5286                           
  5287                           ;lcd(16).c: 141: RD3 = 0;
  5288  0C49  1188               	bcf	8,3
  5289  0C4A  0008               	return
  5290  0C4B                     __end_of_lcd_put_byte:	
  5291  0C4B                     __ptext543:	
  5292 ;; =============== function ___ftadd ends ============
  5293                           
  5294                           
  5295 ;; *************** function _lcd_busy *****************
  5296 ;; Defined at:
  5297 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5298 ;; Parameters:    Size  Location     Type
  5299 ;;		None
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  busy            1    3[COMMON] unsigned char 
  5302 ;; Return value:  Size  Location     Type
  5303 ;;                  1    wreg      unsigned char 
  5304 ;; Registers used:
  5305 ;;		wreg
  5306 ;; Tracked objects:
  5307 ;;		On entry : 0/0
  5308 ;;		On exit  : 60/0
  5309 ;;		Unchanged: 0/0
  5310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5311 ;;      Params:         0       0       0       0       0
  5312 ;;      Locals:         1       0       0       0       0
  5313 ;;      Temps:          1       0       0       0       0
  5314 ;;      Totals:         2       0       0       0       0
  5315 ;;Total ram usage:        2 bytes
  5316 ;; Hardware stack levels used:    1
  5317 ;; Hardware stack levels required when called:    1
  5318 ;; This function calls:
  5319 ;;		Nothing
  5320 ;; This function is called by:
  5321 ;;		_lcd_init
  5322 ;;		_lcd_putc
  5323 ;;		_lcd_gotoxy
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326  0C4B                     _lcd_busy:	
  5327                           
  5328                           ;lcd(16).c: 48: unsigned char busy;
  5329                           ;lcd(16).c: 50: TRISD4 = 1;
  5330                           
  5331                           ; Regs used in _lcd_busy: [wreg]
  5332  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5333  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  5334  0C4D  1608               	bsf	8,4
  5335                           
  5336                           ;lcd(16).c: 51: TRISD5 = 1;
  5337  0C4E  1688               	bsf	8,5
  5338                           
  5339                           ;lcd(16).c: 52: TRISD6 = 1;
  5340  0C4F  1708               	bsf	8,6
  5341                           
  5342                           ;lcd(16).c: 53: TRISD7 = 1;
  5343  0C50  1788               	bsf	8,7
  5344                           
  5345                           ;lcd(16).c: 55: RD2 = 1;
  5346  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0C52  3021               	movlw	33
  5348  0C53  1508               	bsf	8,2
  5349                           
  5350                           ;lcd(16).c: 56: RD1 = 0;
  5351  0C54  1088               	bcf	8,1
  5352                           
  5353                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5354  0C55  00F2               	movwf	??_lcd_busy
  5355  0C56                     u4037:	
  5356  0C56  0BF2               	decfsz	??_lcd_busy,f
  5357  0C57  2C56               	goto	u4037
  5358  0C58  2487               	call	PL33	;select bank 0
  5359                           
  5360                           ;lcd(16).c: 58: RD3 = 1;
  5361  0C59  3021               	movlw	33
  5362  0C5A  1588               	bsf	8,3
  5363                           
  5364                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5365  0C5B  00F2               	movwf	??_lcd_busy
  5366  0C5C                     u4047:	
  5367  0C5C  0BF2               	decfsz	??_lcd_busy,f
  5368  0C5D  2C5C               	goto	u4047
  5369                           
  5370                           ;lcd(16).c: 61: busy = RD7;
  5371  0C5E  3000               	movlw	0
  5372  0C5F  2487               	call	PL33	;select bank 0
  5373  0C60  1B88               	btfsc	8,7
  5374  0C61  3001               	movlw	1
  5375  0C62  00F3               	movwf	lcd_busy@busy
  5376  0C63  3021               	movlw	33
  5377                           
  5378                           ;lcd(16).c: 63: RD3 = 0;
  5379  0C64  1188               	bcf	8,3
  5380                           
  5381                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5382  0C65  00F2               	movwf	??_lcd_busy
  5383  0C66                     u4057:	
  5384  0C66  0BF2               	decfsz	??_lcd_busy,f
  5385  0C67  2C66               	goto	u4057
  5386  0C68  2487               	call	PL33	;select bank 0
  5387                           
  5388                           ;lcd(16).c: 65: RD3 = 1;
  5389  0C69  3021               	movlw	33
  5390  0C6A  1588               	bsf	8,3
  5391                           
  5392                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5393  0C6B  00F2               	movwf	??_lcd_busy
  5394  0C6C                     u4067:	
  5395  0C6C  0BF2               	decfsz	??_lcd_busy,f
  5396  0C6D  2C6C               	goto	u4067
  5397  0C6E  2487               	call	PL33	;select bank 0
  5398                           
  5399                           ;lcd(16).c: 67: RD3 = 0;
  5400  0C6F  1188               	bcf	8,3
  5401                           
  5402                           ;lcd(16).c: 70: return busy;
  5403  0C70  0873               	movf	lcd_busy@busy,w
  5404  0C71  0008               	return
  5405  0C72                     __end_of_lcd_busy:	
  5406  0C72                     __ptext560:	
  5407 ;; =============== function _isdigit ends ============
  5408                           
  5409                           
  5410 ;; *************** function _isprint *****************
  5411 ;; Defined at:
  5412 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  c               1    wreg     unsigned char 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  c               1    3[COMMON] unsigned char 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;		None               void
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/20
  5423 ;;		On exit  : 0/20
  5424 ;;		Unchanged: FFFFF/0
  5425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5426 ;;      Params:         0       0       0       0       0
  5427 ;;      Locals:         2       0       0       0       0
  5428 ;;      Temps:          0       0       0       0       0
  5429 ;;      Totals:         2       0       0       0       0
  5430 ;;Total ram usage:        2 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    1
  5433 ;; This function calls:
  5434 ;;		Nothing
  5435 ;; This function is called by:
  5436 ;;		_lcd_putc
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439  0C72                     _isprint:	
  5440                           
  5441                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5442                           ;isprint@c stored from wreg
  5443  0C72  00F3               	movwf	isprint@c
  5444  0C73  307F               	movlw	127
  5445  0C74  01F2               	clrf	_isprint$3688
  5446  0C75  0273               	subwf	isprint@c,w
  5447  0C76  1803               	skipnc
  5448  0C77  2C7E               	goto	l6129
  5449  0C78  3020               	movlw	32
  5450  0C79  0273               	subwf	isprint@c,w
  5451  0C7A  1C03               	skipc
  5452  0C7B  2C7E               	goto	l6129
  5453  0C7C  01F2               	clrf	_isprint$3688
  5454  0C7D  0AF2               	incf	_isprint$3688,f
  5455  0C7E                     l6129:	
  5456  0C7E  0C72               	rrf	_isprint$3688,w
  5457  0C7F  0008               	return
  5458  0C80                     __end_of_isprint:	
  5459  0C80                     PL29:	
  5460  0C80  00F3               	movwf	??_lcd_put_byte
  5461  0C81  0CF3               	rrf	??_lcd_put_byte,f
  5462  0C82  0C73               	rrf	??_lcd_put_byte,w
  5463  0C83  3901               	andlw	1
  5464  0C84  00F4               	movwf	??_lcd_put_byte+1
  5465  0C85  0C74               	rrf	??_lcd_put_byte+1,w
  5466  0C86  0008               	return
  5467  0C87                     PL33:	
  5468  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5469  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5470  0C89  0008               	return
  5471                           
  5472                           	psect	text539
  5473  0C8A                     __ptext539:	
  5474 ;; =============== function _lcd_init ends ============
  5475                           
  5476                           
  5477 ;; *************** function ___lltoft *****************
  5478 ;; Defined at:
  5479 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  c               4    0[BANK0 ] unsigned long 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  exp             1   10[COMMON] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  3    0[BANK0 ] float 
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0, pclath, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 60/0
  5490 ;;		On exit  : 60/0
  5491 ;;		Unchanged: FFF9F/0
  5492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5493 ;;      Params:         0       4       0       0       0
  5494 ;;      Locals:         1       0       0       0       0
  5495 ;;      Temps:          0       0       0       0       0
  5496 ;;      Totals:         1       4       0       0       0
  5497 ;;Total ram usage:        5 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    2
  5500 ;; This function calls:
  5501 ;;		___ftpack
  5502 ;; This function is called by:
  5503 ;;		_printf
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506  0C8A                     ___lltoft:	
  5507                           
  5508                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5509  0C8A  308E               	movlw	142
  5510  0C8B  00FA               	movwf	___lltoft@exp
  5511  0C8C                     l6737:	
  5512  0C8C  30FF               	movlw	255
  5513  0C8D  0523               	andwf	___lltoft@c+3,w
  5514  0C8E  1903               	btfsc	3,2
  5515  0C8F  2C97               	goto	l6739
  5516  0C90  1003               	clrc
  5517  0C91  0CA3               	rrf	___lltoft@c+3,f
  5518  0C92  0CA2               	rrf	___lltoft@c+2,f
  5519  0C93  0CA1               	rrf	___lltoft@c+1,f
  5520  0C94  0CA0               	rrf	___lltoft@c,f
  5521  0C95  0AFA               	incf	___lltoft@exp,f
  5522  0C96  2C8C               	goto	l6737
  5523  0C97                     l6739:	
  5524  0C97  0820               	movf	___lltoft@c,w
  5525  0C98  00F2               	movwf	?___ftpack
  5526  0C99  0821               	movf	___lltoft@c+1,w
  5527  0C9A  00F3               	movwf	?___ftpack+1
  5528  0C9B  0822               	movf	___lltoft@c+2,w
  5529  0C9C  00F4               	movwf	?___ftpack+2
  5530  0C9D  087A               	movf	___lltoft@exp,w
  5531  0C9E  00F5               	movwf	?___ftpack+3
  5532  0C9F  01F6               	clrf	?___ftpack+4
  5533  0CA0  2769               	fcall	___ftpack
  5534  0CA1  0872               	movf	?___ftpack,w
  5535  0CA2  00A0               	movwf	?___lltoft
  5536  0CA3  0873               	movf	?___ftpack+1,w
  5537  0CA4  00A1               	movwf	?___lltoft+1
  5538  0CA5  0874               	movf	?___ftpack+2,w
  5539  0CA6  00A2               	movwf	?___lltoft+2
  5540  0CA7  0008               	return
  5541  0CA8                     __end_of___lltoft:	
  5542  0CA8                     __ptext540:	
  5543 ;; =============== function ___lltoft ends ============
  5544                           
  5545                           
  5546 ;; *************** function ___altoft *****************
  5547 ;; Defined at:
  5548 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  c               4    0[BANK0 ] long 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  sign            1   11[COMMON] unsigned char 
  5553 ;;  exp             1   10[COMMON] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  3    0[BANK0 ] float 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0, pclath, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 60/0
  5560 ;;		On exit  : 60/0
  5561 ;;		Unchanged: FFF9F/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5563 ;;      Params:         0       4       0       0       0
  5564 ;;      Locals:         2       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0
  5566 ;;      Totals:         2       4       0       0       0
  5567 ;;Total ram usage:        6 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    2
  5570 ;; This function calls:
  5571 ;;		___ftpack
  5572 ;; This function is called by:
  5573 ;;		_main
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576  0CA8                     ___altoft:	
  5577  0CA8  308E               	movlw	142
  5578                           
  5579                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5580  0CA9  01FB               	clrf	___altoft@sign
  5581  0CAA  00FA               	movwf	___altoft@exp
  5582  0CAB  1FA3               	btfss	___altoft@c+3,7
  5583  0CAC  2CBA               	goto	l6727
  5584  0CAD  09A0               	comf	___altoft@c,f
  5585  0CAE  09A1               	comf	___altoft@c+1,f
  5586  0CAF  09A2               	comf	___altoft@c+2,f
  5587  0CB0  09A3               	comf	___altoft@c+3,f
  5588  0CB1  0AA0               	incf	___altoft@c,f
  5589  0CB2  1903               	skipnz
  5590  0CB3  0AA1               	incf	___altoft@c+1,f
  5591  0CB4  1903               	skipnz
  5592  0CB5  0AA2               	incf	___altoft@c+2,f
  5593  0CB6  1903               	skipnz
  5594  0CB7  0AA3               	incf	___altoft@c+3,f
  5595  0CB8  01FB               	clrf	___altoft@sign
  5596  0CB9  0AFB               	incf	___altoft@sign,f
  5597  0CBA                     l6727:	
  5598  0CBA  30FF               	movlw	255
  5599  0CBB  0523               	andwf	___altoft@c+3,w
  5600  0CBC  1903               	btfsc	3,2
  5601  0CBD  2CC5               	goto	l6729
  5602  0CBE  1003               	clrc
  5603  0CBF  0CA3               	rrf	___altoft@c+3,f
  5604  0CC0  0CA2               	rrf	___altoft@c+2,f
  5605  0CC1  0CA1               	rrf	___altoft@c+1,f
  5606  0CC2  0CA0               	rrf	___altoft@c,f
  5607  0CC3  0AFA               	incf	___altoft@exp,f
  5608  0CC4  2CBA               	goto	l6727
  5609  0CC5                     l6729:	
  5610  0CC5  0820               	movf	___altoft@c,w
  5611  0CC6  00F2               	movwf	?___ftpack
  5612  0CC7  0821               	movf	___altoft@c+1,w
  5613  0CC8  00F3               	movwf	?___ftpack+1
  5614  0CC9  0822               	movf	___altoft@c+2,w
  5615  0CCA  00F4               	movwf	?___ftpack+2
  5616  0CCB  087A               	movf	___altoft@exp,w
  5617  0CCC  00F5               	movwf	?___ftpack+3
  5618  0CCD  087B               	movf	___altoft@sign,w
  5619  0CCE  00F6               	movwf	?___ftpack+4
  5620  0CCF  2769               	fcall	___ftpack
  5621  0CD0  0872               	movf	?___ftpack,w
  5622  0CD1  00A0               	movwf	?___altoft
  5623  0CD2  0873               	movf	?___ftpack+1,w
  5624  0CD3  00A1               	movwf	?___altoft+1
  5625  0CD4  0874               	movf	?___ftpack+2,w
  5626  0CD5  00A2               	movwf	?___altoft+2
  5627  0CD6  0008               	return
  5628  0CD7                     __end_of___altoft:	
  5629  0CD7                     __ptext535:	
  5630 ;; =============== function ___ftsub ends ============
  5631                           
  5632                           
  5633 ;; *************** function _scale *****************
  5634 ;; Defined at:
  5635 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  scl             1    wreg     char 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  scl             1   42[BANK0 ] char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  3   32[BANK0 ] char 
  5642 ;; Registers used:
  5643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 60/20
  5646 ;;		On exit  : 60/0
  5647 ;;		Unchanged: FFF9F/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5649 ;;      Params:         0       3       0       0       0
  5650 ;;      Locals:         0       4       0       0       0
  5651 ;;      Temps:          0       4       0       0       0
  5652 ;;      Totals:         0      11       0       0       0
  5653 ;;Total ram usage:       11 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; Hardware stack levels required when called:    3
  5656 ;; This function calls:
  5657 ;;		___awmod
  5658 ;;		___awdiv
  5659 ;;		___ftmul
  5660 ;;		___bmul
  5661 ;; This function is called by:
  5662 ;;		_printf
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665  0CD7                     _scale:	
  5666                           
  5667                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5668                           ;scale@scl stored from wreg
  5669  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5670  0CD8  00CA               	movwf	scale@scl
  5671  0CD9  1FCA               	btfss	scale@scl,7
  5672  0CDA  2DA3               	goto	l6837
  5673  0CDB  09CA               	comf	scale@scl,f
  5674  0CDC  0ACA               	incf	scale@scl,f
  5675  0CDD  084A               	movf	scale@scl,w
  5676  0CDE  3A80               	xorlw	128
  5677  0CDF  3E12               	addlw	-238
  5678  0CE0  1C03               	skipc
  5679  0CE1  2D47               	goto	l6827
  5680  0CE2  300A               	movlw	10
  5681  0CE3  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5682  0CE6  26AF  120A  158A   	fcall	___awmod
  5683  0CE9  0873               	movf	?___awmod+1,w
  5684  0CEA  00FB               	movwf	?___awdiv+3
  5685  0CEB  0872               	movf	?___awmod,w
  5686  0CEC  00FA               	movwf	?___awdiv+2
  5687  0CED  2669  120A  158A   	fcall	___awdiv
  5688  0CF0  27E0               	fcall	PL22	;call to abstracted procedure
  5689  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5690  0CF2  0084               	movwf	4
  5691  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5692  0CF8  00B1               	movwf	?___ftmul
  5693  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5694  0CFE  00B2               	movwf	?___ftmul+1
  5695  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5696  0D04  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5697  0D07  1BFA               	btfsc	?___awdiv+2,7
  5698  0D08  03FB               	decf	?___awdiv+3,f
  5699  0D09  2669  120A  158A   	fcall	___awdiv
  5700  0D0C  27AF               	fcall	PL9	;call to abstracted procedure
  5701  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5702  0D0E  0084               	movwf	4
  5703  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5704  0D14  00B4               	movwf	?___ftmul+3
  5705  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5706  0D1A  00B5               	movwf	?___ftmul+4
  5707  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5708  0D20  00B6               	movwf	?___ftmul+5
  5709  0D21  26EC  120A  158A   	fcall	___ftmul
  5710  0D24  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  5711  0D27  1BF4               	btfsc	?___awmod+2,7
  5712  0D28  03F5               	decf	?___awmod+3,f
  5713  0D29  26AF  120A  158A   	fcall	___awmod
  5714  0D2C  27A7               	fcall	PL8	;call to abstracted procedure
  5715  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5716  0D2E  0084               	movwf	4
  5717  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5718  0D34  00B1               	movwf	?___ftmul
  5719  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5720  0D3A  00B2               	movwf	?___ftmul+1
  5721  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5722  0D40  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5723  0D43  26EC  120A  158A   	fcall	___ftmul
  5724  0D46  2FC4               	ljmp	PL11	;call to abstracted procedure
  5725  0D47                     l6827:	
  5726  0D47  084A               	movf	scale@scl,w
  5727  0D48  3A80               	xorlw	128
  5728  0D49  3E75               	addlw	-139
  5729  0D4A  1C03               	skipc
  5730  0D4B  2D8C               	goto	l6833
  5731  0D4C  300A               	movlw	10
  5732  0D4D  00F2               	movwf	?___awmod
  5733  0D4E  01F3               	clrf	?___awmod+1
  5734  0D4F  084A               	movf	scale@scl,w
  5735  0D50  00F4               	movwf	?___awmod+2
  5736  0D51  01F5               	clrf	?___awmod+3
  5737  0D52  1BF4               	btfsc	?___awmod+2,7
  5738  0D53  03F5               	decf	?___awmod+3,f
  5739  0D54  26AF  120A  158A   	fcall	___awmod
  5740  0D57  27A7               	fcall	PL8	;call to abstracted procedure
  5741  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5742  0D59  0084               	movwf	4
  5743  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5744  0D5F  00B1               	movwf	?___ftmul
  5745  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5746  0D65  00B2               	movwf	?___ftmul+1
  5747  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5748  0D6B  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5749  0D6E  1BFA               	btfsc	?___awdiv+2,7
  5750  0D6F  03FB               	decf	?___awdiv+3,f
  5751  0D70  2669  120A  158A   	fcall	___awdiv
  5752  0D73  27AF               	fcall	PL9	;call to abstracted procedure
  5753  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5754  0D75  0084               	movwf	4
  5755  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5756  0D7B  00B4               	movwf	?___ftmul+3
  5757  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5758  0D81  00B5               	movwf	?___ftmul+4
  5759  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5760  0D87  00B6               	movwf	?___ftmul+5
  5761  0D88  26EC  120A  158A   	fcall	___ftmul
  5762  0D8B  2FC4               	ljmp	PL11	;call to abstracted procedure
  5763  0D8C                     l6833:	
  5764  0D8C  3003               	movlw	3
  5765  0D8D  00FB               	movwf	?___bmul
  5766  0D8E  084A               	movf	scale@scl,w
  5767  0D8F  275B               	fcall	___bmul
  5768  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5769  0D91  0084               	movwf	4
  5770  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5771  0D97  00C0               	movwf	?_scale
  5772  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5773  0D9D  00C1               	movwf	?_scale+1
  5774  0D9E  160A  118A  2000   	fcall	stringdir
  5775  0DA1  00C2               	movwf	?_scale+2
  5776  0DA2  0008               	return
  5777  0DA3                     l6837:	
  5778  0DA3  084A               	movf	scale@scl,w
  5779  0DA4  3A80               	xorlw	128
  5780  0DA5  3E12               	addlw	-238
  5781  0DA6  1C03               	skipc
  5782  0DA7  2E0D               	goto	l6845
  5783  0DA8  300A               	movlw	10
  5784  0DA9  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5785  0DAC  26AF  120A  158A   	fcall	___awmod
  5786  0DAF  0873               	movf	?___awmod+1,w
  5787  0DB0  00FB               	movwf	?___awdiv+3
  5788  0DB1  0872               	movf	?___awmod,w
  5789  0DB2  00FA               	movwf	?___awdiv+2
  5790  0DB3  2669  120A  158A   	fcall	___awdiv
  5791  0DB6  27E0               	fcall	PL22	;call to abstracted procedure
  5792  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5793  0DB8  0084               	movwf	4
  5794  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5795  0DBE  00B1               	movwf	?___ftmul
  5796  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5797  0DC4  00B2               	movwf	?___ftmul+1
  5798  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5799  0DCA  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5800  0DCD  1BFA               	btfsc	?___awdiv+2,7
  5801  0DCE  03FB               	decf	?___awdiv+3,f
  5802  0DCF  2669  120A  158A   	fcall	___awdiv
  5803  0DD2  27AF               	fcall	PL9	;call to abstracted procedure
  5804  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5805  0DD4  0084               	movwf	4
  5806  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5807  0DDA  00B4               	movwf	?___ftmul+3
  5808  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5809  0DE0  00B5               	movwf	?___ftmul+4
  5810  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5811  0DE6  00B6               	movwf	?___ftmul+5
  5812  0DE7  26EC  120A  158A   	fcall	___ftmul
  5813  0DEA  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  5814  0DED  1BF4               	btfsc	?___awmod+2,7
  5815  0DEE  03F5               	decf	?___awmod+3,f
  5816  0DEF  26AF  120A  158A   	fcall	___awmod
  5817  0DF2  27A7               	fcall	PL8	;call to abstracted procedure
  5818  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5819  0DF4  0084               	movwf	4
  5820  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5821  0DFA  00B1               	movwf	?___ftmul
  5822  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5823  0E00  00B2               	movwf	?___ftmul+1
  5824  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5825  0E06  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5826  0E09  26EC  120A  158A   	fcall	___ftmul
  5827  0E0C  2FC4               	ljmp	PL11	;call to abstracted procedure
  5828  0E0D                     l6845:	
  5829  0E0D  084A               	movf	scale@scl,w
  5830  0E0E  3A80               	xorlw	128
  5831  0E0F  3E75               	addlw	-139
  5832  0E10  1C03               	skipc
  5833  0E11  2E52               	goto	l6851
  5834  0E12  300A               	movlw	10
  5835  0E13  00F2               	movwf	?___awmod
  5836  0E14  01F3               	clrf	?___awmod+1
  5837  0E15  084A               	movf	scale@scl,w
  5838  0E16  00F4               	movwf	?___awmod+2
  5839  0E17  01F5               	clrf	?___awmod+3
  5840  0E18  1BF4               	btfsc	?___awmod+2,7
  5841  0E19  03F5               	decf	?___awmod+3,f
  5842  0E1A  26AF  120A  158A   	fcall	___awmod
  5843  0E1D  27A7               	fcall	PL8	;call to abstracted procedure
  5844  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5845  0E1F  0084               	movwf	4
  5846  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5847  0E25  00B1               	movwf	?___ftmul
  5848  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5849  0E2B  00B2               	movwf	?___ftmul+1
  5850  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5851  0E31  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5852  0E34  1BFA               	btfsc	?___awdiv+2,7
  5853  0E35  03FB               	decf	?___awdiv+3,f
  5854  0E36  2669  120A  158A   	fcall	___awdiv
  5855  0E39  27AF               	fcall	PL9	;call to abstracted procedure
  5856  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5857  0E3B  0084               	movwf	4
  5858  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5859  0E41  00B4               	movwf	?___ftmul+3
  5860  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5861  0E47  00B5               	movwf	?___ftmul+4
  5862  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5863  0E4D  00B6               	movwf	?___ftmul+5
  5864  0E4E  26EC  120A  158A   	fcall	___ftmul
  5865  0E51  2FC4               	ljmp	PL11	;call to abstracted procedure
  5866  0E52                     l6851:	
  5867  0E52  3003               	movlw	3
  5868  0E53  00FB               	movwf	?___bmul
  5869  0E54  084A               	movf	scale@scl,w
  5870  0E55  275B               	fcall	___bmul
  5871  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5872  0E57  0084               	movwf	4
  5873  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5874  0E5D  00C0               	movwf	?_scale
  5875  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5876  0E63  00C1               	movwf	?_scale+1
  5877  0E64  160A  118A  2000   	fcall	stringdir
  5878  0E67  00C2               	movwf	?_scale+2
  5879  0E68  0008               	return
  5880  0E69                     __end_of_scale:	
  5881  0E69                     __ptext550:	
  5882 ;; =============== function ___llmod ends ============
  5883                           
  5884                           
  5885 ;; *************** function ___awdiv *****************
  5886 ;; Defined at:
  5887 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  divisor         2    8[COMMON] int 
  5890 ;;  dividend        2   10[COMMON] int 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;  quotient        2    2[BANK0 ] int 
  5893 ;;  sign            1    1[BANK0 ] unsigned char 
  5894 ;;  counter         1    0[BANK0 ] unsigned char 
  5895 ;; Return value:  Size  Location     Type
  5896 ;;                  2    8[COMMON] int 
  5897 ;; Registers used:
  5898 ;;		wreg, status,2, status,0
  5899 ;; Tracked objects:
  5900 ;;		On entry : 40/20
  5901 ;;		On exit  : 60/0
  5902 ;;		Unchanged: FFF9F/0
  5903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5904 ;;      Params:         4       0       0       0       0
  5905 ;;      Locals:         0       4       0       0       0
  5906 ;;      Temps:          0       0       0       0       0
  5907 ;;      Totals:         4       4       0       0       0
  5908 ;;Total ram usage:        8 bytes
  5909 ;; Hardware stack levels used:    1
  5910 ;; Hardware stack levels required when called:    1
  5911 ;; This function calls:
  5912 ;;		Nothing
  5913 ;; This function is called by:
  5914 ;;		_scale
  5915 ;;		_printf
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918  0E69                     ___awdiv:	
  5919                           
  5920                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5921  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5922  0E6A  01A1               	clrf	___awdiv@sign
  5923  0E6B  1FF9               	btfss	___awdiv@divisor+1,7
  5924  0E6C  2E74               	goto	l6387
  5925  0E6D  09F8               	comf	___awdiv@divisor,f
  5926  0E6E  09F9               	comf	___awdiv@divisor+1,f
  5927  0E6F  0AF8               	incf	___awdiv@divisor,f
  5928  0E70  1903               	skipnz
  5929  0E71  0AF9               	incf	___awdiv@divisor+1,f
  5930  0E72  01A1               	clrf	___awdiv@sign
  5931  0E73  0AA1               	incf	___awdiv@sign,f
  5932  0E74                     l6387:	
  5933  0E74  1FFB               	btfss	___awdiv@dividend+1,7
  5934  0E75  2E7D               	goto	l6393
  5935  0E76  09FA               	comf	___awdiv@dividend,f
  5936  0E77  09FB               	comf	___awdiv@dividend+1,f
  5937  0E78  0AFA               	incf	___awdiv@dividend,f
  5938  0E79  1903               	skipnz
  5939  0E7A  0AFB               	incf	___awdiv@dividend+1,f
  5940  0E7B  3001               	movlw	1
  5941  0E7C  06A1               	xorwf	___awdiv@sign,f
  5942  0E7D                     l6393:	
  5943  0E7D  01A2               	clrf	___awdiv@quotient
  5944  0E7E  01A3               	clrf	___awdiv@quotient+1
  5945  0E7F  0879               	movf	___awdiv@divisor+1,w
  5946  0E80  0478               	iorwf	___awdiv@divisor,w
  5947  0E81  1903               	skipnz
  5948  0E82  2EA2               	goto	l6415
  5949  0E83  01A0               	clrf	___awdiv@counter
  5950  0E84                     L15:	
  5951  0E84  0AA0               	incf	___awdiv@counter,f
  5952  0E85  1BF9               	btfsc	___awdiv@divisor+1,7
  5953  0E86  2E8B               	goto	l6403
  5954  0E87  1003               	clrc
  5955  0E88  0DF8               	rlf	___awdiv@divisor,f
  5956  0E89  0DF9               	rlf	___awdiv@divisor+1,f
  5957  0E8A  2E84               	goto	L15
  5958  0E8B                     l6403:	
  5959  0E8B  1003               	clrc
  5960  0E8C  0DA2               	rlf	___awdiv@quotient,f
  5961  0E8D  0DA3               	rlf	___awdiv@quotient+1,f
  5962  0E8E  0879               	movf	___awdiv@divisor+1,w
  5963  0E8F  027B               	subwf	___awdiv@dividend+1,w
  5964  0E90  1D03               	skipz
  5965  0E91  2E94               	goto	u2535
  5966  0E92  0878               	movf	___awdiv@divisor,w
  5967  0E93  027A               	subwf	___awdiv@dividend,w
  5968  0E94                     u2535:	
  5969  0E94  1C03               	skipc
  5970  0E95  2E9E               	goto	L16
  5971  0E96  0878               	movf	___awdiv@divisor,w
  5972  0E97  02FA               	subwf	___awdiv@dividend,f
  5973  0E98  0879               	movf	___awdiv@divisor+1,w
  5974  0E99  1C03               	skipc
  5975  0E9A  03FB               	decf	___awdiv@dividend+1,f
  5976  0E9B  02FB               	subwf	___awdiv@dividend+1,f
  5977  0E9C  1422               	bsf	___awdiv@quotient,0
  5978  0E9D  1003               	clrc
  5979  0E9E                     L16:	
  5980  0E9E  0CF9               	rrf	___awdiv@divisor+1,f
  5981  0E9F  0CF8               	rrf	___awdiv@divisor,f
  5982  0EA0  0BA0               	decfsz	___awdiv@counter,f
  5983  0EA1  2E8B               	goto	l6403
  5984  0EA2                     l6415:	
  5985  0EA2  0821               	movf	___awdiv@sign,w
  5986  0EA3  1903               	btfsc	3,2
  5987  0EA4  2EAA               	goto	l6419
  5988  0EA5  09A2               	comf	___awdiv@quotient,f
  5989  0EA6  09A3               	comf	___awdiv@quotient+1,f
  5990  0EA7  0AA2               	incf	___awdiv@quotient,f
  5991  0EA8  1903               	skipnz
  5992  0EA9  0AA3               	incf	___awdiv@quotient+1,f
  5993  0EAA                     l6419:	
  5994  0EAA  0823               	movf	___awdiv@quotient+1,w
  5995  0EAB  00F9               	movwf	?___awdiv+1
  5996  0EAC  0822               	movf	___awdiv@quotient,w
  5997  0EAD  00F8               	movwf	?___awdiv
  5998  0EAE  0008               	return
  5999  0EAF                     __end_of___awdiv:	
  6000  0EAF                     __ptext545:	
  6001 ;; =============== function _lcd_put_byte ends ============
  6002                           
  6003                           
  6004 ;; *************** function ___awmod *****************
  6005 ;; Defined at:
  6006 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6007 ;; Parameters:    Size  Location     Type
  6008 ;;  divisor         2    2[COMMON] int 
  6009 ;;  dividend        2    4[COMMON] int 
  6010 ;; Auto vars:     Size  Location     Type
  6011 ;;  sign            1    7[COMMON] unsigned char 
  6012 ;;  counter         1    6[COMMON] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  2    2[COMMON] int 
  6015 ;; Registers used:
  6016 ;;		wreg, status,2, status,0
  6017 ;; Tracked objects:
  6018 ;;		On entry : 60/0
  6019 ;;		On exit  : 60/0
  6020 ;;		Unchanged: FFF9F/0
  6021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6022 ;;      Params:         4       0       0       0       0
  6023 ;;      Locals:         2       0       0       0       0
  6024 ;;      Temps:          0       0       0       0       0
  6025 ;;      Totals:         6       0       0       0       0
  6026 ;;Total ram usage:        6 bytes
  6027 ;; Hardware stack levels used:    1
  6028 ;; Hardware stack levels required when called:    1
  6029 ;; This function calls:
  6030 ;;		Nothing
  6031 ;; This function is called by:
  6032 ;;		_scale
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035  0EAF                     ___awmod:	
  6036                           
  6037                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6038  0EAF  01F7               	clrf	___awmod@sign
  6039  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  6040  0EB1  2EB9               	goto	l6505
  6041  0EB2  09F4               	comf	___awmod@dividend,f
  6042  0EB3  09F5               	comf	___awmod@dividend+1,f
  6043  0EB4  0AF4               	incf	___awmod@dividend,f
  6044  0EB5  1903               	skipnz
  6045  0EB6  0AF5               	incf	___awmod@dividend+1,f
  6046  0EB7  01F7               	clrf	___awmod@sign
  6047  0EB8  0AF7               	incf	___awmod@sign,f
  6048  0EB9                     l6505:	
  6049  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  6050  0EBA  2EC0               	goto	l6509
  6051  0EBB  09F2               	comf	___awmod@divisor,f
  6052  0EBC  09F3               	comf	___awmod@divisor+1,f
  6053  0EBD  0AF2               	incf	___awmod@divisor,f
  6054  0EBE  1903               	skipnz
  6055  0EBF  0AF3               	incf	___awmod@divisor+1,f
  6056  0EC0                     l6509:	
  6057  0EC0  0873               	movf	___awmod@divisor+1,w
  6058  0EC1  0472               	iorwf	___awmod@divisor,w
  6059  0EC2  1903               	skipnz
  6060  0EC3  2EDF               	goto	l6525
  6061  0EC4  01F6               	clrf	___awmod@counter
  6062  0EC5                     L8:	
  6063  0EC5  0AF6               	incf	___awmod@counter,f
  6064  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  6065  0EC7  2ECC               	goto	l6517
  6066  0EC8  1003               	clrc
  6067  0EC9  0DF2               	rlf	___awmod@divisor,f
  6068  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  6069  0ECB  2EC5               	goto	L8
  6070  0ECC                     l6517:	
  6071  0ECC  0873               	movf	___awmod@divisor+1,w
  6072  0ECD  0275               	subwf	___awmod@dividend+1,w
  6073  0ECE  1D03               	skipz
  6074  0ECF  2ED2               	goto	u2725
  6075  0ED0  0872               	movf	___awmod@divisor,w
  6076  0ED1  0274               	subwf	___awmod@dividend,w
  6077  0ED2                     u2725:	
  6078  0ED2  1C03               	skipc
  6079  0ED3  2EDB               	goto	L9
  6080  0ED4  0872               	movf	___awmod@divisor,w
  6081  0ED5  02F4               	subwf	___awmod@dividend,f
  6082  0ED6  0873               	movf	___awmod@divisor+1,w
  6083  0ED7  1C03               	skipc
  6084  0ED8  03F5               	decf	___awmod@dividend+1,f
  6085  0ED9  02F5               	subwf	___awmod@dividend+1,f
  6086  0EDA  1003               	clrc
  6087  0EDB                     L9:	
  6088  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  6089  0EDC  0CF2               	rrf	___awmod@divisor,f
  6090  0EDD  0BF6               	decfsz	___awmod@counter,f
  6091  0EDE  2ECC               	goto	l6517
  6092  0EDF                     l6525:	
  6093  0EDF  0877               	movf	___awmod@sign,w
  6094  0EE0  1903               	btfsc	3,2
  6095  0EE1  2EE7               	goto	l6529
  6096  0EE2  09F4               	comf	___awmod@dividend,f
  6097  0EE3  09F5               	comf	___awmod@dividend+1,f
  6098  0EE4  0AF4               	incf	___awmod@dividend,f
  6099  0EE5  1903               	skipnz
  6100  0EE6  0AF5               	incf	___awmod@dividend+1,f
  6101  0EE7                     l6529:	
  6102  0EE7  0875               	movf	___awmod@dividend+1,w
  6103  0EE8  00F3               	movwf	?___awmod+1
  6104  0EE9  0874               	movf	___awmod@dividend,w
  6105  0EEA  00F2               	movwf	?___awmod
  6106  0EEB  0008               	return
  6107  0EEC                     __end_of___awmod:	
  6108  0EEC                     __ptext541:	
  6109 ;; =============== function ___altoft ends ============
  6110                           
  6111                           
  6112 ;; *************** function ___ftmul *****************
  6113 ;; Defined at:
  6114 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  f1              3   17[BANK0 ] float 
  6117 ;;  f2              3   20[BANK0 ] float 
  6118 ;; Auto vars:     Size  Location     Type
  6119 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  6120 ;;  sign            1   31[BANK0 ] unsigned char 
  6121 ;;  cntr            1   30[BANK0 ] unsigned char 
  6122 ;;  exp             1   26[BANK0 ] unsigned char 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  3   17[BANK0 ] float 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0, pclath, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 60/0
  6129 ;;		On exit  : 60/0
  6130 ;;		Unchanged: FFF9F/0
  6131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6132 ;;      Params:         0       6       0       0       0
  6133 ;;      Locals:         0       6       0       0       0
  6134 ;;      Temps:          0       3       0       0       0
  6135 ;;      Totals:         0      15       0       0       0
  6136 ;;Total ram usage:       15 bytes
  6137 ;; Hardware stack levels used:    1
  6138 ;; Hardware stack levels required when called:    2
  6139 ;; This function calls:
  6140 ;;		___ftpack
  6141 ;; This function is called by:
  6142 ;;		_main
  6143 ;;		_fround
  6144 ;;		_scale
  6145 ;;		_printf
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148  0EEC                     ___ftmul:	
  6149                           
  6150                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6151  0EEC  0831               	movf	___ftmul@f1,w
  6152  0EED  00B7               	movwf	??___ftmul
  6153  0EEE  0832               	movf	___ftmul@f1+1,w
  6154  0EEF  00B8               	movwf	??___ftmul+1
  6155  0EF0  0833               	movf	___ftmul@f1+2,w
  6156  0EF1  00B9               	movwf	??___ftmul+2
  6157  0EF2  1003               	clrc
  6158  0EF3  0D38               	rlf	??___ftmul+1,w
  6159  0EF4  0D39               	rlf	??___ftmul+2,w
  6160  0EF5  00BA               	movwf	___ftmul@exp
  6161  0EF6  08BA               	movf	___ftmul@exp,f
  6162  0EF7  1D03               	skipz
  6163  0EF8  2EFD               	goto	l6667
  6164  0EF9  01B1               	clrf	?___ftmul
  6165  0EFA  01B2               	clrf	?___ftmul+1
  6166  0EFB  01B3               	clrf	?___ftmul+2
  6167  0EFC  0008               	return
  6168  0EFD                     l6667:	
  6169  0EFD  0834               	movf	___ftmul@f2,w
  6170  0EFE  00B7               	movwf	??___ftmul
  6171  0EFF  0835               	movf	___ftmul@f2+1,w
  6172  0F00  00B8               	movwf	??___ftmul+1
  6173  0F01  0836               	movf	___ftmul@f2+2,w
  6174  0F02  00B9               	movwf	??___ftmul+2
  6175  0F03  1003               	clrc
  6176  0F04  0D38               	rlf	??___ftmul+1,w
  6177  0F05  0D39               	rlf	??___ftmul+2,w
  6178  0F06  00BF               	movwf	___ftmul@sign
  6179  0F07  08BF               	movf	___ftmul@sign,f
  6180  0F08  1D03               	skipz
  6181  0F09  2F0E               	goto	l6673
  6182  0F0A  01B1               	clrf	?___ftmul
  6183  0F0B  01B2               	clrf	?___ftmul+1
  6184  0F0C  01B3               	clrf	?___ftmul+2
  6185  0F0D  0008               	return
  6186  0F0E                     l6673:	
  6187  0F0E  083F               	movf	___ftmul@sign,w
  6188  0F0F  3E7B               	addlw	123
  6189  0F10  07BA               	addwf	___ftmul@exp,f
  6190  0F11  0833               	movf	___ftmul@f1+2,w
  6191  0F12  00BF               	movwf	___ftmul@sign
  6192  0F13  0836               	movf	___ftmul@f2+2,w
  6193  0F14  06BF               	xorwf	___ftmul@sign,f
  6194  0F15  3080               	movlw	128
  6195  0F16  05BF               	andwf	___ftmul@sign,f
  6196  0F17  3007               	movlw	7
  6197  0F18  17B2               	bsf	___ftmul@f1+1,7
  6198  0F19  17B5               	bsf	___ftmul@f2+1,7
  6199  0F1A  01B6               	clrf	___ftmul@f2+2
  6200  0F1B  01BB               	clrf	___ftmul@f3_as_product
  6201  0F1C  01BC               	clrf	___ftmul@f3_as_product+1
  6202  0F1D  01BD               	clrf	___ftmul@f3_as_product+2
  6203  0F1E  00BE               	movwf	___ftmul@cntr
  6204  0F1F                     l6691:	
  6205  0F1F  1C31               	btfss	___ftmul@f1,0
  6206  0F20  2F29               	goto	l6695
  6207  0F21  0834               	movf	___ftmul@f2,w
  6208  0F22  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6209  0F25  1803               	skipnc
  6210  0F26  0A36               	incf	___ftmul@f2+2,w
  6211  0F27  1D03               	btfss	3,2
  6212  0F28  07BD               	addwf	___ftmul@f3_as_product+2,f
  6213  0F29                     l6695:	
  6214  0F29  1003               	clrc
  6215  0F2A  0CB3               	rrf	___ftmul@f1+2,f
  6216  0F2B  0CB2               	rrf	___ftmul@f1+1,f
  6217  0F2C  0CB1               	rrf	___ftmul@f1,f
  6218  0F2D  1003               	clrc
  6219  0F2E  0DB4               	rlf	___ftmul@f2,f
  6220  0F2F  0DB5               	rlf	___ftmul@f2+1,f
  6221  0F30  0DB6               	rlf	___ftmul@f2+2,f
  6222  0F31  0BBE               	decfsz	___ftmul@cntr,f
  6223  0F32  2F1F               	goto	l6691
  6224  0F33  3009               	movlw	9
  6225  0F34  00BE               	movwf	___ftmul@cntr
  6226  0F35                     l6703:	
  6227  0F35  1C31               	btfss	___ftmul@f1,0
  6228  0F36  2F3F               	goto	l6707
  6229  0F37  0834               	movf	___ftmul@f2,w
  6230  0F38  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6231  0F3B  1803               	skipnc
  6232  0F3C  0A36               	incf	___ftmul@f2+2,w
  6233  0F3D  1D03               	btfss	3,2
  6234  0F3E  07BD               	addwf	___ftmul@f3_as_product+2,f
  6235  0F3F                     l6707:	
  6236  0F3F  1003               	clrc
  6237  0F40  0CB3               	rrf	___ftmul@f1+2,f
  6238  0F41  0CB2               	rrf	___ftmul@f1+1,f
  6239  0F42  0CB1               	rrf	___ftmul@f1,f
  6240  0F43  1003               	clrc
  6241  0F44  0CBD               	rrf	___ftmul@f3_as_product+2,f
  6242  0F45  0CBC               	rrf	___ftmul@f3_as_product+1,f
  6243  0F46  0CBB               	rrf	___ftmul@f3_as_product,f
  6244  0F47  0BBE               	decfsz	___ftmul@cntr,f
  6245  0F48  2F35               	goto	l6703
  6246  0F49  083B               	movf	___ftmul@f3_as_product,w
  6247  0F4A  00F2               	movwf	?___ftpack
  6248  0F4B  083C               	movf	___ftmul@f3_as_product+1,w
  6249  0F4C  00F3               	movwf	?___ftpack+1
  6250  0F4D  083D               	movf	___ftmul@f3_as_product+2,w
  6251  0F4E  00F4               	movwf	?___ftpack+2
  6252  0F4F  083A               	movf	___ftmul@exp,w
  6253  0F50  00F5               	movwf	?___ftpack+3
  6254  0F51  083F               	movf	___ftmul@sign,w
  6255  0F52  00F6               	movwf	?___ftpack+4
  6256  0F53  2769               	fcall	___ftpack
  6257  0F54  0872               	movf	?___ftpack,w
  6258  0F55  00B1               	movwf	?___ftmul
  6259  0F56  0873               	movf	?___ftpack+1,w
  6260  0F57  00B2               	movwf	?___ftmul+1
  6261  0F58  0874               	movf	?___ftpack+2,w
  6262  0F59  00B3               	movwf	?___ftmul+2
  6263  0F5A  0008               	return
  6264  0F5B                     __end_of___ftmul:	
  6265  0F5B                     __ptext556:	
  6266 ;; =============== function ___wmul ends ============
  6267                           
  6268                           
  6269 ;; *************** function ___bmul *****************
  6270 ;; Defined at:
  6271 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  multiplier      1    wreg     unsigned char 
  6274 ;;  multiplicand    1   11[COMMON] unsigned char 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  multiplier      1    1[BANK0 ] unsigned char 
  6277 ;;  product         1    0[BANK0 ] unsigned char 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      unsigned char 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2, status,0
  6282 ;; Tracked objects:
  6283 ;;		On entry : 60/0
  6284 ;;		On exit  : 60/0
  6285 ;;		Unchanged: FFF9F/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6287 ;;      Params:         1       0       0       0       0
  6288 ;;      Locals:         0       2       0       0       0
  6289 ;;      Temps:          0       0       0       0       0
  6290 ;;      Totals:         1       2       0       0       0
  6291 ;;Total ram usage:        3 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:    1
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_fround
  6298 ;;		_scale
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301  0F5B                     ___bmul:	
  6302                           
  6303                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6304                           ;___bmul@multiplier stored from wreg
  6305  0F5B  00A1               	movwf	___bmul@multiplier
  6306  0F5C  01A0               	clrf	___bmul@product
  6307  0F5D                     l6241:	
  6308  0F5D  087B               	movf	___bmul@multiplicand,w
  6309  0F5E  1821               	btfsc	___bmul@multiplier,0
  6310  0F5F  07A0               	addwf	___bmul@product,f
  6311  0F60  1003               	clrc
  6312  0F61  0DFB               	rlf	___bmul@multiplicand,f
  6313  0F62  1003               	clrc
  6314  0F63  0CA1               	rrf	___bmul@multiplier,f
  6315  0F64  08A1               	movf	___bmul@multiplier,f
  6316  0F65  1D03               	skipz
  6317  0F66  2F5D               	goto	l6241
  6318  0F67  0820               	movf	___bmul@product,w
  6319  0F68  0008               	return
  6320  0F69                     __end_of___bmul:	
  6321  0F69                     __ptext552:	
  6322 ;; =============== function ___fttol ends ============
  6323                           
  6324                           
  6325 ;; *************** function ___ftpack *****************
  6326 ;; Defined at:
  6327 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  arg             3    2[COMMON] unsigned um
  6330 ;;  exp             1    5[COMMON] unsigned char 
  6331 ;;  sign            1    6[COMMON] unsigned char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  3    2[COMMON] float 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 60/0
  6340 ;;		On exit  : 60/0
  6341 ;;		Unchanged: FFF9F/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6343 ;;      Params:         5       0       0       0       0
  6344 ;;      Locals:         0       0       0       0       0
  6345 ;;      Temps:          3       0       0       0       0
  6346 ;;      Totals:         8       0       0       0       0
  6347 ;;Total ram usage:        8 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    1
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		___ftadd
  6354 ;;		___ftmul
  6355 ;;		___altoft
  6356 ;;		___lltoft
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359  0F69                     ___ftpack:	
  6360                           
  6361                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6362  0F69  0875               	movf	___ftpack@exp,w
  6363  0F6A  1903               	btfsc	3,2
  6364  0F6B  2F71               	goto	l6317
  6365  0F6C  0874               	movf	___ftpack@arg+2,w
  6366  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6367  0F6E  0472               	iorwf	___ftpack@arg,w
  6368  0F6F  1D03               	skipz
  6369  0F70  2F7A               	goto	l6323
  6370  0F71                     l6317:	
  6371  0F71  01F2               	clrf	?___ftpack
  6372  0F72  01F3               	clrf	?___ftpack+1
  6373  0F73  01F4               	clrf	?___ftpack+2
  6374  0F74  0008               	return
  6375  0F75                     l6321:	
  6376  0F75  0AF5               	incf	___ftpack@exp,f
  6377  0F76  1003               	clrc
  6378  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6379  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6380  0F79  0CF2               	rrf	___ftpack@arg,f
  6381  0F7A                     l6323:	
  6382  0F7A  30FE               	movlw	254
  6383  0F7B  0574               	andwf	___ftpack@arg+2,w
  6384  0F7C  1903               	btfsc	3,2
  6385  0F7D  2F89               	goto	l6327
  6386  0F7E  2F75               	goto	l6321
  6387  0F7F                     l6325:	
  6388  0F7F  0AF5               	incf	___ftpack@exp,f
  6389  0F80  0AF2               	incf	___ftpack@arg,f
  6390  0F81  1903               	skipnz
  6391  0F82  0AF3               	incf	___ftpack@arg+1,f
  6392  0F83  1903               	skipnz
  6393  0F84  0AF4               	incf	___ftpack@arg+2,f
  6394  0F85  1003               	clrc
  6395  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6396  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6397  0F88  0CF2               	rrf	___ftpack@arg,f
  6398  0F89                     l6327:	
  6399  0F89  30FF               	movlw	255
  6400  0F8A  0574               	andwf	___ftpack@arg+2,w
  6401  0F8B  1903               	btfsc	3,2
  6402  0F8C  2F93               	goto	l6331
  6403  0F8D  2F7F               	goto	l6325
  6404  0F8E                     l6329:	
  6405  0F8E  03F5               	decf	___ftpack@exp,f
  6406  0F8F  1003               	clrc
  6407  0F90  0DF2               	rlf	___ftpack@arg,f
  6408  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6409  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6410  0F93                     l6331:	
  6411  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6412  0F94  2F8E               	goto	l6329
  6413  0F95  1C75               	btfss	___ftpack@exp,0
  6414  0F96  13F3               	bcf	___ftpack@arg+1,7
  6415  0F97  1003               	clrc
  6416  0F98  0CF5               	rrf	___ftpack@exp,f
  6417  0F99  0875               	movf	___ftpack@exp,w
  6418  0F9A  00F9               	movwf	??___ftpack+2
  6419  0F9B  01F8               	clrf	??___ftpack+1
  6420  0F9C  01F7               	clrf	??___ftpack
  6421  0F9D  0877               	movf	??___ftpack,w
  6422  0F9E  04F2               	iorwf	___ftpack@arg,f
  6423  0F9F  0878               	movf	??___ftpack+1,w
  6424  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6425  0FA1  0879               	movf	??___ftpack+2,w
  6426  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6427  0FA3  0876               	movf	___ftpack@sign,w
  6428  0FA4  1D03               	skipz
  6429  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6430  0FA6  0008               	return
  6431  0FA7                     __end_of___ftpack:	
  6432  0FA7                     PL8:	
  6433  0FA7  0872               	movf	?___awmod,w
  6434  0FA8  00C3               	movwf	??_scale
  6435  0FA9  0873               	movf	?___awmod+1,w
  6436  0FAA  00C4               	movwf	??_scale+1
  6437  0FAB  0843               	movf	??_scale,w
  6438  0FAC  0743               	addwf	??_scale,w
  6439  0FAD  0743               	addwf	??_scale,w
  6440  0FAE  0008               	return
  6441  0FAF                     PL9:	
  6442  0FAF  0878               	movf	?___awdiv,w
  6443  0FB0  00C5               	movwf	??_scale+2
  6444  0FB1  0879               	movf	?___awdiv+1,w
  6445  0FB2  00C6               	movwf	??_scale+3
  6446  0FB3  0845               	movf	??_scale+2,w
  6447  0FB4  0745               	addwf	??_scale+2,w
  6448  0FB5  0745               	addwf	??_scale+2,w
  6449  0FB6  0008               	return
  6450  0FB7                     PL10:	
  6451  0FB7  0831               	movf	?___ftmul,w
  6452  0FB8  00C7               	movwf	_scale$4123
  6453  0FB9  0832               	movf	?___ftmul+1,w
  6454  0FBA  00C8               	movwf	_scale$4123+1
  6455  0FBB  0833               	movf	?___ftmul+2,w
  6456  0FBC  00C9               	movwf	_scale$4123+2
  6457  0FBD  300A               	movlw	10
  6458  0FBE  00F2               	movwf	?___awmod
  6459  0FBF  01F3               	clrf	?___awmod+1
  6460  0FC0  084A               	movf	scale@scl,w
  6461  0FC1  00F4               	movwf	?___awmod+2
  6462  0FC2  01F5               	clrf	?___awmod+3
  6463  0FC3  0008               	return
  6464  0FC4                     PL11:	
  6465  0FC4  0831               	movf	?___ftmul,w
  6466  0FC5  00C0               	movwf	?_scale
  6467  0FC6  0832               	movf	?___ftmul+1,w
  6468  0FC7  00C1               	movwf	?_scale+1
  6469  0FC8  0833               	movf	?___ftmul+2,w
  6470  0FC9  00C2               	movwf	?_scale+2
  6471  0FCA  0008               	return
  6472  0FCB                     PL15:	
  6473  0FCB  00F8               	movwf	?___awdiv
  6474  0FCC  01F9               	clrf	?___awdiv+1
  6475  0FCD  084A               	movf	scale@scl,w
  6476  0FCE  00F4               	movwf	?___awmod+2
  6477  0FCF  01F5               	clrf	?___awmod+3
  6478  0FD0  1BF4               	btfsc	?___awmod+2,7
  6479  0FD1  03F5               	decf	?___awmod+3,f
  6480  0FD2  3064               	movlw	100
  6481  0FD3  00F2               	movwf	?___awmod
  6482  0FD4  01F3               	clrf	?___awmod+1
  6483  0FD5  0008               	return
  6484  0FD6                     PL19:	
  6485  0FD6  07BB               	addwf	___ftmul@f3_as_product,f
  6486  0FD7  0835               	movf	___ftmul@f2+1,w
  6487  0FD8  1103               	clrz
  6488  0FD9  1803               	skipnc
  6489  0FDA  0A35               	incf	___ftmul@f2+1,w
  6490  0FDB  1D03               	btfss	3,2
  6491  0FDC  07BC               	addwf	___ftmul@f3_as_product+1,f
  6492  0FDD  0836               	movf	___ftmul@f2+2,w
  6493  0FDE  1103               	clrz
  6494  0FDF  0008               	return
  6495  0FE0                     PL22:	
  6496  0FE0  0878               	movf	?___awdiv,w
  6497  0FE1  00C3               	movwf	??_scale
  6498  0FE2  0879               	movf	?___awdiv+1,w
  6499  0FE3  00C4               	movwf	??_scale+1
  6500  0FE4  0843               	movf	??_scale,w
  6501  0FE5  0743               	addwf	??_scale,w
  6502  0FE6  0743               	addwf	??_scale,w
  6503  0FE7  0008               	return
  6504  0FE8                     PL24:	
  6505  0FE8  00B3               	movwf	?___ftmul+2
  6506  0FE9  3064               	movlw	100
  6507  0FEA  00F8               	movwf	?___awdiv
  6508  0FEB  01F9               	clrf	?___awdiv+1
  6509  0FEC  084A               	movf	scale@scl,w
  6510  0FED  00FA               	movwf	?___awdiv+2
  6511  0FEE  01FB               	clrf	?___awdiv+3
  6512  0FEF  0008               	return
  6513  0FF0                     PL25:	
  6514  0FF0  00B3               	movwf	?___ftmul+2
  6515  0FF1  0847               	movf	_scale$4123,w
  6516  0FF2  00B4               	movwf	?___ftmul+3
  6517  0FF3  0848               	movf	_scale$4123+1,w
  6518  0FF4  00B5               	movwf	?___ftmul+4
  6519  0FF5  0849               	movf	_scale$4123+2,w
  6520  0FF6  00B6               	movwf	?___ftmul+5
  6521  0FF7  0008               	return
  6522  0FF8                     PL26:	
  6523  0FF8  00B3               	movwf	?___ftmul+2
  6524  0FF9  300A               	movlw	10
  6525  0FFA  00F8               	movwf	?___awdiv
  6526  0FFB  01F9               	clrf	?___awdiv+1
  6527  0FFC  084A               	movf	scale@scl,w
  6528  0FFD  00FA               	movwf	?___awdiv+2
  6529  0FFE  01FB               	clrf	?___awdiv+3
  6530  0FFF  0008               	return
  6531                           
  6532                           	psect	text557
  6533  1735                     __ptext557:	
  6534 ;; =============== function ___bmul ends ============
  6535                           
  6536                           
  6537 ;; *************** function __div_to_l_ *****************
  6538 ;; Defined at:
  6539 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;  f1              3    2[COMMON] unsigned char 
  6542 ;;  f2              3    5[COMMON] unsigned char 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;  quot            4    8[BANK0 ] unsigned long 
  6545 ;;  exp1            1   13[BANK0 ] unsigned char 
  6546 ;;  cntr            1   12[BANK0 ] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  4    2[COMMON] unsigned long 
  6549 ;; Registers used:
  6550 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 60/0
  6554 ;;		Unchanged: FFF9F/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6556 ;;      Params:         6       0       0       0       0
  6557 ;;      Locals:         0       6       0       0       0
  6558 ;;      Temps:          0       8       0       0       0
  6559 ;;      Totals:         6      14       0       0       0
  6560 ;;Total ram usage:       20 bytes
  6561 ;; Hardware stack levels used:    1
  6562 ;; Hardware stack levels required when called:    1
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_printf
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569  1735                     __div_to_l_:	
  6570                           
  6571                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6572  1735  3072               	movlw	low __div_to_l_@f1
  6573  1736  0084               	movwf	4
  6574  1737  0800               	movf	0,w
  6575  1738  1283               	bcf	3,5	;RP0=0, select bank0
  6576  1739  1303               	bcf	3,6	;RP1=0, select bank0
  6577  173A  00A0               	movwf	??__div_to_l_
  6578  173B  0A84               	incf	4,f
  6579  173C  0800               	movf	0,w
  6580  173D  00A1               	movwf	??__div_to_l_+1
  6581  173E  0A84               	incf	4,f
  6582  173F  0800               	movf	0,w
  6583  1740  00A2               	movwf	??__div_to_l_+2
  6584  1741  0A84               	incf	4,f
  6585  1742  0800               	movf	0,w
  6586  1743  00A3               	movwf	??__div_to_l_+3
  6587  1744  1003               	clrc
  6588  1745  0D22               	rlf	??__div_to_l_+2,w
  6589  1746  0D23               	rlf	??__div_to_l_+3,w
  6590  1747  00AD               	movwf	__div_to_l_@exp1
  6591  1748  08AD               	movf	__div_to_l_@exp1,f
  6592  1749  1D03               	skipz
  6593  174A  2F50               	goto	l6197
  6594  174B                     l6195:	
  6595  174B  01F2               	clrf	?__div_to_l_
  6596  174C  01F3               	clrf	?__div_to_l_+1
  6597  174D  01F4               	clrf	?__div_to_l_+2
  6598  174E  01F5               	clrf	?__div_to_l_+3
  6599  174F  0008               	return
  6600  1750                     l6197:	
  6601  1750  3075               	movlw	low __div_to_l_@f2
  6602  1751  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6603  1754  1003               	clrc
  6604  1755  0D22               	rlf	??__div_to_l_+2,w
  6605  1756  0D23               	rlf	??__div_to_l_+3,w
  6606  1757  00AC               	movwf	__div_to_l_@cntr
  6607  1758  08AC               	movf	__div_to_l_@cntr,f
  6608  1759  1903               	btfsc	3,2
  6609  175A  2F4B               	goto	l6195
  6610  175B  3072               	movlw	low __div_to_l_@f1
  6611  175C  0084               	movwf	4
  6612  175D  3080               	movlw	128
  6613  175E  0A84               	incf	4,f
  6614  175F  0A84               	incf	4,f
  6615  1760  0480               	iorwf	0,f
  6616  1761  3072               	movlw	low __div_to_l_@f1
  6617  1762  0A84               	incf	4,f
  6618  1763  0084               	movwf	4
  6619  1764  3075               	movlw	low __div_to_l_@f2
  6620  1765  0A84               	incf	4,f
  6621  1766  0A84               	incf	4,f
  6622  1767  0A84               	incf	4,f
  6623  1768  0180               	clrf	0
  6624  1769  0084               	movwf	4
  6625  176A  3080               	movlw	128
  6626  176B  0A84               	incf	4,f
  6627  176C  0A84               	incf	4,f
  6628  176D  0480               	iorwf	0,f
  6629  176E  3075               	movlw	low __div_to_l_@f2
  6630  176F  0A84               	incf	4,f
  6631  1770  0084               	movwf	4
  6632  1771  307F               	movlw	127
  6633  1772  0A84               	incf	4,f
  6634  1773  0A84               	incf	4,f
  6635  1774  0A84               	incf	4,f
  6636  1775  0180               	clrf	0
  6637  1776  01A8               	clrf	__div_to_l_@quot
  6638  1777  01A9               	clrf	__div_to_l_@quot+1
  6639  1778  01AA               	clrf	__div_to_l_@quot+2
  6640  1779  01AB               	clrf	__div_to_l_@quot+3
  6641  177A  02AD               	subwf	__div_to_l_@exp1,f
  6642  177B  30A0               	movlw	160
  6643  177C  072C               	addwf	__div_to_l_@cntr,w
  6644  177D  00A0               	movwf	??__div_to_l_
  6645  177E  02AD               	subwf	__div_to_l_@exp1,f
  6646  177F  3020               	movlw	32
  6647  1780  00AC               	movwf	__div_to_l_@cntr
  6648  1781                     l6211:	
  6649  1781  3075               	movlw	low __div_to_l_@f2
  6650  1782  1003               	clrc
  6651  1783  0DA8               	rlf	__div_to_l_@quot,f
  6652  1784  0DA9               	rlf	__div_to_l_@quot+1,f
  6653  1785  0DAA               	rlf	__div_to_l_@quot+2,f
  6654  1786  0DAB               	rlf	__div_to_l_@quot+3,f
  6655  1787  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6656  178A  3072               	movlw	low __div_to_l_@f1
  6657  178B  0084               	movwf	4
  6658  178C  0800               	movf	0,w
  6659  178D  00A4               	movwf	??__div_to_l_+4
  6660  178E  0A84               	incf	4,f
  6661  178F  0800               	movf	0,w
  6662  1790  00A5               	movwf	??__div_to_l_+5
  6663  1791  0A84               	incf	4,f
  6664  1792  0800               	movf	0,w
  6665  1793  00A6               	movwf	??__div_to_l_+6
  6666  1794  0A84               	incf	4,f
  6667  1795  0800               	movf	0,w
  6668  1796  00A7               	movwf	??__div_to_l_+7
  6669  1797  0823               	movf	??__div_to_l_+3,w
  6670  1798  0227               	subwf	??__div_to_l_+7,w
  6671  1799  1D03               	skipz
  6672  179A  2FA5               	goto	u2165
  6673  179B  0822               	movf	??__div_to_l_+2,w
  6674  179C  0226               	subwf	??__div_to_l_+6,w
  6675  179D  1D03               	skipz
  6676  179E  2FA5               	goto	u2165
  6677  179F  0821               	movf	??__div_to_l_+1,w
  6678  17A0  0225               	subwf	??__div_to_l_+5,w
  6679  17A1  1D03               	skipz
  6680  17A2  2FA5               	goto	u2165
  6681  17A3  0820               	movf	??__div_to_l_,w
  6682  17A4  0224               	subwf	??__div_to_l_+4,w
  6683  17A5                     u2165:	
  6684  17A5  1C03               	skipc
  6685  17A6  2FC1               	goto	l3605
  6686  17A7  3075               	movlw	low __div_to_l_@f2
  6687  17A8  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6688  17AB  3072               	movlw	low __div_to_l_@f1
  6689  17AC  0084               	movwf	4
  6690  17AD  0820               	movf	??__div_to_l_,w
  6691  17AE  0280               	subwf	0,f
  6692  17AF  0A84               	incf	4,f
  6693  17B0  0821               	movf	??__div_to_l_+1,w
  6694  17B1  1C03               	skipc
  6695  17B2  0F21               	incfsz	??__div_to_l_+1,w
  6696  17B3  0280               	subwf	0,f
  6697  17B4  0A84               	incf	4,f
  6698  17B5  0822               	movf	??__div_to_l_+2,w
  6699  17B6  1C03               	skipc
  6700  17B7  0F22               	incfsz	??__div_to_l_+2,w
  6701  17B8  0280               	subwf	0,f
  6702  17B9  0A84               	incf	4,f
  6703  17BA  0823               	movf	??__div_to_l_+3,w
  6704  17BB  1C03               	skipc
  6705  17BC  0A23               	incf	??__div_to_l_+3,w
  6706  17BD  0280               	subwf	0,f
  6707  17BE  3003               	movlw	3
  6708  17BF  0284               	subwf	4,f
  6709  17C0  1428               	bsf	__div_to_l_@quot,0
  6710  17C1                     l3605:	
  6711  17C1  3072               	movlw	low __div_to_l_@f1
  6712  17C2  0084               	movwf	4
  6713  17C3  1003               	clrc
  6714  17C4  0D80               	rlf	0,f
  6715  17C5  0A84               	incf	4,f
  6716  17C6  0D80               	rlf	0,f
  6717  17C7  0A84               	incf	4,f
  6718  17C8  0D80               	rlf	0,f
  6719  17C9  0A84               	incf	4,f
  6720  17CA  0D80               	rlf	0,f
  6721  17CB  0BAC               	decfsz	__div_to_l_@cntr,f
  6722  17CC  2F81               	goto	l6211
  6723  17CD  1FAD               	btfss	__div_to_l_@exp1,7
  6724  17CE  2FDC               	goto	l6229
  6725  17CF  082D               	movf	__div_to_l_@exp1,w
  6726  17D0  3A80               	xorlw	128
  6727  17D1  3E9F               	addlw	159
  6728  17D2  1C03               	btfss	3,0
  6729  17D3  2F4B               	goto	l6195
  6730  17D4                     l6225:	
  6731  17D4  1003               	clrc
  6732  17D5  0CAB               	rrf	__div_to_l_@quot+3,f
  6733  17D6  0CAA               	rrf	__div_to_l_@quot+2,f
  6734  17D7  0CA9               	rrf	__div_to_l_@quot+1,f
  6735  17D8  0CA8               	rrf	__div_to_l_@quot,f
  6736  17D9  0FAD               	incfsz	__div_to_l_@exp1,f
  6737  17DA  2FD4               	goto	l6225
  6738  17DB  2FEA               	goto	l6235
  6739  17DC                     l6229:	
  6740  17DC  3020               	movlw	32
  6741  17DD  022D               	subwf	__div_to_l_@exp1,w
  6742  17DE  1803               	btfsc	3,0
  6743  17DF  2F4B               	goto	l6195
  6744  17E0                     l3613:	
  6745  17E0  08AD               	movf	__div_to_l_@exp1,f
  6746  17E1  1903               	btfsc	3,2
  6747  17E2  2FEA               	goto	l6235
  6748  17E3  1003               	clrc
  6749  17E4  0DA8               	rlf	__div_to_l_@quot,f
  6750  17E5  0DA9               	rlf	__div_to_l_@quot+1,f
  6751  17E6  0DAA               	rlf	__div_to_l_@quot+2,f
  6752  17E7  0DAB               	rlf	__div_to_l_@quot+3,f
  6753  17E8  03AD               	decf	__div_to_l_@exp1,f
  6754  17E9  2FE0               	goto	l3613
  6755  17EA                     l6235:	
  6756  17EA  082B               	movf	__div_to_l_@quot+3,w
  6757  17EB  00F5               	movwf	?__div_to_l_+3
  6758  17EC  082A               	movf	__div_to_l_@quot+2,w
  6759  17ED  00F4               	movwf	?__div_to_l_+2
  6760  17EE  0829               	movf	__div_to_l_@quot+1,w
  6761  17EF  00F3               	movwf	?__div_to_l_+1
  6762  17F0  0828               	movf	__div_to_l_@quot,w
  6763  17F1  00F2               	movwf	?__div_to_l_
  6764  17F2  0008               	return
  6765  17F3                     __end_of__div_to_l_:	
  6766  17F3                     PL3:	
  6767  17F3  0084               	movwf	4
  6768  17F4  0800               	movf	0,w
  6769  17F5  00A0               	movwf	??__div_to_l_
  6770  17F6  0A84               	incf	4,f
  6771  17F7  0800               	movf	0,w
  6772  17F8  00A1               	movwf	??__div_to_l_+1
  6773  17F9  0A84               	incf	4,f
  6774  17FA  0800               	movf	0,w
  6775  17FB  00A2               	movwf	??__div_to_l_+2
  6776  17FC  0A84               	incf	4,f
  6777  17FD  0800               	movf	0,w
  6778  17FE  00A3               	movwf	??__div_to_l_+3
  6779  17FF  0008               	return
  6780                           
  6781                           	psect	text561
  6782  07C4                     __ptext561:	
  6783 ;; =============== function _isprint ends ============
  6784                           
  6785                           
  6786 ;; *************** function _abs *****************
  6787 ;; Defined at:
  6788 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\abs.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  a               2    2[COMMON] int 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  2    2[COMMON] int 
  6795 ;; Registers used:
  6796 ;;		wreg, status,2, status,0
  6797 ;; Tracked objects:
  6798 ;;		On entry : 60/0
  6799 ;;		On exit  : 60/0
  6800 ;;		Unchanged: FFF9F/0
  6801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6802 ;;      Params:         2       0       0       0       0
  6803 ;;      Locals:         0       0       0       0       0
  6804 ;;      Temps:          2       0       0       0       0
  6805 ;;      Totals:         4       0       0       0       0
  6806 ;;Total ram usage:        4 bytes
  6807 ;; Hardware stack levels used:    1
  6808 ;; Hardware stack levels required when called:    1
  6809 ;; This function calls:
  6810 ;;		Nothing
  6811 ;; This function is called by:
  6812 ;;		_main
  6813 ;; This function uses a non-reentrant model
  6814 ;;
  6815  07C4                     _abs:	
  6816                           
  6817                           ; Regs used in _abs: [wreg+status,2+status,0]
  6818  07C4  1FF3               	btfss	abs@a+1,7
  6819  07C5  0008               	return
  6820  07C6  0972               	comf	abs@a,w
  6821  07C7  00F4               	movwf	??_abs
  6822  07C8  0973               	comf	abs@a+1,w
  6823  07C9  00F5               	movwf	??_abs+1
  6824  07CA  0AF4               	incf	??_abs,f
  6825  07CB  1903               	skipnz
  6826  07CC  0AF5               	incf	??_abs+1,f
  6827  07CD  0874               	movf	??_abs,w
  6828  07CE  00F2               	movwf	?_abs
  6829  07CF  0875               	movf	??_abs+1,w
  6830  07D0  00F3               	movwf	?_abs+1
  6831  07D1  0008               	return
  6832  07D2                     __end_of_abs:	
  6833                           
  6834                           	psect	text562
  6835  079B                     __ptext562:	
  6836 ;; =============== function _abs ends ============
  6837                           
  6838                           
  6839 ;; *************** function _ngat *****************
  6840 ;; Defined at:
  6841 ;;		line 73 in file "D:\TTVXL\Project TTVXL\BT06week11ttvxl\BT06week11ttvxl.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;		None
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;		None               void
  6848 ;; Registers used:
  6849 ;;		wreg
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 60/0
  6853 ;;		Unchanged: FFF9F/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6855 ;;      Params:         0       0       0       0       0
  6856 ;;      Locals:         0       0       0       0       0
  6857 ;;      Temps:          2       0       0       0       0
  6858 ;;      Totals:         2       0       0       0       0
  6859 ;;Total ram usage:        2 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; This function calls:
  6862 ;;		Nothing
  6863 ;; This function is called by:
  6864 ;;		Interrupt level 1
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867  079B                     _ngat:	
  6868                           
  6869                           ;BT06week11ttvxl.c: 74: if(CCP1IF)
  6870  079B  1283               	bcf	3,5	;RP0=0, select bank0
  6871  079C  1303               	bcf	3,6	;RP1=0, select bank0
  6872  079D  1D0C               	btfss	12,2
  6873  079E  2FA3               	goto	i1l6113
  6874                           
  6875                           ;BT06week11ttvxl.c: 75: {
  6876                           ;BT06week11ttvxl.c: 76: count1=CCPR1;
  6877  079F  0816               	movf	22,w	;volatile
  6878  07A0  00EA               	movwf	_count1+1	;volatile
  6879  07A1  0815               	movf	21,w	;volatile
  6880  07A2  00E9               	movwf	_count1	;volatile
  6881  07A3                     i1l6113:	
  6882                           
  6883                           ;BT06week11ttvxl.c: 77: }
  6884                           ;BT06week11ttvxl.c: 78: if(CCP2IF)
  6885  07A3  1C0D               	btfss	13,0
  6886  07A4  2FA9               	goto	i1l6117
  6887                           
  6888                           ;BT06week11ttvxl.c: 79: {
  6889                           ;BT06week11ttvxl.c: 80: count2=CCPR2;
  6890  07A5  081C               	movf	28,w	;volatile
  6891  07A6  00EC               	movwf	_count2+1	;volatile
  6892  07A7  081B               	movf	27,w	;volatile
  6893  07A8  00EB               	movwf	_count2	;volatile
  6894  07A9                     i1l6117:	
  6895                           
  6896                           ;BT06week11ttvxl.c: 81: }
  6897                           ;BT06week11ttvxl.c: 82: CCP1IF = 0;
  6898  07A9  110C               	bcf	12,2
  6899                           
  6900                           ;BT06week11ttvxl.c: 83: CCP2IF = 0;
  6901  07AA  100D               	bcf	13,0
  6902  07AB  0871               	movf	??_ngat+1,w
  6903  07AC  008A               	movwf	10
  6904  07AD  0E70               	swapf	??_ngat^(0+-128),w
  6905  07AE  0083               	movwf	3
  6906  07AF  0EFE               	swapf	126,f
  6907  07B0  0E7E               	swapf	126,w
  6908  07B1  0009               	retfie
  6909  07B2                     __end_of_ngat:	
  6910                           
  6911                           	psect	intentry
  6912  0004                     __pintentry:	
  6913                           ; Regs used in _ngat: [wreg]
  6914                           
  6915  0004                     interrupt_function:	
  6916  007E                     saved_w	set	btemp
  6917  0004  00FE               	movwf	btemp
  6918  0005  0E03               	swapf	3,w
  6919  0006  00F0               	movwf	??_ngat
  6920  0007  080A               	movf	10,w
  6921  0008  00F1               	movwf	??_ngat+1
  6922  0009  120A  118A  2F9B   	ljmp	_ngat
  6923                           
  6924                           	psect	text563
  6925  0000                     __ptext563:	
  6926 ;; =============== function _ngat ends ============
  6927                           
  6928  007E                     btemp	set	126	;btemp
  6929  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Nov 11 16:50:09 2022

         ___altoft@exp 007A                      _d 0066                      _t 006D                      pc 0002  
       ___bmul@product 0020          ___altoft@sign 007B           ___awdiv@sign 0021                     fsr 0004  
  ___wmul@multiplicand 0074           ___ftadd@exp1 004B           ___ftadd@exp2 004A          ?_lcd_put_byte 0072  
         ___ftadd@sign 0049                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RE1 0049                    _RD3 0043                    _RD4 0044                    _RD5 0045  
                  _RD6 0046                    _RD7 0047                    _abs 07C4                    fsr0 0004  
                  indf 0000           ___awmod@sign 0077                   ?_abs 0072                   l1071 0000  
                 l2132 0000                   l2214 002D                   l2143 0000                   l2135 0000  
                 l2308 054C                   l2229 00A1                   l3302 0000                   l2166 0000  
                 l3312 0000                   l2274 0374                   l3318 0000                   l3432 061C  
                 l3345 0A78                   l3354 0000                   l3348 0000                   l3613 17E0  
                 l3605 17C1                   l3533 0000                   l3606 0000                   l6103 0000  
                 l3376 0921                   l6121 0000                   l3297 0000                   l3465 0000  
                 l7001 0000                   l3570 06EB                   l6123 0000                   l3563 0000  
                 l6211 1781                   l6203 0000                   l3475 0000                   l3547 0000  
                 l3555 0000                   l7003 0000                   l6141 05C7                   l6133 0000  
                 l6213 0000                   l6205 0000                   l6301 0000                   l7021 0000  
                 l7005 022C                   l3494 0000                   l3398 0000                   l6135 0000  
                 l6207 0000                   l6303 0000                   l3479 0000                   l7103 0000  
                 l7023 02A5                   l7015 0271                   l7007 0000                   l6129 0C7E  
                 l6161 0000                   l6153 0000                   l6145 0000                   l6225 17D4  
                 l6217 0000                   l6209 0000                   l6241 0F5D                   l6321 0F75  
                 l6313 0000                   l7113 048F                   l7105 0463                   l7041 02E2  
                 l7033 02D6                   l7025 0000                   l7009 026F                   l7201 0000  
                 l6163 06B6                   l6155 0000                   l6147 0694                   l6235 17EA  
                 l6227 0000                   l6219 0000                   l6307 0A9F                   l6331 0F93  
                 l6323 0F7A                   l6315 0000                   l6403 0E8B                   l7131 04D5  
                 l7043 02EE                   l7211 169C                   l7203 0000                   l6181 0000  
                 l6173 0000                   l6165 0000                   l6157 0000                   l6149 0699  
                 l6229 17DC                   l6261 05D3                   l6309 0000                   l6325 0F7F  
                 l6317 0F71                   l6341 0000                   l6413 0000                   l6405 0000  
                 l7133 04D8                   l7125 04B6                   l7109 0477                   l7061 0339  
                 l7053 0309                   l7045 0000                   l7037 02D9                   l7029 02CE  
                 l7221 0000                   l7213 0000                   l7205 0000                   l6183 06E7  
                 l6159 0000                   l6247 0000                   l6239 0000                   l6263 0000  
                 l6255 0000                   l6271 0000                   l6335 0000                   l6327 0F89  
                 l6351 0000                   l6343 05EC                   l6415 0EA2                   l6431 0561  
                 l6423 0000                   l6503 0000                   l7151 0502                   l7143 0000  
                 l7127 04B9                   l7119 049C                   l7071 0396                   l7063 034E  
                 l7055 0335                   l7039 0000                   l7047 02F7                   l7215 0000  
                 l7207 0000                   l6169 0000                   l6193 0000                   l6249 0000  
                 l6265 0000                   l6257 05CB                   l6281 0000                   l6273 0000  
                 l6337 0000                   l6329 0F8E                   l6361 0610                   l6353 0000  
                 l6345 05F1                   l6417 0000                   l6409 0000                   l6505 0EB9  
                 l6601 08DE                   l7145 04F1                   l7081 040F                   l7217 0000  
                 l7209 0000                   l7161 0000                   l6179 06DF                   l6195 174B  
                 l6275 0000                   l6291 0A85                   l6339 0000                   l6371 0626  
                 l6363 0000                   l6355 0000                   l6347 0000                   l6419 0EAA  
                 l6443 0000                   l6451 0000                   l6523 0000                   l6611 0000  
                 l6603 0000                   l7147 04F5                   l7139 04E2                   l7091 042D  
                 l7083 0000                   l7067 035D                   l7059 0000                   l7219 0000  
                 l7171 0000                   l7163 0000                   l6189 06F5                   l6197 1750  
                 l6285 0000                   l6277 0A72                   l6373 0000                   l6365 0618  
                 l6349 0000                   l6381 0000                   l6437 0000                   l6461 0000  
                 l6517 0ECC                   l6525 0EDF                   l6509 0EC0                   l6541 0000  
                 l6533 0000                   l6621 0900                   l6613 08EC                   l6701 0000  
                 l7149 0000                   l7157 050A                   l7085 0000                   l7077 0000  
                 l7069 0000                   l7181 0000                   l7173 0000                   l7165 0000  
                 l6295 0000                   l6375 0634                   l6391 0000                   l6439 0586  
                 l6463 0000                   l6455 059E                   l6471 0000                   l6527 0000  
                 l6551 0BF8                   l6543 0000                   l6535 0000                   l6631 0918  
                 l6615 0000                   l6623 0905                   l6711 0000                   l6703 0F35  
                 l7079 0401                   l7159 0013                   l7191 0000                   l7183 0000  
                 l7175 0000                   l7167 0000                   l6289 0000                   l6297 0000  
                 l6393 0E7D                   l6385 0000                   l6481 0652                   l6473 0000  
                 l6529 0EE7                   l6561 0C26                   l6553 0000                   l6545 0000  
                 l6537 0000                   l6633 091D                   l6625 0909                   l6609 0000  
                 l6713 0000                   l6721 0000                   l7097 042F                   l7193 0000  
                 l7185 0000                   l7177 0000                   l7169 0000                   l6299 0A8B  
                 l6395 0000                   l6387 0E74                   l6379 0000                   l6459 05AD  
                 l6491 0000                   l6483 0000                   l6563 0C33                   l6555 0000  
                 l6547 0BE0                   l6571 0000                   l6643 0000                   l6627 0000  
                 l6619 08FB                   l6707 0F3F                   l6811 0A46                   l6803 09F2  
                 l7195 0000                   l7187 0000                   l7179 0000                   l6493 067D  
                 l6565 0000                   l6557 0000                   l6549 0BED                   l6573 0000  
                 l6653 0000                   l6645 0937                   l6637 0000                   l6709 0000  
                 l6661 0000                   l6717 0000                   l6733 0000                   l6901 0000  
                 l7197 0000                   l7189 0000                   l6487 0000                   l6567 0000  
                 l6559 0C1B                   l6575 0000                   l6655 0000                   l6647 0000  
                 l6639 092C                   l6591 08C8                   l6583 0000                   l6727 0CBA  
                 l6719 0000                   l6751 0000                   l6743 0000                   l6807 0000  
                 l6815 0000                   l6911 0000                   l6903 0000                   l7199 0000  
                 l6497 0000                   l6577 0000                   l6569 0000                   l6657 0953  
                 l6649 0000                   l6585 0000                   l6681 0000                   l6673 0F0E  
                 l6729 0CC5                   l6737 0C8C                   l6753 0000                   l6745 0000  
                 l6833 0D8C                   l6921 0000                   l6905 006A                   l6499 0000  
                 l6579 0000                   l6595 08CF                   l6587 0000                   l6691 0F1F  
                 l6683 0000                   l6675 0000                   l6667 0EFD                   l6739 0C97  
                 l6771 0B9C                   l6763 0B84                   l6755 0B6C                   l6747 0000  
                 l6851 0E52                   l6827 0D47                   l6819 0000                   l6923 00A3  
                 l6915 0000                   l6597 0000                   l6685 0000                   l6677 0000  
                 l6749 0000                   l6781 0000                   l6845 0E0D                   l6837 0DA3  
                 l6861 0000                   l6917 0078                   l6909 0000                   l6695 0F29  
                 l6687 0000                   l6679 0000                   l6775 0BA8                   l6767 0B90  
                 l6759 0B78                   l6791 0ACA                   l6783 0000                   l6855 0000  
                 l6863 0AD3                   l6951 0000                   l6943 0000                   l6935 00C9  
                 l6927 00A6                   l6919 009D                   l6697 0000                   l6689 0000  
                 l6785 0AC0                   l6793 0000                   l6857 0000                   l6873 0AF0  
                 l6865 0AD9                   l6961 0000                   l6953 0000                   l6945 00F5  
                 l6937 0000                   l6929 00B9                   l6881 0000                   l6699 0000  
                 l6779 0BB4                   l6787 0AC1                   l6867 0AE0                   l6955 0000  
                 l6947 0000                   l6939 0000                   l6789 0000                   l6797 0000  
                 l6869 0AE4                   l6877 0AF7                   l6981 01C0                   l6973 017C  
                 l6965 0143                   l6957 0000                   l6893 002F                   l6879 0000  
                 l6967 0000                   l6959 0000                   l6895 003A                   l6887 0028  
                 l6993 01FC                   l6969 0000                   l6977 018C                   l6889 0000  
                 l6899 0048                   l6989 01EB                   l6999 0000                   STR_1 107C  
                 STR_2 1087                   u2075 06C5                   u2420 0000                   u2165 17A5  
                 u4007 0B4B                   u2425 05F5                   u4017 0B58                   u4107 0C0C  
                 u4027 0B65                   u4117 0C40                   u4037 0C56                   u3510 0000  
                 u2535 0E94                   u4127 0C46                   u4047 0C5C                   u2800 0BF6  
                 u4057 0C66                   u4067 0C6C                   u3515 0108                   u2900 0C3C  
                 u2820 0C02                   u2725 0ED2                   u4077 0BC9                   u4087 0BCF  
                 u3615 029E                   u2840 0C19                   u2760 0BDE                   u2585 056F  
                 u2665 0665                   u4097 0C06                   u3705 0342                   u2914 0C3E  
                 u2834 0C04                   u3715 0358                   u3555 0195                   _PEIE 005E  
                 u2860 0C24                   u2780 0BEB                   u3805 0487                   u3565 01CA  
                 u2880 0C31                   u3665 02EB                   u3675 0300                   u3595 01E9  
                 u3845 04AC                   u3855 04C7                   u3775 045C                   u3795 0471  
                 u3957 16A3                   u3967 16B1                   u3977 0B12                   u3987 0B25  
                 u3997 0B38                   abs@a 0072                   _main 1672                   _ngat 079B  
         ___ftpack@arg 0072           ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E  
                 _xung 0062                   start 000C      ___bmul@multiplier 0021           ___ftmul@cntr 003E  
         ___ftmul@sign 003F           ___fttol@exp1 0030                  ??_abs 0074           ___fttol@lval 002C  
       ??_lcd_put_byte 0073                  ?_main 0070                  ?_ngat 0070        __end_of___awdiv 0EAF  
      __end_of___lbdiv 0A87        __end_of___ftadd 0967                  _CCPR1 0015                  _CCPR2 001B  
      __end_of___awmod 0EEC        __end_of___lbmod 0AA3        __end_of___ftneg 0706                  _ANSEL 0188  
      __end_of___lldiv 0686        __end_of___ftmul 0F5B        ___awdiv@divisor 0078        __end_of___llmod 058F  
      __end_of___ftsub 08A5        __end_of___fttol 063D        ___awdiv@counter 0020                  _TMR1H 000F  
                _TMR1L 000E                  _TRISD 0088           ___lltoft@exp 007A                  _scale 0CD7  
      __end_of_isdigit 05C9          ___ftpack@sign 0076                  _putch 054D        __end_of_isprint 0C80  
                pclath 000A                  status 0003                  wtemp0 007E        ___lbdiv@divisor 0077  
      ___lbdiv@counter 0079           __end_of_main 1735           __end_of_ngat 07B2          lcd_gotoxy@col 0078  
        lcd_gotoxy@row 0077                 ??_main 005F          ___fttol@sign1 002B                 ??_ngat 0070  
 __size_of__tdiv_to_l_ 0078                 _CCP1IE 0462                 _CCP1IF 0062                 _CCP2IE 0468  
               _CCP2IF 0068       __end_of___altoft 0CD7       ___llmod@dividend 0029                 ?_scale 0040  
     ___awdiv@dividend 007A                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lltoft 0CA8                 i1l1076 0000                 i1l6113 07A3                 _T1SYNC 0082  
               i1l6117 07A9                 i1l6109 0000                 i1l6119 0000                 _TMR1GE 0086  
               _TMR1CS 0081                 _TMR1ON 0080                 _TRISA4 042C                 _TRISC1 0439  
               _TRISC2 043A                 _TRISD1 0441                 _TRISE0 0448                 _TRISD2 0442  
               _TRISE1 0449                 _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445  
               _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C72       __end_of_lcd_init 0BBB  
     __end_of_lcd_putc 0B00                 ___bmul 0F5B                 ___ftge 058F                 ___wmul 05C9  
            ??___awdiv 007C              ??___lbdiv 0078              ??___ftadd 0046              ??___awmod 0076  
            ??___lbmod 0073              ??___ftneg 0075              ??___lldiv 007A              ??___ftmul 0037  
            ??___llmod 007A              ??___ftsub 007C              ??___fttol 0028                 _count1 0069  
               _count2 006B                 _fround 0967       ___awdiv@quotient 0022        ___awmod@divisor 0072  
      ___awmod@counter 0076                 _printf 000F          lcd_put_byte@b 0072  ___ftmul@f3_as_product 003B  
            ??_isdigit 0072                 saved_w 007E              ??_isprint 0072                 putch@c 007B  
     ___lbdiv@dividend 0078        ___lbmod@divisor 0072             ___altoft@c 0020        ___lbmod@counter 0075  
 __end_of_lcd_put_byte 0C4B             ___ftadd@f1 0040             ___ftadd@f2 0043             ___ftge@ff1 0072  
           ___ftge@ff2 0075             ___ftneg@f1 0072    ___bmul@multiplicand 007B             ___ftmul@f1 0031  
           ___ftmul@f2 0034             ___ftsub@f1 004F             ___ftsub@f2 004C             ___fttol@f1 0024  
       __pcstackCOMMON 0070             ___lltoft@c 0020          __end_of_scale 0E69          __end_of_putch 0551  
     ___lbdiv@quotient 007A             __div_to_l_ 1735      lcd_gotoxy@address 0079        __div_to_l_@exp1 002D  
      __div_to_l_@cntr 002C                ??_scale 0043        __div_to_l_@quot 0028                ??_putch 007B  
           __pbssBANK0 0062          __div_to_l_@f1 0072          __div_to_l_@f2 0075             __pmaintext 1672  
              ?___bmul 007B                ?___ftge 0072                ?___wmul 0072             __pintentry 0004  
              _CCP1CON 0017                _CCP2CON 001D              ?___altoft 0020                ?_fround 004C  
            ?___ftpack 0072                ?_printf 0056              ?___lltoft 0020                _T1CKPS0 0084  
              _T1CKPS1 0085             _lcd_gotoxy 0AB9              ?_lcd_busy 0070              ?_lcd_init 0070  
            ?_lcd_putc 0070             _scale$4123 0047        __size_of___bmul 000E        __size_of___ftge 002C  
              ___awdiv 0E69                ___lbdiv 0A6C                ___ftadd 08A5                ___awmod 0EAF  
              ___lbmod 0A87                ___ftneg 06FE                ___lldiv 063D        __size_of___wmul 0019  
              ___ftmul 0EEC                ___llmod 0551                ___ftsub 088F                ___fttol 05E2  
           ??___altoft 007A             ??___ftpack 0077        __size_of_fround 0105             ??___lltoft 007A  
      __size_of_printf 053E            ?__div_to_l_ 0072                _dpowers 1054           __size_of_abs 000E  
              _isdigit 05BB       ___awmod@dividend 0074                _isprint 0C72  __size_of_lcd_put_byte 0090  
           ??_lcd_busy 0072             ??_lcd_init 0077             ??_lcd_putc 007A   end_of_initialization 07C0  
       lcd_put_byte@rs 0075        ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8  
              printf@f 00AC         __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0078  
         _lcd_put_byte 0BBB       ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076  
          printf@integ 00A5            printf@width 00B1    __size_of__div_to_l_ 00BE            ___ftmul@exp 003A  
       __end_of___bmul 0F69         __end_of___ftge 05BB         __end_of___wmul 05E2         __end_of_fround 0A6C  
       __end_of_printf 054D    start_initialization 07B2    __end_of__tdiv_to_l_ 06FE            __end_of_abs 07D2  
      ___llmod@divisor 0025        ___llmod@counter 007A               ??___bmul 007C               ??___ftge 0078  
  __size_of_lcd_gotoxy 0018               ??___wmul 0076               ??_fround 007C               ??_printf 005A  
    __size_of___altoft 002F             fround@prec 0055      __size_of___ftpack 003E      __size_of___lltoft 001E  
        __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3685 0072      __size_of_lcd_busy 0027  
    __size_of_lcd_init 00BB      __size_of_lcd_putc 002F               ?___awdiv 0078               ?___lbdiv 0077  
             ?___ftadd 0040              __ptext531 000F               ?___awmod 0072              __ptext540 0CA8  
            __ptext532 054D              __ptext541 0EEC              __ptext533 0AD1              __ptext550 0E69  
            __ptext542 08A5              __ptext534 088F              __ptext551 05E2              __ptext543 0C4B  
            __ptext535 0CD7              __ptext560 0C72              __ptext552 0F69              __ptext544 0BBB  
            __ptext536 0967              __ptext561 07C4              __ptext553 0A87              __ptext545 0EAF  
            __ptext537 0AB9              __ptext562 079B              __ptext554 0A6C              __ptext546 063D  
            __ptext538 0B00              __ptext563 0000              __ptext555 05C9              __ptext547 058F  
            __ptext539 0C8A               ?___lbmod 0072              __ptext556 0F5B              __ptext548 06FE  
            __ptext557 1735              __ptext549 0551              __ptext558 0686              __ptext559 05BB  
             ?___ftneg 0072               ?___lldiv 0072               ?___ftmul 0031               ?___llmod 0025  
             ?___ftsub 004C              __npowers_ 1006               ?___fttol 0024              __pstrings 1000  
          __tdiv_to_l_ 0686           ??__div_to_l_ 0020               ?_isdigit 0070               ?_isprint 0070  
       __size_of_scale 0192         __size_of_putch 0004      interrupt_function 0004         ___wmul@product 0076  
   __end_of__div_to_l_ 17F3            __stringbase 1005      ___wmul@multiplier 0072             printf@_val 00A8  
           printf@flag 00AD             printf@fval 00B3             printf@prec 00B6              lcd_putc@c 007A  
         ??_lcd_gotoxy 0078       lcd_put_byte@temp 0076           _isprint$3688 0072     __end_of_lcd_gotoxy 0AD1  
     __size_of___awdiv 0046       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0049               ___altoft 0CA8  
     __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B  
             ___ftpack 0F69            _fround$4121 0052            _fround$4122 004F               ___lltoft 0C8A  
     __size_of_isdigit 000E       __size_of_isprint 000E               __powers_ 102D               _lcd_busy 0C4B  
             _lcd_init 0B00               _lcd_putc 0AD1          __size_of_main 00C3          __size_of_ngat 0017  
            printf@exp 00AF               isdigit@c 0073               scale@scl 004A               intlevel1 0000  
     __tdiv_to_l_@exp1 0025       __tdiv_to_l_@cntr 0024       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0076  
             isprint@c 0073              stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0072  
          _printf$3175 00A0       ___lldiv@quotient 0020               stringdir 1000               stringtab 1000  
