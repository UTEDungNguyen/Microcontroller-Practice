

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 18 04:04:55 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text519,local,class=CODE,delta=2
    13                           	psect	text522,local,class=CODE,delta=2
    14                           	psect	text524,local,class=CODE,delta=2
    15                           	psect	text525,local,class=CODE,delta=2
    16                           	psect	text527,local,class=CODE,delta=2
    17                           	psect	text545,local,class=CODE,delta=2
    18                           	psect	text549,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text550,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  000A                     	;#
    24                           
    25                           	psect	config
    26  2007  E3C2               	dw	58306	;#
    27                           
    28                           	psect	strings
    29  1000                     __pstrings:	
    30  1000                     stringtab:	
    31                           ;	global	stringdir,stringtab,__stringbase
    32                           
    33  1000                     stringcode:	
    34                           ;	String table - string pointers are 1 byte each
    35                           
    36  1000                     stringdir:	
    37  1000  3010               	movlw	high stringdir
    38  1001  008A               	movwf	10
    39  1002  0804               	movf	4,w
    40  1003  0A84               	incf	4,f
    41  1004  0782               	addwf	2,f
    42  1005                     __stringbase:	
    43  1005  3400               	retlw	0
    44  1006                     __npowers_:	
    45  1006  3400               	retlw	0
    46  1007  3480               	retlw	128
    47  1008  343F               	retlw	63
    48  1009  34CD               	retlw	205
    49  100A  34CC               	retlw	204
    50  100B  343D               	retlw	61
    51  100C  34D7               	retlw	215
    52  100D  3423               	retlw	35
    53  100E  343C               	retlw	60
    54  100F  3412               	retlw	18
    55  1010  3483               	retlw	131
    56  1011  343A               	retlw	58
    57  1012  34B7               	retlw	183
    58  1013  34D1               	retlw	209
    59  1014  3438               	retlw	56
    60  1015  34C6               	retlw	198
    61  1016  3427               	retlw	39
    62  1017  3437               	retlw	55
    63  1018  3438               	retlw	56
    64  1019  3486               	retlw	134
    65  101A  3435               	retlw	53
    66  101B  34C0               	retlw	192
    67  101C  34D6               	retlw	214
    68  101D  3433               	retlw	51
    69  101E  34CC               	retlw	204
    70  101F  342B               	retlw	43
    71  1020  3432               	retlw	50
    72  1021  3470               	retlw	112
    73  1022  3489               	retlw	137
    74  1023  3430               	retlw	48
    75  1024  34E7               	retlw	231
    76  1025  34DB               	retlw	219
    77  1026  342E               	retlw	46
    78  1027  34E5               	retlw	229
    79  1028  343C               	retlw	60
    80  1029  341E               	retlw	30
    81  102A  3442               	retlw	66
    82  102B  34A2               	retlw	162
    83  102C  340D               	retlw	13
    84  102D                     __powers_:	
    85  102D  3400               	retlw	0
    86  102E  3480               	retlw	128
    87  102F  343F               	retlw	63
    88  1030  3400               	retlw	0
    89  1031  3420               	retlw	32
    90  1032  3441               	retlw	65
    91  1033  3400               	retlw	0
    92  1034  34C8               	retlw	200
    93  1035  3442               	retlw	66
    94  1036  3400               	retlw	0
    95  1037  347A               	retlw	122
    96  1038  3444               	retlw	68
    97  1039  3440               	retlw	64
    98  103A  341C               	retlw	28
    99  103B  3446               	retlw	70
   100  103C  3450               	retlw	80
   101  103D  34C3               	retlw	195
   102  103E  3447               	retlw	71
   103  103F  3424               	retlw	36
   104  1040  3474               	retlw	116
   105  1041  3449               	retlw	73
   106  1042  3497               	retlw	151
   107  1043  3418               	retlw	24
   108  1044  344B               	retlw	75
   109  1045  34BC               	retlw	188
   110  1046  34BE               	retlw	190
   111  1047  344C               	retlw	76
   112  1048  346B               	retlw	107
   113  1049  346E               	retlw	110
   114  104A  344E               	retlw	78
   115  104B  3403               	retlw	3
   116  104C  3415               	retlw	21
   117  104D  3450               	retlw	80
   118  104E  3479               	retlw	121
   119  104F  34AD               	retlw	173
   120  1050  3460               	retlw	96
   121  1051  34F3               	retlw	243
   122  1052  3449               	retlw	73
   123  1053  3471               	retlw	113
   124  1054                     _dpowers:	
   125  1054  3401               	retlw	1
   126  1055  3400               	retlw	0
   127  1056  3400               	retlw	0
   128  1057  3400               	retlw	0
   129  1058  340A               	retlw	10
   130  1059  3400               	retlw	0
   131  105A  3400               	retlw	0
   132  105B  3400               	retlw	0
   133  105C  3464               	retlw	100
   134  105D  3400               	retlw	0
   135  105E  3400               	retlw	0
   136  105F  3400               	retlw	0
   137  1060  34E8               	retlw	232
   138  1061  3403               	retlw	3
   139  1062  3400               	retlw	0
   140  1063  3400               	retlw	0
   141  1064  3410               	retlw	16
   142  1065  3427               	retlw	39
   143  1066  3400               	retlw	0
   144  1067  3400               	retlw	0
   145  1068  34A0               	retlw	160
   146  1069  3486               	retlw	134
   147  106A  3401               	retlw	1
   148  106B  3400               	retlw	0
   149  106C  3440               	retlw	64
   150  106D  3442               	retlw	66
   151  106E  340F               	retlw	15
   152  106F  3400               	retlw	0
   153  1070  3480               	retlw	128
   154  1071  3496               	retlw	150
   155  1072  3498               	retlw	152
   156  1073  3400               	retlw	0
   157  1074  3400               	retlw	0
   158  1075  34E1               	retlw	225
   159  1076  34F5               	retlw	245
   160  1077  3405               	retlw	5
   161  1078  3400               	retlw	0
   162  1079  34CA               	retlw	202
   163  107A  349A               	retlw	154
   164  107B  343B               	retlw	59
   165  000E                     _TMR1	set	14
   166  000F                     _TMR1H	set	15
   167  000E                     _TMR1L	set	14
   168  005F                     _GIE	set	95
   169  0031                     _RB1	set	49
   170  005B                     _RBIE	set	91
   171  0058                     _RBIF	set	88
   172  0041                     _RD1	set	65
   173  0042                     _RD2	set	66
   174  0043                     _RD3	set	67
   175  0044                     _RD4	set	68
   176  0045                     _RD5	set	69
   177  0046                     _RD6	set	70
   178  0047                     _RD7	set	71
   179  0048                     _RE0	set	72
   180  0049                     _RE1	set	73
   181  0084                     _T1CKPS0	set	132
   182  0085                     _T1CKPS1	set	133
   183  0082                     _T1SYNC	set	130
   184  0081                     _TMR1CS	set	129
   185  0086                     _TMR1GE	set	134
   186  0080                     _TMR1ON	set	128
   187  0096                     _IOCB	set	150
   188  0095                     _WPUB	set	149
   189  0431                     _TRISB1	set	1073
   190  0441                     _TRISD1	set	1089
   191  0442                     _TRISD2	set	1090
   192  0443                     _TRISD3	set	1091
   193  0444                     _TRISD4	set	1092
   194  0445                     _TRISD5	set	1093
   195  0446                     _TRISD6	set	1094
   196  0447                     _TRISD7	set	1095
   197  0448                     _TRISE0	set	1096
   198  0449                     _TRISE1	set	1097
   199  040F                     _nRBPU	set	1039
   200  0188                     _ANSEL	set	392
   201  0189                     _ANSELH	set	393
   202  107C                     STR_1:	
   203  107C  3478               	retlw	120	;'x'
   204  107D  3475               	retlw	117	;'u'
   205  107E  346E               	retlw	110	;'n'
   206  107F  3467               	retlw	103	;'g'
   207  1080  343A               	retlw	58	;':'
   208  1081  3420               	retlw	32	;' '
   209  1082  3425               	retlw	37	;'%'
   210  1083  3430               	retlw	48	;'0'
   211  1084  3435               	retlw	53	;'5'
   212  1085  3475               	retlw	117	;'u'
   213  1086  3400               	retlw	0
   214  1087                     STR_2:	
   215  1087  3464               	retlw	100	;'d'
   216  1088  343A               	retlw	58	;':'
   217  1089  3420               	retlw	32	;' '
   218  108A  3425               	retlw	37	;'%'
   219  108B  3433               	retlw	51	;'3'
   220  108C  342E               	retlw	46	;'.'
   221  108D  3432               	retlw	50	;'2'
   222  108E  3466               	retlw	102	;'f'
   223  108F  3400               	retlw	0
   224                           
   225                           	psect	cinit
   226  07B2                     start_initialization:	
   227                           
   228                           ; Clear objects allocated to BANK0
   229  07B2  01E2               	clrf	__pbssBANK0& (0+127)
   230  07B3  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   231  07B4  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   232  07B5  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   233  07B6  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   234  07B7  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   235  07B8  01E8               	clrf	(__pbssBANK0+6)& (0+127)
   236  07B9  01E9               	clrf	(__pbssBANK0+7)& (0+127)
   237  07BA  01EA               	clrf	(__pbssBANK0+8)& (0+127)
   238  07BB                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  07BB  0183               	clrf	3
   242  07BC  160A  118A  2EA3   	ljmp	_main	;jump to C main() function
   243                           
   244                           	psect	bssBANK0
   245  0062                     __pbssBANK0:	
   246  0062                     _d:	
   247  0062                     	ds	3
   248  0065                     _count:	
   249  0065                     	ds	2
   250  0067                     _xung:	
   251  0067                     	ds	4
   252                           
   253                           	psect	cstackBANK1
   254  00A0                     __pcstackBANK1:	
   255  00A0                     _printf$3163:	
   256                           
   257                           ; 4 bytes @ 0x0
   258  00A0                     	ds	4
   259  00A4                     printf@ap:	
   260                           
   261                           ; 1 bytes @ 0x4
   262  00A4                     	ds	1
   263  00A5                     printf@integ:	
   264                           
   265                           ; 3 bytes @ 0x5
   266  00A5                     	ds	3
   267  00A8                     printf@_val:	
   268                           
   269                           ; 4 bytes @ 0x8
   270  00A8                     	ds	4
   271  00AC                     printf@f:	
   272                           
   273                           ; 1 bytes @ 0xC
   274  00AC                     	ds	1
   275  00AD                     printf@flag:	
   276                           
   277                           ; 2 bytes @ 0xD
   278  00AD                     	ds	2
   279  00AF                     printf@exp:	
   280                           
   281                           ; 2 bytes @ 0xF
   282  00AF                     	ds	2
   283  00B1                     printf@width:	
   284                           
   285                           ; 2 bytes @ 0x11
   286  00B1                     	ds	2
   287  00B3                     printf@fval:	
   288                           
   289                           ; 3 bytes @ 0x13
   290  00B3                     	ds	3
   291  00B6                     printf@prec:	
   292                           
   293                           ; 2 bytes @ 0x16
   294  00B6                     	ds	2
   295  00B8                     printf@c:	
   296                           
   297                           ; 1 bytes @ 0x18
   298  00B8                     	ds	1
   299                           
   300                           	psect	cstackCOMMON
   301  0070                     __pcstackCOMMON:	
   302  0070                     ?_lcd_init:	
   303  0070                     ?_lcd_putc:	
   304                           ; 0 bytes @ 0x0
   305                           
   306  0070                     ?_isprint:	
   307                           ; 0 bytes @ 0x0
   308                           
   309  0070                     ?_isdigit:	
   310                           ; 1 bit 
   311                           
   312  0070                     ?_main:	
   313                           ; 1 bit 
   314                           
   315  0070                     ?_ngat:	
   316                           ; 0 bytes @ 0x0
   317                           
   318  0070                     ??_ngat:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_putch:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_lcd_busy:	
   325                           ; 0 bytes @ 0x0
   326                           
   327                           
   328                           ; 1 bytes @ 0x0
   329  0070                     	ds	2
   330  0072                     ?_lcd_put_byte:	
   331  0072                     ??_lcd_busy:	
   332                           ; 0 bytes @ 0x2
   333                           
   334  0072                     ??_isprint:	
   335                           ; 0 bytes @ 0x2
   336                           
   337  0072                     ??_isdigit:	
   338                           ; 0 bytes @ 0x2
   339                           
   340  0072                     ?___ftge:	
   341                           ; 0 bytes @ 0x2
   342                           
   343  0072                     ?___lbmod:	
   344                           ; 1 bit 
   345                           
   346  0072                     ?___wmul:	
   347                           ; 1 bytes @ 0x2
   348                           
   349  0072                     ?___awmod:	
   350                           ; 2 bytes @ 0x2
   351                           
   352  0072                     ?___ftpack:	
   353                           ; 2 bytes @ 0x2
   354                           
   355  0072                     ?___ftneg:	
   356                           ; 3 bytes @ 0x2
   357                           
   358  0072                     ?__tdiv_to_l_:	
   359                           ; 3 bytes @ 0x2
   360                           
   361  0072                     ?__div_to_l_:	
   362                           ; 4 bytes @ 0x2
   363                           
   364  0072                     ?___lldiv:	
   365                           ; 4 bytes @ 0x2
   366                           
   367  0072                     lcd_put_byte@b:	
   368                           ; 4 bytes @ 0x2
   369                           
   370  0072                     _isdigit$3671:	
   371                           ; 1 bytes @ 0x2
   372                           
   373  0072                     _isprint$3674:	
   374                           ; 1 bytes @ 0x2
   375                           
   376  0072                     ___lbmod@divisor:	
   377                           ; 1 bytes @ 0x2
   378                           
   379  0072                     ___wmul@multiplier:	
   380                           ; 1 bytes @ 0x2
   381                           
   382  0072                     ___awmod@divisor:	
   383                           ; 2 bytes @ 0x2
   384                           
   385  0072                     ___ftneg@f1:	
   386                           ; 2 bytes @ 0x2
   387                           
   388  0072                     ___ftge@ff1:	
   389                           ; 3 bytes @ 0x2
   390                           
   391  0072                     __tdiv_to_l_@f1:	
   392                           ; 3 bytes @ 0x2
   393                           
   394  0072                     __div_to_l_@f1:	
   395                           ; 3 bytes @ 0x2
   396                           
   397  0072                     ___ftpack@arg:	
   398                           ; 3 bytes @ 0x2
   399                           
   400  0072                     ___lldiv@divisor:	
   401                           ; 3 bytes @ 0x2
   402                           
   403                           
   404                           ; 4 bytes @ 0x2
   405  0072                     	ds	1
   406  0073                     ??_lcd_put_byte:	
   407  0073                     ??___lbmod:	
   408                           ; 0 bytes @ 0x3
   409                           
   410  0073                     lcd_busy@busy:	
   411                           ; 0 bytes @ 0x3
   412                           
   413  0073                     isdigit@c:	
   414                           ; 1 bytes @ 0x3
   415                           
   416  0073                     isprint@c:	
   417                           ; 1 bytes @ 0x3
   418                           
   419                           
   420                           ; 1 bytes @ 0x3
   421  0073                     	ds	1
   422  0074                     ___lbmod@dividend:	
   423  0074                     ___wmul@multiplicand:	
   424                           ; 1 bytes @ 0x4
   425                           
   426  0074                     ___awmod@dividend:	
   427                           ; 2 bytes @ 0x4
   428                           
   429                           
   430                           ; 2 bytes @ 0x4
   431  0074                     	ds	1
   432  0075                     ??___ftneg:	
   433  0075                     lcd_put_byte@rs:	
   434                           ; 0 bytes @ 0x5
   435                           
   436  0075                     ___lbmod@counter:	
   437                           ; 1 bytes @ 0x5
   438                           
   439  0075                     ___ftpack@exp:	
   440                           ; 1 bytes @ 0x5
   441                           
   442  0075                     ___ftge@ff2:	
   443                           ; 1 bytes @ 0x5
   444                           
   445  0075                     __tdiv_to_l_@f2:	
   446                           ; 3 bytes @ 0x5
   447                           
   448  0075                     __div_to_l_@f2:	
   449                           ; 3 bytes @ 0x5
   450                           
   451                           
   452                           ; 3 bytes @ 0x5
   453  0075                     	ds	1
   454  0076                     ??___wmul:	
   455  0076                     ??___awmod:	
   456                           ; 0 bytes @ 0x6
   457                           
   458  0076                     lcd_put_byte@temp:	
   459                           ; 0 bytes @ 0x6
   460                           
   461  0076                     ___lbmod@rem:	
   462                           ; 1 bytes @ 0x6
   463                           
   464  0076                     ___awmod@counter:	
   465                           ; 1 bytes @ 0x6
   466                           
   467  0076                     ___ftpack@sign:	
   468                           ; 1 bytes @ 0x6
   469                           
   470  0076                     ___wmul@product:	
   471                           ; 1 bytes @ 0x6
   472                           
   473  0076                     ___lldiv@dividend:	
   474                           ; 2 bytes @ 0x6
   475                           
   476                           
   477                           ; 4 bytes @ 0x6
   478  0076                     	ds	1
   479  0077                     ??_lcd_init:	
   480  0077                     ?_lcd_gotoxy:	
   481                           ; 0 bytes @ 0x7
   482                           
   483  0077                     ??___ftpack:	
   484                           ; 0 bytes @ 0x7
   485                           
   486  0077                     ?___lbdiv:	
   487                           ; 0 bytes @ 0x7
   488                           
   489  0077                     lcd_gotoxy@row:	
   490                           ; 1 bytes @ 0x7
   491                           
   492  0077                     ___lbdiv@divisor:	
   493                           ; 1 bytes @ 0x7
   494                           
   495  0077                     ___awmod@sign:	
   496                           ; 1 bytes @ 0x7
   497                           
   498                           
   499                           ; 1 bytes @ 0x7
   500  0077                     	ds	1
   501  0078                     ??_lcd_gotoxy:	
   502  0078                     ??__tdiv_to_l_:	
   503                           ; 0 bytes @ 0x8
   504                           
   505  0078                     ??___lbdiv:	
   506                           ; 0 bytes @ 0x8
   507                           
   508  0078                     ??___ftge:	
   509                           ; 0 bytes @ 0x8
   510                           
   511  0078                     ?___awdiv:	
   512                           ; 0 bytes @ 0x8
   513                           
   514  0078                     lcd_gotoxy@col:	
   515                           ; 2 bytes @ 0x8
   516                           
   517  0078                     ___lbdiv@dividend:	
   518                           ; 1 bytes @ 0x8
   519                           
   520  0078                     ___awdiv@divisor:	
   521                           ; 1 bytes @ 0x8
   522                           
   523                           
   524                           ; 2 bytes @ 0x8
   525  0078                     	ds	1
   526  0079                     lcd_gotoxy@address:	
   527  0079                     ___lbdiv@counter:	
   528                           ; 1 bytes @ 0x9
   529                           
   530                           
   531                           ; 1 bytes @ 0x9
   532  0079                     	ds	1
   533  007A                     ??_lcd_putc:	
   534  007A                     ??___llmod:	
   535                           ; 0 bytes @ 0xA
   536                           
   537  007A                     ??___lldiv:	
   538                           ; 0 bytes @ 0xA
   539                           
   540  007A                     ??___altoft:	
   541                           ; 0 bytes @ 0xA
   542                           
   543  007A                     ??___lltoft:	
   544                           ; 0 bytes @ 0xA
   545                           
   546  007A                     lcd_putc@c:	
   547                           ; 0 bytes @ 0xA
   548                           
   549  007A                     ___lbdiv@quotient:	
   550                           ; 1 bytes @ 0xA
   551                           
   552  007A                     ___llmod@counter:	
   553                           ; 1 bytes @ 0xA
   554                           
   555  007A                     ___altoft@exp:	
   556                           ; 1 bytes @ 0xA
   557                           
   558  007A                     ___lltoft@exp:	
   559                           ; 1 bytes @ 0xA
   560                           
   561  007A                     ___awdiv@dividend:	
   562                           ; 1 bytes @ 0xA
   563                           
   564                           
   565                           ; 2 bytes @ 0xA
   566  007A                     	ds	1
   567  007B                     ??_putch:	
   568  007B                     ?___bmul:	
   569                           ; 0 bytes @ 0xB
   570                           
   571  007B                     putch@c:	
   572                           ; 1 bytes @ 0xB
   573                           
   574  007B                     ___bmul@multiplicand:	
   575                           ; 1 bytes @ 0xB
   576                           
   577  007B                     ___altoft@sign:	
   578                           ; 1 bytes @ 0xB
   579                           
   580                           
   581                           ; 1 bytes @ 0xB
   582  007B                     	ds	1
   583  007C                     ??_fround:	
   584  007C                     ??___bmul:	
   585                           ; 0 bytes @ 0xC
   586                           
   587  007C                     ??___ftsub:	
   588                           ; 0 bytes @ 0xC
   589                           
   590  007C                     ??___awdiv:	
   591                           ; 0 bytes @ 0xC
   592                           
   593                           
   594                           	psect	cstackBANK0
   595  0020                     __pcstackBANK0:	
   596                           ; 0 bytes @ 0xC
   597                           
   598  0020                     ??__div_to_l_:	
   599  0020                     ?___altoft:	
   600                           ; 0 bytes @ 0x0
   601                           
   602  0020                     ?___lltoft:	
   603                           ; 3 bytes @ 0x0
   604                           
   605  0020                     ___bmul@product:	
   606                           ; 3 bytes @ 0x0
   607                           
   608  0020                     ___awdiv@counter:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0020                     ___lldiv@quotient:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0020                     ___altoft@c:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0020                     ___lltoft@c:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0020                     __tdiv_to_l_@quot:	
   621                           ; 4 bytes @ 0x0
   622                           
   623                           
   624                           ; 4 bytes @ 0x0
   625  0020                     	ds	1
   626  0021                     ___bmul@multiplier:	
   627  0021                     ___awdiv@sign:	
   628                           ; 1 bytes @ 0x1
   629                           
   630                           
   631                           ; 1 bytes @ 0x1
   632  0021                     	ds	1
   633  0022                     ___awdiv@quotient:	
   634                           
   635                           ; 2 bytes @ 0x2
   636  0022                     	ds	2
   637  0024                     ?___fttol:	
   638  0024                     ___lldiv@counter:	
   639                           ; 4 bytes @ 0x4
   640                           
   641  0024                     __tdiv_to_l_@cntr:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0024                     ___fttol@f1:	
   645                           ; 1 bytes @ 0x4
   646                           
   647                           
   648                           ; 3 bytes @ 0x4
   649  0024                     	ds	1
   650  0025                     ?___llmod:	
   651  0025                     __tdiv_to_l_@exp1:	
   652                           ; 4 bytes @ 0x5
   653                           
   654  0025                     ___llmod@divisor:	
   655                           ; 1 bytes @ 0x5
   656                           
   657                           
   658                           ; 4 bytes @ 0x5
   659  0025                     	ds	3
   660  0028                     ??___fttol:	
   661  0028                     __div_to_l_@quot:	
   662                           ; 0 bytes @ 0x8
   663                           
   664                           
   665                           ; 4 bytes @ 0x8
   666  0028                     	ds	1
   667  0029                     ___llmod@dividend:	
   668                           
   669                           ; 4 bytes @ 0x9
   670  0029                     	ds	2
   671  002B                     ___fttol@sign1:	
   672                           
   673                           ; 1 bytes @ 0xB
   674  002B                     	ds	1
   675  002C                     __div_to_l_@cntr:	
   676  002C                     ___fttol@lval:	
   677                           ; 1 bytes @ 0xC
   678                           
   679                           
   680                           ; 4 bytes @ 0xC
   681  002C                     	ds	1
   682  002D                     __div_to_l_@exp1:	
   683                           
   684                           ; 1 bytes @ 0xD
   685  002D                     	ds	3
   686  0030                     ___fttol@exp1:	
   687                           
   688                           ; 1 bytes @ 0x10
   689  0030                     	ds	1
   690  0031                     ?___ftmul:	
   691  0031                     ___ftmul@f1:	
   692                           ; 3 bytes @ 0x11
   693                           
   694                           
   695                           ; 3 bytes @ 0x11
   696  0031                     	ds	3
   697  0034                     ___ftmul@f2:	
   698                           
   699                           ; 3 bytes @ 0x14
   700  0034                     	ds	3
   701  0037                     ??___ftmul:	
   702                           
   703                           ; 0 bytes @ 0x17
   704  0037                     	ds	3
   705  003A                     ___ftmul@exp:	
   706                           
   707                           ; 1 bytes @ 0x1A
   708  003A                     	ds	1
   709  003B                     ___ftmul@f3_as_product:	
   710                           
   711                           ; 3 bytes @ 0x1B
   712  003B                     	ds	3
   713  003E                     ___ftmul@cntr:	
   714                           
   715                           ; 1 bytes @ 0x1E
   716  003E                     	ds	1
   717  003F                     ___ftmul@sign:	
   718                           
   719                           ; 1 bytes @ 0x1F
   720  003F                     	ds	1
   721  0040                     ?_scale:	
   722  0040                     ?___ftadd:	
   723                           ; 3 bytes @ 0x20
   724                           
   725  0040                     ___ftadd@f1:	
   726                           ; 3 bytes @ 0x20
   727                           
   728                           
   729                           ; 3 bytes @ 0x20
   730  0040                     	ds	3
   731  0043                     ??_scale:	
   732  0043                     ___ftadd@f2:	
   733                           ; 0 bytes @ 0x23
   734                           
   735                           
   736                           ; 3 bytes @ 0x23
   737  0043                     	ds	3
   738  0046                     ??___ftadd:	
   739                           
   740                           ; 0 bytes @ 0x26
   741  0046                     	ds	1
   742  0047                     _scale$4108:	
   743                           
   744                           ; 3 bytes @ 0x27
   745  0047                     	ds	2
   746  0049                     ___ftadd@sign:	
   747                           
   748                           ; 1 bytes @ 0x29
   749  0049                     	ds	1
   750  004A                     scale@scl:	
   751  004A                     ___ftadd@exp2:	
   752                           ; 1 bytes @ 0x2A
   753                           
   754                           
   755                           ; 1 bytes @ 0x2A
   756  004A                     	ds	1
   757  004B                     ___ftadd@exp1:	
   758                           
   759                           ; 1 bytes @ 0x2B
   760  004B                     	ds	1
   761  004C                     ?_fround:	
   762  004C                     ?___ftsub:	
   763                           ; 3 bytes @ 0x2C
   764                           
   765  004C                     ___ftsub@f2:	
   766                           ; 3 bytes @ 0x2C
   767                           
   768                           
   769                           ; 3 bytes @ 0x2C
   770  004C                     	ds	3
   771  004F                     ___ftsub@f1:	
   772  004F                     _fround$4107:	
   773                           ; 3 bytes @ 0x2F
   774                           
   775                           
   776                           ; 3 bytes @ 0x2F
   777  004F                     	ds	3
   778  0052                     _fround$4106:	
   779                           
   780                           ; 3 bytes @ 0x32
   781  0052                     	ds	3
   782  0055                     fround@prec:	
   783                           
   784                           ; 1 bytes @ 0x35
   785  0055                     	ds	1
   786  0056                     ?_printf:	
   787                           
   788                           ; 2 bytes @ 0x36
   789  0056                     	ds	4
   790  005A                     ??_printf:	
   791                           
   792                           ; 0 bytes @ 0x3A
   793  005A                     	ds	5
   794  005F                     ??_main:	
   795                           
   796                           ; 0 bytes @ 0x3F
   797  005F                     	ds	3
   798                           
   799                           	psect	maintext
   800  16A3                     __pmaintext:	
   801 ;;Data sizes: Strings 20, constant 118, data 0, bss 9, persistent 0 stack 0
   802 ;;Auto spaces:   Size  Autos    Used
   803 ;; COMMON          14     12      12
   804 ;; BANK0           80     66      75
   805 ;; BANK1           80     25      25
   806 ;; BANK3           96      0       0
   807 ;; BANK2           96      0       0
   808 ;;
   809 ;; Pointer list with targets:
   810 ;; ?___ftpack	float  size(1) Largest target is 4
   811 ;;		 -> xung(BANK0[4]), 
   812 ;;
   813 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   814 ;;
   815 ;; ?___llmod	unsigned long  size(1) Largest target is 4
   816 ;;		 -> xung(BANK0[4]), 
   817 ;;
   818 ;; ?___ftsub	float  size(1) Largest target is 0
   819 ;;
   820 ;; ?___lltoft	float  size(1) Largest target is 0
   821 ;;
   822 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   823 ;;
   824 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   825 ;;
   826 ;; ?___fttol	long  size(1) Largest target is 4
   827 ;;		 -> xung(BANK0[4]), 
   828 ;;
   829 ;; ?___ftadd	float  size(1) Largest target is 4
   830 ;;		 -> xung(BANK0[4]), 
   831 ;;
   832 ;; ?___ftneg	float  size(1) Largest target is 4
   833 ;;		 -> xung(BANK0[4]), 
   834 ;;
   835 ;; ?___awmod	int  size(2) Largest target is 40
   836 ;;		 -> dpowers(CODE[40]), xung(BANK0[4]), 
   837 ;;
   838 ;; ?___awdiv	int  size(1) Largest target is 0
   839 ;;
   840 ;; ?_scale	int  size(1) Largest target is 0
   841 ;;
   842 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   843 ;;
   844 ;; ?_fround	unsigned int  size(1) Largest target is 0
   845 ;;
   846 ;; ?___ftmul	float  size(1) Largest target is 0
   847 ;;
   848 ;; ?___altoft	float  size(1) Largest target is 0
   849 ;;
   850 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   851 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   852 ;;
   853 ;; ?_printf	int  size(1) Largest target is 4
   854 ;;		 -> xung(BANK0[4]), 
   855 ;;
   856 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   857 ;;		 -> ?_printf(BANK0[2]), 
   858 ;;
   859 ;; S3152$_cp	PTR const unsigned char  size(1) Largest target is 0
   860 ;;
   861 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   862 ;;
   863 ;;
   864 ;; Critical Paths under _main in COMMON
   865 ;;
   866 ;;   _main->___altoft
   867 ;;   _printf->_putch
   868 ;;   _printf->___awdiv
   869 ;;   _putch->_lcd_putc
   870 ;;   _lcd_putc->_lcd_gotoxy
   871 ;;   _scale->___awdiv
   872 ;;   _scale->___bmul
   873 ;;   _fround->___bmul
   874 ;;   _lcd_gotoxy->_lcd_put_byte
   875 ;;   _lcd_init->_lcd_put_byte
   876 ;;   ___lltoft->___ftpack
   877 ;;   ___altoft->___ftpack
   878 ;;   ___ftmul->___altoft
   879 ;;   ___ftmul->___awdiv
   880 ;;   ___ftmul->___bmul
   881 ;;   ___ftadd->___bmul
   882 ;;   ___llmod->___lldiv
   883 ;;   ___awdiv->___awmod
   884 ;;   ___fttol->___awdiv
   885 ;;   ___fttol->___bmul
   886 ;;   ___lbdiv->___lbmod
   887 ;;   ___bmul->___lbdiv
   888 ;;
   889 ;; Critical Paths under _ngat in COMMON
   890 ;;
   891 ;;   None.
   892 ;;
   893 ;; Critical Paths under _main in BANK0
   894 ;;
   895 ;;   _main->_printf
   896 ;;   _printf->_fround
   897 ;;   ___ftsub->___ftadd
   898 ;;   _scale->___ftmul
   899 ;;   _fround->___ftadd
   900 ;;   ___ftmul->___fttol
   901 ;;   ___ftadd->___ftmul
   902 ;;   ___llmod->___lldiv
   903 ;;   ___fttol->___awdiv
   904 ;;
   905 ;; Critical Paths under _ngat in BANK0
   906 ;;
   907 ;;   None.
   908 ;;
   909 ;; Critical Paths under _main in BANK1
   910 ;;
   911 ;;   _main->_printf
   912 ;;
   913 ;; Critical Paths under _ngat in BANK1
   914 ;;
   915 ;;   None.
   916 ;;
   917 ;; Critical Paths under _main in BANK3
   918 ;;
   919 ;;   None.
   920 ;;
   921 ;; Critical Paths under _ngat in BANK3
   922 ;;
   923 ;;   None.
   924 ;;
   925 ;; Critical Paths under _main in BANK2
   926 ;;
   927 ;;   None.
   928 ;;
   929 ;; Critical Paths under _ngat in BANK2
   930 ;;
   931 ;;   None.
   932 ;;
   933 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   934 ;;
   935 ;;
   936 ;;Call Graph Tables:
   937 ;;
   938 ;; ---------------------------------------------------------------------------------
   939 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (0) _main                                                 3     3      0   12403
   942 ;;                                             63 BANK0      3     3      0
   943 ;;                           _lcd_init
   944 ;;                           ___altoft
   945 ;;                            ___ftmul
   946 ;;                         _lcd_gotoxy
   947 ;;                             _printf
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (1) _printf                                              38    34      4   10964
   950 ;;                                             54 BANK0      9     5      4
   951 ;;                                              0 BANK1     25    25      0
   952 ;;                              _putch
   953 ;;                            _isdigit
   954 ;;                             ___wmul
   955 ;;                             ___ftge
   956 ;;                            ___ftneg
   957 ;;                            ___awdiv
   958 ;;                              _scale
   959 ;;                            ___ftmul
   960 ;;                             _fround
   961 ;;                            ___ftadd
   962 ;;                            ___fttol
   963 ;;                         __div_to_l_
   964 ;;                        __tdiv_to_l_
   965 ;;                           ___lltoft
   966 ;;                            ___ftsub
   967 ;;                            ___lldiv
   968 ;;                            ___llmod
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (2) _putch                                                1     1      0     713
   971 ;;                                             11 COMMON     1     1      0
   972 ;;                           _lcd_putc
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (3) _lcd_putc                                             1     1      0     691
   975 ;;                                             10 COMMON     1     1      0
   976 ;;                       _lcd_put_byte
   977 ;;                           _lcd_busy
   978 ;;                         _lcd_gotoxy
   979 ;;                            _isprint
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (2) ___ftsub                                              6     0      6    1094
   982 ;;                                             44 BANK0      6     0      6
   983 ;;                            ___ftadd
   984 ;;                           ___lltoft (ARG)
   985 ;; ---------------------------------------------------------------------------------
   986 ;; (2) _scale                                               14    11      3    1688
   987 ;;                                             32 BANK0     11     8      3
   988 ;;                            ___awmod
   989 ;;                            ___awdiv
   990 ;;                            ___ftmul
   991 ;;                             ___bmul
   992 ;;                            ___fttol (ARG)
   993 ;; ---------------------------------------------------------------------------------
   994 ;; (2) _fround                                              13    10      3    1215
   995 ;;                                             44 BANK0     10     7      3
   996 ;;                            ___lbmod
   997 ;;                             ___bmul
   998 ;;                            ___lbdiv
   999 ;;                            ___ftmul
  1000 ;;                            ___ftadd (ARG)
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1003 ;;                                              7 COMMON     3     2      1
  1004 ;;                       _lcd_put_byte
  1005 ;;                           _lcd_busy
  1006 ;; ---------------------------------------------------------------------------------
  1007 ;; (1) _lcd_init                                             4     4      0     244
  1008 ;;                                              7 COMMON     3     3      0
  1009 ;;                       _lcd_put_byte
  1010 ;;                           _lcd_busy
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (2) ___lltoft                                             5     1      4     278
  1013 ;;                                             10 COMMON     1     1      0
  1014 ;;                                              0 BANK0      4     0      4
  1015 ;;                           ___ftpack
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; (1) ___altoft                                             6     2      4     347
  1018 ;;                                             10 COMMON     2     2      0
  1019 ;;                                              0 BANK0      4     0      4
  1020 ;;                           ___ftpack
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (3) ___ftmul                                             15     9      6     535
  1023 ;;                                             17 BANK0     15     9      6
  1024 ;;                           ___ftpack
  1025 ;;                           ___altoft (ARG)
  1026 ;;                            ___fttol (ARG)
  1027 ;;                            ___awdiv (ARG)
  1028 ;;                            ___awmod (ARG)
  1029 ;;                             ___bmul (ARG)
  1030 ;;                            ___lbdiv (ARG)
  1031 ;;                            ___lbmod (ARG)
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (3) ___ftadd                                             12     6      6    1049
  1034 ;;                                             32 BANK0     12     6      6
  1035 ;;                           ___ftpack
  1036 ;;                            ___lbmod (ARG)
  1037 ;;                             ___bmul (ARG)
  1038 ;;                            ___lbdiv (ARG)
  1039 ;;                            ___ftmul (ARG)
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (5) _lcd_busy                                             2     2      0      23
  1042 ;;                                              2 COMMON     2     2      0
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (5) _lcd_put_byte                                         5     4      1     221
  1045 ;;                                              2 COMMON     5     4      1
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; (3) ___awmod                                              6     2      4     296
  1048 ;;                                              2 COMMON     6     2      4
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (2) ___lldiv                                             13     5      8     162
  1051 ;;                                              2 COMMON     8     0      8
  1052 ;;                                              0 BANK0      5     5      0
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (2) ___ftge                                               6     0      6     136
  1055 ;;                                              2 COMMON     6     0      6
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (2) ___ftneg                                              3     0      3      45
  1058 ;;                                              2 COMMON     3     0      3
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (2) ___llmod                                              9     1      8     159
  1061 ;;                                             10 COMMON     1     1      0
  1062 ;;                                              5 BANK0      8     0      8
  1063 ;;                            ___lldiv (ARG)
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (3) ___awdiv                                              8     4      4     300
  1066 ;;                                              8 COMMON     4     0      4
  1067 ;;                                              0 BANK0      4     4      0
  1068 ;;                            ___awmod (ARG)
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; (2) ___fttol                                             13     9      4     252
  1071 ;;                                              4 BANK0     13     9      4
  1072 ;;                           ___ftpack (ARG)
  1073 ;;                            ___awmod (ARG)
  1074 ;;                            ___awdiv (ARG)
  1075 ;;                             ___bmul (ARG)
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (4) ___ftpack                                             8     3      5     209
  1078 ;;                                              2 COMMON     8     3      5
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (3) ___lbmod                                              5     4      1     159
  1081 ;;                                              2 COMMON     5     4      1
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (3) ___lbdiv                                              4     3      1     162
  1084 ;;                                              7 COMMON     4     3      1
  1085 ;;                            ___lbmod (ARG)
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (2) ___wmul                                               6     2      4      92
  1088 ;;                                              2 COMMON     6     2      4
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (3) ___bmul                                               3     2      1      68
  1091 ;;                                             11 COMMON     1     0      1
  1092 ;;                                              0 BANK0      2     2      0
  1093 ;;                            ___lbmod (ARG)
  1094 ;;                            ___lbdiv (ARG)
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (2) __div_to_l_                                          20    14      6     446
  1097 ;;                                              2 COMMON     6     0      6
  1098 ;;                                              0 BANK0     14    14      0
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1101 ;;                                              2 COMMON     9     3      6
  1102 ;;                                              0 BANK0      6     6      0
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (2) _isdigit                                              2     2      0      68
  1105 ;;                                              2 COMMON     2     2      0
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (4) _isprint                                              2     2      0      68
  1108 ;;                                              2 COMMON     2     2      0
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; Estimated maximum stack depth 5
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (6) _ngat                                                 2     2      0       0
  1115 ;;                                              0 COMMON     2     2      0
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; Estimated maximum stack depth 6
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; Call Graph Graphs:
  1120 ;; _main (ROOT)
  1121 ;;   _lcd_init
  1122 ;;     _lcd_put_byte
  1123 ;;     _lcd_busy
  1124 ;;   ___altoft
  1125 ;;     ___ftpack
  1126 ;;   ___ftmul
  1127 ;;     ___ftpack
  1128 ;;     ___altoft (ARG)
  1129 ;;       ___ftpack
  1130 ;;     ___fttol (ARG)
  1131 ;;       ___ftpack (ARG)
  1132 ;;       ___awmod (ARG)
  1133 ;;       ___awdiv (ARG)
  1134 ;;         ___awmod (ARG)
  1135 ;;       ___bmul (ARG)
  1136 ;;         ___lbmod (ARG)
  1137 ;;         ___lbdiv (ARG)
  1138 ;;           ___lbmod (ARG)
  1139 ;;     ___awdiv (ARG)
  1140 ;;       ___awmod (ARG)
  1141 ;;     ___awmod (ARG)
  1142 ;;     ___bmul (ARG)
  1143 ;;       ___lbmod (ARG)
  1144 ;;       ___lbdiv (ARG)
  1145 ;;         ___lbmod (ARG)
  1146 ;;     ___lbdiv (ARG)
  1147 ;;       ___lbmod (ARG)
  1148 ;;     ___lbmod (ARG)
  1149 ;;   _lcd_gotoxy
  1150 ;;     _lcd_put_byte
  1151 ;;     _lcd_busy
  1152 ;;   _printf
  1153 ;;     _putch
  1154 ;;       _lcd_putc
  1155 ;;         _lcd_put_byte
  1156 ;;         _lcd_busy
  1157 ;;         _lcd_gotoxy
  1158 ;;           _lcd_put_byte
  1159 ;;           _lcd_busy
  1160 ;;         _isprint
  1161 ;;     _isdigit
  1162 ;;     ___wmul
  1163 ;;     ___ftge
  1164 ;;     ___ftneg
  1165 ;;     ___awdiv
  1166 ;;       ___awmod (ARG)
  1167 ;;     _scale
  1168 ;;       ___awmod
  1169 ;;       ___awdiv
  1170 ;;         ___awmod (ARG)
  1171 ;;       ___ftmul
  1172 ;;         ___ftpack
  1173 ;;         ___altoft (ARG)
  1174 ;;           ___ftpack
  1175 ;;         ___fttol (ARG)
  1176 ;;           ___ftpack (ARG)
  1177 ;;           ___awmod (ARG)
  1178 ;;           ___awdiv (ARG)
  1179 ;;             ___awmod (ARG)
  1180 ;;           ___bmul (ARG)
  1181 ;;             ___lbmod (ARG)
  1182 ;;             ___lbdiv (ARG)
  1183 ;;               ___lbmod (ARG)
  1184 ;;         ___awdiv (ARG)
  1185 ;;           ___awmod (ARG)
  1186 ;;         ___awmod (ARG)
  1187 ;;         ___bmul (ARG)
  1188 ;;           ___lbmod (ARG)
  1189 ;;           ___lbdiv (ARG)
  1190 ;;             ___lbmod (ARG)
  1191 ;;         ___lbdiv (ARG)
  1192 ;;           ___lbmod (ARG)
  1193 ;;         ___lbmod (ARG)
  1194 ;;       ___bmul
  1195 ;;         ___lbmod (ARG)
  1196 ;;         ___lbdiv (ARG)
  1197 ;;           ___lbmod (ARG)
  1198 ;;       ___fttol (ARG)
  1199 ;;         ___ftpack (ARG)
  1200 ;;         ___awmod (ARG)
  1201 ;;         ___awdiv (ARG)
  1202 ;;           ___awmod (ARG)
  1203 ;;         ___bmul (ARG)
  1204 ;;           ___lbmod (ARG)
  1205 ;;           ___lbdiv (ARG)
  1206 ;;             ___lbmod (ARG)
  1207 ;;     ___ftmul
  1208 ;;       ___ftpack
  1209 ;;       ___altoft (ARG)
  1210 ;;         ___ftpack
  1211 ;;       ___fttol (ARG)
  1212 ;;         ___ftpack (ARG)
  1213 ;;         ___awmod (ARG)
  1214 ;;         ___awdiv (ARG)
  1215 ;;           ___awmod (ARG)
  1216 ;;         ___bmul (ARG)
  1217 ;;           ___lbmod (ARG)
  1218 ;;           ___lbdiv (ARG)
  1219 ;;             ___lbmod (ARG)
  1220 ;;       ___awdiv (ARG)
  1221 ;;         ___awmod (ARG)
  1222 ;;       ___awmod (ARG)
  1223 ;;       ___bmul (ARG)
  1224 ;;         ___lbmod (ARG)
  1225 ;;         ___lbdiv (ARG)
  1226 ;;           ___lbmod (ARG)
  1227 ;;       ___lbdiv (ARG)
  1228 ;;         ___lbmod (ARG)
  1229 ;;       ___lbmod (ARG)
  1230 ;;     _fround
  1231 ;;       ___lbmod
  1232 ;;       ___bmul
  1233 ;;         ___lbmod (ARG)
  1234 ;;         ___lbdiv (ARG)
  1235 ;;           ___lbmod (ARG)
  1236 ;;       ___lbdiv
  1237 ;;         ___lbmod (ARG)
  1238 ;;       ___ftmul
  1239 ;;         ___ftpack
  1240 ;;         ___altoft (ARG)
  1241 ;;           ___ftpack
  1242 ;;         ___fttol (ARG)
  1243 ;;           ___ftpack (ARG)
  1244 ;;           ___awmod (ARG)
  1245 ;;           ___awdiv (ARG)
  1246 ;;             ___awmod (ARG)
  1247 ;;           ___bmul (ARG)
  1248 ;;             ___lbmod (ARG)
  1249 ;;             ___lbdiv (ARG)
  1250 ;;               ___lbmod (ARG)
  1251 ;;         ___awdiv (ARG)
  1252 ;;           ___awmod (ARG)
  1253 ;;         ___awmod (ARG)
  1254 ;;         ___bmul (ARG)
  1255 ;;           ___lbmod (ARG)
  1256 ;;           ___lbdiv (ARG)
  1257 ;;             ___lbmod (ARG)
  1258 ;;         ___lbdiv (ARG)
  1259 ;;           ___lbmod (ARG)
  1260 ;;         ___lbmod (ARG)
  1261 ;;       ___ftadd (ARG)
  1262 ;;         ___ftpack
  1263 ;;         ___lbmod (ARG)
  1264 ;;         ___bmul (ARG)
  1265 ;;           ___lbmod (ARG)
  1266 ;;           ___lbdiv (ARG)
  1267 ;;             ___lbmod (ARG)
  1268 ;;         ___lbdiv (ARG)
  1269 ;;           ___lbmod (ARG)
  1270 ;;         ___ftmul (ARG)
  1271 ;;           ___ftpack
  1272 ;;           ___altoft (ARG)
  1273 ;;             ___ftpack
  1274 ;;           ___fttol (ARG)
  1275 ;;             ___ftpack (ARG)
  1276 ;;             ___awmod (ARG)
  1277 ;;             ___awdiv (ARG)
  1278 ;;               ___awmod (ARG)
  1279 ;;             ___bmul (ARG)
  1280 ;;               ___lbmod (ARG)
  1281 ;;               ___lbdiv (ARG)
  1282 ;;                 ___lbmod (ARG)
  1283 ;;           ___awdiv (ARG)
  1284 ;;             ___awmod (ARG)
  1285 ;;           ___awmod (ARG)
  1286 ;;           ___bmul (ARG)
  1287 ;;             ___lbmod (ARG)
  1288 ;;             ___lbdiv (ARG)
  1289 ;;               ___lbmod (ARG)
  1290 ;;           ___lbdiv (ARG)
  1291 ;;             ___lbmod (ARG)
  1292 ;;           ___lbmod (ARG)
  1293 ;;     ___ftadd
  1294 ;;       ___ftpack
  1295 ;;       ___lbmod (ARG)
  1296 ;;       ___bmul (ARG)
  1297 ;;         ___lbmod (ARG)
  1298 ;;         ___lbdiv (ARG)
  1299 ;;           ___lbmod (ARG)
  1300 ;;       ___lbdiv (ARG)
  1301 ;;         ___lbmod (ARG)
  1302 ;;       ___ftmul (ARG)
  1303 ;;         ___ftpack
  1304 ;;         ___altoft (ARG)
  1305 ;;           ___ftpack
  1306 ;;         ___fttol (ARG)
  1307 ;;           ___ftpack (ARG)
  1308 ;;           ___awmod (ARG)
  1309 ;;           ___awdiv (ARG)
  1310 ;;             ___awmod (ARG)
  1311 ;;           ___bmul (ARG)
  1312 ;;             ___lbmod (ARG)
  1313 ;;             ___lbdiv (ARG)
  1314 ;;               ___lbmod (ARG)
  1315 ;;         ___awdiv (ARG)
  1316 ;;           ___awmod (ARG)
  1317 ;;         ___awmod (ARG)
  1318 ;;         ___bmul (ARG)
  1319 ;;           ___lbmod (ARG)
  1320 ;;           ___lbdiv (ARG)
  1321 ;;             ___lbmod (ARG)
  1322 ;;         ___lbdiv (ARG)
  1323 ;;           ___lbmod (ARG)
  1324 ;;         ___lbmod (ARG)
  1325 ;;     ___fttol
  1326 ;;       ___ftpack (ARG)
  1327 ;;       ___awmod (ARG)
  1328 ;;       ___awdiv (ARG)
  1329 ;;         ___awmod (ARG)
  1330 ;;       ___bmul (ARG)
  1331 ;;         ___lbmod (ARG)
  1332 ;;         ___lbdiv (ARG)
  1333 ;;           ___lbmod (ARG)
  1334 ;;     __div_to_l_
  1335 ;;     __tdiv_to_l_
  1336 ;;     ___lltoft
  1337 ;;       ___ftpack
  1338 ;;     ___ftsub
  1339 ;;       ___ftadd
  1340 ;;         ___ftpack
  1341 ;;         ___lbmod (ARG)
  1342 ;;         ___bmul (ARG)
  1343 ;;           ___lbmod (ARG)
  1344 ;;           ___lbdiv (ARG)
  1345 ;;             ___lbmod (ARG)
  1346 ;;         ___lbdiv (ARG)
  1347 ;;           ___lbmod (ARG)
  1348 ;;         ___ftmul (ARG)
  1349 ;;           ___ftpack
  1350 ;;           ___altoft (ARG)
  1351 ;;             ___ftpack
  1352 ;;           ___fttol (ARG)
  1353 ;;             ___ftpack (ARG)
  1354 ;;             ___awmod (ARG)
  1355 ;;             ___awdiv (ARG)
  1356 ;;               ___awmod (ARG)
  1357 ;;             ___bmul (ARG)
  1358 ;;               ___lbmod (ARG)
  1359 ;;               ___lbdiv (ARG)
  1360 ;;                 ___lbmod (ARG)
  1361 ;;           ___awdiv (ARG)
  1362 ;;             ___awmod (ARG)
  1363 ;;           ___awmod (ARG)
  1364 ;;           ___bmul (ARG)
  1365 ;;             ___lbmod (ARG)
  1366 ;;             ___lbdiv (ARG)
  1367 ;;               ___lbmod (ARG)
  1368 ;;           ___lbdiv (ARG)
  1369 ;;             ___lbmod (ARG)
  1370 ;;           ___lbmod (ARG)
  1371 ;;       ___lltoft (ARG)
  1372 ;;         ___ftpack
  1373 ;;     ___lldiv
  1374 ;;     ___llmod
  1375 ;;       ___lldiv (ARG)
  1376 ;;
  1377 ;; _ngat (ROOT)
  1378 ;;
  1379 ;; Address spaces:
  1380 ;;Name               Size   Autos  Total    Cost      Usage
  1381 ;;BITCOMMON            E      0       0       0        0.0%
  1382 ;;EEDATA             100      0       0       0        0.0%
  1383 ;;NULL                 0      0       0       0        0.0%
  1384 ;;CODE                 0      0       0       0        0.0%
  1385 ;;COMMON               E      C       C       1       85.7%
  1386 ;;BITSFR0              0      0       0       1        0.0%
  1387 ;;SFR0                 0      0       0       1        0.0%
  1388 ;;BITSFR1              0      0       0       2        0.0%
  1389 ;;SFR1                 0      0       0       2        0.0%
  1390 ;;STACK                0      0       5       2        0.0%
  1391 ;;ABS                  0      0      70       3        0.0%
  1392 ;;BITBANK0            50      0       0       4        0.0%
  1393 ;;BITSFR3              0      0       0       4        0.0%
  1394 ;;SFR3                 0      0       0       4        0.0%
  1395 ;;BANK0               50     42      4B       5       93.8%
  1396 ;;BITSFR2              0      0       0       5        0.0%
  1397 ;;SFR2                 0      0       0       5        0.0%
  1398 ;;BITBANK1            50      0       0       6        0.0%
  1399 ;;BANK1               50     19      19       7       31.3%
  1400 ;;BITBANK3            60      0       0       8        0.0%
  1401 ;;BANK3               60      0       0       9        0.0%
  1402 ;;BITBANK2            60      0       0      10        0.0%
  1403 ;;BANK2               60      0       0      11        0.0%
  1404 ;;DATA                 0      0      75      12        0.0%
  1405                           
  1406                           
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 17 in file "D:\TTVXL\Project TTVXL\BT02week14ttvxl\BT02week14ttvxl.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;		None
  1414 ;; Return value:  Size  Location     Type
  1415 ;;		None               void
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 17F/0
  1420 ;;		On exit  : 60/20
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       0       0       0
  1425 ;;      Temps:          0       3       0       0       0
  1426 ;;      Totals:         0       3       0       0       0
  1427 ;;Total ram usage:        3 bytes
  1428 ;; Hardware stack levels required when called:    6
  1429 ;; This function calls:
  1430 ;;		_lcd_init
  1431 ;;		___altoft
  1432 ;;		___ftmul
  1433 ;;		_lcd_gotoxy
  1434 ;;		_printf
  1435 ;; This function is called by:
  1436 ;;		Startup code after reset
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439  16A3                     _main:	
  1440                           
  1441                           ;BT02week14ttvxl.c: 19: ANSEL = ANSELH = 0;
  1442                           
  1443                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1444  16A3  1683               	bsf	3,5	;RP0=1, select bank3
  1445  16A4  1703               	bsf	3,6	;RP1=1, select bank3
  1446  16A5  0189               	clrf	9	;volatile
  1447  16A6  0188               	clrf	8	;volatile
  1448                           
  1449                           ;BT02week14ttvxl.c: 20: lcd_init();
  1450  16A7  120A  158A  2300   	fcall	_lcd_init
      +       160A  118A         
  1451                           
  1452                           ;BT02week14ttvxl.c: 21: TRISE0 = 0; RE0 = 1;
  1453  16AC  1683               	bsf	3,5	;RP0=1, select bank1
  1454  16AD  1009               	bcf	9,0
  1455  16AE  1283               	bcf	3,5	;RP0=0, select bank0
  1456  16AF  1409               	bsf	9,0
  1457                           
  1458                           ;BT02week14ttvxl.c: 22: TRISE1 = 0; RE0 = 0;
  1459  16B0  1683               	bsf	3,5	;RP0=1, select bank1
  1460  16B1  1089               	bcf	9,1
  1461  16B2  1283               	bcf	3,5	;RP0=0, select bank0
  1462  16B3  1009               	bcf	9,0
  1463                           
  1464                           ;BT02week14ttvxl.c: 24: TMR1CS = 0;
  1465  16B4  1090               	bcf	16,1
  1466                           
  1467                           ;BT02week14ttvxl.c: 25: T1CKPS1 = 0;T1CKPS0 = 0;
  1468  16B5  1290               	bcf	16,5
  1469  16B6  1210               	bcf	16,4
  1470                           
  1471                           ;BT02week14ttvxl.c: 26: T1SYNC = 1;
  1472  16B7  1510               	bsf	16,2
  1473                           
  1474                           ;BT02week14ttvxl.c: 27: TMR1GE = 0;
  1475  16B8  1310               	bcf	16,6
  1476                           
  1477                           ;BT02week14ttvxl.c: 28: TMR1H = TMR1L = 0;
  1478  16B9  018E               	clrf	14	;volatile
  1479  16BA  018F               	clrf	15	;volatile
  1480                           
  1481                           ;BT02week14ttvxl.c: 29: TMR1ON = 0;
  1482  16BB  1010               	bcf	16,0
  1483                           
  1484                           ;BT02week14ttvxl.c: 31: TRISB1 = 1;
  1485  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  1486  16BD  3002               	movlw	2
  1487  16BE  1486               	bsf	6,1
  1488                           
  1489                           ;BT02week14ttvxl.c: 32: IOCB = 0b00000010;
  1490  16BF  0096               	movwf	22	;volatile
  1491                           
  1492                           ;BT02week14ttvxl.c: 33: WPUB = 0b00000010;
  1493  16C0  0095               	movwf	21	;volatile
  1494                           
  1495                           ;BT02week14ttvxl.c: 34: nRBPU = 0;
  1496  16C1  1381               	bcf	1,7
  1497                           
  1498                           ;BT02week14ttvxl.c: 35: RBIE = 1; RBIF = 0; GIE = 1;
  1499  16C2  158B               	bsf	11,3
  1500  16C3  100B               	bcf	11,0
  1501  16C4  178B               	bsf	11,7
  1502  16C5                     l7150:	
  1503                           
  1504                           ;BT02week14ttvxl.c: 38: {
  1505                           ;BT02week14ttvxl.c: 39: _delay((unsigned long)((100)*(20000000/4000.0)));
  1506  16C5  3003               	movlw	3
  1507  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  1508  16C7  00E1               	movwf	??_main+2
  1509  16C8  308A               	movlw	138
  1510  16C9  00E0               	movwf	??_main+1
  1511  16CA  3056               	movlw	86
  1512  16CB  00DF               	movwf	??_main
  1513  16CC                     u3937:	
  1514  16CC  0BDF               	decfsz	??_main,f
  1515  16CD  2ECC               	goto	u3937
  1516  16CE  0BE0               	decfsz	??_main+1,f
  1517  16CF  2ECC               	goto	u3937
  1518  16D0  0BE1               	decfsz	??_main+2,f
  1519  16D1  2ECC               	goto	u3937
  1520  16D2  2ED3               	nop2
  1521                           
  1522                           ;BT02week14ttvxl.c: 40: RE1 = 1;
  1523  16D3  1283               	bcf	3,5	;RP0=0, select bank0
  1524  16D4  1303               	bcf	3,6	;RP1=0, select bank0
  1525  16D5  3007               	movlw	7
  1526  16D6  1489               	bsf	9,1
  1527                           
  1528                           ;BT02week14ttvxl.c: 41: _delay((unsigned long)((1)*(20000000/4000.0)));
  1529  16D7  00E0               	movwf	??_main+1
  1530  16D8  307D               	movlw	125
  1531  16D9  00DF               	movwf	??_main
  1532  16DA                     u3947:	
  1533  16DA  0BDF               	decfsz	??_main,f
  1534  16DB  2EDA               	goto	u3947
  1535  16DC  0BE0               	decfsz	??_main+1,f
  1536  16DD  2EDA               	goto	u3947
  1537                           
  1538                           ;BT02week14ttvxl.c: 42: RE1 = 0;
  1539  16DE  1283               	bcf	3,5	;RP0=0, select bank0
  1540  16DF  1303               	bcf	3,6	;RP1=0, select bank0
  1541  16E0  1089               	bcf	9,1
  1542                           
  1543                           ;BT02week14ttvxl.c: 45: xung = count;
  1544  16E1  0865               	movf	_count,w
  1545  16E2  00E7               	movwf	_xung
  1546  16E3  0866               	movf	_count+1,w
  1547  16E4  00E8               	movwf	_xung+1
  1548  16E5  30D3               	movlw	211
  1549  16E6  01E9               	clrf	_xung+2
  1550  16E7  01EA               	clrf	_xung+3
  1551                           
  1552                           ;BT02week14ttvxl.c: 46: d = (17000.0*xung*(1.0/5000000.0));
  1553  16E8  00B1               	movwf	?___ftmul
  1554  16E9  305E               	movlw	94
  1555  16EA  00B2               	movwf	?___ftmul+1
  1556  16EB  303B               	movlw	59
  1557  16EC  00B3               	movwf	?___ftmul+2
  1558  16ED  086A               	movf	_xung+3,w
  1559  16EE  00A3               	movwf	?___altoft+3
  1560  16EF  0869               	movf	_xung+2,w
  1561  16F0  00A2               	movwf	?___altoft+2
  1562  16F1  0868               	movf	_xung+1,w
  1563  16F2  00A1               	movwf	?___altoft+1
  1564  16F3  0867               	movf	_xung,w
  1565  16F4  00A0               	movwf	?___altoft
  1566  16F5  120A  158A  24A8   	fcall	___altoft
      +       160A  118A         
  1567  16FA  0820               	movf	?___altoft,w
  1568  16FB  00B4               	movwf	?___ftmul+3
  1569  16FC  0821               	movf	?___altoft+1,w
  1570  16FD  00B5               	movwf	?___ftmul+4
  1571  16FE  0822               	movf	?___altoft+2,w
  1572  16FF  00B6               	movwf	?___ftmul+5
  1573  1700  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1574  1705  0831               	movf	?___ftmul,w
  1575  1706  00E2               	movwf	_d
  1576  1707  0832               	movf	?___ftmul+1,w
  1577  1708  00E3               	movwf	_d+1
  1578  1709  0833               	movf	?___ftmul+2,w
  1579  170A  00E4               	movwf	_d+2
  1580  170B  3000               	movlw	0
  1581                           
  1582                           ;BT02week14ttvxl.c: 47: lcd_gotoxy(0,0);
  1583  170C  01F7               	clrf	?_lcd_gotoxy
  1584  170D  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1585                           
  1586                           ;BT02week14ttvxl.c: 48: printf("xung: %05u",xung);
  1587  1712  086A               	movf	_xung+3,w
  1588  1713  00D9               	movwf	?_printf+3
  1589  1714  0869               	movf	_xung+2,w
  1590  1715  00D8               	movwf	?_printf+2
  1591  1716  0868               	movf	_xung+1,w
  1592  1717  00D7               	movwf	?_printf+1
  1593  1718  0867               	movf	_xung,w
  1594  1719  00D6               	movwf	?_printf
  1595  171A  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1596  171B  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1597  1720  3000               	movlw	0
  1598                           
  1599                           ;BT02week14ttvxl.c: 49: lcd_gotoxy(0,1);
  1600  1721  01F7               	clrf	?_lcd_gotoxy
  1601  1722  0AF7               	incf	?_lcd_gotoxy,f
  1602  1723  120A  158A  22B9   	fcall	_lcd_gotoxy
      +       160A  118A         
  1603                           
  1604                           ;BT02week14ttvxl.c: 50: printf("d: %3.2f",d);
  1605  1728  0862               	movf	_d,w
  1606  1729  00D6               	movwf	?_printf
  1607  172A  0863               	movf	_d+1,w
  1608  172B  00D7               	movwf	?_printf+1
  1609  172C  0864               	movf	_d+2,w
  1610  172D  00D8               	movwf	?_printf+2
  1611  172E  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1612  172F  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1613  1734  2EC5               	goto	l7150
  1614  1735                     __end_of_main:	
  1615                           
  1616                           	psect	text519
  1617  000F                     __ptext519:	
  1618 ;; =============== function _main ends ============
  1619                           
  1620                           
  1621 ;; *************** function _printf *****************
  1622 ;; Defined at:
  1623 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  f               1    wreg     PTR const unsigned char 
  1626 ;;		 -> STR_2(9), STR_1(11), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1629 ;;		 -> STR_2(9), STR_1(11), 
  1630 ;;  _val            4    8[BANK1 ] struct .
  1631 ;;  fval            3   19[BANK1 ] struct .
  1632 ;;  integ           3    5[BANK1 ] struct .
  1633 ;;  ival            3    0        struct .
  1634 ;;  prec            2   22[BANK1 ] int 
  1635 ;;  width           2   17[BANK1 ] int 
  1636 ;;  exp             2   15[BANK1 ] int 
  1637 ;;  flag            2   13[BANK1 ] unsigned short 
  1638 ;;  c               1   24[BANK1 ] char 
  1639 ;;  ap              1    4[BANK1 ] PTR void [1]
  1640 ;;		 -> ?_printf(2), 
  1641 ;;  d               1    0        unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  2   54[BANK0 ] int 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 60/0
  1648 ;;		On exit  : 60/20
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       4       0       0       0
  1652 ;;      Locals:         0       0      25       0       0
  1653 ;;      Temps:          0       5       0       0       0
  1654 ;;      Totals:         0       9      25       0       0
  1655 ;;Total ram usage:       34 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    5
  1658 ;; This function calls:
  1659 ;;		_putch
  1660 ;;		_isdigit
  1661 ;;		___wmul
  1662 ;;		___ftge
  1663 ;;		___ftneg
  1664 ;;		___awdiv
  1665 ;;		_scale
  1666 ;;		___ftmul
  1667 ;;		_fround
  1668 ;;		___ftadd
  1669 ;;		___fttol
  1670 ;;		__div_to_l_
  1671 ;;		__tdiv_to_l_
  1672 ;;		___lltoft
  1673 ;;		___ftsub
  1674 ;;		___lldiv
  1675 ;;		___llmod
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680  000F                     _printf:	
  1681                           
  1682                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1683                           ;printf@f stored from wreg
  1684  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0010  00AC               	movwf	printf@f^(0+128)
  1686  0011  3056               	movlw	?_printf& (0+255)
  1687  0012  00A4               	movwf	printf@ap^(0+128)
  1688  0013                     l7108:	
  1689  0013  2798               	call	PL32	;select bank 1
  1690  0014  082C               	movf	printf@f^(0+128),w
  1691  0015  0AAC               	incf	printf@f^(0+128),f
  1692  0016  0084               	movwf	4
  1693  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1694  001C  00B8               	movwf	printf@c^(0+128)
  1695  001D  08B8               	movf	printf@c^(0+128),f
  1696  001E  1903               	btfsc	3,2
  1697  001F  0008               	return
  1698  0020  3A25               	xorlw	37
  1699  0021  1903               	skipnz
  1700  0022  2828               	goto	l6836
  1701  0023  0838               	movf	printf@c^(0+128),w
  1702  0024  254D  120A  118A   	fcall	_putch
  1703  0027  2813               	goto	l7108
  1704  0028                     l6836:	
  1705  0028  01B1               	clrf	printf@width^(0+128)
  1706  0029  01B2               	clrf	(printf@width+1)^(0+128)
  1707  002A  01AD               	clrf	printf@flag^(0+128)
  1708  002B  01AE               	clrf	(printf@flag+1)^(0+128)
  1709  002C  282F               	goto	l6842
  1710  002D                     l2199:	
  1711  002D  152D               	bsf	printf@flag^(0+128),2
  1712  002E  0AAC               	incf	printf@f^(0+128),f
  1713  002F                     l6842:	
  1714  002F  082C               	movf	printf@f^(0+128),w
  1715  0030  0084               	movwf	4
  1716  0031  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1717                           
  1718                           ; Switch size 1, requested type "space"
  1719                           ; Number of cases is 1, Range of values is 48 to 48
  1720                           ; switch strategies available:
  1721                           ; Name         Instructions Cycles
  1722                           ; simple_byte            4     3 (average)
  1723                           ; direct_byte           14    11 (fixed)
  1724                           ; jumptable            263     9 (fixed)
  1725                           ;	Chosen strategy is simple_byte
  1726  0036  3A30               	xorlw	48	; case 48
  1727  0037  1903               	skipnz
  1728  0038  282D               	goto	l2199
  1729  0039  283A               	goto	l6844
  1730  003A                     l6844:	
  1731  003A  082C               	movf	printf@f^(0+128),w
  1732  003B  0084               	movwf	4
  1733  003C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1734  0041  25BB  120A  118A   	fcall	_isdigit
  1735  0044  1C03               	btfss	3,0
  1736  0045  286A               	goto	l6854
  1737  0046  01B1               	clrf	printf@width^(0+128)
  1738  0047  01B2               	clrf	(printf@width+1)^(0+128)
  1739  0048                     l6848:	
  1740  0048  0832               	movf	(printf@width+1)^(0+128),w
  1741  0049  00F3               	movwf	?___wmul+1
  1742  004A  0831               	movf	printf@width^(0+128),w
  1743  004B  00F2               	movwf	?___wmul
  1744  004C  300A               	movlw	10
  1745  004D  00F4               	movwf	?___wmul+2
  1746  004E  01F5               	clrf	?___wmul+3
  1747  004F  25C9               	fcall	___wmul
  1748  0050  082C               	movf	printf@f^(0+128),w
  1749  0051  0084               	movwf	4
  1750  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1751  0057  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1752  005A  00B1               	movwf	printf@width^(0+128)
  1753  005B  2783               	fcall	PL27	;call to abstracted procedure
  1754  005C  00B2               	movwf	(printf@width+1)^(0+128)
  1755  005D  0AAC               	incf	printf@f^(0+128),f
  1756  005E  082C               	movf	printf@f^(0+128),w
  1757  005F  0084               	movwf	4
  1758  0060  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1759  0065  25BB  120A  118A   	fcall	_isdigit
  1760  0068  1803               	btfsc	3,0
  1761  0069  2848               	goto	l6848
  1762  006A                     l6854:	
  1763  006A  082C               	movf	printf@f^(0+128),w
  1764  006B  0084               	movwf	4
  1765  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1766  0071  3A2E               	xorlw	46
  1767  0072  1D03               	skipz
  1768  0073  289D               	goto	l6868
  1769  0074  172E               	bsf	(printf@flag^(0+128)+1),6
  1770  0075  0AAC               	incf	printf@f^(0+128),f
  1771  0076  01B6               	clrf	printf@prec^(0+128)
  1772  0077  01B7               	clrf	(printf@prec+1)^(0+128)
  1773  0078                     l6866:	
  1774  0078  082C               	movf	printf@f^(0+128),w
  1775  0079  0084               	movwf	4
  1776  007A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1777  007F  25BB  120A  118A   	fcall	_isdigit
  1778  0082  1C03               	btfss	3,0
  1779  0083  28A6               	goto	l6876
  1780  0084  0837               	movf	(printf@prec+1)^(0+128),w
  1781  0085  00F3               	movwf	?___wmul+1
  1782  0086  0836               	movf	printf@prec^(0+128),w
  1783  0087  00F2               	movwf	?___wmul
  1784  0088  300A               	movlw	10
  1785  0089  00F4               	movwf	?___wmul+2
  1786  008A  01F5               	clrf	?___wmul+3
  1787  008B  25C9               	fcall	___wmul
  1788  008C  082C               	movf	printf@f^(0+128),w
  1789  008D  0084               	movwf	4
  1790  008E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1791  0093  2747  120A  118A   	fcall	PL13	;call to abstracted procedure
  1792  0096  00B6               	movwf	printf@prec^(0+128)
  1793  0097  2783  120A  118A   	fcall	PL27	;call to abstracted procedure
  1794  009A  00B7               	movwf	(printf@prec+1)^(0+128)
  1795  009B  0AAC               	incf	printf@f^(0+128),f
  1796  009C  2878               	goto	l6866
  1797  009D                     l6868:	
  1798  009D  01B6               	clrf	printf@prec^(0+128)
  1799  009E  01B7               	clrf	(printf@prec+1)^(0+128)
  1800  009F  162E               	bsf	(printf@flag^(0+128)+1),4
  1801  00A0  28A6               	goto	l6876
  1802  00A1                     l2214:	
  1803  00A1  152E               	bsf	(printf@flag^(0+128)+1),2
  1804  00A2  28B9               	goto	l6878
  1805  00A3                     l6872:	
  1806  00A3  30C0               	movlw	192
  1807  00A4  04AD               	iorwf	printf@flag^(0+128),f
  1808  00A5  28B9               	goto	l6878
  1809  00A6                     l6876:	
  1810  00A6  082C               	movf	printf@f^(0+128),w
  1811  00A7  0AAC               	incf	printf@f^(0+128),f
  1812  00A8  0084               	movwf	4
  1813  00A9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1814  00AE  00B8               	movwf	printf@c^(0+128)
  1815                           
  1816                           ; Switch size 1, requested type "space"
  1817                           ; Number of cases is 3, Range of values is 0 to 117
  1818                           ; switch strategies available:
  1819                           ; Name         Instructions Cycles
  1820                           ; simple_byte           10     6 (average)
  1821                           ; jumptable            260     6 (fixed)
  1822                           ; rangetable           122     6 (fixed)
  1823                           ; spacedrange          242     9 (fixed)
  1824                           ; locatedrange         118     3 (fixed)
  1825                           ;	Chosen strategy is simple_byte
  1826  00AF  3A00               	xorlw	0	; case 0
  1827  00B0  1903               	skipnz
  1828  00B1  2D4C               	goto	l2293
  1829  00B2  3A66               	xorlw	102	; case 102
  1830  00B3  1903               	skipnz
  1831  00B4  28A1               	goto	l2214
  1832  00B5  3A13               	xorlw	19	; case 117
  1833  00B6  1903               	skipnz
  1834  00B7  28A3               	goto	l6872
  1835  00B8  2813               	goto	l7108
  1836  00B9                     l6878:	
  1837  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1838  00BA  3007               	movlw	7
  1839  00BB  01DA               	clrf	??_printf
  1840  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1841  00BD  052E               	andwf	(printf@flag+1)^(0+128),w
  1842  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1843  00BF  00DB               	movwf	??_printf+1
  1844  00C0  045A               	iorwf	??_printf,w
  1845  00C1  1903               	skipnz
  1846  00C2  2C0F               	goto	l7030
  1847  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1848  00C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  1849  00C5  28C9               	goto	l6884
  1850  00C6  3006               	movlw	6
  1851  00C7  00B6               	movwf	printf@prec^(0+128)
  1852  00C8  01B7               	clrf	(printf@prec+1)^(0+128)
  1853  00C9                     l6884:	
  1854  00C9  0824               	movf	printf@ap^(0+128),w
  1855  00CA  0084               	movwf	4
  1856  00CB  1383               	bcf	3,7	;select IRP bank0
  1857  00CC  0800               	movf	0,w
  1858  00CD  00B3               	movwf	printf@fval^(0+128)
  1859  00CE  0A84               	incf	4,f
  1860  00CF  0800               	movf	0,w
  1861  00D0  00B4               	movwf	(printf@fval+1)^(0+128)
  1862  00D1  0A84               	incf	4,f
  1863  00D2  0800               	movf	0,w
  1864  00D3  00B5               	movwf	(printf@fval+2)^(0+128)
  1865  00D4  3003               	movlw	3
  1866  00D5  07A4               	addwf	printf@ap^(0+128),f
  1867  00D6  0833               	movf	printf@fval^(0+128),w
  1868  00D7  00F2               	movwf	?___ftge
  1869  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  1870  00D9  00F3               	movwf	?___ftge+1
  1871  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  1872  00DB  00F4               	movwf	?___ftge+2
  1873  00DC  01F5               	clrf	?___ftge+3
  1874  00DD  01F6               	clrf	?___ftge+4
  1875  00DE  01F7               	clrf	?___ftge+5
  1876  00DF  258F  120A  118A   	fcall	___ftge
  1877  00E2  1803               	btfsc	3,0
  1878  00E3  28F5               	goto	l6894
  1879  00E4  0833               	movf	printf@fval^(0+128),w
  1880  00E5  00F2               	movwf	?___ftneg
  1881  00E6  0834               	movf	(printf@fval+1)^(0+128),w
  1882  00E7  00F3               	movwf	?___ftneg+1
  1883  00E8  0835               	movf	(printf@fval+2)^(0+128),w
  1884  00E9  00F4               	movwf	?___ftneg+2
  1885  00EA  26FE  120A  118A   	fcall	___ftneg
  1886  00ED  0872               	movf	?___ftneg,w
  1887  00EE  00B3               	movwf	printf@fval^(0+128)
  1888  00EF  0873               	movf	?___ftneg+1,w
  1889  00F0  00B4               	movwf	(printf@fval+1)^(0+128)
  1890  00F1  0874               	movf	?___ftneg+2,w
  1891  00F2  00B5               	movwf	(printf@fval+2)^(0+128)
  1892  00F3  3003               	movlw	3
  1893  00F4  04AD               	iorwf	printf@flag^(0+128),f
  1894  00F5                     l6894:	
  1895  00F5  01AF               	clrf	printf@exp^(0+128)
  1896  00F6  01B0               	clrf	(printf@exp+1)^(0+128)
  1897  00F7  0835               	movf	(printf@fval+2)^(0+128),w
  1898  00F8  0434               	iorwf	(printf@fval+1)^(0+128),w
  1899  00F9  0433               	iorwf	printf@fval^(0+128),w
  1900  00FA  1903               	skipnz
  1901  00FB  298C               	goto	l6926
  1902  00FC  30B3               	movlw	low printf@fval
  1903  00FD  0084               	movwf	4
  1904  00FE  2791  120A  118A   	fcall	PL30	;call to abstracted procedure
  1905  0101  0A84               	incf	4,f
  1906  0102  0800               	movf	0,w
  1907  0103  00DC               	movwf	??_printf+2
  1908  0104  0A84               	incf	4,f
  1909  0105  0800               	movf	0,w
  1910  0106  00DD               	movwf	??_printf+3
  1911  0107  300F               	movlw	15
  1912  0108                     u3495:	
  1913  0108  1003               	clrc
  1914  0109  0CDD               	rrf	??_printf+3,f
  1915  010A  0CDC               	rrf	??_printf+2,f
  1916  010B  0CDB               	rrf	??_printf+1,f
  1917  010C  0CDA               	rrf	??_printf,f
  1918  010D  3EFF               	addlw	-1
  1919  010E  1D03               	skipz
  1920  010F  2908               	goto	u3495
  1921  0110  085B               	movf	??_printf+1,w
  1922  0111  1683               	bsf	3,5	;RP0=1, select bank1
  1923  0112  00B0               	movwf	(printf@exp+1)^(0+128)
  1924  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0114  085A               	movf	??_printf,w
  1926  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0116  00AF               	movwf	printf@exp^(0+128)
  1928  0117  3082               	movlw	-126
  1929  0118  01B0               	clrf	(printf@exp+1)^(0+128)
  1930  0119  07AF               	addwf	printf@exp^(0+128),f
  1931  011A  1C03               	skipc
  1932  011B  03B0               	decf	(printf@exp+1)^(0+128),f
  1933  011C  30FF               	movlw	-1
  1934  011D  07AF               	addwf	printf@exp^(0+128),f
  1935  011E  1C03               	skipc
  1936  011F  03B0               	decf	(printf@exp+1)^(0+128),f
  1937  0120  3003               	movlw	3
  1938  0121  00F2               	movwf	?___wmul
  1939  0122  01F3               	clrf	?___wmul+1
  1940  0123  0830               	movf	(printf@exp+1)^(0+128),w
  1941  0124  00F5               	movwf	?___wmul+3
  1942  0125  082F               	movf	printf@exp^(0+128),w
  1943  0126  00F4               	movwf	?___wmul+2
  1944  0127  25C9               	fcall	___wmul
  1945  0128  0873               	movf	?___wmul+1,w
  1946  0129  00B0               	movwf	(printf@exp+1)^(0+128)
  1947  012A  0872               	movf	?___wmul,w
  1948  012B  00AF               	movwf	printf@exp^(0+128)
  1949  012C  300A               	movlw	10
  1950  012D  00F8               	movwf	?___awdiv
  1951  012E  01F9               	clrf	?___awdiv+1
  1952  012F  0830               	movf	(printf@exp+1)^(0+128),w
  1953  0130  00FB               	movwf	?___awdiv+3
  1954  0131  082F               	movf	printf@exp^(0+128),w
  1955  0132  00FA               	movwf	?___awdiv+2
  1956  0133  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  1957  0138  0879               	movf	?___awdiv+1,w
  1958  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1959  013A  00B0               	movwf	(printf@exp+1)^(0+128)
  1960  013B  0878               	movf	?___awdiv,w
  1961  013C  00AF               	movwf	printf@exp^(0+128)
  1962  013D  1FB0               	btfss	(printf@exp+1)^(0+128),7
  1963  013E  2943               	goto	l6914
  1964  013F  30FF               	movlw	-1
  1965  0140  07AF               	addwf	printf@exp^(0+128),f
  1966  0141  1C03               	skipc
  1967  0142  03B0               	decf	(printf@exp+1)^(0+128),f
  1968  0143                     l6914:	
  1969  0143  032F               	decf	printf@exp^(0+128),w
  1970  0144  3AFF               	xorlw	255
  1971  0145  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  1972  014A  2731  120A  118A   	fcall	PL9	;call to abstracted procedure
  1973  014D  275E               	fcall	PL16	;call to abstracted procedure
  1974  014E  1683               	bsf	3,5	;RP0=1, select bank1
  1975  014F  0825               	movf	printf@integ^(0+128),w
  1976  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0151  00B4               	movwf	?___ftmul+3
  1978  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1979  0153  0826               	movf	(printf@integ+1)^(0+128),w
  1980  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0155  00B5               	movwf	?___ftmul+4
  1982  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0157  0827               	movf	(printf@integ+2)^(0+128),w
  1984  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0159  00B6               	movwf	?___ftmul+5
  1986  015A  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  1987  015F  0831               	movf	?___ftmul,w
  1988  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0161  00A5               	movwf	printf@integ^(0+128)
  1990  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0163  0832               	movf	?___ftmul+1,w
  1992  0164  1683               	bsf	3,5	;RP0=1, select bank1
  1993  0165  00A6               	movwf	(printf@integ+1)^(0+128)
  1994  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1995  0167  0833               	movf	?___ftmul+2,w
  1996  0168  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0169  00A7               	movwf	(printf@integ+2)^(0+128)
  1998  016A  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  1999  016D  3080               	movlw	128
  2000  016E  01F5               	clrf	?___ftge+3
  2001  016F  00F6               	movwf	?___ftge+4
  2002  0170  303F               	movlw	63
  2003  0171  00F7               	movwf	?___ftge+5
  2004  0172  258F  120A  118A   	fcall	___ftge
  2005  0175  1803               	btfsc	3,0
  2006  0176  297C               	goto	l6922
  2007  0177  30FF               	movlw	-1
  2008  0178  07AF               	addwf	printf@exp^(0+128),f
  2009  0179  1C03               	skipc
  2010  017A  03B0               	decf	(printf@exp+1)^(0+128),f
  2011  017B  298C               	goto	l6926
  2012  017C                     l6922:	
  2013  017C  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2014  017F  3020               	movlw	32
  2015  0180  01F5               	clrf	?___ftge+3
  2016  0181  00F6               	movwf	?___ftge+4
  2017  0182  3041               	movlw	65
  2018  0183  00F7               	movwf	?___ftge+5
  2019  0184  258F  120A  118A   	fcall	___ftge
  2020  0187  1C03               	btfss	3,0
  2021  0188  298C               	goto	l6926
  2022  0189  0AAF               	incf	printf@exp^(0+128),f
  2023  018A  1903               	skipnz
  2024  018B  0AB0               	incf	(printf@exp+1)^(0+128),f
  2025  018C                     l6926:	
  2026  018C  0837               	movf	(printf@prec+1)^(0+128),w
  2027  018D  3A80               	xorlw	128
  2028  018E  00FF               	movwf	127
  2029  018F  3080               	movlw	128
  2030  0190  027F               	subwf	127,w
  2031  0191  1D03               	skipz
  2032  0192  2995               	goto	u3535
  2033  0193  300D               	movlw	13
  2034  0194  0236               	subwf	printf@prec^(0+128),w
  2035  0195                     u3535:	
  2036  0195  1803               	skipnc
  2037  0196  29C0               	goto	l6930
  2038  0197  2798               	call	PL32	;select bank 1
  2039  0198  0836               	movf	printf@prec^(0+128),w
  2040  0199  120A  158A  2167   	fcall	_fround
      +       120A  118A         
  2041  019E  084C               	movf	?_fround,w
  2042  019F  00C0               	movwf	?___ftadd
  2043  01A0  084D               	movf	?_fround+1,w
  2044  01A1  00C1               	movwf	?___ftadd+1
  2045  01A2  084E               	movf	?_fround+2,w
  2046  01A3  00C2               	movwf	?___ftadd+2
  2047  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2048  01A5  0833               	movf	printf@fval^(0+128),w
  2049  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2050  01A7  00C3               	movwf	?___ftadd+3
  2051  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2052  01A9  0834               	movf	(printf@fval+1)^(0+128),w
  2053  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2054  01AB  00C4               	movwf	?___ftadd+4
  2055  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  2056  01AD  0835               	movf	(printf@fval+2)^(0+128),w
  2057  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2058  01AF  00C5               	movwf	?___ftadd+5
  2059  01B0  120A  158A  20A5   	fcall	___ftadd
      +       120A  118A         
  2060  01B5  0840               	movf	?___ftadd,w
  2061  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2062  01B7  00B3               	movwf	printf@fval^(0+128)
  2063  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2064  01B9  0841               	movf	?___ftadd+1,w
  2065  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  2066  01BB  00B4               	movwf	(printf@fval+1)^(0+128)
  2067  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2068  01BD  0842               	movf	?___ftadd+2,w
  2069  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2070  01BF  00B5               	movwf	(printf@fval+2)^(0+128)
  2071  01C0                     l6930:	
  2072  01C0  2798               	call	PL32	;select bank 1
  2073  01C1  0830               	movf	(printf@exp+1)^(0+128),w
  2074  01C2  3A80               	xorlw	128
  2075  01C3  00FF               	movwf	127
  2076  01C4  3080               	movlw	128
  2077  01C5  027F               	subwf	127,w
  2078  01C6  1D03               	skipz
  2079  01C7  29CA               	goto	u3545
  2080  01C8  300A               	movlw	10
  2081  01C9  022F               	subwf	printf@exp^(0+128),w
  2082  01CA                     u3545:	
  2083  01CA  1803               	skipnc
  2084  01CB  29EB               	goto	l6938
  2085  01CC  2798               	call	PL32	;select bank 1
  2086  01CD  0835               	movf	(printf@fval+2)^(0+128),w
  2087  01CE  0434               	iorwf	(printf@fval+1)^(0+128),w
  2088  01CF  0433               	iorwf	printf@fval^(0+128),w
  2089  01D0  1903               	skipnz
  2090  01D1  2A2C               	goto	l6954
  2091  01D2  0833               	movf	printf@fval^(0+128),w
  2092  01D3  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2093  01D6  25E2  120A  118A   	fcall	___fttol
  2094  01D9  0827               	movf	?___fttol+3,w
  2095  01DA  0426               	iorwf	?___fttol+2,w
  2096  01DB  0425               	iorwf	?___fttol+1,w
  2097  01DC  0424               	iorwf	?___fttol,w
  2098  01DD  1D03               	skipz
  2099  01DE  2A2C               	goto	l6954
  2100  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2101  01E0  0830               	movf	(printf@exp+1)^(0+128),w
  2102  01E1  3A80               	xorlw	128
  2103  01E2  00FF               	movwf	127
  2104  01E3  3080               	movlw	128
  2105  01E4  027F               	subwf	127,w
  2106  01E5  1D03               	skipz
  2107  01E6  29E9               	goto	u3575
  2108  01E7  3002               	movlw	2
  2109  01E8  022F               	subwf	printf@exp^(0+128),w
  2110  01E9                     u3575:	
  2111  01E9  1C03               	skipc
  2112  01EA  2A2C               	goto	l6954
  2113  01EB                     l6938:	
  2114  01EB  2798               	call	PL32	;select bank 1
  2115  01EC  277C  120A  118A   	fcall	PL21	;call to abstracted procedure
  2116  01EF  3070               	movlw	112
  2117  01F0  00F5               	movwf	?___ftge+3
  2118  01F1  3089               	movlw	137
  2119  01F2  00F6               	movwf	?___ftge+4
  2120  01F3  3040               	movlw	64
  2121  01F4  00F7               	movwf	?___ftge+5
  2122  01F5  258F  120A  118A   	fcall	___ftge
  2123  01F8  1803               	btfsc	3,0
  2124  01F9  29FC               	goto	l6942
  2125  01FA  30F7               	movlw	-9
  2126  01FB  29FD               	goto	L1
  2127  01FC                     l6942:	
  2128  01FC  30F8               	movlw	-8
  2129  01FD                     L1:	
  2130  01FD  07AF               	addwf	printf@exp^(0+128),f
  2131  01FE  1C03               	skipc
  2132  01FF  03B0               	decf	(printf@exp+1)^(0+128),f
  2133  0200  082F               	movf	printf@exp^(0+128),w
  2134  0201  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2135  0206  2731  120A  118A   	fcall	PL9	;call to abstracted procedure
  2136  0209  00F2               	movwf	?__tdiv_to_l_
  2137  020A  0834               	movf	(printf@fval+1)^(0+128),w
  2138  020B  00F3               	movwf	?__tdiv_to_l_+1
  2139  020C  0835               	movf	(printf@fval+2)^(0+128),w
  2140  020D  00F4               	movwf	?__tdiv_to_l_+2
  2141  020E  0825               	movf	printf@integ^(0+128),w
  2142  020F  00F5               	movwf	?__tdiv_to_l_+3
  2143  0210  0826               	movf	(printf@integ+1)^(0+128),w
  2144  0211  00F6               	movwf	?__tdiv_to_l_+4
  2145  0212  0827               	movf	(printf@integ+2)^(0+128),w
  2146  0213  00F7               	movwf	?__tdiv_to_l_+5
  2147  0214  2686  120A  118A   	fcall	__tdiv_to_l_
  2148  0217  0875               	movf	?__tdiv_to_l_+3,w
  2149  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2150  0219  00A3               	movwf	(_printf$3163+3)^(0+128)
  2151  021A  0874               	movf	?__tdiv_to_l_+2,w
  2152  021B  00A2               	movwf	(_printf$3163+2)^(0+128)
  2153  021C  0873               	movf	?__tdiv_to_l_+1,w
  2154  021D  00A1               	movwf	(_printf$3163+1)^(0+128)
  2155  021E  0872               	movf	?__tdiv_to_l_,w
  2156  021F  00A0               	movwf	_printf$3163^(0+128)
  2157  0220  0823               	movf	(_printf$3163+3)^(0+128),w
  2158  0221  00AB               	movwf	(printf@_val+3)^(0+128)
  2159  0222  0822               	movf	(_printf$3163+2)^(0+128),w
  2160  0223  00AA               	movwf	(printf@_val+2)^(0+128)
  2161  0224  0821               	movf	(_printf$3163+1)^(0+128),w
  2162  0225  00A9               	movwf	(printf@_val+1)^(0+128)
  2163  0226  0820               	movf	_printf$3163^(0+128),w
  2164  0227  00A8               	movwf	printf@_val^(0+128)
  2165  0228  01B3               	clrf	printf@fval^(0+128)
  2166  0229  01B4               	clrf	(printf@fval+1)^(0+128)
  2167  022A  01B5               	clrf	(printf@fval+2)^(0+128)
  2168  022B  2A6F               	goto	l6958
  2169  022C                     l6954:	
  2170  022C  2798               	call	PL32	;select bank 1
  2171  022D  0833               	movf	printf@fval^(0+128),w
  2172  022E  2753  120A  118A   	fcall	PL14	;call to abstracted procedure
  2173  0231  25E2  120A  118A   	fcall	___fttol
  2174  0234  2723               	fcall	PL6	;call to abstracted procedure
  2175  0235  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0236  00A8               	movwf	printf@_val^(0+128)
  2177  0237  082B               	movf	(printf@_val+3)^(0+128),w
  2178  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0239  00A3               	movwf	?___lltoft+3
  2180  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2181  023B  082A               	movf	(printf@_val+2)^(0+128),w
  2182  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2183  023D  00A2               	movwf	?___lltoft+2
  2184  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2185  023F  0829               	movf	(printf@_val+1)^(0+128),w
  2186  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0241  00A1               	movwf	?___lltoft+1
  2188  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0243  0828               	movf	printf@_val^(0+128),w
  2190  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0245  00A0               	movwf	?___lltoft
  2192  0246  120A  158A  248A   	fcall	___lltoft
      +       120A  118A         
  2193  024B  0820               	movf	?___lltoft,w
  2194  024C  00CC               	movwf	?___ftsub
  2195  024D  0821               	movf	?___lltoft+1,w
  2196  024E  00CD               	movwf	?___ftsub+1
  2197  024F  0822               	movf	?___lltoft+2,w
  2198  0250  00CE               	movwf	?___ftsub+2
  2199  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0252  0833               	movf	printf@fval^(0+128),w
  2201  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0254  00CF               	movwf	?___ftsub+3
  2203  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2204  0256  0834               	movf	(printf@fval+1)^(0+128),w
  2205  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0258  00D0               	movwf	?___ftsub+4
  2207  0259  1683               	bsf	3,5	;RP0=1, select bank1
  2208  025A  0835               	movf	(printf@fval+2)^(0+128),w
  2209  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2210  025C  00D1               	movwf	?___ftsub+5
  2211  025D  120A  158A  208F   	fcall	___ftsub
      +       120A  118A         
  2212  0262  084C               	movf	?___ftsub,w
  2213  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2214  0264  00B3               	movwf	printf@fval^(0+128)
  2215  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0266  084D               	movf	?___ftsub+1,w
  2217  0267  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0268  00B4               	movwf	(printf@fval+1)^(0+128)
  2219  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2220  026A  084E               	movf	?___ftsub+2,w
  2221  026B  1683               	bsf	3,5	;RP0=1, select bank1
  2222  026C  00B5               	movwf	(printf@fval+2)^(0+128)
  2223  026D  01AF               	clrf	printf@exp^(0+128)
  2224  026E  01B0               	clrf	(printf@exp+1)^(0+128)
  2225  026F                     l6958:	
  2226  026F  01B8               	clrf	printf@c^(0+128)
  2227  0270  0AB8               	incf	printf@c^(0+128),f
  2228  0271                     l6964:	
  2229  0271  2706               	fcall	PL2	;call to abstracted procedure
  2230  0272  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2231  0277  00DB               	movwf	??_printf+1
  2232  0278  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2233  027D  00DC               	movwf	??_printf+2
  2234  027E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2235  0283  00DD               	movwf	??_printf+3
  2236  0284  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2237  0289  00DE               	movwf	??_printf+4
  2238  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2239  028B  022B               	subwf	(printf@_val+3)^(0+128),w
  2240  028C  1D03               	skipz
  2241  028D  2A9E               	goto	u3595
  2242  028E  1283               	bcf	3,5	;RP0=0, select bank0
  2243  028F  085D               	movf	??_printf+3,w
  2244  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2245  0291  022A               	subwf	(printf@_val+2)^(0+128),w
  2246  0292  1D03               	skipz
  2247  0293  2A9E               	goto	u3595
  2248  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0295  085C               	movf	??_printf+2,w
  2250  0296  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0297  0229               	subwf	(printf@_val+1)^(0+128),w
  2252  0298  1D03               	skipz
  2253  0299  2A9E               	goto	u3595
  2254  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2255  029B  085B               	movf	??_printf+1,w
  2256  029C  1683               	bsf	3,5	;RP0=1, select bank1
  2257  029D  0228               	subwf	printf@_val^(0+128),w
  2258  029E                     u3595:	
  2259  029E  1C03               	btfss	3,0
  2260  029F  2AA5               	goto	l6972
  2261  02A0  0AB8               	incf	printf@c^(0+128),f
  2262  02A1  0838               	movf	printf@c^(0+128),w
  2263  02A2  3A0A               	xorlw	10
  2264  02A3  1D03               	skipz
  2265  02A4  2A71               	goto	l6964
  2266  02A5                     l6972:	
  2267  02A5  0836               	movf	printf@prec^(0+128),w
  2268  02A6  0738               	addwf	printf@c^(0+128),w
  2269  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2270  02A8  00DA               	movwf	??_printf
  2271  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2272  02AA  0837               	movf	(printf@prec+1)^(0+128),w
  2273  02AB  1803               	skipnc
  2274  02AC  0A37               	incf	(printf@prec+1)^(0+128),w
  2275  02AD  1BB8               	btfsc	printf@c^(0+128),7
  2276  02AE  3EFF               	addlw	255
  2277  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  2278  02B0  00DB               	movwf	??_printf+1
  2279  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2280  02B2  082F               	movf	printf@exp^(0+128),w
  2281  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2282  02B4  075A               	addwf	??_printf,w
  2283  02B5  00DC               	movwf	??_printf+2
  2284  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2285  02B7  0830               	movf	(printf@exp+1)^(0+128),w
  2286  02B8  1803               	skipnc
  2287  02B9  0A30               	incf	(printf@exp+1)^(0+128),w
  2288  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2289  02BB  075B               	addwf	??_printf+1,w
  2290  02BC  00DD               	movwf	??_printf+3
  2291  02BD  085C               	movf	??_printf+2,w
  2292  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2293  02BF  02B1               	subwf	printf@width^(0+128),f
  2294  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2295  02C1  085D               	movf	??_printf+3,w
  2296  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  2297  02C3  1C03               	skipc
  2298  02C4  03B2               	decf	(printf@width+1)^(0+128),f
  2299  02C5  02B2               	subwf	(printf@width+1)^(0+128),f
  2300  02C6  0837               	movf	(printf@prec+1)^(0+128),w
  2301  02C7  0436               	iorwf	printf@prec^(0+128),w
  2302  02C8  1903               	skipnz
  2303  02C9  2ACE               	goto	l6978
  2304  02CA  30FF               	movlw	-1
  2305  02CB  07B1               	addwf	printf@width^(0+128),f
  2306  02CC  1C03               	skipc
  2307  02CD  03B2               	decf	(printf@width+1)^(0+128),f
  2308  02CE                     l6978:	
  2309  02CE  082D               	movf	printf@flag^(0+128),w
  2310  02CF  3903               	andlw	3
  2311  02D0  1903               	btfsc	3,2
  2312  02D1  2AD6               	goto	l6982
  2313  02D2  30FF               	movlw	-1
  2314  02D3  07B1               	addwf	printf@width^(0+128),f
  2315  02D4  1C03               	skipc
  2316  02D5  03B2               	decf	(printf@width+1)^(0+128),f
  2317  02D6                     l6982:	
  2318  02D6  192D               	btfsc	printf@flag^(0+128),2
  2319  02D7  2AE2               	goto	l6990
  2320  02D8  2AF7               	goto	l6996
  2321  02D9                     l6986:	
  2322  02D9  3030               	movlw	48
  2323  02DA  254D  120A  118A   	fcall	_putch
  2324  02DD  30FF               	movlw	-1
  2325  02DE  2798               	call	PL32	;select bank 1
  2326  02DF  07B1               	addwf	printf@width^(0+128),f
  2327  02E0  1C03               	skipc
  2328  02E1  03B2               	decf	(printf@width+1)^(0+128),f
  2329  02E2                     l6990:	
  2330  02E2  0832               	movf	(printf@width+1)^(0+128),w
  2331  02E3  3A80               	xorlw	128
  2332  02E4  00FF               	movwf	127
  2333  02E5  3080               	movlw	128
  2334  02E6  027F               	subwf	127,w
  2335  02E7  1D03               	skipz
  2336  02E8  2AEB               	goto	u3645
  2337  02E9  3001               	movlw	1
  2338  02EA  0231               	subwf	printf@width^(0+128),w
  2339  02EB                     u3645:	
  2340  02EB  1C03               	btfss	3,0
  2341  02EC  2B35               	goto	l7004
  2342  02ED  2AD9               	goto	l6986
  2343  02EE                     l6992:	
  2344  02EE  3020               	movlw	32
  2345  02EF  254D  120A  118A   	fcall	_putch
  2346  02F2  30FF               	movlw	-1
  2347  02F3  2798               	call	PL32	;select bank 1
  2348  02F4  07B1               	addwf	printf@width^(0+128),f
  2349  02F5  1C03               	skipc
  2350  02F6  03B2               	decf	(printf@width+1)^(0+128),f
  2351  02F7                     l6996:	
  2352  02F7  0832               	movf	(printf@width+1)^(0+128),w
  2353  02F8  3A80               	xorlw	128
  2354  02F9  00FF               	movwf	127
  2355  02FA  3080               	movlw	128
  2356  02FB  027F               	subwf	127,w
  2357  02FC  1D03               	skipz
  2358  02FD  2B00               	goto	u3655
  2359  02FE  3001               	movlw	1
  2360  02FF  0231               	subwf	printf@width^(0+128),w
  2361  0300                     u3655:	
  2362  0300  1803               	skipnc
  2363  0301  2AEE               	goto	l6992
  2364  0302  2798               	call	PL32	;select bank 1
  2365  0303  082D               	movf	printf@flag^(0+128),w
  2366  0304  3903               	andlw	3
  2367  0305  1903               	btfsc	3,2
  2368  0306  2B35               	goto	l7004
  2369  0307  302D               	movlw	45
  2370  0308  2B32               	goto	L2
  2371  0309                     l7002:	
  2372  0309  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2373  030C  2706               	fcall	PL2	;call to abstracted procedure
  2374  030D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2375  0312  00F2               	movwf	?___lldiv
  2376  0313  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2377  0318  00F3               	movwf	?___lldiv+1
  2378  0319  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2379  031E  00F4               	movwf	?___lldiv+2
  2380  031F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2381  0324  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2382  0327  263D  120A  118A   	fcall	___lldiv
  2383  032A  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2384  032D  2551  120A  118A   	fcall	___llmod
  2385  0330  0825               	movf	?___llmod,w
  2386  0331  3E30               	addlw	48
  2387  0332                     L2:	
  2388  0332  254D  120A  118A   	fcall	_putch
  2389  0335                     l7004:	
  2390  0335  2798               	call	PL32	;select bank 1
  2391  0336  03B8               	decf	printf@c^(0+128),f
  2392  0337  0F38               	incfsz	printf@c^(0+128),w
  2393  0338  2B09               	goto	l7002
  2394  0339                     l7010:	
  2395  0339  0830               	movf	(printf@exp+1)^(0+128),w
  2396  033A  3A80               	xorlw	128
  2397  033B  00FF               	movwf	127
  2398  033C  3080               	movlw	128
  2399  033D  027F               	subwf	127,w
  2400  033E  1D03               	skipz
  2401  033F  2B42               	goto	u3685
  2402  0340  3001               	movlw	1
  2403  0341  022F               	subwf	printf@exp^(0+128),w
  2404  0342                     u3685:	
  2405  0342  1C03               	btfss	3,0
  2406  0343  2B4E               	goto	l7012
  2407  0344  3030               	movlw	48
  2408  0345  254D  120A  118A   	fcall	_putch
  2409  0348  30FF               	movlw	-1
  2410  0349  2798               	call	PL32	;select bank 1
  2411  034A  07AF               	addwf	printf@exp^(0+128),f
  2412  034B  1C03               	skipc
  2413  034C  03B0               	decf	(printf@exp+1)^(0+128),f
  2414  034D  2B39               	goto	l7010
  2415  034E                     l7012:	
  2416  034E  2798               	call	PL32	;select bank 1
  2417  034F  0837               	movf	(printf@prec+1)^(0+128),w
  2418  0350  3A80               	xorlw	128
  2419  0351  00FF               	movwf	127
  2420  0352  3080               	movlw	128
  2421  0353  027F               	subwf	127,w
  2422  0354  1D03               	skipz
  2423  0355  2B58               	goto	u3695
  2424  0356  3009               	movlw	9
  2425  0357  0236               	subwf	printf@prec^(0+128),w
  2426  0358                     u3695:	
  2427  0358  1C03               	skipc
  2428  0359  2B5D               	goto	l7016
  2429  035A  3008               	movlw	8
  2430  035B  2798               	call	PL32	;select bank 1
  2431  035C  2B5F               	goto	L3
  2432  035D                     l7016:	
  2433  035D  2798               	call	PL32	;select bank 1
  2434  035E  0836               	movf	printf@prec^(0+128),w
  2435  035F                     L3:	
  2436  035F  00B8               	movwf	printf@c^(0+128)
  2437  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2438  0361  00DA               	movwf	??_printf
  2439  0362  01DB               	clrf	??_printf+1
  2440  0363  1BDA               	btfsc	??_printf,7
  2441  0364  03DB               	decf	??_printf+1,f
  2442  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0366  02B6               	subwf	printf@prec^(0+128),f
  2444  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0368  085B               	movf	??_printf+1,w
  2446  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2447  036A  1C03               	skipc
  2448  036B  03B7               	decf	(printf@prec+1)^(0+128),f
  2449  036C  02B7               	subwf	(printf@prec+1)^(0+128),f
  2450  036D  0838               	movf	printf@c^(0+128),w
  2451  036E  1903               	btfsc	3,2
  2452  036F  2B74               	goto	l2259
  2453  0370  302E               	movlw	46
  2454  0371  254D  120A  118A   	fcall	_putch
  2455  0374                     l2259:	
  2456  0374  2798               	call	PL32	;select bank 1
  2457  0375  0838               	movf	printf@c^(0+128),w
  2458  0376  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2459  037B  0840               	movf	?_scale,w
  2460  037C  00B4               	movwf	?___ftmul+3
  2461  037D  0841               	movf	?_scale+1,w
  2462  037E  00B5               	movwf	?___ftmul+4
  2463  037F  0842               	movf	?_scale+2,w
  2464  0380  00B6               	movwf	?___ftmul+5
  2465  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2466  0382  0833               	movf	printf@fval^(0+128),w
  2467  0383  275E               	fcall	PL16	;call to abstracted procedure
  2468  0384  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2469  0389  0831               	movf	?___ftmul,w
  2470  038A  00A4               	movwf	?___fttol
  2471  038B  0832               	movf	?___ftmul+1,w
  2472  038C  00A5               	movwf	?___fttol+1
  2473  038D  0833               	movf	?___ftmul+2,w
  2474  038E  00A6               	movwf	?___fttol+2
  2475  038F  25E2  120A  118A   	fcall	___fttol
  2476  0392  2723  120A  118A   	fcall	PL6	;call to abstracted procedure
  2477  0395  2BFC               	goto	L4
  2478  0396                     l7020:	
  2479  0396  2710  120A  118A   	fcall	PL4	;call to abstracted procedure
  2480  0399  2706               	fcall	PL2	;call to abstracted procedure
  2481  039A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2482  039F  00F2               	movwf	?___lldiv
  2483  03A0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2484  03A5  00F3               	movwf	?___lldiv+1
  2485  03A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2486  03AB  00F4               	movwf	?___lldiv+2
  2487  03AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2488  03B1  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2489  03B4  263D  120A  118A   	fcall	___lldiv
  2490  03B7  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2491  03BA  2551  120A  118A   	fcall	___llmod
  2492  03BD  0825               	movf	?___llmod,w
  2493  03BE  3E30               	addlw	48
  2494  03BF  254D  120A  118A   	fcall	_putch
  2495  03C2  2798               	call	PL32	;select bank 1
  2496  03C3  2706               	fcall	PL2	;call to abstracted procedure
  2497  03C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2498  03C9  00A5               	movwf	?___llmod
  2499  03CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2500  03CF  00A6               	movwf	?___llmod+1
  2501  03D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2502  03D5  00A7               	movwf	?___llmod+2
  2503  03D6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2504  03DB  00A8               	movwf	?___llmod+3
  2505  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2506  03DD  082B               	movf	(printf@_val+3)^(0+128),w
  2507  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2508  03DF  00AC               	movwf	?___llmod+7
  2509  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2510  03E1  082A               	movf	(printf@_val+2)^(0+128),w
  2511  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  2512  03E3  00AB               	movwf	?___llmod+6
  2513  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2514  03E5  0829               	movf	(printf@_val+1)^(0+128),w
  2515  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2516  03E7  00AA               	movwf	?___llmod+5
  2517  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2518  03E9  0828               	movf	printf@_val^(0+128),w
  2519  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2520  03EB  00A9               	movwf	?___llmod+4
  2521  03EC  2551  120A  118A   	fcall	___llmod
  2522  03EF  0828               	movf	?___llmod+3,w
  2523  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  2524  03F1  00AB               	movwf	(printf@_val+3)^(0+128)
  2525  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2526  03F3  0827               	movf	?___llmod+2,w
  2527  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2528  03F5  00AA               	movwf	(printf@_val+2)^(0+128)
  2529  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2530  03F7  0826               	movf	?___llmod+1,w
  2531  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2532  03F9  00A9               	movwf	(printf@_val+1)^(0+128)
  2533  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2534  03FB  0825               	movf	?___llmod,w
  2535  03FC                     L4:	
  2536  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  2537  03FD  00A8               	movwf	printf@_val^(0+128)
  2538  03FE  03B8               	decf	printf@c^(0+128),f
  2539  03FF  0F38               	incfsz	printf@c^(0+128),w
  2540  0400  2B96               	goto	l7020
  2541  0401                     l7028:	
  2542  0401  0837               	movf	(printf@prec+1)^(0+128),w
  2543  0402  0436               	iorwf	printf@prec^(0+128),w
  2544  0403  1903               	btfsc	3,2
  2545  0404  2813               	goto	l7108
  2546  0405  3030               	movlw	48
  2547  0406  254D  120A  118A   	fcall	_putch
  2548  0409  30FF               	movlw	-1
  2549  040A  2798               	call	PL32	;select bank 1
  2550  040B  07B6               	addwf	printf@prec^(0+128),f
  2551  040C  1C03               	skipc
  2552  040D  03B7               	decf	(printf@prec+1)^(0+128),f
  2553  040E  2C01               	goto	l7028
  2554  040F                     l7030:	
  2555  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2556  0410  0824               	movf	printf@ap^(0+128),w
  2557  0411  0084               	movwf	4
  2558  0412  1383               	bcf	3,7	;select IRP bank0
  2559  0413  2791  120A  118A   	fcall	PL30	;call to abstracted procedure
  2560  0416  085A               	movf	??_printf,w
  2561  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2562  0418  00A8               	movwf	printf@_val^(0+128)
  2563  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2564  041A  085B               	movf	??_printf+1,w
  2565  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2566  041C  00A9               	movwf	(printf@_val^(0+128)+1)
  2567  041D  01AA               	clrf	(printf@_val^(0+128)+2)
  2568  041E  01AB               	clrf	(printf@_val^(0+128)+3)
  2569  041F  0AA4               	incf	printf@ap^(0+128),f
  2570  0420  0AA4               	incf	printf@ap^(0+128),f
  2571  0421  0837               	movf	(printf@prec+1)^(0+128),w
  2572  0422  0436               	iorwf	printf@prec^(0+128),w
  2573  0423  1D03               	skipz
  2574  0424  2C2D               	goto	l7040
  2575  0425  082B               	movf	(printf@_val+3)^(0+128),w
  2576  0426  042A               	iorwf	(printf@_val+2)^(0+128),w
  2577  0427  0429               	iorwf	(printf@_val+1)^(0+128),w
  2578  0428  0428               	iorwf	printf@_val^(0+128),w
  2579  0429  1903               	btfsc	3,2
  2580  042A  0AB6               	incf	printf@prec^(0+128),f
  2581  042B  1903               	skipnz
  2582  042C  0AB7               	incf	(printf@prec+1)^(0+128),f
  2583  042D                     l7040:	
  2584  042D  01B8               	clrf	printf@c^(0+128)
  2585  042E  0AB8               	incf	printf@c^(0+128),f
  2586  042F                     l7046:	
  2587  042F  2706               	fcall	PL2	;call to abstracted procedure
  2588  0430  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2589  0435  00DB               	movwf	??_printf+1
  2590  0436  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2591  043B  00DC               	movwf	??_printf+2
  2592  043C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2593  0441  00DD               	movwf	??_printf+3
  2594  0442  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2595  0447  00DE               	movwf	??_printf+4
  2596  0448  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0449  022B               	subwf	(printf@_val+3)^(0+128),w
  2598  044A  1D03               	skipz
  2599  044B  2C5C               	goto	u3755
  2600  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2601  044D  085D               	movf	??_printf+3,w
  2602  044E  1683               	bsf	3,5	;RP0=1, select bank1
  2603  044F  022A               	subwf	(printf@_val+2)^(0+128),w
  2604  0450  1D03               	skipz
  2605  0451  2C5C               	goto	u3755
  2606  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0453  085C               	movf	??_printf+2,w
  2608  0454  1683               	bsf	3,5	;RP0=1, select bank1
  2609  0455  0229               	subwf	(printf@_val+1)^(0+128),w
  2610  0456  1D03               	skipz
  2611  0457  2C5C               	goto	u3755
  2612  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2613  0459  085B               	movf	??_printf+1,w
  2614  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2615  045B  0228               	subwf	printf@_val^(0+128),w
  2616  045C                     u3755:	
  2617  045C  1C03               	btfss	3,0
  2618  045D  2C63               	goto	l7054
  2619  045E  0AB8               	incf	printf@c^(0+128),f
  2620  045F  0838               	movf	printf@c^(0+128),w
  2621  0460  3A0A               	xorlw	10
  2622  0461  1D03               	skipz
  2623  0462  2C2F               	goto	l7046
  2624  0463                     l7054:	
  2625  0463  0838               	movf	printf@c^(0+128),w
  2626  0464  2769  120A  118A   	fcall	PL19	;call to abstracted procedure
  2627  0467  0837               	movf	(printf@prec+1)^(0+128),w
  2628  0468  3A80               	xorlw	128
  2629  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2630  046A  025C               	subwf	??_printf+2,w
  2631  046B  1D03               	skipz
  2632  046C  2C71               	goto	u3775
  2633  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2634  046E  0836               	movf	printf@prec^(0+128),w
  2635  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2636  0470  025A               	subwf	??_printf,w
  2637  0471                     u3775:	
  2638  0471  1803               	skipnc
  2639  0472  2C77               	goto	l7058
  2640  0473  2798               	call	PL32	;select bank 1
  2641  0474  0836               	movf	printf@prec^(0+128),w
  2642  0475  00B8               	movwf	printf@c^(0+128)
  2643  0476  2C8F               	goto	l7062
  2644  0477                     l7058:	
  2645  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2646  0478  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2647  047B  0837               	movf	(printf@prec+1)^(0+128),w
  2648  047C  3A80               	xorlw	128
  2649  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2650  047E  00DC               	movwf	??_printf+2
  2651  047F  085B               	movf	??_printf+1,w
  2652  0480  3A80               	xorlw	128
  2653  0481  025C               	subwf	??_printf+2,w
  2654  0482  1D03               	skipz
  2655  0483  2C87               	goto	u3785
  2656  0484  085A               	movf	??_printf,w
  2657  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2658  0486  0236               	subwf	printf@prec^(0+128),w
  2659  0487                     u3785:	
  2660  0487  1803               	skipnc
  2661  0488  2C8F               	goto	l7062
  2662  0489  2798               	call	PL32	;select bank 1
  2663  048A  0838               	movf	printf@c^(0+128),w
  2664  048B  00B6               	movwf	printf@prec^(0+128)
  2665  048C  01B7               	clrf	(printf@prec+1)^(0+128)
  2666  048D  1BB6               	btfsc	printf@prec^(0+128),7
  2667  048E  03B7               	decf	(printf@prec+1)^(0+128),f
  2668  048F                     l7062:	
  2669  048F  2798               	call	PL32	;select bank 1
  2670  0490  0832               	movf	(printf@width+1)^(0+128),w
  2671  0491  0431               	iorwf	printf@width^(0+128),w
  2672  0492  1903               	skipnz
  2673  0493  2C9C               	goto	l7068
  2674  0494  082D               	movf	printf@flag^(0+128),w
  2675  0495  3903               	andlw	3
  2676  0496  1903               	btfsc	3,2
  2677  0497  2C9C               	goto	l7068
  2678  0498  30FF               	movlw	-1
  2679  0499  07B1               	addwf	printf@width^(0+128),f
  2680  049A  1C03               	skipc
  2681  049B  03B2               	decf	(printf@width+1)^(0+128),f
  2682  049C                     l7068:	
  2683  049C  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2684  049D  2CB9               	goto	l7076
  2685  049E  0837               	movf	(printf@prec+1)^(0+128),w
  2686  049F  3A80               	xorlw	128
  2687  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2688  04A1  00DA               	movwf	??_printf
  2689  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  2690  04A3  0832               	movf	(printf@width+1)^(0+128),w
  2691  04A4  3A80               	xorlw	128
  2692  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  2693  04A6  025A               	subwf	??_printf,w
  2694  04A7  1D03               	skipz
  2695  04A8  2CAC               	goto	u3825
  2696  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  2697  04AA  0831               	movf	printf@width^(0+128),w
  2698  04AB  0236               	subwf	printf@prec^(0+128),w
  2699  04AC                     u3825:	
  2700  04AC  1803               	skipnc
  2701  04AD  2CB6               	goto	l7074
  2702  04AE  2798               	call	PL32	;select bank 1
  2703  04AF  0836               	movf	printf@prec^(0+128),w
  2704  04B0  02B1               	subwf	printf@width^(0+128),f
  2705  04B1  0837               	movf	(printf@prec+1)^(0+128),w
  2706  04B2  1C03               	skipc
  2707  04B3  03B2               	decf	(printf@width+1)^(0+128),f
  2708  04B4  02B2               	subwf	(printf@width+1)^(0+128),f
  2709  04B5  2CB9               	goto	l7076
  2710  04B6                     l7074:	
  2711  04B6  2798               	call	PL32	;select bank 1
  2712  04B7  01B1               	clrf	printf@width^(0+128)
  2713  04B8  01B2               	clrf	(printf@width+1)^(0+128)
  2714  04B9                     l7076:	
  2715  04B9  0838               	movf	printf@c^(0+128),w
  2716  04BA  2769  120A  118A   	fcall	PL19	;call to abstracted procedure
  2717  04BD  0832               	movf	(printf@width+1)^(0+128),w
  2718  04BE  3A80               	xorlw	128
  2719  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2720  04C0  025C               	subwf	??_printf+2,w
  2721  04C1  1D03               	skipz
  2722  04C2  2CC7               	goto	u3835
  2723  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2724  04C4  0831               	movf	printf@width^(0+128),w
  2725  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2726  04C6  025A               	subwf	??_printf,w
  2727  04C7                     u3835:	
  2728  04C7  1803               	skipnc
  2729  04C8  2CD5               	goto	l7080
  2730  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2731  04CA  2773  120A  118A   	fcall	PL20	;call to abstracted procedure
  2732  04CD  02B1               	subwf	printf@width^(0+128),f
  2733  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  2734  04CF  085B               	movf	??_printf+1,w
  2735  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2736  04D1  1C03               	skipc
  2737  04D2  03B2               	decf	(printf@width+1)^(0+128),f
  2738  04D3  02B2               	subwf	(printf@width+1)^(0+128),f
  2739  04D4  2CD8               	goto	l7082
  2740  04D5                     l7080:	
  2741  04D5  2798               	call	PL32	;select bank 1
  2742  04D6  01B1               	clrf	printf@width^(0+128)
  2743  04D7  01B2               	clrf	(printf@width+1)^(0+128)
  2744  04D8                     l7082:	
  2745  04D8  1D2D               	btfss	printf@flag^(0+128),2
  2746  04D9  2CF1               	goto	l7094
  2747  04DA  082D               	movf	printf@flag^(0+128),w
  2748  04DB  3903               	andlw	3
  2749  04DC  1903               	btfsc	3,2
  2750  04DD  2CE2               	goto	l7088
  2751  04DE  302D               	movlw	45
  2752  04DF  254D  120A  118A   	fcall	_putch
  2753  04E2                     l7088:	
  2754  04E2  2798               	call	PL32	;select bank 1
  2755  04E3                     L6:	
  2756  04E3  0832               	movf	(printf@width+1)^(0+128),w
  2757  04E4  0431               	iorwf	printf@width^(0+128),w
  2758  04E5  1903               	skipnz
  2759  04E6  2D0A               	goto	l7106
  2760  04E7  3030               	movlw	48
  2761  04E8  254D  120A  118A   	fcall	_putch
  2762  04EB  30FF               	movlw	-1
  2763  04EC  2798               	call	PL32	;select bank 1
  2764  04ED  07B1               	addwf	printf@width^(0+128),f
  2765  04EE  1C03               	skipc
  2766  04EF  03B2               	decf	(printf@width+1)^(0+128),f
  2767  04F0  2CE3               	goto	L6
  2768  04F1                     l7094:	
  2769  04F1  0832               	movf	(printf@width+1)^(0+128),w
  2770  04F2  0431               	iorwf	printf@width^(0+128),w
  2771  04F3  1903               	skipnz
  2772  04F4  2D02               	goto	l7100
  2773  04F5                     l7096:	
  2774  04F5  3020               	movlw	32
  2775  04F6  254D  120A  118A   	fcall	_putch
  2776  04F9  30FF               	movlw	-1
  2777  04FA  2798               	call	PL32	;select bank 1
  2778  04FB  07B1               	addwf	printf@width^(0+128),f
  2779  04FC  1C03               	skipc
  2780  04FD  03B2               	decf	(printf@width+1)^(0+128),f
  2781  04FE  0832               	movf	(printf@width+1)^(0+128),w
  2782  04FF  0431               	iorwf	printf@width^(0+128),w
  2783  0500  1D03               	skipz
  2784  0501  2CF5               	goto	l7096
  2785  0502                     l7100:	
  2786  0502  082D               	movf	printf@flag^(0+128),w
  2787  0503  3903               	andlw	3
  2788  0504  1903               	btfsc	3,2
  2789  0505  2D0A               	goto	l7106
  2790  0506  302D               	movlw	45
  2791  0507                     L5:	
  2792  0507  254D  120A  118A   	fcall	_putch
  2793  050A                     l7106:	
  2794  050A  30FF               	movlw	-1
  2795  050B  2798               	call	PL32	;select bank 1
  2796  050C  07B6               	addwf	printf@prec^(0+128),f
  2797  050D  1C03               	skipc
  2798  050E  03B7               	decf	(printf@prec+1)^(0+128),f
  2799  050F  0A36               	incf	printf@prec^(0+128),w
  2800  0510  1903               	skipnz
  2801  0511  0A37               	incf	(printf@prec+1)^(0+128),w
  2802  0512  1903               	btfsc	3,2
  2803  0513  2813               	goto	l7108
  2804  0514  300A               	movlw	10
  2805  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2806  0516  00A5               	movwf	?___llmod
  2807  0517  01A6               	clrf	?___llmod+1
  2808  0518  01A7               	clrf	?___llmod+2
  2809  0519  01A8               	clrf	?___llmod+3
  2810  051A  1683               	bsf	3,5	;RP0=1, select bank1
  2811  051B  0836               	movf	printf@prec^(0+128),w
  2812  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2813  051D  00DA               	movwf	??_printf
  2814  051E  1003               	clrc
  2815  051F  0DDA               	rlf	??_printf,f
  2816  0520  1003               	clrc
  2817  0521  0D5A               	rlf	??_printf,w
  2818  0522  3E4F               	addlw	low (_dpowers-__stringbase)
  2819  0523  0084               	movwf	4
  2820  0524  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2821  0529  00F2               	movwf	?___lldiv
  2822  052A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2823  052F  00F3               	movwf	?___lldiv+1
  2824  0530  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2825  0535  00F4               	movwf	?___lldiv+2
  2826  0536  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2827  053B  2718  120A  118A   	fcall	PL5	;call to abstracted procedure
  2828  053E  263D  120A  118A   	fcall	___lldiv
  2829  0541  273E  120A  118A   	fcall	PL12	;call to abstracted procedure
  2830  0544  2551  120A  118A   	fcall	___llmod
  2831  0547  0825               	movf	?___llmod,w
  2832  0548  3E30               	addlw	48
  2833  0549  1683               	bsf	3,5	;RP0=1, select bank1
  2834  054A  00B8               	movwf	printf@c^(0+128)
  2835  054B  2D07               	goto	L5
  2836  054C                     l2293:	
  2837  054C  0008               	return
  2838  054D                     __end_of_printf:	
  2839  054D                     __ptext520:	
  2840 ;; =============== function _printf ends ============
  2841                           
  2842                           
  2843 ;; *************** function _putch *****************
  2844 ;; Defined at:
  2845 ;;		line 66 in file "D:\TTVXL\Project TTVXL\BT02week14ttvxl\BT02week14ttvxl.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;  c               1    wreg     unsigned char 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  c               1   11[COMMON] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;		None               void
  2852 ;; Registers used:
  2853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/20
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2859 ;;      Params:         0       0       0       0       0
  2860 ;;      Locals:         1       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0
  2862 ;;      Totals:         1       0       0       0       0
  2863 ;;Total ram usage:        1 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    4
  2866 ;; This function calls:
  2867 ;;		_lcd_putc
  2868 ;; This function is called by:
  2869 ;;		_printf
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872  054D                     _putch:	
  2873                           
  2874                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2875                           ;putch@c stored from wreg
  2876  054D  00FB               	movwf	putch@c
  2877                           
  2878                           ;BT02week14ttvxl.c: 67: lcd_putc(c);
  2879  054E  120A  158A  2AD1   	ljmp	_lcd_putc
  2880  0551                     __end_of_putch:	
  2881  0551                     __ptext537:	
  2882 ;; =============== function ___ftneg ends ============
  2883                           
  2884                           
  2885 ;; *************** function ___llmod *****************
  2886 ;; Defined at:
  2887 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  divisor         4    5[BANK0 ] unsigned long 
  2890 ;;  dividend        4    9[BANK0 ] unsigned long 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  counter         1   10[COMMON] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  4    5[BANK0 ] unsigned long 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 60/0
  2899 ;;		On exit  : 60/0
  2900 ;;		Unchanged: FFF9F/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       8       0       0       0
  2903 ;;      Locals:         1       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         1       8       0       0       0
  2906 ;;Total ram usage:        9 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    1
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_printf
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915  0551                     ___llmod:	
  2916                           
  2917                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2918  0551  0828               	movf	___llmod@divisor+3,w
  2919  0552  0427               	iorwf	___llmod@divisor+2,w
  2920  0553  0426               	iorwf	___llmod@divisor+1,w
  2921  0554  0425               	iorwf	___llmod@divisor,w
  2922  0555  1903               	skipnz
  2923  0556  2D86               	goto	l6388
  2924  0557  01FA               	clrf	___llmod@counter
  2925  0558                     L13:	
  2926  0558  0AFA               	incf	___llmod@counter,f
  2927  0559  1BA8               	btfsc	___llmod@divisor+3,7
  2928  055A  2D61               	goto	l6380
  2929  055B  1003               	clrc
  2930  055C  0DA5               	rlf	___llmod@divisor,f
  2931  055D  0DA6               	rlf	___llmod@divisor+1,f
  2932  055E  0DA7               	rlf	___llmod@divisor+2,f
  2933  055F  0DA8               	rlf	___llmod@divisor+3,f
  2934  0560  2D58               	goto	L13
  2935  0561                     l6380:	
  2936  0561  0828               	movf	___llmod@divisor+3,w
  2937  0562  022C               	subwf	___llmod@dividend+3,w
  2938  0563  1D03               	skipz
  2939  0564  2D6F               	goto	u2565
  2940  0565  0827               	movf	___llmod@divisor+2,w
  2941  0566  022B               	subwf	___llmod@dividend+2,w
  2942  0567  1D03               	skipz
  2943  0568  2D6F               	goto	u2565
  2944  0569  0826               	movf	___llmod@divisor+1,w
  2945  056A  022A               	subwf	___llmod@dividend+1,w
  2946  056B  1D03               	skipz
  2947  056C  2D6F               	goto	u2565
  2948  056D  0825               	movf	___llmod@divisor,w
  2949  056E  0229               	subwf	___llmod@dividend,w
  2950  056F                     u2565:	
  2951  056F  1C03               	skipc
  2952  0570  2D80               	goto	L14
  2953  0571  0825               	movf	___llmod@divisor,w
  2954  0572  02A9               	subwf	___llmod@dividend,f
  2955  0573  0826               	movf	___llmod@divisor+1,w
  2956  0574  1C03               	skipc
  2957  0575  0F26               	incfsz	___llmod@divisor+1,w
  2958  0576  02AA               	subwf	___llmod@dividend+1,f
  2959  0577  0827               	movf	___llmod@divisor+2,w
  2960  0578  1C03               	skipc
  2961  0579  0F27               	incfsz	___llmod@divisor+2,w
  2962  057A  02AB               	subwf	___llmod@dividend+2,f
  2963  057B  0828               	movf	___llmod@divisor+3,w
  2964  057C  1C03               	skipc
  2965  057D  0F28               	incfsz	___llmod@divisor+3,w
  2966  057E  02AC               	subwf	___llmod@dividend+3,f
  2967  057F  1003               	clrc
  2968  0580                     L14:	
  2969  0580  0CA8               	rrf	___llmod@divisor+3,f
  2970  0581  0CA7               	rrf	___llmod@divisor+2,f
  2971  0582  0CA6               	rrf	___llmod@divisor+1,f
  2972  0583  0CA5               	rrf	___llmod@divisor,f
  2973  0584  0BFA               	decfsz	___llmod@counter,f
  2974  0585  2D61               	goto	l6380
  2975  0586                     l6388:	
  2976  0586  082C               	movf	___llmod@dividend+3,w
  2977  0587  00A8               	movwf	?___llmod+3
  2978  0588  082B               	movf	___llmod@dividend+2,w
  2979  0589  00A7               	movwf	?___llmod+2
  2980  058A  082A               	movf	___llmod@dividend+1,w
  2981  058B  00A6               	movwf	?___llmod+1
  2982  058C  0829               	movf	___llmod@dividend,w
  2983  058D  00A5               	movwf	?___llmod
  2984  058E  0008               	return
  2985  058F                     __end_of___llmod:	
  2986  058F                     __ptext535:	
  2987 ;; =============== function ___lldiv ends ============
  2988                           
  2989                           
  2990 ;; *************** function ___ftge *****************
  2991 ;; Defined at:
  2992 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  ff1             3    2[COMMON] float 
  2995 ;;  ff2             3    5[COMMON] float 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;		None               void
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0
  3002 ;; Tracked objects:
  3003 ;;		On entry : 60/20
  3004 ;;		On exit  : 60/20
  3005 ;;		Unchanged: FFF9F/0
  3006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3007 ;;      Params:         6       0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0
  3010 ;;      Totals:         6       0       0       0       0
  3011 ;;Total ram usage:        6 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:    1
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_printf
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020  058F                     ___ftge:	
  3021                           
  3022                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3023  058F  1FF4               	btfss	___ftge@ff1+2,7
  3024  0590  2D9E               	goto	l6404
  3025  0591  0872               	movf	___ftge@ff1,w
  3026  0592  3C00               	sublw	0
  3027  0593  00F2               	movwf	___ftge@ff1
  3028  0594  0873               	movf	___ftge@ff1+1,w
  3029  0595  1C03               	skipc
  3030  0596  0F73               	incfsz	___ftge@ff1+1,w
  3031  0597  3C00               	sublw	0
  3032  0598  00F3               	movwf	___ftge@ff1+1
  3033  0599  0874               	movf	___ftge@ff1+2,w
  3034  059A  1C03               	skipc
  3035  059B  0F74               	incfsz	___ftge@ff1+2,w
  3036  059C  3C80               	sublw	128
  3037  059D  00F4               	movwf	___ftge@ff1+2
  3038  059E                     l6404:	
  3039  059E  1FF7               	btfss	___ftge@ff2+2,7
  3040  059F  2DAD               	goto	l6408
  3041  05A0  0875               	movf	___ftge@ff2,w
  3042  05A1  3C00               	sublw	0
  3043  05A2  00F5               	movwf	___ftge@ff2
  3044  05A3  0876               	movf	___ftge@ff2+1,w
  3045  05A4  1C03               	skipc
  3046  05A5  0F76               	incfsz	___ftge@ff2+1,w
  3047  05A6  3C00               	sublw	0
  3048  05A7  00F6               	movwf	___ftge@ff2+1
  3049  05A8  0877               	movf	___ftge@ff2+2,w
  3050  05A9  1C03               	skipc
  3051  05AA  0F77               	incfsz	___ftge@ff2+2,w
  3052  05AB  3C80               	sublw	128
  3053  05AC  00F7               	movwf	___ftge@ff2+2
  3054  05AD                     l6408:	
  3055  05AD  3080               	movlw	128
  3056  05AE  06F4               	xorwf	___ftge@ff1+2,f
  3057  05AF  06F7               	xorwf	___ftge@ff2+2,f
  3058  05B0  0877               	movf	___ftge@ff2+2,w
  3059  05B1  0274               	subwf	___ftge@ff1+2,w
  3060  05B2  1D03               	skipz
  3061  05B3  0008               	return
  3062  05B4  0876               	movf	___ftge@ff2+1,w
  3063  05B5  0273               	subwf	___ftge@ff1+1,w
  3064  05B6  1D03               	skipz
  3065  05B7  0008               	return
  3066  05B8  0875               	movf	___ftge@ff2,w
  3067  05B9  0272               	subwf	___ftge@ff1,w
  3068  05BA  0008               	return
  3069  05BB                     __end_of___ftge:	
  3070  05BB                     __ptext547:	
  3071 ;; =============== function __tdiv_to_l_ ends ============
  3072                           
  3073                           
  3074 ;; *************** function _isdigit *****************
  3075 ;; Defined at:
  3076 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  c               1    wreg     unsigned char 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  c               1    3[COMMON] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;		None               void
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0
  3085 ;; Tracked objects:
  3086 ;;		On entry : 60/20
  3087 ;;		On exit  : 60/20
  3088 ;;		Unchanged: FFF9F/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         2       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0
  3093 ;;      Totals:         2       0       0       0       0
  3094 ;;Total ram usage:        2 bytes
  3095 ;; Hardware stack levels used:    1
  3096 ;; Hardware stack levels required when called:    1
  3097 ;; This function calls:
  3098 ;;		Nothing
  3099 ;; This function is called by:
  3100 ;;		_printf
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103  05BB                     _isdigit:	
  3104                           
  3105                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3106                           ;isdigit@c stored from wreg
  3107  05BB  00F3               	movwf	isdigit@c
  3108  05BC  303A               	movlw	58
  3109  05BD  01F2               	clrf	_isdigit$3671
  3110  05BE  0273               	subwf	isdigit@c,w
  3111  05BF  1803               	skipnc
  3112  05C0  2DC7               	goto	l6090
  3113  05C1  3030               	movlw	48
  3114  05C2  0273               	subwf	isdigit@c,w
  3115  05C3  1C03               	skipc
  3116  05C4  2DC7               	goto	l6090
  3117  05C5  01F2               	clrf	_isdigit$3671
  3118  05C6  0AF2               	incf	_isdigit$3671,f
  3119  05C7                     l6090:	
  3120  05C7  0C72               	rrf	_isdigit$3671,w
  3121  05C8  0008               	return
  3122  05C9                     __end_of_isdigit:	
  3123  05C9                     __ptext543:	
  3124 ;; =============== function ___lbdiv ends ============
  3125                           
  3126                           
  3127 ;; *************** function ___wmul *****************
  3128 ;; Defined at:
  3129 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;  multiplier      2    2[COMMON] unsigned int 
  3132 ;;  multiplicand    2    4[COMMON] unsigned int 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  product         2    6[COMMON] unsigned int 
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  2    2[COMMON] unsigned int 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0
  3139 ;; Tracked objects:
  3140 ;;		On entry : 60/20
  3141 ;;		On exit  : 60/20
  3142 ;;		Unchanged: FFF9F/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3144 ;;      Params:         4       0       0       0       0
  3145 ;;      Locals:         2       0       0       0       0
  3146 ;;      Temps:          0       0       0       0       0
  3147 ;;      Totals:         6       0       0       0       0
  3148 ;;Total ram usage:        6 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:    1
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_fround
  3155 ;;		_scale
  3156 ;;		_printf
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159  05C9                     ___wmul:	
  3160                           
  3161                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3162  05C9  01F6               	clrf	___wmul@product
  3163  05CA  01F7               	clrf	___wmul@product+1
  3164  05CB                     l6206:	
  3165  05CB  1C72               	btfss	___wmul@multiplier,0
  3166  05CC  2DD3               	goto	l6210
  3167  05CD  0874               	movf	___wmul@multiplicand,w
  3168  05CE  07F6               	addwf	___wmul@product,f
  3169  05CF  1803               	skipnc
  3170  05D0  0AF7               	incf	___wmul@product+1,f
  3171  05D1  0875               	movf	___wmul@multiplicand+1,w
  3172  05D2  07F7               	addwf	___wmul@product+1,f
  3173  05D3                     l6210:	
  3174  05D3  1003               	clrc
  3175  05D4  0DF4               	rlf	___wmul@multiplicand,f
  3176  05D5  0DF5               	rlf	___wmul@multiplicand+1,f
  3177  05D6  1003               	clrc
  3178  05D7  0CF3               	rrf	___wmul@multiplier+1,f
  3179  05D8  0CF2               	rrf	___wmul@multiplier,f
  3180  05D9  0873               	movf	___wmul@multiplier+1,w
  3181  05DA  0472               	iorwf	___wmul@multiplier,w
  3182  05DB  1D03               	skipz
  3183  05DC  2DCB               	goto	l6206
  3184  05DD  0877               	movf	___wmul@product+1,w
  3185  05DE  00F3               	movwf	?___wmul+1
  3186  05DF  0876               	movf	___wmul@product,w
  3187  05E0  00F2               	movwf	?___wmul
  3188  05E1  0008               	return
  3189  05E2                     __end_of___wmul:	
  3190  05E2                     __ptext539:	
  3191 ;; =============== function ___awdiv ends ============
  3192                           
  3193                           
  3194 ;; *************** function ___fttol *****************
  3195 ;; Defined at:
  3196 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  f1              3    4[BANK0 ] float 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  lval            4   12[BANK0 ] unsigned long 
  3201 ;;  exp1            1   16[BANK0 ] unsigned char 
  3202 ;;  sign1           1   11[BANK0 ] unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  4    4[BANK0 ] long 
  3205 ;; Registers used:
  3206 ;;		wreg, status,2, status,0
  3207 ;; Tracked objects:
  3208 ;;		On entry : 60/0
  3209 ;;		On exit  : 60/0
  3210 ;;		Unchanged: FFF9F/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3212 ;;      Params:         0       4       0       0       0
  3213 ;;      Locals:         0       6       0       0       0
  3214 ;;      Temps:          0       3       0       0       0
  3215 ;;      Totals:         0      13       0       0       0
  3216 ;;Total ram usage:       13 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    1
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_printf
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225  05E2                     ___fttol:	
  3226                           
  3227                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3228  05E2  278A  120A  118A   	fcall	PL28	;call to abstracted procedure
  3229  05E5  1003               	clrc
  3230  05E6  0D29               	rlf	??___fttol+1,w
  3231  05E7  0D2A               	rlf	??___fttol+2,w
  3232  05E8  00B0               	movwf	___fttol@exp1
  3233  05E9  08B0               	movf	___fttol@exp1,f
  3234  05EA  1D03               	skipz
  3235  05EB  2DF1               	goto	l6294
  3236  05EC                     l6292:	
  3237  05EC  01A4               	clrf	?___fttol
  3238  05ED  01A5               	clrf	?___fttol+1
  3239  05EE  01A6               	clrf	?___fttol+2
  3240  05EF  01A7               	clrf	?___fttol+3
  3241  05F0  0008               	return
  3242  05F1                     l6294:	
  3243  05F1  278A  120A  118A   	fcall	PL28	;call to abstracted procedure
  3244  05F4  3017               	movlw	23
  3245  05F5                     u2405:	
  3246  05F5  1003               	clrc
  3247  05F6  0CAA               	rrf	??___fttol+2,f
  3248  05F7  0CA9               	rrf	??___fttol+1,f
  3249  05F8  0CA8               	rrf	??___fttol,f
  3250  05F9  3EFF               	addlw	-1
  3251  05FA  1D03               	skipz
  3252  05FB  2DF5               	goto	u2405
  3253  05FC  0828               	movf	??___fttol,w
  3254  05FD  00AB               	movwf	___fttol@sign1
  3255  05FE  17A5               	bsf	___fttol@f1+1,7
  3256  05FF  01A6               	clrf	___fttol@f1+2
  3257  0600  0824               	movf	___fttol@f1,w
  3258  0601  00AC               	movwf	___fttol@lval
  3259  0602  0825               	movf	___fttol@f1+1,w
  3260  0603  00AD               	movwf	___fttol@lval+1
  3261  0604  0826               	movf	___fttol@f1+2,w
  3262  0605  00AE               	movwf	___fttol@lval+2
  3263  0606  308E               	movlw	142
  3264  0607  01AF               	clrf	___fttol@lval+3
  3265  0608  02B0               	subwf	___fttol@exp1,f
  3266  0609  1FB0               	btfss	___fttol@exp1,7
  3267  060A  2E18               	goto	l6314
  3268  060B  0830               	movf	___fttol@exp1,w
  3269  060C  3A80               	xorlw	128
  3270  060D  3E8F               	addlw	143
  3271  060E  1C03               	btfss	3,0
  3272  060F  2DEC               	goto	l6292
  3273  0610                     l6310:	
  3274  0610  1003               	clrc
  3275  0611  0CAF               	rrf	___fttol@lval+3,f
  3276  0612  0CAE               	rrf	___fttol@lval+2,f
  3277  0613  0CAD               	rrf	___fttol@lval+1,f
  3278  0614  0CAC               	rrf	___fttol@lval,f
  3279  0615  0FB0               	incfsz	___fttol@exp1,f
  3280  0616  2E10               	goto	l6310
  3281  0617  2E26               	goto	l6320
  3282  0618                     l6314:	
  3283  0618  3018               	movlw	24
  3284  0619  0230               	subwf	___fttol@exp1,w
  3285  061A  1803               	btfsc	3,0
  3286  061B  2DEC               	goto	l6292
  3287  061C                     l3413:	
  3288  061C  08B0               	movf	___fttol@exp1,f
  3289  061D  1903               	btfsc	3,2
  3290  061E  2E26               	goto	l6320
  3291  061F  1003               	clrc
  3292  0620  0DAC               	rlf	___fttol@lval,f
  3293  0621  0DAD               	rlf	___fttol@lval+1,f
  3294  0622  0DAE               	rlf	___fttol@lval+2,f
  3295  0623  0DAF               	rlf	___fttol@lval+3,f
  3296  0624  03B0               	decf	___fttol@exp1,f
  3297  0625  2E1C               	goto	l3413
  3298  0626                     l6320:	
  3299  0626  082B               	movf	___fttol@sign1,w
  3300  0627  1903               	btfsc	3,2
  3301  0628  2E34               	goto	l6324
  3302  0629  09AC               	comf	___fttol@lval,f
  3303  062A  09AD               	comf	___fttol@lval+1,f
  3304  062B  09AE               	comf	___fttol@lval+2,f
  3305  062C  09AF               	comf	___fttol@lval+3,f
  3306  062D  0AAC               	incf	___fttol@lval,f
  3307  062E  1903               	skipnz
  3308  062F  0AAD               	incf	___fttol@lval+1,f
  3309  0630  1903               	skipnz
  3310  0631  0AAE               	incf	___fttol@lval+2,f
  3311  0632  1903               	skipnz
  3312  0633  0AAF               	incf	___fttol@lval+3,f
  3313  0634                     l6324:	
  3314  0634  082F               	movf	___fttol@lval+3,w
  3315  0635  00A7               	movwf	?___fttol+3
  3316  0636  082E               	movf	___fttol@lval+2,w
  3317  0637  00A6               	movwf	?___fttol+2
  3318  0638  082D               	movf	___fttol@lval+1,w
  3319  0639  00A5               	movwf	?___fttol+1
  3320  063A  082C               	movf	___fttol@lval,w
  3321  063B  00A4               	movwf	?___fttol
  3322  063C  0008               	return
  3323  063D                     __end_of___fttol:	
  3324  063D                     __ptext534:	
  3325 ;; =============== function ___awmod ends ============
  3326                           
  3327                           
  3328 ;; *************** function ___lldiv *****************
  3329 ;; Defined at:
  3330 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;  divisor         4    2[COMMON] unsigned long 
  3333 ;;  dividend        4    6[COMMON] unsigned long 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  quotient        4    0[BANK0 ] unsigned long 
  3336 ;;  counter         1    4[BANK0 ] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  4    2[COMMON] unsigned long 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 60/20
  3343 ;;		On exit  : 60/0
  3344 ;;		Unchanged: FFF9F/0
  3345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3346 ;;      Params:         8       0       0       0       0
  3347 ;;      Locals:         0       5       0       0       0
  3348 ;;      Temps:          0       0       0       0       0
  3349 ;;      Totals:         8       5       0       0       0
  3350 ;;Total ram usage:       13 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_printf
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359  063D                     ___lldiv:	
  3360                           
  3361                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3362  063D  1283               	bcf	3,5	;RP0=0, select bank0
  3363  063E  01A0               	clrf	___lldiv@quotient
  3364  063F  01A1               	clrf	___lldiv@quotient+1
  3365  0640  01A2               	clrf	___lldiv@quotient+2
  3366  0641  01A3               	clrf	___lldiv@quotient+3
  3367  0642  0875               	movf	___lldiv@divisor+3,w
  3368  0643  0474               	iorwf	___lldiv@divisor+2,w
  3369  0644  0473               	iorwf	___lldiv@divisor+1,w
  3370  0645  0472               	iorwf	___lldiv@divisor,w
  3371  0646  1903               	skipnz
  3372  0647  2E7D               	goto	l6442
  3373  0648  01A4               	clrf	___lldiv@counter
  3374  0649                     L10:	
  3375  0649  0AA4               	incf	___lldiv@counter,f
  3376  064A  1BF5               	btfsc	___lldiv@divisor+3,7
  3377  064B  2E52               	goto	l6430
  3378  064C  1003               	clrc
  3379  064D  0DF2               	rlf	___lldiv@divisor,f
  3380  064E  0DF3               	rlf	___lldiv@divisor+1,f
  3381  064F  0DF4               	rlf	___lldiv@divisor+2,f
  3382  0650  0DF5               	rlf	___lldiv@divisor+3,f
  3383  0651  2E49               	goto	L10
  3384  0652                     l6430:	
  3385  0652  1003               	clrc
  3386  0653  0DA0               	rlf	___lldiv@quotient,f
  3387  0654  0DA1               	rlf	___lldiv@quotient+1,f
  3388  0655  0DA2               	rlf	___lldiv@quotient+2,f
  3389  0656  0DA3               	rlf	___lldiv@quotient+3,f
  3390  0657  0875               	movf	___lldiv@divisor+3,w
  3391  0658  0279               	subwf	___lldiv@dividend+3,w
  3392  0659  1D03               	skipz
  3393  065A  2E65               	goto	u2645
  3394  065B  0874               	movf	___lldiv@divisor+2,w
  3395  065C  0278               	subwf	___lldiv@dividend+2,w
  3396  065D  1D03               	skipz
  3397  065E  2E65               	goto	u2645
  3398  065F  0873               	movf	___lldiv@divisor+1,w
  3399  0660  0277               	subwf	___lldiv@dividend+1,w
  3400  0661  1D03               	skipz
  3401  0662  2E65               	goto	u2645
  3402  0663  0872               	movf	___lldiv@divisor,w
  3403  0664  0276               	subwf	___lldiv@dividend,w
  3404  0665                     u2645:	
  3405  0665  1C03               	skipc
  3406  0666  2E77               	goto	L11
  3407  0667  0872               	movf	___lldiv@divisor,w
  3408  0668  02F6               	subwf	___lldiv@dividend,f
  3409  0669  0873               	movf	___lldiv@divisor+1,w
  3410  066A  1C03               	skipc
  3411  066B  0F73               	incfsz	___lldiv@divisor+1,w
  3412  066C  02F7               	subwf	___lldiv@dividend+1,f
  3413  066D  0874               	movf	___lldiv@divisor+2,w
  3414  066E  1C03               	skipc
  3415  066F  0F74               	incfsz	___lldiv@divisor+2,w
  3416  0670  02F8               	subwf	___lldiv@dividend+2,f
  3417  0671  0875               	movf	___lldiv@divisor+3,w
  3418  0672  1C03               	skipc
  3419  0673  0F75               	incfsz	___lldiv@divisor+3,w
  3420  0674  02F9               	subwf	___lldiv@dividend+3,f
  3421  0675  1420               	bsf	___lldiv@quotient,0
  3422  0676  1003               	clrc
  3423  0677                     L11:	
  3424  0677  0CF5               	rrf	___lldiv@divisor+3,f
  3425  0678  0CF4               	rrf	___lldiv@divisor+2,f
  3426  0679  0CF3               	rrf	___lldiv@divisor+1,f
  3427  067A  0CF2               	rrf	___lldiv@divisor,f
  3428  067B  0BA4               	decfsz	___lldiv@counter,f
  3429  067C  2E52               	goto	l6430
  3430  067D                     l6442:	
  3431  067D  0823               	movf	___lldiv@quotient+3,w
  3432  067E  00F5               	movwf	?___lldiv+3
  3433  067F  0822               	movf	___lldiv@quotient+2,w
  3434  0680  00F4               	movwf	?___lldiv+2
  3435  0681  0821               	movf	___lldiv@quotient+1,w
  3436  0682  00F3               	movwf	?___lldiv+1
  3437  0683  0820               	movf	___lldiv@quotient,w
  3438  0684  00F2               	movwf	?___lldiv
  3439  0685  0008               	return
  3440  0686                     __end_of___lldiv:	
  3441  0686                     __ptext546:	
  3442 ;; =============== function __div_to_l_ ends ============
  3443                           
  3444                           
  3445 ;; *************** function __tdiv_to_l_ *****************
  3446 ;; Defined at:
  3447 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  f1              3    2[COMMON] float 
  3450 ;;  f2              3    5[COMMON] float 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  quot            4    0[BANK0 ] unsigned long 
  3453 ;;  exp1            1    5[BANK0 ] unsigned char 
  3454 ;;  cntr            1    4[BANK0 ] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  4    2[COMMON] unsigned long 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 60/20
  3461 ;;		On exit  : 60/0
  3462 ;;		Unchanged: FFF9F/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         6       0       0       0       0
  3465 ;;      Locals:         0       6       0       0       0
  3466 ;;      Temps:          3       0       0       0       0
  3467 ;;      Totals:         9       6       0       0       0
  3468 ;;Total ram usage:       15 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    1
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_printf
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477  0686                     __tdiv_to_l_:	
  3478                           
  3479                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3480  0686  0872               	movf	__tdiv_to_l_@f1,w
  3481  0687  00F8               	movwf	??__tdiv_to_l_
  3482  0688  0873               	movf	__tdiv_to_l_@f1+1,w
  3483  0689  00F9               	movwf	??__tdiv_to_l_+1
  3484  068A  0874               	movf	__tdiv_to_l_@f1+2,w
  3485  068B  00FA               	movwf	??__tdiv_to_l_+2
  3486  068C  1003               	clrc
  3487  068D  0D79               	rlf	??__tdiv_to_l_+1,w
  3488  068E  0D7A               	rlf	??__tdiv_to_l_+2,w
  3489  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0690  00A5               	movwf	__tdiv_to_l_@exp1
  3491  0691  08A5               	movf	__tdiv_to_l_@exp1,f
  3492  0692  1D03               	skipz
  3493  0693  2E99               	goto	l6098
  3494  0694                     l6096:	
  3495  0694  01F2               	clrf	?__tdiv_to_l_
  3496  0695  01F3               	clrf	?__tdiv_to_l_+1
  3497  0696  01F4               	clrf	?__tdiv_to_l_+2
  3498  0697  01F5               	clrf	?__tdiv_to_l_+3
  3499  0698  0008               	return
  3500  0699                     l6098:	
  3501  0699  0875               	movf	__tdiv_to_l_@f2,w
  3502  069A  00F8               	movwf	??__tdiv_to_l_
  3503  069B  0876               	movf	__tdiv_to_l_@f2+1,w
  3504  069C  00F9               	movwf	??__tdiv_to_l_+1
  3505  069D  0877               	movf	__tdiv_to_l_@f2+2,w
  3506  069E  00FA               	movwf	??__tdiv_to_l_+2
  3507  069F  1003               	clrc
  3508  06A0  0D79               	rlf	??__tdiv_to_l_+1,w
  3509  06A1  0D7A               	rlf	??__tdiv_to_l_+2,w
  3510  06A2  00A4               	movwf	__tdiv_to_l_@cntr
  3511  06A3  08A4               	movf	__tdiv_to_l_@cntr,f
  3512  06A4  1903               	btfsc	3,2
  3513  06A5  2E94               	goto	l6096
  3514  06A6  307F               	movlw	127
  3515  06A7  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3516  06A8  01F4               	clrf	__tdiv_to_l_@f1+2
  3517  06A9  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3518  06AA  01F7               	clrf	__tdiv_to_l_@f2+2
  3519  06AB  01A0               	clrf	__tdiv_to_l_@quot
  3520  06AC  01A1               	clrf	__tdiv_to_l_@quot+1
  3521  06AD  01A2               	clrf	__tdiv_to_l_@quot+2
  3522  06AE  01A3               	clrf	__tdiv_to_l_@quot+3
  3523  06AF  02A5               	subwf	__tdiv_to_l_@exp1,f
  3524  06B0  3098               	movlw	152
  3525  06B1  0724               	addwf	__tdiv_to_l_@cntr,w
  3526  06B2  00F8               	movwf	??__tdiv_to_l_
  3527  06B3  02A5               	subwf	__tdiv_to_l_@exp1,f
  3528  06B4  3018               	movlw	24
  3529  06B5  00A4               	movwf	__tdiv_to_l_@cntr
  3530  06B6                     l6112:	
  3531  06B6  1003               	clrc
  3532  06B7  0DA0               	rlf	__tdiv_to_l_@quot,f
  3533  06B8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3534  06B9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3535  06BA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3536  06BB  0877               	movf	__tdiv_to_l_@f2+2,w
  3537  06BC  0274               	subwf	__tdiv_to_l_@f1+2,w
  3538  06BD  1D03               	skipz
  3539  06BE  2EC5               	goto	u2055
  3540  06BF  0876               	movf	__tdiv_to_l_@f2+1,w
  3541  06C0  0273               	subwf	__tdiv_to_l_@f1+1,w
  3542  06C1  1D03               	skipz
  3543  06C2  2EC5               	goto	u2055
  3544  06C3  0875               	movf	__tdiv_to_l_@f2,w
  3545  06C4  0272               	subwf	__tdiv_to_l_@f1,w
  3546  06C5                     u2055:	
  3547  06C5  1C03               	skipc
  3548  06C6  2ED3               	goto	L19
  3549  06C7  0875               	movf	__tdiv_to_l_@f2,w
  3550  06C8  02F2               	subwf	__tdiv_to_l_@f1,f
  3551  06C9  0876               	movf	__tdiv_to_l_@f2+1,w
  3552  06CA  1C03               	skipc
  3553  06CB  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3554  06CC  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3555  06CD  0877               	movf	__tdiv_to_l_@f2+2,w
  3556  06CE  1C03               	skipc
  3557  06CF  0A77               	incf	__tdiv_to_l_@f2+2,w
  3558  06D0  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3559  06D1  1420               	bsf	__tdiv_to_l_@quot,0
  3560  06D2  1003               	clrc
  3561  06D3                     L19:	
  3562  06D3  0DF2               	rlf	__tdiv_to_l_@f1,f
  3563  06D4  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3564  06D5  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3565  06D6  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  3566  06D7  2EB6               	goto	l6112
  3567  06D8  1FA5               	btfss	__tdiv_to_l_@exp1,7
  3568  06D9  2EE7               	goto	l6132
  3569  06DA  0825               	movf	__tdiv_to_l_@exp1,w
  3570  06DB  3A80               	xorlw	128
  3571  06DC  3E97               	addlw	151
  3572  06DD  1C03               	btfss	3,0
  3573  06DE  2E94               	goto	l6096
  3574  06DF                     l6128:	
  3575  06DF  1003               	clrc
  3576  06E0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  3577  06E1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  3578  06E2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  3579  06E3  0CA0               	rrf	__tdiv_to_l_@quot,f
  3580  06E4  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  3581  06E5  2EDF               	goto	l6128
  3582  06E6  2EF5               	goto	l6138
  3583  06E7                     l6132:	
  3584  06E7  3018               	movlw	24
  3585  06E8  0225               	subwf	__tdiv_to_l_@exp1,w
  3586  06E9  1803               	btfsc	3,0
  3587  06EA  2E94               	goto	l6096
  3588  06EB                     l3551:	
  3589  06EB  08A5               	movf	__tdiv_to_l_@exp1,f
  3590  06EC  1903               	btfsc	3,2
  3591  06ED  2EF5               	goto	l6138
  3592  06EE  1003               	clrc
  3593  06EF  0DA0               	rlf	__tdiv_to_l_@quot,f
  3594  06F0  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  3595  06F1  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  3596  06F2  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  3597  06F3  03A5               	decf	__tdiv_to_l_@exp1,f
  3598  06F4  2EEB               	goto	l3551
  3599  06F5                     l6138:	
  3600  06F5  0823               	movf	__tdiv_to_l_@quot+3,w
  3601  06F6  00F5               	movwf	?__tdiv_to_l_+3
  3602  06F7  0822               	movf	__tdiv_to_l_@quot+2,w
  3603  06F8  00F4               	movwf	?__tdiv_to_l_+2
  3604  06F9  0821               	movf	__tdiv_to_l_@quot+1,w
  3605  06FA  00F3               	movwf	?__tdiv_to_l_+1
  3606  06FB  0820               	movf	__tdiv_to_l_@quot,w
  3607  06FC  00F2               	movwf	?__tdiv_to_l_
  3608  06FD  0008               	return
  3609  06FE                     __end_of__tdiv_to_l_:	
  3610  06FE                     __ptext536:	
  3611 ;; =============== function ___ftge ends ============
  3612                           
  3613                           
  3614 ;; *************** function ___ftneg *****************
  3615 ;; Defined at:
  3616 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  f1              3    2[COMMON] float 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  3    2[COMMON] float 
  3623 ;; Registers used:
  3624 ;;		wreg
  3625 ;; Tracked objects:
  3626 ;;		On entry : 160/20
  3627 ;;		On exit  : 160/20
  3628 ;;		Unchanged: FFE9F/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         3       0       0       0       0
  3631 ;;      Locals:         0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0
  3633 ;;      Totals:         3       0       0       0       0
  3634 ;;Total ram usage:        3 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    1
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_printf
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643  06FE                     ___ftneg:	
  3644                           
  3645                           ; Regs used in ___ftneg: [wreg]
  3646  06FE  0874               	movf	___ftneg@f1+2,w
  3647  06FF  0473               	iorwf	___ftneg@f1+1,w
  3648  0700  0472               	iorwf	___ftneg@f1,w
  3649  0701  1903               	skipnz
  3650  0702  0008               	return
  3651  0703  3080               	movlw	128
  3652  0704  06F4               	xorwf	___ftneg@f1+2,f
  3653  0705  0008               	return
  3654  0706                     __end_of___ftneg:	
  3655  0706                     PL2:	
  3656  0706  0838               	movf	printf@c^(0+128),w
  3657  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0708  00DA               	movwf	??_printf
  3659  0709  1003               	clrc
  3660  070A  0DDA               	rlf	??_printf,f
  3661  070B  1003               	clrc
  3662  070C  0D5A               	rlf	??_printf,w
  3663  070D  3E4F               	addlw	low (_dpowers-__stringbase)
  3664  070E  0084               	movwf	4
  3665  070F  0008               	return
  3666  0710                     PL4:	
  3667  0710  300A               	movlw	10
  3668  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0712  00A5               	movwf	?___llmod
  3670  0713  01A6               	clrf	?___llmod+1
  3671  0714  01A7               	clrf	?___llmod+2
  3672  0715  01A8               	clrf	?___llmod+3
  3673  0716  1683               	bsf	3,5	;RP0=1, select bank1
  3674  0717  0008               	return
  3675  0718                     PL5:	
  3676  0718  00F5               	movwf	?___lldiv+3
  3677  0719  1683               	bsf	3,5	;RP0=1, select bank1
  3678  071A  082B               	movf	(printf@_val+3)^(0+128),w
  3679  071B  00F9               	movwf	?___lldiv+7
  3680  071C  082A               	movf	(printf@_val+2)^(0+128),w
  3681  071D  00F8               	movwf	?___lldiv+6
  3682  071E  0829               	movf	(printf@_val+1)^(0+128),w
  3683  071F  00F7               	movwf	?___lldiv+5
  3684  0720  0828               	movf	printf@_val^(0+128),w
  3685  0721  00F6               	movwf	?___lldiv+4
  3686  0722  0008               	return
  3687  0723                     PL6:	
  3688  0723  0827               	movf	?___fttol+3,w
  3689  0724  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0725  00AB               	movwf	(printf@_val+3)^(0+128)
  3691  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3692  0727  0826               	movf	?___fttol+2,w
  3693  0728  1683               	bsf	3,5	;RP0=1, select bank1
  3694  0729  00AA               	movwf	(printf@_val+2)^(0+128)
  3695  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3696  072B  0825               	movf	?___fttol+1,w
  3697  072C  1683               	bsf	3,5	;RP0=1, select bank1
  3698  072D  00A9               	movwf	(printf@_val+1)^(0+128)
  3699  072E  1283               	bcf	3,5	;RP0=0, select bank0
  3700  072F  0824               	movf	?___fttol,w
  3701  0730  0008               	return
  3702  0731                     PL9:	
  3703  0731  0840               	movf	?_scale,w
  3704  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3705  0733  00A5               	movwf	printf@integ^(0+128)
  3706  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0735  0841               	movf	?_scale+1,w
  3708  0736  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0737  00A6               	movwf	(printf@integ+1)^(0+128)
  3710  0738  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0739  0842               	movf	?_scale+2,w
  3712  073A  1683               	bsf	3,5	;RP0=1, select bank1
  3713  073B  00A7               	movwf	(printf@integ+2)^(0+128)
  3714  073C  0833               	movf	printf@fval^(0+128),w
  3715  073D  0008               	return
  3716  073E                     PL12:	
  3717  073E  0875               	movf	?___lldiv+3,w
  3718  073F  00AC               	movwf	?___llmod+7
  3719  0740  0874               	movf	?___lldiv+2,w
  3720  0741  00AB               	movwf	?___llmod+6
  3721  0742  0873               	movf	?___lldiv+1,w
  3722  0743  00AA               	movwf	?___llmod+5
  3723  0744  0872               	movf	?___lldiv,w
  3724  0745  00A9               	movwf	?___llmod+4
  3725  0746  0008               	return
  3726  0747                     PL13:	
  3727  0747  0772               	addwf	?___wmul,w
  3728  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0749  00DA               	movwf	??_printf
  3730  074A  3000               	movlw	0
  3731  074B  1803               	skipnc
  3732  074C  3001               	movlw	1
  3733  074D  0773               	addwf	?___wmul+1,w
  3734  074E  00DB               	movwf	??_printf+1
  3735  074F  085A               	movf	??_printf,w
  3736  0750  3ED0               	addlw	208
  3737  0751  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0752  0008               	return
  3739  0753                     PL14:	
  3740  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0754  00A4               	movwf	?___fttol
  3742  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3743  0756  0834               	movf	(printf@fval+1)^(0+128),w
  3744  0757  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0758  00A5               	movwf	?___fttol+1
  3746  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3747  075A  0835               	movf	(printf@fval+2)^(0+128),w
  3748  075B  1283               	bcf	3,5	;RP0=0, select bank0
  3749  075C  00A6               	movwf	?___fttol+2
  3750  075D  0008               	return
  3751  075E                     PL16:	
  3752  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3753  075F  00B1               	movwf	?___ftmul
  3754  0760  1683               	bsf	3,5	;RP0=1, select bank1
  3755  0761  0834               	movf	(printf@fval+1)^(0+128),w
  3756  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3757  0763  00B2               	movwf	?___ftmul+1
  3758  0764  1683               	bsf	3,5	;RP0=1, select bank1
  3759  0765  0835               	movf	(printf@fval+2)^(0+128),w
  3760  0766  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0767  00B3               	movwf	?___ftmul+2
  3762  0768  0008               	return
  3763  0769                     PL19:	
  3764  0769  1283               	bcf	3,5	;RP0=0, select bank0
  3765  076A  00DA               	movwf	??_printf
  3766  076B  01DB               	clrf	??_printf+1
  3767  076C  1BDA               	btfsc	??_printf,7
  3768  076D  03DB               	decf	??_printf+1,f
  3769  076E  085B               	movf	??_printf+1,w
  3770  076F  3A80               	xorlw	128
  3771  0770  00DC               	movwf	??_printf+2
  3772  0771  1683               	bsf	3,5	;RP0=1, select bank1
  3773  0772  0008               	return
  3774  0773                     PL20:	
  3775  0773  1303               	bcf	3,6	;RP1=0, select bank1
  3776  0774  0838               	movf	printf@c^(0+128),w
  3777  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3778  0776  00DA               	movwf	??_printf
  3779  0777  01DB               	clrf	??_printf+1
  3780  0778  1BDA               	btfsc	??_printf,7
  3781  0779  03DB               	decf	??_printf+1,f
  3782  077A  1683               	bsf	3,5	;RP0=1, select bank1
  3783  077B  0008               	return
  3784  077C                     PL21:	
  3785  077C  0825               	movf	printf@integ^(0+128),w
  3786  077D  00F2               	movwf	?___ftge
  3787  077E  0826               	movf	(printf@integ+1)^(0+128),w
  3788  077F  00F3               	movwf	?___ftge+1
  3789  0780  0827               	movf	(printf@integ+2)^(0+128),w
  3790  0781  00F4               	movwf	?___ftge+2
  3791  0782  0008               	return
  3792  0783                     PL27:	
  3793  0783  1283               	bcf	3,5	;RP0=0, select bank0
  3794  0784  085B               	movf	??_printf+1,w
  3795  0785  1803               	skipnc
  3796  0786  3E01               	addlw	1
  3797  0787  3EFF               	addlw	255
  3798  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3799  0789  0008               	return
  3800  078A                     PL28:	
  3801  078A  0824               	movf	___fttol@f1,w
  3802  078B  00A8               	movwf	??___fttol
  3803  078C  0825               	movf	___fttol@f1+1,w
  3804  078D  00A9               	movwf	??___fttol+1
  3805  078E  0826               	movf	___fttol@f1+2,w
  3806  078F  00AA               	movwf	??___fttol+2
  3807  0790  0008               	return
  3808  0791                     PL30:	
  3809  0791  0800               	movf	0,w
  3810  0792  1283               	bcf	3,5	;RP0=0, select bank0
  3811  0793  00DA               	movwf	??_printf
  3812  0794  0A84               	incf	4,f
  3813  0795  0800               	movf	0,w
  3814  0796  00DB               	movwf	??_printf+1
  3815  0797  0008               	return
  3816  0798                     PL32:	
  3817  0798  1683               	bsf	3,5	;RP0=1, select bank1
  3818  0799  1303               	bcf	3,6	;RP1=0, select bank1
  3819  079A  0008               	return
  3820                           
  3821                           	psect	text522
  3822  088F                     __ptext522:	
  3823 ;; =============== function _lcd_putc ends ============
  3824                           
  3825                           
  3826 ;; *************** function ___ftsub *****************
  3827 ;; Defined at:
  3828 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  f2              3   44[BANK0 ] float 
  3831 ;;  f1              3   47[BANK0 ] float 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;		None
  3834 ;; Return value:  Size  Location     Type
  3835 ;;                  3   44[BANK0 ] float 
  3836 ;; Registers used:
  3837 ;;		wreg, status,2, status,0, pclath, cstack
  3838 ;; Tracked objects:
  3839 ;;		On entry : 60/0
  3840 ;;		On exit  : 60/0
  3841 ;;		Unchanged: FFF9F/0
  3842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3843 ;;      Params:         0       6       0       0       0
  3844 ;;      Locals:         0       0       0       0       0
  3845 ;;      Temps:          0       0       0       0       0
  3846 ;;      Totals:         0       6       0       0       0
  3847 ;;Total ram usage:        6 bytes
  3848 ;; Hardware stack levels used:    1
  3849 ;; Hardware stack levels required when called:    3
  3850 ;; This function calls:
  3851 ;;		___ftadd
  3852 ;; This function is called by:
  3853 ;;		_printf
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856  088F                     ___ftsub:	
  3857                           
  3858                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3859  088F  3080               	movlw	128
  3860  0890  06CE               	xorwf	___ftsub@f2+2,f
  3861  0891  084F               	movf	___ftsub@f1,w
  3862  0892  00C0               	movwf	?___ftadd
  3863  0893  0850               	movf	___ftsub@f1+1,w
  3864  0894  00C1               	movwf	?___ftadd+1
  3865  0895  0851               	movf	___ftsub@f1+2,w
  3866  0896  00C2               	movwf	?___ftadd+2
  3867  0897  084C               	movf	___ftsub@f2,w
  3868  0898  00C3               	movwf	?___ftadd+3
  3869  0899  084D               	movf	___ftsub@f2+1,w
  3870  089A  00C4               	movwf	?___ftadd+4
  3871  089B  084E               	movf	___ftsub@f2+2,w
  3872  089C  00C5               	movwf	?___ftadd+5
  3873  089D  20A5               	fcall	___ftadd
  3874  089E  0840               	movf	?___ftadd,w
  3875  089F  00CC               	movwf	?___ftsub
  3876  08A0  0841               	movf	?___ftadd+1,w
  3877  08A1  00CD               	movwf	?___ftsub+1
  3878  08A2  0842               	movf	?___ftadd+2,w
  3879  08A3  00CE               	movwf	?___ftsub+2
  3880  08A4  0008               	return
  3881  08A5                     __end_of___ftsub:	
  3882  08A5                     __ptext530:	
  3883 ;; =============== function ___ftmul ends ============
  3884                           
  3885                           
  3886 ;; *************** function ___ftadd *****************
  3887 ;; Defined at:
  3888 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  f1              3   32[BANK0 ] float 
  3891 ;;  f2              3   35[BANK0 ] float 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  exp1            1   43[BANK0 ] unsigned char 
  3894 ;;  exp2            1   42[BANK0 ] unsigned char 
  3895 ;;  sign            1   41[BANK0 ] unsigned char 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  3   32[BANK0 ] float 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0, pclath, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 60/0
  3902 ;;		On exit  : 60/0
  3903 ;;		Unchanged: FFF9F/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       6       0       0       0
  3906 ;;      Locals:         0       3       0       0       0
  3907 ;;      Temps:          0       3       0       0       0
  3908 ;;      Totals:         0      12       0       0       0
  3909 ;;Total ram usage:       12 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    2
  3912 ;; This function calls:
  3913 ;;		___ftpack
  3914 ;; This function is called by:
  3915 ;;		_printf
  3916 ;;		___ftsub
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919  08A5                     ___ftadd:	
  3920                           
  3921                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3922  08A5  0840               	movf	___ftadd@f1,w
  3923  08A6  00C6               	movwf	??___ftadd
  3924  08A7  0841               	movf	___ftadd@f1+1,w
  3925  08A8  00C7               	movwf	??___ftadd+1
  3926  08A9  0842               	movf	___ftadd@f1+2,w
  3927  08AA  00C8               	movwf	??___ftadd+2
  3928  08AB  1003               	clrc
  3929  08AC  0D47               	rlf	??___ftadd+1,w
  3930  08AD  0D48               	rlf	??___ftadd+2,w
  3931  08AE  00CB               	movwf	___ftadd@exp1
  3932  08AF  0843               	movf	___ftadd@f2,w
  3933  08B0  00C6               	movwf	??___ftadd
  3934  08B1  0844               	movf	___ftadd@f2+1,w
  3935  08B2  00C7               	movwf	??___ftadd+1
  3936  08B3  0845               	movf	___ftadd@f2+2,w
  3937  08B4  00C8               	movwf	??___ftadd+2
  3938  08B5  1003               	clrc
  3939  08B6  0D47               	rlf	??___ftadd+1,w
  3940  08B7  0D48               	rlf	??___ftadd+2,w
  3941  08B8  00CA               	movwf	___ftadd@exp2
  3942  08B9  084B               	movf	___ftadd@exp1,w
  3943  08BA  1903               	btfsc	3,2
  3944  08BB  28C8               	goto	l6540
  3945  08BC  084A               	movf	___ftadd@exp2,w
  3946  08BD  024B               	subwf	___ftadd@exp1,w
  3947  08BE  084A               	movf	___ftadd@exp2,w
  3948  08BF  1803               	skipnc
  3949  08C0  28D0               	goto	L7
  3950  08C1  00C6               	movwf	??___ftadd
  3951  08C2  084B               	movf	___ftadd@exp1,w
  3952  08C3  02C6               	subwf	??___ftadd,f
  3953  08C4  3019               	movlw	25
  3954  08C5  0246               	subwf	??___ftadd,w
  3955  08C6  1C03               	skipc
  3956  08C7  28CF               	goto	l6544
  3957  08C8                     l6540:	
  3958  08C8  0843               	movf	___ftadd@f2,w
  3959  08C9  00C0               	movwf	?___ftadd
  3960  08CA  0844               	movf	___ftadd@f2+1,w
  3961  08CB  00C1               	movwf	?___ftadd+1
  3962  08CC  0845               	movf	___ftadd@f2+2,w
  3963  08CD  00C2               	movwf	?___ftadd+2
  3964  08CE  0008               	return
  3965  08CF                     l6544:	
  3966  08CF  084A               	movf	___ftadd@exp2,w
  3967  08D0                     L7:	
  3968  08D0  1903               	btfsc	3,2
  3969  08D1  0008               	return
  3970  08D2  084B               	movf	___ftadd@exp1,w
  3971  08D3  024A               	subwf	___ftadd@exp2,w
  3972  08D4  1803               	skipnc
  3973  08D5  28DE               	goto	l6550
  3974  08D6  084B               	movf	___ftadd@exp1,w
  3975  08D7  00C6               	movwf	??___ftadd
  3976  08D8  084A               	movf	___ftadd@exp2,w
  3977  08D9  02C6               	subwf	??___ftadd,f
  3978  08DA  3019               	movlw	25
  3979  08DB  0246               	subwf	??___ftadd,w
  3980  08DC  1803               	btfsc	3,0
  3981  08DD  0008               	return
  3982  08DE                     l6550:	
  3983  08DE  3006               	movlw	6
  3984  08DF  00C9               	movwf	___ftadd@sign
  3985  08E0  1BC2               	btfsc	___ftadd@f1+2,7
  3986  08E1  17C9               	bsf	___ftadd@sign,7
  3987  08E2  1BC5               	btfsc	___ftadd@f2+2,7
  3988  08E3  1749               	bsf	___ftadd@sign,6
  3989  08E4  17C1               	bsf	___ftadd@f1+1,7
  3990  08E5  01C2               	clrf	___ftadd@f1+2
  3991  08E6  17C4               	bsf	___ftadd@f2+1,7
  3992  08E7  01C5               	clrf	___ftadd@f2+2
  3993  08E8  084A               	movf	___ftadd@exp2,w
  3994  08E9  024B               	subwf	___ftadd@exp1,w
  3995  08EA  1803               	skipnc
  3996  08EB  2905               	goto	l6572
  3997  08EC                     l6562:	
  3998  08EC  1003               	clrc
  3999  08ED  0DC3               	rlf	___ftadd@f2,f
  4000  08EE  0DC4               	rlf	___ftadd@f2+1,f
  4001  08EF  0DC5               	rlf	___ftadd@f2+2,f
  4002  08F0  03CA               	decf	___ftadd@exp2,f
  4003  08F1  084A               	movf	___ftadd@exp2,w
  4004  08F2  064B               	xorwf	___ftadd@exp1,w
  4005  08F3  1903               	skipnz
  4006  08F4  2900               	goto	l6570
  4007  08F5  03C9               	decf	___ftadd@sign,f
  4008  08F6  0849               	movf	___ftadd@sign,w
  4009  08F7  3907               	andlw	7
  4010  08F8  1903               	btfsc	3,2
  4011  08F9  2900               	goto	l6570
  4012  08FA  28EC               	goto	l6562
  4013  08FB                     l6568:	
  4014  08FB  1003               	clrc
  4015  08FC  0CC2               	rrf	___ftadd@f1+2,f
  4016  08FD  0CC1               	rrf	___ftadd@f1+1,f
  4017  08FE  0CC0               	rrf	___ftadd@f1,f
  4018  08FF  0ACB               	incf	___ftadd@exp1,f
  4019  0900                     l6570:	
  4020  0900  084B               	movf	___ftadd@exp1,w
  4021  0901  064A               	xorwf	___ftadd@exp2,w
  4022  0902  1903               	btfsc	3,2
  4023  0903  2921               	goto	l3357
  4024  0904  28FB               	goto	l6568
  4025  0905                     l6572:	
  4026  0905  084B               	movf	___ftadd@exp1,w
  4027  0906  024A               	subwf	___ftadd@exp2,w
  4028  0907  1803               	skipnc
  4029  0908  2921               	goto	l3357
  4030  0909                     l6574:	
  4031  0909  1003               	clrc
  4032  090A  0DC0               	rlf	___ftadd@f1,f
  4033  090B  0DC1               	rlf	___ftadd@f1+1,f
  4034  090C  0DC2               	rlf	___ftadd@f1+2,f
  4035  090D  03CB               	decf	___ftadd@exp1,f
  4036  090E  084A               	movf	___ftadd@exp2,w
  4037  090F  064B               	xorwf	___ftadd@exp1,w
  4038  0910  1903               	skipnz
  4039  0911  291D               	goto	l6582
  4040  0912  03C9               	decf	___ftadd@sign,f
  4041  0913  0849               	movf	___ftadd@sign,w
  4042  0914  3907               	andlw	7
  4043  0915  1903               	btfsc	3,2
  4044  0916  291D               	goto	l6582
  4045  0917  2909               	goto	l6574
  4046  0918                     l6580:	
  4047  0918  1003               	clrc
  4048  0919  0CC5               	rrf	___ftadd@f2+2,f
  4049  091A  0CC4               	rrf	___ftadd@f2+1,f
  4050  091B  0CC3               	rrf	___ftadd@f2,f
  4051  091C  0ACA               	incf	___ftadd@exp2,f
  4052  091D                     l6582:	
  4053  091D  084B               	movf	___ftadd@exp1,w
  4054  091E  064A               	xorwf	___ftadd@exp2,w
  4055  091F  1D03               	skipz
  4056  0920  2918               	goto	l6580
  4057  0921                     l3357:	
  4058  0921  1FC9               	btfss	___ftadd@sign,7
  4059  0922  292C               	goto	l6588
  4060  0923  30FF               	movlw	255
  4061  0924  06C0               	xorwf	___ftadd@f1,f
  4062  0925  06C1               	xorwf	___ftadd@f1+1,f
  4063  0926  06C2               	xorwf	___ftadd@f1+2,f
  4064  0927  0AC0               	incf	___ftadd@f1,f
  4065  0928  1903               	skipnz
  4066  0929  0AC1               	incf	___ftadd@f1+1,f
  4067  092A  1903               	skipnz
  4068  092B  0AC2               	incf	___ftadd@f1+2,f
  4069  092C                     l6588:	
  4070  092C  1F49               	btfss	___ftadd@sign,6
  4071  092D  2937               	goto	l6594
  4072  092E  30FF               	movlw	255
  4073  092F  06C3               	xorwf	___ftadd@f2,f
  4074  0930  06C4               	xorwf	___ftadd@f2+1,f
  4075  0931  06C5               	xorwf	___ftadd@f2+2,f
  4076  0932  0AC3               	incf	___ftadd@f2,f
  4077  0933  1903               	skipnz
  4078  0934  0AC4               	incf	___ftadd@f2+1,f
  4079  0935  1903               	skipnz
  4080  0936  0AC5               	incf	___ftadd@f2+2,f
  4081  0937                     l6594:	
  4082  0937  01C9               	clrf	___ftadd@sign
  4083  0938  0840               	movf	___ftadd@f1,w
  4084  0939  07C3               	addwf	___ftadd@f2,f
  4085  093A  0841               	movf	___ftadd@f1+1,w
  4086  093B  1103               	clrz
  4087  093C  1803               	skipnc
  4088  093D  0A41               	incf	___ftadd@f1+1,w
  4089  093E  1D03               	btfss	3,2
  4090  093F  07C4               	addwf	___ftadd@f2+1,f
  4091  0940  0842               	movf	___ftadd@f1+2,w
  4092  0941  1103               	clrz
  4093  0942  1803               	skipnc
  4094  0943  0A42               	incf	___ftadd@f1+2,w
  4095  0944  1D03               	btfss	3,2
  4096  0945  07C5               	addwf	___ftadd@f2+2,f
  4097  0946  1FC5               	btfss	___ftadd@f2+2,7
  4098  0947  2953               	goto	l6606
  4099  0948  30FF               	movlw	255
  4100  0949  06C3               	xorwf	___ftadd@f2,f
  4101  094A  06C4               	xorwf	___ftadd@f2+1,f
  4102  094B  06C5               	xorwf	___ftadd@f2+2,f
  4103  094C  0AC3               	incf	___ftadd@f2,f
  4104  094D  1903               	skipnz
  4105  094E  0AC4               	incf	___ftadd@f2+1,f
  4106  094F  1903               	skipnz
  4107  0950  0AC5               	incf	___ftadd@f2+2,f
  4108  0951  01C9               	clrf	___ftadd@sign
  4109  0952  0AC9               	incf	___ftadd@sign,f
  4110  0953                     l6606:	
  4111  0953  0843               	movf	___ftadd@f2,w
  4112  0954  00F2               	movwf	?___ftpack
  4113  0955  0844               	movf	___ftadd@f2+1,w
  4114  0956  00F3               	movwf	?___ftpack+1
  4115  0957  0845               	movf	___ftadd@f2+2,w
  4116  0958  00F4               	movwf	?___ftpack+2
  4117  0959  084B               	movf	___ftadd@exp1,w
  4118  095A  00F5               	movwf	?___ftpack+3
  4119  095B  0849               	movf	___ftadd@sign,w
  4120  095C  00F6               	movwf	?___ftpack+4
  4121  095D  120A  158A  2769   	fcall	___ftpack
  4122  0960  0872               	movf	?___ftpack,w
  4123  0961  00C0               	movwf	?___ftadd
  4124  0962  0873               	movf	?___ftpack+1,w
  4125  0963  00C1               	movwf	?___ftadd+1
  4126  0964  0874               	movf	?___ftpack+2,w
  4127  0965  00C2               	movwf	?___ftadd+2
  4128  0966  0008               	return
  4129  0967                     __end_of___ftadd:	
  4130                           
  4131                           	psect	text524
  4132  0967                     __ptext524:	
  4133 ;; =============== function _scale ends ============
  4134                           
  4135                           
  4136 ;; *************** function _fround *****************
  4137 ;; Defined at:
  4138 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  prec            1    wreg     unsigned char 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  prec            1   53[BANK0 ] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  3   44[BANK0 ] unsigned char 
  4145 ;; Registers used:
  4146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 60/20
  4149 ;;		On exit  : 60/0
  4150 ;;		Unchanged: FFF9F/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       3       0       0       0
  4153 ;;      Locals:         0       7       0       0       0
  4154 ;;      Temps:          0       0       0       0       0
  4155 ;;      Totals:         0      10       0       0       0
  4156 ;;Total ram usage:       10 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    3
  4159 ;; This function calls:
  4160 ;;		___lbmod
  4161 ;;		___bmul
  4162 ;;		___lbdiv
  4163 ;;		___ftmul
  4164 ;; This function is called by:
  4165 ;;		_printf
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168  0967                     _fround:	
  4169                           
  4170                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4171                           ;fround@prec stored from wreg
  4172  0967  1283               	bcf	3,5	;RP0=0, select bank0
  4173  0968  00D5               	movwf	fround@prec
  4174  0969  306E               	movlw	110
  4175  096A  0255               	subwf	fround@prec,w
  4176  096B  1C03               	skipc
  4177  096C  29F2               	goto	l6752
  4178  096D  3003               	movlw	3
  4179  096E  00FB               	movwf	?___bmul
  4180  096F  300A               	movlw	10
  4181  0970  00F7               	movwf	?___lbdiv
  4182  0971  3064               	movlw	100
  4183  0972  00F2               	movwf	?___lbmod
  4184  0973  0855               	movf	fround@prec,w
  4185  0974  2287  120A  158A   	fcall	___lbmod
  4186  0977  226C               	fcall	___lbdiv
  4187  0978  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4188  097D  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4189  097E  0084               	movwf	4
  4190  097F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4191  0984  00B1               	movwf	?___ftmul
  4192  0985  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4193  098A  00B2               	movwf	?___ftmul+1
  4194  098B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4195  0990  00B3               	movwf	?___ftmul+2
  4196  0991  3003               	movlw	3
  4197  0992  00FB               	movwf	?___bmul
  4198  0993  3064               	movlw	100
  4199  0994  00F7               	movwf	?___lbdiv
  4200  0995  0855               	movf	fround@prec,w
  4201  0996  226C               	fcall	___lbdiv
  4202  0997  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4203  099C  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4204  099D  0084               	movwf	4
  4205  099E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4206  09A3  00B4               	movwf	?___ftmul+3
  4207  09A4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4208  09A9  00B5               	movwf	?___ftmul+4
  4209  09AA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4210  09AF  00B6               	movwf	?___ftmul+5
  4211  09B0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4212  09B5  22B2  120A  158A   	fcall	PL31	;call to abstracted procedure
  4213  09B8  3003               	movlw	3
  4214  09B9  00FB               	movwf	?___bmul
  4215  09BA  300A               	movlw	10
  4216  09BB  00F2               	movwf	?___lbmod
  4217  09BC  0855               	movf	fround@prec,w
  4218  09BD  2287               	fcall	___lbmod
  4219  09BE  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4220  09C3  3E01               	addlw	low (__npowers_-__stringbase)
  4221  09C4  0084               	movwf	4
  4222  09C5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4223  09CA  00B1               	movwf	?___ftmul
  4224  09CB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4225  09D0  00B2               	movwf	?___ftmul+1
  4226  09D1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4227  09D6  22AA               	fcall	PL22	;call to abstracted procedure
  4228  09D7  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4229  09DC  0831               	movf	?___ftmul,w
  4230  09DD  00CF               	movwf	_fround$4107
  4231  09DE  0832               	movf	?___ftmul+1,w
  4232  09DF  00D0               	movwf	_fround$4107+1
  4233  09E0  0833               	movf	?___ftmul+2,w
  4234  09E1  00D1               	movwf	_fround$4107+2
  4235  09E2  303F               	movlw	63
  4236  09E3  01B1               	clrf	?___ftmul
  4237  09E4  01B2               	clrf	?___ftmul+1
  4238  09E5  00B3               	movwf	?___ftmul+2
  4239  09E6  084F               	movf	_fround$4107,w
  4240  09E7  00B4               	movwf	?___ftmul+3
  4241  09E8  0850               	movf	_fround$4107+1,w
  4242  09E9  00B5               	movwf	?___ftmul+4
  4243  09EA  0851               	movf	_fround$4107+2,w
  4244  09EB  00B6               	movwf	?___ftmul+5
  4245  09EC  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4246  09F1  2AA3               	ljmp	PL17	;call to abstracted procedure
  4247  09F2                     l6752:	
  4248  09F2  300B               	movlw	11
  4249  09F3  0255               	subwf	fround@prec,w
  4250  09F4  1C03               	skipc
  4251  09F5  2A46               	goto	l6760
  4252  09F6  3003               	movlw	3
  4253  09F7  00FB               	movwf	?___bmul
  4254  09F8  300A               	movlw	10
  4255  09F9  00F2               	movwf	?___lbmod
  4256  09FA  0855               	movf	fround@prec,w
  4257  09FB  2287               	fcall	___lbmod
  4258  09FC  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4259  0A01  3E01               	addlw	low (__npowers_-__stringbase)
  4260  0A02  0084               	movwf	4
  4261  0A03  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4262  0A08  00B1               	movwf	?___ftmul
  4263  0A09  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4264  0A0E  00B2               	movwf	?___ftmul+1
  4265  0A0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4266  0A14  00B3               	movwf	?___ftmul+2
  4267  0A15  3003               	movlw	3
  4268  0A16  00FB               	movwf	?___bmul
  4269  0A17  300A               	movlw	10
  4270  0A18  00F7               	movwf	?___lbdiv
  4271  0A19  0855               	movf	fround@prec,w
  4272  0A1A  226C               	fcall	___lbdiv
  4273  0A1B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4274  0A20  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4275  0A21  0084               	movwf	4
  4276  0A22  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4277  0A27  00B4               	movwf	?___ftmul+3
  4278  0A28  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4279  0A2D  00B5               	movwf	?___ftmul+4
  4280  0A2E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4281  0A33  00B6               	movwf	?___ftmul+5
  4282  0A34  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4283  0A39  22B2  120A  158A   	fcall	PL31	;call to abstracted procedure
  4284  0A3C  303F               	movlw	63
  4285  0A3D  01B1               	clrf	?___ftmul
  4286  0A3E  01B2               	clrf	?___ftmul+1
  4287  0A3F  22AA               	fcall	PL22	;call to abstracted procedure
  4288  0A40  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4289  0A45  2AA3               	ljmp	PL17	;call to abstracted procedure
  4290  0A46                     l6760:	
  4291  0A46  303F               	movlw	63
  4292  0A47  01B1               	clrf	?___ftmul
  4293  0A48  01B2               	clrf	?___ftmul+1
  4294  0A49  00B3               	movwf	?___ftmul+2
  4295  0A4A  3003               	movlw	3
  4296  0A4B  00FB               	movwf	?___bmul
  4297  0A4C  0855               	movf	fround@prec,w
  4298  0A4D  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4299  0A52  3E01               	addlw	low (__npowers_-__stringbase)
  4300  0A53  0084               	movwf	4
  4301  0A54  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4302  0A59  00B4               	movwf	?___ftmul+3
  4303  0A5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4304  0A5F  00B5               	movwf	?___ftmul+4
  4305  0A60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4306  0A65  00B6               	movwf	?___ftmul+5
  4307  0A66  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4308  0A6B  2AA3               	ljmp	PL17	;call to abstracted procedure
  4309  0A6C                     __end_of_fround:	
  4310  0A6C                     __ptext542:	
  4311 ;; =============== function ___lbmod ends ============
  4312                           
  4313                           
  4314 ;; *************** function ___lbdiv *****************
  4315 ;; Defined at:
  4316 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;  dividend        1    wreg     unsigned char 
  4319 ;;  divisor         1    7[COMMON] unsigned char 
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  dividend        1    8[COMMON] unsigned char 
  4322 ;;  quotient        1   10[COMMON] unsigned char 
  4323 ;;  counter         1    9[COMMON] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      unsigned char 
  4326 ;; Registers used:
  4327 ;;		wreg, status,2, status,0
  4328 ;; Tracked objects:
  4329 ;;		On entry : 60/0
  4330 ;;		On exit  : 60/0
  4331 ;;		Unchanged: FFF9F/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4333 ;;      Params:         1       0       0       0       0
  4334 ;;      Locals:         3       0       0       0       0
  4335 ;;      Temps:          0       0       0       0       0
  4336 ;;      Totals:         4       0       0       0       0
  4337 ;;Total ram usage:        4 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_fround
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346  0A6C                     ___lbdiv:	
  4347                           
  4348                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4349                           ;___lbdiv@dividend stored from wreg
  4350  0A6C  00F8               	movwf	___lbdiv@dividend
  4351  0A6D  01FA               	clrf	___lbdiv@quotient
  4352  0A6E  0877               	movf	___lbdiv@divisor,w
  4353  0A6F  1903               	btfsc	3,2
  4354  0A70  2A85               	goto	l6240
  4355  0A71  01F9               	clrf	___lbdiv@counter
  4356  0A72                     l6226:	
  4357  0A72  0AF9               	incf	___lbdiv@counter,f
  4358  0A73  1BF7               	btfsc	___lbdiv@divisor,7
  4359  0A74  2A78               	goto	l3326
  4360  0A75  1003               	clrc
  4361  0A76  0DF7               	rlf	___lbdiv@divisor,f
  4362  0A77  2A72               	goto	l6226
  4363  0A78                     l3326:	
  4364  0A78  1003               	clrc
  4365  0A79  0DFA               	rlf	___lbdiv@quotient,f
  4366  0A7A  0877               	movf	___lbdiv@divisor,w
  4367  0A7B  0278               	subwf	___lbdiv@dividend,w
  4368  0A7C  1C03               	skipc
  4369  0A7D  2A82               	goto	L18
  4370  0A7E  0877               	movf	___lbdiv@divisor,w
  4371  0A7F  02F8               	subwf	___lbdiv@dividend,f
  4372  0A80  147A               	bsf	___lbdiv@quotient,0
  4373  0A81  1003               	clrc
  4374  0A82                     L18:	
  4375  0A82  0CF7               	rrf	___lbdiv@divisor,f
  4376  0A83  0BF9               	decfsz	___lbdiv@counter,f
  4377  0A84  2A78               	goto	l3326
  4378  0A85                     l6240:	
  4379  0A85  087A               	movf	___lbdiv@quotient,w
  4380  0A86  0008               	return
  4381  0A87                     __end_of___lbdiv:	
  4382  0A87                     __ptext541:	
  4383 ;; =============== function ___ftpack ends ============
  4384                           
  4385                           
  4386 ;; *************** function ___lbmod *****************
  4387 ;; Defined at:
  4388 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  dividend        1    wreg     unsigned char 
  4391 ;;  divisor         1    2[COMMON] unsigned char 
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;  dividend        1    4[COMMON] unsigned char 
  4394 ;;  rem             1    6[COMMON] unsigned char 
  4395 ;;  counter         1    5[COMMON] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      unsigned char 
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 60/0
  4402 ;;		On exit  : 60/0
  4403 ;;		Unchanged: FFF9F/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4405 ;;      Params:         1       0       0       0       0
  4406 ;;      Locals:         3       0       0       0       0
  4407 ;;      Temps:          1       0       0       0       0
  4408 ;;      Totals:         5       0       0       0       0
  4409 ;;Total ram usage:        5 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    1
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_fround
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418  0A87                     ___lbmod:	
  4419                           
  4420                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4421                           ;___lbmod@dividend stored from wreg
  4422  0A87  00F4               	movwf	___lbmod@dividend
  4423  0A88  3008               	movlw	8
  4424  0A89  00F5               	movwf	___lbmod@counter
  4425  0A8A  01F6               	clrf	___lbmod@rem
  4426  0A8B                     l6248:	
  4427  0A8B  0874               	movf	___lbmod@dividend,w
  4428  0A8C  00F3               	movwf	??___lbmod
  4429  0A8D  3007               	movlw	7
  4430  0A8E  1003               	clrc
  4431  0A8F                     L17:	
  4432  0A8F  0CF3               	rrf	??___lbmod,f
  4433  0A90  3EFF               	addlw	-1
  4434  0A91  1003               	clrc
  4435  0A92  1D03               	skipz
  4436  0A93  2A8F               	goto	L17
  4437  0A94  0D76               	rlf	___lbmod@rem,w
  4438  0A95  0473               	iorwf	??___lbmod,w
  4439  0A96  00F6               	movwf	___lbmod@rem
  4440  0A97  1003               	clrc
  4441  0A98  0DF4               	rlf	___lbmod@dividend,f
  4442  0A99  0872               	movf	___lbmod@divisor,w
  4443  0A9A  0276               	subwf	___lbmod@rem,w
  4444  0A9B  1C03               	skipc
  4445  0A9C  2A9F               	goto	l6256
  4446  0A9D  0872               	movf	___lbmod@divisor,w
  4447  0A9E  02F6               	subwf	___lbmod@rem,f
  4448  0A9F                     l6256:	
  4449  0A9F  0BF5               	decfsz	___lbmod@counter,f
  4450  0AA0  2A8B               	goto	l6248
  4451  0AA1  0876               	movf	___lbmod@rem,w
  4452  0AA2  0008               	return
  4453  0AA3                     __end_of___lbmod:	
  4454  0AA3                     PL17:	
  4455  0AA3  0831               	movf	?___ftmul,w
  4456  0AA4  00CC               	movwf	?_fround
  4457  0AA5  0832               	movf	?___ftmul+1,w
  4458  0AA6  00CD               	movwf	?_fround+1
  4459  0AA7  0833               	movf	?___ftmul+2,w
  4460  0AA8  00CE               	movwf	?_fround+2
  4461  0AA9  0008               	return
  4462  0AAA                     PL22:	
  4463  0AAA  00B3               	movwf	?___ftmul+2
  4464  0AAB  0852               	movf	_fround$4106,w
  4465  0AAC  00B4               	movwf	?___ftmul+3
  4466  0AAD  0853               	movf	_fround$4106+1,w
  4467  0AAE  00B5               	movwf	?___ftmul+4
  4468  0AAF  0854               	movf	_fround$4106+2,w
  4469  0AB0  00B6               	movwf	?___ftmul+5
  4470  0AB1  0008               	return
  4471  0AB2                     PL31:	
  4472  0AB2  0831               	movf	?___ftmul,w
  4473  0AB3  00D2               	movwf	_fround$4106
  4474  0AB4  0832               	movf	?___ftmul+1,w
  4475  0AB5  00D3               	movwf	_fround$4106+1
  4476  0AB6  0833               	movf	?___ftmul+2,w
  4477  0AB7  00D4               	movwf	_fround$4106+2
  4478  0AB8  0008               	return
  4479                           
  4480                           	psect	text525
  4481  0AB9                     __ptext525:	
  4482 ;; =============== function _fround ends ============
  4483                           
  4484                           
  4485 ;; *************** function _lcd_gotoxy *****************
  4486 ;; Defined at:
  4487 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  col             1    wreg     unsigned char 
  4490 ;;  row             1    7[COMMON] unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  col             1    8[COMMON] unsigned char 
  4493 ;;  address         1    9[COMMON] unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;		None               void
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 60/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         1       0       0       0       0
  4504 ;;      Locals:         2       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0
  4506 ;;      Totals:         3       0       0       0       0
  4507 ;;Total ram usage:        3 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    2
  4510 ;; This function calls:
  4511 ;;		_lcd_put_byte
  4512 ;;		_lcd_busy
  4513 ;; This function is called by:
  4514 ;;		_main
  4515 ;;		_lcd_putc
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518  0AB9                     _lcd_gotoxy:	
  4519                           
  4520                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4521                           ;lcd_gotoxy@col stored from wreg
  4522  0AB9  00F8               	movwf	lcd_gotoxy@col
  4523                           
  4524                           ;lcd(16).c: 163: unsigned char address;
  4525                           ;lcd(16).c: 165: if(row!=0)
  4526  0ABA  0877               	movf	lcd_gotoxy@row,w
  4527  0ABB  1903               	btfsc	3,2
  4528  0ABC  2AC0               	goto	l6734
  4529                           
  4530                           ;lcd(16).c: 166: address=0x40;
  4531  0ABD  3040               	movlw	64
  4532  0ABE  00F9               	movwf	lcd_gotoxy@address
  4533  0ABF  2AC1               	goto	l6736
  4534  0AC0                     l6734:	
  4535                           
  4536                           ;lcd(16).c: 167: else
  4537                           ;lcd(16).c: 168: address=0;
  4538  0AC0  01F9               	clrf	lcd_gotoxy@address
  4539  0AC1                     l6736:	
  4540                           
  4541                           ;lcd(16).c: 170: address += col;
  4542  0AC1  0878               	movf	lcd_gotoxy@col,w
  4543  0AC2  07F9               	addwf	lcd_gotoxy@address,f
  4544                           
  4545                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4546  0AC3  0879               	movf	lcd_gotoxy@address,w
  4547  0AC4  3880               	iorlw	128
  4548  0AC5  00F2               	movwf	?_lcd_put_byte
  4549  0AC6  3000               	movlw	0
  4550  0AC7  23BB  120A  158A   	fcall	_lcd_put_byte
  4551  0ACA                     l6740:	
  4552                           ;lcd(16).c: 172: while(lcd_busy());
  4553                           
  4554  0ACA  244B  120A  158A   	fcall	_lcd_busy
  4555  0ACD  3800               	iorlw	0
  4556  0ACE  1903               	btfsc	3,2
  4557  0ACF  0008               	return
  4558  0AD0  2ACA               	goto	l6740
  4559  0AD1                     __end_of_lcd_gotoxy:	
  4560  0AD1                     __ptext521:	
  4561 ;; =============== function _putch ends ============
  4562                           
  4563                           
  4564 ;; *************** function _lcd_putc *****************
  4565 ;; Defined at:
  4566 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;  c               1    wreg     unsigned char 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  c               1   10[COMMON] unsigned char 
  4571 ;; Return value:  Size  Location     Type
  4572 ;;		None               void
  4573 ;; Registers used:
  4574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/20
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4580 ;;      Params:         0       0       0       0       0
  4581 ;;      Locals:         1       0       0       0       0
  4582 ;;      Temps:          0       0       0       0       0
  4583 ;;      Totals:         1       0       0       0       0
  4584 ;;Total ram usage:        1 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    3
  4587 ;; This function calls:
  4588 ;;		_lcd_put_byte
  4589 ;;		_lcd_busy
  4590 ;;		_lcd_gotoxy
  4591 ;;		_isprint
  4592 ;; This function is called by:
  4593 ;;		_putch
  4594 ;; This function uses a non-reentrant model
  4595 ;;
  4596  0AD1                     _lcd_putc:	
  4597                           
  4598                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4599                           ;lcd_putc@c stored from wreg
  4600  0AD1  00FA               	movwf	lcd_putc@c
  4601                           
  4602                           ;lcd(16).c: 144: switch(c){
  4603  0AD2  2AF7               	goto	l6826
  4604  0AD3                     l6812:	
  4605  0AD3  3000               	movlw	0
  4606                           
  4607                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4608  0AD4  01F2               	clrf	?_lcd_put_byte
  4609  0AD5  0AF2               	incf	?_lcd_put_byte,f
  4610  0AD6  23BB  120A  158A   	fcall	_lcd_put_byte
  4611  0AD9                     l6814:	
  4612                           ;lcd(16).c: 147: while(lcd_busy());
  4613                           
  4614  0AD9  244B  120A  158A   	fcall	_lcd_busy
  4615  0ADC  3800               	iorlw	0
  4616  0ADD  1903               	btfsc	3,2
  4617  0ADE  0008               	return
  4618  0ADF  2AD9               	goto	l6814
  4619  0AE0                     l6816:	
  4620  0AE0  3000               	movlw	0
  4621                           
  4622                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4623  0AE1  01F7               	clrf	?_lcd_gotoxy
  4624  0AE2  0AF7               	incf	?_lcd_gotoxy,f
  4625  0AE3  2AB9               	ljmp	_lcd_gotoxy
  4626  0AE4                     l6818:	
  4627                           ;lcd(16).c: 151: break;
  4628                           
  4629                           
  4630                           ;lcd(16).c: 153: if(isprint(c)){
  4631  0AE4  087A               	movf	lcd_putc@c,w
  4632  0AE5  2472  120A  158A   	fcall	_isprint
  4633  0AE8  1C03               	btfss	3,0
  4634  0AE9  0008               	return
  4635                           
  4636                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4637  0AEA  087A               	movf	lcd_putc@c,w
  4638  0AEB  00F2               	movwf	?_lcd_put_byte
  4639  0AEC  3001               	movlw	1
  4640  0AED  23BB  120A  158A   	fcall	_lcd_put_byte
  4641  0AF0                     l6822:	
  4642                           ;lcd(16).c: 155: while(lcd_busy());
  4643                           
  4644  0AF0  244B  120A  158A   	fcall	_lcd_busy
  4645  0AF3  3800               	iorlw	0
  4646  0AF4  1903               	btfsc	3,2
  4647  0AF5  0008               	return
  4648  0AF6  2AF0               	goto	l6822
  4649  0AF7                     l6826:	
  4650  0AF7  087A               	movf	lcd_putc@c,w
  4651                           
  4652                           ; Switch size 1, requested type "space"
  4653                           ; Number of cases is 2, Range of values is 10 to 12
  4654                           ; switch strategies available:
  4655                           ; Name         Instructions Cycles
  4656                           ; simple_byte            7     4 (average)
  4657                           ; direct_byte           20    11 (fixed)
  4658                           ; jumptable            263     9 (fixed)
  4659                           ;	Chosen strategy is simple_byte
  4660  0AF8  3A0A               	xorlw	10	; case 10
  4661  0AF9  1903               	skipnz
  4662  0AFA  2AE0               	goto	l6816
  4663  0AFB  3A06               	xorlw	6	; case 12
  4664  0AFC  1903               	skipnz
  4665  0AFD  2AD3               	goto	l6812
  4666  0AFE  2AE4               	goto	l6818
  4667  0AFF  0008               	return
  4668  0B00                     __end_of_lcd_putc:	
  4669  0B00                     __ptext526:	
  4670 ;; =============== function _lcd_gotoxy ends ============
  4671                           
  4672                           
  4673 ;; *************** function _lcd_init *****************
  4674 ;; Defined at:
  4675 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  i               1    0        unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0, pclath, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 17F/60
  4686 ;;		On exit  : 60/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4689 ;;      Params:         0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0
  4691 ;;      Temps:          3       0       0       0       0
  4692 ;;      Totals:         3       0       0       0       0
  4693 ;;Total ram usage:        3 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    2
  4696 ;; This function calls:
  4697 ;;		_lcd_put_byte
  4698 ;;		_lcd_busy
  4699 ;; This function is called by:
  4700 ;;		_main
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703  0B00                     _lcd_init:	
  4704                           
  4705                           ;lcd(16).c: 6: unsigned char i;
  4706                           ;lcd(16).c: 7: TRISD3 = 0;
  4707                           
  4708                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4709  0B00  1303               	bcf	3,6	;RP1=0, select bank1
  4710  0B01  1188               	bcf	8,3
  4711                           
  4712                           ;lcd(16).c: 8: TRISD1 = 0;
  4713  0B02  1088               	bcf	8,1
  4714                           
  4715                           ;lcd(16).c: 9: TRISD2 = 0;
  4716  0B03  1108               	bcf	8,2
  4717                           
  4718                           ;lcd(16).c: 10: TRISD4 = 0;
  4719  0B04  1208               	bcf	8,4
  4720                           
  4721                           ;lcd(16).c: 11: TRISD5 = 0;
  4722  0B05  1288               	bcf	8,5
  4723                           
  4724                           ;lcd(16).c: 12: TRISD6 = 0;
  4725  0B06  1308               	bcf	8,6
  4726                           
  4727                           ;lcd(16).c: 13: TRISD7 = 0;
  4728  0B07  1388               	bcf	8,7
  4729                           
  4730                           ;lcd(16).c: 14: RD3 = 0;
  4731  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  4732  0B09  3003               	movlw	3
  4733  0B0A  1188               	bcf	8,3
  4734                           
  4735                           ;lcd(16).c: 15: RD1 = 0;
  4736  0B0B  1088               	bcf	8,1
  4737                           
  4738                           ;lcd(16).c: 16: RD2 = 0;
  4739  0B0C  1108               	bcf	8,2
  4740                           
  4741                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4742  0B0D  00F9               	movwf	??_lcd_init+2
  4743  0B0E  308A               	movlw	138
  4744  0B0F  00F8               	movwf	??_lcd_init+1
  4745  0B10  3056               	movlw	86
  4746  0B11  00F7               	movwf	??_lcd_init
  4747  0B12                     u3957:	
  4748  0B12  0BF7               	decfsz	??_lcd_init,f
  4749  0B13  2B12               	goto	u3957
  4750  0B14  0BF8               	decfsz	??_lcd_init+1,f
  4751  0B15  2B12               	goto	u3957
  4752  0B16  0BF9               	decfsz	??_lcd_init+2,f
  4753  0B17  2B12               	goto	u3957
  4754  0B18  2B19               	nop2
  4755                           
  4756                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4757  0B19  3030               	movlw	48
  4758  0B1A  00F2               	movwf	?_lcd_put_byte
  4759  0B1B  3000               	movlw	0
  4760  0B1C  23BB  120A  158A   	fcall	_lcd_put_byte
  4761                           
  4762                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4763  0B1F  3002               	movlw	2
  4764  0B20  00F9               	movwf	??_lcd_init+2
  4765  0B21  3045               	movlw	69
  4766  0B22  00F8               	movwf	??_lcd_init+1
  4767  0B23  30A9               	movlw	169
  4768  0B24  00F7               	movwf	??_lcd_init
  4769  0B25                     u3967:	
  4770  0B25  0BF7               	decfsz	??_lcd_init,f
  4771  0B26  2B25               	goto	u3967
  4772  0B27  0BF8               	decfsz	??_lcd_init+1,f
  4773  0B28  2B25               	goto	u3967
  4774  0B29  0BF9               	decfsz	??_lcd_init+2,f
  4775  0B2A  2B25               	goto	u3967
  4776  0B2B  2B2C               	nop2
  4777                           
  4778                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4779  0B2C  3030               	movlw	48
  4780  0B2D  00F2               	movwf	?_lcd_put_byte
  4781  0B2E  3000               	movlw	0
  4782  0B2F  23BB  120A  158A   	fcall	_lcd_put_byte
  4783                           
  4784                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4785  0B32  3002               	movlw	2
  4786  0B33  00F9               	movwf	??_lcd_init+2
  4787  0B34  3045               	movlw	69
  4788  0B35  00F8               	movwf	??_lcd_init+1
  4789  0B36  30A9               	movlw	169
  4790  0B37  00F7               	movwf	??_lcd_init
  4791  0B38                     u3977:	
  4792  0B38  0BF7               	decfsz	??_lcd_init,f
  4793  0B39  2B38               	goto	u3977
  4794  0B3A  0BF8               	decfsz	??_lcd_init+1,f
  4795  0B3B  2B38               	goto	u3977
  4796  0B3C  0BF9               	decfsz	??_lcd_init+2,f
  4797  0B3D  2B38               	goto	u3977
  4798  0B3E  2B3F               	nop2
  4799                           
  4800                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4801  0B3F  3032               	movlw	50
  4802  0B40  00F2               	movwf	?_lcd_put_byte
  4803  0B41  3000               	movlw	0
  4804  0B42  23BB  120A  158A   	fcall	_lcd_put_byte
  4805                           
  4806                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4807  0B45  3003               	movlw	3
  4808  0B46  00F9               	movwf	??_lcd_init+2
  4809  0B47  308A               	movlw	138
  4810  0B48  00F8               	movwf	??_lcd_init+1
  4811  0B49  3056               	movlw	86
  4812  0B4A  00F7               	movwf	??_lcd_init
  4813  0B4B                     u3987:	
  4814  0B4B  0BF7               	decfsz	??_lcd_init,f
  4815  0B4C  2B4B               	goto	u3987
  4816  0B4D  0BF8               	decfsz	??_lcd_init+1,f
  4817  0B4E  2B4B               	goto	u3987
  4818  0B4F  0BF9               	decfsz	??_lcd_init+2,f
  4819  0B50  2B4B               	goto	u3987
  4820  0B51  2B52               	nop2
  4821                           
  4822                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4823  0B52  3003               	movlw	3
  4824  0B53  00F9               	movwf	??_lcd_init+2
  4825  0B54  308A               	movlw	138
  4826  0B55  00F8               	movwf	??_lcd_init+1
  4827  0B56  3056               	movlw	86
  4828  0B57  00F7               	movwf	??_lcd_init
  4829  0B58                     u3997:	
  4830  0B58  0BF7               	decfsz	??_lcd_init,f
  4831  0B59  2B58               	goto	u3997
  4832  0B5A  0BF8               	decfsz	??_lcd_init+1,f
  4833  0B5B  2B58               	goto	u3997
  4834  0B5C  0BF9               	decfsz	??_lcd_init+2,f
  4835  0B5D  2B58               	goto	u3997
  4836  0B5E  2B5F               	nop2
  4837                           
  4838                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4839  0B5F  3003               	movlw	3
  4840  0B60  00F9               	movwf	??_lcd_init+2
  4841  0B61  308A               	movlw	138
  4842  0B62  00F8               	movwf	??_lcd_init+1
  4843  0B63  3056               	movlw	86
  4844  0B64  00F7               	movwf	??_lcd_init
  4845  0B65                     u4007:	
  4846  0B65  0BF7               	decfsz	??_lcd_init,f
  4847  0B66  2B65               	goto	u4007
  4848  0B67  0BF8               	decfsz	??_lcd_init+1,f
  4849  0B68  2B65               	goto	u4007
  4850  0B69  0BF9               	decfsz	??_lcd_init+2,f
  4851  0B6A  2B65               	goto	u4007
  4852  0B6B  2B6C               	nop2
  4853  0B6C                     l6704:	
  4854                           ;lcd(16).c: 30: while(lcd_busy());
  4855                           
  4856  0B6C  244B  120A  158A   	fcall	_lcd_busy
  4857  0B6F  3800               	iorlw	0
  4858  0B70  1D03               	skipz
  4859  0B71  2B6C               	goto	l6704
  4860                           
  4861                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4862  0B72  3028               	movlw	40
  4863  0B73  00F2               	movwf	?_lcd_put_byte
  4864  0B74  3000               	movlw	0
  4865  0B75  23BB  120A  158A   	fcall	_lcd_put_byte
  4866  0B78                     l6708:	
  4867                           ;lcd(16).c: 32: while(lcd_busy());
  4868                           
  4869  0B78  244B  120A  158A   	fcall	_lcd_busy
  4870  0B7B  3800               	iorlw	0
  4871  0B7C  1D03               	skipz
  4872  0B7D  2B78               	goto	l6708
  4873                           
  4874                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4875  0B7E  3008               	movlw	8
  4876  0B7F  00F2               	movwf	?_lcd_put_byte
  4877  0B80  3000               	movlw	0
  4878  0B81  23BB  120A  158A   	fcall	_lcd_put_byte
  4879  0B84                     l6712:	
  4880                           ;lcd(16).c: 35: while(lcd_busy());
  4881                           
  4882  0B84  244B  120A  158A   	fcall	_lcd_busy
  4883  0B87  3800               	iorlw	0
  4884  0B88  1D03               	skipz
  4885  0B89  2B84               	goto	l6712
  4886                           
  4887                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4888  0B8A  300C               	movlw	12
  4889  0B8B  00F2               	movwf	?_lcd_put_byte
  4890  0B8C  3000               	movlw	0
  4891  0B8D  23BB  120A  158A   	fcall	_lcd_put_byte
  4892  0B90                     l6716:	
  4893                           ;lcd(16).c: 37: while(lcd_busy());
  4894                           
  4895  0B90  244B  120A  158A   	fcall	_lcd_busy
  4896  0B93  3800               	iorlw	0
  4897  0B94  1D03               	skipz
  4898  0B95  2B90               	goto	l6716
  4899  0B96  3000               	movlw	0
  4900                           
  4901                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4902  0B97  01F2               	clrf	?_lcd_put_byte
  4903  0B98  0AF2               	incf	?_lcd_put_byte,f
  4904  0B99  23BB  120A  158A   	fcall	_lcd_put_byte
  4905  0B9C                     l6720:	
  4906                           ;lcd(16).c: 40: while(lcd_busy());
  4907                           
  4908  0B9C  244B  120A  158A   	fcall	_lcd_busy
  4909  0B9F  3800               	iorlw	0
  4910  0BA0  1D03               	skipz
  4911  0BA1  2B9C               	goto	l6720
  4912                           
  4913                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  4914  0BA2  3004               	movlw	4
  4915  0BA3  00F2               	movwf	?_lcd_put_byte
  4916  0BA4  3000               	movlw	0
  4917  0BA5  23BB  120A  158A   	fcall	_lcd_put_byte
  4918  0BA8                     l6724:	
  4919                           ;lcd(16).c: 42: while(lcd_busy());
  4920                           
  4921  0BA8  244B  120A  158A   	fcall	_lcd_busy
  4922  0BAB  3800               	iorlw	0
  4923  0BAC  1D03               	skipz
  4924  0BAD  2BA8               	goto	l6724
  4925  0BAE  3000               	movlw	0
  4926                           
  4927                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  4928  0BAF  01F2               	clrf	?_lcd_put_byte
  4929  0BB0  0AF2               	incf	?_lcd_put_byte,f
  4930  0BB1  23BB  120A  158A   	fcall	_lcd_put_byte
  4931  0BB4                     l6728:	
  4932                           ;lcd(16).c: 44: while(lcd_busy());
  4933                           
  4934  0BB4  244B  120A  158A   	fcall	_lcd_busy
  4935  0BB7  3800               	iorlw	0
  4936  0BB8  1903               	btfsc	3,2
  4937  0BB9  0008               	return
  4938  0BBA  2BB4               	goto	l6728
  4939  0BBB                     __end_of_lcd_init:	
  4940  0BBB                     __ptext532:	
  4941 ;; =============== function _lcd_busy ends ============
  4942                           
  4943                           
  4944 ;; *************** function _lcd_put_byte *****************
  4945 ;; Defined at:
  4946 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  rs              1    wreg     unsigned char 
  4949 ;;  b               1    2[COMMON] unsigned char 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  rs              1    5[COMMON] unsigned char 
  4952 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  4953 ;; Return value:  Size  Location     Type
  4954 ;;		None               void
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/20
  4959 ;;		On exit  : 60/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4962 ;;      Params:         1       0       0       0       0
  4963 ;;      Locals:         2       0       0       0       0
  4964 ;;      Temps:          2       0       0       0       0
  4965 ;;      Totals:         5       0       0       0       0
  4966 ;;Total ram usage:        5 bytes
  4967 ;; Hardware stack levels used:    1
  4968 ;; Hardware stack levels required when called:    1
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_lcd_init
  4973 ;;		_lcd_putc
  4974 ;;		_lcd_gotoxy
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977  0BBB                     _lcd_put_byte:	
  4978                           
  4979                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  4980                           ;lcd_put_byte@rs stored from wreg
  4981  0BBB  00F5               	movwf	lcd_put_byte@rs
  4982                           
  4983                           ;lcd(16).c: 107: BYTE_VAL temp;
  4984                           ;lcd(16).c: 109: TRISD4 = 0;
  4985  0BBC  1683               	bsf	3,5	;RP0=1, select bank1
  4986  0BBD  1303               	bcf	3,6	;RP1=0, select bank1
  4987  0BBE  1208               	bcf	8,4
  4988                           
  4989                           ;lcd(16).c: 110: TRISD5 = 0;
  4990  0BBF  1288               	bcf	8,5
  4991                           
  4992                           ;lcd(16).c: 111: TRISD6 = 0;
  4993  0BC0  1308               	bcf	8,6
  4994                           
  4995                           ;lcd(16).c: 112: TRISD7 = 0;
  4996  0BC1  1388               	bcf	8,7
  4997                           
  4998                           ;lcd(16).c: 114: RD1 = 0;
  4999  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0BC3  1088               	bcf	8,1
  5001                           
  5002                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5003  0BC4  0875               	movf	lcd_put_byte@rs,w
  5004  0BC5  1D03               	skipz
  5005  0BC6  1488               	bsf	8,1
  5006                           
  5007                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5008  0BC7  3021               	movlw	33
  5009  0BC8  00F3               	movwf	??_lcd_put_byte
  5010  0BC9                     u4057:	
  5011  0BC9  0BF3               	decfsz	??_lcd_put_byte,f
  5012  0BCA  2BC9               	goto	u4057
  5013  0BCB  2487               	call	PL33	;select bank 0
  5014                           
  5015                           ;lcd(16).c: 118: RD2 = 0;
  5016  0BCC  3021               	movlw	33
  5017  0BCD  1108               	bcf	8,2
  5018                           
  5019                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5020  0BCE  00F3               	movwf	??_lcd_put_byte
  5021  0BCF                     u4067:	
  5022  0BCF  0BF3               	decfsz	??_lcd_put_byte,f
  5023  0BD0  2BCF               	goto	u4067
  5024  0BD1  2487               	call	PL33	;select bank 0
  5025                           
  5026                           ;lcd(16).c: 120: RD3 = 0;
  5027  0BD2  1188               	bcf	8,3
  5028                           
  5029                           ;lcd(16).c: 122: temp.Val = b;
  5030  0BD3  0872               	movf	lcd_put_byte@b,w
  5031  0BD4  00F6               	movwf	lcd_put_byte@temp
  5032                           
  5033                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5034  0BD5  0E76               	swapf	lcd_put_byte@temp,w
  5035  0BD6  3901               	andlw	1
  5036  0BD7  00F3               	movwf	??_lcd_put_byte
  5037  0BD8  0C73               	rrf	??_lcd_put_byte,w
  5038  0BD9  1C03               	btfss	3,0
  5039  0BDA  2BDE               	goto	u2740
  5040  0BDB  2487               	call	PL33	;select bank 0
  5041  0BDC  1608               	bsf	8,4
  5042  0BDD  2BE0               	goto	l6496
  5043  0BDE                     u2740:	
  5044  0BDE  2487               	call	PL33	;select bank 0
  5045  0BDF  1208               	bcf	8,4
  5046  0BE0                     l6496:	
  5047                           
  5048                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5049  0BE0  0E76               	swapf	lcd_put_byte@temp,w
  5050  0BE1  00F3               	movwf	??_lcd_put_byte
  5051  0BE2  0C73               	rrf	??_lcd_put_byte,w
  5052  0BE3  3901               	andlw	1
  5053  0BE4  00F4               	movwf	??_lcd_put_byte+1
  5054  0BE5  0C74               	rrf	??_lcd_put_byte+1,w
  5055  0BE6  1C03               	btfss	3,0
  5056  0BE7  2BEB               	goto	u2760
  5057  0BE8  2487               	call	PL33	;select bank 0
  5058  0BE9  1688               	bsf	8,5
  5059  0BEA  2BED               	goto	l6498
  5060  0BEB                     u2760:	
  5061  0BEB  2487               	call	PL33	;select bank 0
  5062  0BEC  1288               	bcf	8,5
  5063  0BED                     l6498:	
  5064                           
  5065                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5066  0BED  0E76               	swapf	lcd_put_byte@temp,w
  5067  0BEE  2480  120A  158A   	fcall	PL29	;call to abstracted procedure
  5068  0BF1  1C03               	btfss	3,0
  5069  0BF2  2BF6               	goto	u2780
  5070  0BF3  2487               	call	PL33	;select bank 0
  5071  0BF4  1708               	bsf	8,6
  5072  0BF5  2BF8               	goto	l6500
  5073  0BF6                     u2780:	
  5074  0BF6  2487               	call	PL33	;select bank 0
  5075  0BF7  1308               	bcf	8,6
  5076  0BF8                     l6500:	
  5077                           
  5078                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5079  0BF8  0D76               	rlf	lcd_put_byte@temp,w
  5080  0BF9  0D76               	rlf	lcd_put_byte@temp,w
  5081  0BFA  3901               	andlw	1
  5082  0BFB  00F3               	movwf	??_lcd_put_byte
  5083  0BFC  0C73               	rrf	??_lcd_put_byte,w
  5084  0BFD  1C03               	btfss	3,0
  5085  0BFE  2C02               	goto	u2800
  5086  0BFF  2487               	call	PL33	;select bank 0
  5087  0C00  1788               	bsf	8,7
  5088  0C01  2C04               	goto	u2814
  5089  0C02                     u2800:	
  5090  0C02  2487               	call	PL33	;select bank 0
  5091  0C03  1388               	bcf	8,7
  5092  0C04                     u2814:	
  5093                           
  5094                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5095  0C04  3021               	movlw	33
  5096  0C05  00F3               	movwf	??_lcd_put_byte
  5097  0C06                     u4077:	
  5098  0C06  0BF3               	decfsz	??_lcd_put_byte,f
  5099  0C07  2C06               	goto	u4077
  5100  0C08  2487               	call	PL33	;select bank 0
  5101                           
  5102                           ;lcd(16).c: 130: RD3 = 1;
  5103  0C09  3021               	movlw	33
  5104  0C0A  1588               	bsf	8,3
  5105                           
  5106                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5107  0C0B  00F3               	movwf	??_lcd_put_byte
  5108  0C0C                     u4087:	
  5109  0C0C  0BF3               	decfsz	??_lcd_put_byte,f
  5110  0C0D  2C0C               	goto	u4087
  5111  0C0E  2487               	call	PL33	;select bank 0
  5112                           
  5113                           ;lcd(16).c: 132: RD3 = 0;
  5114  0C0F  1188               	bcf	8,3
  5115                           
  5116                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5117  0C10  0876               	movf	lcd_put_byte@temp,w
  5118  0C11  3901               	andlw	1
  5119  0C12  00F3               	movwf	??_lcd_put_byte
  5120  0C13  0C73               	rrf	??_lcd_put_byte,w
  5121  0C14  1C03               	btfss	3,0
  5122  0C15  2C19               	goto	u2820
  5123  0C16  2487               	call	PL33	;select bank 0
  5124  0C17  1608               	bsf	8,4
  5125  0C18  2C1B               	goto	l6508
  5126  0C19                     u2820:	
  5127  0C19  2487               	call	PL33	;select bank 0
  5128  0C1A  1208               	bcf	8,4
  5129  0C1B                     l6508:	
  5130                           
  5131                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5132  0C1B  0C76               	rrf	lcd_put_byte@temp,w
  5133  0C1C  3901               	andlw	1
  5134  0C1D  00F3               	movwf	??_lcd_put_byte
  5135  0C1E  0C73               	rrf	??_lcd_put_byte,w
  5136  0C1F  1C03               	btfss	3,0
  5137  0C20  2C24               	goto	u2840
  5138  0C21  2487               	call	PL33	;select bank 0
  5139  0C22  1688               	bsf	8,5
  5140  0C23  2C26               	goto	l6510
  5141  0C24                     u2840:	
  5142  0C24  2487               	call	PL33	;select bank 0
  5143  0C25  1288               	bcf	8,5
  5144  0C26                     l6510:	
  5145                           
  5146                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5147  0C26  0C76               	rrf	lcd_put_byte@temp,w
  5148  0C27  00F3               	movwf	??_lcd_put_byte
  5149  0C28  0C73               	rrf	??_lcd_put_byte,w
  5150  0C29  3901               	andlw	1
  5151  0C2A  00F4               	movwf	??_lcd_put_byte+1
  5152  0C2B  0C74               	rrf	??_lcd_put_byte+1,w
  5153  0C2C  1C03               	btfss	3,0
  5154  0C2D  2C31               	goto	u2860
  5155  0C2E  2487               	call	PL33	;select bank 0
  5156  0C2F  1708               	bsf	8,6
  5157  0C30  2C33               	goto	l6512
  5158  0C31                     u2860:	
  5159  0C31  2487               	call	PL33	;select bank 0
  5160  0C32  1308               	bcf	8,6
  5161  0C33                     l6512:	
  5162                           
  5163                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5164  0C33  0C76               	rrf	lcd_put_byte@temp,w
  5165  0C34  2480  120A  158A   	fcall	PL29	;call to abstracted procedure
  5166  0C37  1C03               	btfss	3,0
  5167  0C38  2C3C               	goto	u2880
  5168  0C39  2487               	call	PL33	;select bank 0
  5169  0C3A  1788               	bsf	8,7
  5170  0C3B  2C3E               	goto	u2894
  5171  0C3C                     u2880:	
  5172  0C3C  2487               	call	PL33	;select bank 0
  5173  0C3D  1388               	bcf	8,7
  5174  0C3E                     u2894:	
  5175                           
  5176                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5177  0C3E  3021               	movlw	33
  5178  0C3F  00F3               	movwf	??_lcd_put_byte
  5179  0C40                     u4097:	
  5180  0C40  0BF3               	decfsz	??_lcd_put_byte,f
  5181  0C41  2C40               	goto	u4097
  5182  0C42  2487               	call	PL33	;select bank 0
  5183                           
  5184                           ;lcd(16).c: 139: RD3 = 1;
  5185  0C43  3021               	movlw	33
  5186  0C44  1588               	bsf	8,3
  5187                           
  5188                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5189  0C45  00F3               	movwf	??_lcd_put_byte
  5190  0C46                     u4107:	
  5191  0C46  0BF3               	decfsz	??_lcd_put_byte,f
  5192  0C47  2C46               	goto	u4107
  5193  0C48  2487               	call	PL33	;select bank 0
  5194                           
  5195                           ;lcd(16).c: 141: RD3 = 0;
  5196  0C49  1188               	bcf	8,3
  5197  0C4A  0008               	return
  5198  0C4B                     __end_of_lcd_put_byte:	
  5199  0C4B                     __ptext531:	
  5200 ;; =============== function ___ftadd ends ============
  5201                           
  5202                           
  5203 ;; *************** function _lcd_busy *****************
  5204 ;; Defined at:
  5205 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  busy            1    3[COMMON] unsigned char 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      unsigned char 
  5212 ;; Registers used:
  5213 ;;		wreg
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 60/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5219 ;;      Params:         0       0       0       0       0
  5220 ;;      Locals:         1       0       0       0       0
  5221 ;;      Temps:          1       0       0       0       0
  5222 ;;      Totals:         2       0       0       0       0
  5223 ;;Total ram usage:        2 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_lcd_init
  5230 ;;		_lcd_putc
  5231 ;;		_lcd_gotoxy
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234  0C4B                     _lcd_busy:	
  5235                           
  5236                           ;lcd(16).c: 48: unsigned char busy;
  5237                           ;lcd(16).c: 50: TRISD4 = 1;
  5238                           
  5239                           ; Regs used in _lcd_busy: [wreg]
  5240  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
  5241  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
  5242  0C4D  1608               	bsf	8,4
  5243                           
  5244                           ;lcd(16).c: 51: TRISD5 = 1;
  5245  0C4E  1688               	bsf	8,5
  5246                           
  5247                           ;lcd(16).c: 52: TRISD6 = 1;
  5248  0C4F  1708               	bsf	8,6
  5249                           
  5250                           ;lcd(16).c: 53: TRISD7 = 1;
  5251  0C50  1788               	bsf	8,7
  5252                           
  5253                           ;lcd(16).c: 55: RD2 = 1;
  5254  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5255  0C52  3021               	movlw	33
  5256  0C53  1508               	bsf	8,2
  5257                           
  5258                           ;lcd(16).c: 56: RD1 = 0;
  5259  0C54  1088               	bcf	8,1
  5260                           
  5261                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5262  0C55  00F2               	movwf	??_lcd_busy
  5263  0C56                     u4017:	
  5264  0C56  0BF2               	decfsz	??_lcd_busy,f
  5265  0C57  2C56               	goto	u4017
  5266  0C58  2487               	call	PL33	;select bank 0
  5267                           
  5268                           ;lcd(16).c: 58: RD3 = 1;
  5269  0C59  3021               	movlw	33
  5270  0C5A  1588               	bsf	8,3
  5271                           
  5272                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5273  0C5B  00F2               	movwf	??_lcd_busy
  5274  0C5C                     u4027:	
  5275  0C5C  0BF2               	decfsz	??_lcd_busy,f
  5276  0C5D  2C5C               	goto	u4027
  5277                           
  5278                           ;lcd(16).c: 61: busy = RD7;
  5279  0C5E  3000               	movlw	0
  5280  0C5F  2487               	call	PL33	;select bank 0
  5281  0C60  1B88               	btfsc	8,7
  5282  0C61  3001               	movlw	1
  5283  0C62  00F3               	movwf	lcd_busy@busy
  5284  0C63  3021               	movlw	33
  5285                           
  5286                           ;lcd(16).c: 63: RD3 = 0;
  5287  0C64  1188               	bcf	8,3
  5288                           
  5289                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5290  0C65  00F2               	movwf	??_lcd_busy
  5291  0C66                     u4037:	
  5292  0C66  0BF2               	decfsz	??_lcd_busy,f
  5293  0C67  2C66               	goto	u4037
  5294  0C68  2487               	call	PL33	;select bank 0
  5295                           
  5296                           ;lcd(16).c: 65: RD3 = 1;
  5297  0C69  3021               	movlw	33
  5298  0C6A  1588               	bsf	8,3
  5299                           
  5300                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5301  0C6B  00F2               	movwf	??_lcd_busy
  5302  0C6C                     u4047:	
  5303  0C6C  0BF2               	decfsz	??_lcd_busy,f
  5304  0C6D  2C6C               	goto	u4047
  5305  0C6E  2487               	call	PL33	;select bank 0
  5306                           
  5307                           ;lcd(16).c: 67: RD3 = 0;
  5308  0C6F  1188               	bcf	8,3
  5309                           
  5310                           ;lcd(16).c: 70: return busy;
  5311  0C70  0873               	movf	lcd_busy@busy,w
  5312  0C71  0008               	return
  5313  0C72                     __end_of_lcd_busy:	
  5314  0C72                     __ptext548:	
  5315 ;; =============== function _isdigit ends ============
  5316                           
  5317                           
  5318 ;; *************** function _isprint *****************
  5319 ;; Defined at:
  5320 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  c               1    wreg     unsigned char 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  c               1    3[COMMON] unsigned char 
  5325 ;; Return value:  Size  Location     Type
  5326 ;;		None               void
  5327 ;; Registers used:
  5328 ;;		wreg, status,2, status,0
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/20
  5331 ;;		On exit  : 0/20
  5332 ;;		Unchanged: FFFFF/0
  5333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5334 ;;      Params:         0       0       0       0       0
  5335 ;;      Locals:         2       0       0       0       0
  5336 ;;      Temps:          0       0       0       0       0
  5337 ;;      Totals:         2       0       0       0       0
  5338 ;;Total ram usage:        2 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    1
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_lcd_putc
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347  0C72                     _isprint:	
  5348                           
  5349                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5350                           ;isprint@c stored from wreg
  5351  0C72  00F3               	movwf	isprint@c
  5352  0C73  307F               	movlw	127
  5353  0C74  01F2               	clrf	_isprint$3674
  5354  0C75  0273               	subwf	isprint@c,w
  5355  0C76  1803               	skipnc
  5356  0C77  2C7E               	goto	l6078
  5357  0C78  3020               	movlw	32
  5358  0C79  0273               	subwf	isprint@c,w
  5359  0C7A  1C03               	skipc
  5360  0C7B  2C7E               	goto	l6078
  5361  0C7C  01F2               	clrf	_isprint$3674
  5362  0C7D  0AF2               	incf	_isprint$3674,f
  5363  0C7E                     l6078:	
  5364  0C7E  0C72               	rrf	_isprint$3674,w
  5365  0C7F  0008               	return
  5366  0C80                     __end_of_isprint:	
  5367  0C80                     PL29:	
  5368  0C80  00F3               	movwf	??_lcd_put_byte
  5369  0C81  0CF3               	rrf	??_lcd_put_byte,f
  5370  0C82  0C73               	rrf	??_lcd_put_byte,w
  5371  0C83  3901               	andlw	1
  5372  0C84  00F4               	movwf	??_lcd_put_byte+1
  5373  0C85  0C74               	rrf	??_lcd_put_byte+1,w
  5374  0C86  0008               	return
  5375  0C87                     PL33:	
  5376  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0C89  0008               	return
  5379                           
  5380                           	psect	text527
  5381  0C8A                     __ptext527:	
  5382 ;; =============== function _lcd_init ends ============
  5383                           
  5384                           
  5385 ;; *************** function ___lltoft *****************
  5386 ;; Defined at:
  5387 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  c               4    0[BANK0 ] unsigned long 
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;  exp             1   10[COMMON] unsigned char 
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  3    0[BANK0 ] float 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2, status,0, pclath, cstack
  5396 ;; Tracked objects:
  5397 ;;		On entry : 60/0
  5398 ;;		On exit  : 60/0
  5399 ;;		Unchanged: FFF9F/0
  5400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5401 ;;      Params:         0       4       0       0       0
  5402 ;;      Locals:         1       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0
  5404 ;;      Totals:         1       4       0       0       0
  5405 ;;Total ram usage:        5 bytes
  5406 ;; Hardware stack levels used:    1
  5407 ;; Hardware stack levels required when called:    2
  5408 ;; This function calls:
  5409 ;;		___ftpack
  5410 ;; This function is called by:
  5411 ;;		_printf
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414  0C8A                     ___lltoft:	
  5415                           
  5416                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5417  0C8A  308E               	movlw	142
  5418  0C8B  00FA               	movwf	___lltoft@exp
  5419  0C8C                     l6686:	
  5420  0C8C  30FF               	movlw	255
  5421  0C8D  0523               	andwf	___lltoft@c+3,w
  5422  0C8E  1903               	btfsc	3,2
  5423  0C8F  2C97               	goto	l6688
  5424  0C90  1003               	clrc
  5425  0C91  0CA3               	rrf	___lltoft@c+3,f
  5426  0C92  0CA2               	rrf	___lltoft@c+2,f
  5427  0C93  0CA1               	rrf	___lltoft@c+1,f
  5428  0C94  0CA0               	rrf	___lltoft@c,f
  5429  0C95  0AFA               	incf	___lltoft@exp,f
  5430  0C96  2C8C               	goto	l6686
  5431  0C97                     l6688:	
  5432  0C97  0820               	movf	___lltoft@c,w
  5433  0C98  00F2               	movwf	?___ftpack
  5434  0C99  0821               	movf	___lltoft@c+1,w
  5435  0C9A  00F3               	movwf	?___ftpack+1
  5436  0C9B  0822               	movf	___lltoft@c+2,w
  5437  0C9C  00F4               	movwf	?___ftpack+2
  5438  0C9D  087A               	movf	___lltoft@exp,w
  5439  0C9E  00F5               	movwf	?___ftpack+3
  5440  0C9F  01F6               	clrf	?___ftpack+4
  5441  0CA0  2769               	fcall	___ftpack
  5442  0CA1  0872               	movf	?___ftpack,w
  5443  0CA2  00A0               	movwf	?___lltoft
  5444  0CA3  0873               	movf	?___ftpack+1,w
  5445  0CA4  00A1               	movwf	?___lltoft+1
  5446  0CA5  0874               	movf	?___ftpack+2,w
  5447  0CA6  00A2               	movwf	?___lltoft+2
  5448  0CA7  0008               	return
  5449  0CA8                     __end_of___lltoft:	
  5450  0CA8                     __ptext528:	
  5451 ;; =============== function ___lltoft ends ============
  5452                           
  5453                           
  5454 ;; *************** function ___altoft *****************
  5455 ;; Defined at:
  5456 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  c               4    0[BANK0 ] long 
  5459 ;; Auto vars:     Size  Location     Type
  5460 ;;  sign            1   11[COMMON] unsigned char 
  5461 ;;  exp             1   10[COMMON] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  3    0[BANK0 ] float 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0, pclath, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 60/0
  5468 ;;		On exit  : 60/0
  5469 ;;		Unchanged: FFF9F/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5471 ;;      Params:         0       4       0       0       0
  5472 ;;      Locals:         2       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0
  5474 ;;      Totals:         2       4       0       0       0
  5475 ;;Total ram usage:        6 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    2
  5478 ;; This function calls:
  5479 ;;		___ftpack
  5480 ;; This function is called by:
  5481 ;;		_main
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484  0CA8                     ___altoft:	
  5485  0CA8  308E               	movlw	142
  5486                           
  5487                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5488  0CA9  01FB               	clrf	___altoft@sign
  5489  0CAA  00FA               	movwf	___altoft@exp
  5490  0CAB  1FA3               	btfss	___altoft@c+3,7
  5491  0CAC  2CBA               	goto	l6676
  5492  0CAD  09A0               	comf	___altoft@c,f
  5493  0CAE  09A1               	comf	___altoft@c+1,f
  5494  0CAF  09A2               	comf	___altoft@c+2,f
  5495  0CB0  09A3               	comf	___altoft@c+3,f
  5496  0CB1  0AA0               	incf	___altoft@c,f
  5497  0CB2  1903               	skipnz
  5498  0CB3  0AA1               	incf	___altoft@c+1,f
  5499  0CB4  1903               	skipnz
  5500  0CB5  0AA2               	incf	___altoft@c+2,f
  5501  0CB6  1903               	skipnz
  5502  0CB7  0AA3               	incf	___altoft@c+3,f
  5503  0CB8  01FB               	clrf	___altoft@sign
  5504  0CB9  0AFB               	incf	___altoft@sign,f
  5505  0CBA                     l6676:	
  5506  0CBA  30FF               	movlw	255
  5507  0CBB  0523               	andwf	___altoft@c+3,w
  5508  0CBC  1903               	btfsc	3,2
  5509  0CBD  2CC5               	goto	l6678
  5510  0CBE  1003               	clrc
  5511  0CBF  0CA3               	rrf	___altoft@c+3,f
  5512  0CC0  0CA2               	rrf	___altoft@c+2,f
  5513  0CC1  0CA1               	rrf	___altoft@c+1,f
  5514  0CC2  0CA0               	rrf	___altoft@c,f
  5515  0CC3  0AFA               	incf	___altoft@exp,f
  5516  0CC4  2CBA               	goto	l6676
  5517  0CC5                     l6678:	
  5518  0CC5  0820               	movf	___altoft@c,w
  5519  0CC6  00F2               	movwf	?___ftpack
  5520  0CC7  0821               	movf	___altoft@c+1,w
  5521  0CC8  00F3               	movwf	?___ftpack+1
  5522  0CC9  0822               	movf	___altoft@c+2,w
  5523  0CCA  00F4               	movwf	?___ftpack+2
  5524  0CCB  087A               	movf	___altoft@exp,w
  5525  0CCC  00F5               	movwf	?___ftpack+3
  5526  0CCD  087B               	movf	___altoft@sign,w
  5527  0CCE  00F6               	movwf	?___ftpack+4
  5528  0CCF  2769               	fcall	___ftpack
  5529  0CD0  0872               	movf	?___ftpack,w
  5530  0CD1  00A0               	movwf	?___altoft
  5531  0CD2  0873               	movf	?___ftpack+1,w
  5532  0CD3  00A1               	movwf	?___altoft+1
  5533  0CD4  0874               	movf	?___ftpack+2,w
  5534  0CD5  00A2               	movwf	?___altoft+2
  5535  0CD6  0008               	return
  5536  0CD7                     __end_of___altoft:	
  5537  0CD7                     __ptext523:	
  5538 ;; =============== function ___ftsub ends ============
  5539                           
  5540                           
  5541 ;; *************** function _scale *****************
  5542 ;; Defined at:
  5543 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  scl             1    wreg     char 
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;  scl             1   42[BANK0 ] char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  3   32[BANK0 ] char 
  5550 ;; Registers used:
  5551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 60/20
  5554 ;;		On exit  : 60/0
  5555 ;;		Unchanged: FFF9F/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5557 ;;      Params:         0       3       0       0       0
  5558 ;;      Locals:         0       4       0       0       0
  5559 ;;      Temps:          0       4       0       0       0
  5560 ;;      Totals:         0      11       0       0       0
  5561 ;;Total ram usage:       11 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    3
  5564 ;; This function calls:
  5565 ;;		___awmod
  5566 ;;		___awdiv
  5567 ;;		___ftmul
  5568 ;;		___bmul
  5569 ;; This function is called by:
  5570 ;;		_printf
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573  0CD7                     _scale:	
  5574                           
  5575                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5576                           ;scale@scl stored from wreg
  5577  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5578  0CD8  00CA               	movwf	scale@scl
  5579  0CD9  1FCA               	btfss	scale@scl,7
  5580  0CDA  2DA3               	goto	l6786
  5581  0CDB  09CA               	comf	scale@scl,f
  5582  0CDC  0ACA               	incf	scale@scl,f
  5583  0CDD  084A               	movf	scale@scl,w
  5584  0CDE  3A80               	xorlw	128
  5585  0CDF  3E12               	addlw	-238
  5586  0CE0  1C03               	skipc
  5587  0CE1  2D47               	goto	l6776
  5588  0CE2  300A               	movlw	10
  5589  0CE3  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5590  0CE6  26AF  120A  158A   	fcall	___awmod
  5591  0CE9  0873               	movf	?___awmod+1,w
  5592  0CEA  00FB               	movwf	?___awdiv+3
  5593  0CEB  0872               	movf	?___awmod,w
  5594  0CEC  00FA               	movwf	?___awdiv+2
  5595  0CED  2669  120A  158A   	fcall	___awdiv
  5596  0CF0  27F0               	fcall	PL25	;call to abstracted procedure
  5597  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5598  0CF2  0084               	movwf	4
  5599  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5600  0CF8  00B1               	movwf	?___ftmul
  5601  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5602  0CFE  00B2               	movwf	?___ftmul+1
  5603  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5604  0D04  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5605  0D07  1BFA               	btfsc	?___awdiv+2,7
  5606  0D08  03FB               	decf	?___awdiv+3,f
  5607  0D09  2669  120A  158A   	fcall	___awdiv
  5608  0D0C  27C3               	fcall	PL11	;call to abstracted procedure
  5609  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5610  0D0E  0084               	movwf	4
  5611  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5612  0D14  00B4               	movwf	?___ftmul+3
  5613  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5614  0D1A  00B5               	movwf	?___ftmul+4
  5615  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5616  0D20  00B6               	movwf	?___ftmul+5
  5617  0D21  26EC  120A  158A   	fcall	___ftmul
  5618  0D24  27A7  120A  158A   	fcall	PL7	;call to abstracted procedure
  5619  0D27  1BF4               	btfsc	?___awmod+2,7
  5620  0D28  03F5               	decf	?___awmod+3,f
  5621  0D29  26AF  120A  158A   	fcall	___awmod
  5622  0D2C  27BB               	fcall	PL10	;call to abstracted procedure
  5623  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5624  0D2E  0084               	movwf	4
  5625  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5626  0D34  00B1               	movwf	?___ftmul
  5627  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5628  0D3A  00B2               	movwf	?___ftmul+1
  5629  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5630  0D40  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5631  0D43  26EC  120A  158A   	fcall	___ftmul
  5632  0D46  2FB4               	ljmp	PL8	;call to abstracted procedure
  5633  0D47                     l6776:	
  5634  0D47  084A               	movf	scale@scl,w
  5635  0D48  3A80               	xorlw	128
  5636  0D49  3E75               	addlw	-139
  5637  0D4A  1C03               	skipc
  5638  0D4B  2D8C               	goto	l6782
  5639  0D4C  300A               	movlw	10
  5640  0D4D  00F2               	movwf	?___awmod
  5641  0D4E  01F3               	clrf	?___awmod+1
  5642  0D4F  084A               	movf	scale@scl,w
  5643  0D50  00F4               	movwf	?___awmod+2
  5644  0D51  01F5               	clrf	?___awmod+3
  5645  0D52  1BF4               	btfsc	?___awmod+2,7
  5646  0D53  03F5               	decf	?___awmod+3,f
  5647  0D54  26AF  120A  158A   	fcall	___awmod
  5648  0D57  27BB               	fcall	PL10	;call to abstracted procedure
  5649  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5650  0D59  0084               	movwf	4
  5651  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5652  0D5F  00B1               	movwf	?___ftmul
  5653  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5654  0D65  00B2               	movwf	?___ftmul+1
  5655  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5656  0D6B  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5657  0D6E  1BFA               	btfsc	?___awdiv+2,7
  5658  0D6F  03FB               	decf	?___awdiv+3,f
  5659  0D70  2669  120A  158A   	fcall	___awdiv
  5660  0D73  27C3               	fcall	PL11	;call to abstracted procedure
  5661  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5662  0D75  0084               	movwf	4
  5663  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5664  0D7B  00B4               	movwf	?___ftmul+3
  5665  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5666  0D81  00B5               	movwf	?___ftmul+4
  5667  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5668  0D87  00B6               	movwf	?___ftmul+5
  5669  0D88  26EC  120A  158A   	fcall	___ftmul
  5670  0D8B  2FB4               	ljmp	PL8	;call to abstracted procedure
  5671  0D8C                     l6782:	
  5672  0D8C  3003               	movlw	3
  5673  0D8D  00FB               	movwf	?___bmul
  5674  0D8E  084A               	movf	scale@scl,w
  5675  0D8F  275B               	fcall	___bmul
  5676  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5677  0D91  0084               	movwf	4
  5678  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5679  0D97  00C0               	movwf	?_scale
  5680  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5681  0D9D  00C1               	movwf	?_scale+1
  5682  0D9E  160A  118A  2000   	fcall	stringdir
  5683  0DA1  00C2               	movwf	?_scale+2
  5684  0DA2  0008               	return
  5685  0DA3                     l6786:	
  5686  0DA3  084A               	movf	scale@scl,w
  5687  0DA4  3A80               	xorlw	128
  5688  0DA5  3E12               	addlw	-238
  5689  0DA6  1C03               	skipc
  5690  0DA7  2E0D               	goto	l6794
  5691  0DA8  300A               	movlw	10
  5692  0DA9  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5693  0DAC  26AF  120A  158A   	fcall	___awmod
  5694  0DAF  0873               	movf	?___awmod+1,w
  5695  0DB0  00FB               	movwf	?___awdiv+3
  5696  0DB1  0872               	movf	?___awmod,w
  5697  0DB2  00FA               	movwf	?___awdiv+2
  5698  0DB3  2669  120A  158A   	fcall	___awdiv
  5699  0DB6  27F0               	fcall	PL25	;call to abstracted procedure
  5700  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5701  0DB8  0084               	movwf	4
  5702  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5703  0DBE  00B1               	movwf	?___ftmul
  5704  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5705  0DC4  00B2               	movwf	?___ftmul+1
  5706  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5707  0DCA  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5708  0DCD  1BFA               	btfsc	?___awdiv+2,7
  5709  0DCE  03FB               	decf	?___awdiv+3,f
  5710  0DCF  2669  120A  158A   	fcall	___awdiv
  5711  0DD2  27C3               	fcall	PL11	;call to abstracted procedure
  5712  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5713  0DD4  0084               	movwf	4
  5714  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5715  0DDA  00B4               	movwf	?___ftmul+3
  5716  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5717  0DE0  00B5               	movwf	?___ftmul+4
  5718  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5719  0DE6  00B6               	movwf	?___ftmul+5
  5720  0DE7  26EC  120A  158A   	fcall	___ftmul
  5721  0DEA  27A7  120A  158A   	fcall	PL7	;call to abstracted procedure
  5722  0DED  1BF4               	btfsc	?___awmod+2,7
  5723  0DEE  03F5               	decf	?___awmod+3,f
  5724  0DEF  26AF  120A  158A   	fcall	___awmod
  5725  0DF2  27BB               	fcall	PL10	;call to abstracted procedure
  5726  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5727  0DF4  0084               	movwf	4
  5728  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5729  0DFA  00B1               	movwf	?___ftmul
  5730  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5731  0E00  00B2               	movwf	?___ftmul+1
  5732  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5733  0E06  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  5734  0E09  26EC  120A  158A   	fcall	___ftmul
  5735  0E0C  2FB4               	ljmp	PL8	;call to abstracted procedure
  5736  0E0D                     l6794:	
  5737  0E0D  084A               	movf	scale@scl,w
  5738  0E0E  3A80               	xorlw	128
  5739  0E0F  3E75               	addlw	-139
  5740  0E10  1C03               	skipc
  5741  0E11  2E52               	goto	l6800
  5742  0E12  300A               	movlw	10
  5743  0E13  00F2               	movwf	?___awmod
  5744  0E14  01F3               	clrf	?___awmod+1
  5745  0E15  084A               	movf	scale@scl,w
  5746  0E16  00F4               	movwf	?___awmod+2
  5747  0E17  01F5               	clrf	?___awmod+3
  5748  0E18  1BF4               	btfsc	?___awmod+2,7
  5749  0E19  03F5               	decf	?___awmod+3,f
  5750  0E1A  26AF  120A  158A   	fcall	___awmod
  5751  0E1D  27BB               	fcall	PL10	;call to abstracted procedure
  5752  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5753  0E1F  0084               	movwf	4
  5754  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5755  0E25  00B1               	movwf	?___ftmul
  5756  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5757  0E2B  00B2               	movwf	?___ftmul+1
  5758  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5759  0E31  27E8  120A  158A   	fcall	PL24	;call to abstracted procedure
  5760  0E34  1BFA               	btfsc	?___awdiv+2,7
  5761  0E35  03FB               	decf	?___awdiv+3,f
  5762  0E36  2669  120A  158A   	fcall	___awdiv
  5763  0E39  27C3               	fcall	PL11	;call to abstracted procedure
  5764  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5765  0E3B  0084               	movwf	4
  5766  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5767  0E41  00B4               	movwf	?___ftmul+3
  5768  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5769  0E47  00B5               	movwf	?___ftmul+4
  5770  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5771  0E4D  00B6               	movwf	?___ftmul+5
  5772  0E4E  26EC  120A  158A   	fcall	___ftmul
  5773  0E51  2FB4               	ljmp	PL8	;call to abstracted procedure
  5774  0E52                     l6800:	
  5775  0E52  3003               	movlw	3
  5776  0E53  00FB               	movwf	?___bmul
  5777  0E54  084A               	movf	scale@scl,w
  5778  0E55  275B               	fcall	___bmul
  5779  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5780  0E57  0084               	movwf	4
  5781  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5782  0E5D  00C0               	movwf	?_scale
  5783  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5784  0E63  00C1               	movwf	?_scale+1
  5785  0E64  160A  118A  2000   	fcall	stringdir
  5786  0E67  00C2               	movwf	?_scale+2
  5787  0E68  0008               	return
  5788  0E69                     __end_of_scale:	
  5789  0E69                     __ptext538:	
  5790 ;; =============== function ___llmod ends ============
  5791                           
  5792                           
  5793 ;; *************** function ___awdiv *****************
  5794 ;; Defined at:
  5795 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  divisor         2    8[COMMON] int 
  5798 ;;  dividend        2   10[COMMON] int 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  quotient        2    2[BANK0 ] int 
  5801 ;;  sign            1    1[BANK0 ] unsigned char 
  5802 ;;  counter         1    0[BANK0 ] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  2    8[COMMON] int 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 40/20
  5809 ;;		On exit  : 60/0
  5810 ;;		Unchanged: FFF9F/0
  5811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5812 ;;      Params:         4       0       0       0       0
  5813 ;;      Locals:         0       4       0       0       0
  5814 ;;      Temps:          0       0       0       0       0
  5815 ;;      Totals:         4       4       0       0       0
  5816 ;;Total ram usage:        8 bytes
  5817 ;; Hardware stack levels used:    1
  5818 ;; Hardware stack levels required when called:    1
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_scale
  5823 ;;		_printf
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826  0E69                     ___awdiv:	
  5827                           
  5828                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5829  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  5830  0E6A  01A1               	clrf	___awdiv@sign
  5831  0E6B  1FF9               	btfss	___awdiv@divisor+1,7
  5832  0E6C  2E74               	goto	l6336
  5833  0E6D  09F8               	comf	___awdiv@divisor,f
  5834  0E6E  09F9               	comf	___awdiv@divisor+1,f
  5835  0E6F  0AF8               	incf	___awdiv@divisor,f
  5836  0E70  1903               	skipnz
  5837  0E71  0AF9               	incf	___awdiv@divisor+1,f
  5838  0E72  01A1               	clrf	___awdiv@sign
  5839  0E73  0AA1               	incf	___awdiv@sign,f
  5840  0E74                     l6336:	
  5841  0E74  1FFB               	btfss	___awdiv@dividend+1,7
  5842  0E75  2E7D               	goto	l6342
  5843  0E76  09FA               	comf	___awdiv@dividend,f
  5844  0E77  09FB               	comf	___awdiv@dividend+1,f
  5845  0E78  0AFA               	incf	___awdiv@dividend,f
  5846  0E79  1903               	skipnz
  5847  0E7A  0AFB               	incf	___awdiv@dividend+1,f
  5848  0E7B  3001               	movlw	1
  5849  0E7C  06A1               	xorwf	___awdiv@sign,f
  5850  0E7D                     l6342:	
  5851  0E7D  01A2               	clrf	___awdiv@quotient
  5852  0E7E  01A3               	clrf	___awdiv@quotient+1
  5853  0E7F  0879               	movf	___awdiv@divisor+1,w
  5854  0E80  0478               	iorwf	___awdiv@divisor,w
  5855  0E81  1903               	skipnz
  5856  0E82  2EA2               	goto	l6364
  5857  0E83  01A0               	clrf	___awdiv@counter
  5858  0E84                     L15:	
  5859  0E84  0AA0               	incf	___awdiv@counter,f
  5860  0E85  1BF9               	btfsc	___awdiv@divisor+1,7
  5861  0E86  2E8B               	goto	l6352
  5862  0E87  1003               	clrc
  5863  0E88  0DF8               	rlf	___awdiv@divisor,f
  5864  0E89  0DF9               	rlf	___awdiv@divisor+1,f
  5865  0E8A  2E84               	goto	L15
  5866  0E8B                     l6352:	
  5867  0E8B  1003               	clrc
  5868  0E8C  0DA2               	rlf	___awdiv@quotient,f
  5869  0E8D  0DA3               	rlf	___awdiv@quotient+1,f
  5870  0E8E  0879               	movf	___awdiv@divisor+1,w
  5871  0E8F  027B               	subwf	___awdiv@dividend+1,w
  5872  0E90  1D03               	skipz
  5873  0E91  2E94               	goto	u2515
  5874  0E92  0878               	movf	___awdiv@divisor,w
  5875  0E93  027A               	subwf	___awdiv@dividend,w
  5876  0E94                     u2515:	
  5877  0E94  1C03               	skipc
  5878  0E95  2E9E               	goto	L16
  5879  0E96  0878               	movf	___awdiv@divisor,w
  5880  0E97  02FA               	subwf	___awdiv@dividend,f
  5881  0E98  0879               	movf	___awdiv@divisor+1,w
  5882  0E99  1C03               	skipc
  5883  0E9A  03FB               	decf	___awdiv@dividend+1,f
  5884  0E9B  02FB               	subwf	___awdiv@dividend+1,f
  5885  0E9C  1422               	bsf	___awdiv@quotient,0
  5886  0E9D  1003               	clrc
  5887  0E9E                     L16:	
  5888  0E9E  0CF9               	rrf	___awdiv@divisor+1,f
  5889  0E9F  0CF8               	rrf	___awdiv@divisor,f
  5890  0EA0  0BA0               	decfsz	___awdiv@counter,f
  5891  0EA1  2E8B               	goto	l6352
  5892  0EA2                     l6364:	
  5893  0EA2  0821               	movf	___awdiv@sign,w
  5894  0EA3  1903               	btfsc	3,2
  5895  0EA4  2EAA               	goto	l6368
  5896  0EA5  09A2               	comf	___awdiv@quotient,f
  5897  0EA6  09A3               	comf	___awdiv@quotient+1,f
  5898  0EA7  0AA2               	incf	___awdiv@quotient,f
  5899  0EA8  1903               	skipnz
  5900  0EA9  0AA3               	incf	___awdiv@quotient+1,f
  5901  0EAA                     l6368:	
  5902  0EAA  0823               	movf	___awdiv@quotient+1,w
  5903  0EAB  00F9               	movwf	?___awdiv+1
  5904  0EAC  0822               	movf	___awdiv@quotient,w
  5905  0EAD  00F8               	movwf	?___awdiv
  5906  0EAE  0008               	return
  5907  0EAF                     __end_of___awdiv:	
  5908  0EAF                     __ptext533:	
  5909 ;; =============== function _lcd_put_byte ends ============
  5910                           
  5911                           
  5912 ;; *************** function ___awmod *****************
  5913 ;; Defined at:
  5914 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  divisor         2    2[COMMON] int 
  5917 ;;  dividend        2    4[COMMON] int 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  sign            1    7[COMMON] unsigned char 
  5920 ;;  counter         1    6[COMMON] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  2    2[COMMON] int 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 60/0
  5927 ;;		On exit  : 60/0
  5928 ;;		Unchanged: FFF9F/0
  5929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5930 ;;      Params:         4       0       0       0       0
  5931 ;;      Locals:         2       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0
  5933 ;;      Totals:         6       0       0       0       0
  5934 ;;Total ram usage:        6 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    1
  5937 ;; This function calls:
  5938 ;;		Nothing
  5939 ;; This function is called by:
  5940 ;;		_scale
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943  0EAF                     ___awmod:	
  5944                           
  5945                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5946  0EAF  01F7               	clrf	___awmod@sign
  5947  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  5948  0EB1  2EB9               	goto	l6454
  5949  0EB2  09F4               	comf	___awmod@dividend,f
  5950  0EB3  09F5               	comf	___awmod@dividend+1,f
  5951  0EB4  0AF4               	incf	___awmod@dividend,f
  5952  0EB5  1903               	skipnz
  5953  0EB6  0AF5               	incf	___awmod@dividend+1,f
  5954  0EB7  01F7               	clrf	___awmod@sign
  5955  0EB8  0AF7               	incf	___awmod@sign,f
  5956  0EB9                     l6454:	
  5957  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  5958  0EBA  2EC0               	goto	l6458
  5959  0EBB  09F2               	comf	___awmod@divisor,f
  5960  0EBC  09F3               	comf	___awmod@divisor+1,f
  5961  0EBD  0AF2               	incf	___awmod@divisor,f
  5962  0EBE  1903               	skipnz
  5963  0EBF  0AF3               	incf	___awmod@divisor+1,f
  5964  0EC0                     l6458:	
  5965  0EC0  0873               	movf	___awmod@divisor+1,w
  5966  0EC1  0472               	iorwf	___awmod@divisor,w
  5967  0EC2  1903               	skipnz
  5968  0EC3  2EDF               	goto	l6474
  5969  0EC4  01F6               	clrf	___awmod@counter
  5970  0EC5                     L8:	
  5971  0EC5  0AF6               	incf	___awmod@counter,f
  5972  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  5973  0EC7  2ECC               	goto	l6466
  5974  0EC8  1003               	clrc
  5975  0EC9  0DF2               	rlf	___awmod@divisor,f
  5976  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  5977  0ECB  2EC5               	goto	L8
  5978  0ECC                     l6466:	
  5979  0ECC  0873               	movf	___awmod@divisor+1,w
  5980  0ECD  0275               	subwf	___awmod@dividend+1,w
  5981  0ECE  1D03               	skipz
  5982  0ECF  2ED2               	goto	u2705
  5983  0ED0  0872               	movf	___awmod@divisor,w
  5984  0ED1  0274               	subwf	___awmod@dividend,w
  5985  0ED2                     u2705:	
  5986  0ED2  1C03               	skipc
  5987  0ED3  2EDB               	goto	L9
  5988  0ED4  0872               	movf	___awmod@divisor,w
  5989  0ED5  02F4               	subwf	___awmod@dividend,f
  5990  0ED6  0873               	movf	___awmod@divisor+1,w
  5991  0ED7  1C03               	skipc
  5992  0ED8  03F5               	decf	___awmod@dividend+1,f
  5993  0ED9  02F5               	subwf	___awmod@dividend+1,f
  5994  0EDA  1003               	clrc
  5995  0EDB                     L9:	
  5996  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  5997  0EDC  0CF2               	rrf	___awmod@divisor,f
  5998  0EDD  0BF6               	decfsz	___awmod@counter,f
  5999  0EDE  2ECC               	goto	l6466
  6000  0EDF                     l6474:	
  6001  0EDF  0877               	movf	___awmod@sign,w
  6002  0EE0  1903               	btfsc	3,2
  6003  0EE1  2EE7               	goto	l6478
  6004  0EE2  09F4               	comf	___awmod@dividend,f
  6005  0EE3  09F5               	comf	___awmod@dividend+1,f
  6006  0EE4  0AF4               	incf	___awmod@dividend,f
  6007  0EE5  1903               	skipnz
  6008  0EE6  0AF5               	incf	___awmod@dividend+1,f
  6009  0EE7                     l6478:	
  6010  0EE7  0875               	movf	___awmod@dividend+1,w
  6011  0EE8  00F3               	movwf	?___awmod+1
  6012  0EE9  0874               	movf	___awmod@dividend,w
  6013  0EEA  00F2               	movwf	?___awmod
  6014  0EEB  0008               	return
  6015  0EEC                     __end_of___awmod:	
  6016  0EEC                     __ptext529:	
  6017 ;; =============== function ___altoft ends ============
  6018                           
  6019                           
  6020 ;; *************** function ___ftmul *****************
  6021 ;; Defined at:
  6022 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;  f1              3   17[BANK0 ] float 
  6025 ;;  f2              3   20[BANK0 ] float 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  6028 ;;  sign            1   31[BANK0 ] unsigned char 
  6029 ;;  cntr            1   30[BANK0 ] unsigned char 
  6030 ;;  exp             1   26[BANK0 ] unsigned char 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  3   17[BANK0 ] float 
  6033 ;; Registers used:
  6034 ;;		wreg, status,2, status,0, pclath, cstack
  6035 ;; Tracked objects:
  6036 ;;		On entry : 60/0
  6037 ;;		On exit  : 60/0
  6038 ;;		Unchanged: FFF9F/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6040 ;;      Params:         0       6       0       0       0
  6041 ;;      Locals:         0       6       0       0       0
  6042 ;;      Temps:          0       3       0       0       0
  6043 ;;      Totals:         0      15       0       0       0
  6044 ;;Total ram usage:       15 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    2
  6047 ;; This function calls:
  6048 ;;		___ftpack
  6049 ;; This function is called by:
  6050 ;;		_main
  6051 ;;		_fround
  6052 ;;		_scale
  6053 ;;		_printf
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056  0EEC                     ___ftmul:	
  6057                           
  6058                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6059  0EEC  0831               	movf	___ftmul@f1,w
  6060  0EED  00B7               	movwf	??___ftmul
  6061  0EEE  0832               	movf	___ftmul@f1+1,w
  6062  0EEF  00B8               	movwf	??___ftmul+1
  6063  0EF0  0833               	movf	___ftmul@f1+2,w
  6064  0EF1  00B9               	movwf	??___ftmul+2
  6065  0EF2  1003               	clrc
  6066  0EF3  0D38               	rlf	??___ftmul+1,w
  6067  0EF4  0D39               	rlf	??___ftmul+2,w
  6068  0EF5  00BA               	movwf	___ftmul@exp
  6069  0EF6  08BA               	movf	___ftmul@exp,f
  6070  0EF7  1D03               	skipz
  6071  0EF8  2EFD               	goto	l6616
  6072  0EF9  01B1               	clrf	?___ftmul
  6073  0EFA  01B2               	clrf	?___ftmul+1
  6074  0EFB  01B3               	clrf	?___ftmul+2
  6075  0EFC  0008               	return
  6076  0EFD                     l6616:	
  6077  0EFD  0834               	movf	___ftmul@f2,w
  6078  0EFE  00B7               	movwf	??___ftmul
  6079  0EFF  0835               	movf	___ftmul@f2+1,w
  6080  0F00  00B8               	movwf	??___ftmul+1
  6081  0F01  0836               	movf	___ftmul@f2+2,w
  6082  0F02  00B9               	movwf	??___ftmul+2
  6083  0F03  1003               	clrc
  6084  0F04  0D38               	rlf	??___ftmul+1,w
  6085  0F05  0D39               	rlf	??___ftmul+2,w
  6086  0F06  00BF               	movwf	___ftmul@sign
  6087  0F07  08BF               	movf	___ftmul@sign,f
  6088  0F08  1D03               	skipz
  6089  0F09  2F0E               	goto	l6622
  6090  0F0A  01B1               	clrf	?___ftmul
  6091  0F0B  01B2               	clrf	?___ftmul+1
  6092  0F0C  01B3               	clrf	?___ftmul+2
  6093  0F0D  0008               	return
  6094  0F0E                     l6622:	
  6095  0F0E  083F               	movf	___ftmul@sign,w
  6096  0F0F  3E7B               	addlw	123
  6097  0F10  07BA               	addwf	___ftmul@exp,f
  6098  0F11  0833               	movf	___ftmul@f1+2,w
  6099  0F12  00BF               	movwf	___ftmul@sign
  6100  0F13  0836               	movf	___ftmul@f2+2,w
  6101  0F14  06BF               	xorwf	___ftmul@sign,f
  6102  0F15  3080               	movlw	128
  6103  0F16  05BF               	andwf	___ftmul@sign,f
  6104  0F17  3007               	movlw	7
  6105  0F18  17B2               	bsf	___ftmul@f1+1,7
  6106  0F19  17B5               	bsf	___ftmul@f2+1,7
  6107  0F1A  01B6               	clrf	___ftmul@f2+2
  6108  0F1B  01BB               	clrf	___ftmul@f3_as_product
  6109  0F1C  01BC               	clrf	___ftmul@f3_as_product+1
  6110  0F1D  01BD               	clrf	___ftmul@f3_as_product+2
  6111  0F1E  00BE               	movwf	___ftmul@cntr
  6112  0F1F                     l6640:	
  6113  0F1F  1C31               	btfss	___ftmul@f1,0
  6114  0F20  2F29               	goto	l6644
  6115  0F21  0834               	movf	___ftmul@f2,w
  6116  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6117  0F25  1803               	skipnc
  6118  0F26  0A36               	incf	___ftmul@f2+2,w
  6119  0F27  1D03               	btfss	3,2
  6120  0F28  07BD               	addwf	___ftmul@f3_as_product+2,f
  6121  0F29                     l6644:	
  6122  0F29  1003               	clrc
  6123  0F2A  0CB3               	rrf	___ftmul@f1+2,f
  6124  0F2B  0CB2               	rrf	___ftmul@f1+1,f
  6125  0F2C  0CB1               	rrf	___ftmul@f1,f
  6126  0F2D  1003               	clrc
  6127  0F2E  0DB4               	rlf	___ftmul@f2,f
  6128  0F2F  0DB5               	rlf	___ftmul@f2+1,f
  6129  0F30  0DB6               	rlf	___ftmul@f2+2,f
  6130  0F31  0BBE               	decfsz	___ftmul@cntr,f
  6131  0F32  2F1F               	goto	l6640
  6132  0F33  3009               	movlw	9
  6133  0F34  00BE               	movwf	___ftmul@cntr
  6134  0F35                     l6652:	
  6135  0F35  1C31               	btfss	___ftmul@f1,0
  6136  0F36  2F3F               	goto	l6656
  6137  0F37  0834               	movf	___ftmul@f2,w
  6138  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6139  0F3B  1803               	skipnc
  6140  0F3C  0A36               	incf	___ftmul@f2+2,w
  6141  0F3D  1D03               	btfss	3,2
  6142  0F3E  07BD               	addwf	___ftmul@f3_as_product+2,f
  6143  0F3F                     l6656:	
  6144  0F3F  1003               	clrc
  6145  0F40  0CB3               	rrf	___ftmul@f1+2,f
  6146  0F41  0CB2               	rrf	___ftmul@f1+1,f
  6147  0F42  0CB1               	rrf	___ftmul@f1,f
  6148  0F43  1003               	clrc
  6149  0F44  0CBD               	rrf	___ftmul@f3_as_product+2,f
  6150  0F45  0CBC               	rrf	___ftmul@f3_as_product+1,f
  6151  0F46  0CBB               	rrf	___ftmul@f3_as_product,f
  6152  0F47  0BBE               	decfsz	___ftmul@cntr,f
  6153  0F48  2F35               	goto	l6652
  6154  0F49  083B               	movf	___ftmul@f3_as_product,w
  6155  0F4A  00F2               	movwf	?___ftpack
  6156  0F4B  083C               	movf	___ftmul@f3_as_product+1,w
  6157  0F4C  00F3               	movwf	?___ftpack+1
  6158  0F4D  083D               	movf	___ftmul@f3_as_product+2,w
  6159  0F4E  00F4               	movwf	?___ftpack+2
  6160  0F4F  083A               	movf	___ftmul@exp,w
  6161  0F50  00F5               	movwf	?___ftpack+3
  6162  0F51  083F               	movf	___ftmul@sign,w
  6163  0F52  00F6               	movwf	?___ftpack+4
  6164  0F53  2769               	fcall	___ftpack
  6165  0F54  0872               	movf	?___ftpack,w
  6166  0F55  00B1               	movwf	?___ftmul
  6167  0F56  0873               	movf	?___ftpack+1,w
  6168  0F57  00B2               	movwf	?___ftmul+1
  6169  0F58  0874               	movf	?___ftpack+2,w
  6170  0F59  00B3               	movwf	?___ftmul+2
  6171  0F5A  0008               	return
  6172  0F5B                     __end_of___ftmul:	
  6173  0F5B                     __ptext544:	
  6174 ;; =============== function ___wmul ends ============
  6175                           
  6176                           
  6177 ;; *************** function ___bmul *****************
  6178 ;; Defined at:
  6179 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  multiplier      1    wreg     unsigned char 
  6182 ;;  multiplicand    1   11[COMMON] unsigned char 
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;  multiplier      1    1[BANK0 ] unsigned char 
  6185 ;;  product         1    0[BANK0 ] unsigned char 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      unsigned char 
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 60/0
  6192 ;;		On exit  : 60/0
  6193 ;;		Unchanged: FFF9F/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6195 ;;      Params:         1       0       0       0       0
  6196 ;;      Locals:         0       2       0       0       0
  6197 ;;      Temps:          0       0       0       0       0
  6198 ;;      Totals:         1       2       0       0       0
  6199 ;;Total ram usage:        3 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    1
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_fround
  6206 ;;		_scale
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209  0F5B                     ___bmul:	
  6210                           
  6211                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6212                           ;___bmul@multiplier stored from wreg
  6213  0F5B  00A1               	movwf	___bmul@multiplier
  6214  0F5C  01A0               	clrf	___bmul@product
  6215  0F5D                     l6190:	
  6216  0F5D  087B               	movf	___bmul@multiplicand,w
  6217  0F5E  1821               	btfsc	___bmul@multiplier,0
  6218  0F5F  07A0               	addwf	___bmul@product,f
  6219  0F60  1003               	clrc
  6220  0F61  0DFB               	rlf	___bmul@multiplicand,f
  6221  0F62  1003               	clrc
  6222  0F63  0CA1               	rrf	___bmul@multiplier,f
  6223  0F64  08A1               	movf	___bmul@multiplier,f
  6224  0F65  1D03               	skipz
  6225  0F66  2F5D               	goto	l6190
  6226  0F67  0820               	movf	___bmul@product,w
  6227  0F68  0008               	return
  6228  0F69                     __end_of___bmul:	
  6229  0F69                     __ptext540:	
  6230 ;; =============== function ___fttol ends ============
  6231                           
  6232                           
  6233 ;; *************** function ___ftpack *****************
  6234 ;; Defined at:
  6235 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  arg             3    2[COMMON] unsigned um
  6238 ;;  exp             1    5[COMMON] unsigned char 
  6239 ;;  sign            1    6[COMMON] unsigned char 
  6240 ;; Auto vars:     Size  Location     Type
  6241 ;;		None
  6242 ;; Return value:  Size  Location     Type
  6243 ;;                  3    2[COMMON] float 
  6244 ;; Registers used:
  6245 ;;		wreg, status,2, status,0
  6246 ;; Tracked objects:
  6247 ;;		On entry : 60/0
  6248 ;;		On exit  : 60/0
  6249 ;;		Unchanged: FFF9F/0
  6250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6251 ;;      Params:         5       0       0       0       0
  6252 ;;      Locals:         0       0       0       0       0
  6253 ;;      Temps:          3       0       0       0       0
  6254 ;;      Totals:         8       0       0       0       0
  6255 ;;Total ram usage:        8 bytes
  6256 ;; Hardware stack levels used:    1
  6257 ;; Hardware stack levels required when called:    1
  6258 ;; This function calls:
  6259 ;;		Nothing
  6260 ;; This function is called by:
  6261 ;;		___ftadd
  6262 ;;		___ftmul
  6263 ;;		___altoft
  6264 ;;		___lltoft
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267  0F69                     ___ftpack:	
  6268                           
  6269                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6270  0F69  0875               	movf	___ftpack@exp,w
  6271  0F6A  1903               	btfsc	3,2
  6272  0F6B  2F71               	goto	l6266
  6273  0F6C  0874               	movf	___ftpack@arg+2,w
  6274  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6275  0F6E  0472               	iorwf	___ftpack@arg,w
  6276  0F6F  1D03               	skipz
  6277  0F70  2F7A               	goto	l6272
  6278  0F71                     l6266:	
  6279  0F71  01F2               	clrf	?___ftpack
  6280  0F72  01F3               	clrf	?___ftpack+1
  6281  0F73  01F4               	clrf	?___ftpack+2
  6282  0F74  0008               	return
  6283  0F75                     l6270:	
  6284  0F75  0AF5               	incf	___ftpack@exp,f
  6285  0F76  1003               	clrc
  6286  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6287  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6288  0F79  0CF2               	rrf	___ftpack@arg,f
  6289  0F7A                     l6272:	
  6290  0F7A  30FE               	movlw	254
  6291  0F7B  0574               	andwf	___ftpack@arg+2,w
  6292  0F7C  1903               	btfsc	3,2
  6293  0F7D  2F89               	goto	l6276
  6294  0F7E  2F75               	goto	l6270
  6295  0F7F                     l6274:	
  6296  0F7F  0AF5               	incf	___ftpack@exp,f
  6297  0F80  0AF2               	incf	___ftpack@arg,f
  6298  0F81  1903               	skipnz
  6299  0F82  0AF3               	incf	___ftpack@arg+1,f
  6300  0F83  1903               	skipnz
  6301  0F84  0AF4               	incf	___ftpack@arg+2,f
  6302  0F85  1003               	clrc
  6303  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6304  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6305  0F88  0CF2               	rrf	___ftpack@arg,f
  6306  0F89                     l6276:	
  6307  0F89  30FF               	movlw	255
  6308  0F8A  0574               	andwf	___ftpack@arg+2,w
  6309  0F8B  1903               	btfsc	3,2
  6310  0F8C  2F93               	goto	l6280
  6311  0F8D  2F7F               	goto	l6274
  6312  0F8E                     l6278:	
  6313  0F8E  03F5               	decf	___ftpack@exp,f
  6314  0F8F  1003               	clrc
  6315  0F90  0DF2               	rlf	___ftpack@arg,f
  6316  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6317  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6318  0F93                     l6280:	
  6319  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6320  0F94  2F8E               	goto	l6278
  6321  0F95  1C75               	btfss	___ftpack@exp,0
  6322  0F96  13F3               	bcf	___ftpack@arg+1,7
  6323  0F97  1003               	clrc
  6324  0F98  0CF5               	rrf	___ftpack@exp,f
  6325  0F99  0875               	movf	___ftpack@exp,w
  6326  0F9A  00F9               	movwf	??___ftpack+2
  6327  0F9B  01F8               	clrf	??___ftpack+1
  6328  0F9C  01F7               	clrf	??___ftpack
  6329  0F9D  0877               	movf	??___ftpack,w
  6330  0F9E  04F2               	iorwf	___ftpack@arg,f
  6331  0F9F  0878               	movf	??___ftpack+1,w
  6332  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6333  0FA1  0879               	movf	??___ftpack+2,w
  6334  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6335  0FA3  0876               	movf	___ftpack@sign,w
  6336  0FA4  1D03               	skipz
  6337  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6338  0FA6  0008               	return
  6339  0FA7                     __end_of___ftpack:	
  6340  0FA7                     PL7:	
  6341  0FA7  0831               	movf	?___ftmul,w
  6342  0FA8  00C7               	movwf	_scale$4108
  6343  0FA9  0832               	movf	?___ftmul+1,w
  6344  0FAA  00C8               	movwf	_scale$4108+1
  6345  0FAB  0833               	movf	?___ftmul+2,w
  6346  0FAC  00C9               	movwf	_scale$4108+2
  6347  0FAD  300A               	movlw	10
  6348  0FAE  00F2               	movwf	?___awmod
  6349  0FAF  01F3               	clrf	?___awmod+1
  6350  0FB0  084A               	movf	scale@scl,w
  6351  0FB1  00F4               	movwf	?___awmod+2
  6352  0FB2  01F5               	clrf	?___awmod+3
  6353  0FB3  0008               	return
  6354  0FB4                     PL8:	
  6355  0FB4  0831               	movf	?___ftmul,w
  6356  0FB5  00C0               	movwf	?_scale
  6357  0FB6  0832               	movf	?___ftmul+1,w
  6358  0FB7  00C1               	movwf	?_scale+1
  6359  0FB8  0833               	movf	?___ftmul+2,w
  6360  0FB9  00C2               	movwf	?_scale+2
  6361  0FBA  0008               	return
  6362  0FBB                     PL10:	
  6363  0FBB  0872               	movf	?___awmod,w
  6364  0FBC  00C3               	movwf	??_scale
  6365  0FBD  0873               	movf	?___awmod+1,w
  6366  0FBE  00C4               	movwf	??_scale+1
  6367  0FBF  0843               	movf	??_scale,w
  6368  0FC0  0743               	addwf	??_scale,w
  6369  0FC1  0743               	addwf	??_scale,w
  6370  0FC2  0008               	return
  6371  0FC3                     PL11:	
  6372  0FC3  0878               	movf	?___awdiv,w
  6373  0FC4  00C5               	movwf	??_scale+2
  6374  0FC5  0879               	movf	?___awdiv+1,w
  6375  0FC6  00C6               	movwf	??_scale+3
  6376  0FC7  0845               	movf	??_scale+2,w
  6377  0FC8  0745               	addwf	??_scale+2,w
  6378  0FC9  0745               	addwf	??_scale+2,w
  6379  0FCA  0008               	return
  6380  0FCB                     PL15:	
  6381  0FCB  00F8               	movwf	?___awdiv
  6382  0FCC  01F9               	clrf	?___awdiv+1
  6383  0FCD  084A               	movf	scale@scl,w
  6384  0FCE  00F4               	movwf	?___awmod+2
  6385  0FCF  01F5               	clrf	?___awmod+3
  6386  0FD0  1BF4               	btfsc	?___awmod+2,7
  6387  0FD1  03F5               	decf	?___awmod+3,f
  6388  0FD2  3064               	movlw	100
  6389  0FD3  00F2               	movwf	?___awmod
  6390  0FD4  01F3               	clrf	?___awmod+1
  6391  0FD5  0008               	return
  6392  0FD6                     PL18:	
  6393  0FD6  07BB               	addwf	___ftmul@f3_as_product,f
  6394  0FD7  0835               	movf	___ftmul@f2+1,w
  6395  0FD8  1103               	clrz
  6396  0FD9  1803               	skipnc
  6397  0FDA  0A35               	incf	___ftmul@f2+1,w
  6398  0FDB  1D03               	btfss	3,2
  6399  0FDC  07BC               	addwf	___ftmul@f3_as_product+1,f
  6400  0FDD  0836               	movf	___ftmul@f2+2,w
  6401  0FDE  1103               	clrz
  6402  0FDF  0008               	return
  6403  0FE0                     PL23:	
  6404  0FE0  00B3               	movwf	?___ftmul+2
  6405  0FE1  0847               	movf	_scale$4108,w
  6406  0FE2  00B4               	movwf	?___ftmul+3
  6407  0FE3  0848               	movf	_scale$4108+1,w
  6408  0FE4  00B5               	movwf	?___ftmul+4
  6409  0FE5  0849               	movf	_scale$4108+2,w
  6410  0FE6  00B6               	movwf	?___ftmul+5
  6411  0FE7  0008               	return
  6412  0FE8                     PL24:	
  6413  0FE8  00B3               	movwf	?___ftmul+2
  6414  0FE9  300A               	movlw	10
  6415  0FEA  00F8               	movwf	?___awdiv
  6416  0FEB  01F9               	clrf	?___awdiv+1
  6417  0FEC  084A               	movf	scale@scl,w
  6418  0FED  00FA               	movwf	?___awdiv+2
  6419  0FEE  01FB               	clrf	?___awdiv+3
  6420  0FEF  0008               	return
  6421  0FF0                     PL25:	
  6422  0FF0  0878               	movf	?___awdiv,w
  6423  0FF1  00C3               	movwf	??_scale
  6424  0FF2  0879               	movf	?___awdiv+1,w
  6425  0FF3  00C4               	movwf	??_scale+1
  6426  0FF4  0843               	movf	??_scale,w
  6427  0FF5  0743               	addwf	??_scale,w
  6428  0FF6  0743               	addwf	??_scale,w
  6429  0FF7  0008               	return
  6430  0FF8                     PL26:	
  6431  0FF8  00B3               	movwf	?___ftmul+2
  6432  0FF9  3064               	movlw	100
  6433  0FFA  00F8               	movwf	?___awdiv
  6434  0FFB  01F9               	clrf	?___awdiv+1
  6435  0FFC  084A               	movf	scale@scl,w
  6436  0FFD  00FA               	movwf	?___awdiv+2
  6437  0FFE  01FB               	clrf	?___awdiv+3
  6438  0FFF  0008               	return
  6439                           
  6440                           	psect	text545
  6441  1735                     __ptext545:	
  6442 ;; =============== function ___bmul ends ============
  6443                           
  6444                           
  6445 ;; *************** function __div_to_l_ *****************
  6446 ;; Defined at:
  6447 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  f1              3    2[COMMON] unsigned char 
  6450 ;;  f2              3    5[COMMON] unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  quot            4    8[BANK0 ] unsigned long 
  6453 ;;  exp1            1   13[BANK0 ] unsigned char 
  6454 ;;  cntr            1   12[BANK0 ] unsigned char 
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  4    2[COMMON] unsigned long 
  6457 ;; Registers used:
  6458 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 60/0
  6462 ;;		Unchanged: FFF9F/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6464 ;;      Params:         6       0       0       0       0
  6465 ;;      Locals:         0       6       0       0       0
  6466 ;;      Temps:          0       8       0       0       0
  6467 ;;      Totals:         6      14       0       0       0
  6468 ;;Total ram usage:       20 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    1
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_printf
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477  1735                     __div_to_l_:	
  6478                           
  6479                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6480  1735  3072               	movlw	low __div_to_l_@f1
  6481  1736  0084               	movwf	4
  6482  1737  0800               	movf	0,w
  6483  1738  1283               	bcf	3,5	;RP0=0, select bank0
  6484  1739  1303               	bcf	3,6	;RP1=0, select bank0
  6485  173A  00A0               	movwf	??__div_to_l_
  6486  173B  0A84               	incf	4,f
  6487  173C  0800               	movf	0,w
  6488  173D  00A1               	movwf	??__div_to_l_+1
  6489  173E  0A84               	incf	4,f
  6490  173F  0800               	movf	0,w
  6491  1740  00A2               	movwf	??__div_to_l_+2
  6492  1741  0A84               	incf	4,f
  6493  1742  0800               	movf	0,w
  6494  1743  00A3               	movwf	??__div_to_l_+3
  6495  1744  1003               	clrc
  6496  1745  0D22               	rlf	??__div_to_l_+2,w
  6497  1746  0D23               	rlf	??__div_to_l_+3,w
  6498  1747  00AD               	movwf	__div_to_l_@exp1
  6499  1748  08AD               	movf	__div_to_l_@exp1,f
  6500  1749  1D03               	skipz
  6501  174A  2F50               	goto	l6146
  6502  174B                     l6144:	
  6503  174B  01F2               	clrf	?__div_to_l_
  6504  174C  01F3               	clrf	?__div_to_l_+1
  6505  174D  01F4               	clrf	?__div_to_l_+2
  6506  174E  01F5               	clrf	?__div_to_l_+3
  6507  174F  0008               	return
  6508  1750                     l6146:	
  6509  1750  3075               	movlw	low __div_to_l_@f2
  6510  1751  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6511  1754  1003               	clrc
  6512  1755  0D22               	rlf	??__div_to_l_+2,w
  6513  1756  0D23               	rlf	??__div_to_l_+3,w
  6514  1757  00AC               	movwf	__div_to_l_@cntr
  6515  1758  08AC               	movf	__div_to_l_@cntr,f
  6516  1759  1903               	btfsc	3,2
  6517  175A  2F4B               	goto	l6144
  6518  175B  3072               	movlw	low __div_to_l_@f1
  6519  175C  0084               	movwf	4
  6520  175D  3080               	movlw	128
  6521  175E  0A84               	incf	4,f
  6522  175F  0A84               	incf	4,f
  6523  1760  0480               	iorwf	0,f
  6524  1761  3072               	movlw	low __div_to_l_@f1
  6525  1762  0A84               	incf	4,f
  6526  1763  0084               	movwf	4
  6527  1764  3075               	movlw	low __div_to_l_@f2
  6528  1765  0A84               	incf	4,f
  6529  1766  0A84               	incf	4,f
  6530  1767  0A84               	incf	4,f
  6531  1768  0180               	clrf	0
  6532  1769  0084               	movwf	4
  6533  176A  3080               	movlw	128
  6534  176B  0A84               	incf	4,f
  6535  176C  0A84               	incf	4,f
  6536  176D  0480               	iorwf	0,f
  6537  176E  3075               	movlw	low __div_to_l_@f2
  6538  176F  0A84               	incf	4,f
  6539  1770  0084               	movwf	4
  6540  1771  307F               	movlw	127
  6541  1772  0A84               	incf	4,f
  6542  1773  0A84               	incf	4,f
  6543  1774  0A84               	incf	4,f
  6544  1775  0180               	clrf	0
  6545  1776  01A8               	clrf	__div_to_l_@quot
  6546  1777  01A9               	clrf	__div_to_l_@quot+1
  6547  1778  01AA               	clrf	__div_to_l_@quot+2
  6548  1779  01AB               	clrf	__div_to_l_@quot+3
  6549  177A  02AD               	subwf	__div_to_l_@exp1,f
  6550  177B  30A0               	movlw	160
  6551  177C  072C               	addwf	__div_to_l_@cntr,w
  6552  177D  00A0               	movwf	??__div_to_l_
  6553  177E  02AD               	subwf	__div_to_l_@exp1,f
  6554  177F  3020               	movlw	32
  6555  1780  00AC               	movwf	__div_to_l_@cntr
  6556  1781                     l6160:	
  6557  1781  3075               	movlw	low __div_to_l_@f2
  6558  1782  1003               	clrc
  6559  1783  0DA8               	rlf	__div_to_l_@quot,f
  6560  1784  0DA9               	rlf	__div_to_l_@quot+1,f
  6561  1785  0DAA               	rlf	__div_to_l_@quot+2,f
  6562  1786  0DAB               	rlf	__div_to_l_@quot+3,f
  6563  1787  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6564  178A  3072               	movlw	low __div_to_l_@f1
  6565  178B  0084               	movwf	4
  6566  178C  0800               	movf	0,w
  6567  178D  00A4               	movwf	??__div_to_l_+4
  6568  178E  0A84               	incf	4,f
  6569  178F  0800               	movf	0,w
  6570  1790  00A5               	movwf	??__div_to_l_+5
  6571  1791  0A84               	incf	4,f
  6572  1792  0800               	movf	0,w
  6573  1793  00A6               	movwf	??__div_to_l_+6
  6574  1794  0A84               	incf	4,f
  6575  1795  0800               	movf	0,w
  6576  1796  00A7               	movwf	??__div_to_l_+7
  6577  1797  0823               	movf	??__div_to_l_+3,w
  6578  1798  0227               	subwf	??__div_to_l_+7,w
  6579  1799  1D03               	skipz
  6580  179A  2FA5               	goto	u2145
  6581  179B  0822               	movf	??__div_to_l_+2,w
  6582  179C  0226               	subwf	??__div_to_l_+6,w
  6583  179D  1D03               	skipz
  6584  179E  2FA5               	goto	u2145
  6585  179F  0821               	movf	??__div_to_l_+1,w
  6586  17A0  0225               	subwf	??__div_to_l_+5,w
  6587  17A1  1D03               	skipz
  6588  17A2  2FA5               	goto	u2145
  6589  17A3  0820               	movf	??__div_to_l_,w
  6590  17A4  0224               	subwf	??__div_to_l_+4,w
  6591  17A5                     u2145:	
  6592  17A5  1C03               	skipc
  6593  17A6  2FC1               	goto	l3586
  6594  17A7  3075               	movlw	low __div_to_l_@f2
  6595  17A8  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6596  17AB  3072               	movlw	low __div_to_l_@f1
  6597  17AC  0084               	movwf	4
  6598  17AD  0820               	movf	??__div_to_l_,w
  6599  17AE  0280               	subwf	0,f
  6600  17AF  0A84               	incf	4,f
  6601  17B0  0821               	movf	??__div_to_l_+1,w
  6602  17B1  1C03               	skipc
  6603  17B2  0F21               	incfsz	??__div_to_l_+1,w
  6604  17B3  0280               	subwf	0,f
  6605  17B4  0A84               	incf	4,f
  6606  17B5  0822               	movf	??__div_to_l_+2,w
  6607  17B6  1C03               	skipc
  6608  17B7  0F22               	incfsz	??__div_to_l_+2,w
  6609  17B8  0280               	subwf	0,f
  6610  17B9  0A84               	incf	4,f
  6611  17BA  0823               	movf	??__div_to_l_+3,w
  6612  17BB  1C03               	skipc
  6613  17BC  0A23               	incf	??__div_to_l_+3,w
  6614  17BD  0280               	subwf	0,f
  6615  17BE  3003               	movlw	3
  6616  17BF  0284               	subwf	4,f
  6617  17C0  1428               	bsf	__div_to_l_@quot,0
  6618  17C1                     l3586:	
  6619  17C1  3072               	movlw	low __div_to_l_@f1
  6620  17C2  0084               	movwf	4
  6621  17C3  1003               	clrc
  6622  17C4  0D80               	rlf	0,f
  6623  17C5  0A84               	incf	4,f
  6624  17C6  0D80               	rlf	0,f
  6625  17C7  0A84               	incf	4,f
  6626  17C8  0D80               	rlf	0,f
  6627  17C9  0A84               	incf	4,f
  6628  17CA  0D80               	rlf	0,f
  6629  17CB  0BAC               	decfsz	__div_to_l_@cntr,f
  6630  17CC  2F81               	goto	l6160
  6631  17CD  1FAD               	btfss	__div_to_l_@exp1,7
  6632  17CE  2FDC               	goto	l6178
  6633  17CF  082D               	movf	__div_to_l_@exp1,w
  6634  17D0  3A80               	xorlw	128
  6635  17D1  3E9F               	addlw	159
  6636  17D2  1C03               	btfss	3,0
  6637  17D3  2F4B               	goto	l6144
  6638  17D4                     l6174:	
  6639  17D4  1003               	clrc
  6640  17D5  0CAB               	rrf	__div_to_l_@quot+3,f
  6641  17D6  0CAA               	rrf	__div_to_l_@quot+2,f
  6642  17D7  0CA9               	rrf	__div_to_l_@quot+1,f
  6643  17D8  0CA8               	rrf	__div_to_l_@quot,f
  6644  17D9  0FAD               	incfsz	__div_to_l_@exp1,f
  6645  17DA  2FD4               	goto	l6174
  6646  17DB  2FEA               	goto	l6184
  6647  17DC                     l6178:	
  6648  17DC  3020               	movlw	32
  6649  17DD  022D               	subwf	__div_to_l_@exp1,w
  6650  17DE  1803               	btfsc	3,0
  6651  17DF  2F4B               	goto	l6144
  6652  17E0                     l3594:	
  6653  17E0  08AD               	movf	__div_to_l_@exp1,f
  6654  17E1  1903               	btfsc	3,2
  6655  17E2  2FEA               	goto	l6184
  6656  17E3  1003               	clrc
  6657  17E4  0DA8               	rlf	__div_to_l_@quot,f
  6658  17E5  0DA9               	rlf	__div_to_l_@quot+1,f
  6659  17E6  0DAA               	rlf	__div_to_l_@quot+2,f
  6660  17E7  0DAB               	rlf	__div_to_l_@quot+3,f
  6661  17E8  03AD               	decf	__div_to_l_@exp1,f
  6662  17E9  2FE0               	goto	l3594
  6663  17EA                     l6184:	
  6664  17EA  082B               	movf	__div_to_l_@quot+3,w
  6665  17EB  00F5               	movwf	?__div_to_l_+3
  6666  17EC  082A               	movf	__div_to_l_@quot+2,w
  6667  17ED  00F4               	movwf	?__div_to_l_+2
  6668  17EE  0829               	movf	__div_to_l_@quot+1,w
  6669  17EF  00F3               	movwf	?__div_to_l_+1
  6670  17F0  0828               	movf	__div_to_l_@quot,w
  6671  17F1  00F2               	movwf	?__div_to_l_
  6672  17F2  0008               	return
  6673  17F3                     __end_of__div_to_l_:	
  6674  17F3                     PL3:	
  6675  17F3  0084               	movwf	4
  6676  17F4  0800               	movf	0,w
  6677  17F5  00A0               	movwf	??__div_to_l_
  6678  17F6  0A84               	incf	4,f
  6679  17F7  0800               	movf	0,w
  6680  17F8  00A1               	movwf	??__div_to_l_+1
  6681  17F9  0A84               	incf	4,f
  6682  17FA  0800               	movf	0,w
  6683  17FB  00A2               	movwf	??__div_to_l_+2
  6684  17FC  0A84               	incf	4,f
  6685  17FD  0800               	movf	0,w
  6686  17FE  00A3               	movwf	??__div_to_l_+3
  6687  17FF  0008               	return
  6688                           
  6689                           	psect	text549
  6690  079B                     __ptext549:	
  6691 ;; =============== function _isprint ends ============
  6692                           
  6693                           
  6694 ;; *************** function _ngat *****************
  6695 ;; Defined at:
  6696 ;;		line 54 in file "D:\TTVXL\Project TTVXL\BT02week14ttvxl\BT02week14ttvxl.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;		None
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;		None
  6701 ;; Return value:  Size  Location     Type
  6702 ;;		None               void
  6703 ;; Registers used:
  6704 ;;		wreg, status,2
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: FFF9F/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6710 ;;      Params:         0       0       0       0       0
  6711 ;;      Locals:         0       0       0       0       0
  6712 ;;      Temps:          2       0       0       0       0
  6713 ;;      Totals:         2       0       0       0       0
  6714 ;;Total ram usage:        2 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		Interrupt level 1
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722  079B                     _ngat:	
  6723                           
  6724                           ;BT02week14ttvxl.c: 55: if(RBIF)
  6725  079B  1C0B               	btfss	11,0
  6726  079C  2FAB               	goto	L20
  6727                           
  6728                           ;BT02week14ttvxl.c: 56: {
  6729                           ;BT02week14ttvxl.c: 57: if(RB1 == 1)
  6730  079D  1283               	bcf	3,5	;RP0=0, select bank0
  6731  079E  1303               	bcf	3,6	;RP1=0, select bank0
  6732  079F  1C86               	btfss	6,1
  6733  07A0  2FA3               	goto	i1l1056
  6734                           
  6735                           ;BT02week14ttvxl.c: 58: {TMR1ON = 1;}
  6736  07A1  1410               	bsf	16,0
  6737  07A2  2FAA               	goto	i1l6068
  6738  07A3                     i1l1056:	
  6739                           
  6740                           ;BT02week14ttvxl.c: 59: else
  6741                           ;BT02week14ttvxl.c: 60: {TMR1ON = 0;count = TMR1;TMR1= 0;}
  6742  07A3  1010               	bcf	16,0
  6743  07A4  080F               	movf	15,w	;volatile
  6744  07A5  00E6               	movwf	_count+1
  6745  07A6  080E               	movf	14,w	;volatile
  6746  07A7  00E5               	movwf	_count
  6747  07A8  018E               	clrf	14	;volatile
  6748  07A9  018F               	clrf	15	;volatile
  6749  07AA                     i1l6068:	
  6750                           
  6751                           ;BT02week14ttvxl.c: 61: }
  6752                           ;BT02week14ttvxl.c: 62: RBIF = 0;
  6753  07AA  100B               	bcf	11,0
  6754  07AB                     L20:	
  6755  07AB  0871               	movf	??_ngat+1,w
  6756  07AC  008A               	movwf	10
  6757  07AD  0E70               	swapf	??_ngat^(0+-128),w
  6758  07AE  0083               	movwf	3
  6759  07AF  0EFE               	swapf	126,f
  6760  07B0  0E7E               	swapf	126,w
  6761  07B1  0009               	retfie
  6762  07B2                     __end_of_ngat:	
  6763                           
  6764                           	psect	intentry
  6765  0004                     __pintentry:	
  6766                           ; Regs used in _ngat: [wreg+status,2]
  6767                           
  6768  0004                     interrupt_function:	
  6769  007E                     saved_w	set	btemp
  6770  0004  00FE               	movwf	btemp
  6771  0005  0E03               	swapf	3,w
  6772  0006  00F0               	movwf	??_ngat
  6773  0007  080A               	movf	10,w
  6774  0008  00F1               	movwf	??_ngat+1
  6775  0009  120A  118A  2F9B   	ljmp	_ngat
  6776                           
  6777                           	psect	text550
  6778  0000                     __ptext550:	
  6779 ;; =============== function _ngat ends ============
  6780                           
  6781  007E                     btemp	set	126	;btemp
  6782  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 18 04:04:55 2022

         ___altoft@exp 007A                      _d 0062                      pc 0002         ___bmul@product 0020  
        ___altoft@sign 007B           ___awdiv@sign 0021                     fsr 0004    ___wmul@multiplicand 0074  
         ___ftadd@exp1 004B           ___ftadd@exp2 004A          ?_lcd_put_byte 0072           ___ftadd@sign 0049  
                  _GIE 005F                    _RB1 0031                    _RD1 0041                    _RE0 0048  
                  _RD2 0042                    _RE1 0049                    _RD3 0043                    _RD4 0044  
                  _RD5 0045                    _RD6 0046                    _RD7 0047                    fsr0 0004  
                  indf 0000           ___awmod@sign 0077                   l1061 0000                   l2120 0000  
                 l2117 0000                   l2214 00A1                   l2151 0000                   l2128 0000  
                 l2259 0374                   l3413 061C                   l2293 054C                   l3326 0A78  
                 l3335 0000                   l2199 002D                   l3329 0000                   l3514 0000  
                 l3283 0000                   l3460 0000                   l3293 0000                   l3357 0921  
                 l3278 0000                   l6110 0000                   l6102 0000                   l3446 0000  
                 l3551 06EB                   l3544 0000                   l6112 06B6                   l6104 0000  
                 l3456 0000                   l3528 0000                   l3536 0000                   l6130 0000  
                 l6122 0000                   l6114 0000                   l6106 0000                   l6210 05D3  
                 l7010 0339                   l7002 0309                   l3299 0000                   l3475 0000  
                 l3379 0000                   l6132 06E7                   l6108 0000                   l6212 0000  
                 l6204 0000                   l6220 0000                   l6300 0000                   l7100 0502  
                 l7020 0396                   l7012 034E                   l7004 0335                   l6070 0000  
                 l6118 0000                   l6142 0000                   l6214 0000                   l6206 05CB  
                 l6230 0000                   l6222 0000                   l6310 0610                   l6302 0000  
                 l7030 040F                   l7110 0000                   l6072 0000                   l6128 06DF  
                 l6160 1781                   l6152 0000                   l6144 174B                   l6224 0000  
                 l6240 0A85                   l6320 0626                   l6312 0000                   l6304 0000  
                 l6400 0000                   l7040 042D                   l7032 0000                   l7016 035D  
                 l7008 0000                   l7120 0000                   l7112 0000                   l6090 05C7  
                 l6082 0000                   l6138 06F5                   l3594 17E0                   l3586 17C1  
                 l6162 0000                   l6154 0000                   l6146 1750                   l6234 0000  
                 l6226 0A72                   l6250 0000                   l6322 0000                   l6314 0618  
                 l6330 0000                   l6410 0000                   l7106 050A                   l7034 0000  
                 l7026 0000                   l7018 0000                   l7130 0000                   l7122 0000  
                 l7114 0000                   l3587 0000                   l6084 0000                   l6156 0000  
                 l6252 0000                   l6244 0000                   l6324 0634                   l6340 0000  
                 l6412 0000                   l6404 059E                   l6420 0000                   l6500 0BF8  
                 l7052 0000                   l7028 0401                   l7108 0013                   l7140 0000  
                 l7132 0000                   l7124 0000                   l7116 0000                   l6078 0C7E  
                 l6094 0000                   l6174 17D4                   l6166 0000                   l6158 0000  
                 l6190 0F5D                   l6238 0000                   l6246 0000                   l6270 0F75  
                 l6262 0000                   l6342 0E7D                   l6334 0000                   l6430 0652  
                 l6422 0000                   l6510 0C26                   l6502 0000                   l7062 048F  
                 l7054 0463                   l7046 042F                   l7150 16C5                   l7142 0000  
                 l7134 0000                   l7126 0000                   l7118 0000                   l6096 0694  
                 l6184 17EA                   l6176 0000                   l6168 0000                   l6256 0A9F  
                 l6248 0A8B                   l6280 0F93                   l6272 0F7A                   l6264 0000  
                 l6352 0E8B                   l6344 0000                   l6336 0E74                   l6328 0000  
                 l6408 05AD                   l6440 0000                   l6432 0000                   l6512 0C33  
                 l6504 0000                   l6520 0000                   l7080 04D5                   l7160 0000  
                 l7152 0000                   l7144 0000                   l7136 0000                   l7128 0000  
                 l6098 0699                   l6178 17DC                   l6258 0000                   l6274 0F7F  
                 l6266 0F71                   l6290 0000                   l6362 0000                   l6354 0000  
                 l6442 067D                   l6514 0000                   l6506 0000                   l6522 0000  
                 l6602 0000                   l6610 0000                   l7082 04D8                   l7074 04B6  
                 l7058 0477                   l7162 0000                   l7154 0000                   l7146 0000  
                 l7138 0000                   l6196 0000                   l6188 0000                   l6284 0000  
                 l6276 0F89                   l6292 05EC                   l6364 0EA2                   l6380 0561  
                 l6372 0000                   l6436 0000                   l6452 0000                   l6516 0000  
                 l6508 0C1B                   l6524 0000                   l6604 0000                   l6540 08C8  
                 l6532 0000                   l6700 0000                   l7092 0000                   l7076 04B9  
                 l7068 049C                   l7164 0000                   l7156 0000                   l7148 0000  
                 l6198 0000                   l6286 0000                   l6278 0F8E                   l6294 05F1  
                 l6366 0000                   l6358 0000                   l6454 0EB9                   l6446 0000  
                 l6526 0000                   l6518 0000                   l6606 0953                   l6550 08DE  
                 l6534 0000                   l6630 0000                   l6622 0F0E                   l6702 0000  
                 l7094 04F1                   l7166 0000                   l7158 0000                   l6288 0000  
                 l6296 0000                   l6368 0EAA                   l6392 0000                   l6472 0000  
                 l6448 0000                   l6528 0000                   l6560 0000                   l6552 0000  
                 l6544 08CF                   l6536 0000                   l6640 0F1F                   l6632 0000  
                 l6624 0000                   l6616 0EFD                   l6720 0B9C                   l6712 0B84  
                 l6704 0B6C                   l6800 0E52                   l7096 04F5                   l7088 04E2  
                 l7168 0000                   l6298 0000                   l6386 0000                   l6466 0ECC  
                 l6474 0EDF                   l6458 0EC0                   l6490 0000                   l6482 0000  
                 l6570 0900                   l6562 08EC                   l6546 0000                   l6650 0000  
                 l6634 0000                   l6626 0000                   l6730 0000                   l6810 0000  
                 l7098 0000                   l6388 0586                   l6476 0000                   l6492 0000  
                 l6484 0000                   l6580 0918                   l6564 0000                   l6572 0905  
                 l6660 0000                   l6652 0F35                   l6644 0F29                   l6636 0000  
                 l6628 0000                   l6724 0BA8                   l6716 0B90                   l6708 0B78  
                 l6740 0ACA                   l6732 0000                   l6804 0000                   l6812 0AD3  
                 l6900 0000                   l6478 0EE7                   l6494 0000                   l6486 0000  
                 l6582 091D                   l6574 0909                   l6558 0000                   l6662 0000  
                 l6646 0000                   l6638 0000                   l6670 0000                   l6734 0AC0  
                 l6742 0000                   l6806 0000                   l6822 0AF0                   l6814 0AD9  
                 l6910 0000                   l6902 0000                   l6830 0000                   l6496 0BE0  
                 l6592 0000                   l6576 0000                   l6568 08FB                   l6656 0F3F  
                 l6648 0000                   l6728 0BB4                   l6736 0AC1                   l6760 0A46  
                 l6752 09F2                   l6816 0AE0                   l6904 0000                   l6498 0BED  
                 l6594 0937                   l6586 0000                   l6658 0000                   l6666 0000  
                 l6682 0000                   l6738 0000                   l6746 0000                   l6818 0AE4  
                 l6826 0AF7                   l6930 01C0                   l6922 017C                   l6914 0143  
                 l6906 0000                   l6850 0000                   l6842 002F                   l6596 0000  
                 l6588 092C                   l6676 0CBA                   l6668 0000                   l6692 0000  
                 l6756 0000                   l6764 0000                   l6828 0000                   l6916 0000  
                 l6908 0000                   l6860 0000                   l6852 0000                   l6844 003A  
                 l6836 0028                   l6598 0000                   l6678 0CC5                   l6686 0C8C  
                 l6694 0000                   l6782 0D8C                   l6950 0000                   l6942 01FC  
                 l6918 0000                   l6926 018C                   l6870 0000                   l6854 006A  
                 l6838 0000                   l6688 0C97                   l6696 0000                   l6776 0D47  
                 l6768 0000                   l6952 0000                   l6872 00A3                   l6864 0000  
                 l6848 0048                   l6698 0000                   l6794 0E0D                   l6786 0DA3  
                 l6970 0000                   l6954 022C                   l6938 01EB                   l6866 0078  
                 l6858 0000                   l6972 02A5                   l6964 0271                   l6956 0000  
                 l6948 0000                   l6892 0000                   l6884 00C9                   l6876 00A6  
                 l6868 009D                   l6990 02E2                   l6982 02D6                   l6974 0000  
                 l6958 026F                   l6894 00F5                   l6886 0000                   l6878 00B9  
                 l6992 02EE                   l6896 0000                   l6888 0000                   l6994 0000  
                 l6986 02D9                   l6978 02CE                   l6988 0000                   l6996 02F7  
                 STR_1 107C                   STR_2 1087                   _IOCB 0096                   u2055 06C5  
                 u2400 0000                   u2145 17A5                   u2405 05F5                   u4007 0B65  
                 u4017 0C56                   u2515 0E94                   u4107 0C46                   u4027 0C5C  
                 u4037 0C66                   u4047 0C6C                   u2800 0C02                   u2705 0ED2  
                 u4057 0BC9                   u4067 0BCF                   u2820 0C19                   u2740 0BDE  
                 u2565 056F                   u2645 0665                   u4077 0C06                   u2814 0C04  
                 u4087 0C0C                   u3535 0195                   u2840 0C24                   u2760 0BEB  
                 u4097 0C40                   u3545 01CA                   u3490 0000                   u2860 0C31  
                 u2780 0BF6                   u3645 02EB                   u3655 0300                   u3575 01E9  
                 u3495 0108                   _RBIE 005B                   u2880 0C3C                   _RBIF 0058  
                 u3825 04AC                   u3835 04C7                   u3755 045C                   u3595 029E  
                 u3685 0342                   u2894 0C3E                   u3775 0471                   u3695 0358  
                 u3785 0487                   u3937 16CC                   u3947 16DA                   u3957 0B12  
                 u3967 0B25                   u3977 0B38                   u3987 0B4B                   u3997 0B58  
                 _TMR1 000E                   _WPUB 0095                   _main 16A3                   _ngat 079B  
         ___ftpack@arg 0072           ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E  
                 _xung 0067                   start 000C      ___bmul@multiplier 0021           ___ftmul@cntr 003E  
         ___ftmul@sign 003F           ___fttol@exp1 0030           ___fttol@lval 002C         ??_lcd_put_byte 0073  
                ?_main 0070                  ?_ngat 0070        __end_of___awdiv 0EAF        __end_of___lbdiv 0A87  
      __end_of___ftadd 0967        __end_of___awmod 0EEC        __end_of___lbmod 0AA3        __end_of___ftneg 0706  
                _ANSEL 0188        __end_of___lldiv 0686        __end_of___ftmul 0F5B        ___awdiv@divisor 0078  
      __end_of___llmod 058F        __end_of___ftsub 08A5        __end_of___fttol 063D        ___awdiv@counter 0020  
                _TMR1H 000F                  _TMR1L 000E           ___lltoft@exp 007A                  _nRBPU 040F  
                _count 0065                  _scale 0CD7        __end_of_isdigit 05C9          ___ftpack@sign 0076  
                _putch 054D        __end_of_isprint 0C80                  pclath 000A                  status 0003  
                wtemp0 007E        ___lbdiv@divisor 0077        ___lbdiv@counter 0079           __end_of_main 1735  
         __end_of_ngat 07B2          lcd_gotoxy@col 0078          lcd_gotoxy@row 0077                 ??_main 005F  
        ___fttol@sign1 002B                 ??_ngat 0070   __size_of__tdiv_to_l_ 0078       __end_of___altoft 0CD7  
     ___llmod@dividend 0029                 ?_scale 0040       ___awdiv@dividend 007A                 ?_putch 0070  
     __end_of___ftpack 0FA7                 _ANSELH 0189       __end_of___lltoft 0CA8                 i1l1056 07A3  
               i1l1058 0000                 _T1SYNC 0082                 i1l6064 0000                 i1l6066 0000  
               i1l6058 0000                 i1l6068 07AA                 _TMR1GE 0086                 _TMR1CS 0081  
               _TMR1ON 0080                 _TRISB1 0431                 _TRISD1 0441                 _TRISE0 0448  
               _TRISD2 0442                 _TRISE1 0449                 _TRISD3 0443                 _TRISD4 0444  
               _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C72  
     __end_of_lcd_init 0BBB       __end_of_lcd_putc 0B00                 ___bmul 0F5B                 ___ftge 058F  
               ___wmul 05C9              ??___awdiv 007C              ??___lbdiv 0078              ??___ftadd 0046  
            ??___awmod 0076              ??___lbmod 0073              ??___ftneg 0075              ??___lldiv 007A  
            ??___ftmul 0037              ??___llmod 007A              ??___ftsub 007C              ??___fttol 0028  
               _fround 0967       ___awdiv@quotient 0022        ___awmod@divisor 0072        ___awmod@counter 0076  
               _printf 000F          lcd_put_byte@b 0072  ___ftmul@f3_as_product 003B              ??_isdigit 0072  
               saved_w 007E              ??_isprint 0072                 putch@c 007B       ___lbdiv@dividend 0078  
      ___lbmod@divisor 0072             ___altoft@c 0020        ___lbmod@counter 0075   __end_of_lcd_put_byte 0C4B  
           ___ftadd@f1 0040             ___ftadd@f2 0043             ___ftge@ff1 0072             ___ftge@ff2 0075  
           ___ftneg@f1 0072    ___bmul@multiplicand 007B             ___ftmul@f1 0031             ___ftmul@f2 0034  
           ___ftsub@f1 004F             ___ftsub@f2 004C             ___fttol@f1 0024         __pcstackCOMMON 0070  
           ___lltoft@c 0020          __end_of_scale 0E69          __end_of_putch 0551       ___lbdiv@quotient 007A  
           __div_to_l_ 1735      lcd_gotoxy@address 0079        __div_to_l_@exp1 002D        __div_to_l_@cntr 002C  
              ??_scale 0043        __div_to_l_@quot 0028                ??_putch 007B             __pbssBANK0 0062  
        __div_to_l_@f1 0072          __div_to_l_@f2 0075             __pmaintext 16A3                ?___bmul 007B  
              ?___ftge 0072                ?___wmul 0072             __pintentry 0004              ?___altoft 0020  
              ?_fround 004C              ?___ftpack 0072                ?_printf 0056              ?___lltoft 0020  
              _T1CKPS0 0084                _T1CKPS1 0085             _lcd_gotoxy 0AB9              ?_lcd_busy 0070  
            ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4108 0047        __size_of___bmul 000E  
      __size_of___ftge 002C                ___awdiv 0E69                ___lbdiv 0A6C                ___ftadd 08A5  
              ___awmod 0EAF                ___lbmod 0A87                ___ftneg 06FE                ___lldiv 063D  
      __size_of___wmul 0019                ___ftmul 0EEC                ___llmod 0551                ___ftsub 088F  
              ___fttol 05E2             ??___altoft 007A             ??___ftpack 0077        __size_of_fround 0105  
           ??___lltoft 007A        __size_of_printf 053E            ?__div_to_l_ 0072                _dpowers 1054  
              _isdigit 05BB       ___awmod@dividend 0074                _isprint 0C72  __size_of_lcd_put_byte 0090  
           ??_lcd_busy 0072             ??_lcd_init 0077             ??_lcd_putc 007A   end_of_initialization 07BB  
       lcd_put_byte@rs 0075        ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8  
              printf@f 00AC         __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0078  
         _lcd_put_byte 0BBB       ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076  
          printf@integ 00A5            printf@width 00B1    __size_of__div_to_l_ 00BE            ___ftmul@exp 003A  
       __end_of___bmul 0F69         __end_of___ftge 05BB         __end_of___wmul 05E2         __end_of_fround 0A6C  
       __end_of_printf 054D    start_initialization 07B2    __end_of__tdiv_to_l_ 06FE        ___llmod@divisor 0025  
      ___llmod@counter 007A               ??___bmul 007C               ??___ftge 0078    __size_of_lcd_gotoxy 0018  
             ??___wmul 0076               ??_fround 007C               ??_printf 005A      __size_of___altoft 002F  
           fround@prec 0055      __size_of___ftpack 003E      __size_of___lltoft 001E          __pcstackBANK0 0020  
        __pcstackBANK1 00A0           _isdigit$3671 0072      __size_of_lcd_busy 0027      __size_of_lcd_init 00BB  
    __size_of_lcd_putc 002F               ?___awdiv 0078               ?___lbdiv 0077               ?___ftadd 0040  
            __ptext520 054D              __ptext521 0AD1              __ptext530 08A5              __ptext522 088F  
            __ptext531 0C4B              __ptext523 0CD7               ?___awmod 0072              __ptext540 0F69  
            __ptext532 0BBB              __ptext524 0967              __ptext541 0A87              __ptext533 0EAF  
            __ptext525 0AB9              __ptext550 0000              __ptext542 0A6C              __ptext534 063D  
            __ptext526 0B00              __ptext543 05C9              __ptext535 058F              __ptext527 0C8A  
            __ptext519 000F              __ptext544 0F5B              __ptext536 06FE              __ptext528 0CA8  
            __ptext545 1735              __ptext537 0551              __ptext529 0EEC              __ptext546 0686  
            __ptext538 0E69              __ptext547 05BB              __ptext539 05E2               ?___lbmod 0072  
            __ptext548 0C72              __ptext549 079B               ?___ftneg 0072               ?___lldiv 0072  
             ?___ftmul 0031               ?___llmod 0025               ?___ftsub 004C              __npowers_ 1006  
             ?___fttol 0024              __pstrings 1000            __tdiv_to_l_ 0686           ??__div_to_l_ 0020  
             ?_isdigit 0070               ?_isprint 0070         __size_of_scale 0192         __size_of_putch 0004  
    interrupt_function 0004         ___wmul@product 0076     __end_of__div_to_l_ 17F3            __stringbase 1005  
    ___wmul@multiplier 0072             printf@_val 00A8             printf@flag 00AD             printf@fval 00B3  
           printf@prec 00B6              lcd_putc@c 007A           ??_lcd_gotoxy 0078       lcd_put_byte@temp 0076  
         _isprint$3674 0072     __end_of_lcd_gotoxy 0AD1       __size_of___awdiv 0046       __size_of___lbdiv 001B  
     __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftneg 0008  
     __size_of___lldiv 0049               ___altoft 0CA8       __size_of___ftmul 006F       __size_of___llmod 003E  
     __size_of___ftsub 0016       __size_of___fttol 005B               ___ftpack 0F69            _fround$4106 0052  
          _fround$4107 004F               ___lltoft 0C8A       __size_of_isdigit 000E       __size_of_isprint 000E  
             __powers_ 102D               _lcd_busy 0C4B               _lcd_init 0B00               _lcd_putc 0AD1  
        __size_of_main 0092          __size_of_ngat 0017              printf@exp 00AF               isdigit@c 0073  
             scale@scl 004A               intlevel1 0000       __tdiv_to_l_@exp1 0025       __tdiv_to_l_@cntr 0024  
     __tdiv_to_l_@quot 0020       ___lldiv@dividend 0076               isprint@c 0073              stringcode 1000  
             printf@ap 00A4           ?__tdiv_to_l_ 0072            _printf$3163 00A0       ___lldiv@quotient 0020  
             stringdir 1000               stringtab 1000  
