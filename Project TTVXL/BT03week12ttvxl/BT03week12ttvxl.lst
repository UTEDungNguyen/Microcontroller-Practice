

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Nov 15 16:16:32 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text768,local,class=CODE,delta=2
    14                           	psect	text771,local,class=CODE,delta=2
    15                           	psect	text773,local,class=CODE,delta=2
    16                           	psect	text774,local,class=CODE,delta=2
    17                           	psect	text777,local,class=CODE,delta=2
    18                           	psect	text795,local,class=CODE,delta=2
    19                           	psect	text799,local,class=CODE,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text802,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E3C2               	dw	58306	;#
    28                           
    29                           	psect	strings
    30  1000                     __pstrings:	
    31  1000                     stringtab:	
    32                           ;	global	stringdir,stringtab,__stringbase
    33                           
    34  1000                     stringcode:	
    35                           ;	String table - string pointers are 1 byte each
    36                           
    37  1000                     stringdir:	
    38  1000  3010               	movlw	high stringdir
    39  1001  008A               	movwf	10
    40  1002  0804               	movf	4,w
    41  1003  0A84               	incf	4,f
    42  1004  0782               	addwf	2,f
    43  1005                     __stringbase:	
    44  1005  3400               	retlw	0
    45  1006                     __npowers_:	
    46  1006  3400               	retlw	0
    47  1007  3480               	retlw	128
    48  1008  343F               	retlw	63
    49  1009  34CD               	retlw	205
    50  100A  34CC               	retlw	204
    51  100B  343D               	retlw	61
    52  100C  34D7               	retlw	215
    53  100D  3423               	retlw	35
    54  100E  343C               	retlw	60
    55  100F  3412               	retlw	18
    56  1010  3483               	retlw	131
    57  1011  343A               	retlw	58
    58  1012  34B7               	retlw	183
    59  1013  34D1               	retlw	209
    60  1014  3438               	retlw	56
    61  1015  34C6               	retlw	198
    62  1016  3427               	retlw	39
    63  1017  3437               	retlw	55
    64  1018  3438               	retlw	56
    65  1019  3486               	retlw	134
    66  101A  3435               	retlw	53
    67  101B  34C0               	retlw	192
    68  101C  34D6               	retlw	214
    69  101D  3433               	retlw	51
    70  101E  34CC               	retlw	204
    71  101F  342B               	retlw	43
    72  1020  3432               	retlw	50
    73  1021  3470               	retlw	112
    74  1022  3489               	retlw	137
    75  1023  3430               	retlw	48
    76  1024  34E7               	retlw	231
    77  1025  34DB               	retlw	219
    78  1026  342E               	retlw	46
    79  1027  34E5               	retlw	229
    80  1028  343C               	retlw	60
    81  1029  341E               	retlw	30
    82  102A  3442               	retlw	66
    83  102B  34A2               	retlw	162
    84  102C  340D               	retlw	13
    85  102D                     __powers_:	
    86  102D  3400               	retlw	0
    87  102E  3480               	retlw	128
    88  102F  343F               	retlw	63
    89  1030  3400               	retlw	0
    90  1031  3420               	retlw	32
    91  1032  3441               	retlw	65
    92  1033  3400               	retlw	0
    93  1034  34C8               	retlw	200
    94  1035  3442               	retlw	66
    95  1036  3400               	retlw	0
    96  1037  347A               	retlw	122
    97  1038  3444               	retlw	68
    98  1039  3440               	retlw	64
    99  103A  341C               	retlw	28
   100  103B  3446               	retlw	70
   101  103C  3450               	retlw	80
   102  103D  34C3               	retlw	195
   103  103E  3447               	retlw	71
   104  103F  3424               	retlw	36
   105  1040  3474               	retlw	116
   106  1041  3449               	retlw	73
   107  1042  3497               	retlw	151
   108  1043  3418               	retlw	24
   109  1044  344B               	retlw	75
   110  1045  34BC               	retlw	188
   111  1046  34BE               	retlw	190
   112  1047  344C               	retlw	76
   113  1048  346B               	retlw	107
   114  1049  346E               	retlw	110
   115  104A  344E               	retlw	78
   116  104B  3403               	retlw	3
   117  104C  3415               	retlw	21
   118  104D  3450               	retlw	80
   119  104E  3479               	retlw	121
   120  104F  34AD               	retlw	173
   121  1050  3460               	retlw	96
   122  1051  34F3               	retlw	243
   123  1052  3449               	retlw	73
   124  1053  3471               	retlw	113
   125  1054                     _dpowers:	
   126  1054  3401               	retlw	1
   127  1055  3400               	retlw	0
   128  1056  3400               	retlw	0
   129  1057  3400               	retlw	0
   130  1058  340A               	retlw	10
   131  1059  3400               	retlw	0
   132  105A  3400               	retlw	0
   133  105B  3400               	retlw	0
   134  105C  3464               	retlw	100
   135  105D  3400               	retlw	0
   136  105E  3400               	retlw	0
   137  105F  3400               	retlw	0
   138  1060  34E8               	retlw	232
   139  1061  3403               	retlw	3
   140  1062  3400               	retlw	0
   141  1063  3400               	retlw	0
   142  1064  3410               	retlw	16
   143  1065  3427               	retlw	39
   144  1066  3400               	retlw	0
   145  1067  3400               	retlw	0
   146  1068  34A0               	retlw	160
   147  1069  3486               	retlw	134
   148  106A  3401               	retlw	1
   149  106B  3400               	retlw	0
   150  106C  3440               	retlw	64
   151  106D  3442               	retlw	66
   152  106E  340F               	retlw	15
   153  106F  3400               	retlw	0
   154  1070  3480               	retlw	128
   155  1071  3496               	retlw	150
   156  1072  3498               	retlw	152
   157  1073  3400               	retlw	0
   158  1074  3400               	retlw	0
   159  1075  34E1               	retlw	225
   160  1076  34F5               	retlw	245
   161  1077  3405               	retlw	5
   162  1078  3400               	retlw	0
   163  1079  34CA               	retlw	202
   164  107A  349A               	retlw	154
   165  107B  343B               	retlw	59
   166  000E                     _TMR1	set	14
   167  0001                     _TMR0	set	1
   168  000F                     _TMR1H	set	15
   169  000E                     _TMR1L	set	14
   170  005F                     _GIE	set	95
   171  0041                     _RD1	set	65
   172  0042                     _RD2	set	66
   173  0043                     _RD3	set	67
   174  0044                     _RD4	set	68
   175  0045                     _RD5	set	69
   176  0046                     _RD6	set	70
   177  0047                     _RD7	set	71
   178  005D                     _T0IE	set	93
   179  005A                     _T0IF	set	90
   180  0084                     _T1CKPS0	set	132
   181  0085                     _T1CKPS1	set	133
   182  0082                     _T1SYNC	set	130
   183  0081                     _TMR1CS	set	129
   184  0086                     _TMR1GE	set	134
   185  0080                     _TMR1ON	set	128
   186  0088                     _TRISD	set	136
   187  0408                     _PS0	set	1032
   188  0409                     _PS1	set	1033
   189  040A                     _PS2	set	1034
   190  040B                     _PSA	set	1035
   191  040D                     _T0CS	set	1037
   192  042C                     _TRISA4	set	1068
   193  0441                     _TRISD1	set	1089
   194  0442                     _TRISD2	set	1090
   195  0443                     _TRISD3	set	1091
   196  0444                     _TRISD4	set	1092
   197  0445                     _TRISD5	set	1093
   198  0446                     _TRISD6	set	1094
   199  0447                     _TRISD7	set	1095
   200  0448                     _TRISE0	set	1096
   201  0188                     _ANSEL	set	392
   202  0189                     _ANSELH	set	393
   203  107C                     STR_1:	
   204  107C  3478               	retlw	120	;'x'
   205  107D  3475               	retlw	117	;'u'
   206  107E  346E               	retlw	110	;'n'
   207  107F  3467               	retlw	103	;'g'
   208  1080  343A               	retlw	58	;':'
   209  1081  3420               	retlw	32	;' '
   210  1082  3425               	retlw	37	;'%'
   211  1083  3430               	retlw	48	;'0'
   212  1084  3438               	retlw	56	;'8'
   213  1085  3475               	retlw	117	;'u'
   214  1086  3400               	retlw	0
   215  1087                     STR_2:	
   216  1087  3476               	retlw	118	;'v'
   217  1088  343A               	retlw	58	;':'
   218  1089  3420               	retlw	32	;' '
   219  108A  3425               	retlw	37	;'%'
   220  108B  3433               	retlw	51	;'3'
   221  108C  342E               	retlw	46	;'.'
   222  108D  3432               	retlw	50	;'2'
   223  108E  3466               	retlw	102	;'f'
   224  108F  3400               	retlw	0
   225                           
   226                           	psect	cinit
   227  07C6                     start_initialization:	
   228                           
   229                           ; Clear objects allocated to BANK0
   230  07C6  01E3               	clrf	__pbssBANK0& (0+127)
   231  07C7  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   232  07C8  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   233                           
   234                           ; Clear objects allocated to BANK1
   235  07C9  1683               	bsf	3,5	;RP0=1, select bank1
   236  07CA  01C9               	clrf	__pbssBANK1& (0+127)
   237  07CB  01CA               	clrf	(__pbssBANK1+1)& (0+127)
   238  07CC  01CB               	clrf	(__pbssBANK1+2)& (0+127)
   239  07CD  01CC               	clrf	(__pbssBANK1+3)& (0+127)
   240  07CE  01CD               	clrf	(__pbssBANK1+4)& (0+127)
   241  07CF  01CE               	clrf	(__pbssBANK1+5)& (0+127)
   242  07D0  01CF               	clrf	(__pbssBANK1+6)& (0+127)
   243  07D1                     end_of_initialization:	
   244                           ;End of C runtime variable initialization code
   245                           
   246  07D1  0183               	clrf	3
   247  07D2  160A  118A  2D51   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	bssBANK0
   250  0063                     __pbssBANK0:	
   251  0063                     _dem:	
   252  0063                     	ds	3
   253                           
   254                           	psect	bssBANK1
   255  00C9                     __pbssBANK1:	
   256  00C9                     _v:	
   257  00C9                     	ds	3
   258  00CC                     _xung:	
   259  00CC                     	ds	4
   260                           
   261                           	psect	cstackBANK1
   262  00A0                     __pcstackBANK1:	
   263  00A0                     ?___ftsub:	
   264  00A0                     ___ftsub@f2:	
   265                           ; 3 bytes @ 0x0
   266                           
   267  00A0                     _fround$4111:	
   268                           ; 3 bytes @ 0x0
   269                           
   270                           
   271                           ; 3 bytes @ 0x0
   272  00A0                     	ds	3
   273  00A3                     ___ftsub@f1:	
   274  00A3                     _fround$4110:	
   275                           ; 3 bytes @ 0x3
   276                           
   277                           
   278                           ; 3 bytes @ 0x3
   279  00A3                     	ds	3
   280  00A6                     fround@prec:	
   281                           
   282                           ; 1 bytes @ 0x6
   283  00A6                     	ds	1
   284  00A7                     ?_printf:	
   285                           
   286                           ; 2 bytes @ 0x7
   287  00A7                     	ds	4
   288  00AB                     ??_printf:	
   289                           
   290                           ; 0 bytes @ 0xB
   291  00AB                     	ds	5
   292  00B0                     _printf$3165:	
   293                           
   294                           ; 4 bytes @ 0x10
   295  00B0                     	ds	4
   296  00B4                     printf@ap:	
   297                           
   298                           ; 1 bytes @ 0x14
   299  00B4                     	ds	1
   300  00B5                     printf@integ:	
   301                           
   302                           ; 3 bytes @ 0x15
   303  00B5                     	ds	3
   304  00B8                     printf@_val:	
   305                           
   306                           ; 4 bytes @ 0x18
   307  00B8                     	ds	4
   308  00BC                     printf@f:	
   309                           
   310                           ; 1 bytes @ 0x1C
   311  00BC                     	ds	1
   312  00BD                     printf@flag:	
   313                           
   314                           ; 2 bytes @ 0x1D
   315  00BD                     	ds	2
   316  00BF                     printf@exp:	
   317                           
   318                           ; 2 bytes @ 0x1F
   319  00BF                     	ds	2
   320  00C1                     printf@width:	
   321                           
   322                           ; 2 bytes @ 0x21
   323  00C1                     	ds	2
   324  00C3                     printf@fval:	
   325                           
   326                           ; 3 bytes @ 0x23
   327  00C3                     	ds	3
   328  00C6                     printf@prec:	
   329                           
   330                           ; 2 bytes @ 0x26
   331  00C6                     	ds	2
   332  00C8                     printf@c:	
   333                           
   334                           ; 1 bytes @ 0x28
   335  00C8                     	ds	1
   336                           
   337                           	psect	cstackCOMMON
   338  0070                     __pcstackCOMMON:	
   339  0070                     ?_lcd_init:	
   340  0070                     ?_lcd_putc:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ?_isprint:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_isdigit:	
   347                           ; 1 bit 
   348                           
   349  0070                     ?_main:	
   350                           ; 1 bit 
   351                           
   352  0070                     ?_putch:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_ngat:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_lcd_busy:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?i1___ftpack:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     i1___ftpack@arg:	
   365                           ; 3 bytes @ 0x0
   366                           
   367                           
   368                           ; 3 bytes @ 0x0
   369  0070                     	ds	3
   370  0073                     i1___ftpack@exp:	
   371                           
   372                           ; 1 bytes @ 0x3
   373  0073                     	ds	1
   374  0074                     i1___ftpack@sign:	
   375                           
   376                           ; 1 bytes @ 0x4
   377  0074                     	ds	1
   378  0075                     ??i1___ftpack:	
   379                           
   380                           ; 0 bytes @ 0x5
   381  0075                     	ds	3
   382  0078                     ?i1___ftadd:	
   383  0078                     i1___ftadd@f1:	
   384                           ; 3 bytes @ 0x8
   385                           
   386                           
   387                           ; 3 bytes @ 0x8
   388  0078                     	ds	3
   389  007B                     i1___ftadd@f2:	
   390                           
   391                           ; 3 bytes @ 0xB
   392  007B                     	ds	3
   393                           
   394                           	psect	cstackBANK0
   395  0020                     __pcstackBANK0:	
   396  0020                     ??i1___ftadd:	
   397                           
   398                           ; 0 bytes @ 0x0
   399  0020                     	ds	3
   400  0023                     i1___ftadd@sign:	
   401                           
   402                           ; 1 bytes @ 0x3
   403  0023                     	ds	1
   404  0024                     i1___ftadd@exp2:	
   405                           
   406                           ; 1 bytes @ 0x4
   407  0024                     	ds	1
   408  0025                     i1___ftadd@exp1:	
   409                           
   410                           ; 1 bytes @ 0x5
   411  0025                     	ds	1
   412  0026                     ??_ngat:	
   413                           
   414                           ; 0 bytes @ 0x6
   415  0026                     	ds	2
   416  0028                     ?_lcd_put_byte:	
   417  0028                     ??_lcd_busy:	
   418                           ; 0 bytes @ 0x8
   419                           
   420  0028                     ??_isprint:	
   421                           ; 0 bytes @ 0x8
   422                           
   423  0028                     ??_isdigit:	
   424                           ; 0 bytes @ 0x8
   425                           
   426  0028                     ?___ftge:	
   427                           ; 0 bytes @ 0x8
   428                           
   429  0028                     ?___lbmod:	
   430                           ; 1 bit 
   431                           
   432  0028                     ?___wmul:	
   433                           ; 1 bytes @ 0x8
   434                           
   435  0028                     ?___awmod:	
   436                           ; 2 bytes @ 0x8
   437                           
   438  0028                     ?___ftpack:	
   439                           ; 2 bytes @ 0x8
   440                           
   441  0028                     ?___ftneg:	
   442                           ; 3 bytes @ 0x8
   443                           
   444  0028                     ?__tdiv_to_l_:	
   445                           ; 3 bytes @ 0x8
   446                           
   447  0028                     ?__div_to_l_:	
   448                           ; 4 bytes @ 0x8
   449                           
   450  0028                     ?___lldiv:	
   451                           ; 4 bytes @ 0x8
   452                           
   453  0028                     lcd_put_byte@b:	
   454                           ; 4 bytes @ 0x8
   455                           
   456  0028                     _isdigit$3673:	
   457                           ; 1 bytes @ 0x8
   458                           
   459  0028                     _isprint$3676:	
   460                           ; 1 bytes @ 0x8
   461                           
   462  0028                     ___lbmod@divisor:	
   463                           ; 1 bytes @ 0x8
   464                           
   465  0028                     ___wmul@multiplier:	
   466                           ; 1 bytes @ 0x8
   467                           
   468  0028                     ___awmod@divisor:	
   469                           ; 2 bytes @ 0x8
   470                           
   471  0028                     ___ftneg@f1:	
   472                           ; 2 bytes @ 0x8
   473                           
   474  0028                     ___ftge@ff1:	
   475                           ; 3 bytes @ 0x8
   476                           
   477  0028                     __tdiv_to_l_@f1:	
   478                           ; 3 bytes @ 0x8
   479                           
   480  0028                     __div_to_l_@f1:	
   481                           ; 3 bytes @ 0x8
   482                           
   483  0028                     ___ftpack@arg:	
   484                           ; 3 bytes @ 0x8
   485                           
   486  0028                     ___lldiv@divisor:	
   487                           ; 3 bytes @ 0x8
   488                           
   489                           
   490                           ; 4 bytes @ 0x8
   491  0028                     	ds	1
   492  0029                     ??_lcd_put_byte:	
   493  0029                     ??___lbmod:	
   494                           ; 0 bytes @ 0x9
   495                           
   496  0029                     lcd_busy@busy:	
   497                           ; 0 bytes @ 0x9
   498                           
   499  0029                     isdigit@c:	
   500                           ; 1 bytes @ 0x9
   501                           
   502  0029                     isprint@c:	
   503                           ; 1 bytes @ 0x9
   504                           
   505                           
   506                           ; 1 bytes @ 0x9
   507  0029                     	ds	1
   508  002A                     ___lbmod@dividend:	
   509  002A                     ___wmul@multiplicand:	
   510                           ; 1 bytes @ 0xA
   511                           
   512  002A                     ___awmod@dividend:	
   513                           ; 2 bytes @ 0xA
   514                           
   515                           
   516                           ; 2 bytes @ 0xA
   517  002A                     	ds	1
   518  002B                     ??___ftneg:	
   519  002B                     lcd_put_byte@rs:	
   520                           ; 0 bytes @ 0xB
   521                           
   522  002B                     ___lbmod@counter:	
   523                           ; 1 bytes @ 0xB
   524                           
   525  002B                     ___ftpack@exp:	
   526                           ; 1 bytes @ 0xB
   527                           
   528  002B                     ___ftge@ff2:	
   529                           ; 1 bytes @ 0xB
   530                           
   531  002B                     __tdiv_to_l_@f2:	
   532                           ; 3 bytes @ 0xB
   533                           
   534  002B                     __div_to_l_@f2:	
   535                           ; 3 bytes @ 0xB
   536                           
   537                           
   538                           ; 3 bytes @ 0xB
   539  002B                     	ds	1
   540  002C                     ??___wmul:	
   541  002C                     ??___awmod:	
   542                           ; 0 bytes @ 0xC
   543                           
   544  002C                     lcd_put_byte@temp:	
   545                           ; 0 bytes @ 0xC
   546                           
   547  002C                     ___lbmod@rem:	
   548                           ; 1 bytes @ 0xC
   549                           
   550  002C                     ___awmod@counter:	
   551                           ; 1 bytes @ 0xC
   552                           
   553  002C                     ___ftpack@sign:	
   554                           ; 1 bytes @ 0xC
   555                           
   556  002C                     ___wmul@product:	
   557                           ; 1 bytes @ 0xC
   558                           
   559  002C                     ___lldiv@dividend:	
   560                           ; 2 bytes @ 0xC
   561                           
   562                           
   563                           ; 4 bytes @ 0xC
   564  002C                     	ds	1
   565  002D                     ??_lcd_init:	
   566  002D                     ?_lcd_gotoxy:	
   567                           ; 0 bytes @ 0xD
   568                           
   569  002D                     ??___ftpack:	
   570                           ; 0 bytes @ 0xD
   571                           
   572  002D                     ?___lbdiv:	
   573                           ; 0 bytes @ 0xD
   574                           
   575  002D                     lcd_gotoxy@row:	
   576                           ; 1 bytes @ 0xD
   577                           
   578  002D                     ___lbdiv@divisor:	
   579                           ; 1 bytes @ 0xD
   580                           
   581  002D                     ___awmod@sign:	
   582                           ; 1 bytes @ 0xD
   583                           
   584                           
   585                           ; 1 bytes @ 0xD
   586  002D                     	ds	1
   587  002E                     ??_lcd_gotoxy:	
   588  002E                     ??__tdiv_to_l_:	
   589                           ; 0 bytes @ 0xE
   590                           
   591  002E                     ??__div_to_l_:	
   592                           ; 0 bytes @ 0xE
   593                           
   594  002E                     ??___lbdiv:	
   595                           ; 0 bytes @ 0xE
   596                           
   597  002E                     ??___ftge:	
   598                           ; 0 bytes @ 0xE
   599                           
   600  002E                     ?___awdiv:	
   601                           ; 0 bytes @ 0xE
   602                           
   603  002E                     lcd_gotoxy@col:	
   604                           ; 2 bytes @ 0xE
   605                           
   606  002E                     ___lbdiv@dividend:	
   607                           ; 1 bytes @ 0xE
   608                           
   609  002E                     ___awdiv@divisor:	
   610                           ; 1 bytes @ 0xE
   611                           
   612                           
   613                           ; 2 bytes @ 0xE
   614  002E                     	ds	1
   615  002F                     lcd_gotoxy@address:	
   616  002F                     ___lbdiv@counter:	
   617                           ; 1 bytes @ 0xF
   618                           
   619                           
   620                           ; 1 bytes @ 0xF
   621  002F                     	ds	1
   622  0030                     ??_lcd_putc:	
   623  0030                     ??___lldiv:	
   624                           ; 0 bytes @ 0x10
   625                           
   626  0030                     ?___altoft:	
   627                           ; 0 bytes @ 0x10
   628                           
   629  0030                     ?___lltoft:	
   630                           ; 3 bytes @ 0x10
   631                           
   632  0030                     lcd_putc@c:	
   633                           ; 3 bytes @ 0x10
   634                           
   635  0030                     ___lbdiv@quotient:	
   636                           ; 1 bytes @ 0x10
   637                           
   638  0030                     ___awdiv@dividend:	
   639                           ; 1 bytes @ 0x10
   640                           
   641  0030                     ___lldiv@quotient:	
   642                           ; 2 bytes @ 0x10
   643                           
   644  0030                     ___altoft@c:	
   645                           ; 4 bytes @ 0x10
   646                           
   647  0030                     ___lltoft@c:	
   648                           ; 4 bytes @ 0x10
   649                           
   650                           
   651                           ; 4 bytes @ 0x10
   652  0030                     	ds	1
   653  0031                     ??_putch:	
   654  0031                     ?___bmul:	
   655                           ; 0 bytes @ 0x11
   656                           
   657  0031                     putch@c:	
   658                           ; 1 bytes @ 0x11
   659                           
   660  0031                     ___bmul@multiplicand:	
   661                           ; 1 bytes @ 0x11
   662                           
   663  0031                     __tdiv_to_l_@quot:	
   664                           ; 1 bytes @ 0x11
   665                           
   666                           
   667                           ; 4 bytes @ 0x11
   668  0031                     	ds	1
   669  0032                     ??___bmul:	
   670  0032                     ??___awdiv:	
   671                           ; 0 bytes @ 0x12
   672                           
   673  0032                     ___bmul@product:	
   674                           ; 0 bytes @ 0x12
   675                           
   676  0032                     ___awdiv@counter:	
   677                           ; 1 bytes @ 0x12
   678                           
   679                           
   680                           ; 1 bytes @ 0x12
   681  0032                     	ds	1
   682  0033                     ___bmul@multiplier:	
   683  0033                     ___awdiv@sign:	
   684                           ; 1 bytes @ 0x13
   685                           
   686                           
   687                           ; 1 bytes @ 0x13
   688  0033                     	ds	1
   689  0034                     ??___altoft:	
   690  0034                     ??___lltoft:	
   691                           ; 0 bytes @ 0x14
   692                           
   693  0034                     ___lldiv@counter:	
   694                           ; 0 bytes @ 0x14
   695                           
   696  0034                     ___altoft@exp:	
   697                           ; 1 bytes @ 0x14
   698                           
   699  0034                     ___lltoft@exp:	
   700                           ; 1 bytes @ 0x14
   701                           
   702  0034                     ___awdiv@quotient:	
   703                           ; 1 bytes @ 0x14
   704                           
   705                           
   706                           ; 2 bytes @ 0x14
   707  0034                     	ds	1
   708  0035                     ?___llmod:	
   709  0035                     ___altoft@sign:	
   710                           ; 4 bytes @ 0x15
   711                           
   712  0035                     __tdiv_to_l_@cntr:	
   713                           ; 1 bytes @ 0x15
   714                           
   715  0035                     ___llmod@divisor:	
   716                           ; 1 bytes @ 0x15
   717                           
   718                           
   719                           ; 4 bytes @ 0x15
   720  0035                     	ds	1
   721  0036                     ?___ftdiv:	
   722  0036                     ?___fttol:	
   723                           ; 3 bytes @ 0x16
   724                           
   725  0036                     __tdiv_to_l_@exp1:	
   726                           ; 4 bytes @ 0x16
   727                           
   728  0036                     ___ftdiv@f2:	
   729                           ; 1 bytes @ 0x16
   730                           
   731  0036                     ___fttol@f1:	
   732                           ; 3 bytes @ 0x16
   733                           
   734  0036                     __div_to_l_@quot:	
   735                           ; 3 bytes @ 0x16
   736                           
   737                           
   738                           ; 4 bytes @ 0x16
   739  0036                     	ds	3
   740  0039                     ___ftdiv@f1:	
   741  0039                     ___llmod@dividend:	
   742                           ; 3 bytes @ 0x19
   743                           
   744                           
   745                           ; 4 bytes @ 0x19
   746  0039                     	ds	1
   747  003A                     ??___fttol:	
   748  003A                     __div_to_l_@cntr:	
   749                           ; 0 bytes @ 0x1A
   750                           
   751                           
   752                           ; 1 bytes @ 0x1A
   753  003A                     	ds	1
   754  003B                     __div_to_l_@exp1:	
   755                           
   756                           ; 1 bytes @ 0x1B
   757  003B                     	ds	1
   758  003C                     ??___ftdiv:	
   759                           
   760                           ; 0 bytes @ 0x1C
   761  003C                     	ds	1
   762  003D                     ??___llmod:	
   763  003D                     ___fttol@sign1:	
   764                           ; 0 bytes @ 0x1D
   765                           
   766  003D                     ___llmod@counter:	
   767                           ; 1 bytes @ 0x1D
   768                           
   769                           
   770                           ; 1 bytes @ 0x1D
   771  003D                     	ds	1
   772  003E                     ___fttol@lval:	
   773                           
   774                           ; 4 bytes @ 0x1E
   775  003E                     	ds	1
   776  003F                     ___ftdiv@cntr:	
   777                           
   778                           ; 1 bytes @ 0x1F
   779  003F                     	ds	1
   780  0040                     ___ftdiv@f3:	
   781                           
   782                           ; 3 bytes @ 0x20
   783  0040                     	ds	2
   784  0042                     ___fttol@exp1:	
   785                           
   786                           ; 1 bytes @ 0x22
   787  0042                     	ds	1
   788  0043                     ___ftdiv@exp:	
   789                           
   790                           ; 1 bytes @ 0x23
   791  0043                     	ds	1
   792  0044                     ___ftdiv@sign:	
   793                           
   794                           ; 1 bytes @ 0x24
   795  0044                     	ds	1
   796  0045                     ?___ftmul:	
   797  0045                     ___ftmul@f1:	
   798                           ; 3 bytes @ 0x25
   799                           
   800                           
   801                           ; 3 bytes @ 0x25
   802  0045                     	ds	3
   803  0048                     ___ftmul@f2:	
   804                           
   805                           ; 3 bytes @ 0x28
   806  0048                     	ds	3
   807  004B                     ??___ftmul:	
   808                           
   809                           ; 0 bytes @ 0x2B
   810  004B                     	ds	3
   811  004E                     ___ftmul@exp:	
   812                           
   813                           ; 1 bytes @ 0x2E
   814  004E                     	ds	1
   815  004F                     ___ftmul@f3_as_product:	
   816                           
   817                           ; 3 bytes @ 0x2F
   818  004F                     	ds	3
   819  0052                     ___ftmul@cntr:	
   820                           
   821                           ; 1 bytes @ 0x32
   822  0052                     	ds	1
   823  0053                     ___ftmul@sign:	
   824                           
   825                           ; 1 bytes @ 0x33
   826  0053                     	ds	1
   827  0054                     ?_scale:	
   828  0054                     ?___ftadd:	
   829                           ; 3 bytes @ 0x34
   830                           
   831  0054                     ___ftadd@f1:	
   832                           ; 3 bytes @ 0x34
   833                           
   834                           
   835                           ; 3 bytes @ 0x34
   836  0054                     	ds	3
   837  0057                     ??_scale:	
   838  0057                     ___ftadd@f2:	
   839                           ; 0 bytes @ 0x37
   840                           
   841                           
   842                           ; 3 bytes @ 0x37
   843  0057                     	ds	3
   844  005A                     ??___ftadd:	
   845                           
   846                           ; 0 bytes @ 0x3A
   847  005A                     	ds	1
   848  005B                     _scale$4112:	
   849                           
   850                           ; 3 bytes @ 0x3B
   851  005B                     	ds	2
   852  005D                     ___ftadd@sign:	
   853                           
   854                           ; 1 bytes @ 0x3D
   855  005D                     	ds	1
   856  005E                     scale@scl:	
   857  005E                     ___ftadd@exp2:	
   858                           ; 1 bytes @ 0x3E
   859                           
   860                           
   861                           ; 1 bytes @ 0x3E
   862  005E                     	ds	1
   863  005F                     ___ftadd@exp1:	
   864                           
   865                           ; 1 bytes @ 0x3F
   866  005F                     	ds	1
   867  0060                     ??___ftsub:	
   868  0060                     ?_fround:	
   869                           ; 0 bytes @ 0x40
   870                           
   871                           
   872                           ; 3 bytes @ 0x40
   873  0060                     	ds	3
   874  0063                     ??_main:	
   875  0063                     ??_fround:	
   876                           ; 0 bytes @ 0x43
   877                           
   878                           
   879                           	psect	maintext
   880  1551                     __pmaintext:	
   881                           ; 0 bytes @ 0x43
   882 ;;Data sizes: Strings 20, constant 118, data 0, bss 10, persistent 0 stack 0
   883 ;;Auto spaces:   Size  Autos    Used
   884 ;; COMMON          14     14      14
   885 ;; BANK0           80     67      70
   886 ;; BANK1           80     41      48
   887 ;; BANK3           96      0       0
   888 ;; BANK2           96      0       0
   889 ;;
   890 ;; Pointer list with targets:
   891 ;; ?i1___ftpack	float  size(1) Largest target is 0
   892 ;;
   893 ;; ?i1___ftadd	float  size(1) Largest target is 0
   894 ;;
   895 ;; ?___ftpack	float  size(1) Largest target is 0
   896 ;;
   897 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   898 ;;
   899 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   900 ;;
   901 ;; ?___ftsub	float  size(1) Largest target is 0
   902 ;;
   903 ;; ?___lltoft	float  size(1) Largest target is 0
   904 ;;
   905 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   906 ;;
   907 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   908 ;;
   909 ;; ?___fttol	long  size(1) Largest target is 0
   910 ;;
   911 ;; ?___ftneg	float  size(1) Largest target is 0
   912 ;;
   913 ;; ?___awmod	int  size(1) Largest target is 40
   914 ;;		 -> dpowers(CODE[40]), 
   915 ;;
   916 ;; ?___awdiv	int  size(1) Largest target is 0
   917 ;;
   918 ;; ?_scale	int  size(1) Largest target is 0
   919 ;;
   920 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   921 ;;
   922 ;; ?_fround	unsigned int  size(1) Largest target is 0
   923 ;;
   924 ;; ?___ftadd	float  size(1) Largest target is 0
   925 ;;
   926 ;; ?___ftdiv	float  size(1) Largest target is 0
   927 ;;
   928 ;; ?___altoft	float  size(1) Largest target is 0
   929 ;;
   930 ;; ?___ftmul	float  size(1) Largest target is 0
   931 ;;
   932 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   933 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   934 ;;
   935 ;; ?_printf	int  size(1) Largest target is 0
   936 ;;
   937 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   938 ;;		 -> ?_printf(BANK1[2]), 
   939 ;;
   940 ;; S3154$_cp	PTR const unsigned char  size(1) Largest target is 0
   941 ;;
   942 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   943 ;;
   944 ;;
   945 ;; Critical Paths under _main in COMMON
   946 ;;
   947 ;;   None.
   948 ;;
   949 ;; Critical Paths under _ngat in COMMON
   950 ;;
   951 ;;   _ngat->i1___ftadd
   952 ;;   i1___ftadd->i1___ftpack
   953 ;;
   954 ;; Critical Paths under _main in BANK0
   955 ;;
   956 ;;   _printf->_fround
   957 ;;   _putch->_lcd_putc
   958 ;;   _lcd_putc->_lcd_gotoxy
   959 ;;   ___ftsub->___ftadd
   960 ;;   _scale->___ftmul
   961 ;;   _fround->___ftadd
   962 ;;   _lcd_gotoxy->_lcd_put_byte
   963 ;;   _lcd_init->_lcd_put_byte
   964 ;;   ___lltoft->___ftpack
   965 ;;   ___altoft->___ftpack
   966 ;;   ___ftmul->___ftdiv
   967 ;;   ___ftdiv->___altoft
   968 ;;   ___ftadd->___ftmul
   969 ;;   ___llmod->___lldiv
   970 ;;   ___awdiv->___awmod
   971 ;;   ___fttol->___awdiv
   972 ;;   ___lbdiv->___lbmod
   973 ;;   ___bmul->___lbdiv
   974 ;;
   975 ;; Critical Paths under _ngat in BANK0
   976 ;;
   977 ;;   _ngat->i1___ftadd
   978 ;;
   979 ;; Critical Paths under _main in BANK1
   980 ;;
   981 ;;   _main->_printf
   982 ;;   _printf->_fround
   983 ;;
   984 ;; Critical Paths under _ngat in BANK1
   985 ;;
   986 ;;   None.
   987 ;;
   988 ;; Critical Paths under _main in BANK3
   989 ;;
   990 ;;   None.
   991 ;;
   992 ;; Critical Paths under _ngat in BANK3
   993 ;;
   994 ;;   None.
   995 ;;
   996 ;; Critical Paths under _main in BANK2
   997 ;;
   998 ;;   None.
   999 ;;
  1000 ;; Critical Paths under _ngat in BANK2
  1001 ;;
  1002 ;;   None.
  1003 ;;
  1004 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1005 ;;
  1006 ;;
  1007 ;;Call Graph Tables:
  1008 ;;
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (0) _main                                                 0     0      0   14025
  1013 ;;                           _lcd_init
  1014 ;;                           ___altoft
  1015 ;;                            ___ftdiv
  1016 ;;                            ___ftmul
  1017 ;;                         _lcd_gotoxy
  1018 ;;                             _printf
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (1) _printf                                              38    34      4   12097
  1021 ;;                                              7 BANK1     34    30      4
  1022 ;;                              _putch
  1023 ;;                            _isdigit
  1024 ;;                             ___wmul
  1025 ;;                             ___ftge
  1026 ;;                            ___ftneg
  1027 ;;                            ___awdiv
  1028 ;;                              _scale
  1029 ;;                            ___ftmul
  1030 ;;                             _fround
  1031 ;;                            ___ftadd
  1032 ;;                            ___fttol
  1033 ;;                         __div_to_l_
  1034 ;;                        __tdiv_to_l_
  1035 ;;                           ___lltoft
  1036 ;;                            ___ftsub
  1037 ;;                            ___lldiv
  1038 ;;                            ___llmod
  1039 ;; ---------------------------------------------------------------------------------
  1040 ;; (2) _putch                                                1     1      0     713
  1041 ;;                                             17 BANK0      1     1      0
  1042 ;;                           _lcd_putc
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (3) _lcd_putc                                             1     1      0     691
  1045 ;;                                             16 BANK0      1     1      0
  1046 ;;                       _lcd_put_byte
  1047 ;;                           _lcd_busy
  1048 ;;                         _lcd_gotoxy
  1049 ;;                            _isprint
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (2) ___ftsub                                              6     0      6    1114
  1052 ;;                                              0 BANK1      6     0      6
  1053 ;;                            ___ftadd
  1054 ;;                           ___lltoft (ARG)
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (2) _scale                                               14    11      3    1688
  1057 ;;                                             52 BANK0     11     8      3
  1058 ;;                            ___awmod
  1059 ;;                            ___awdiv
  1060 ;;                            ___ftmul
  1061 ;;                             ___bmul
  1062 ;;                            ___fttol (ARG)
  1063 ;; ---------------------------------------------------------------------------------
  1064 ;; (2) _fround                                              13    10      3    1215
  1065 ;;                                             64 BANK0      3     0      3
  1066 ;;                                              0 BANK1      7     7      0
  1067 ;;                            ___lbmod
  1068 ;;                            ___lbdiv
  1069 ;;                             ___bmul
  1070 ;;                            ___ftmul
  1071 ;;                            ___ftadd (ARG)
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1074 ;;                                             13 BANK0      3     2      1
  1075 ;;                       _lcd_put_byte
  1076 ;;                           _lcd_busy
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (1) _lcd_init                                             4     4      0     244
  1079 ;;                                             13 BANK0      3     3      0
  1080 ;;                       _lcd_put_byte
  1081 ;;                           _lcd_busy
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (2) ___lltoft                                             5     1      4     278
  1084 ;;                                             16 BANK0      5     1      4
  1085 ;;                           ___ftpack
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (1) ___altoft                                             6     2      4     347
  1088 ;;                                             16 BANK0      6     2      4
  1089 ;;                           ___ftpack
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (3) ___ftmul                                             15     9      6     535
  1092 ;;                                             37 BANK0     15     9      6
  1093 ;;                           ___ftpack
  1094 ;;                            ___ftdiv (ARG)
  1095 ;;                           ___altoft (ARG)
  1096 ;;                            ___fttol (ARG)
  1097 ;;                            ___awdiv (ARG)
  1098 ;;                            ___awmod (ARG)
  1099 ;;                             ___bmul (ARG)
  1100 ;;                            ___lbdiv (ARG)
  1101 ;;                            ___lbmod (ARG)
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (1) ___ftdiv                                             15     9      6     489
  1104 ;;                                             22 BANK0     15     9      6
  1105 ;;                           ___ftpack
  1106 ;;                           ___altoft (ARG)
  1107 ;; ---------------------------------------------------------------------------------
  1108 ;; (3) ___ftadd                                             12     6      6    1049
  1109 ;;                                             52 BANK0     12     6      6
  1110 ;;                           ___ftpack
  1111 ;;                            ___lbmod (ARG)
  1112 ;;                            ___lbdiv (ARG)
  1113 ;;                             ___bmul (ARG)
  1114 ;;                            ___ftmul (ARG)
  1115 ;; ---------------------------------------------------------------------------------
  1116 ;; (5) _lcd_busy                                             2     2      0      23
  1117 ;;                                              8 BANK0      2     2      0
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (5) _lcd_put_byte                                         5     4      1     221
  1120 ;;                                              8 BANK0      5     4      1
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; (3) ___awmod                                              6     2      4     296
  1123 ;;                                              8 BANK0      6     2      4
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (2) ___lldiv                                             13     5      8     162
  1126 ;;                                              8 BANK0     13     5      8
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (2) ___ftge                                               6     0      6     136
  1129 ;;                                              8 BANK0      6     0      6
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (2) ___ftneg                                              3     0      3      45
  1132 ;;                                              8 BANK0      3     0      3
  1133 ;; ---------------------------------------------------------------------------------
  1134 ;; (2) ___llmod                                              9     1      8     159
  1135 ;;                                             21 BANK0      9     1      8
  1136 ;;                            ___lldiv (ARG)
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (3) ___awdiv                                              8     4      4     300
  1139 ;;                                             14 BANK0      8     4      4
  1140 ;;                            ___awmod (ARG)
  1141 ;; ---------------------------------------------------------------------------------
  1142 ;; (2) ___fttol                                             13     9      4     252
  1143 ;;                                             22 BANK0     13     9      4
  1144 ;;                           ___ftpack (ARG)
  1145 ;;                            ___awmod (ARG)
  1146 ;;                            ___awdiv (ARG)
  1147 ;;                             ___bmul (ARG)
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (4) ___ftpack                                             8     3      5     209
  1150 ;;                                              8 BANK0      8     3      5
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (3) ___lbmod                                              5     4      1     159
  1153 ;;                                              8 BANK0      5     4      1
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (3) ___lbdiv                                              4     3      1     162
  1156 ;;                                             13 BANK0      4     3      1
  1157 ;;                            ___lbmod (ARG)
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (2) ___wmul                                               6     2      4      92
  1160 ;;                                              8 BANK0      6     2      4
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (3) ___bmul                                               3     2      1      68
  1163 ;;                                             17 BANK0      3     2      1
  1164 ;;                            ___lbdiv (ARG)
  1165 ;;                            ___lbmod (ARG)
  1166 ;; ---------------------------------------------------------------------------------
  1167 ;; (2) __div_to_l_                                          20    14      6     446
  1168 ;;                                              8 BANK0     20    14      6
  1169 ;; ---------------------------------------------------------------------------------
  1170 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1171 ;;                                              8 BANK0     15     9      6
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; (2) _isdigit                                              2     2      0      68
  1174 ;;                                              8 BANK0      2     2      0
  1175 ;; ---------------------------------------------------------------------------------
  1176 ;; (4) _isprint                                              2     2      0      68
  1177 ;;                                              8 BANK0      2     2      0
  1178 ;; ---------------------------------------------------------------------------------
  1179 ;; Estimated maximum stack depth 5
  1180 ;; ---------------------------------------------------------------------------------
  1181 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1182 ;; ---------------------------------------------------------------------------------
  1183 ;; (6) _ngat                                                 2     2      0    3432
  1184 ;;                                              6 BANK0      2     2      0
  1185 ;;                          i1___ftadd
  1186 ;; ---------------------------------------------------------------------------------
  1187 ;; (7) i1___ftadd                                           12     6      6    3432
  1188 ;;                                              8 COMMON     6     0      6
  1189 ;;                                              0 BANK0      6     6      0
  1190 ;;                         i1___ftpack
  1191 ;; ---------------------------------------------------------------------------------
  1192 ;; (8) i1___ftpack                                           8     3      5     679
  1193 ;;                                              0 COMMON     8     3      5
  1194 ;; ---------------------------------------------------------------------------------
  1195 ;; Estimated maximum stack depth 8
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; Call Graph Graphs:
  1198 ;; _main (ROOT)
  1199 ;;   _lcd_init
  1200 ;;     _lcd_put_byte
  1201 ;;     _lcd_busy
  1202 ;;   ___altoft
  1203 ;;     ___ftpack
  1204 ;;   ___ftdiv
  1205 ;;     ___ftpack
  1206 ;;     ___altoft (ARG)
  1207 ;;       ___ftpack
  1208 ;;   ___ftmul
  1209 ;;     ___ftpack
  1210 ;;     ___ftdiv (ARG)
  1211 ;;       ___ftpack
  1212 ;;       ___altoft (ARG)
  1213 ;;         ___ftpack
  1214 ;;     ___altoft (ARG)
  1215 ;;       ___ftpack
  1216 ;;     ___fttol (ARG)
  1217 ;;       ___ftpack (ARG)
  1218 ;;       ___awmod (ARG)
  1219 ;;       ___awdiv (ARG)
  1220 ;;         ___awmod (ARG)
  1221 ;;       ___bmul (ARG)
  1222 ;;         ___lbdiv (ARG)
  1223 ;;           ___lbmod (ARG)
  1224 ;;         ___lbmod (ARG)
  1225 ;;     ___awdiv (ARG)
  1226 ;;       ___awmod (ARG)
  1227 ;;     ___awmod (ARG)
  1228 ;;     ___bmul (ARG)
  1229 ;;       ___lbdiv (ARG)
  1230 ;;         ___lbmod (ARG)
  1231 ;;       ___lbmod (ARG)
  1232 ;;     ___lbdiv (ARG)
  1233 ;;       ___lbmod (ARG)
  1234 ;;     ___lbmod (ARG)
  1235 ;;   _lcd_gotoxy
  1236 ;;     _lcd_put_byte
  1237 ;;     _lcd_busy
  1238 ;;   _printf
  1239 ;;     _putch
  1240 ;;       _lcd_putc
  1241 ;;         _lcd_put_byte
  1242 ;;         _lcd_busy
  1243 ;;         _lcd_gotoxy
  1244 ;;           _lcd_put_byte
  1245 ;;           _lcd_busy
  1246 ;;         _isprint
  1247 ;;     _isdigit
  1248 ;;     ___wmul
  1249 ;;     ___ftge
  1250 ;;     ___ftneg
  1251 ;;     ___awdiv
  1252 ;;       ___awmod (ARG)
  1253 ;;     _scale
  1254 ;;       ___awmod
  1255 ;;       ___awdiv
  1256 ;;         ___awmod (ARG)
  1257 ;;       ___ftmul
  1258 ;;         ___ftpack
  1259 ;;         ___ftdiv (ARG)
  1260 ;;           ___ftpack
  1261 ;;           ___altoft (ARG)
  1262 ;;             ___ftpack
  1263 ;;         ___altoft (ARG)
  1264 ;;           ___ftpack
  1265 ;;         ___fttol (ARG)
  1266 ;;           ___ftpack (ARG)
  1267 ;;           ___awmod (ARG)
  1268 ;;           ___awdiv (ARG)
  1269 ;;             ___awmod (ARG)
  1270 ;;           ___bmul (ARG)
  1271 ;;             ___lbdiv (ARG)
  1272 ;;               ___lbmod (ARG)
  1273 ;;             ___lbmod (ARG)
  1274 ;;         ___awdiv (ARG)
  1275 ;;           ___awmod (ARG)
  1276 ;;         ___awmod (ARG)
  1277 ;;         ___bmul (ARG)
  1278 ;;           ___lbdiv (ARG)
  1279 ;;             ___lbmod (ARG)
  1280 ;;           ___lbmod (ARG)
  1281 ;;         ___lbdiv (ARG)
  1282 ;;           ___lbmod (ARG)
  1283 ;;         ___lbmod (ARG)
  1284 ;;       ___bmul
  1285 ;;         ___lbdiv (ARG)
  1286 ;;           ___lbmod (ARG)
  1287 ;;         ___lbmod (ARG)
  1288 ;;       ___fttol (ARG)
  1289 ;;         ___ftpack (ARG)
  1290 ;;         ___awmod (ARG)
  1291 ;;         ___awdiv (ARG)
  1292 ;;           ___awmod (ARG)
  1293 ;;         ___bmul (ARG)
  1294 ;;           ___lbdiv (ARG)
  1295 ;;             ___lbmod (ARG)
  1296 ;;           ___lbmod (ARG)
  1297 ;;     ___ftmul
  1298 ;;       ___ftpack
  1299 ;;       ___ftdiv (ARG)
  1300 ;;         ___ftpack
  1301 ;;         ___altoft (ARG)
  1302 ;;           ___ftpack
  1303 ;;       ___altoft (ARG)
  1304 ;;         ___ftpack
  1305 ;;       ___fttol (ARG)
  1306 ;;         ___ftpack (ARG)
  1307 ;;         ___awmod (ARG)
  1308 ;;         ___awdiv (ARG)
  1309 ;;           ___awmod (ARG)
  1310 ;;         ___bmul (ARG)
  1311 ;;           ___lbdiv (ARG)
  1312 ;;             ___lbmod (ARG)
  1313 ;;           ___lbmod (ARG)
  1314 ;;       ___awdiv (ARG)
  1315 ;;         ___awmod (ARG)
  1316 ;;       ___awmod (ARG)
  1317 ;;       ___bmul (ARG)
  1318 ;;         ___lbdiv (ARG)
  1319 ;;           ___lbmod (ARG)
  1320 ;;         ___lbmod (ARG)
  1321 ;;       ___lbdiv (ARG)
  1322 ;;         ___lbmod (ARG)
  1323 ;;       ___lbmod (ARG)
  1324 ;;     _fround
  1325 ;;       ___lbmod
  1326 ;;       ___lbdiv
  1327 ;;         ___lbmod (ARG)
  1328 ;;       ___bmul
  1329 ;;         ___lbdiv (ARG)
  1330 ;;           ___lbmod (ARG)
  1331 ;;         ___lbmod (ARG)
  1332 ;;       ___ftmul
  1333 ;;         ___ftpack
  1334 ;;         ___ftdiv (ARG)
  1335 ;;           ___ftpack
  1336 ;;           ___altoft (ARG)
  1337 ;;             ___ftpack
  1338 ;;         ___altoft (ARG)
  1339 ;;           ___ftpack
  1340 ;;         ___fttol (ARG)
  1341 ;;           ___ftpack (ARG)
  1342 ;;           ___awmod (ARG)
  1343 ;;           ___awdiv (ARG)
  1344 ;;             ___awmod (ARG)
  1345 ;;           ___bmul (ARG)
  1346 ;;             ___lbdiv (ARG)
  1347 ;;               ___lbmod (ARG)
  1348 ;;             ___lbmod (ARG)
  1349 ;;         ___awdiv (ARG)
  1350 ;;           ___awmod (ARG)
  1351 ;;         ___awmod (ARG)
  1352 ;;         ___bmul (ARG)
  1353 ;;           ___lbdiv (ARG)
  1354 ;;             ___lbmod (ARG)
  1355 ;;           ___lbmod (ARG)
  1356 ;;         ___lbdiv (ARG)
  1357 ;;           ___lbmod (ARG)
  1358 ;;         ___lbmod (ARG)
  1359 ;;       ___ftadd (ARG)
  1360 ;;         ___ftpack
  1361 ;;         ___lbmod (ARG)
  1362 ;;         ___lbdiv (ARG)
  1363 ;;           ___lbmod (ARG)
  1364 ;;         ___bmul (ARG)
  1365 ;;           ___lbdiv (ARG)
  1366 ;;             ___lbmod (ARG)
  1367 ;;           ___lbmod (ARG)
  1368 ;;         ___ftmul (ARG)
  1369 ;;           ___ftpack
  1370 ;;           ___ftdiv (ARG)
  1371 ;;             ___ftpack
  1372 ;;             ___altoft (ARG)
  1373 ;;               ___ftpack
  1374 ;;           ___altoft (ARG)
  1375 ;;             ___ftpack
  1376 ;;           ___fttol (ARG)
  1377 ;;             ___ftpack (ARG)
  1378 ;;             ___awmod (ARG)
  1379 ;;             ___awdiv (ARG)
  1380 ;;               ___awmod (ARG)
  1381 ;;             ___bmul (ARG)
  1382 ;;               ___lbdiv (ARG)
  1383 ;;                 ___lbmod (ARG)
  1384 ;;               ___lbmod (ARG)
  1385 ;;           ___awdiv (ARG)
  1386 ;;             ___awmod (ARG)
  1387 ;;           ___awmod (ARG)
  1388 ;;           ___bmul (ARG)
  1389 ;;             ___lbdiv (ARG)
  1390 ;;               ___lbmod (ARG)
  1391 ;;             ___lbmod (ARG)
  1392 ;;           ___lbdiv (ARG)
  1393 ;;             ___lbmod (ARG)
  1394 ;;           ___lbmod (ARG)
  1395 ;;     ___ftadd
  1396 ;;       ___ftpack
  1397 ;;       ___lbmod (ARG)
  1398 ;;       ___lbdiv (ARG)
  1399 ;;         ___lbmod (ARG)
  1400 ;;       ___bmul (ARG)
  1401 ;;         ___lbdiv (ARG)
  1402 ;;           ___lbmod (ARG)
  1403 ;;         ___lbmod (ARG)
  1404 ;;       ___ftmul (ARG)
  1405 ;;         ___ftpack
  1406 ;;         ___ftdiv (ARG)
  1407 ;;           ___ftpack
  1408 ;;           ___altoft (ARG)
  1409 ;;             ___ftpack
  1410 ;;         ___altoft (ARG)
  1411 ;;           ___ftpack
  1412 ;;         ___fttol (ARG)
  1413 ;;           ___ftpack (ARG)
  1414 ;;           ___awmod (ARG)
  1415 ;;           ___awdiv (ARG)
  1416 ;;             ___awmod (ARG)
  1417 ;;           ___bmul (ARG)
  1418 ;;             ___lbdiv (ARG)
  1419 ;;               ___lbmod (ARG)
  1420 ;;             ___lbmod (ARG)
  1421 ;;         ___awdiv (ARG)
  1422 ;;           ___awmod (ARG)
  1423 ;;         ___awmod (ARG)
  1424 ;;         ___bmul (ARG)
  1425 ;;           ___lbdiv (ARG)
  1426 ;;             ___lbmod (ARG)
  1427 ;;           ___lbmod (ARG)
  1428 ;;         ___lbdiv (ARG)
  1429 ;;           ___lbmod (ARG)
  1430 ;;         ___lbmod (ARG)
  1431 ;;     ___fttol
  1432 ;;       ___ftpack (ARG)
  1433 ;;       ___awmod (ARG)
  1434 ;;       ___awdiv (ARG)
  1435 ;;         ___awmod (ARG)
  1436 ;;       ___bmul (ARG)
  1437 ;;         ___lbdiv (ARG)
  1438 ;;           ___lbmod (ARG)
  1439 ;;         ___lbmod (ARG)
  1440 ;;     __div_to_l_
  1441 ;;     __tdiv_to_l_
  1442 ;;     ___lltoft
  1443 ;;       ___ftpack
  1444 ;;     ___ftsub
  1445 ;;       ___ftadd
  1446 ;;         ___ftpack
  1447 ;;         ___lbmod (ARG)
  1448 ;;         ___lbdiv (ARG)
  1449 ;;           ___lbmod (ARG)
  1450 ;;         ___bmul (ARG)
  1451 ;;           ___lbdiv (ARG)
  1452 ;;             ___lbmod (ARG)
  1453 ;;           ___lbmod (ARG)
  1454 ;;         ___ftmul (ARG)
  1455 ;;           ___ftpack
  1456 ;;           ___ftdiv (ARG)
  1457 ;;             ___ftpack
  1458 ;;             ___altoft (ARG)
  1459 ;;               ___ftpack
  1460 ;;           ___altoft (ARG)
  1461 ;;             ___ftpack
  1462 ;;           ___fttol (ARG)
  1463 ;;             ___ftpack (ARG)
  1464 ;;             ___awmod (ARG)
  1465 ;;             ___awdiv (ARG)
  1466 ;;               ___awmod (ARG)
  1467 ;;             ___bmul (ARG)
  1468 ;;               ___lbdiv (ARG)
  1469 ;;                 ___lbmod (ARG)
  1470 ;;               ___lbmod (ARG)
  1471 ;;           ___awdiv (ARG)
  1472 ;;             ___awmod (ARG)
  1473 ;;           ___awmod (ARG)
  1474 ;;           ___bmul (ARG)
  1475 ;;             ___lbdiv (ARG)
  1476 ;;               ___lbmod (ARG)
  1477 ;;             ___lbmod (ARG)
  1478 ;;           ___lbdiv (ARG)
  1479 ;;             ___lbmod (ARG)
  1480 ;;           ___lbmod (ARG)
  1481 ;;       ___lltoft (ARG)
  1482 ;;         ___ftpack
  1483 ;;     ___lldiv
  1484 ;;     ___llmod
  1485 ;;       ___lldiv (ARG)
  1486 ;;
  1487 ;; _ngat (ROOT)
  1488 ;;   i1___ftadd
  1489 ;;     i1___ftpack
  1490 ;;
  1491 ;; Address spaces:
  1492 ;;Name               Size   Autos  Total    Cost      Usage
  1493 ;;BITCOMMON            E      0       0       0        0.0%
  1494 ;;EEDATA             100      0       0       0        0.0%
  1495 ;;NULL                 0      0       0       0        0.0%
  1496 ;;CODE                 0      0       0       0        0.0%
  1497 ;;COMMON               E      E       E       1      100.0%
  1498 ;;BITSFR0              0      0       0       1        0.0%
  1499 ;;SFR0                 0      0       0       1        0.0%
  1500 ;;BITSFR1              0      0       0       2        0.0%
  1501 ;;SFR1                 0      0       0       2        0.0%
  1502 ;;STACK                0      0       B       2        0.0%
  1503 ;;ABS                  0      0      84       3        0.0%
  1504 ;;BITBANK0            50      0       0       4        0.0%
  1505 ;;BITSFR3              0      0       0       4        0.0%
  1506 ;;SFR3                 0      0       0       4        0.0%
  1507 ;;BANK0               50     43      46       5       87.5%
  1508 ;;BITSFR2              0      0       0       5        0.0%
  1509 ;;SFR2                 0      0       0       5        0.0%
  1510 ;;BITBANK1            50      0       0       6        0.0%
  1511 ;;BANK1               50     29      30       7       60.0%
  1512 ;;BITBANK3            60      0       0       8        0.0%
  1513 ;;BANK3               60      0       0       9        0.0%
  1514 ;;BITBANK2            60      0       0      10        0.0%
  1515 ;;BANK2               60      0       0      11        0.0%
  1516 ;;DATA                 0      0      8F      12        0.0%
  1517                           
  1518                           
  1519 ;; *************** function _main *****************
  1520 ;; Defined at:
  1521 ;;		line 18 in file "D:\TTVXL\Project TTVXL\BT03week12ttvxl\BT03week12ttvxl.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 17F/0
  1532 ;;		On exit  : 60/20
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0
  1538 ;;      Totals:         0       0       0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels required when called:    8
  1541 ;; This function calls:
  1542 ;;		_lcd_init
  1543 ;;		___altoft
  1544 ;;		___ftdiv
  1545 ;;		___ftmul
  1546 ;;		_lcd_gotoxy
  1547 ;;		_printf
  1548 ;; This function is called by:
  1549 ;;		Startup code after reset
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552  1551                     _main:	
  1553                           
  1554                           ;BT03week12ttvxl.c: 19: ANSEL = ANSELH = 0;
  1555                           
  1556                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1557  1551  1683               	bsf	3,5	;RP0=1, select bank3
  1558  1552  1703               	bsf	3,6	;RP1=1, select bank3
  1559  1553  0189               	clrf	9	;volatile
  1560  1554  0188               	clrf	8	;volatile
  1561                           
  1562                           ;BT03week12ttvxl.c: 20: lcd_init();
  1563  1555  120A  158A  2296   	fcall	_lcd_init
      +       160A  118A         
  1564                           
  1565                           ;BT03week12ttvxl.c: 21: TRISA4 = 1;
  1566  155A  1683               	bsf	3,5	;RP0=1, select bank1
  1567  155B  1605               	bsf	5,4
  1568                           
  1569                           ;BT03week12ttvxl.c: 22: TRISD = 0x00;
  1570  155C  0188               	clrf	8	;volatile
  1571  155D  3007               	movlw	7
  1572                           
  1573                           ;BT03week12ttvxl.c: 23: TRISE0 = 0;
  1574  155E  1009               	bcf	9,0
  1575                           
  1576                           ;BT03week12ttvxl.c: 25: T0CS = 0;
  1577  155F  1281               	bcf	1,5
  1578                           
  1579                           ;BT03week12ttvxl.c: 26: PSA = 0;
  1580  1560  1181               	bcf	1,3
  1581                           
  1582                           ;BT03week12ttvxl.c: 27: PS2= 0; PS1 = 1; PS0= 0;
  1583  1561  1101               	bcf	1,2
  1584  1562  1481               	bsf	1,1
  1585  1563  1001               	bcf	1,0
  1586                           
  1587                           ;BT03week12ttvxl.c: 28: TMR0 = 7;
  1588  1564  1283               	bcf	3,5	;RP0=0, select bank0
  1589  1565  0081               	movwf	1	;volatile
  1590                           
  1591                           ;BT03week12ttvxl.c: 31: T0IE = 1;
  1592  1566  168B               	bsf	11,5
  1593                           
  1594                           ;BT03week12ttvxl.c: 32: T0IF = 0;
  1595  1567  110B               	bcf	11,2
  1596                           
  1597                           ;BT03week12ttvxl.c: 33: GIE = 1;
  1598  1568  178B               	bsf	11,7
  1599                           
  1600                           ;BT03week12ttvxl.c: 35: TMR1GE=0;
  1601  1569  1310               	bcf	16,6
  1602                           
  1603                           ;BT03week12ttvxl.c: 36: TMR1CS=1;
  1604  156A  1490               	bsf	16,1
  1605                           
  1606                           ;BT03week12ttvxl.c: 37: T1SYNC=1;
  1607  156B  1510               	bsf	16,2
  1608                           
  1609                           ;BT03week12ttvxl.c: 38: T1CKPS1=0;T1CKPS0=0;
  1610  156C  1290               	bcf	16,5
  1611  156D  1210               	bcf	16,4
  1612                           
  1613                           ;BT03week12ttvxl.c: 40: TMR1ON=1;
  1614  156E  1410               	bsf	16,0
  1615                           
  1616                           ;BT03week12ttvxl.c: 41: TMR1H=0;
  1617  156F  018F               	clrf	15	;volatile
  1618                           
  1619                           ;BT03week12ttvxl.c: 42: TMR1L=0;
  1620  1570  018E               	clrf	14	;volatile
  1621  1571                     l7995:	
  1622                           
  1623                           ;BT03week12ttvxl.c: 50: {
  1624                           ;BT03week12ttvxl.c: 51: v = (xung/360.0)*5.0*60.0;
  1625  1571  1283               	bcf	3,5	;RP0=0, select bank0
  1626  1572  3096               	movlw	150
  1627  1573  01C5               	clrf	?___ftmul
  1628  1574  00C6               	movwf	?___ftmul+1
  1629  1575  3043               	movlw	67
  1630  1576  00C7               	movwf	?___ftmul+2
  1631  1577  30B4               	movlw	180
  1632  1578  01B6               	clrf	?___ftdiv
  1633  1579  00B7               	movwf	?___ftdiv+1
  1634  157A  3043               	movlw	67
  1635  157B  00B8               	movwf	?___ftdiv+2
  1636  157C  1683               	bsf	3,5	;RP0=1, select bank1
  1637  157D  084F               	movf	(_xung+3)^(0+128),w
  1638  157E  1283               	bcf	3,5	;RP0=0, select bank0
  1639  157F  00B3               	movwf	?___altoft+3
  1640  1580  1683               	bsf	3,5	;RP0=1, select bank1
  1641  1581  084E               	movf	(_xung+2)^(0+128),w
  1642  1582  1283               	bcf	3,5	;RP0=0, select bank0
  1643  1583  00B2               	movwf	?___altoft+2
  1644  1584  1683               	bsf	3,5	;RP0=1, select bank1
  1645  1585  084D               	movf	(_xung+1)^(0+128),w
  1646  1586  1283               	bcf	3,5	;RP0=0, select bank0
  1647  1587  00B1               	movwf	?___altoft+1
  1648  1588  1683               	bsf	3,5	;RP0=1, select bank1
  1649  1589  084C               	movf	_xung^(0+128),w
  1650  158A  1283               	bcf	3,5	;RP0=0, select bank0
  1651  158B  00B0               	movwf	?___altoft
  1652  158C  120A  158A  2440   	fcall	___altoft
      +       160A  118A         
  1653  1591  0830               	movf	?___altoft,w
  1654  1592  00B9               	movwf	?___ftdiv+3
  1655  1593  0831               	movf	?___altoft+1,w
  1656  1594  00BA               	movwf	?___ftdiv+4
  1657  1595  0832               	movf	?___altoft+2,w
  1658  1596  00BB               	movwf	?___ftdiv+5
  1659  1597  120A  158A  246F   	fcall	___ftdiv
      +       160A  118A         
  1660  159C  0836               	movf	?___ftdiv,w
  1661  159D  00C8               	movwf	?___ftmul+3
  1662  159E  0837               	movf	?___ftdiv+1,w
  1663  159F  00C9               	movwf	?___ftmul+4
  1664  15A0  0838               	movf	?___ftdiv+2,w
  1665  15A1  00CA               	movwf	?___ftmul+5
  1666  15A2  120A  158A  26EB   	fcall	___ftmul
      +       160A  118A         
  1667  15A7  0845               	movf	?___ftmul,w
  1668  15A8  1683               	bsf	3,5	;RP0=1, select bank1
  1669  15A9  00C9               	movwf	_v^(0+128)
  1670  15AA  1283               	bcf	3,5	;RP0=0, select bank0
  1671  15AB  0846               	movf	?___ftmul+1,w
  1672  15AC  1683               	bsf	3,5	;RP0=1, select bank1
  1673  15AD  00CA               	movwf	(_v+1)^(0+128)
  1674  15AE  1283               	bcf	3,5	;RP0=0, select bank0
  1675  15AF  0847               	movf	?___ftmul+2,w
  1676  15B0  1683               	bsf	3,5	;RP0=1, select bank1
  1677  15B1  00CB               	movwf	(_v+2)^(0+128)
  1678                           
  1679                           ;BT03week12ttvxl.c: 52: lcd_gotoxy(0,0);
  1680  15B2  1283               	bcf	3,5	;RP0=0, select bank0
  1681  15B3  3000               	movlw	0
  1682  15B4  01AD               	clrf	?_lcd_gotoxy
  1683  15B5  120A  158A  224F   	fcall	_lcd_gotoxy
      +       160A  118A         
  1684                           
  1685                           ;BT03week12ttvxl.c: 53: printf("xung: %08u",xung);
  1686  15BA  1683               	bsf	3,5	;RP0=1, select bank1
  1687  15BB  084F               	movf	(_xung+3)^(0+128),w
  1688  15BC  00AA               	movwf	(?_printf+3)^(0+128)
  1689  15BD  084E               	movf	(_xung+2)^(0+128),w
  1690  15BE  00A9               	movwf	(?_printf+2)^(0+128)
  1691  15BF  084D               	movf	(_xung+1)^(0+128),w
  1692  15C0  00A8               	movwf	(?_printf+1)^(0+128)
  1693  15C1  084C               	movf	_xung^(0+128),w
  1694  15C2  00A7               	movwf	?_printf^(0+128)
  1695  15C3  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1696  15C4  120A  118A  2011   	fcall	_printf
      +       160A  118A         
  1697                           
  1698                           ;BT03week12ttvxl.c: 54: lcd_gotoxy(0,1);
  1699  15C9  1283               	bcf	3,5	;RP0=0, select bank0
  1700  15CA  3000               	movlw	0
  1701  15CB  01AD               	clrf	?_lcd_gotoxy
  1702  15CC  0AAD               	incf	?_lcd_gotoxy,f
  1703  15CD  120A  158A  224F   	fcall	_lcd_gotoxy
      +       160A  118A         
  1704                           
  1705                           ;BT03week12ttvxl.c: 55: printf("v: %3.2f",v);
  1706  15D2  1683               	bsf	3,5	;RP0=1, select bank1
  1707  15D3  0849               	movf	_v^(0+128),w
  1708  15D4  00A7               	movwf	?_printf^(0+128)
  1709  15D5  084A               	movf	(_v+1)^(0+128),w
  1710  15D6  00A8               	movwf	(?_printf+1)^(0+128)
  1711  15D7  084B               	movf	(_v+2)^(0+128),w
  1712  15D8  00A9               	movwf	(?_printf+2)^(0+128)
  1713  15D9  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1714  15DA  120A  118A  2011   	fcall	_printf
      +       160A  118A         
  1715  15DF  2D71               	goto	l7995
  1716  15E0                     __end_of_main:	
  1717                           
  1718                           	psect	text768
  1719  0011                     __ptext768:	
  1720 ;; =============== function _main ends ============
  1721                           
  1722                           
  1723 ;; *************** function _printf *****************
  1724 ;; Defined at:
  1725 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  f               1    wreg     PTR const unsigned char 
  1728 ;;		 -> STR_2(9), STR_1(11), 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  f               1   28[BANK1 ] PTR const unsigned char 
  1731 ;;		 -> STR_2(9), STR_1(11), 
  1732 ;;  _val            4   24[BANK1 ] struct .
  1733 ;;  fval            3   35[BANK1 ] struct .
  1734 ;;  integ           3   21[BANK1 ] struct .
  1735 ;;  ival            3    0        struct .
  1736 ;;  prec            2   38[BANK1 ] int 
  1737 ;;  width           2   33[BANK1 ] int 
  1738 ;;  exp             2   31[BANK1 ] int 
  1739 ;;  flag            2   29[BANK1 ] unsigned short 
  1740 ;;  c               1   40[BANK1 ] char 
  1741 ;;  ap              1   20[BANK1 ] PTR void [1]
  1742 ;;		 -> ?_printf(2), 
  1743 ;;  d               1    0        unsigned char 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2    7[BANK1 ] int 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 60/20
  1750 ;;		On exit  : 60/20
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       0       4       0       0
  1754 ;;      Locals:         0       0      25       0       0
  1755 ;;      Temps:          0       0       5       0       0
  1756 ;;      Totals:         0       0      34       0       0
  1757 ;;Total ram usage:       34 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    7
  1760 ;; This function calls:
  1761 ;;		_putch
  1762 ;;		_isdigit
  1763 ;;		___wmul
  1764 ;;		___ftge
  1765 ;;		___ftneg
  1766 ;;		___awdiv
  1767 ;;		_scale
  1768 ;;		___ftmul
  1769 ;;		_fround
  1770 ;;		___ftadd
  1771 ;;		___fttol
  1772 ;;		__div_to_l_
  1773 ;;		__tdiv_to_l_
  1774 ;;		___lltoft
  1775 ;;		___ftsub
  1776 ;;		___lldiv
  1777 ;;		___llmod
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782  0011                     _printf:	
  1783                           
  1784 ;; using string table level
  1785                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1786                           ;printf@f stored from wreg
  1787  0011  00BC               	movwf	printf@f^(0+128)
  1788  0012  30A7               	movlw	?_printf& (0+255)
  1789  0013  00B4               	movwf	printf@ap^(0+128)
  1790  0014                     l7949:	
  1791  0014  1683               	bsf	3,5	;RP0=1, select bank1
  1792  0015  083C               	movf	printf@f^(0+128),w
  1793  0016  0ABC               	incf	printf@f^(0+128),f
  1794  0017  0084               	movwf	4
  1795  0018  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1796  001D  00C8               	movwf	printf@c^(0+128)
  1797  001E  08C8               	movf	printf@c^(0+128),f
  1798  001F  1903               	btfsc	3,2
  1799  0020  0008               	return
  1800  0021  3A25               	xorlw	37
  1801  0022  1903               	skipnz
  1802  0023  2829               	goto	l7677
  1803  0024  0848               	movf	printf@c^(0+128),w
  1804  0025  255D  120A  118A   	fcall	_putch
  1805  0028  2814               	goto	l7949
  1806  0029                     l7677:	
  1807  0029  01C1               	clrf	printf@width^(0+128)
  1808  002A  01C2               	clrf	(printf@width+1)^(0+128)
  1809  002B  01BD               	clrf	printf@flag^(0+128)
  1810  002C  01BE               	clrf	(printf@flag+1)^(0+128)
  1811  002D  2830               	goto	l7683
  1812  002E                     l2202:	
  1813  002E  153D               	bsf	printf@flag^(0+128),2
  1814  002F  0ABC               	incf	printf@f^(0+128),f
  1815  0030                     l7683:	
  1816  0030  083C               	movf	printf@f^(0+128),w
  1817  0031  0084               	movwf	4
  1818  0032  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1819                           
  1820                           ; Switch size 1, requested type "space"
  1821                           ; Number of cases is 1, Range of values is 48 to 48
  1822                           ; switch strategies available:
  1823                           ; Name         Instructions Cycles
  1824                           ; simple_byte            4     3 (average)
  1825                           ; direct_byte           14    11 (fixed)
  1826                           ; jumptable            263     9 (fixed)
  1827                           ;	Chosen strategy is simple_byte
  1828  0037  3A30               	xorlw	48	; case 48
  1829  0038  1903               	skipnz
  1830  0039  282E               	goto	l2202
  1831  003A  283B               	goto	l7685
  1832  003B                     l7685:	
  1833  003B  083C               	movf	printf@f^(0+128),w
  1834  003C  0084               	movwf	4
  1835  003D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1836  0042  25CD  120A  118A   	fcall	_isdigit
  1837  0045  1C03               	btfss	3,0
  1838  0046  2870               	goto	l7695
  1839  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0048  01C1               	clrf	printf@width^(0+128)
  1841  0049  01C2               	clrf	(printf@width+1)^(0+128)
  1842  004A                     l7689:	
  1843  004A  1683               	bsf	3,5	;RP0=1, select bank1
  1844  004B  0842               	movf	(printf@width+1)^(0+128),w
  1845  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1846  004D  00A9               	movwf	?___wmul+1
  1847  004E  1683               	bsf	3,5	;RP0=1, select bank1
  1848  004F  0841               	movf	printf@width^(0+128),w
  1849  0050  2795  120A  118A   	fcall	PL30	;call to abstracted procedure
  1850  0053  25DC               	fcall	___wmul
  1851  0054  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0055  083C               	movf	printf@f^(0+128),w
  1853  0056  0084               	movwf	4
  1854  0057  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1855  005C  273E               	fcall	PL7	;call to abstracted procedure
  1856  005D  00C1               	movwf	printf@width^(0+128)
  1857  005E  082C               	movf	(??_printf+1)^(0+128),w
  1858  005F  1803               	skipnc
  1859  0060  3E01               	addlw	1
  1860  0061  3EFF               	addlw	255
  1861  0062  00C2               	movwf	(printf@width+1)^(0+128)
  1862  0063  0ABC               	incf	printf@f^(0+128),f
  1863  0064  083C               	movf	printf@f^(0+128),w
  1864  0065  0084               	movwf	4
  1865  0066  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1866  006B  25CD  120A  118A   	fcall	_isdigit
  1867  006E  1803               	btfsc	3,0
  1868  006F  284A               	goto	l7689
  1869  0070                     l7695:	
  1870  0070  1683               	bsf	3,5	;RP0=1, select bank1
  1871  0071  083C               	movf	printf@f^(0+128),w
  1872  0072  0084               	movwf	4
  1873  0073  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1874  0078  3A2E               	xorlw	46
  1875  0079  1D03               	skipz
  1876  007A  28A8               	goto	l7709
  1877  007B  173E               	bsf	(printf@flag^(0+128)+1),6
  1878  007C  0ABC               	incf	printf@f^(0+128),f
  1879  007D  01C6               	clrf	printf@prec^(0+128)
  1880  007E  01C7               	clrf	(printf@prec+1)^(0+128)
  1881  007F                     l7707:	
  1882  007F  083C               	movf	printf@f^(0+128),w
  1883  0080  0084               	movwf	4
  1884  0081  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1885  0086  25CD  120A  118A   	fcall	_isdigit
  1886  0089  1C03               	btfss	3,0
  1887  008A  28B1               	goto	l7717
  1888  008B  1683               	bsf	3,5	;RP0=1, select bank1
  1889  008C  0847               	movf	(printf@prec+1)^(0+128),w
  1890  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1891  008E  00A9               	movwf	?___wmul+1
  1892  008F  1683               	bsf	3,5	;RP0=1, select bank1
  1893  0090  0846               	movf	printf@prec^(0+128),w
  1894  0091  2795  120A  118A   	fcall	PL30	;call to abstracted procedure
  1895  0094  25DC               	fcall	___wmul
  1896  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1897  0096  083C               	movf	printf@f^(0+128),w
  1898  0097  0084               	movwf	4
  1899  0098  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1900  009D  273E  120A  118A   	fcall	PL7	;call to abstracted procedure
  1901  00A0  00C6               	movwf	printf@prec^(0+128)
  1902  00A1  082C               	movf	(??_printf+1)^(0+128),w
  1903  00A2  1803               	skipnc
  1904  00A3  3E01               	addlw	1
  1905  00A4  3EFF               	addlw	255
  1906  00A5  00C7               	movwf	(printf@prec+1)^(0+128)
  1907  00A6  0ABC               	incf	printf@f^(0+128),f
  1908  00A7  287F               	goto	l7707
  1909  00A8                     l7709:	
  1910  00A8  01C6               	clrf	printf@prec^(0+128)
  1911  00A9  01C7               	clrf	(printf@prec+1)^(0+128)
  1912  00AA  163E               	bsf	(printf@flag^(0+128)+1),4
  1913  00AB  28B1               	goto	l7717
  1914  00AC                     l2217:	
  1915  00AC  153E               	bsf	(printf@flag^(0+128)+1),2
  1916  00AD  28C5               	goto	l7719
  1917  00AE                     l7713:	
  1918  00AE  30C0               	movlw	192
  1919  00AF  04BD               	iorwf	printf@flag^(0+128),f
  1920  00B0  28C5               	goto	l7719
  1921  00B1                     l7717:	
  1922  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1923  00B2  083C               	movf	printf@f^(0+128),w
  1924  00B3  0ABC               	incf	printf@f^(0+128),f
  1925  00B4  0084               	movwf	4
  1926  00B5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1927  00BA  00C8               	movwf	printf@c^(0+128)
  1928                           
  1929                           ; Switch size 1, requested type "space"
  1930                           ; Number of cases is 3, Range of values is 0 to 117
  1931                           ; switch strategies available:
  1932                           ; Name         Instructions Cycles
  1933                           ; simple_byte           10     6 (average)
  1934                           ; jumptable            260     6 (fixed)
  1935                           ; rangetable           122     6 (fixed)
  1936                           ; spacedrange          242     9 (fixed)
  1937                           ; locatedrange         118     3 (fixed)
  1938                           ;	Chosen strategy is simple_byte
  1939  00BB  3A00               	xorlw	0	; case 0
  1940  00BC  1903               	skipnz
  1941  00BD  2D5C               	goto	l2296
  1942  00BE  3A66               	xorlw	102	; case 102
  1943  00BF  1903               	skipnz
  1944  00C0  28AC               	goto	l2217
  1945  00C1  3A13               	xorlw	19	; case 117
  1946  00C2  1903               	skipnz
  1947  00C3  28AE               	goto	l7713
  1948  00C4  2814               	goto	l7949
  1949  00C5                     l7719:	
  1950  00C5  3007               	movlw	7
  1951  00C6  01AB               	clrf	??_printf^(0+128)
  1952  00C7  053E               	andwf	(printf@flag+1)^(0+128),w
  1953  00C8  00AC               	movwf	(??_printf+1)^(0+128)
  1954  00C9  042B               	iorwf	??_printf^(0+128),w
  1955  00CA  1903               	skipnz
  1956  00CB  2C31               	goto	l7871
  1957  00CC  1E3E               	btfss	(printf@flag+1)^(0+128),4
  1958  00CD  28D1               	goto	l7725
  1959  00CE  3006               	movlw	6
  1960  00CF  00C6               	movwf	printf@prec^(0+128)
  1961  00D0  01C7               	clrf	(printf@prec+1)^(0+128)
  1962  00D1                     l7725:	
  1963  00D1  0834               	movf	printf@ap^(0+128),w
  1964  00D2  0084               	movwf	4
  1965  00D3  1383               	bcf	3,7	;select IRP bank0
  1966  00D4  0800               	movf	0,w
  1967  00D5  00C3               	movwf	printf@fval^(0+128)
  1968  00D6  0A84               	incf	4,f
  1969  00D7  0800               	movf	0,w
  1970  00D8  00C4               	movwf	(printf@fval+1)^(0+128)
  1971  00D9  0A84               	incf	4,f
  1972  00DA  0800               	movf	0,w
  1973  00DB  00C5               	movwf	(printf@fval+2)^(0+128)
  1974  00DC  3003               	movlw	3
  1975  00DD  07B4               	addwf	printf@ap^(0+128),f
  1976  00DE  0843               	movf	printf@fval^(0+128),w
  1977  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1978  00E0  00A8               	movwf	?___ftge
  1979  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1980  00E2  0844               	movf	(printf@fval+1)^(0+128),w
  1981  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1982  00E4  00A9               	movwf	?___ftge+1
  1983  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1984  00E6  0845               	movf	(printf@fval+2)^(0+128),w
  1985  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1986  00E8  00AA               	movwf	?___ftge+2
  1987  00E9  01AB               	clrf	?___ftge+3
  1988  00EA  01AC               	clrf	?___ftge+4
  1989  00EB  01AD               	clrf	?___ftge+5
  1990  00EC  25A1  120A  118A   	fcall	___ftge
  1991  00EF  1803               	btfsc	3,0
  1992  00F0  290D               	goto	l7735
  1993  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  1994  00F2  0843               	movf	printf@fval^(0+128),w
  1995  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1996  00F4  00A8               	movwf	?___ftneg
  1997  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1998  00F6  0844               	movf	(printf@fval+1)^(0+128),w
  1999  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2000  00F8  00A9               	movwf	?___ftneg+1
  2001  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  2002  00FA  0845               	movf	(printf@fval+2)^(0+128),w
  2003  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2004  00FC  00AA               	movwf	?___ftneg+2
  2005  00FD  279E  120A  118A   	fcall	___ftneg
  2006  0100  0828               	movf	?___ftneg,w
  2007  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0102  00C3               	movwf	printf@fval^(0+128)
  2009  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0104  0829               	movf	?___ftneg+1,w
  2011  0105  1683               	bsf	3,5	;RP0=1, select bank1
  2012  0106  00C4               	movwf	(printf@fval+1)^(0+128)
  2013  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2014  0108  082A               	movf	?___ftneg+2,w
  2015  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2016  010A  00C5               	movwf	(printf@fval+2)^(0+128)
  2017  010B  3003               	movlw	3
  2018  010C  04BD               	iorwf	printf@flag^(0+128),f
  2019  010D                     l7735:	
  2020  010D  1683               	bsf	3,5	;RP0=1, select bank1
  2021  010E  01BF               	clrf	printf@exp^(0+128)
  2022  010F  01C0               	clrf	(printf@exp+1)^(0+128)
  2023  0110  0845               	movf	(printf@fval+2)^(0+128),w
  2024  0111  0444               	iorwf	(printf@fval+1)^(0+128),w
  2025  0112  0443               	iorwf	printf@fval^(0+128),w
  2026  0113  1903               	skipnz
  2027  0114  29B6               	goto	l7767
  2028  0115  30C3               	movlw	low printf@fval
  2029  0116  0084               	movwf	4
  2030  0117  0800               	movf	0,w
  2031  0118  00AB               	movwf	??_printf^(0+128)
  2032  0119  0A84               	incf	4,f
  2033  011A  0800               	movf	0,w
  2034  011B  00AC               	movwf	(??_printf^(0+128)+1)
  2035  011C  0A84               	incf	4,f
  2036  011D  0800               	movf	0,w
  2037  011E  00AD               	movwf	(??_printf^(0+128)+2)
  2038  011F  0A84               	incf	4,f
  2039  0120  0800               	movf	0,w
  2040  0121  00AE               	movwf	(??_printf^(0+128)+3)
  2041  0122  300F               	movlw	15
  2042  0123                     u4915:	
  2043  0123  1003               	clrc
  2044  0124  0CAE               	rrf	(??_printf^(0+128)+3),f
  2045  0125  0CAD               	rrf	(??_printf^(0+128)+2),f
  2046  0126  0CAC               	rrf	(??_printf^(0+128)+1),f
  2047  0127  0CAB               	rrf	??_printf^(0+128),f
  2048  0128  3EFF               	addlw	-1
  2049  0129  1D03               	skipz
  2050  012A  2923               	goto	u4915
  2051  012B  082C               	movf	(??_printf+1)^(0+128),w
  2052  012C  00C0               	movwf	(printf@exp+1)^(0+128)
  2053  012D  082B               	movf	??_printf^(0+128),w
  2054  012E  00BF               	movwf	printf@exp^(0+128)
  2055  012F  3082               	movlw	-126
  2056  0130  01C0               	clrf	(printf@exp+1)^(0+128)
  2057  0131  07BF               	addwf	printf@exp^(0+128),f
  2058  0132  1C03               	skipc
  2059  0133  03C0               	decf	(printf@exp+1)^(0+128),f
  2060  0134  30FF               	movlw	-1
  2061  0135  07BF               	addwf	printf@exp^(0+128),f
  2062  0136  1C03               	skipc
  2063  0137  03C0               	decf	(printf@exp+1)^(0+128),f
  2064  0138  3003               	movlw	3
  2065  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2066  013A  00A8               	movwf	?___wmul
  2067  013B  01A9               	clrf	?___wmul+1
  2068  013C  1683               	bsf	3,5	;RP0=1, select bank1
  2069  013D  0840               	movf	(printf@exp+1)^(0+128),w
  2070  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2071  013F  00AB               	movwf	?___wmul+3
  2072  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2073  0141  083F               	movf	printf@exp^(0+128),w
  2074  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0143  00AA               	movwf	?___wmul+2
  2076  0144  25DC               	fcall	___wmul
  2077  0145  0829               	movf	?___wmul+1,w
  2078  0146  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0147  00C0               	movwf	(printf@exp+1)^(0+128)
  2080  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2081  0149  0828               	movf	?___wmul,w
  2082  014A  1683               	bsf	3,5	;RP0=1, select bank1
  2083  014B  00BF               	movwf	printf@exp^(0+128)
  2084  014C  300A               	movlw	10
  2085  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2086  014E  00AE               	movwf	?___awdiv
  2087  014F  01AF               	clrf	?___awdiv+1
  2088  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2089  0151  0840               	movf	(printf@exp+1)^(0+128),w
  2090  0152  1283               	bcf	3,5	;RP0=0, select bank0
  2091  0153  00B1               	movwf	?___awdiv+3
  2092  0154  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0155  083F               	movf	printf@exp^(0+128),w
  2094  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0157  00B0               	movwf	?___awdiv+2
  2096  0158  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  2097  015D  082F               	movf	?___awdiv+1,w
  2098  015E  1683               	bsf	3,5	;RP0=1, select bank1
  2099  015F  00C0               	movwf	(printf@exp+1)^(0+128)
  2100  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0161  082E               	movf	?___awdiv,w
  2102  0162  1683               	bsf	3,5	;RP0=1, select bank1
  2103  0163  00BF               	movwf	printf@exp^(0+128)
  2104  0164  1FC0               	btfss	(printf@exp+1)^(0+128),7
  2105  0165  296A               	goto	l7755
  2106  0166  30FF               	movlw	-1
  2107  0167  07BF               	addwf	printf@exp^(0+128),f
  2108  0168  1C03               	skipc
  2109  0169  03C0               	decf	(printf@exp+1)^(0+128),f
  2110  016A                     l7755:	
  2111  016A  033F               	decf	printf@exp^(0+128),w
  2112  016B  3AFF               	xorlw	255
  2113  016C  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2114  0171  274C  120A  118A   	fcall	PL8	;call to abstracted procedure
  2115  0174  277C               	fcall	PL20	;call to abstracted procedure
  2116  0175  1683               	bsf	3,5	;RP0=1, select bank1
  2117  0176  0835               	movf	printf@integ^(0+128),w
  2118  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2119  0178  00C8               	movwf	?___ftmul+3
  2120  0179  1683               	bsf	3,5	;RP0=1, select bank1
  2121  017A  0836               	movf	(printf@integ+1)^(0+128),w
  2122  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2123  017C  00C9               	movwf	?___ftmul+4
  2124  017D  1683               	bsf	3,5	;RP0=1, select bank1
  2125  017E  0837               	movf	(printf@integ+2)^(0+128),w
  2126  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0180  00CA               	movwf	?___ftmul+5
  2128  0181  120A  158A  26EB   	fcall	___ftmul
      +       120A  118A         
  2129  0186  0845               	movf	?___ftmul,w
  2130  0187  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0188  00B5               	movwf	printf@integ^(0+128)
  2132  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2133  018A  0846               	movf	?___ftmul+1,w
  2134  018B  1683               	bsf	3,5	;RP0=1, select bank1
  2135  018C  00B6               	movwf	(printf@integ+1)^(0+128)
  2136  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2137  018E  0847               	movf	?___ftmul+2,w
  2138  018F  1683               	bsf	3,5	;RP0=1, select bank1
  2139  0190  00B7               	movwf	(printf@integ+2)^(0+128)
  2140  0191  272A  120A  118A   	fcall	PL5	;call to abstracted procedure
  2141  0194  3080               	movlw	128
  2142  0195  01AB               	clrf	?___ftge+3
  2143  0196  00AC               	movwf	?___ftge+4
  2144  0197  303F               	movlw	63
  2145  0198  00AD               	movwf	?___ftge+5
  2146  0199  25A1  120A  118A   	fcall	___ftge
  2147  019C  1803               	btfsc	3,0
  2148  019D  29A4               	goto	l7763
  2149  019E  30FF               	movlw	-1
  2150  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2151  01A0  07BF               	addwf	printf@exp^(0+128),f
  2152  01A1  1C03               	skipc
  2153  01A2  03C0               	decf	(printf@exp+1)^(0+128),f
  2154  01A3  29B6               	goto	l7767
  2155  01A4                     l7763:	
  2156  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2157  01A5  272A  120A  118A   	fcall	PL5	;call to abstracted procedure
  2158  01A8  3020               	movlw	32
  2159  01A9  01AB               	clrf	?___ftge+3
  2160  01AA  00AC               	movwf	?___ftge+4
  2161  01AB  3041               	movlw	65
  2162  01AC  00AD               	movwf	?___ftge+5
  2163  01AD  25A1  120A  118A   	fcall	___ftge
  2164  01B0  1C03               	btfss	3,0
  2165  01B1  29B6               	goto	l7767
  2166  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  2167  01B3  0ABF               	incf	printf@exp^(0+128),f
  2168  01B4  1903               	skipnz
  2169  01B5  0AC0               	incf	(printf@exp+1)^(0+128),f
  2170  01B6                     l7767:	
  2171  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2172  01B7  0847               	movf	(printf@prec+1)^(0+128),w
  2173  01B8  3A80               	xorlw	128
  2174  01B9  00FF               	movwf	127
  2175  01BA  3080               	movlw	128
  2176  01BB  027F               	subwf	127,w
  2177  01BC  1D03               	skipz
  2178  01BD  29C0               	goto	u4955
  2179  01BE  300D               	movlw	13
  2180  01BF  0246               	subwf	printf@prec^(0+128),w
  2181  01C0                     u4955:	
  2182  01C0  1803               	skipnc
  2183  01C1  29EB               	goto	l7771
  2184  01C2  279B               	call	PL31	;select bank 1
  2185  01C3  0846               	movf	printf@prec^(0+128),w
  2186  01C4  120A  158A  20D9   	fcall	_fround
      +       120A  118A         
  2187  01C9  0860               	movf	?_fround,w
  2188  01CA  00D4               	movwf	?___ftadd
  2189  01CB  0861               	movf	?_fround+1,w
  2190  01CC  00D5               	movwf	?___ftadd+1
  2191  01CD  0862               	movf	?_fround+2,w
  2192  01CE  00D6               	movwf	?___ftadd+2
  2193  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2194  01D0  0843               	movf	printf@fval^(0+128),w
  2195  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2196  01D2  00D7               	movwf	?___ftadd+3
  2197  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2198  01D4  0844               	movf	(printf@fval+1)^(0+128),w
  2199  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2200  01D6  00D8               	movwf	?___ftadd+4
  2201  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  2202  01D8  0845               	movf	(printf@fval+2)^(0+128),w
  2203  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2204  01DA  00D9               	movwf	?___ftadd+5
  2205  01DB  160A  118A  2606   	fcall	___ftadd
      +       120A  118A         
  2206  01E0  0854               	movf	?___ftadd,w
  2207  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  2208  01E2  00C3               	movwf	printf@fval^(0+128)
  2209  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2210  01E4  0855               	movf	?___ftadd+1,w
  2211  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2212  01E6  00C4               	movwf	(printf@fval+1)^(0+128)
  2213  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2214  01E8  0856               	movf	?___ftadd+2,w
  2215  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  2216  01EA  00C5               	movwf	(printf@fval+2)^(0+128)
  2217  01EB                     l7771:	
  2218  01EB  279B               	call	PL31	;select bank 1
  2219  01EC  0840               	movf	(printf@exp+1)^(0+128),w
  2220  01ED  3A80               	xorlw	128
  2221  01EE  00FF               	movwf	127
  2222  01EF  3080               	movlw	128
  2223  01F0  027F               	subwf	127,w
  2224  01F1  1D03               	skipz
  2225  01F2  29F5               	goto	u4965
  2226  01F3  300A               	movlw	10
  2227  01F4  023F               	subwf	printf@exp^(0+128),w
  2228  01F5                     u4965:	
  2229  01F5  1803               	skipnc
  2230  01F6  2A16               	goto	l7779
  2231  01F7  279B               	call	PL31	;select bank 1
  2232  01F8  0845               	movf	(printf@fval+2)^(0+128),w
  2233  01F9  0444               	iorwf	(printf@fval+1)^(0+128),w
  2234  01FA  0443               	iorwf	printf@fval^(0+128),w
  2235  01FB  1903               	skipnz
  2236  01FC  2A68               	goto	l7795
  2237  01FD  0843               	movf	printf@fval^(0+128),w
  2238  01FE  2771  120A  118A   	fcall	PL17	;call to abstracted procedure
  2239  0201  25F5  120A  118A   	fcall	___fttol
  2240  0204  0839               	movf	?___fttol+3,w
  2241  0205  0438               	iorwf	?___fttol+2,w
  2242  0206  0437               	iorwf	?___fttol+1,w
  2243  0207  0436               	iorwf	?___fttol,w
  2244  0208  1D03               	skipz
  2245  0209  2A68               	goto	l7795
  2246  020A  1683               	bsf	3,5	;RP0=1, select bank1
  2247  020B  0840               	movf	(printf@exp+1)^(0+128),w
  2248  020C  3A80               	xorlw	128
  2249  020D  00FF               	movwf	127
  2250  020E  3080               	movlw	128
  2251  020F  027F               	subwf	127,w
  2252  0210  1D03               	skipz
  2253  0211  2A14               	goto	u4995
  2254  0212  3002               	movlw	2
  2255  0213  023F               	subwf	printf@exp^(0+128),w
  2256  0214                     u4995:	
  2257  0214  1C03               	skipc
  2258  0215  2A68               	goto	l7795
  2259  0216                     l7779:	
  2260  0216  279B               	call	PL31	;select bank 1
  2261  0217  272A  120A  118A   	fcall	PL5	;call to abstracted procedure
  2262  021A  3070               	movlw	112
  2263  021B  00AB               	movwf	?___ftge+3
  2264  021C  3089               	movlw	137
  2265  021D  00AC               	movwf	?___ftge+4
  2266  021E  3040               	movlw	64
  2267  021F  00AD               	movwf	?___ftge+5
  2268  0220  25A1  120A  118A   	fcall	___ftge
  2269  0223  1803               	btfsc	3,0
  2270  0224  2A27               	goto	l7783
  2271  0225  30F7               	movlw	-9
  2272  0226  2A28               	goto	L1
  2273  0227                     l7783:	
  2274  0227  30F8               	movlw	-8
  2275  0228                     L1:	
  2276  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0229  07BF               	addwf	printf@exp^(0+128),f
  2278  022A  1C03               	skipc
  2279  022B  03C0               	decf	(printf@exp+1)^(0+128),f
  2280  022C  083F               	movf	printf@exp^(0+128),w
  2281  022D  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2282  0232  274C  120A  118A   	fcall	PL8	;call to abstracted procedure
  2283  0235  00A8               	movwf	?__tdiv_to_l_
  2284  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0237  0844               	movf	(printf@fval+1)^(0+128),w
  2286  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0239  00A9               	movwf	?__tdiv_to_l_+1
  2288  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2289  023B  0845               	movf	(printf@fval+2)^(0+128),w
  2290  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2291  023D  00AA               	movwf	?__tdiv_to_l_+2
  2292  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2293  023F  0835               	movf	printf@integ^(0+128),w
  2294  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0241  00AB               	movwf	?__tdiv_to_l_+3
  2296  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2297  0243  0836               	movf	(printf@integ+1)^(0+128),w
  2298  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2299  0245  00AC               	movwf	?__tdiv_to_l_+4
  2300  0246  1683               	bsf	3,5	;RP0=1, select bank1
  2301  0247  0837               	movf	(printf@integ+2)^(0+128),w
  2302  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0249  00AD               	movwf	?__tdiv_to_l_+5
  2304  024A  2698  120A  118A   	fcall	__tdiv_to_l_
  2305  024D  082B               	movf	?__tdiv_to_l_+3,w
  2306  024E  1683               	bsf	3,5	;RP0=1, select bank1
  2307  024F  00B3               	movwf	(_printf$3165+3)^(0+128)
  2308  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0251  082A               	movf	?__tdiv_to_l_+2,w
  2310  0252  1683               	bsf	3,5	;RP0=1, select bank1
  2311  0253  00B2               	movwf	(_printf$3165+2)^(0+128)
  2312  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0255  0829               	movf	?__tdiv_to_l_+1,w
  2314  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0257  00B1               	movwf	(_printf$3165+1)^(0+128)
  2316  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2317  0259  0828               	movf	?__tdiv_to_l_,w
  2318  025A  1683               	bsf	3,5	;RP0=1, select bank1
  2319  025B  00B0               	movwf	_printf$3165^(0+128)
  2320  025C  0833               	movf	(_printf$3165+3)^(0+128),w
  2321  025D  00BB               	movwf	(printf@_val+3)^(0+128)
  2322  025E  0832               	movf	(_printf$3165+2)^(0+128),w
  2323  025F  00BA               	movwf	(printf@_val+2)^(0+128)
  2324  0260  0831               	movf	(_printf$3165+1)^(0+128),w
  2325  0261  00B9               	movwf	(printf@_val+1)^(0+128)
  2326  0262  0830               	movf	_printf$3165^(0+128),w
  2327  0263  00B8               	movwf	printf@_val^(0+128)
  2328  0264  01C3               	clrf	printf@fval^(0+128)
  2329  0265  01C4               	clrf	(printf@fval+1)^(0+128)
  2330  0266  01C5               	clrf	(printf@fval+2)^(0+128)
  2331  0267  2AA3               	goto	l7799
  2332  0268                     l7795:	
  2333  0268  279B               	call	PL31	;select bank 1
  2334  0269  0843               	movf	printf@fval^(0+128),w
  2335  026A  2771  120A  118A   	fcall	PL17	;call to abstracted procedure
  2336  026D  25F5  120A  118A   	fcall	___fttol
  2337  0270  275A  120A  118A   	fcall	PL10	;call to abstracted procedure
  2338  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2339  0274  00B8               	movwf	printf@_val^(0+128)
  2340  0275  083B               	movf	(printf@_val+3)^(0+128),w
  2341  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0277  00B3               	movwf	?___lltoft+3
  2343  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2344  0279  083A               	movf	(printf@_val+2)^(0+128),w
  2345  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2346  027B  00B2               	movwf	?___lltoft+2
  2347  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2348  027D  0839               	movf	(printf@_val+1)^(0+128),w
  2349  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2350  027F  00B1               	movwf	?___lltoft+1
  2351  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0281  0838               	movf	printf@_val^(0+128),w
  2353  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0283  00B0               	movwf	?___lltoft
  2355  0284  27A6               	fcall	___lltoft
  2356  0285  0830               	movf	?___lltoft,w
  2357  0286  1683               	bsf	3,5	;RP0=1, select bank1
  2358  0287  00A0               	movwf	?___ftsub^(0+128)
  2359  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0289  0831               	movf	?___lltoft+1,w
  2361  028A  1683               	bsf	3,5	;RP0=1, select bank1
  2362  028B  00A1               	movwf	(?___ftsub+1)^(0+128)
  2363  028C  1283               	bcf	3,5	;RP0=0, select bank0
  2364  028D  0832               	movf	?___lltoft+2,w
  2365  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2366  028F  00A2               	movwf	(?___ftsub+2)^(0+128)
  2367  0290  0843               	movf	printf@fval^(0+128),w
  2368  0291  00A3               	movwf	(?___ftsub^(0+128)+3)
  2369  0292  0844               	movf	(printf@fval+1)^(0+128),w
  2370  0293  00A4               	movwf	((?___ftsub+1)^(0+128)+3)
  2371  0294  0845               	movf	(printf@fval+2)^(0+128),w
  2372  0295  00A5               	movwf	((?___ftsub+2)^(0+128)+3)
  2373  0296  160A  118A  25E0   	fcall	___ftsub
      +       120A  118A         
  2374  029B  0820               	movf	?___ftsub^(0+128),w
  2375  029C  00C3               	movwf	printf@fval^(0+128)
  2376  029D  0821               	movf	(?___ftsub+1)^(0+128),w
  2377  029E  00C4               	movwf	(printf@fval+1)^(0+128)
  2378  029F  0822               	movf	(?___ftsub+2)^(0+128),w
  2379  02A0  00C5               	movwf	(printf@fval+2)^(0+128)
  2380  02A1  01BF               	clrf	printf@exp^(0+128)
  2381  02A2  01C0               	clrf	(printf@exp+1)^(0+128)
  2382  02A3                     l7799:	
  2383  02A3  01C8               	clrf	printf@c^(0+128)
  2384  02A4  0AC8               	incf	printf@c^(0+128),f
  2385  02A5                     l7805:	
  2386  02A5  2721               	fcall	PL4	;call to abstracted procedure
  2387  02A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2388  02AB  00AC               	movwf	(??_printf+1)^(0+128)
  2389  02AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2390  02B1  00AD               	movwf	((??_printf+1)^(0+128)+1)
  2391  02B2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2392  02B7  00AE               	movwf	((??_printf+1)^(0+128)+2)
  2393  02B8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2394  02BD  00AF               	movwf	((??_printf+1)^(0+128)+3)
  2395  02BE  082F               	movf	(??_printf+4)^(0+128),w
  2396  02BF  023B               	subwf	(printf@_val+3)^(0+128),w
  2397  02C0  1D03               	skipz
  2398  02C1  2ACC               	goto	u5015
  2399  02C2  082E               	movf	(??_printf+3)^(0+128),w
  2400  02C3  023A               	subwf	(printf@_val+2)^(0+128),w
  2401  02C4  1D03               	skipz
  2402  02C5  2ACC               	goto	u5015
  2403  02C6  082D               	movf	(??_printf+2)^(0+128),w
  2404  02C7  0239               	subwf	(printf@_val+1)^(0+128),w
  2405  02C8  1D03               	skipz
  2406  02C9  2ACC               	goto	u5015
  2407  02CA  082C               	movf	(??_printf+1)^(0+128),w
  2408  02CB  0238               	subwf	printf@_val^(0+128),w
  2409  02CC                     u5015:	
  2410  02CC  1C03               	btfss	3,0
  2411  02CD  2AD3               	goto	l7813
  2412  02CE  0AC8               	incf	printf@c^(0+128),f
  2413  02CF  0848               	movf	printf@c^(0+128),w
  2414  02D0  3A0A               	xorlw	10
  2415  02D1  1D03               	skipz
  2416  02D2  2AA5               	goto	l7805
  2417  02D3                     l7813:	
  2418  02D3  0846               	movf	printf@prec^(0+128),w
  2419  02D4  0748               	addwf	printf@c^(0+128),w
  2420  02D5  00AB               	movwf	??_printf^(0+128)
  2421  02D6  0847               	movf	(printf@prec+1)^(0+128),w
  2422  02D7  1803               	skipnc
  2423  02D8  0A47               	incf	(printf@prec+1)^(0+128),w
  2424  02D9  1BC8               	btfsc	printf@c^(0+128),7
  2425  02DA  3EFF               	addlw	255
  2426  02DB  00AC               	movwf	(??_printf^(0+128)+1)
  2427  02DC  083F               	movf	printf@exp^(0+128),w
  2428  02DD  072B               	addwf	??_printf^(0+128),w
  2429  02DE  00AD               	movwf	(??_printf+2)^(0+128)
  2430  02DF  0840               	movf	(printf@exp+1)^(0+128),w
  2431  02E0  1803               	skipnc
  2432  02E1  0A40               	incf	(printf@exp+1)^(0+128),w
  2433  02E2  072C               	addwf	(??_printf+1)^(0+128),w
  2434  02E3  00AE               	movwf	(??_printf+3)^(0+128)
  2435  02E4  082D               	movf	(??_printf+2)^(0+128),w
  2436  02E5  02C1               	subwf	printf@width^(0+128),f
  2437  02E6  082E               	movf	(??_printf+3)^(0+128),w
  2438  02E7  1C03               	skipc
  2439  02E8  03C2               	decf	(printf@width+1)^(0+128),f
  2440  02E9  02C2               	subwf	(printf@width+1)^(0+128),f
  2441  02EA  0847               	movf	(printf@prec+1)^(0+128),w
  2442  02EB  0446               	iorwf	printf@prec^(0+128),w
  2443  02EC  1903               	skipnz
  2444  02ED  2AF2               	goto	l7819
  2445  02EE  30FF               	movlw	-1
  2446  02EF  07C1               	addwf	printf@width^(0+128),f
  2447  02F0  1C03               	skipc
  2448  02F1  03C2               	decf	(printf@width+1)^(0+128),f
  2449  02F2                     l7819:	
  2450  02F2  083D               	movf	printf@flag^(0+128),w
  2451  02F3  3903               	andlw	3
  2452  02F4  1903               	btfsc	3,2
  2453  02F5  2AFA               	goto	l7823
  2454  02F6  30FF               	movlw	-1
  2455  02F7  07C1               	addwf	printf@width^(0+128),f
  2456  02F8  1C03               	skipc
  2457  02F9  03C2               	decf	(printf@width+1)^(0+128),f
  2458  02FA                     l7823:	
  2459  02FA  193D               	btfsc	printf@flag^(0+128),2
  2460  02FB  2B06               	goto	l7831
  2461  02FC  2B1B               	goto	l7837
  2462  02FD                     l7827:	
  2463  02FD  3030               	movlw	48
  2464  02FE  255D  120A  118A   	fcall	_putch
  2465  0301  30FF               	movlw	-1
  2466  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0303  07C1               	addwf	printf@width^(0+128),f
  2468  0304  1C03               	skipc
  2469  0305  03C2               	decf	(printf@width+1)^(0+128),f
  2470  0306                     l7831:	
  2471  0306  0842               	movf	(printf@width+1)^(0+128),w
  2472  0307  3A80               	xorlw	128
  2473  0308  00FF               	movwf	127
  2474  0309  3080               	movlw	128
  2475  030A  027F               	subwf	127,w
  2476  030B  1D03               	skipz
  2477  030C  2B0F               	goto	u5065
  2478  030D  3001               	movlw	1
  2479  030E  0241               	subwf	printf@width^(0+128),w
  2480  030F                     u5065:	
  2481  030F  1C03               	btfss	3,0
  2482  0310  2B5A               	goto	l7845
  2483  0311  2AFD               	goto	l7827
  2484  0312                     l7833:	
  2485  0312  3020               	movlw	32
  2486  0313  255D  120A  118A   	fcall	_putch
  2487  0316  30FF               	movlw	-1
  2488  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0318  07C1               	addwf	printf@width^(0+128),f
  2490  0319  1C03               	skipc
  2491  031A  03C2               	decf	(printf@width+1)^(0+128),f
  2492  031B                     l7837:	
  2493  031B  0842               	movf	(printf@width+1)^(0+128),w
  2494  031C  3A80               	xorlw	128
  2495  031D  00FF               	movwf	127
  2496  031E  3080               	movlw	128
  2497  031F  027F               	subwf	127,w
  2498  0320  1D03               	skipz
  2499  0321  2B24               	goto	u5075
  2500  0322  3001               	movlw	1
  2501  0323  0241               	subwf	printf@width^(0+128),w
  2502  0324                     u5075:	
  2503  0324  1803               	skipnc
  2504  0325  2B12               	goto	l7833
  2505  0326  279B               	call	PL31	;select bank 1
  2506  0327  083D               	movf	printf@flag^(0+128),w
  2507  0328  3903               	andlw	3
  2508  0329  1903               	btfsc	3,2
  2509  032A  2B5A               	goto	l7845
  2510  032B  302D               	movlw	45
  2511  032C  2B57               	goto	L2
  2512  032D                     l7843:	
  2513  032D  2736  120A  118A   	fcall	PL6	;call to abstracted procedure
  2514  0330  2721               	fcall	PL4	;call to abstracted procedure
  2515  0331  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2516  0336  1283               	bcf	3,5	;RP0=0, select bank0
  2517  0337  00A8               	movwf	?___lldiv
  2518  0338  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2519  033D  00A9               	movwf	?___lldiv+1
  2520  033E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2521  0343  00AA               	movwf	?___lldiv+2
  2522  0344  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2523  0349  270F  120A  118A   	fcall	PL2	;call to abstracted procedure
  2524  034C  2650  120A  118A   	fcall	___lldiv
  2525  034F  2768  120A  118A   	fcall	PL15	;call to abstracted procedure
  2526  0352  2563  120A  118A   	fcall	___llmod
  2527  0355  0835               	movf	?___llmod,w
  2528  0356  3E30               	addlw	48
  2529  0357                     L2:	
  2530  0357  255D  120A  118A   	fcall	_putch
  2531  035A                     l7845:	
  2532  035A  279B               	call	PL31	;select bank 1
  2533  035B  03C8               	decf	printf@c^(0+128),f
  2534  035C  0F48               	incfsz	printf@c^(0+128),w
  2535  035D  2B2D               	goto	l7843
  2536  035E                     l7851:	
  2537  035E  0840               	movf	(printf@exp+1)^(0+128),w
  2538  035F  3A80               	xorlw	128
  2539  0360  00FF               	movwf	127
  2540  0361  3080               	movlw	128
  2541  0362  027F               	subwf	127,w
  2542  0363  1D03               	skipz
  2543  0364  2B67               	goto	u5105
  2544  0365  3001               	movlw	1
  2545  0366  023F               	subwf	printf@exp^(0+128),w
  2546  0367                     u5105:	
  2547  0367  1C03               	btfss	3,0
  2548  0368  2B73               	goto	l7853
  2549  0369  3030               	movlw	48
  2550  036A  255D  120A  118A   	fcall	_putch
  2551  036D  30FF               	movlw	-1
  2552  036E  1683               	bsf	3,5	;RP0=1, select bank1
  2553  036F  07BF               	addwf	printf@exp^(0+128),f
  2554  0370  1C03               	skipc
  2555  0371  03C0               	decf	(printf@exp+1)^(0+128),f
  2556  0372  2B5E               	goto	l7851
  2557  0373                     l7853:	
  2558  0373  279B               	call	PL31	;select bank 1
  2559  0374  0847               	movf	(printf@prec+1)^(0+128),w
  2560  0375  3A80               	xorlw	128
  2561  0376  00FF               	movwf	127
  2562  0377  3080               	movlw	128
  2563  0378  027F               	subwf	127,w
  2564  0379  1D03               	skipz
  2565  037A  2B7D               	goto	u5115
  2566  037B  3009               	movlw	9
  2567  037C  0246               	subwf	printf@prec^(0+128),w
  2568  037D                     u5115:	
  2569  037D  1C03               	skipc
  2570  037E  2B82               	goto	l7857
  2571  037F  3008               	movlw	8
  2572  0380  279B               	call	PL31	;select bank 1
  2573  0381  2B84               	goto	L3
  2574  0382                     l7857:	
  2575  0382  279B               	call	PL31	;select bank 1
  2576  0383  0846               	movf	printf@prec^(0+128),w
  2577  0384                     L3:	
  2578  0384  00C8               	movwf	printf@c^(0+128)
  2579  0385  00AB               	movwf	??_printf^(0+128)
  2580  0386  01AC               	clrf	(??_printf^(0+128)+1)
  2581  0387  1BAB               	btfsc	??_printf^(0+128),7
  2582  0388  03AC               	decf	(??_printf^(0+128)+1),f
  2583  0389  02C6               	subwf	printf@prec^(0+128),f
  2584  038A  082C               	movf	(??_printf+1)^(0+128),w
  2585  038B  1C03               	skipc
  2586  038C  03C7               	decf	(printf@prec+1)^(0+128),f
  2587  038D  02C7               	subwf	(printf@prec+1)^(0+128),f
  2588  038E  0848               	movf	printf@c^(0+128),w
  2589  038F  1903               	btfsc	3,2
  2590  0390  2B93               	goto	l2262
  2591  0391  302E               	movlw	46
  2592  0392  255D               	fcall	_putch
  2593  0393                     l2262:	
  2594  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2595  0394  0848               	movf	printf@c^(0+128),w
  2596  0395  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2597  039A  0854               	movf	?_scale,w
  2598  039B  00C8               	movwf	?___ftmul+3
  2599  039C  0855               	movf	?_scale+1,w
  2600  039D  00C9               	movwf	?___ftmul+4
  2601  039E  0856               	movf	?_scale+2,w
  2602  039F  00CA               	movwf	?___ftmul+5
  2603  03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2604  03A1  0843               	movf	printf@fval^(0+128),w
  2605  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2606  03A3  277C               	fcall	PL20	;call to abstracted procedure
  2607  03A4  120A  158A  26EB   	fcall	___ftmul
      +       120A  118A         
  2608  03A9  0845               	movf	?___ftmul,w
  2609  03AA  00B6               	movwf	?___fttol
  2610  03AB  0846               	movf	?___ftmul+1,w
  2611  03AC  00B7               	movwf	?___fttol+1
  2612  03AD  0847               	movf	?___ftmul+2,w
  2613  03AE  00B8               	movwf	?___fttol+2
  2614  03AF  25F5  120A  118A   	fcall	___fttol
  2615  03B2  275A  120A  118A   	fcall	PL10	;call to abstracted procedure
  2616  03B5  2C1E               	goto	L4
  2617  03B6                     l7861:	
  2618  03B6  2736  120A  118A   	fcall	PL6	;call to abstracted procedure
  2619  03B9  2721               	fcall	PL4	;call to abstracted procedure
  2620  03BA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2621  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2622  03C0  00A8               	movwf	?___lldiv
  2623  03C1  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2624  03C6  00A9               	movwf	?___lldiv+1
  2625  03C7  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2626  03CC  00AA               	movwf	?___lldiv+2
  2627  03CD  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2628  03D2  270F  120A  118A   	fcall	PL2	;call to abstracted procedure
  2629  03D5  2650  120A  118A   	fcall	___lldiv
  2630  03D8  2768  120A  118A   	fcall	PL15	;call to abstracted procedure
  2631  03DB  2563  120A  118A   	fcall	___llmod
  2632  03DE  0835               	movf	?___llmod,w
  2633  03DF  3E30               	addlw	48
  2634  03E0  255D  120A  118A   	fcall	_putch
  2635  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2636  03E4  2721               	fcall	PL4	;call to abstracted procedure
  2637  03E5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2638  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2639  03EB  00B5               	movwf	?___llmod
  2640  03EC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2641  03F1  00B6               	movwf	?___llmod+1
  2642  03F2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2643  03F7  00B7               	movwf	?___llmod+2
  2644  03F8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2645  03FD  00B8               	movwf	?___llmod+3
  2646  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2647  03FF  083B               	movf	(printf@_val+3)^(0+128),w
  2648  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0401  00BC               	movwf	?___llmod+7
  2650  0402  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0403  083A               	movf	(printf@_val+2)^(0+128),w
  2652  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0405  00BB               	movwf	?___llmod+6
  2654  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2655  0407  0839               	movf	(printf@_val+1)^(0+128),w
  2656  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0409  00BA               	movwf	?___llmod+5
  2658  040A  1683               	bsf	3,5	;RP0=1, select bank1
  2659  040B  0838               	movf	printf@_val^(0+128),w
  2660  040C  1283               	bcf	3,5	;RP0=0, select bank0
  2661  040D  00B9               	movwf	?___llmod+4
  2662  040E  2563  120A  118A   	fcall	___llmod
  2663  0411  0838               	movf	?___llmod+3,w
  2664  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2665  0413  00BB               	movwf	(printf@_val+3)^(0+128)
  2666  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0415  0837               	movf	?___llmod+2,w
  2668  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2669  0417  00BA               	movwf	(printf@_val+2)^(0+128)
  2670  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2671  0419  0836               	movf	?___llmod+1,w
  2672  041A  1683               	bsf	3,5	;RP0=1, select bank1
  2673  041B  00B9               	movwf	(printf@_val+1)^(0+128)
  2674  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2675  041D  0835               	movf	?___llmod,w
  2676  041E                     L4:	
  2677  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2678  041F  00B8               	movwf	printf@_val^(0+128)
  2679  0420  03C8               	decf	printf@c^(0+128),f
  2680  0421  0F48               	incfsz	printf@c^(0+128),w
  2681  0422  2BB6               	goto	l7861
  2682  0423                     l7869:	
  2683  0423  0847               	movf	(printf@prec+1)^(0+128),w
  2684  0424  0446               	iorwf	printf@prec^(0+128),w
  2685  0425  1903               	btfsc	3,2
  2686  0426  2814               	goto	l7949
  2687  0427  3030               	movlw	48
  2688  0428  255D  120A  118A   	fcall	_putch
  2689  042B  30FF               	movlw	-1
  2690  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2691  042D  07C6               	addwf	printf@prec^(0+128),f
  2692  042E  1C03               	skipc
  2693  042F  03C7               	decf	(printf@prec+1)^(0+128),f
  2694  0430  2C23               	goto	l7869
  2695  0431                     l7871:	
  2696  0431  0834               	movf	printf@ap^(0+128),w
  2697  0432  0084               	movwf	4
  2698  0433  1383               	bcf	3,7	;select IRP bank0
  2699  0434  0800               	movf	0,w
  2700  0435  00AB               	movwf	??_printf^(0+128)
  2701  0436  0A84               	incf	4,f
  2702  0437  0800               	movf	0,w
  2703  0438  00AC               	movwf	(??_printf^(0+128)+1)
  2704  0439  082B               	movf	??_printf^(0+128),w
  2705  043A  00B8               	movwf	printf@_val^(0+128)
  2706  043B  082C               	movf	(??_printf+1)^(0+128),w
  2707  043C  00B9               	movwf	(printf@_val^(0+128)+1)
  2708  043D  01BA               	clrf	(printf@_val^(0+128)+2)
  2709  043E  01BB               	clrf	(printf@_val^(0+128)+3)
  2710  043F  0AB4               	incf	printf@ap^(0+128),f
  2711  0440  0AB4               	incf	printf@ap^(0+128),f
  2712  0441  0847               	movf	(printf@prec+1)^(0+128),w
  2713  0442  0446               	iorwf	printf@prec^(0+128),w
  2714  0443  1D03               	skipz
  2715  0444  2C4D               	goto	l7881
  2716  0445  083B               	movf	(printf@_val+3)^(0+128),w
  2717  0446  043A               	iorwf	(printf@_val+2)^(0+128),w
  2718  0447  0439               	iorwf	(printf@_val+1)^(0+128),w
  2719  0448  0438               	iorwf	printf@_val^(0+128),w
  2720  0449  1903               	btfsc	3,2
  2721  044A  0AC6               	incf	printf@prec^(0+128),f
  2722  044B  1903               	skipnz
  2723  044C  0AC7               	incf	(printf@prec+1)^(0+128),f
  2724  044D                     l7881:	
  2725  044D  01C8               	clrf	printf@c^(0+128)
  2726  044E  0AC8               	incf	printf@c^(0+128),f
  2727  044F                     l7887:	
  2728  044F  2721               	fcall	PL4	;call to abstracted procedure
  2729  0450  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2730  0455  00AC               	movwf	(??_printf+1)^(0+128)
  2731  0456  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2732  045B  00AD               	movwf	((??_printf+1)^(0+128)+1)
  2733  045C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2734  0461  00AE               	movwf	((??_printf+1)^(0+128)+2)
  2735  0462  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2736  0467  00AF               	movwf	((??_printf+1)^(0+128)+3)
  2737  0468  082F               	movf	(??_printf+4)^(0+128),w
  2738  0469  023B               	subwf	(printf@_val+3)^(0+128),w
  2739  046A  1D03               	skipz
  2740  046B  2C76               	goto	u5175
  2741  046C  082E               	movf	(??_printf+3)^(0+128),w
  2742  046D  023A               	subwf	(printf@_val+2)^(0+128),w
  2743  046E  1D03               	skipz
  2744  046F  2C76               	goto	u5175
  2745  0470  082D               	movf	(??_printf+2)^(0+128),w
  2746  0471  0239               	subwf	(printf@_val+1)^(0+128),w
  2747  0472  1D03               	skipz
  2748  0473  2C76               	goto	u5175
  2749  0474  082C               	movf	(??_printf+1)^(0+128),w
  2750  0475  0238               	subwf	printf@_val^(0+128),w
  2751  0476                     u5175:	
  2752  0476  1C03               	btfss	3,0
  2753  0477  2C7D               	goto	l7895
  2754  0478  0AC8               	incf	printf@c^(0+128),f
  2755  0479  0848               	movf	printf@c^(0+128),w
  2756  047A  3A0A               	xorlw	10
  2757  047B  1D03               	skipz
  2758  047C  2C4F               	goto	l7887
  2759  047D                     l7895:	
  2760  047D  0848               	movf	printf@c^(0+128),w
  2761  047E  2786  120A  118A   	fcall	PL22	;call to abstracted procedure
  2762  0481  0847               	movf	(printf@prec+1)^(0+128),w
  2763  0482  3A80               	xorlw	128
  2764  0483  022D               	subwf	(??_printf+2)^(0+128),w
  2765  0484  1D03               	skipz
  2766  0485  2C88               	goto	u5195
  2767  0486  0846               	movf	printf@prec^(0+128),w
  2768  0487  022B               	subwf	??_printf^(0+128),w
  2769  0488                     u5195:	
  2770  0488  1803               	skipnc
  2771  0489  2C8E               	goto	l7899
  2772  048A  279B               	call	PL31	;select bank 1
  2773  048B  0846               	movf	printf@prec^(0+128),w
  2774  048C  00C8               	movwf	printf@c^(0+128)
  2775  048D  2CA6               	goto	l7903
  2776  048E                     l7899:	
  2777  048E  279B               	call	PL31	;select bank 1
  2778  048F  0848               	movf	printf@c^(0+128),w
  2779  0490  00AB               	movwf	??_printf^(0+128)
  2780  0491  01AC               	clrf	(??_printf^(0+128)+1)
  2781  0492  1BAB               	btfsc	??_printf^(0+128),7
  2782  0493  03AC               	decf	(??_printf^(0+128)+1),f
  2783  0494  0847               	movf	(printf@prec+1)^(0+128),w
  2784  0495  3A80               	xorlw	128
  2785  0496  00AD               	movwf	(??_printf+2)^(0+128)
  2786  0497  082C               	movf	(??_printf+1)^(0+128),w
  2787  0498  3A80               	xorlw	128
  2788  0499  022D               	subwf	(??_printf+2)^(0+128),w
  2789  049A  1D03               	skipz
  2790  049B  2C9E               	goto	u5205
  2791  049C  082B               	movf	??_printf^(0+128),w
  2792  049D  0246               	subwf	printf@prec^(0+128),w
  2793  049E                     u5205:	
  2794  049E  1803               	skipnc
  2795  049F  2CA6               	goto	l7903
  2796  04A0  279B               	call	PL31	;select bank 1
  2797  04A1  0848               	movf	printf@c^(0+128),w
  2798  04A2  00C6               	movwf	printf@prec^(0+128)
  2799  04A3  01C7               	clrf	(printf@prec+1)^(0+128)
  2800  04A4  1BC6               	btfsc	printf@prec^(0+128),7
  2801  04A5  03C7               	decf	(printf@prec+1)^(0+128),f
  2802  04A6                     l7903:	
  2803  04A6  279B               	call	PL31	;select bank 1
  2804  04A7  0842               	movf	(printf@width+1)^(0+128),w
  2805  04A8  0441               	iorwf	printf@width^(0+128),w
  2806  04A9  1903               	skipnz
  2807  04AA  2CB3               	goto	l7909
  2808  04AB  083D               	movf	printf@flag^(0+128),w
  2809  04AC  3903               	andlw	3
  2810  04AD  1903               	btfsc	3,2
  2811  04AE  2CB3               	goto	l7909
  2812  04AF  30FF               	movlw	-1
  2813  04B0  07C1               	addwf	printf@width^(0+128),f
  2814  04B1  1C03               	skipc
  2815  04B2  03C2               	decf	(printf@width+1)^(0+128),f
  2816  04B3                     l7909:	
  2817  04B3  1F3E               	btfss	(printf@flag+1)^(0+128),6
  2818  04B4  2CCC               	goto	l7917
  2819  04B5  0847               	movf	(printf@prec+1)^(0+128),w
  2820  04B6  3A80               	xorlw	128
  2821  04B7  00AB               	movwf	??_printf^(0+128)
  2822  04B8  0842               	movf	(printf@width+1)^(0+128),w
  2823  04B9  3A80               	xorlw	128
  2824  04BA  022B               	subwf	??_printf^(0+128),w
  2825  04BB  1D03               	skipz
  2826  04BC  2CBF               	goto	u5245
  2827  04BD  0841               	movf	printf@width^(0+128),w
  2828  04BE  0246               	subwf	printf@prec^(0+128),w
  2829  04BF                     u5245:	
  2830  04BF  1803               	skipnc
  2831  04C0  2CC9               	goto	l7915
  2832  04C1  279B               	call	PL31	;select bank 1
  2833  04C2  0846               	movf	printf@prec^(0+128),w
  2834  04C3  02C1               	subwf	printf@width^(0+128),f
  2835  04C4  0847               	movf	(printf@prec+1)^(0+128),w
  2836  04C5  1C03               	skipc
  2837  04C6  03C2               	decf	(printf@width+1)^(0+128),f
  2838  04C7  02C2               	subwf	(printf@width+1)^(0+128),f
  2839  04C8  2CCC               	goto	l7917
  2840  04C9                     l7915:	
  2841  04C9  279B               	call	PL31	;select bank 1
  2842  04CA  01C1               	clrf	printf@width^(0+128)
  2843  04CB  01C2               	clrf	(printf@width+1)^(0+128)
  2844  04CC                     l7917:	
  2845  04CC  0848               	movf	printf@c^(0+128),w
  2846  04CD  2786  120A  118A   	fcall	PL22	;call to abstracted procedure
  2847  04D0  0842               	movf	(printf@width+1)^(0+128),w
  2848  04D1  3A80               	xorlw	128
  2849  04D2  022D               	subwf	(??_printf+2)^(0+128),w
  2850  04D3  1D03               	skipz
  2851  04D4  2CD7               	goto	u5255
  2852  04D5  0841               	movf	printf@width^(0+128),w
  2853  04D6  022B               	subwf	??_printf^(0+128),w
  2854  04D7                     u5255:	
  2855  04D7  1803               	skipnc
  2856  04D8  2CE5               	goto	l7921
  2857  04D9  279B               	call	PL31	;select bank 1
  2858  04DA  0848               	movf	printf@c^(0+128),w
  2859  04DB  00AB               	movwf	??_printf^(0+128)
  2860  04DC  01AC               	clrf	(??_printf^(0+128)+1)
  2861  04DD  1BAB               	btfsc	??_printf^(0+128),7
  2862  04DE  03AC               	decf	(??_printf^(0+128)+1),f
  2863  04DF  02C1               	subwf	printf@width^(0+128),f
  2864  04E0  082C               	movf	(??_printf+1)^(0+128),w
  2865  04E1  1C03               	skipc
  2866  04E2  03C2               	decf	(printf@width+1)^(0+128),f
  2867  04E3  02C2               	subwf	(printf@width+1)^(0+128),f
  2868  04E4  2CE8               	goto	l7923
  2869  04E5                     l7921:	
  2870  04E5  279B               	call	PL31	;select bank 1
  2871  04E6  01C1               	clrf	printf@width^(0+128)
  2872  04E7  01C2               	clrf	(printf@width+1)^(0+128)
  2873  04E8                     l7923:	
  2874  04E8  1D3D               	btfss	printf@flag^(0+128),2
  2875  04E9  2D01               	goto	l7935
  2876  04EA  083D               	movf	printf@flag^(0+128),w
  2877  04EB  3903               	andlw	3
  2878  04EC  1903               	btfsc	3,2
  2879  04ED  2CF2               	goto	l7929
  2880  04EE  302D               	movlw	45
  2881  04EF  255D  120A  118A   	fcall	_putch
  2882  04F2                     l7929:	
  2883  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  2884  04F3                     L6:	
  2885  04F3  0842               	movf	(printf@width+1)^(0+128),w
  2886  04F4  0441               	iorwf	printf@width^(0+128),w
  2887  04F5  1903               	skipnz
  2888  04F6  2D1A               	goto	l7947
  2889  04F7  3030               	movlw	48
  2890  04F8  255D  120A  118A   	fcall	_putch
  2891  04FB  30FF               	movlw	-1
  2892  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2893  04FD  07C1               	addwf	printf@width^(0+128),f
  2894  04FE  1C03               	skipc
  2895  04FF  03C2               	decf	(printf@width+1)^(0+128),f
  2896  0500  2CF3               	goto	L6
  2897  0501                     l7935:	
  2898  0501  0842               	movf	(printf@width+1)^(0+128),w
  2899  0502  0441               	iorwf	printf@width^(0+128),w
  2900  0503  1903               	skipnz
  2901  0504  2D12               	goto	l7941
  2902  0505                     l7937:	
  2903  0505  3020               	movlw	32
  2904  0506  255D  120A  118A   	fcall	_putch
  2905  0509  30FF               	movlw	-1
  2906  050A  1683               	bsf	3,5	;RP0=1, select bank1
  2907  050B  07C1               	addwf	printf@width^(0+128),f
  2908  050C  1C03               	skipc
  2909  050D  03C2               	decf	(printf@width+1)^(0+128),f
  2910  050E  0842               	movf	(printf@width+1)^(0+128),w
  2911  050F  0441               	iorwf	printf@width^(0+128),w
  2912  0510  1D03               	skipz
  2913  0511  2D05               	goto	l7937
  2914  0512                     l7941:	
  2915  0512  083D               	movf	printf@flag^(0+128),w
  2916  0513  3903               	andlw	3
  2917  0514  1903               	btfsc	3,2
  2918  0515  2D1A               	goto	l7947
  2919  0516  302D               	movlw	45
  2920  0517                     L5:	
  2921  0517  255D  120A  118A   	fcall	_putch
  2922  051A                     l7947:	
  2923  051A  30FF               	movlw	-1
  2924  051B  1683               	bsf	3,5	;RP0=1, select bank1
  2925  051C  07C6               	addwf	printf@prec^(0+128),f
  2926  051D  1C03               	skipc
  2927  051E  03C7               	decf	(printf@prec+1)^(0+128),f
  2928  051F  0A46               	incf	printf@prec^(0+128),w
  2929  0520  1903               	skipnz
  2930  0521  0A47               	incf	(printf@prec+1)^(0+128),w
  2931  0522  1903               	btfsc	3,2
  2932  0523  2814               	goto	l7949
  2933  0524  300A               	movlw	10
  2934  0525  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0526  00B5               	movwf	?___llmod
  2936  0527  01B6               	clrf	?___llmod+1
  2937  0528  01B7               	clrf	?___llmod+2
  2938  0529  01B8               	clrf	?___llmod+3
  2939  052A  1683               	bsf	3,5	;RP0=1, select bank1
  2940  052B  0846               	movf	printf@prec^(0+128),w
  2941  052C  00AB               	movwf	??_printf^(0+128)
  2942  052D  1003               	clrc
  2943  052E  0DAB               	rlf	??_printf^(0+128),f
  2944  052F  1003               	clrc
  2945  0530  0D2B               	rlf	??_printf^(0+128),w
  2946  0531  3E4F               	addlw	low (_dpowers-__stringbase)
  2947  0532  0084               	movwf	4
  2948  0533  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2949  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0539  00A8               	movwf	?___lldiv
  2951  053A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2952  053F  00A9               	movwf	?___lldiv+1
  2953  0540  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2954  0545  00AA               	movwf	?___lldiv+2
  2955  0546  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2956  054B  270F  120A  118A   	fcall	PL2	;call to abstracted procedure
  2957  054E  2650  120A  118A   	fcall	___lldiv
  2958  0551  2768  120A  118A   	fcall	PL15	;call to abstracted procedure
  2959  0554  2563  120A  118A   	fcall	___llmod
  2960  0557  0835               	movf	?___llmod,w
  2961  0558  3E30               	addlw	48
  2962  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2963  055A  00C8               	movwf	printf@c^(0+128)
  2964  055B  2D17               	goto	L5
  2965  055C                     l2296:	
  2966  055C  0008               	return
  2967  055D                     __end_of_printf:	
  2968  055D                     __ptext769:	
  2969 ;; =============== function _printf ends ============
  2970                           
  2971                           
  2972 ;; *************** function _putch *****************
  2973 ;; Defined at:
  2974 ;;		line 60 in file "D:\TTVXL\Project TTVXL\BT03week12ttvxl\BT03week12ttvxl.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  c               1    wreg     unsigned char 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  c               1   17[BANK0 ] unsigned char 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;		None               void
  2981 ;; Registers used:
  2982 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/20
  2985 ;;		On exit  : 60/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2988 ;;      Params:         0       0       0       0       0
  2989 ;;      Locals:         0       1       0       0       0
  2990 ;;      Temps:          0       0       0       0       0
  2991 ;;      Totals:         0       1       0       0       0
  2992 ;;Total ram usage:        1 bytes
  2993 ;; Hardware stack levels used:    1
  2994 ;; Hardware stack levels required when called:    6
  2995 ;; This function calls:
  2996 ;;		_lcd_putc
  2997 ;; This function is called by:
  2998 ;;		_printf
  2999 ;; This function uses a non-reentrant model
  3000 ;;
  3001  055D                     _putch:	
  3002                           
  3003                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3004                           ;putch@c stored from wreg
  3005  055D  1283               	bcf	3,5	;RP0=0, select bank0
  3006  055E  1303               	bcf	3,6	;RP1=0, select bank0
  3007  055F  00B1               	movwf	putch@c
  3008                           
  3009                           ;BT03week12ttvxl.c: 61: lcd_putc(c);
  3010  0560  120A  158A  2A67   	ljmp	_lcd_putc
  3011  0563                     __end_of_putch:	
  3012  0563                     __ptext787:	
  3013 ;; =============== function ___ftneg ends ============
  3014                           
  3015                           
  3016 ;; *************** function ___llmod *****************
  3017 ;; Defined at:
  3018 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  divisor         4   21[BANK0 ] unsigned long 
  3021 ;;  dividend        4   25[BANK0 ] unsigned long 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  counter         1   29[BANK0 ] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  4   21[BANK0 ] unsigned long 
  3026 ;; Registers used:
  3027 ;;		wreg, status,2, status,0
  3028 ;; Tracked objects:
  3029 ;;		On entry : 60/0
  3030 ;;		On exit  : 60/0
  3031 ;;		Unchanged: FFF9F/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3033 ;;      Params:         0       8       0       0       0
  3034 ;;      Locals:         0       1       0       0       0
  3035 ;;      Temps:          0       0       0       0       0
  3036 ;;      Totals:         0       9       0       0       0
  3037 ;;Total ram usage:        9 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    3
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_printf
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046  0563                     ___llmod:	
  3047                           
  3048                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3049  0563  0838               	movf	___llmod@divisor+3,w
  3050  0564  0437               	iorwf	___llmod@divisor+2,w
  3051  0565  0436               	iorwf	___llmod@divisor+1,w
  3052  0566  0435               	iorwf	___llmod@divisor,w
  3053  0567  1903               	skipnz
  3054  0568  2D98               	goto	l6685
  3055  0569  01BD               	clrf	___llmod@counter
  3056  056A                     L14:	
  3057  056A  0ABD               	incf	___llmod@counter,f
  3058  056B  1BB8               	btfsc	___llmod@divisor+3,7
  3059  056C  2D73               	goto	l6677
  3060  056D  1003               	clrc
  3061  056E  0DB5               	rlf	___llmod@divisor,f
  3062  056F  0DB6               	rlf	___llmod@divisor+1,f
  3063  0570  0DB7               	rlf	___llmod@divisor+2,f
  3064  0571  0DB8               	rlf	___llmod@divisor+3,f
  3065  0572  2D6A               	goto	L14
  3066  0573                     l6677:	
  3067  0573  0838               	movf	___llmod@divisor+3,w
  3068  0574  023C               	subwf	___llmod@dividend+3,w
  3069  0575  1D03               	skipz
  3070  0576  2D81               	goto	u3145
  3071  0577  0837               	movf	___llmod@divisor+2,w
  3072  0578  023B               	subwf	___llmod@dividend+2,w
  3073  0579  1D03               	skipz
  3074  057A  2D81               	goto	u3145
  3075  057B  0836               	movf	___llmod@divisor+1,w
  3076  057C  023A               	subwf	___llmod@dividend+1,w
  3077  057D  1D03               	skipz
  3078  057E  2D81               	goto	u3145
  3079  057F  0835               	movf	___llmod@divisor,w
  3080  0580  0239               	subwf	___llmod@dividend,w
  3081  0581                     u3145:	
  3082  0581  1C03               	skipc
  3083  0582  2D92               	goto	L15
  3084  0583  0835               	movf	___llmod@divisor,w
  3085  0584  02B9               	subwf	___llmod@dividend,f
  3086  0585  0836               	movf	___llmod@divisor+1,w
  3087  0586  1C03               	skipc
  3088  0587  0F36               	incfsz	___llmod@divisor+1,w
  3089  0588  02BA               	subwf	___llmod@dividend+1,f
  3090  0589  0837               	movf	___llmod@divisor+2,w
  3091  058A  1C03               	skipc
  3092  058B  0F37               	incfsz	___llmod@divisor+2,w
  3093  058C  02BB               	subwf	___llmod@dividend+2,f
  3094  058D  0838               	movf	___llmod@divisor+3,w
  3095  058E  1C03               	skipc
  3096  058F  0F38               	incfsz	___llmod@divisor+3,w
  3097  0590  02BC               	subwf	___llmod@dividend+3,f
  3098  0591  1003               	clrc
  3099  0592                     L15:	
  3100  0592  0CB8               	rrf	___llmod@divisor+3,f
  3101  0593  0CB7               	rrf	___llmod@divisor+2,f
  3102  0594  0CB6               	rrf	___llmod@divisor+1,f
  3103  0595  0CB5               	rrf	___llmod@divisor,f
  3104  0596  0BBD               	decfsz	___llmod@counter,f
  3105  0597  2D73               	goto	l6677
  3106  0598                     l6685:	
  3107  0598  083C               	movf	___llmod@dividend+3,w
  3108  0599  00B8               	movwf	?___llmod+3
  3109  059A  083B               	movf	___llmod@dividend+2,w
  3110  059B  00B7               	movwf	?___llmod+2
  3111  059C  083A               	movf	___llmod@dividend+1,w
  3112  059D  00B6               	movwf	?___llmod+1
  3113  059E  0839               	movf	___llmod@dividend,w
  3114  059F  00B5               	movwf	?___llmod
  3115  05A0  0008               	return
  3116  05A1                     __end_of___llmod:	
  3117  05A1                     __ptext785:	
  3118 ;; =============== function ___lldiv ends ============
  3119                           
  3120                           
  3121 ;; *************** function ___ftge *****************
  3122 ;; Defined at:
  3123 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  ff1             3    8[BANK0 ] float 
  3126 ;;  ff2             3   11[BANK0 ] float 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;		None               void
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0
  3133 ;; Tracked objects:
  3134 ;;		On entry : 60/0
  3135 ;;		On exit  : 60/0
  3136 ;;		Unchanged: FFF9F/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       6       0       0       0
  3139 ;;      Locals:         0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0
  3141 ;;      Totals:         0       6       0       0       0
  3142 ;;Total ram usage:        6 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    3
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_printf
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151  05A1                     ___ftge:	
  3152                           
  3153                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3154  05A1  1FAA               	btfss	___ftge@ff1+2,7
  3155  05A2  2DB0               	goto	l6701
  3156  05A3  0828               	movf	___ftge@ff1,w
  3157  05A4  3C00               	sublw	0
  3158  05A5  00A8               	movwf	___ftge@ff1
  3159  05A6  0829               	movf	___ftge@ff1+1,w
  3160  05A7  1C03               	skipc
  3161  05A8  0F29               	incfsz	___ftge@ff1+1,w
  3162  05A9  3C00               	sublw	0
  3163  05AA  00A9               	movwf	___ftge@ff1+1
  3164  05AB  082A               	movf	___ftge@ff1+2,w
  3165  05AC  1C03               	skipc
  3166  05AD  0F2A               	incfsz	___ftge@ff1+2,w
  3167  05AE  3C80               	sublw	128
  3168  05AF  00AA               	movwf	___ftge@ff1+2
  3169  05B0                     l6701:	
  3170  05B0  1FAD               	btfss	___ftge@ff2+2,7
  3171  05B1  2DBF               	goto	l6705
  3172  05B2  082B               	movf	___ftge@ff2,w
  3173  05B3  3C00               	sublw	0
  3174  05B4  00AB               	movwf	___ftge@ff2
  3175  05B5  082C               	movf	___ftge@ff2+1,w
  3176  05B6  1C03               	skipc
  3177  05B7  0F2C               	incfsz	___ftge@ff2+1,w
  3178  05B8  3C00               	sublw	0
  3179  05B9  00AC               	movwf	___ftge@ff2+1
  3180  05BA  082D               	movf	___ftge@ff2+2,w
  3181  05BB  1C03               	skipc
  3182  05BC  0F2D               	incfsz	___ftge@ff2+2,w
  3183  05BD  3C80               	sublw	128
  3184  05BE  00AD               	movwf	___ftge@ff2+2
  3185  05BF                     l6705:	
  3186  05BF  3080               	movlw	128
  3187  05C0  06AA               	xorwf	___ftge@ff1+2,f
  3188  05C1  06AD               	xorwf	___ftge@ff2+2,f
  3189  05C2  082D               	movf	___ftge@ff2+2,w
  3190  05C3  022A               	subwf	___ftge@ff1+2,w
  3191  05C4  1D03               	skipz
  3192  05C5  0008               	return
  3193  05C6  082C               	movf	___ftge@ff2+1,w
  3194  05C7  0229               	subwf	___ftge@ff1+1,w
  3195  05C8  1D03               	skipz
  3196  05C9  0008               	return
  3197  05CA  082B               	movf	___ftge@ff2,w
  3198  05CB  0228               	subwf	___ftge@ff1,w
  3199  05CC  0008               	return
  3200  05CD                     __end_of___ftge:	
  3201  05CD                     __ptext797:	
  3202 ;; =============== function __tdiv_to_l_ ends ============
  3203                           
  3204                           
  3205 ;; *************** function _isdigit *****************
  3206 ;; Defined at:
  3207 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;  c               1    wreg     unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  c               1    9[BANK0 ] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;		None               void
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 60/20
  3218 ;;		On exit  : 60/0
  3219 ;;		Unchanged: FFF9F/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3221 ;;      Params:         0       0       0       0       0
  3222 ;;      Locals:         0       2       0       0       0
  3223 ;;      Temps:          0       0       0       0       0
  3224 ;;      Totals:         0       2       0       0       0
  3225 ;;Total ram usage:        2 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:    3
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_printf
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234  05CD                     _isdigit:	
  3235                           
  3236                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3237                           ;isdigit@c stored from wreg
  3238  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3239  05CE  00A9               	movwf	isdigit@c
  3240  05CF  303A               	movlw	58
  3241  05D0  01A8               	clrf	_isdigit$3673
  3242  05D1  0229               	subwf	isdigit@c,w
  3243  05D2  1803               	skipnc
  3244  05D3  2DDA               	goto	l6387
  3245  05D4  3030               	movlw	48
  3246  05D5  0229               	subwf	isdigit@c,w
  3247  05D6  1C03               	skipc
  3248  05D7  2DDA               	goto	l6387
  3249  05D8  01A8               	clrf	_isdigit$3673
  3250  05D9  0AA8               	incf	_isdigit$3673,f
  3251  05DA                     l6387:	
  3252  05DA  0C28               	rrf	_isdigit$3673,w
  3253  05DB  0008               	return
  3254  05DC                     __end_of_isdigit:	
  3255  05DC                     __ptext793:	
  3256 ;; =============== function ___lbdiv ends ============
  3257                           
  3258                           
  3259 ;; *************** function ___wmul *****************
  3260 ;; Defined at:
  3261 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  multiplier      2    8[BANK0 ] unsigned int 
  3264 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  product         2   12[BANK0 ] unsigned int 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  2    8[BANK0 ] unsigned int 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 60/0
  3273 ;;		On exit  : 60/0
  3274 ;;		Unchanged: FFF9F/0
  3275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3276 ;;      Params:         0       4       0       0       0
  3277 ;;      Locals:         0       2       0       0       0
  3278 ;;      Temps:          0       0       0       0       0
  3279 ;;      Totals:         0       6       0       0       0
  3280 ;;Total ram usage:        6 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; Hardware stack levels required when called:    3
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_fround
  3287 ;;		_scale
  3288 ;;		_printf
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291  05DC                     ___wmul:	
  3292                           
  3293                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3294  05DC  01AC               	clrf	___wmul@product
  3295  05DD  01AD               	clrf	___wmul@product+1
  3296  05DE                     l6503:	
  3297  05DE  1C28               	btfss	___wmul@multiplier,0
  3298  05DF  2DE6               	goto	l6507
  3299  05E0  082A               	movf	___wmul@multiplicand,w
  3300  05E1  07AC               	addwf	___wmul@product,f
  3301  05E2  1803               	skipnc
  3302  05E3  0AAD               	incf	___wmul@product+1,f
  3303  05E4  082B               	movf	___wmul@multiplicand+1,w
  3304  05E5  07AD               	addwf	___wmul@product+1,f
  3305  05E6                     l6507:	
  3306  05E6  1003               	clrc
  3307  05E7  0DAA               	rlf	___wmul@multiplicand,f
  3308  05E8  0DAB               	rlf	___wmul@multiplicand+1,f
  3309  05E9  1003               	clrc
  3310  05EA  0CA9               	rrf	___wmul@multiplier+1,f
  3311  05EB  0CA8               	rrf	___wmul@multiplier,f
  3312  05EC  0829               	movf	___wmul@multiplier+1,w
  3313  05ED  0428               	iorwf	___wmul@multiplier,w
  3314  05EE  1D03               	skipz
  3315  05EF  2DDE               	goto	l6503
  3316  05F0  082D               	movf	___wmul@product+1,w
  3317  05F1  00A9               	movwf	?___wmul+1
  3318  05F2  082C               	movf	___wmul@product,w
  3319  05F3  00A8               	movwf	?___wmul
  3320  05F4  0008               	return
  3321  05F5                     __end_of___wmul:	
  3322  05F5                     __ptext789:	
  3323 ;; =============== function ___awdiv ends ============
  3324                           
  3325                           
  3326 ;; *************** function ___fttol *****************
  3327 ;; Defined at:
  3328 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  f1              3   22[BANK0 ] float 
  3331 ;; Auto vars:     Size  Location     Type
  3332 ;;  lval            4   30[BANK0 ] unsigned long 
  3333 ;;  exp1            1   34[BANK0 ] unsigned char 
  3334 ;;  sign1           1   29[BANK0 ] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  4   22[BANK0 ] long 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 60/0
  3341 ;;		On exit  : 60/0
  3342 ;;		Unchanged: FFF9F/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         0       4       0       0       0
  3345 ;;      Locals:         0       6       0       0       0
  3346 ;;      Temps:          0       3       0       0       0
  3347 ;;      Totals:         0      13       0       0       0
  3348 ;;Total ram usage:       13 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    3
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_printf
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357  05F5                     ___fttol:	
  3358                           
  3359                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3360  05F5  278E  120A  118A   	fcall	PL27	;call to abstracted procedure
  3361  05F8  1003               	clrc
  3362  05F9  0D3B               	rlf	??___fttol+1,w
  3363  05FA  0D3C               	rlf	??___fttol+2,w
  3364  05FB  00C2               	movwf	___fttol@exp1
  3365  05FC  08C2               	movf	___fttol@exp1,f
  3366  05FD  1D03               	skipz
  3367  05FE  2E04               	goto	l6591
  3368  05FF                     l6589:	
  3369  05FF  01B6               	clrf	?___fttol
  3370  0600  01B7               	clrf	?___fttol+1
  3371  0601  01B8               	clrf	?___fttol+2
  3372  0602  01B9               	clrf	?___fttol+3
  3373  0603  0008               	return
  3374  0604                     l6591:	
  3375  0604  278E  120A  118A   	fcall	PL27	;call to abstracted procedure
  3376  0607  3017               	movlw	23
  3377  0608                     u2985:	
  3378  0608  1003               	clrc
  3379  0609  0CBC               	rrf	??___fttol+2,f
  3380  060A  0CBB               	rrf	??___fttol+1,f
  3381  060B  0CBA               	rrf	??___fttol,f
  3382  060C  3EFF               	addlw	-1
  3383  060D  1D03               	skipz
  3384  060E  2E08               	goto	u2985
  3385  060F  083A               	movf	??___fttol,w
  3386  0610  00BD               	movwf	___fttol@sign1
  3387  0611  17B7               	bsf	___fttol@f1+1,7
  3388  0612  01B8               	clrf	___fttol@f1+2
  3389  0613  0836               	movf	___fttol@f1,w
  3390  0614  00BE               	movwf	___fttol@lval
  3391  0615  0837               	movf	___fttol@f1+1,w
  3392  0616  00BF               	movwf	___fttol@lval+1
  3393  0617  0838               	movf	___fttol@f1+2,w
  3394  0618  00C0               	movwf	___fttol@lval+2
  3395  0619  308E               	movlw	142
  3396  061A  01C1               	clrf	___fttol@lval+3
  3397  061B  02C2               	subwf	___fttol@exp1,f
  3398  061C  1FC2               	btfss	___fttol@exp1,7
  3399  061D  2E2B               	goto	l6611
  3400  061E  0842               	movf	___fttol@exp1,w
  3401  061F  3A80               	xorlw	128
  3402  0620  3E8F               	addlw	143
  3403  0621  1C03               	btfss	3,0
  3404  0622  2DFF               	goto	l6589
  3405  0623                     l6607:	
  3406  0623  1003               	clrc
  3407  0624  0CC1               	rrf	___fttol@lval+3,f
  3408  0625  0CC0               	rrf	___fttol@lval+2,f
  3409  0626  0CBF               	rrf	___fttol@lval+1,f
  3410  0627  0CBE               	rrf	___fttol@lval,f
  3411  0628  0FC2               	incfsz	___fttol@exp1,f
  3412  0629  2E23               	goto	l6607
  3413  062A  2E39               	goto	l6617
  3414  062B                     l6611:	
  3415  062B  3018               	movlw	24
  3416  062C  0242               	subwf	___fttol@exp1,w
  3417  062D  1803               	btfsc	3,0
  3418  062E  2DFF               	goto	l6589
  3419  062F                     l3416:	
  3420  062F  08C2               	movf	___fttol@exp1,f
  3421  0630  1903               	btfsc	3,2
  3422  0631  2E39               	goto	l6617
  3423  0632  1003               	clrc
  3424  0633  0DBE               	rlf	___fttol@lval,f
  3425  0634  0DBF               	rlf	___fttol@lval+1,f
  3426  0635  0DC0               	rlf	___fttol@lval+2,f
  3427  0636  0DC1               	rlf	___fttol@lval+3,f
  3428  0637  03C2               	decf	___fttol@exp1,f
  3429  0638  2E2F               	goto	l3416
  3430  0639                     l6617:	
  3431  0639  083D               	movf	___fttol@sign1,w
  3432  063A  1903               	btfsc	3,2
  3433  063B  2E47               	goto	l6621
  3434  063C  09BE               	comf	___fttol@lval,f
  3435  063D  09BF               	comf	___fttol@lval+1,f
  3436  063E  09C0               	comf	___fttol@lval+2,f
  3437  063F  09C1               	comf	___fttol@lval+3,f
  3438  0640  0ABE               	incf	___fttol@lval,f
  3439  0641  1903               	skipnz
  3440  0642  0ABF               	incf	___fttol@lval+1,f
  3441  0643  1903               	skipnz
  3442  0644  0AC0               	incf	___fttol@lval+2,f
  3443  0645  1903               	skipnz
  3444  0646  0AC1               	incf	___fttol@lval+3,f
  3445  0647                     l6621:	
  3446  0647  0841               	movf	___fttol@lval+3,w
  3447  0648  00B9               	movwf	?___fttol+3
  3448  0649  0840               	movf	___fttol@lval+2,w
  3449  064A  00B8               	movwf	?___fttol+2
  3450  064B  083F               	movf	___fttol@lval+1,w
  3451  064C  00B7               	movwf	?___fttol+1
  3452  064D  083E               	movf	___fttol@lval,w
  3453  064E  00B6               	movwf	?___fttol
  3454  064F  0008               	return
  3455  0650                     __end_of___fttol:	
  3456  0650                     __ptext784:	
  3457 ;; =============== function ___awmod ends ============
  3458                           
  3459                           
  3460 ;; *************** function ___lldiv *****************
  3461 ;; Defined at:
  3462 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  divisor         4    8[BANK0 ] unsigned long 
  3465 ;;  dividend        4   12[BANK0 ] unsigned long 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  quotient        4   16[BANK0 ] unsigned long 
  3468 ;;  counter         1   20[BANK0 ] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  4    8[BANK0 ] unsigned long 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 60/0
  3475 ;;		On exit  : 60/0
  3476 ;;		Unchanged: FFF9F/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3478 ;;      Params:         0       8       0       0       0
  3479 ;;      Locals:         0       5       0       0       0
  3480 ;;      Temps:          0       0       0       0       0
  3481 ;;      Totals:         0      13       0       0       0
  3482 ;;Total ram usage:       13 bytes
  3483 ;; Hardware stack levels used:    1
  3484 ;; Hardware stack levels required when called:    3
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_printf
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491  0650                     ___lldiv:	
  3492                           
  3493                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3494  0650  01B0               	clrf	___lldiv@quotient
  3495  0651  01B1               	clrf	___lldiv@quotient+1
  3496  0652  01B2               	clrf	___lldiv@quotient+2
  3497  0653  01B3               	clrf	___lldiv@quotient+3
  3498  0654  082B               	movf	___lldiv@divisor+3,w
  3499  0655  042A               	iorwf	___lldiv@divisor+2,w
  3500  0656  0429               	iorwf	___lldiv@divisor+1,w
  3501  0657  0428               	iorwf	___lldiv@divisor,w
  3502  0658  1903               	skipnz
  3503  0659  2E8F               	goto	l6739
  3504  065A  01B4               	clrf	___lldiv@counter
  3505  065B                     L11:	
  3506  065B  0AB4               	incf	___lldiv@counter,f
  3507  065C  1BAB               	btfsc	___lldiv@divisor+3,7
  3508  065D  2E64               	goto	l6727
  3509  065E  1003               	clrc
  3510  065F  0DA8               	rlf	___lldiv@divisor,f
  3511  0660  0DA9               	rlf	___lldiv@divisor+1,f
  3512  0661  0DAA               	rlf	___lldiv@divisor+2,f
  3513  0662  0DAB               	rlf	___lldiv@divisor+3,f
  3514  0663  2E5B               	goto	L11
  3515  0664                     l6727:	
  3516  0664  1003               	clrc
  3517  0665  0DB0               	rlf	___lldiv@quotient,f
  3518  0666  0DB1               	rlf	___lldiv@quotient+1,f
  3519  0667  0DB2               	rlf	___lldiv@quotient+2,f
  3520  0668  0DB3               	rlf	___lldiv@quotient+3,f
  3521  0669  082B               	movf	___lldiv@divisor+3,w
  3522  066A  022F               	subwf	___lldiv@dividend+3,w
  3523  066B  1D03               	skipz
  3524  066C  2E77               	goto	u3225
  3525  066D  082A               	movf	___lldiv@divisor+2,w
  3526  066E  022E               	subwf	___lldiv@dividend+2,w
  3527  066F  1D03               	skipz
  3528  0670  2E77               	goto	u3225
  3529  0671  0829               	movf	___lldiv@divisor+1,w
  3530  0672  022D               	subwf	___lldiv@dividend+1,w
  3531  0673  1D03               	skipz
  3532  0674  2E77               	goto	u3225
  3533  0675  0828               	movf	___lldiv@divisor,w
  3534  0676  022C               	subwf	___lldiv@dividend,w
  3535  0677                     u3225:	
  3536  0677  1C03               	skipc
  3537  0678  2E89               	goto	L12
  3538  0679  0828               	movf	___lldiv@divisor,w
  3539  067A  02AC               	subwf	___lldiv@dividend,f
  3540  067B  0829               	movf	___lldiv@divisor+1,w
  3541  067C  1C03               	skipc
  3542  067D  0F29               	incfsz	___lldiv@divisor+1,w
  3543  067E  02AD               	subwf	___lldiv@dividend+1,f
  3544  067F  082A               	movf	___lldiv@divisor+2,w
  3545  0680  1C03               	skipc
  3546  0681  0F2A               	incfsz	___lldiv@divisor+2,w
  3547  0682  02AE               	subwf	___lldiv@dividend+2,f
  3548  0683  082B               	movf	___lldiv@divisor+3,w
  3549  0684  1C03               	skipc
  3550  0685  0F2B               	incfsz	___lldiv@divisor+3,w
  3551  0686  02AF               	subwf	___lldiv@dividend+3,f
  3552  0687  1430               	bsf	___lldiv@quotient,0
  3553  0688  1003               	clrc
  3554  0689                     L12:	
  3555  0689  0CAB               	rrf	___lldiv@divisor+3,f
  3556  068A  0CAA               	rrf	___lldiv@divisor+2,f
  3557  068B  0CA9               	rrf	___lldiv@divisor+1,f
  3558  068C  0CA8               	rrf	___lldiv@divisor,f
  3559  068D  0BB4               	decfsz	___lldiv@counter,f
  3560  068E  2E64               	goto	l6727
  3561  068F                     l6739:	
  3562  068F  0833               	movf	___lldiv@quotient+3,w
  3563  0690  00AB               	movwf	?___lldiv+3
  3564  0691  0832               	movf	___lldiv@quotient+2,w
  3565  0692  00AA               	movwf	?___lldiv+2
  3566  0693  0831               	movf	___lldiv@quotient+1,w
  3567  0694  00A9               	movwf	?___lldiv+1
  3568  0695  0830               	movf	___lldiv@quotient,w
  3569  0696  00A8               	movwf	?___lldiv
  3570  0697  0008               	return
  3571  0698                     __end_of___lldiv:	
  3572  0698                     __ptext796:	
  3573 ;; =============== function __div_to_l_ ends ============
  3574                           
  3575                           
  3576 ;; *************** function __tdiv_to_l_ *****************
  3577 ;; Defined at:
  3578 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  f1              3    8[BANK0 ] float 
  3581 ;;  f2              3   11[BANK0 ] float 
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  quot            4   17[BANK0 ] unsigned long 
  3584 ;;  exp1            1   22[BANK0 ] unsigned char 
  3585 ;;  cntr            1   21[BANK0 ] unsigned char 
  3586 ;; Return value:  Size  Location     Type
  3587 ;;                  4    8[BANK0 ] unsigned long 
  3588 ;; Registers used:
  3589 ;;		wreg, status,2, status,0
  3590 ;; Tracked objects:
  3591 ;;		On entry : 60/0
  3592 ;;		On exit  : 60/0
  3593 ;;		Unchanged: FFF9F/0
  3594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3595 ;;      Params:         0       6       0       0       0
  3596 ;;      Locals:         0       6       0       0       0
  3597 ;;      Temps:          0       3       0       0       0
  3598 ;;      Totals:         0      15       0       0       0
  3599 ;;Total ram usage:       15 bytes
  3600 ;; Hardware stack levels used:    1
  3601 ;; Hardware stack levels required when called:    3
  3602 ;; This function calls:
  3603 ;;		Nothing
  3604 ;; This function is called by:
  3605 ;;		_printf
  3606 ;; This function uses a non-reentrant model
  3607 ;;
  3608  0698                     __tdiv_to_l_:	
  3609                           
  3610                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3611  0698  0828               	movf	__tdiv_to_l_@f1,w
  3612  0699  00AE               	movwf	??__tdiv_to_l_
  3613  069A  0829               	movf	__tdiv_to_l_@f1+1,w
  3614  069B  00AF               	movwf	??__tdiv_to_l_+1
  3615  069C  082A               	movf	__tdiv_to_l_@f1+2,w
  3616  069D  00B0               	movwf	??__tdiv_to_l_+2
  3617  069E  1003               	clrc
  3618  069F  0D2F               	rlf	??__tdiv_to_l_+1,w
  3619  06A0  0D30               	rlf	??__tdiv_to_l_+2,w
  3620  06A1  00B6               	movwf	__tdiv_to_l_@exp1
  3621  06A2  08B6               	movf	__tdiv_to_l_@exp1,f
  3622  06A3  1D03               	skipz
  3623  06A4  2EAA               	goto	l6395
  3624  06A5                     l6393:	
  3625  06A5  01A8               	clrf	?__tdiv_to_l_
  3626  06A6  01A9               	clrf	?__tdiv_to_l_+1
  3627  06A7  01AA               	clrf	?__tdiv_to_l_+2
  3628  06A8  01AB               	clrf	?__tdiv_to_l_+3
  3629  06A9  0008               	return
  3630  06AA                     l6395:	
  3631  06AA  082B               	movf	__tdiv_to_l_@f2,w
  3632  06AB  00AE               	movwf	??__tdiv_to_l_
  3633  06AC  082C               	movf	__tdiv_to_l_@f2+1,w
  3634  06AD  00AF               	movwf	??__tdiv_to_l_+1
  3635  06AE  082D               	movf	__tdiv_to_l_@f2+2,w
  3636  06AF  00B0               	movwf	??__tdiv_to_l_+2
  3637  06B0  1003               	clrc
  3638  06B1  0D2F               	rlf	??__tdiv_to_l_+1,w
  3639  06B2  0D30               	rlf	??__tdiv_to_l_+2,w
  3640  06B3  00B5               	movwf	__tdiv_to_l_@cntr
  3641  06B4  08B5               	movf	__tdiv_to_l_@cntr,f
  3642  06B5  1903               	btfsc	3,2
  3643  06B6  2EA5               	goto	l6393
  3644  06B7  307F               	movlw	127
  3645  06B8  17A9               	bsf	__tdiv_to_l_@f1+1,7
  3646  06B9  01AA               	clrf	__tdiv_to_l_@f1+2
  3647  06BA  17AC               	bsf	__tdiv_to_l_@f2+1,7
  3648  06BB  01AD               	clrf	__tdiv_to_l_@f2+2
  3649  06BC  01B1               	clrf	__tdiv_to_l_@quot
  3650  06BD  01B2               	clrf	__tdiv_to_l_@quot+1
  3651  06BE  01B3               	clrf	__tdiv_to_l_@quot+2
  3652  06BF  01B4               	clrf	__tdiv_to_l_@quot+3
  3653  06C0  02B6               	subwf	__tdiv_to_l_@exp1,f
  3654  06C1  3098               	movlw	152
  3655  06C2  0735               	addwf	__tdiv_to_l_@cntr,w
  3656  06C3  00AE               	movwf	??__tdiv_to_l_
  3657  06C4  02B6               	subwf	__tdiv_to_l_@exp1,f
  3658  06C5  3018               	movlw	24
  3659  06C6  00B5               	movwf	__tdiv_to_l_@cntr
  3660  06C7                     l6409:	
  3661  06C7  1003               	clrc
  3662  06C8  0DB1               	rlf	__tdiv_to_l_@quot,f
  3663  06C9  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  3664  06CA  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  3665  06CB  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  3666  06CC  082D               	movf	__tdiv_to_l_@f2+2,w
  3667  06CD  022A               	subwf	__tdiv_to_l_@f1+2,w
  3668  06CE  1D03               	skipz
  3669  06CF  2ED6               	goto	u2635
  3670  06D0  082C               	movf	__tdiv_to_l_@f2+1,w
  3671  06D1  0229               	subwf	__tdiv_to_l_@f1+1,w
  3672  06D2  1D03               	skipz
  3673  06D3  2ED6               	goto	u2635
  3674  06D4  082B               	movf	__tdiv_to_l_@f2,w
  3675  06D5  0228               	subwf	__tdiv_to_l_@f1,w
  3676  06D6                     u2635:	
  3677  06D6  1C03               	skipc
  3678  06D7  2EE4               	goto	L20
  3679  06D8  082B               	movf	__tdiv_to_l_@f2,w
  3680  06D9  02A8               	subwf	__tdiv_to_l_@f1,f
  3681  06DA  082C               	movf	__tdiv_to_l_@f2+1,w
  3682  06DB  1C03               	skipc
  3683  06DC  0F2C               	incfsz	__tdiv_to_l_@f2+1,w
  3684  06DD  02A9               	subwf	__tdiv_to_l_@f1+1,f
  3685  06DE  082D               	movf	__tdiv_to_l_@f2+2,w
  3686  06DF  1C03               	skipc
  3687  06E0  0A2D               	incf	__tdiv_to_l_@f2+2,w
  3688  06E1  02AA               	subwf	__tdiv_to_l_@f1+2,f
  3689  06E2  1431               	bsf	__tdiv_to_l_@quot,0
  3690  06E3  1003               	clrc
  3691  06E4                     L20:	
  3692  06E4  0DA8               	rlf	__tdiv_to_l_@f1,f
  3693  06E5  0DA9               	rlf	__tdiv_to_l_@f1+1,f
  3694  06E6  0DAA               	rlf	__tdiv_to_l_@f1+2,f
  3695  06E7  0BB5               	decfsz	__tdiv_to_l_@cntr,f
  3696  06E8  2EC7               	goto	l6409
  3697  06E9  1FB6               	btfss	__tdiv_to_l_@exp1,7
  3698  06EA  2EF8               	goto	l6429
  3699  06EB  0836               	movf	__tdiv_to_l_@exp1,w
  3700  06EC  3A80               	xorlw	128
  3701  06ED  3E97               	addlw	151
  3702  06EE  1C03               	btfss	3,0
  3703  06EF  2EA5               	goto	l6393
  3704  06F0                     l6425:	
  3705  06F0  1003               	clrc
  3706  06F1  0CB4               	rrf	__tdiv_to_l_@quot+3,f
  3707  06F2  0CB3               	rrf	__tdiv_to_l_@quot+2,f
  3708  06F3  0CB2               	rrf	__tdiv_to_l_@quot+1,f
  3709  06F4  0CB1               	rrf	__tdiv_to_l_@quot,f
  3710  06F5  0FB6               	incfsz	__tdiv_to_l_@exp1,f
  3711  06F6  2EF0               	goto	l6425
  3712  06F7  2F06               	goto	l6435
  3713  06F8                     l6429:	
  3714  06F8  3018               	movlw	24
  3715  06F9  0236               	subwf	__tdiv_to_l_@exp1,w
  3716  06FA  1803               	btfsc	3,0
  3717  06FB  2EA5               	goto	l6393
  3718  06FC                     l3554:	
  3719  06FC  08B6               	movf	__tdiv_to_l_@exp1,f
  3720  06FD  1903               	btfsc	3,2
  3721  06FE  2F06               	goto	l6435
  3722  06FF  1003               	clrc
  3723  0700  0DB1               	rlf	__tdiv_to_l_@quot,f
  3724  0701  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  3725  0702  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  3726  0703  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  3727  0704  03B6               	decf	__tdiv_to_l_@exp1,f
  3728  0705  2EFC               	goto	l3554
  3729  0706                     l6435:	
  3730  0706  0834               	movf	__tdiv_to_l_@quot+3,w
  3731  0707  00AB               	movwf	?__tdiv_to_l_+3
  3732  0708  0833               	movf	__tdiv_to_l_@quot+2,w
  3733  0709  00AA               	movwf	?__tdiv_to_l_+2
  3734  070A  0832               	movf	__tdiv_to_l_@quot+1,w
  3735  070B  00A9               	movwf	?__tdiv_to_l_+1
  3736  070C  0831               	movf	__tdiv_to_l_@quot,w
  3737  070D  00A8               	movwf	?__tdiv_to_l_
  3738  070E  0008               	return
  3739  070F                     __end_of__tdiv_to_l_:	
  3740  070F                     PL2:	
  3741  070F  00AB               	movwf	?___lldiv+3
  3742  0710  1683               	bsf	3,5	;RP0=1, select bank1
  3743  0711  083B               	movf	(printf@_val+3)^(0+128),w
  3744  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0713  00AF               	movwf	?___lldiv+7
  3746  0714  1683               	bsf	3,5	;RP0=1, select bank1
  3747  0715  083A               	movf	(printf@_val+2)^(0+128),w
  3748  0716  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0717  00AE               	movwf	?___lldiv+6
  3750  0718  1683               	bsf	3,5	;RP0=1, select bank1
  3751  0719  0839               	movf	(printf@_val+1)^(0+128),w
  3752  071A  1283               	bcf	3,5	;RP0=0, select bank0
  3753  071B  00AD               	movwf	?___lldiv+5
  3754  071C  1683               	bsf	3,5	;RP0=1, select bank1
  3755  071D  0838               	movf	printf@_val^(0+128),w
  3756  071E  1283               	bcf	3,5	;RP0=0, select bank0
  3757  071F  00AC               	movwf	?___lldiv+4
  3758  0720  0008               	return
  3759  0721                     PL4:	
  3760  0721  0848               	movf	printf@c^(0+128),w
  3761  0722  00AB               	movwf	??_printf^(0+128)
  3762  0723  1003               	clrc
  3763  0724  0DAB               	rlf	??_printf^(0+128),f
  3764  0725  1003               	clrc
  3765  0726  0D2B               	rlf	??_printf^(0+128),w
  3766  0727  3E4F               	addlw	low (_dpowers-__stringbase)
  3767  0728  0084               	movwf	4
  3768  0729  0008               	return
  3769  072A                     PL5:	
  3770  072A  0835               	movf	printf@integ^(0+128),w
  3771  072B  1283               	bcf	3,5	;RP0=0, select bank0
  3772  072C  00A8               	movwf	?___ftge
  3773  072D  1683               	bsf	3,5	;RP0=1, select bank1
  3774  072E  0836               	movf	(printf@integ+1)^(0+128),w
  3775  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0730  00A9               	movwf	?___ftge+1
  3777  0731  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0732  0837               	movf	(printf@integ+2)^(0+128),w
  3779  0733  1283               	bcf	3,5	;RP0=0, select bank0
  3780  0734  00AA               	movwf	?___ftge+2
  3781  0735  0008               	return
  3782  0736                     PL6:	
  3783  0736  300A               	movlw	10
  3784  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0738  00B5               	movwf	?___llmod
  3786  0739  01B6               	clrf	?___llmod+1
  3787  073A  01B7               	clrf	?___llmod+2
  3788  073B  01B8               	clrf	?___llmod+3
  3789  073C  1683               	bsf	3,5	;RP0=1, select bank1
  3790  073D  0008               	return
  3791  073E                     PL7:	
  3792  073E  1283               	bcf	3,5	;RP0=0, select bank0
  3793  073F  0728               	addwf	?___wmul,w
  3794  0740  1683               	bsf	3,5	;RP0=1, select bank1
  3795  0741  00AB               	movwf	??_printf^(0+128)
  3796  0742  3000               	movlw	0
  3797  0743  1803               	skipnc
  3798  0744  3001               	movlw	1
  3799  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0746  0729               	addwf	?___wmul+1,w
  3801  0747  1683               	bsf	3,5	;RP0=1, select bank1
  3802  0748  00AC               	movwf	(??_printf+1)^(0+128)
  3803  0749  082B               	movf	??_printf^(0+128),w
  3804  074A  3ED0               	addlw	208
  3805  074B  0008               	return
  3806  074C                     PL8:	
  3807  074C  0854               	movf	?_scale,w
  3808  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3809  074E  00B5               	movwf	printf@integ^(0+128)
  3810  074F  1283               	bcf	3,5	;RP0=0, select bank0
  3811  0750  0855               	movf	?_scale+1,w
  3812  0751  1683               	bsf	3,5	;RP0=1, select bank1
  3813  0752  00B6               	movwf	(printf@integ+1)^(0+128)
  3814  0753  1283               	bcf	3,5	;RP0=0, select bank0
  3815  0754  0856               	movf	?_scale+2,w
  3816  0755  1683               	bsf	3,5	;RP0=1, select bank1
  3817  0756  00B7               	movwf	(printf@integ+2)^(0+128)
  3818  0757  0843               	movf	printf@fval^(0+128),w
  3819  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0759  0008               	return
  3821  075A                     PL10:	
  3822  075A  0839               	movf	?___fttol+3,w
  3823  075B  1683               	bsf	3,5	;RP0=1, select bank1
  3824  075C  00BB               	movwf	(printf@_val+3)^(0+128)
  3825  075D  1283               	bcf	3,5	;RP0=0, select bank0
  3826  075E  0838               	movf	?___fttol+2,w
  3827  075F  1683               	bsf	3,5	;RP0=1, select bank1
  3828  0760  00BA               	movwf	(printf@_val+2)^(0+128)
  3829  0761  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0762  0837               	movf	?___fttol+1,w
  3831  0763  1683               	bsf	3,5	;RP0=1, select bank1
  3832  0764  00B9               	movwf	(printf@_val+1)^(0+128)
  3833  0765  1283               	bcf	3,5	;RP0=0, select bank0
  3834  0766  0836               	movf	?___fttol,w
  3835  0767  0008               	return
  3836  0768                     PL15:	
  3837  0768  082B               	movf	?___lldiv+3,w
  3838  0769  00BC               	movwf	?___llmod+7
  3839  076A  082A               	movf	?___lldiv+2,w
  3840  076B  00BB               	movwf	?___llmod+6
  3841  076C  0829               	movf	?___lldiv+1,w
  3842  076D  00BA               	movwf	?___llmod+5
  3843  076E  0828               	movf	?___lldiv,w
  3844  076F  00B9               	movwf	?___llmod+4
  3845  0770  0008               	return
  3846  0771                     PL17:	
  3847  0771  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0772  00B6               	movwf	?___fttol
  3849  0773  1683               	bsf	3,5	;RP0=1, select bank1
  3850  0774  0844               	movf	(printf@fval+1)^(0+128),w
  3851  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0776  00B7               	movwf	?___fttol+1
  3853  0777  1683               	bsf	3,5	;RP0=1, select bank1
  3854  0778  0845               	movf	(printf@fval+2)^(0+128),w
  3855  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3856  077A  00B8               	movwf	?___fttol+2
  3857  077B  0008               	return
  3858  077C                     PL20:	
  3859  077C  00C5               	movwf	?___ftmul
  3860  077D  1683               	bsf	3,5	;RP0=1, select bank1
  3861  077E  0844               	movf	(printf@fval+1)^(0+128),w
  3862  077F  1283               	bcf	3,5	;RP0=0, select bank0
  3863  0780  00C6               	movwf	?___ftmul+1
  3864  0781  1683               	bsf	3,5	;RP0=1, select bank1
  3865  0782  0845               	movf	(printf@fval+2)^(0+128),w
  3866  0783  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0784  00C7               	movwf	?___ftmul+2
  3868  0785  0008               	return
  3869  0786                     PL22:	
  3870  0786  00AB               	movwf	??_printf^(0+128)
  3871  0787  01AC               	clrf	(??_printf^(0+128)+1)
  3872  0788  1BAB               	btfsc	??_printf^(0+128),7
  3873  0789  03AC               	decf	(??_printf^(0+128)+1),f
  3874  078A  082C               	movf	(??_printf+1)^(0+128),w
  3875  078B  3A80               	xorlw	128
  3876  078C  00AD               	movwf	(??_printf+2)^(0+128)
  3877  078D  0008               	return
  3878  078E                     PL27:	
  3879  078E  0836               	movf	___fttol@f1,w
  3880  078F  00BA               	movwf	??___fttol
  3881  0790  0837               	movf	___fttol@f1+1,w
  3882  0791  00BB               	movwf	??___fttol+1
  3883  0792  0838               	movf	___fttol@f1+2,w
  3884  0793  00BC               	movwf	??___fttol+2
  3885  0794  0008               	return
  3886  0795                     PL30:	
  3887  0795  1283               	bcf	3,5	;RP0=0, select bank0
  3888  0796  00A8               	movwf	?___wmul
  3889  0797  300A               	movlw	10
  3890  0798  00AA               	movwf	?___wmul+2
  3891  0799  01AB               	clrf	?___wmul+3
  3892  079A  0008               	return
  3893  079B                     PL31:	
  3894  079B  1683               	bsf	3,5	;RP0=1, select bank1
  3895  079C  1303               	bcf	3,6	;RP1=0, select bank1
  3896  079D  0008               	return
  3897  079E                     __ptext786:	
  3898 ;; =============== function ___ftge ends ============
  3899                           
  3900                           
  3901 ;; *************** function ___ftneg *****************
  3902 ;; Defined at:
  3903 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  f1              3    8[BANK0 ] float 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;		None
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  3    8[BANK0 ] float 
  3910 ;; Registers used:
  3911 ;;		wreg
  3912 ;; Tracked objects:
  3913 ;;		On entry : 160/0
  3914 ;;		On exit  : 160/0
  3915 ;;		Unchanged: FFE9F/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3917 ;;      Params:         0       3       0       0       0
  3918 ;;      Locals:         0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0
  3920 ;;      Totals:         0       3       0       0       0
  3921 ;;Total ram usage:        3 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    3
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_printf
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930  079E                     ___ftneg:	
  3931                           
  3932                           ; Regs used in ___ftneg: [wreg]
  3933  079E  082A               	movf	___ftneg@f1+2,w
  3934  079F  0429               	iorwf	___ftneg@f1+1,w
  3935  07A0  0428               	iorwf	___ftneg@f1,w
  3936  07A1  1903               	skipnz
  3937  07A2  0008               	return
  3938  07A3  3080               	movlw	128
  3939  07A4  06AA               	xorwf	___ftneg@f1+2,f
  3940  07A5  0008               	return
  3941  07A6                     __end_of___ftneg:	
  3942  07A6                     __ptext776:	
  3943 ;; =============== function _lcd_init ends ============
  3944                           
  3945                           
  3946 ;; *************** function ___lltoft *****************
  3947 ;; Defined at:
  3948 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  c               4   16[BANK0 ] unsigned long 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  exp             1   20[BANK0 ] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  3   16[BANK0 ] float 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0, pclath, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 60/0
  3959 ;;		On exit  : 60/0
  3960 ;;		Unchanged: FFF9F/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       4       0       0       0
  3963 ;;      Locals:         0       1       0       0       0
  3964 ;;      Temps:          0       0       0       0       0
  3965 ;;      Totals:         0       5       0       0       0
  3966 ;;Total ram usage:        5 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    4
  3969 ;; This function calls:
  3970 ;;		___ftpack
  3971 ;; This function is called by:
  3972 ;;		_printf
  3973 ;; This function uses a non-reentrant model
  3974 ;;
  3975  07A6                     ___lltoft:	
  3976                           
  3977                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3978  07A6  308E               	movlw	142
  3979  07A7  00B4               	movwf	___lltoft@exp
  3980  07A8                     l7133:	
  3981  07A8  30FF               	movlw	255
  3982  07A9  0533               	andwf	___lltoft@c+3,w
  3983  07AA  1903               	btfsc	3,2
  3984  07AB  2FB3               	goto	l7135
  3985  07AC  1003               	clrc
  3986  07AD  0CB3               	rrf	___lltoft@c+3,f
  3987  07AE  0CB2               	rrf	___lltoft@c+2,f
  3988  07AF  0CB1               	rrf	___lltoft@c+1,f
  3989  07B0  0CB0               	rrf	___lltoft@c,f
  3990  07B1  0AB4               	incf	___lltoft@exp,f
  3991  07B2  2FA8               	goto	l7133
  3992  07B3                     l7135:	
  3993  07B3  0830               	movf	___lltoft@c,w
  3994  07B4  00A8               	movwf	?___ftpack
  3995  07B5  0831               	movf	___lltoft@c+1,w
  3996  07B6  00A9               	movwf	?___ftpack+1
  3997  07B7  0832               	movf	___lltoft@c+2,w
  3998  07B8  00AA               	movwf	?___ftpack+2
  3999  07B9  0834               	movf	___lltoft@exp,w
  4000  07BA  00AB               	movwf	?___ftpack+3
  4001  07BB  01AC               	clrf	?___ftpack+4
  4002  07BC  120A  158A  2769   	fcall	___ftpack
  4003  07BF  0828               	movf	?___ftpack,w
  4004  07C0  00B0               	movwf	?___lltoft
  4005  07C1  0829               	movf	?___ftpack+1,w
  4006  07C2  00B1               	movwf	?___lltoft+1
  4007  07C3  082A               	movf	?___ftpack+2,w
  4008  07C4  00B2               	movwf	?___lltoft+2
  4009  07C5  0008               	return
  4010  07C6                     __end_of___lltoft:	
  4011                           
  4012                           	psect	text771
  4013  15E0                     __ptext771:	
  4014 ;; =============== function _lcd_putc ends ============
  4015                           
  4016                           
  4017 ;; *************** function ___ftsub *****************
  4018 ;; Defined at:
  4019 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  f2              3    0[BANK1 ] float 
  4022 ;;  f1              3    3[BANK1 ] float 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  3    0[BANK1 ] float 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, pclath, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 60/20
  4031 ;;		On exit  : 60/20
  4032 ;;		Unchanged: FFF9F/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         0       0       6       0       0
  4035 ;;      Locals:         0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         0       0       6       0       0
  4038 ;;Total ram usage:        6 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    5
  4041 ;; This function calls:
  4042 ;;		___ftadd
  4043 ;; This function is called by:
  4044 ;;		_printf
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047  15E0                     ___ftsub:	
  4048                           
  4049                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4050  15E0  3080               	movlw	128
  4051  15E1  06A2               	xorwf	(___ftsub@f2+2)^(0+128),f
  4052  15E2  0823               	movf	___ftsub@f1^(0+128),w
  4053  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  4054  15E4  00D4               	movwf	?___ftadd
  4055  15E5  1683               	bsf	3,5	;RP0=1, select bank1
  4056  15E6  0824               	movf	(___ftsub@f1+1)^(0+128),w
  4057  15E7  1283               	bcf	3,5	;RP0=0, select bank0
  4058  15E8  00D5               	movwf	?___ftadd+1
  4059  15E9  1683               	bsf	3,5	;RP0=1, select bank1
  4060  15EA  0825               	movf	(___ftsub@f1+2)^(0+128),w
  4061  15EB  1283               	bcf	3,5	;RP0=0, select bank0
  4062  15EC  00D6               	movwf	?___ftadd+2
  4063  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  4064  15EE  0820               	movf	___ftsub@f2^(0+128),w
  4065  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  4066  15F0  00D7               	movwf	?___ftadd+3
  4067  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  4068  15F2  0821               	movf	(___ftsub@f2+1)^(0+128),w
  4069  15F3  1283               	bcf	3,5	;RP0=0, select bank0
  4070  15F4  00D8               	movwf	?___ftadd+4
  4071  15F5  1683               	bsf	3,5	;RP0=1, select bank1
  4072  15F6  0822               	movf	(___ftsub@f2+2)^(0+128),w
  4073  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  4074  15F8  00D9               	movwf	?___ftadd+5
  4075  15F9  2606               	fcall	___ftadd
  4076  15FA  0854               	movf	?___ftadd,w
  4077  15FB  1683               	bsf	3,5	;RP0=1, select bank1
  4078  15FC  00A0               	movwf	?___ftsub^(0+128)
  4079  15FD  1283               	bcf	3,5	;RP0=0, select bank0
  4080  15FE  0855               	movf	?___ftadd+1,w
  4081  15FF  1683               	bsf	3,5	;RP0=1, select bank1
  4082  1600  00A1               	movwf	(?___ftsub+1)^(0+128)
  4083  1601  1283               	bcf	3,5	;RP0=0, select bank0
  4084  1602  0856               	movf	?___ftadd+2,w
  4085  1603  1683               	bsf	3,5	;RP0=1, select bank1
  4086  1604  00A2               	movwf	(?___ftsub+2)^(0+128)
  4087  1605  0008               	return
  4088  1606                     __end_of___ftsub:	
  4089  1606                     __ptext780:	
  4090 ;; =============== function ___ftdiv ends ============
  4091                           
  4092                           
  4093 ;; *************** function ___ftadd *****************
  4094 ;; Defined at:
  4095 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  f1              3   52[BANK0 ] float 
  4098 ;;  f2              3   55[BANK0 ] float 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  exp1            1   63[BANK0 ] unsigned char 
  4101 ;;  exp2            1   62[BANK0 ] unsigned char 
  4102 ;;  sign            1   61[BANK0 ] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  3   52[BANK0 ] float 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0, pclath, cstack
  4107 ;; Tracked objects:
  4108 ;;		On entry : 60/0
  4109 ;;		On exit  : 60/0
  4110 ;;		Unchanged: FFF9F/0
  4111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4112 ;;      Params:         0       6       0       0       0
  4113 ;;      Locals:         0       3       0       0       0
  4114 ;;      Temps:          0       3       0       0       0
  4115 ;;      Totals:         0      12       0       0       0
  4116 ;;Total ram usage:       12 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    4
  4119 ;; This function calls:
  4120 ;;		___ftpack
  4121 ;; This function is called by:
  4122 ;;		_printf
  4123 ;;		___ftsub
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126  1606                     ___ftadd:	
  4127                           
  4128                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4129  1606  0854               	movf	___ftadd@f1,w
  4130  1607  00DA               	movwf	??___ftadd
  4131  1608  0855               	movf	___ftadd@f1+1,w
  4132  1609  00DB               	movwf	??___ftadd+1
  4133  160A  0856               	movf	___ftadd@f1+2,w
  4134  160B  00DC               	movwf	??___ftadd+2
  4135  160C  1003               	clrc
  4136  160D  0D5B               	rlf	??___ftadd+1,w
  4137  160E  0D5C               	rlf	??___ftadd+2,w
  4138  160F  00DF               	movwf	___ftadd@exp1
  4139  1610  0857               	movf	___ftadd@f2,w
  4140  1611  00DA               	movwf	??___ftadd
  4141  1612  0858               	movf	___ftadd@f2+1,w
  4142  1613  00DB               	movwf	??___ftadd+1
  4143  1614  0859               	movf	___ftadd@f2+2,w
  4144  1615  00DC               	movwf	??___ftadd+2
  4145  1616  1003               	clrc
  4146  1617  0D5B               	rlf	??___ftadd+1,w
  4147  1618  0D5C               	rlf	??___ftadd+2,w
  4148  1619  00DE               	movwf	___ftadd@exp2
  4149  161A  085F               	movf	___ftadd@exp1,w
  4150  161B  1903               	btfsc	3,2
  4151  161C  2E29               	goto	l6943
  4152  161D  085E               	movf	___ftadd@exp2,w
  4153  161E  025F               	subwf	___ftadd@exp1,w
  4154  161F  085E               	movf	___ftadd@exp2,w
  4155  1620  1803               	skipnc
  4156  1621  2E31               	goto	L8
  4157  1622  00DA               	movwf	??___ftadd
  4158  1623  085F               	movf	___ftadd@exp1,w
  4159  1624  02DA               	subwf	??___ftadd,f
  4160  1625  3019               	movlw	25
  4161  1626  025A               	subwf	??___ftadd,w
  4162  1627  1C03               	skipc
  4163  1628  2E30               	goto	l6947
  4164  1629                     l6943:	
  4165  1629  0857               	movf	___ftadd@f2,w
  4166  162A  00D4               	movwf	?___ftadd
  4167  162B  0858               	movf	___ftadd@f2+1,w
  4168  162C  00D5               	movwf	?___ftadd+1
  4169  162D  0859               	movf	___ftadd@f2+2,w
  4170  162E  00D6               	movwf	?___ftadd+2
  4171  162F  0008               	return
  4172  1630                     l6947:	
  4173  1630  085E               	movf	___ftadd@exp2,w
  4174  1631                     L8:	
  4175  1631  1903               	btfsc	3,2
  4176  1632  0008               	return
  4177  1633  085F               	movf	___ftadd@exp1,w
  4178  1634  025E               	subwf	___ftadd@exp2,w
  4179  1635  1803               	skipnc
  4180  1636  2E3F               	goto	l6953
  4181  1637  085F               	movf	___ftadd@exp1,w
  4182  1638  00DA               	movwf	??___ftadd
  4183  1639  085E               	movf	___ftadd@exp2,w
  4184  163A  02DA               	subwf	??___ftadd,f
  4185  163B  3019               	movlw	25
  4186  163C  025A               	subwf	??___ftadd,w
  4187  163D  1803               	btfsc	3,0
  4188  163E  0008               	return
  4189  163F                     l6953:	
  4190  163F  3006               	movlw	6
  4191  1640  00DD               	movwf	___ftadd@sign
  4192  1641  1BD6               	btfsc	___ftadd@f1+2,7
  4193  1642  17DD               	bsf	___ftadd@sign,7
  4194  1643  1BD9               	btfsc	___ftadd@f2+2,7
  4195  1644  175D               	bsf	___ftadd@sign,6
  4196  1645  17D5               	bsf	___ftadd@f1+1,7
  4197  1646  01D6               	clrf	___ftadd@f1+2
  4198  1647  17D8               	bsf	___ftadd@f2+1,7
  4199  1648  01D9               	clrf	___ftadd@f2+2
  4200  1649  085E               	movf	___ftadd@exp2,w
  4201  164A  025F               	subwf	___ftadd@exp1,w
  4202  164B  1803               	skipnc
  4203  164C  2E66               	goto	l6975
  4204  164D                     l6965:	
  4205  164D  1003               	clrc
  4206  164E  0DD7               	rlf	___ftadd@f2,f
  4207  164F  0DD8               	rlf	___ftadd@f2+1,f
  4208  1650  0DD9               	rlf	___ftadd@f2+2,f
  4209  1651  03DE               	decf	___ftadd@exp2,f
  4210  1652  085E               	movf	___ftadd@exp2,w
  4211  1653  065F               	xorwf	___ftadd@exp1,w
  4212  1654  1903               	skipnz
  4213  1655  2E61               	goto	l6973
  4214  1656  03DD               	decf	___ftadd@sign,f
  4215  1657  085D               	movf	___ftadd@sign,w
  4216  1658  3907               	andlw	7
  4217  1659  1903               	btfsc	3,2
  4218  165A  2E61               	goto	l6973
  4219  165B  2E4D               	goto	l6965
  4220  165C                     l6971:	
  4221  165C  1003               	clrc
  4222  165D  0CD6               	rrf	___ftadd@f1+2,f
  4223  165E  0CD5               	rrf	___ftadd@f1+1,f
  4224  165F  0CD4               	rrf	___ftadd@f1,f
  4225  1660  0ADF               	incf	___ftadd@exp1,f
  4226  1661                     l6973:	
  4227  1661  085F               	movf	___ftadd@exp1,w
  4228  1662  065E               	xorwf	___ftadd@exp2,w
  4229  1663  1903               	btfsc	3,2
  4230  1664  2E82               	goto	l3360
  4231  1665  2E5C               	goto	l6971
  4232  1666                     l6975:	
  4233  1666  085F               	movf	___ftadd@exp1,w
  4234  1667  025E               	subwf	___ftadd@exp2,w
  4235  1668  1803               	skipnc
  4236  1669  2E82               	goto	l3360
  4237  166A                     l6977:	
  4238  166A  1003               	clrc
  4239  166B  0DD4               	rlf	___ftadd@f1,f
  4240  166C  0DD5               	rlf	___ftadd@f1+1,f
  4241  166D  0DD6               	rlf	___ftadd@f1+2,f
  4242  166E  03DF               	decf	___ftadd@exp1,f
  4243  166F  085E               	movf	___ftadd@exp2,w
  4244  1670  065F               	xorwf	___ftadd@exp1,w
  4245  1671  1903               	skipnz
  4246  1672  2E7E               	goto	l6985
  4247  1673  03DD               	decf	___ftadd@sign,f
  4248  1674  085D               	movf	___ftadd@sign,w
  4249  1675  3907               	andlw	7
  4250  1676  1903               	btfsc	3,2
  4251  1677  2E7E               	goto	l6985
  4252  1678  2E6A               	goto	l6977
  4253  1679                     l6983:	
  4254  1679  1003               	clrc
  4255  167A  0CD9               	rrf	___ftadd@f2+2,f
  4256  167B  0CD8               	rrf	___ftadd@f2+1,f
  4257  167C  0CD7               	rrf	___ftadd@f2,f
  4258  167D  0ADE               	incf	___ftadd@exp2,f
  4259  167E                     l6985:	
  4260  167E  085F               	movf	___ftadd@exp1,w
  4261  167F  065E               	xorwf	___ftadd@exp2,w
  4262  1680  1D03               	skipz
  4263  1681  2E79               	goto	l6983
  4264  1682                     l3360:	
  4265  1682  1FDD               	btfss	___ftadd@sign,7
  4266  1683  2E8D               	goto	l6991
  4267  1684  30FF               	movlw	255
  4268  1685  06D4               	xorwf	___ftadd@f1,f
  4269  1686  06D5               	xorwf	___ftadd@f1+1,f
  4270  1687  06D6               	xorwf	___ftadd@f1+2,f
  4271  1688  0AD4               	incf	___ftadd@f1,f
  4272  1689  1903               	skipnz
  4273  168A  0AD5               	incf	___ftadd@f1+1,f
  4274  168B  1903               	skipnz
  4275  168C  0AD6               	incf	___ftadd@f1+2,f
  4276  168D                     l6991:	
  4277  168D  1F5D               	btfss	___ftadd@sign,6
  4278  168E  2E98               	goto	l6997
  4279  168F  30FF               	movlw	255
  4280  1690  06D7               	xorwf	___ftadd@f2,f
  4281  1691  06D8               	xorwf	___ftadd@f2+1,f
  4282  1692  06D9               	xorwf	___ftadd@f2+2,f
  4283  1693  0AD7               	incf	___ftadd@f2,f
  4284  1694  1903               	skipnz
  4285  1695  0AD8               	incf	___ftadd@f2+1,f
  4286  1696  1903               	skipnz
  4287  1697  0AD9               	incf	___ftadd@f2+2,f
  4288  1698                     l6997:	
  4289  1698  01DD               	clrf	___ftadd@sign
  4290  1699  0854               	movf	___ftadd@f1,w
  4291  169A  07D7               	addwf	___ftadd@f2,f
  4292  169B  0855               	movf	___ftadd@f1+1,w
  4293  169C  1103               	clrz
  4294  169D  1803               	skipnc
  4295  169E  0A55               	incf	___ftadd@f1+1,w
  4296  169F  1D03               	btfss	3,2
  4297  16A0  07D8               	addwf	___ftadd@f2+1,f
  4298  16A1  0856               	movf	___ftadd@f1+2,w
  4299  16A2  1103               	clrz
  4300  16A3  1803               	skipnc
  4301  16A4  0A56               	incf	___ftadd@f1+2,w
  4302  16A5  1D03               	btfss	3,2
  4303  16A6  07D9               	addwf	___ftadd@f2+2,f
  4304  16A7  1FD9               	btfss	___ftadd@f2+2,7
  4305  16A8  2EB4               	goto	l7009
  4306  16A9  30FF               	movlw	255
  4307  16AA  06D7               	xorwf	___ftadd@f2,f
  4308  16AB  06D8               	xorwf	___ftadd@f2+1,f
  4309  16AC  06D9               	xorwf	___ftadd@f2+2,f
  4310  16AD  0AD7               	incf	___ftadd@f2,f
  4311  16AE  1903               	skipnz
  4312  16AF  0AD8               	incf	___ftadd@f2+1,f
  4313  16B0  1903               	skipnz
  4314  16B1  0AD9               	incf	___ftadd@f2+2,f
  4315  16B2  01DD               	clrf	___ftadd@sign
  4316  16B3  0ADD               	incf	___ftadd@sign,f
  4317  16B4                     l7009:	
  4318  16B4  0857               	movf	___ftadd@f2,w
  4319  16B5  00A8               	movwf	?___ftpack
  4320  16B6  0858               	movf	___ftadd@f2+1,w
  4321  16B7  00A9               	movwf	?___ftpack+1
  4322  16B8  0859               	movf	___ftadd@f2+2,w
  4323  16B9  00AA               	movwf	?___ftpack+2
  4324  16BA  085F               	movf	___ftadd@exp1,w
  4325  16BB  00AB               	movwf	?___ftpack+3
  4326  16BC  085D               	movf	___ftadd@sign,w
  4327  16BD  00AC               	movwf	?___ftpack+4
  4328  16BE  120A  158A  2769   	fcall	___ftpack
  4329  16C1  0828               	movf	?___ftpack,w
  4330  16C2  00D4               	movwf	?___ftadd
  4331  16C3  0829               	movf	?___ftpack+1,w
  4332  16C4  00D5               	movwf	?___ftadd+1
  4333  16C5  082A               	movf	?___ftpack+2,w
  4334  16C6  00D6               	movwf	?___ftadd+2
  4335  16C7  0008               	return
  4336  16C8                     __end_of___ftadd:	
  4337                           
  4338                           	psect	text773
  4339  08D9                     __ptext773:	
  4340 ;; =============== function _scale ends ============
  4341                           
  4342                           
  4343 ;; *************** function _fround *****************
  4344 ;; Defined at:
  4345 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  prec            1    wreg     unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  prec            1    6[BANK1 ] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  3   64[BANK0 ] unsigned char 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 60/20
  4356 ;;		On exit  : 60/0
  4357 ;;		Unchanged: FFF9F/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         0       3       0       0       0
  4360 ;;      Locals:         0       0       7       0       0
  4361 ;;      Temps:          0       0       0       0       0
  4362 ;;      Totals:         0       3       7       0       0
  4363 ;;Total ram usage:       10 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    5
  4366 ;; This function calls:
  4367 ;;		___lbmod
  4368 ;;		___lbdiv
  4369 ;;		___bmul
  4370 ;;		___ftmul
  4371 ;; This function is called by:
  4372 ;;		_printf
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375  08D9                     _fround:	
  4376                           
  4377                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4378                           ;fround@prec stored from wreg
  4379  08D9  00A6               	movwf	fround@prec^(0+128)
  4380  08DA  306E               	movlw	110
  4381  08DB  0226               	subwf	fround@prec^(0+128),w
  4382  08DC  1C03               	skipc
  4383  08DD  2971               	goto	l7199
  4384  08DE  3003               	movlw	3
  4385  08DF  1283               	bcf	3,5	;RP0=0, select bank0
  4386  08E0  00B1               	movwf	?___bmul
  4387  08E1  300A               	movlw	10
  4388  08E2  00AD               	movwf	?___lbdiv
  4389  08E3  3064               	movlw	100
  4390  08E4  00A8               	movwf	?___lbmod
  4391  08E5  1683               	bsf	3,5	;RP0=1, select bank1
  4392  08E6  0826               	movf	fround@prec^(0+128),w
  4393  08E7  220A  120A  158A   	fcall	___lbmod
  4394  08EA  21EE               	fcall	___lbdiv
  4395  08EB  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4396  08F0  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4397  08F1  0084               	movwf	4
  4398  08F2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4399  08F7  00C5               	movwf	?___ftmul
  4400  08F8  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4401  08FD  00C6               	movwf	?___ftmul+1
  4402  08FE  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4403  0903  00C7               	movwf	?___ftmul+2
  4404  0904  3003               	movlw	3
  4405  0905  00B1               	movwf	?___bmul
  4406  0906  3064               	movlw	100
  4407  0907  00AD               	movwf	?___lbdiv
  4408  0908  1683               	bsf	3,5	;RP0=1, select bank1
  4409  0909  0826               	movf	fround@prec^(0+128),w
  4410  090A  21EE               	fcall	___lbdiv
  4411  090B  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4412  0910  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4413  0911  0084               	movwf	4
  4414  0912  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4415  0917  00C8               	movwf	?___ftmul+3
  4416  0918  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4417  091D  00C9               	movwf	?___ftmul+4
  4418  091E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4419  0923  00CA               	movwf	?___ftmul+5
  4420  0924  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4421  0929  2235  120A  158A   	fcall	PL16	;call to abstracted procedure
  4422  092C  3003               	movlw	3
  4423  092D  2248  120A  158A   	fcall	PL28	;call to abstracted procedure
  4424  0930  220A               	fcall	___lbmod
  4425  0931  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4426  0936  3E01               	addlw	low (__npowers_-__stringbase)
  4427  0937  0084               	movwf	4
  4428  0938  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4429  093D  00C5               	movwf	?___ftmul
  4430  093E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4431  0943  00C6               	movwf	?___ftmul+1
  4432  0944  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4433  0949  2227               	fcall	PL9	;call to abstracted procedure
  4434  094A  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4435  094F  0845               	movf	?___ftmul,w
  4436  0950  1683               	bsf	3,5	;RP0=1, select bank1
  4437  0951  00A0               	movwf	_fround$4111^(0+128)
  4438  0952  1283               	bcf	3,5	;RP0=0, select bank0
  4439  0953  0846               	movf	?___ftmul+1,w
  4440  0954  1683               	bsf	3,5	;RP0=1, select bank1
  4441  0955  00A1               	movwf	(_fround$4111+1)^(0+128)
  4442  0956  1283               	bcf	3,5	;RP0=0, select bank0
  4443  0957  0847               	movf	?___ftmul+2,w
  4444  0958  1683               	bsf	3,5	;RP0=1, select bank1
  4445  0959  00A2               	movwf	(_fround$4111+2)^(0+128)
  4446  095A  1283               	bcf	3,5	;RP0=0, select bank0
  4447  095B  303F               	movlw	63
  4448  095C  01C5               	clrf	?___ftmul
  4449  095D  01C6               	clrf	?___ftmul+1
  4450  095E  00C7               	movwf	?___ftmul+2
  4451  095F  1683               	bsf	3,5	;RP0=1, select bank1
  4452  0960  0820               	movf	_fround$4111^(0+128),w
  4453  0961  1283               	bcf	3,5	;RP0=0, select bank0
  4454  0962  00C8               	movwf	?___ftmul+3
  4455  0963  1683               	bsf	3,5	;RP0=1, select bank1
  4456  0964  0821               	movf	(_fround$4111+1)^(0+128),w
  4457  0965  1283               	bcf	3,5	;RP0=0, select bank0
  4458  0966  00C9               	movwf	?___ftmul+4
  4459  0967  1683               	bsf	3,5	;RP0=1, select bank1
  4460  0968  0822               	movf	(_fround$4111+2)^(0+128),w
  4461  0969  1283               	bcf	3,5	;RP0=0, select bank0
  4462  096A  00CA               	movwf	?___ftmul+5
  4463  096B  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4464  0970  2A41               	ljmp	PL19	;call to abstracted procedure
  4465  0971                     l7199:	
  4466  0971  300B               	movlw	11
  4467  0972  0226               	subwf	fround@prec^(0+128),w
  4468  0973  1C03               	skipc
  4469  0974  29C6               	goto	l7207
  4470  0975  3003               	movlw	3
  4471  0976  2248  120A  158A   	fcall	PL28	;call to abstracted procedure
  4472  0979  220A               	fcall	___lbmod
  4473  097A  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4474  097F  3E01               	addlw	low (__npowers_-__stringbase)
  4475  0980  0084               	movwf	4
  4476  0981  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4477  0986  00C5               	movwf	?___ftmul
  4478  0987  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4479  098C  00C6               	movwf	?___ftmul+1
  4480  098D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4481  0992  00C7               	movwf	?___ftmul+2
  4482  0993  3003               	movlw	3
  4483  0994  00B1               	movwf	?___bmul
  4484  0995  300A               	movlw	10
  4485  0996  00AD               	movwf	?___lbdiv
  4486  0997  1683               	bsf	3,5	;RP0=1, select bank1
  4487  0998  0826               	movf	fround@prec^(0+128),w
  4488  0999  21EE               	fcall	___lbdiv
  4489  099A  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4490  099F  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4491  09A0  0084               	movwf	4
  4492  09A1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4493  09A6  00C8               	movwf	?___ftmul+3
  4494  09A7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4495  09AC  00C9               	movwf	?___ftmul+4
  4496  09AD  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4497  09B2  00CA               	movwf	?___ftmul+5
  4498  09B3  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4499  09B8  2235  120A  158A   	fcall	PL16	;call to abstracted procedure
  4500  09BB  1283               	bcf	3,5	;RP0=0, select bank0
  4501  09BC  303F               	movlw	63
  4502  09BD  01C5               	clrf	?___ftmul
  4503  09BE  01C6               	clrf	?___ftmul+1
  4504  09BF  2227               	fcall	PL9	;call to abstracted procedure
  4505  09C0  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4506  09C5  2A41               	ljmp	PL19	;call to abstracted procedure
  4507  09C6                     l7207:	
  4508  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  4509  09C7  303F               	movlw	63
  4510  09C8  01C5               	clrf	?___ftmul
  4511  09C9  01C6               	clrf	?___ftmul+1
  4512  09CA  00C7               	movwf	?___ftmul+2
  4513  09CB  3003               	movlw	3
  4514  09CC  00B1               	movwf	?___bmul
  4515  09CD  1683               	bsf	3,5	;RP0=1, select bank1
  4516  09CE  0826               	movf	fround@prec^(0+128),w
  4517  09CF  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4518  09D4  3E01               	addlw	low (__npowers_-__stringbase)
  4519  09D5  0084               	movwf	4
  4520  09D6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4521  09DB  00C8               	movwf	?___ftmul+3
  4522  09DC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4523  09E1  00C9               	movwf	?___ftmul+4
  4524  09E2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4525  09E7  00CA               	movwf	?___ftmul+5
  4526  09E8  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4527  09ED  2A41               	ljmp	PL19	;call to abstracted procedure
  4528  09EE                     __end_of_fround:	
  4529  09EE                     __ptext792:	
  4530 ;; =============== function ___lbmod ends ============
  4531                           
  4532                           
  4533 ;; *************** function ___lbdiv *****************
  4534 ;; Defined at:
  4535 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  dividend        1    wreg     unsigned char 
  4538 ;;  divisor         1   13[BANK0 ] unsigned char 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  dividend        1   14[BANK0 ] unsigned char 
  4541 ;;  quotient        1   16[BANK0 ] unsigned char 
  4542 ;;  counter         1   15[BANK0 ] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      unsigned char 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 40/0
  4549 ;;		On exit  : 60/0
  4550 ;;		Unchanged: FFF9F/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       1       0       0       0
  4553 ;;      Locals:         0       3       0       0       0
  4554 ;;      Temps:          0       0       0       0       0
  4555 ;;      Totals:         0       4       0       0       0
  4556 ;;Total ram usage:        4 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    3
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_fround
  4563 ;; This function uses a non-reentrant model
  4564 ;;
  4565  09EE                     ___lbdiv:	
  4566                           
  4567                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4568                           ;___lbdiv@dividend stored from wreg
  4569  09EE  1283               	bcf	3,5	;RP0=0, select bank0
  4570  09EF  00AE               	movwf	___lbdiv@dividend
  4571  09F0  01B0               	clrf	___lbdiv@quotient
  4572  09F1  082D               	movf	___lbdiv@divisor,w
  4573  09F2  1903               	btfsc	3,2
  4574  09F3  2A08               	goto	l6537
  4575  09F4  01AF               	clrf	___lbdiv@counter
  4576  09F5                     l6523:	
  4577  09F5  0AAF               	incf	___lbdiv@counter,f
  4578  09F6  1BAD               	btfsc	___lbdiv@divisor,7
  4579  09F7  29FB               	goto	l3329
  4580  09F8  1003               	clrc
  4581  09F9  0DAD               	rlf	___lbdiv@divisor,f
  4582  09FA  29F5               	goto	l6523
  4583  09FB                     l3329:	
  4584  09FB  1003               	clrc
  4585  09FC  0DB0               	rlf	___lbdiv@quotient,f
  4586  09FD  082D               	movf	___lbdiv@divisor,w
  4587  09FE  022E               	subwf	___lbdiv@dividend,w
  4588  09FF  1C03               	skipc
  4589  0A00  2A05               	goto	L19
  4590  0A01  082D               	movf	___lbdiv@divisor,w
  4591  0A02  02AE               	subwf	___lbdiv@dividend,f
  4592  0A03  1430               	bsf	___lbdiv@quotient,0
  4593  0A04  1003               	clrc
  4594  0A05                     L19:	
  4595  0A05  0CAD               	rrf	___lbdiv@divisor,f
  4596  0A06  0BAF               	decfsz	___lbdiv@counter,f
  4597  0A07  29FB               	goto	l3329
  4598  0A08                     l6537:	
  4599  0A08  0830               	movf	___lbdiv@quotient,w
  4600  0A09  0008               	return
  4601  0A0A                     __end_of___lbdiv:	
  4602  0A0A                     __ptext791:	
  4603 ;; =============== function ___ftpack ends ============
  4604                           
  4605                           
  4606 ;; *************** function ___lbmod *****************
  4607 ;; Defined at:
  4608 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  dividend        1    wreg     unsigned char 
  4611 ;;  divisor         1    8[BANK0 ] unsigned char 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  dividend        1   10[BANK0 ] unsigned char 
  4614 ;;  rem             1   12[BANK0 ] unsigned char 
  4615 ;;  counter         1   11[BANK0 ] unsigned char 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      unsigned char 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0
  4620 ;; Tracked objects:
  4621 ;;		On entry : 60/20
  4622 ;;		On exit  : 60/0
  4623 ;;		Unchanged: FFF9F/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4625 ;;      Params:         0       1       0       0       0
  4626 ;;      Locals:         0       3       0       0       0
  4627 ;;      Temps:          0       1       0       0       0
  4628 ;;      Totals:         0       5       0       0       0
  4629 ;;Total ram usage:        5 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    3
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_fround
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638  0A0A                     ___lbmod:	
  4639                           
  4640                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4641                           ;___lbmod@dividend stored from wreg
  4642  0A0A  1283               	bcf	3,5	;RP0=0, select bank0
  4643  0A0B  00AA               	movwf	___lbmod@dividend
  4644  0A0C  3008               	movlw	8
  4645  0A0D  00AB               	movwf	___lbmod@counter
  4646  0A0E  01AC               	clrf	___lbmod@rem
  4647  0A0F                     l6545:	
  4648  0A0F  082A               	movf	___lbmod@dividend,w
  4649  0A10  00A9               	movwf	??___lbmod
  4650  0A11  3007               	movlw	7
  4651  0A12  1003               	clrc
  4652  0A13                     L18:	
  4653  0A13  0CA9               	rrf	??___lbmod,f
  4654  0A14  3EFF               	addlw	-1
  4655  0A15  1003               	clrc
  4656  0A16  1D03               	skipz
  4657  0A17  2A13               	goto	L18
  4658  0A18  0D2C               	rlf	___lbmod@rem,w
  4659  0A19  0429               	iorwf	??___lbmod,w
  4660  0A1A  00AC               	movwf	___lbmod@rem
  4661  0A1B  1003               	clrc
  4662  0A1C  0DAA               	rlf	___lbmod@dividend,f
  4663  0A1D  0828               	movf	___lbmod@divisor,w
  4664  0A1E  022C               	subwf	___lbmod@rem,w
  4665  0A1F  1C03               	skipc
  4666  0A20  2A23               	goto	l6553
  4667  0A21  0828               	movf	___lbmod@divisor,w
  4668  0A22  02AC               	subwf	___lbmod@rem,f
  4669  0A23                     l6553:	
  4670  0A23  0BAB               	decfsz	___lbmod@counter,f
  4671  0A24  2A0F               	goto	l6545
  4672  0A25  082C               	movf	___lbmod@rem,w
  4673  0A26  0008               	return
  4674  0A27                     __end_of___lbmod:	
  4675  0A27                     PL9:	
  4676  0A27  00C7               	movwf	?___ftmul+2
  4677  0A28  1683               	bsf	3,5	;RP0=1, select bank1
  4678  0A29  0823               	movf	_fround$4110^(0+128),w
  4679  0A2A  1283               	bcf	3,5	;RP0=0, select bank0
  4680  0A2B  00C8               	movwf	?___ftmul+3
  4681  0A2C  1683               	bsf	3,5	;RP0=1, select bank1
  4682  0A2D  0824               	movf	(_fround$4110+1)^(0+128),w
  4683  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  4684  0A2F  00C9               	movwf	?___ftmul+4
  4685  0A30  1683               	bsf	3,5	;RP0=1, select bank1
  4686  0A31  0825               	movf	(_fround$4110+2)^(0+128),w
  4687  0A32  1283               	bcf	3,5	;RP0=0, select bank0
  4688  0A33  00CA               	movwf	?___ftmul+5
  4689  0A34  0008               	return
  4690  0A35                     PL16:	
  4691  0A35  0845               	movf	?___ftmul,w
  4692  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  4693  0A37  00A3               	movwf	_fround$4110^(0+128)
  4694  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0A39  0846               	movf	?___ftmul+1,w
  4696  0A3A  1683               	bsf	3,5	;RP0=1, select bank1
  4697  0A3B  00A4               	movwf	(_fround$4110+1)^(0+128)
  4698  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
  4699  0A3D  0847               	movf	?___ftmul+2,w
  4700  0A3E  1683               	bsf	3,5	;RP0=1, select bank1
  4701  0A3F  00A5               	movwf	(_fround$4110+2)^(0+128)
  4702  0A40  0008               	return
  4703  0A41                     PL19:	
  4704  0A41  0845               	movf	?___ftmul,w
  4705  0A42  00E0               	movwf	?_fround
  4706  0A43  0846               	movf	?___ftmul+1,w
  4707  0A44  00E1               	movwf	?_fround+1
  4708  0A45  0847               	movf	?___ftmul+2,w
  4709  0A46  00E2               	movwf	?_fround+2
  4710  0A47  0008               	return
  4711  0A48                     PL28:	
  4712  0A48  1283               	bcf	3,5	;RP0=0, select bank0
  4713  0A49  00B1               	movwf	?___bmul
  4714  0A4A  300A               	movlw	10
  4715  0A4B  00A8               	movwf	?___lbmod
  4716  0A4C  1683               	bsf	3,5	;RP0=1, select bank1
  4717  0A4D  0826               	movf	fround@prec^(0+128),w
  4718  0A4E  0008               	return
  4719                           
  4720                           	psect	text774
  4721  0A4F                     __ptext774:	
  4722 ;; =============== function _fround ends ============
  4723                           
  4724                           
  4725 ;; *************** function _lcd_gotoxy *****************
  4726 ;; Defined at:
  4727 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  col             1    wreg     unsigned char 
  4730 ;;  row             1   13[BANK0 ] unsigned char 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  col             1   14[BANK0 ] unsigned char 
  4733 ;;  address         1   15[BANK0 ] unsigned char 
  4734 ;; Return value:  Size  Location     Type
  4735 ;;		None               void
  4736 ;; Registers used:
  4737 ;;		wreg, status,2, status,0, pclath, cstack
  4738 ;; Tracked objects:
  4739 ;;		On entry : 60/0
  4740 ;;		On exit  : 60/0
  4741 ;;		Unchanged: 0/0
  4742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4743 ;;      Params:         0       1       0       0       0
  4744 ;;      Locals:         0       2       0       0       0
  4745 ;;      Temps:          0       0       0       0       0
  4746 ;;      Totals:         0       3       0       0       0
  4747 ;;Total ram usage:        3 bytes
  4748 ;; Hardware stack levels used:    1
  4749 ;; Hardware stack levels required when called:    4
  4750 ;; This function calls:
  4751 ;;		_lcd_put_byte
  4752 ;;		_lcd_busy
  4753 ;; This function is called by:
  4754 ;;		_main
  4755 ;;		_lcd_putc
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758  0A4F                     _lcd_gotoxy:	
  4759                           
  4760                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4761                           ;lcd_gotoxy@col stored from wreg
  4762  0A4F  00AE               	movwf	lcd_gotoxy@col
  4763                           
  4764                           ;lcd(16).c: 163: unsigned char address;
  4765                           ;lcd(16).c: 165: if(row!=0)
  4766  0A50  082D               	movf	lcd_gotoxy@row,w
  4767  0A51  1903               	btfsc	3,2
  4768  0A52  2A56               	goto	l7181
  4769                           
  4770                           ;lcd(16).c: 166: address=0x40;
  4771  0A53  3040               	movlw	64
  4772  0A54  00AF               	movwf	lcd_gotoxy@address
  4773  0A55  2A57               	goto	l7183
  4774  0A56                     l7181:	
  4775                           
  4776                           ;lcd(16).c: 167: else
  4777                           ;lcd(16).c: 168: address=0;
  4778  0A56  01AF               	clrf	lcd_gotoxy@address
  4779  0A57                     l7183:	
  4780                           
  4781                           ;lcd(16).c: 170: address += col;
  4782  0A57  082E               	movf	lcd_gotoxy@col,w
  4783  0A58  07AF               	addwf	lcd_gotoxy@address,f
  4784                           
  4785                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4786  0A59  082F               	movf	lcd_gotoxy@address,w
  4787  0A5A  3880               	iorlw	128
  4788  0A5B  00A8               	movwf	?_lcd_put_byte
  4789  0A5C  3000               	movlw	0
  4790  0A5D  2357  120A  158A   	fcall	_lcd_put_byte
  4791  0A60                     l7187:	
  4792                           ;lcd(16).c: 172: while(lcd_busy());
  4793                           
  4794  0A60  2402  120A  158A   	fcall	_lcd_busy
  4795  0A63  3800               	iorlw	0
  4796  0A64  1903               	btfsc	3,2
  4797  0A65  0008               	return
  4798  0A66  2A60               	goto	l7187
  4799  0A67                     __end_of_lcd_gotoxy:	
  4800  0A67                     __ptext770:	
  4801 ;; =============== function _putch ends ============
  4802                           
  4803                           
  4804 ;; *************** function _lcd_putc *****************
  4805 ;; Defined at:
  4806 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  c               1    wreg     unsigned char 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  c               1   16[BANK0 ] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;		None               void
  4813 ;; Registers used:
  4814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 60/0
  4817 ;;		On exit  : 60/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         0       0       0       0       0
  4821 ;;      Locals:         0       1       0       0       0
  4822 ;;      Temps:          0       0       0       0       0
  4823 ;;      Totals:         0       1       0       0       0
  4824 ;;Total ram usage:        1 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:    5
  4827 ;; This function calls:
  4828 ;;		_lcd_put_byte
  4829 ;;		_lcd_busy
  4830 ;;		_lcd_gotoxy
  4831 ;;		_isprint
  4832 ;; This function is called by:
  4833 ;;		_putch
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836  0A67                     _lcd_putc:	
  4837                           
  4838                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4839                           ;lcd_putc@c stored from wreg
  4840  0A67  00B0               	movwf	lcd_putc@c
  4841                           
  4842                           ;lcd(16).c: 144: switch(c){
  4843  0A68  2A8D               	goto	l7273
  4844  0A69                     l7259:	
  4845  0A69  3000               	movlw	0
  4846                           
  4847                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4848  0A6A  01A8               	clrf	?_lcd_put_byte
  4849  0A6B  0AA8               	incf	?_lcd_put_byte,f
  4850  0A6C  2357  120A  158A   	fcall	_lcd_put_byte
  4851  0A6F                     l7261:	
  4852                           ;lcd(16).c: 147: while(lcd_busy());
  4853                           
  4854  0A6F  2402  120A  158A   	fcall	_lcd_busy
  4855  0A72  3800               	iorlw	0
  4856  0A73  1903               	btfsc	3,2
  4857  0A74  0008               	return
  4858  0A75  2A6F               	goto	l7261
  4859  0A76                     l7263:	
  4860  0A76  3000               	movlw	0
  4861                           
  4862                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4863  0A77  01AD               	clrf	?_lcd_gotoxy
  4864  0A78  0AAD               	incf	?_lcd_gotoxy,f
  4865  0A79  2A4F               	ljmp	_lcd_gotoxy
  4866  0A7A                     l7265:	
  4867                           ;lcd(16).c: 151: break;
  4868                           
  4869                           
  4870                           ;lcd(16).c: 153: if(isprint(c)){
  4871  0A7A  0830               	movf	lcd_putc@c,w
  4872  0A7B  242D  120A  158A   	fcall	_isprint
  4873  0A7E  1C03               	btfss	3,0
  4874  0A7F  0008               	return
  4875                           
  4876                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4877  0A80  0830               	movf	lcd_putc@c,w
  4878  0A81  00A8               	movwf	?_lcd_put_byte
  4879  0A82  3001               	movlw	1
  4880  0A83  2357  120A  158A   	fcall	_lcd_put_byte
  4881  0A86                     l7269:	
  4882                           ;lcd(16).c: 155: while(lcd_busy());
  4883                           
  4884  0A86  2402  120A  158A   	fcall	_lcd_busy
  4885  0A89  3800               	iorlw	0
  4886  0A8A  1903               	btfsc	3,2
  4887  0A8B  0008               	return
  4888  0A8C  2A86               	goto	l7269
  4889  0A8D                     l7273:	
  4890  0A8D  0830               	movf	lcd_putc@c,w
  4891                           
  4892                           ; Switch size 1, requested type "space"
  4893                           ; Number of cases is 2, Range of values is 10 to 12
  4894                           ; switch strategies available:
  4895                           ; Name         Instructions Cycles
  4896                           ; simple_byte            7     4 (average)
  4897                           ; direct_byte           20    11 (fixed)
  4898                           ; jumptable            263     9 (fixed)
  4899                           ;	Chosen strategy is simple_byte
  4900  0A8E  3A0A               	xorlw	10	; case 10
  4901  0A8F  1903               	skipnz
  4902  0A90  2A76               	goto	l7263
  4903  0A91  3A06               	xorlw	6	; case 12
  4904  0A92  1903               	skipnz
  4905  0A93  2A69               	goto	l7259
  4906  0A94  2A7A               	goto	l7265
  4907  0A95  0008               	return
  4908  0A96                     __end_of_lcd_putc:	
  4909  0A96                     __ptext775:	
  4910 ;; =============== function _lcd_gotoxy ends ============
  4911                           
  4912                           
  4913 ;; *************** function _lcd_init *****************
  4914 ;; Defined at:
  4915 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;		None
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  i               1    0        unsigned char 
  4920 ;; Return value:  Size  Location     Type
  4921 ;;		None               void
  4922 ;; Registers used:
  4923 ;;		wreg, status,2, status,0, pclath, cstack
  4924 ;; Tracked objects:
  4925 ;;		On entry : 17F/60
  4926 ;;		On exit  : 60/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4929 ;;      Params:         0       0       0       0       0
  4930 ;;      Locals:         0       0       0       0       0
  4931 ;;      Temps:          0       3       0       0       0
  4932 ;;      Totals:         0       3       0       0       0
  4933 ;;Total ram usage:        3 bytes
  4934 ;; Hardware stack levels used:    1
  4935 ;; Hardware stack levels required when called:    4
  4936 ;; This function calls:
  4937 ;;		_lcd_put_byte
  4938 ;;		_lcd_busy
  4939 ;; This function is called by:
  4940 ;;		_main
  4941 ;; This function uses a non-reentrant model
  4942 ;;
  4943  0A96                     _lcd_init:	
  4944                           
  4945                           ;lcd(16).c: 6: unsigned char i;
  4946                           ;lcd(16).c: 7: TRISD3 = 0;
  4947                           
  4948                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4949  0A96  1303               	bcf	3,6	;RP1=0, select bank1
  4950  0A97  1188               	bcf	8,3
  4951                           
  4952                           ;lcd(16).c: 8: TRISD1 = 0;
  4953  0A98  1088               	bcf	8,1
  4954                           
  4955                           ;lcd(16).c: 9: TRISD2 = 0;
  4956  0A99  1108               	bcf	8,2
  4957                           
  4958                           ;lcd(16).c: 10: TRISD4 = 0;
  4959  0A9A  1208               	bcf	8,4
  4960                           
  4961                           ;lcd(16).c: 11: TRISD5 = 0;
  4962  0A9B  1288               	bcf	8,5
  4963                           
  4964                           ;lcd(16).c: 12: TRISD6 = 0;
  4965  0A9C  1308               	bcf	8,6
  4966                           
  4967                           ;lcd(16).c: 13: TRISD7 = 0;
  4968  0A9D  1388               	bcf	8,7
  4969                           
  4970                           ;lcd(16).c: 14: RD3 = 0;
  4971  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0A9F  3003               	movlw	3
  4973  0AA0  1188               	bcf	8,3
  4974                           
  4975                           ;lcd(16).c: 15: RD1 = 0;
  4976  0AA1  1088               	bcf	8,1
  4977                           
  4978                           ;lcd(16).c: 16: RD2 = 0;
  4979  0AA2  1108               	bcf	8,2
  4980                           
  4981                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4982  0AA3  00AF               	movwf	??_lcd_init+2
  4983  0AA4  308A               	movlw	138
  4984  0AA5  00AE               	movwf	??_lcd_init+1
  4985  0AA6  3056               	movlw	86
  4986  0AA7  00AD               	movwf	??_lcd_init
  4987  0AA8                     u5357:	
  4988  0AA8  0BAD               	decfsz	??_lcd_init,f
  4989  0AA9  2AA8               	goto	u5357
  4990  0AAA  0BAE               	decfsz	??_lcd_init+1,f
  4991  0AAB  2AA8               	goto	u5357
  4992  0AAC  0BAF               	decfsz	??_lcd_init+2,f
  4993  0AAD  2AA8               	goto	u5357
  4994  0AAE  2AAF               	nop2
  4995                           
  4996                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4997  0AAF  243B  120A  158A   	fcall	PL29	;call to abstracted procedure
  4998  0AB2  2357  120A  158A   	fcall	_lcd_put_byte
  4999                           
  5000                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  5001  0AB5  3002               	movlw	2
  5002  0AB6  00AF               	movwf	??_lcd_init+2
  5003  0AB7  3045               	movlw	69
  5004  0AB8  00AE               	movwf	??_lcd_init+1
  5005  0AB9  30A9               	movlw	169
  5006  0ABA  00AD               	movwf	??_lcd_init
  5007  0ABB                     u5367:	
  5008  0ABB  0BAD               	decfsz	??_lcd_init,f
  5009  0ABC  2ABB               	goto	u5367
  5010  0ABD  0BAE               	decfsz	??_lcd_init+1,f
  5011  0ABE  2ABB               	goto	u5367
  5012  0ABF  0BAF               	decfsz	??_lcd_init+2,f
  5013  0AC0  2ABB               	goto	u5367
  5014  0AC1  2AC2               	nop2
  5015                           
  5016                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  5017  0AC2  243B  120A  158A   	fcall	PL29	;call to abstracted procedure
  5018  0AC5  2357  120A  158A   	fcall	_lcd_put_byte
  5019                           
  5020                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  5021  0AC8  3002               	movlw	2
  5022  0AC9  00AF               	movwf	??_lcd_init+2
  5023  0ACA  3045               	movlw	69
  5024  0ACB  00AE               	movwf	??_lcd_init+1
  5025  0ACC  30A9               	movlw	169
  5026  0ACD  00AD               	movwf	??_lcd_init
  5027  0ACE                     u5377:	
  5028  0ACE  0BAD               	decfsz	??_lcd_init,f
  5029  0ACF  2ACE               	goto	u5377
  5030  0AD0  0BAE               	decfsz	??_lcd_init+1,f
  5031  0AD1  2ACE               	goto	u5377
  5032  0AD2  0BAF               	decfsz	??_lcd_init+2,f
  5033  0AD3  2ACE               	goto	u5377
  5034  0AD4  2AD5               	nop2
  5035                           
  5036                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  5037  0AD5  3032               	movlw	50
  5038  0AD6  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0AD7  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0AD8  00A8               	movwf	?_lcd_put_byte
  5041  0AD9  3000               	movlw	0
  5042  0ADA  2357  120A  158A   	fcall	_lcd_put_byte
  5043                           
  5044                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  5045  0ADD  3003               	movlw	3
  5046  0ADE  00AF               	movwf	??_lcd_init+2
  5047  0ADF  308A               	movlw	138
  5048  0AE0  00AE               	movwf	??_lcd_init+1
  5049  0AE1  3056               	movlw	86
  5050  0AE2  00AD               	movwf	??_lcd_init
  5051  0AE3                     u5387:	
  5052  0AE3  0BAD               	decfsz	??_lcd_init,f
  5053  0AE4  2AE3               	goto	u5387
  5054  0AE5  0BAE               	decfsz	??_lcd_init+1,f
  5055  0AE6  2AE3               	goto	u5387
  5056  0AE7  0BAF               	decfsz	??_lcd_init+2,f
  5057  0AE8  2AE3               	goto	u5387
  5058  0AE9  2AEA               	nop2
  5059                           
  5060                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  5061  0AEA  3003               	movlw	3
  5062  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0AED  00AF               	movwf	??_lcd_init+2
  5065  0AEE  308A               	movlw	138
  5066  0AEF  00AE               	movwf	??_lcd_init+1
  5067  0AF0  3056               	movlw	86
  5068  0AF1  00AD               	movwf	??_lcd_init
  5069  0AF2                     u5397:	
  5070  0AF2  0BAD               	decfsz	??_lcd_init,f
  5071  0AF3  2AF2               	goto	u5397
  5072  0AF4  0BAE               	decfsz	??_lcd_init+1,f
  5073  0AF5  2AF2               	goto	u5397
  5074  0AF6  0BAF               	decfsz	??_lcd_init+2,f
  5075  0AF7  2AF2               	goto	u5397
  5076  0AF8  2AF9               	nop2
  5077                           
  5078                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5079  0AF9  3003               	movlw	3
  5080  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  5081  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  5082  0AFC  00AF               	movwf	??_lcd_init+2
  5083  0AFD  308A               	movlw	138
  5084  0AFE  00AE               	movwf	??_lcd_init+1
  5085  0AFF  3056               	movlw	86
  5086  0B00  00AD               	movwf	??_lcd_init
  5087  0B01                     u5407:	
  5088  0B01  0BAD               	decfsz	??_lcd_init,f
  5089  0B02  2B01               	goto	u5407
  5090  0B03  0BAE               	decfsz	??_lcd_init+1,f
  5091  0B04  2B01               	goto	u5407
  5092  0B05  0BAF               	decfsz	??_lcd_init+2,f
  5093  0B06  2B01               	goto	u5407
  5094  0B07  2B08               	nop2
  5095  0B08                     l7151:	
  5096                           ;lcd(16).c: 30: while(lcd_busy());
  5097                           
  5098  0B08  2402  120A  158A   	fcall	_lcd_busy
  5099  0B0B  3800               	iorlw	0
  5100  0B0C  1D03               	skipz
  5101  0B0D  2B08               	goto	l7151
  5102                           
  5103                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5104  0B0E  3028               	movlw	40
  5105  0B0F  00A8               	movwf	?_lcd_put_byte
  5106  0B10  3000               	movlw	0
  5107  0B11  2357  120A  158A   	fcall	_lcd_put_byte
  5108  0B14                     l7155:	
  5109                           ;lcd(16).c: 32: while(lcd_busy());
  5110                           
  5111  0B14  2402  120A  158A   	fcall	_lcd_busy
  5112  0B17  3800               	iorlw	0
  5113  0B18  1D03               	skipz
  5114  0B19  2B14               	goto	l7155
  5115                           
  5116                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5117  0B1A  3008               	movlw	8
  5118  0B1B  00A8               	movwf	?_lcd_put_byte
  5119  0B1C  3000               	movlw	0
  5120  0B1D  2357  120A  158A   	fcall	_lcd_put_byte
  5121  0B20                     l7159:	
  5122                           ;lcd(16).c: 35: while(lcd_busy());
  5123                           
  5124  0B20  2402  120A  158A   	fcall	_lcd_busy
  5125  0B23  3800               	iorlw	0
  5126  0B24  1D03               	skipz
  5127  0B25  2B20               	goto	l7159
  5128                           
  5129                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5130  0B26  300C               	movlw	12
  5131  0B27  00A8               	movwf	?_lcd_put_byte
  5132  0B28  3000               	movlw	0
  5133  0B29  2357  120A  158A   	fcall	_lcd_put_byte
  5134  0B2C                     l7163:	
  5135                           ;lcd(16).c: 37: while(lcd_busy());
  5136                           
  5137  0B2C  2402  120A  158A   	fcall	_lcd_busy
  5138  0B2F  3800               	iorlw	0
  5139  0B30  1D03               	skipz
  5140  0B31  2B2C               	goto	l7163
  5141  0B32  3000               	movlw	0
  5142                           
  5143                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5144  0B33  01A8               	clrf	?_lcd_put_byte
  5145  0B34  0AA8               	incf	?_lcd_put_byte,f
  5146  0B35  2357  120A  158A   	fcall	_lcd_put_byte
  5147  0B38                     l7167:	
  5148                           ;lcd(16).c: 40: while(lcd_busy());
  5149                           
  5150  0B38  2402  120A  158A   	fcall	_lcd_busy
  5151  0B3B  3800               	iorlw	0
  5152  0B3C  1D03               	skipz
  5153  0B3D  2B38               	goto	l7167
  5154                           
  5155                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5156  0B3E  3004               	movlw	4
  5157  0B3F  00A8               	movwf	?_lcd_put_byte
  5158  0B40  3000               	movlw	0
  5159  0B41  2357  120A  158A   	fcall	_lcd_put_byte
  5160  0B44                     l7171:	
  5161                           ;lcd(16).c: 42: while(lcd_busy());
  5162                           
  5163  0B44  2402  120A  158A   	fcall	_lcd_busy
  5164  0B47  3800               	iorlw	0
  5165  0B48  1D03               	skipz
  5166  0B49  2B44               	goto	l7171
  5167  0B4A  3000               	movlw	0
  5168                           
  5169                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5170  0B4B  01A8               	clrf	?_lcd_put_byte
  5171  0B4C  0AA8               	incf	?_lcd_put_byte,f
  5172  0B4D  2357  120A  158A   	fcall	_lcd_put_byte
  5173  0B50                     l7175:	
  5174                           ;lcd(16).c: 44: while(lcd_busy());
  5175                           
  5176  0B50  2402  120A  158A   	fcall	_lcd_busy
  5177  0B53  3800               	iorlw	0
  5178  0B54  1903               	btfsc	3,2
  5179  0B55  0008               	return
  5180  0B56  2B50               	goto	l7175
  5181  0B57                     __end_of_lcd_init:	
  5182  0B57                     __ptext782:	
  5183 ;; =============== function _lcd_busy ends ============
  5184                           
  5185                           
  5186 ;; *************** function _lcd_put_byte *****************
  5187 ;; Defined at:
  5188 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  rs              1    wreg     unsigned char 
  5191 ;;  b               1    8[BANK0 ] unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  rs              1   11[BANK0 ] unsigned char 
  5194 ;;  temp            1   12[BANK0 ] struct _BYTE_VAL
  5195 ;; Return value:  Size  Location     Type
  5196 ;;		None               void
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 60/0
  5201 ;;		On exit  : 60/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5204 ;;      Params:         0       1       0       0       0
  5205 ;;      Locals:         0       2       0       0       0
  5206 ;;      Temps:          0       2       0       0       0
  5207 ;;      Totals:         0       5       0       0       0
  5208 ;;Total ram usage:        5 bytes
  5209 ;; Hardware stack levels used:    1
  5210 ;; Hardware stack levels required when called:    3
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_lcd_init
  5215 ;;		_lcd_putc
  5216 ;;		_lcd_gotoxy
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219  0B57                     _lcd_put_byte:	
  5220                           
  5221                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5222                           ;lcd_put_byte@rs stored from wreg
  5223  0B57  00AB               	movwf	lcd_put_byte@rs
  5224                           
  5225                           ;lcd(16).c: 107: BYTE_VAL temp;
  5226                           ;lcd(16).c: 109: TRISD4 = 0;
  5227  0B58  1683               	bsf	3,5	;RP0=1, select bank1
  5228  0B59  1208               	bcf	8,4
  5229                           
  5230                           ;lcd(16).c: 110: TRISD5 = 0;
  5231  0B5A  1288               	bcf	8,5
  5232                           
  5233                           ;lcd(16).c: 111: TRISD6 = 0;
  5234  0B5B  1308               	bcf	8,6
  5235                           
  5236                           ;lcd(16).c: 112: TRISD7 = 0;
  5237  0B5C  1388               	bcf	8,7
  5238                           
  5239                           ;lcd(16).c: 114: RD1 = 0;
  5240  0B5D  1283               	bcf	3,5	;RP0=0, select bank0
  5241  0B5E  1088               	bcf	8,1
  5242                           
  5243                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5244  0B5F  082B               	movf	lcd_put_byte@rs,w
  5245  0B60  1D03               	skipz
  5246  0B61  1488               	bsf	8,1
  5247                           
  5248                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5249  0B62  3021               	movlw	33
  5250  0B63  00A9               	movwf	??_lcd_put_byte
  5251  0B64                     u5457:	
  5252  0B64  0BA9               	decfsz	??_lcd_put_byte,f
  5253  0B65  2B64               	goto	u5457
  5254                           
  5255                           ;lcd(16).c: 118: RD2 = 0;
  5256  0B66  1283               	bcf	3,5	;RP0=0, select bank0
  5257  0B67  1303               	bcf	3,6	;RP1=0, select bank0
  5258  0B68  3021               	movlw	33
  5259  0B69  1108               	bcf	8,2
  5260                           
  5261                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5262  0B6A  00A9               	movwf	??_lcd_put_byte
  5263  0B6B                     u5467:	
  5264  0B6B  0BA9               	decfsz	??_lcd_put_byte,f
  5265  0B6C  2B6B               	goto	u5467
  5266                           
  5267                           ;lcd(16).c: 120: RD3 = 0;
  5268  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  5269  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  5270  0B6F  1188               	bcf	8,3
  5271                           
  5272                           ;lcd(16).c: 122: temp.Val = b;
  5273  0B70  0828               	movf	lcd_put_byte@b,w
  5274  0B71  00AC               	movwf	lcd_put_byte@temp
  5275                           
  5276                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5277  0B72  0E2C               	swapf	lcd_put_byte@temp,w
  5278  0B73  3901               	andlw	1
  5279  0B74  00A9               	movwf	??_lcd_put_byte
  5280  0B75  0C29               	rrf	??_lcd_put_byte,w
  5281  0B76  1C03               	btfss	3,0
  5282  0B77  2B7C               	goto	u3590
  5283  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  5284  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  5285  0B7A  1608               	bsf	8,4
  5286  0B7B  2B7F               	goto	l6899
  5287  0B7C                     u3590:	
  5288  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  5289  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  5290  0B7E  1208               	bcf	8,4
  5291  0B7F                     l6899:	
  5292                           
  5293                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5294  0B7F  0E2C               	swapf	lcd_put_byte@temp,w
  5295  0B80  00A9               	movwf	??_lcd_put_byte
  5296  0B81  0C29               	rrf	??_lcd_put_byte,w
  5297  0B82  3901               	andlw	1
  5298  0B83  00AA               	movwf	??_lcd_put_byte+1
  5299  0B84  0C2A               	rrf	??_lcd_put_byte+1,w
  5300  0B85  1C03               	btfss	3,0
  5301  0B86  2B8B               	goto	u3610
  5302  0B87  1283               	bcf	3,5	;RP0=0, select bank0
  5303  0B88  1303               	bcf	3,6	;RP1=0, select bank0
  5304  0B89  1688               	bsf	8,5
  5305  0B8A  2B8E               	goto	l6901
  5306  0B8B                     u3610:	
  5307  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  5308  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  5309  0B8D  1288               	bcf	8,5
  5310  0B8E                     l6901:	
  5311                           
  5312                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5313  0B8E  0E2C               	swapf	lcd_put_byte@temp,w
  5314  0B8F  00A9               	movwf	??_lcd_put_byte
  5315  0B90  0CA9               	rrf	??_lcd_put_byte,f
  5316  0B91  0C29               	rrf	??_lcd_put_byte,w
  5317  0B92  3901               	andlw	1
  5318  0B93  00AA               	movwf	??_lcd_put_byte+1
  5319  0B94  0C2A               	rrf	??_lcd_put_byte+1,w
  5320  0B95  1C03               	btfss	3,0
  5321  0B96  2B9B               	goto	u3630
  5322  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  5323  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  5324  0B99  1708               	bsf	8,6
  5325  0B9A  2B9E               	goto	l6903
  5326  0B9B                     u3630:	
  5327  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  5328  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  5329  0B9D  1308               	bcf	8,6
  5330  0B9E                     l6903:	
  5331                           
  5332                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5333  0B9E  0D2C               	rlf	lcd_put_byte@temp,w
  5334  0B9F  0D2C               	rlf	lcd_put_byte@temp,w
  5335  0BA0  3901               	andlw	1
  5336  0BA1  00A9               	movwf	??_lcd_put_byte
  5337  0BA2  0C29               	rrf	??_lcd_put_byte,w
  5338  0BA3  1C03               	btfss	3,0
  5339  0BA4  2BA9               	goto	u3650
  5340  0BA5  1283               	bcf	3,5	;RP0=0, select bank0
  5341  0BA6  1303               	bcf	3,6	;RP1=0, select bank0
  5342  0BA7  1788               	bsf	8,7
  5343  0BA8  2BAC               	goto	u3664
  5344  0BA9                     u3650:	
  5345  0BA9  1283               	bcf	3,5	;RP0=0, select bank0
  5346  0BAA  1303               	bcf	3,6	;RP1=0, select bank0
  5347  0BAB  1388               	bcf	8,7
  5348  0BAC                     u3664:	
  5349                           
  5350                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5351  0BAC  3021               	movlw	33
  5352  0BAD  00A9               	movwf	??_lcd_put_byte
  5353  0BAE                     u5477:	
  5354  0BAE  0BA9               	decfsz	??_lcd_put_byte,f
  5355  0BAF  2BAE               	goto	u5477
  5356                           
  5357                           ;lcd(16).c: 130: RD3 = 1;
  5358  0BB0  1283               	bcf	3,5	;RP0=0, select bank0
  5359  0BB1  1303               	bcf	3,6	;RP1=0, select bank0
  5360  0BB2  3021               	movlw	33
  5361  0BB3  1588               	bsf	8,3
  5362                           
  5363                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5364  0BB4  00A9               	movwf	??_lcd_put_byte
  5365  0BB5                     u5487:	
  5366  0BB5  0BA9               	decfsz	??_lcd_put_byte,f
  5367  0BB6  2BB5               	goto	u5487
  5368                           
  5369                           ;lcd(16).c: 132: RD3 = 0;
  5370  0BB7  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0BB8  1303               	bcf	3,6	;RP1=0, select bank0
  5372  0BB9  1188               	bcf	8,3
  5373                           
  5374                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5375  0BBA  082C               	movf	lcd_put_byte@temp,w
  5376  0BBB  3901               	andlw	1
  5377  0BBC  00A9               	movwf	??_lcd_put_byte
  5378  0BBD  0C29               	rrf	??_lcd_put_byte,w
  5379  0BBE  1C03               	btfss	3,0
  5380  0BBF  2BC4               	goto	u3670
  5381  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  5382  0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  5383  0BC2  1608               	bsf	8,4
  5384  0BC3  2BC7               	goto	l6911
  5385  0BC4                     u3670:	
  5386  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  5387  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  5388  0BC6  1208               	bcf	8,4
  5389  0BC7                     l6911:	
  5390                           
  5391                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5392  0BC7  0C2C               	rrf	lcd_put_byte@temp,w
  5393  0BC8  3901               	andlw	1
  5394  0BC9  00A9               	movwf	??_lcd_put_byte
  5395  0BCA  0C29               	rrf	??_lcd_put_byte,w
  5396  0BCB  1C03               	btfss	3,0
  5397  0BCC  2BD1               	goto	u3690
  5398  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  5399  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  5400  0BCF  1688               	bsf	8,5
  5401  0BD0  2BD4               	goto	l6913
  5402  0BD1                     u3690:	
  5403  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0BD3  1288               	bcf	8,5
  5406  0BD4                     l6913:	
  5407                           
  5408                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5409  0BD4  0C2C               	rrf	lcd_put_byte@temp,w
  5410  0BD5  00A9               	movwf	??_lcd_put_byte
  5411  0BD6  0C29               	rrf	??_lcd_put_byte,w
  5412  0BD7  3901               	andlw	1
  5413  0BD8  00AA               	movwf	??_lcd_put_byte+1
  5414  0BD9  0C2A               	rrf	??_lcd_put_byte+1,w
  5415  0BDA  1C03               	btfss	3,0
  5416  0BDB  2BE0               	goto	u3710
  5417  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  5418  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  5419  0BDE  1708               	bsf	8,6
  5420  0BDF  2BE3               	goto	l6915
  5421  0BE0                     u3710:	
  5422  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  5423  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  5424  0BE2  1308               	bcf	8,6
  5425  0BE3                     l6915:	
  5426                           
  5427                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5428  0BE3  0C2C               	rrf	lcd_put_byte@temp,w
  5429  0BE4  00A9               	movwf	??_lcd_put_byte
  5430  0BE5  0CA9               	rrf	??_lcd_put_byte,f
  5431  0BE6  0C29               	rrf	??_lcd_put_byte,w
  5432  0BE7  3901               	andlw	1
  5433  0BE8  00AA               	movwf	??_lcd_put_byte+1
  5434  0BE9  0C2A               	rrf	??_lcd_put_byte+1,w
  5435  0BEA  1C03               	btfss	3,0
  5436  0BEB  2BF0               	goto	u3730
  5437  0BEC  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0BED  1303               	bcf	3,6	;RP1=0, select bank0
  5439  0BEE  1788               	bsf	8,7
  5440  0BEF  2BF3               	goto	u3744
  5441  0BF0                     u3730:	
  5442  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  5443  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  5444  0BF2  1388               	bcf	8,7
  5445  0BF3                     u3744:	
  5446                           
  5447                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5448  0BF3  3021               	movlw	33
  5449  0BF4  00A9               	movwf	??_lcd_put_byte
  5450  0BF5                     u5497:	
  5451  0BF5  0BA9               	decfsz	??_lcd_put_byte,f
  5452  0BF6  2BF5               	goto	u5497
  5453                           
  5454                           ;lcd(16).c: 139: RD3 = 1;
  5455  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0BF9  3021               	movlw	33
  5458  0BFA  1588               	bsf	8,3
  5459                           
  5460                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5461  0BFB  00A9               	movwf	??_lcd_put_byte
  5462  0BFC                     u5507:	
  5463  0BFC  0BA9               	decfsz	??_lcd_put_byte,f
  5464  0BFD  2BFC               	goto	u5507
  5465                           
  5466                           ;lcd(16).c: 141: RD3 = 0;
  5467  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  5468  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  5469  0C00  1188               	bcf	8,3
  5470  0C01  0008               	return
  5471  0C02                     __end_of_lcd_put_byte:	
  5472  0C02                     __ptext781:	
  5473 ;; =============== function ___ftadd ends ============
  5474                           
  5475                           
  5476 ;; *************** function _lcd_busy *****************
  5477 ;; Defined at:
  5478 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  busy            1    9[BANK0 ] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      unsigned char 
  5485 ;; Registers used:
  5486 ;;		wreg
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 60/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5492 ;;      Params:         0       0       0       0       0
  5493 ;;      Locals:         0       1       0       0       0
  5494 ;;      Temps:          0       1       0       0       0
  5495 ;;      Totals:         0       2       0       0       0
  5496 ;;Total ram usage:        2 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:    3
  5499 ;; This function calls:
  5500 ;;		Nothing
  5501 ;; This function is called by:
  5502 ;;		_lcd_init
  5503 ;;		_lcd_putc
  5504 ;;		_lcd_gotoxy
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507  0C02                     _lcd_busy:	
  5508                           
  5509                           ;lcd(16).c: 48: unsigned char busy;
  5510                           ;lcd(16).c: 50: TRISD4 = 1;
  5511                           
  5512                           ; Regs used in _lcd_busy: [wreg]
  5513  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  5514  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  5515  0C04  1608               	bsf	8,4
  5516                           
  5517                           ;lcd(16).c: 51: TRISD5 = 1;
  5518  0C05  1688               	bsf	8,5
  5519                           
  5520                           ;lcd(16).c: 52: TRISD6 = 1;
  5521  0C06  1708               	bsf	8,6
  5522                           
  5523                           ;lcd(16).c: 53: TRISD7 = 1;
  5524  0C07  1788               	bsf	8,7
  5525                           
  5526                           ;lcd(16).c: 55: RD2 = 1;
  5527  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  5528  0C09  3021               	movlw	33
  5529  0C0A  1508               	bsf	8,2
  5530                           
  5531                           ;lcd(16).c: 56: RD1 = 0;
  5532  0C0B  1088               	bcf	8,1
  5533                           
  5534                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5535  0C0C  00A8               	movwf	??_lcd_busy
  5536  0C0D                     u5417:	
  5537  0C0D  0BA8               	decfsz	??_lcd_busy,f
  5538  0C0E  2C0D               	goto	u5417
  5539                           
  5540                           ;lcd(16).c: 58: RD3 = 1;
  5541  0C0F  1283               	bcf	3,5	;RP0=0, select bank0
  5542  0C10  1303               	bcf	3,6	;RP1=0, select bank0
  5543  0C11  3021               	movlw	33
  5544  0C12  1588               	bsf	8,3
  5545                           
  5546                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5547  0C13  00A8               	movwf	??_lcd_busy
  5548  0C14                     u5427:	
  5549  0C14  0BA8               	decfsz	??_lcd_busy,f
  5550  0C15  2C14               	goto	u5427
  5551                           
  5552                           ;lcd(16).c: 61: busy = RD7;
  5553  0C16  3000               	movlw	0
  5554  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  5555  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  5556  0C19  1B88               	btfsc	8,7
  5557  0C1A  3001               	movlw	1
  5558  0C1B  00A9               	movwf	lcd_busy@busy
  5559  0C1C  3021               	movlw	33
  5560                           
  5561                           ;lcd(16).c: 63: RD3 = 0;
  5562  0C1D  1188               	bcf	8,3
  5563                           
  5564                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5565  0C1E  00A8               	movwf	??_lcd_busy
  5566  0C1F                     u5437:	
  5567  0C1F  0BA8               	decfsz	??_lcd_busy,f
  5568  0C20  2C1F               	goto	u5437
  5569                           
  5570                           ;lcd(16).c: 65: RD3 = 1;
  5571  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  5573  0C23  3021               	movlw	33
  5574  0C24  1588               	bsf	8,3
  5575                           
  5576                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5577  0C25  00A8               	movwf	??_lcd_busy
  5578  0C26                     u5447:	
  5579  0C26  0BA8               	decfsz	??_lcd_busy,f
  5580  0C27  2C26               	goto	u5447
  5581                           
  5582                           ;lcd(16).c: 67: RD3 = 0;
  5583  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  5584  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0C2A  1188               	bcf	8,3
  5586                           
  5587                           ;lcd(16).c: 70: return busy;
  5588  0C2B  0829               	movf	lcd_busy@busy,w
  5589  0C2C  0008               	return
  5590  0C2D                     __end_of_lcd_busy:	
  5591  0C2D                     __ptext798:	
  5592 ;; =============== function _isdigit ends ============
  5593                           
  5594                           
  5595 ;; *************** function _isprint *****************
  5596 ;; Defined at:
  5597 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  c               1    wreg     unsigned char 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  c               1    9[BANK0 ] unsigned char 
  5602 ;; Return value:  Size  Location     Type
  5603 ;;		None               void
  5604 ;; Registers used:
  5605 ;;		wreg, status,2, status,0
  5606 ;; Tracked objects:
  5607 ;;		On entry : 60/0
  5608 ;;		On exit  : 60/0
  5609 ;;		Unchanged: FFF9F/0
  5610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5611 ;;      Params:         0       0       0       0       0
  5612 ;;      Locals:         0       2       0       0       0
  5613 ;;      Temps:          0       0       0       0       0
  5614 ;;      Totals:         0       2       0       0       0
  5615 ;;Total ram usage:        2 bytes
  5616 ;; Hardware stack levels used:    1
  5617 ;; Hardware stack levels required when called:    3
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_lcd_putc
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624  0C2D                     _isprint:	
  5625                           
  5626                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5627                           ;isprint@c stored from wreg
  5628  0C2D  00A9               	movwf	isprint@c
  5629  0C2E  307F               	movlw	127
  5630  0C2F  01A8               	clrf	_isprint$3676
  5631  0C30  0229               	subwf	isprint@c,w
  5632  0C31  1803               	skipnc
  5633  0C32  2C39               	goto	l6375
  5634  0C33  3020               	movlw	32
  5635  0C34  0229               	subwf	isprint@c,w
  5636  0C35  1C03               	skipc
  5637  0C36  2C39               	goto	l6375
  5638  0C37  01A8               	clrf	_isprint$3676
  5639  0C38  0AA8               	incf	_isprint$3676,f
  5640  0C39                     l6375:	
  5641  0C39  0C28               	rrf	_isprint$3676,w
  5642  0C3A  0008               	return
  5643  0C3B                     __end_of_isprint:	
  5644  0C3B                     PL29:	
  5645  0C3B  3030               	movlw	48
  5646  0C3C  1283               	bcf	3,5	;RP0=0, select bank0
  5647  0C3D  1303               	bcf	3,6	;RP1=0, select bank0
  5648  0C3E  00A8               	movwf	?_lcd_put_byte
  5649  0C3F  3400               	retlw	0
  5650                           
  5651                           	psect	text777
  5652  0C40                     __ptext777:	
  5653 ;; =============== function ___lltoft ends ============
  5654                           
  5655                           
  5656 ;; *************** function ___altoft *****************
  5657 ;; Defined at:
  5658 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  c               4   16[BANK0 ] long 
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;  sign            1   21[BANK0 ] unsigned char 
  5663 ;;  exp             1   20[BANK0 ] unsigned char 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  3   16[BANK0 ] float 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0, pclath, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 60/0
  5670 ;;		On exit  : 60/0
  5671 ;;		Unchanged: FFF9F/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5673 ;;      Params:         0       4       0       0       0
  5674 ;;      Locals:         0       2       0       0       0
  5675 ;;      Temps:          0       0       0       0       0
  5676 ;;      Totals:         0       6       0       0       0
  5677 ;;Total ram usage:        6 bytes
  5678 ;; Hardware stack levels used:    1
  5679 ;; Hardware stack levels required when called:    4
  5680 ;; This function calls:
  5681 ;;		___ftpack
  5682 ;; This function is called by:
  5683 ;;		_main
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686  0C40                     ___altoft:	
  5687  0C40  308E               	movlw	142
  5688                           
  5689                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5690  0C41  01B5               	clrf	___altoft@sign
  5691  0C42  00B4               	movwf	___altoft@exp
  5692  0C43  1FB3               	btfss	___altoft@c+3,7
  5693  0C44  2C52               	goto	l7123
  5694  0C45  09B0               	comf	___altoft@c,f
  5695  0C46  09B1               	comf	___altoft@c+1,f
  5696  0C47  09B2               	comf	___altoft@c+2,f
  5697  0C48  09B3               	comf	___altoft@c+3,f
  5698  0C49  0AB0               	incf	___altoft@c,f
  5699  0C4A  1903               	skipnz
  5700  0C4B  0AB1               	incf	___altoft@c+1,f
  5701  0C4C  1903               	skipnz
  5702  0C4D  0AB2               	incf	___altoft@c+2,f
  5703  0C4E  1903               	skipnz
  5704  0C4F  0AB3               	incf	___altoft@c+3,f
  5705  0C50  01B5               	clrf	___altoft@sign
  5706  0C51  0AB5               	incf	___altoft@sign,f
  5707  0C52                     l7123:	
  5708  0C52  30FF               	movlw	255
  5709  0C53  0533               	andwf	___altoft@c+3,w
  5710  0C54  1903               	btfsc	3,2
  5711  0C55  2C5D               	goto	l7125
  5712  0C56  1003               	clrc
  5713  0C57  0CB3               	rrf	___altoft@c+3,f
  5714  0C58  0CB2               	rrf	___altoft@c+2,f
  5715  0C59  0CB1               	rrf	___altoft@c+1,f
  5716  0C5A  0CB0               	rrf	___altoft@c,f
  5717  0C5B  0AB4               	incf	___altoft@exp,f
  5718  0C5C  2C52               	goto	l7123
  5719  0C5D                     l7125:	
  5720  0C5D  0830               	movf	___altoft@c,w
  5721  0C5E  00A8               	movwf	?___ftpack
  5722  0C5F  0831               	movf	___altoft@c+1,w
  5723  0C60  00A9               	movwf	?___ftpack+1
  5724  0C61  0832               	movf	___altoft@c+2,w
  5725  0C62  00AA               	movwf	?___ftpack+2
  5726  0C63  0834               	movf	___altoft@exp,w
  5727  0C64  00AB               	movwf	?___ftpack+3
  5728  0C65  0835               	movf	___altoft@sign,w
  5729  0C66  00AC               	movwf	?___ftpack+4
  5730  0C67  2769               	fcall	___ftpack
  5731  0C68  0828               	movf	?___ftpack,w
  5732  0C69  00B0               	movwf	?___altoft
  5733  0C6A  0829               	movf	?___ftpack+1,w
  5734  0C6B  00B1               	movwf	?___altoft+1
  5735  0C6C  082A               	movf	?___ftpack+2,w
  5736  0C6D  00B2               	movwf	?___altoft+2
  5737  0C6E  0008               	return
  5738  0C6F                     __end_of___altoft:	
  5739  0C6F                     __ptext779:	
  5740 ;; =============== function ___ftmul ends ============
  5741                           
  5742                           
  5743 ;; *************** function ___ftdiv *****************
  5744 ;; Defined at:
  5745 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  f2              3   22[BANK0 ] float 
  5748 ;;  f1              3   25[BANK0 ] float 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;  f3              3   32[BANK0 ] float 
  5751 ;;  sign            1   36[BANK0 ] unsigned char 
  5752 ;;  exp             1   35[BANK0 ] unsigned char 
  5753 ;;  cntr            1   31[BANK0 ] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  3   22[BANK0 ] float 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, pclath, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 60/0
  5760 ;;		On exit  : 60/0
  5761 ;;		Unchanged: FFF9F/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5763 ;;      Params:         0       6       0       0       0
  5764 ;;      Locals:         0       6       0       0       0
  5765 ;;      Temps:          0       3       0       0       0
  5766 ;;      Totals:         0      15       0       0       0
  5767 ;;Total ram usage:       15 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    4
  5770 ;; This function calls:
  5771 ;;		___ftpack
  5772 ;; This function is called by:
  5773 ;;		_main
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776  0C6F                     ___ftdiv:	
  5777                           
  5778                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5779  0C6F  0839               	movf	___ftdiv@f1,w
  5780  0C70  00BC               	movwf	??___ftdiv
  5781  0C71  083A               	movf	___ftdiv@f1+1,w
  5782  0C72  00BD               	movwf	??___ftdiv+1
  5783  0C73  083B               	movf	___ftdiv@f1+2,w
  5784  0C74  00BE               	movwf	??___ftdiv+2
  5785  0C75  1003               	clrc
  5786  0C76  0D3D               	rlf	??___ftdiv+1,w
  5787  0C77  0D3E               	rlf	??___ftdiv+2,w
  5788  0C78  00C3               	movwf	___ftdiv@exp
  5789  0C79  08C3               	movf	___ftdiv@exp,f
  5790  0C7A  1D03               	skipz
  5791  0C7B  2C80               	goto	l7019
  5792  0C7C  01B6               	clrf	?___ftdiv
  5793  0C7D  01B7               	clrf	?___ftdiv+1
  5794  0C7E  01B8               	clrf	?___ftdiv+2
  5795  0C7F  0008               	return
  5796  0C80                     l7019:	
  5797  0C80  0836               	movf	___ftdiv@f2,w
  5798  0C81  00BC               	movwf	??___ftdiv
  5799  0C82  0837               	movf	___ftdiv@f2+1,w
  5800  0C83  00BD               	movwf	??___ftdiv+1
  5801  0C84  0838               	movf	___ftdiv@f2+2,w
  5802  0C85  00BE               	movwf	??___ftdiv+2
  5803  0C86  1003               	clrc
  5804  0C87  0D3D               	rlf	??___ftdiv+1,w
  5805  0C88  0D3E               	rlf	??___ftdiv+2,w
  5806  0C89  00C4               	movwf	___ftdiv@sign
  5807  0C8A  08C4               	movf	___ftdiv@sign,f
  5808  0C8B  1D03               	skipz
  5809  0C8C  2C91               	goto	l3389
  5810  0C8D  01B6               	clrf	?___ftdiv
  5811  0C8E  01B7               	clrf	?___ftdiv+1
  5812  0C8F  01B8               	clrf	?___ftdiv+2
  5813  0C90  0008               	return
  5814  0C91                     l3389:	
  5815  0C91  3089               	movlw	137
  5816  0C92  01C0               	clrf	___ftdiv@f3
  5817  0C93  01C1               	clrf	___ftdiv@f3+1
  5818  0C94  01C2               	clrf	___ftdiv@f3+2
  5819  0C95  0744               	addwf	___ftdiv@sign,w
  5820  0C96  00BC               	movwf	??___ftdiv
  5821  0C97  02C3               	subwf	___ftdiv@exp,f
  5822  0C98  083B               	movf	___ftdiv@f1+2,w
  5823  0C99  00C4               	movwf	___ftdiv@sign
  5824  0C9A  0838               	movf	___ftdiv@f2+2,w
  5825  0C9B  06C4               	xorwf	___ftdiv@sign,f
  5826  0C9C  3080               	movlw	128
  5827  0C9D  05C4               	andwf	___ftdiv@sign,f
  5828  0C9E  3018               	movlw	24
  5829  0C9F  17BA               	bsf	___ftdiv@f1+1,7
  5830  0CA0  01BB               	clrf	___ftdiv@f1+2
  5831  0CA1  17B7               	bsf	___ftdiv@f2+1,7
  5832  0CA2  01B8               	clrf	___ftdiv@f2+2
  5833  0CA3  00BF               	movwf	___ftdiv@cntr
  5834  0CA4                     l7043:	
  5835  0CA4  1003               	clrc
  5836  0CA5  0DC0               	rlf	___ftdiv@f3,f
  5837  0CA6  0DC1               	rlf	___ftdiv@f3+1,f
  5838  0CA7  0DC2               	rlf	___ftdiv@f3+2,f
  5839  0CA8  0838               	movf	___ftdiv@f2+2,w
  5840  0CA9  023B               	subwf	___ftdiv@f1+2,w
  5841  0CAA  1D03               	skipz
  5842  0CAB  2CB2               	goto	u3975
  5843  0CAC  0837               	movf	___ftdiv@f2+1,w
  5844  0CAD  023A               	subwf	___ftdiv@f1+1,w
  5845  0CAE  1D03               	skipz
  5846  0CAF  2CB2               	goto	u3975
  5847  0CB0  0836               	movf	___ftdiv@f2,w
  5848  0CB1  0239               	subwf	___ftdiv@f1,w
  5849  0CB2                     u3975:	
  5850  0CB2  1C03               	skipc
  5851  0CB3  2CC0               	goto	L7
  5852  0CB4  0836               	movf	___ftdiv@f2,w
  5853  0CB5  02B9               	subwf	___ftdiv@f1,f
  5854  0CB6  0837               	movf	___ftdiv@f2+1,w
  5855  0CB7  1C03               	skipc
  5856  0CB8  0F37               	incfsz	___ftdiv@f2+1,w
  5857  0CB9  02BA               	subwf	___ftdiv@f1+1,f
  5858  0CBA  0838               	movf	___ftdiv@f2+2,w
  5859  0CBB  1C03               	skipc
  5860  0CBC  0A38               	incf	___ftdiv@f2+2,w
  5861  0CBD  02BB               	subwf	___ftdiv@f1+2,f
  5862  0CBE  1440               	bsf	___ftdiv@f3,0
  5863  0CBF  1003               	clrc
  5864  0CC0                     L7:	
  5865  0CC0  0DB9               	rlf	___ftdiv@f1,f
  5866  0CC1  0DBA               	rlf	___ftdiv@f1+1,f
  5867  0CC2  0DBB               	rlf	___ftdiv@f1+2,f
  5868  0CC3  0BBF               	decfsz	___ftdiv@cntr,f
  5869  0CC4  2CA4               	goto	l7043
  5870  0CC5  0840               	movf	___ftdiv@f3,w
  5871  0CC6  00A8               	movwf	?___ftpack
  5872  0CC7  0841               	movf	___ftdiv@f3+1,w
  5873  0CC8  00A9               	movwf	?___ftpack+1
  5874  0CC9  0842               	movf	___ftdiv@f3+2,w
  5875  0CCA  00AA               	movwf	?___ftpack+2
  5876  0CCB  0843               	movf	___ftdiv@exp,w
  5877  0CCC  00AB               	movwf	?___ftpack+3
  5878  0CCD  0844               	movf	___ftdiv@sign,w
  5879  0CCE  00AC               	movwf	?___ftpack+4
  5880  0CCF  2769               	fcall	___ftpack
  5881  0CD0  0828               	movf	?___ftpack,w
  5882  0CD1  00B6               	movwf	?___ftdiv
  5883  0CD2  0829               	movf	?___ftpack+1,w
  5884  0CD3  00B7               	movwf	?___ftdiv+1
  5885  0CD4  082A               	movf	?___ftpack+2,w
  5886  0CD5  00B8               	movwf	?___ftdiv+2
  5887  0CD6  0008               	return
  5888  0CD7                     __end_of___ftdiv:	
  5889  0CD7                     __ptext772:	
  5890 ;; =============== function ___ftsub ends ============
  5891                           
  5892                           
  5893 ;; *************** function _scale *****************
  5894 ;; Defined at:
  5895 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;  scl             1    wreg     char 
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  scl             1   62[BANK0 ] char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  3   52[BANK0 ] char 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 60/20
  5906 ;;		On exit  : 60/0
  5907 ;;		Unchanged: FFF9F/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         0       3       0       0       0
  5910 ;;      Locals:         0       4       0       0       0
  5911 ;;      Temps:          0       4       0       0       0
  5912 ;;      Totals:         0      11       0       0       0
  5913 ;;Total ram usage:       11 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    5
  5916 ;; This function calls:
  5917 ;;		___awmod
  5918 ;;		___awdiv
  5919 ;;		___ftmul
  5920 ;;		___bmul
  5921 ;; This function is called by:
  5922 ;;		_printf
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925  0CD7                     _scale:	
  5926                           
  5927                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5928                           ;scale@scl stored from wreg
  5929  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5930  0CD8  00DE               	movwf	scale@scl
  5931  0CD9  1FDE               	btfss	scale@scl,7
  5932  0CDA  2DA3               	goto	l7233
  5933  0CDB  09DE               	comf	scale@scl,f
  5934  0CDC  0ADE               	incf	scale@scl,f
  5935  0CDD  085E               	movf	scale@scl,w
  5936  0CDE  3A80               	xorlw	128
  5937  0CDF  3E12               	addlw	-238
  5938  0CE0  1C03               	skipc
  5939  0CE1  2D47               	goto	l7223
  5940  0CE2  300A               	movlw	10
  5941  0CE3  27CB  120A  158A   	fcall	PL18	;call to abstracted procedure
  5942  0CE6  26AE  120A  158A   	fcall	___awmod
  5943  0CE9  0829               	movf	?___awmod+1,w
  5944  0CEA  00B1               	movwf	?___awdiv+3
  5945  0CEB  0828               	movf	?___awmod,w
  5946  0CEC  00B0               	movwf	?___awdiv+2
  5947  0CED  2669  120A  158A   	fcall	___awdiv
  5948  0CF0  27E8               	fcall	PL24	;call to abstracted procedure
  5949  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5950  0CF2  0084               	movwf	4
  5951  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5952  0CF8  00C5               	movwf	?___ftmul
  5953  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5954  0CFE  00C6               	movwf	?___ftmul+1
  5955  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5956  0D04  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  5957  0D07  1BB0               	btfsc	?___awdiv+2,7
  5958  0D08  03B1               	decf	?___awdiv+3,f
  5959  0D09  2669  120A  158A   	fcall	___awdiv
  5960  0D0C  27AF               	fcall	PL12	;call to abstracted procedure
  5961  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5962  0D0E  0084               	movwf	4
  5963  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5964  0D14  00C8               	movwf	?___ftmul+3
  5965  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5966  0D1A  00C9               	movwf	?___ftmul+4
  5967  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5968  0D20  00CA               	movwf	?___ftmul+5
  5969  0D21  26EB  120A  158A   	fcall	___ftmul
  5970  0D24  27BE  120A  158A   	fcall	PL14	;call to abstracted procedure
  5971  0D27  1BAA               	btfsc	?___awmod+2,7
  5972  0D28  03AB               	decf	?___awmod+3,f
  5973  0D29  26AE  120A  158A   	fcall	___awmod
  5974  0D2C  27A7               	fcall	PL11	;call to abstracted procedure
  5975  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5976  0D2E  0084               	movwf	4
  5977  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5978  0D34  00C5               	movwf	?___ftmul
  5979  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5980  0D3A  00C6               	movwf	?___ftmul+1
  5981  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5982  0D40  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5983  0D43  26EB  120A  158A   	fcall	___ftmul
  5984  0D46  2FB7               	ljmp	PL13	;call to abstracted procedure
  5985  0D47                     l7223:	
  5986  0D47  085E               	movf	scale@scl,w
  5987  0D48  3A80               	xorlw	128
  5988  0D49  3E75               	addlw	-139
  5989  0D4A  1C03               	skipc
  5990  0D4B  2D8C               	goto	l7229
  5991  0D4C  300A               	movlw	10
  5992  0D4D  00A8               	movwf	?___awmod
  5993  0D4E  01A9               	clrf	?___awmod+1
  5994  0D4F  085E               	movf	scale@scl,w
  5995  0D50  00AA               	movwf	?___awmod+2
  5996  0D51  01AB               	clrf	?___awmod+3
  5997  0D52  1BAA               	btfsc	?___awmod+2,7
  5998  0D53  03AB               	decf	?___awmod+3,f
  5999  0D54  26AE  120A  158A   	fcall	___awmod
  6000  0D57  27A7               	fcall	PL11	;call to abstracted procedure
  6001  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  6002  0D59  0084               	movwf	4
  6003  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6004  0D5F  00C5               	movwf	?___ftmul
  6005  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6006  0D65  00C6               	movwf	?___ftmul+1
  6007  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6008  0D6B  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  6009  0D6E  1BB0               	btfsc	?___awdiv+2,7
  6010  0D6F  03B1               	decf	?___awdiv+3,f
  6011  0D70  2669  120A  158A   	fcall	___awdiv
  6012  0D73  27AF               	fcall	PL12	;call to abstracted procedure
  6013  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6014  0D75  0084               	movwf	4
  6015  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6016  0D7B  00C8               	movwf	?___ftmul+3
  6017  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6018  0D81  00C9               	movwf	?___ftmul+4
  6019  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6020  0D87  00CA               	movwf	?___ftmul+5
  6021  0D88  26EB  120A  158A   	fcall	___ftmul
  6022  0D8B  2FB7               	ljmp	PL13	;call to abstracted procedure
  6023  0D8C                     l7229:	
  6024  0D8C  3003               	movlw	3
  6025  0D8D  00B1               	movwf	?___bmul
  6026  0D8E  085E               	movf	scale@scl,w
  6027  0D8F  275A               	fcall	___bmul
  6028  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  6029  0D91  0084               	movwf	4
  6030  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6031  0D97  00D4               	movwf	?_scale
  6032  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6033  0D9D  00D5               	movwf	?_scale+1
  6034  0D9E  160A  118A  2000   	fcall	stringdir
  6035  0DA1  00D6               	movwf	?_scale+2
  6036  0DA2  0008               	return
  6037  0DA3                     l7233:	
  6038  0DA3  085E               	movf	scale@scl,w
  6039  0DA4  3A80               	xorlw	128
  6040  0DA5  3E12               	addlw	-238
  6041  0DA6  1C03               	skipc
  6042  0DA7  2E0D               	goto	l7241
  6043  0DA8  300A               	movlw	10
  6044  0DA9  27CB  120A  158A   	fcall	PL18	;call to abstracted procedure
  6045  0DAC  26AE  120A  158A   	fcall	___awmod
  6046  0DAF  0829               	movf	?___awmod+1,w
  6047  0DB0  00B1               	movwf	?___awdiv+3
  6048  0DB1  0828               	movf	?___awmod,w
  6049  0DB2  00B0               	movwf	?___awdiv+2
  6050  0DB3  2669  120A  158A   	fcall	___awdiv
  6051  0DB6  27E8               	fcall	PL24	;call to abstracted procedure
  6052  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  6053  0DB8  0084               	movwf	4
  6054  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6055  0DBE  00C5               	movwf	?___ftmul
  6056  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6057  0DC4  00C6               	movwf	?___ftmul+1
  6058  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6059  0DCA  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  6060  0DCD  1BB0               	btfsc	?___awdiv+2,7
  6061  0DCE  03B1               	decf	?___awdiv+3,f
  6062  0DCF  2669  120A  158A   	fcall	___awdiv
  6063  0DD2  27AF               	fcall	PL12	;call to abstracted procedure
  6064  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6065  0DD4  0084               	movwf	4
  6066  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6067  0DDA  00C8               	movwf	?___ftmul+3
  6068  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6069  0DE0  00C9               	movwf	?___ftmul+4
  6070  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6071  0DE6  00CA               	movwf	?___ftmul+5
  6072  0DE7  26EB  120A  158A   	fcall	___ftmul
  6073  0DEA  27BE  120A  158A   	fcall	PL14	;call to abstracted procedure
  6074  0DED  1BAA               	btfsc	?___awmod+2,7
  6075  0DEE  03AB               	decf	?___awmod+3,f
  6076  0DEF  26AE  120A  158A   	fcall	___awmod
  6077  0DF2  27A7               	fcall	PL11	;call to abstracted procedure
  6078  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  6079  0DF4  0084               	movwf	4
  6080  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6081  0DFA  00C5               	movwf	?___ftmul
  6082  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6083  0E00  00C6               	movwf	?___ftmul+1
  6084  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6085  0E06  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  6086  0E09  26EB  120A  158A   	fcall	___ftmul
  6087  0E0C  2FB7               	ljmp	PL13	;call to abstracted procedure
  6088  0E0D                     l7241:	
  6089  0E0D  085E               	movf	scale@scl,w
  6090  0E0E  3A80               	xorlw	128
  6091  0E0F  3E75               	addlw	-139
  6092  0E10  1C03               	skipc
  6093  0E11  2E52               	goto	l7247
  6094  0E12  300A               	movlw	10
  6095  0E13  00A8               	movwf	?___awmod
  6096  0E14  01A9               	clrf	?___awmod+1
  6097  0E15  085E               	movf	scale@scl,w
  6098  0E16  00AA               	movwf	?___awmod+2
  6099  0E17  01AB               	clrf	?___awmod+3
  6100  0E18  1BAA               	btfsc	?___awmod+2,7
  6101  0E19  03AB               	decf	?___awmod+3,f
  6102  0E1A  26AE  120A  158A   	fcall	___awmod
  6103  0E1D  27A7               	fcall	PL11	;call to abstracted procedure
  6104  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  6105  0E1F  0084               	movwf	4
  6106  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6107  0E25  00C5               	movwf	?___ftmul
  6108  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6109  0E2B  00C6               	movwf	?___ftmul+1
  6110  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6111  0E31  27E0  120A  158A   	fcall	PL23	;call to abstracted procedure
  6112  0E34  1BB0               	btfsc	?___awdiv+2,7
  6113  0E35  03B1               	decf	?___awdiv+3,f
  6114  0E36  2669  120A  158A   	fcall	___awdiv
  6115  0E39  27AF               	fcall	PL12	;call to abstracted procedure
  6116  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  6117  0E3B  0084               	movwf	4
  6118  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6119  0E41  00C8               	movwf	?___ftmul+3
  6120  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6121  0E47  00C9               	movwf	?___ftmul+4
  6122  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6123  0E4D  00CA               	movwf	?___ftmul+5
  6124  0E4E  26EB  120A  158A   	fcall	___ftmul
  6125  0E51  2FB7               	ljmp	PL13	;call to abstracted procedure
  6126  0E52                     l7247:	
  6127  0E52  3003               	movlw	3
  6128  0E53  00B1               	movwf	?___bmul
  6129  0E54  085E               	movf	scale@scl,w
  6130  0E55  275A               	fcall	___bmul
  6131  0E56  3E28               	addlw	low (__powers_-__stringbase)
  6132  0E57  0084               	movwf	4
  6133  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6134  0E5D  00D4               	movwf	?_scale
  6135  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6136  0E63  00D5               	movwf	?_scale+1
  6137  0E64  160A  118A  2000   	fcall	stringdir
  6138  0E67  00D6               	movwf	?_scale+2
  6139  0E68  0008               	return
  6140  0E69                     __end_of_scale:	
  6141  0E69                     __ptext788:	
  6142 ;; =============== function ___llmod ends ============
  6143                           
  6144                           
  6145 ;; *************** function ___awdiv *****************
  6146 ;; Defined at:
  6147 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  divisor         2   14[BANK0 ] int 
  6150 ;;  dividend        2   16[BANK0 ] int 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  quotient        2   20[BANK0 ] int 
  6153 ;;  sign            1   19[BANK0 ] unsigned char 
  6154 ;;  counter         1   18[BANK0 ] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  2   14[BANK0 ] int 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 60/0
  6161 ;;		On exit  : 60/0
  6162 ;;		Unchanged: FFF9F/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6164 ;;      Params:         0       4       0       0       0
  6165 ;;      Locals:         0       4       0       0       0
  6166 ;;      Temps:          0       0       0       0       0
  6167 ;;      Totals:         0       8       0       0       0
  6168 ;;Total ram usage:        8 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    3
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_scale
  6175 ;;		_printf
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178  0E69                     ___awdiv:	
  6179                           
  6180                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6181  0E69  01B3               	clrf	___awdiv@sign
  6182  0E6A  1FAF               	btfss	___awdiv@divisor+1,7
  6183  0E6B  2E73               	goto	l6633
  6184  0E6C  09AE               	comf	___awdiv@divisor,f
  6185  0E6D  09AF               	comf	___awdiv@divisor+1,f
  6186  0E6E  0AAE               	incf	___awdiv@divisor,f
  6187  0E6F  1903               	skipnz
  6188  0E70  0AAF               	incf	___awdiv@divisor+1,f
  6189  0E71  01B3               	clrf	___awdiv@sign
  6190  0E72  0AB3               	incf	___awdiv@sign,f
  6191  0E73                     l6633:	
  6192  0E73  1FB1               	btfss	___awdiv@dividend+1,7
  6193  0E74  2E7C               	goto	l6639
  6194  0E75  09B0               	comf	___awdiv@dividend,f
  6195  0E76  09B1               	comf	___awdiv@dividend+1,f
  6196  0E77  0AB0               	incf	___awdiv@dividend,f
  6197  0E78  1903               	skipnz
  6198  0E79  0AB1               	incf	___awdiv@dividend+1,f
  6199  0E7A  3001               	movlw	1
  6200  0E7B  06B3               	xorwf	___awdiv@sign,f
  6201  0E7C                     l6639:	
  6202  0E7C  01B4               	clrf	___awdiv@quotient
  6203  0E7D  01B5               	clrf	___awdiv@quotient+1
  6204  0E7E  082F               	movf	___awdiv@divisor+1,w
  6205  0E7F  042E               	iorwf	___awdiv@divisor,w
  6206  0E80  1903               	skipnz
  6207  0E81  2EA1               	goto	l6661
  6208  0E82  01B2               	clrf	___awdiv@counter
  6209  0E83                     L16:	
  6210  0E83  0AB2               	incf	___awdiv@counter,f
  6211  0E84  1BAF               	btfsc	___awdiv@divisor+1,7
  6212  0E85  2E8A               	goto	l6649
  6213  0E86  1003               	clrc
  6214  0E87  0DAE               	rlf	___awdiv@divisor,f
  6215  0E88  0DAF               	rlf	___awdiv@divisor+1,f
  6216  0E89  2E83               	goto	L16
  6217  0E8A                     l6649:	
  6218  0E8A  1003               	clrc
  6219  0E8B  0DB4               	rlf	___awdiv@quotient,f
  6220  0E8C  0DB5               	rlf	___awdiv@quotient+1,f
  6221  0E8D  082F               	movf	___awdiv@divisor+1,w
  6222  0E8E  0231               	subwf	___awdiv@dividend+1,w
  6223  0E8F  1D03               	skipz
  6224  0E90  2E93               	goto	u3095
  6225  0E91  082E               	movf	___awdiv@divisor,w
  6226  0E92  0230               	subwf	___awdiv@dividend,w
  6227  0E93                     u3095:	
  6228  0E93  1C03               	skipc
  6229  0E94  2E9D               	goto	L17
  6230  0E95  082E               	movf	___awdiv@divisor,w
  6231  0E96  02B0               	subwf	___awdiv@dividend,f
  6232  0E97  082F               	movf	___awdiv@divisor+1,w
  6233  0E98  1C03               	skipc
  6234  0E99  03B1               	decf	___awdiv@dividend+1,f
  6235  0E9A  02B1               	subwf	___awdiv@dividend+1,f
  6236  0E9B  1434               	bsf	___awdiv@quotient,0
  6237  0E9C  1003               	clrc
  6238  0E9D                     L17:	
  6239  0E9D  0CAF               	rrf	___awdiv@divisor+1,f
  6240  0E9E  0CAE               	rrf	___awdiv@divisor,f
  6241  0E9F  0BB2               	decfsz	___awdiv@counter,f
  6242  0EA0  2E8A               	goto	l6649
  6243  0EA1                     l6661:	
  6244  0EA1  0833               	movf	___awdiv@sign,w
  6245  0EA2  1903               	btfsc	3,2
  6246  0EA3  2EA9               	goto	l6665
  6247  0EA4  09B4               	comf	___awdiv@quotient,f
  6248  0EA5  09B5               	comf	___awdiv@quotient+1,f
  6249  0EA6  0AB4               	incf	___awdiv@quotient,f
  6250  0EA7  1903               	skipnz
  6251  0EA8  0AB5               	incf	___awdiv@quotient+1,f
  6252  0EA9                     l6665:	
  6253  0EA9  0835               	movf	___awdiv@quotient+1,w
  6254  0EAA  00AF               	movwf	?___awdiv+1
  6255  0EAB  0834               	movf	___awdiv@quotient,w
  6256  0EAC  00AE               	movwf	?___awdiv
  6257  0EAD  0008               	return
  6258  0EAE                     __end_of___awdiv:	
  6259  0EAE                     __ptext783:	
  6260 ;; =============== function _lcd_put_byte ends ============
  6261                           
  6262                           
  6263 ;; *************** function ___awmod *****************
  6264 ;; Defined at:
  6265 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;  divisor         2    8[BANK0 ] int 
  6268 ;;  dividend        2   10[BANK0 ] int 
  6269 ;; Auto vars:     Size  Location     Type
  6270 ;;  sign            1   13[BANK0 ] unsigned char 
  6271 ;;  counter         1   12[BANK0 ] unsigned char 
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  2    8[BANK0 ] int 
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0
  6276 ;; Tracked objects:
  6277 ;;		On entry : 60/0
  6278 ;;		On exit  : 60/0
  6279 ;;		Unchanged: FFF9F/0
  6280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6281 ;;      Params:         0       4       0       0       0
  6282 ;;      Locals:         0       2       0       0       0
  6283 ;;      Temps:          0       0       0       0       0
  6284 ;;      Totals:         0       6       0       0       0
  6285 ;;Total ram usage:        6 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    3
  6288 ;; This function calls:
  6289 ;;		Nothing
  6290 ;; This function is called by:
  6291 ;;		_scale
  6292 ;; This function uses a non-reentrant model
  6293 ;;
  6294  0EAE                     ___awmod:	
  6295                           
  6296                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6297  0EAE  01AD               	clrf	___awmod@sign
  6298  0EAF  1FAB               	btfss	___awmod@dividend+1,7
  6299  0EB0  2EB8               	goto	l6751
  6300  0EB1  09AA               	comf	___awmod@dividend,f
  6301  0EB2  09AB               	comf	___awmod@dividend+1,f
  6302  0EB3  0AAA               	incf	___awmod@dividend,f
  6303  0EB4  1903               	skipnz
  6304  0EB5  0AAB               	incf	___awmod@dividend+1,f
  6305  0EB6  01AD               	clrf	___awmod@sign
  6306  0EB7  0AAD               	incf	___awmod@sign,f
  6307  0EB8                     l6751:	
  6308  0EB8  1FA9               	btfss	___awmod@divisor+1,7
  6309  0EB9  2EBF               	goto	l6755
  6310  0EBA  09A8               	comf	___awmod@divisor,f
  6311  0EBB  09A9               	comf	___awmod@divisor+1,f
  6312  0EBC  0AA8               	incf	___awmod@divisor,f
  6313  0EBD  1903               	skipnz
  6314  0EBE  0AA9               	incf	___awmod@divisor+1,f
  6315  0EBF                     l6755:	
  6316  0EBF  0829               	movf	___awmod@divisor+1,w
  6317  0EC0  0428               	iorwf	___awmod@divisor,w
  6318  0EC1  1903               	skipnz
  6319  0EC2  2EDE               	goto	l6771
  6320  0EC3  01AC               	clrf	___awmod@counter
  6321  0EC4                     L9:	
  6322  0EC4  0AAC               	incf	___awmod@counter,f
  6323  0EC5  1BA9               	btfsc	___awmod@divisor+1,7
  6324  0EC6  2ECB               	goto	l6763
  6325  0EC7  1003               	clrc
  6326  0EC8  0DA8               	rlf	___awmod@divisor,f
  6327  0EC9  0DA9               	rlf	___awmod@divisor+1,f
  6328  0ECA  2EC4               	goto	L9
  6329  0ECB                     l6763:	
  6330  0ECB  0829               	movf	___awmod@divisor+1,w
  6331  0ECC  022B               	subwf	___awmod@dividend+1,w
  6332  0ECD  1D03               	skipz
  6333  0ECE  2ED1               	goto	u3285
  6334  0ECF  0828               	movf	___awmod@divisor,w
  6335  0ED0  022A               	subwf	___awmod@dividend,w
  6336  0ED1                     u3285:	
  6337  0ED1  1C03               	skipc
  6338  0ED2  2EDA               	goto	L10
  6339  0ED3  0828               	movf	___awmod@divisor,w
  6340  0ED4  02AA               	subwf	___awmod@dividend,f
  6341  0ED5  0829               	movf	___awmod@divisor+1,w
  6342  0ED6  1C03               	skipc
  6343  0ED7  03AB               	decf	___awmod@dividend+1,f
  6344  0ED8  02AB               	subwf	___awmod@dividend+1,f
  6345  0ED9  1003               	clrc
  6346  0EDA                     L10:	
  6347  0EDA  0CA9               	rrf	___awmod@divisor+1,f
  6348  0EDB  0CA8               	rrf	___awmod@divisor,f
  6349  0EDC  0BAC               	decfsz	___awmod@counter,f
  6350  0EDD  2ECB               	goto	l6763
  6351  0EDE                     l6771:	
  6352  0EDE  082D               	movf	___awmod@sign,w
  6353  0EDF  1903               	btfsc	3,2
  6354  0EE0  2EE6               	goto	l6775
  6355  0EE1  09AA               	comf	___awmod@dividend,f
  6356  0EE2  09AB               	comf	___awmod@dividend+1,f
  6357  0EE3  0AAA               	incf	___awmod@dividend,f
  6358  0EE4  1903               	skipnz
  6359  0EE5  0AAB               	incf	___awmod@dividend+1,f
  6360  0EE6                     l6775:	
  6361  0EE6  082B               	movf	___awmod@dividend+1,w
  6362  0EE7  00A9               	movwf	?___awmod+1
  6363  0EE8  082A               	movf	___awmod@dividend,w
  6364  0EE9  00A8               	movwf	?___awmod
  6365  0EEA  0008               	return
  6366  0EEB                     __end_of___awmod:	
  6367  0EEB                     __ptext778:	
  6368 ;; =============== function ___altoft ends ============
  6369                           
  6370                           
  6371 ;; *************** function ___ftmul *****************
  6372 ;; Defined at:
  6373 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  f1              3   37[BANK0 ] float 
  6376 ;;  f2              3   40[BANK0 ] float 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  f3_as_produc    3   47[BANK0 ] unsigned um
  6379 ;;  sign            1   51[BANK0 ] unsigned char 
  6380 ;;  cntr            1   50[BANK0 ] unsigned char 
  6381 ;;  exp             1   46[BANK0 ] unsigned char 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  3   37[BANK0 ] float 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0, pclath, cstack
  6386 ;; Tracked objects:
  6387 ;;		On entry : 60/0
  6388 ;;		On exit  : 60/0
  6389 ;;		Unchanged: FFF9F/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6391 ;;      Params:         0       6       0       0       0
  6392 ;;      Locals:         0       6       0       0       0
  6393 ;;      Temps:          0       3       0       0       0
  6394 ;;      Totals:         0      15       0       0       0
  6395 ;;Total ram usage:       15 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; Hardware stack levels required when called:    4
  6398 ;; This function calls:
  6399 ;;		___ftpack
  6400 ;; This function is called by:
  6401 ;;		_main
  6402 ;;		_fround
  6403 ;;		_scale
  6404 ;;		_printf
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407  0EEB                     ___ftmul:	
  6408                           
  6409                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6410  0EEB  0845               	movf	___ftmul@f1,w
  6411  0EEC  00CB               	movwf	??___ftmul
  6412  0EED  0846               	movf	___ftmul@f1+1,w
  6413  0EEE  00CC               	movwf	??___ftmul+1
  6414  0EEF  0847               	movf	___ftmul@f1+2,w
  6415  0EF0  00CD               	movwf	??___ftmul+2
  6416  0EF1  1003               	clrc
  6417  0EF2  0D4C               	rlf	??___ftmul+1,w
  6418  0EF3  0D4D               	rlf	??___ftmul+2,w
  6419  0EF4  00CE               	movwf	___ftmul@exp
  6420  0EF5  08CE               	movf	___ftmul@exp,f
  6421  0EF6  1D03               	skipz
  6422  0EF7  2EFC               	goto	l7063
  6423  0EF8  01C5               	clrf	?___ftmul
  6424  0EF9  01C6               	clrf	?___ftmul+1
  6425  0EFA  01C7               	clrf	?___ftmul+2
  6426  0EFB  0008               	return
  6427  0EFC                     l7063:	
  6428  0EFC  0848               	movf	___ftmul@f2,w
  6429  0EFD  00CB               	movwf	??___ftmul
  6430  0EFE  0849               	movf	___ftmul@f2+1,w
  6431  0EFF  00CC               	movwf	??___ftmul+1
  6432  0F00  084A               	movf	___ftmul@f2+2,w
  6433  0F01  00CD               	movwf	??___ftmul+2
  6434  0F02  1003               	clrc
  6435  0F03  0D4C               	rlf	??___ftmul+1,w
  6436  0F04  0D4D               	rlf	??___ftmul+2,w
  6437  0F05  00D3               	movwf	___ftmul@sign
  6438  0F06  08D3               	movf	___ftmul@sign,f
  6439  0F07  1D03               	skipz
  6440  0F08  2F0D               	goto	l7069
  6441  0F09  01C5               	clrf	?___ftmul
  6442  0F0A  01C6               	clrf	?___ftmul+1
  6443  0F0B  01C7               	clrf	?___ftmul+2
  6444  0F0C  0008               	return
  6445  0F0D                     l7069:	
  6446  0F0D  0853               	movf	___ftmul@sign,w
  6447  0F0E  3E7B               	addlw	123
  6448  0F0F  07CE               	addwf	___ftmul@exp,f
  6449  0F10  0847               	movf	___ftmul@f1+2,w
  6450  0F11  00D3               	movwf	___ftmul@sign
  6451  0F12  084A               	movf	___ftmul@f2+2,w
  6452  0F13  06D3               	xorwf	___ftmul@sign,f
  6453  0F14  3080               	movlw	128
  6454  0F15  05D3               	andwf	___ftmul@sign,f
  6455  0F16  3007               	movlw	7
  6456  0F17  17C6               	bsf	___ftmul@f1+1,7
  6457  0F18  17C9               	bsf	___ftmul@f2+1,7
  6458  0F19  01CA               	clrf	___ftmul@f2+2
  6459  0F1A  01CF               	clrf	___ftmul@f3_as_product
  6460  0F1B  01D0               	clrf	___ftmul@f3_as_product+1
  6461  0F1C  01D1               	clrf	___ftmul@f3_as_product+2
  6462  0F1D  00D2               	movwf	___ftmul@cntr
  6463  0F1E                     l7087:	
  6464  0F1E  1C45               	btfss	___ftmul@f1,0
  6465  0F1F  2F28               	goto	l7091
  6466  0F20  0848               	movf	___ftmul@f2,w
  6467  0F21  27D6  120A  158A   	fcall	PL21	;call to abstracted procedure
  6468  0F24  1803               	skipnc
  6469  0F25  0A4A               	incf	___ftmul@f2+2,w
  6470  0F26  1D03               	btfss	3,2
  6471  0F27  07D1               	addwf	___ftmul@f3_as_product+2,f
  6472  0F28                     l7091:	
  6473  0F28  1003               	clrc
  6474  0F29  0CC7               	rrf	___ftmul@f1+2,f
  6475  0F2A  0CC6               	rrf	___ftmul@f1+1,f
  6476  0F2B  0CC5               	rrf	___ftmul@f1,f
  6477  0F2C  1003               	clrc
  6478  0F2D  0DC8               	rlf	___ftmul@f2,f
  6479  0F2E  0DC9               	rlf	___ftmul@f2+1,f
  6480  0F2F  0DCA               	rlf	___ftmul@f2+2,f
  6481  0F30  0BD2               	decfsz	___ftmul@cntr,f
  6482  0F31  2F1E               	goto	l7087
  6483  0F32  3009               	movlw	9
  6484  0F33  00D2               	movwf	___ftmul@cntr
  6485  0F34                     l7099:	
  6486  0F34  1C45               	btfss	___ftmul@f1,0
  6487  0F35  2F3E               	goto	l7103
  6488  0F36  0848               	movf	___ftmul@f2,w
  6489  0F37  27D6  120A  158A   	fcall	PL21	;call to abstracted procedure
  6490  0F3A  1803               	skipnc
  6491  0F3B  0A4A               	incf	___ftmul@f2+2,w
  6492  0F3C  1D03               	btfss	3,2
  6493  0F3D  07D1               	addwf	___ftmul@f3_as_product+2,f
  6494  0F3E                     l7103:	
  6495  0F3E  1003               	clrc
  6496  0F3F  0CC7               	rrf	___ftmul@f1+2,f
  6497  0F40  0CC6               	rrf	___ftmul@f1+1,f
  6498  0F41  0CC5               	rrf	___ftmul@f1,f
  6499  0F42  1003               	clrc
  6500  0F43  0CD1               	rrf	___ftmul@f3_as_product+2,f
  6501  0F44  0CD0               	rrf	___ftmul@f3_as_product+1,f
  6502  0F45  0CCF               	rrf	___ftmul@f3_as_product,f
  6503  0F46  0BD2               	decfsz	___ftmul@cntr,f
  6504  0F47  2F34               	goto	l7099
  6505  0F48  084F               	movf	___ftmul@f3_as_product,w
  6506  0F49  00A8               	movwf	?___ftpack
  6507  0F4A  0850               	movf	___ftmul@f3_as_product+1,w
  6508  0F4B  00A9               	movwf	?___ftpack+1
  6509  0F4C  0851               	movf	___ftmul@f3_as_product+2,w
  6510  0F4D  00AA               	movwf	?___ftpack+2
  6511  0F4E  084E               	movf	___ftmul@exp,w
  6512  0F4F  00AB               	movwf	?___ftpack+3
  6513  0F50  0853               	movf	___ftmul@sign,w
  6514  0F51  00AC               	movwf	?___ftpack+4
  6515  0F52  2769               	fcall	___ftpack
  6516  0F53  0828               	movf	?___ftpack,w
  6517  0F54  00C5               	movwf	?___ftmul
  6518  0F55  0829               	movf	?___ftpack+1,w
  6519  0F56  00C6               	movwf	?___ftmul+1
  6520  0F57  082A               	movf	?___ftpack+2,w
  6521  0F58  00C7               	movwf	?___ftmul+2
  6522  0F59  0008               	return
  6523  0F5A                     __end_of___ftmul:	
  6524  0F5A                     __ptext794:	
  6525 ;; =============== function ___wmul ends ============
  6526                           
  6527                           
  6528 ;; *************** function ___bmul *****************
  6529 ;; Defined at:
  6530 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  multiplier      1    wreg     unsigned char 
  6533 ;;  multiplicand    1   17[BANK0 ] unsigned char 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  multiplier      1   19[BANK0 ] unsigned char 
  6536 ;;  product         1   18[BANK0 ] unsigned char 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  1    wreg      unsigned char 
  6539 ;; Registers used:
  6540 ;;		wreg, status,2, status,0
  6541 ;; Tracked objects:
  6542 ;;		On entry : 40/0
  6543 ;;		On exit  : 60/0
  6544 ;;		Unchanged: FFF9F/0
  6545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6546 ;;      Params:         0       1       0       0       0
  6547 ;;      Locals:         0       2       0       0       0
  6548 ;;      Temps:          0       0       0       0       0
  6549 ;;      Totals:         0       3       0       0       0
  6550 ;;Total ram usage:        3 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    3
  6553 ;; This function calls:
  6554 ;;		Nothing
  6555 ;; This function is called by:
  6556 ;;		_fround
  6557 ;;		_scale
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560  0F5A                     ___bmul:	
  6561                           
  6562                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6563                           ;___bmul@multiplier stored from wreg
  6564  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  6565  0F5B  00B3               	movwf	___bmul@multiplier
  6566  0F5C  01B2               	clrf	___bmul@product
  6567  0F5D                     l6487:	
  6568  0F5D  0831               	movf	___bmul@multiplicand,w
  6569  0F5E  1833               	btfsc	___bmul@multiplier,0
  6570  0F5F  07B2               	addwf	___bmul@product,f
  6571  0F60  1003               	clrc
  6572  0F61  0DB1               	rlf	___bmul@multiplicand,f
  6573  0F62  1003               	clrc
  6574  0F63  0CB3               	rrf	___bmul@multiplier,f
  6575  0F64  08B3               	movf	___bmul@multiplier,f
  6576  0F65  1D03               	skipz
  6577  0F66  2F5D               	goto	l6487
  6578  0F67  0832               	movf	___bmul@product,w
  6579  0F68  0008               	return
  6580  0F69                     __end_of___bmul:	
  6581  0F69                     __ptext790:	
  6582 ;; =============== function ___fttol ends ============
  6583                           
  6584                           
  6585 ;; *************** function ___ftpack *****************
  6586 ;; Defined at:
  6587 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6588 ;; Parameters:    Size  Location     Type
  6589 ;;  arg             3    8[BANK0 ] unsigned um
  6590 ;;  exp             1   11[BANK0 ] unsigned char 
  6591 ;;  sign            1   12[BANK0 ] unsigned char 
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;		None
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  3    8[BANK0 ] float 
  6596 ;; Registers used:
  6597 ;;		wreg, status,2, status,0
  6598 ;; Tracked objects:
  6599 ;;		On entry : 60/0
  6600 ;;		On exit  : 60/0
  6601 ;;		Unchanged: FFF9F/0
  6602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6603 ;;      Params:         0       5       0       0       0
  6604 ;;      Locals:         0       0       0       0       0
  6605 ;;      Temps:          0       3       0       0       0
  6606 ;;      Totals:         0       8       0       0       0
  6607 ;;Total ram usage:        8 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    3
  6610 ;; This function calls:
  6611 ;;		Nothing
  6612 ;; This function is called by:
  6613 ;;		___ftadd
  6614 ;;		___ftdiv
  6615 ;;		___ftmul
  6616 ;;		___altoft
  6617 ;;		___lltoft
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620  0F69                     ___ftpack:	
  6621                           
  6622                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6623  0F69  082B               	movf	___ftpack@exp,w
  6624  0F6A  1903               	btfsc	3,2
  6625  0F6B  2F71               	goto	l6563
  6626  0F6C  082A               	movf	___ftpack@arg+2,w
  6627  0F6D  0429               	iorwf	___ftpack@arg+1,w
  6628  0F6E  0428               	iorwf	___ftpack@arg,w
  6629  0F6F  1D03               	skipz
  6630  0F70  2F7A               	goto	l6569
  6631  0F71                     l6563:	
  6632  0F71  01A8               	clrf	?___ftpack
  6633  0F72  01A9               	clrf	?___ftpack+1
  6634  0F73  01AA               	clrf	?___ftpack+2
  6635  0F74  0008               	return
  6636  0F75                     l6567:	
  6637  0F75  0AAB               	incf	___ftpack@exp,f
  6638  0F76  1003               	clrc
  6639  0F77  0CAA               	rrf	___ftpack@arg+2,f
  6640  0F78  0CA9               	rrf	___ftpack@arg+1,f
  6641  0F79  0CA8               	rrf	___ftpack@arg,f
  6642  0F7A                     l6569:	
  6643  0F7A  30FE               	movlw	254
  6644  0F7B  052A               	andwf	___ftpack@arg+2,w
  6645  0F7C  1903               	btfsc	3,2
  6646  0F7D  2F89               	goto	l6573
  6647  0F7E  2F75               	goto	l6567
  6648  0F7F                     l6571:	
  6649  0F7F  0AAB               	incf	___ftpack@exp,f
  6650  0F80  0AA8               	incf	___ftpack@arg,f
  6651  0F81  1903               	skipnz
  6652  0F82  0AA9               	incf	___ftpack@arg+1,f
  6653  0F83  1903               	skipnz
  6654  0F84  0AAA               	incf	___ftpack@arg+2,f
  6655  0F85  1003               	clrc
  6656  0F86  0CAA               	rrf	___ftpack@arg+2,f
  6657  0F87  0CA9               	rrf	___ftpack@arg+1,f
  6658  0F88  0CA8               	rrf	___ftpack@arg,f
  6659  0F89                     l6573:	
  6660  0F89  30FF               	movlw	255
  6661  0F8A  052A               	andwf	___ftpack@arg+2,w
  6662  0F8B  1903               	btfsc	3,2
  6663  0F8C  2F93               	goto	l6577
  6664  0F8D  2F7F               	goto	l6571
  6665  0F8E                     l6575:	
  6666  0F8E  03AB               	decf	___ftpack@exp,f
  6667  0F8F  1003               	clrc
  6668  0F90  0DA8               	rlf	___ftpack@arg,f
  6669  0F91  0DA9               	rlf	___ftpack@arg+1,f
  6670  0F92  0DAA               	rlf	___ftpack@arg+2,f
  6671  0F93                     l6577:	
  6672  0F93  1FA9               	btfss	___ftpack@arg+1,7
  6673  0F94  2F8E               	goto	l6575
  6674  0F95  1C2B               	btfss	___ftpack@exp,0
  6675  0F96  13A9               	bcf	___ftpack@arg+1,7
  6676  0F97  1003               	clrc
  6677  0F98  0CAB               	rrf	___ftpack@exp,f
  6678  0F99  082B               	movf	___ftpack@exp,w
  6679  0F9A  00AF               	movwf	??___ftpack+2
  6680  0F9B  01AE               	clrf	??___ftpack+1
  6681  0F9C  01AD               	clrf	??___ftpack
  6682  0F9D  082D               	movf	??___ftpack,w
  6683  0F9E  04A8               	iorwf	___ftpack@arg,f
  6684  0F9F  082E               	movf	??___ftpack+1,w
  6685  0FA0  04A9               	iorwf	___ftpack@arg+1,f
  6686  0FA1  082F               	movf	??___ftpack+2,w
  6687  0FA2  04AA               	iorwf	___ftpack@arg+2,f
  6688  0FA3  082C               	movf	___ftpack@sign,w
  6689  0FA4  1D03               	skipz
  6690  0FA5  17AA               	bsf	___ftpack@arg+2,7
  6691  0FA6  0008               	return
  6692  0FA7                     __end_of___ftpack:	
  6693  0FA7                     PL11:	
  6694  0FA7  0828               	movf	?___awmod,w
  6695  0FA8  00D7               	movwf	??_scale
  6696  0FA9  0829               	movf	?___awmod+1,w
  6697  0FAA  00D8               	movwf	??_scale+1
  6698  0FAB  0857               	movf	??_scale,w
  6699  0FAC  0757               	addwf	??_scale,w
  6700  0FAD  0757               	addwf	??_scale,w
  6701  0FAE  0008               	return
  6702  0FAF                     PL12:	
  6703  0FAF  082E               	movf	?___awdiv,w
  6704  0FB0  00D9               	movwf	??_scale+2
  6705  0FB1  082F               	movf	?___awdiv+1,w
  6706  0FB2  00DA               	movwf	??_scale+3
  6707  0FB3  0859               	movf	??_scale+2,w
  6708  0FB4  0759               	addwf	??_scale+2,w
  6709  0FB5  0759               	addwf	??_scale+2,w
  6710  0FB6  0008               	return
  6711  0FB7                     PL13:	
  6712  0FB7  0845               	movf	?___ftmul,w
  6713  0FB8  00D4               	movwf	?_scale
  6714  0FB9  0846               	movf	?___ftmul+1,w
  6715  0FBA  00D5               	movwf	?_scale+1
  6716  0FBB  0847               	movf	?___ftmul+2,w
  6717  0FBC  00D6               	movwf	?_scale+2
  6718  0FBD  0008               	return
  6719  0FBE                     PL14:	
  6720  0FBE  0845               	movf	?___ftmul,w
  6721  0FBF  00DB               	movwf	_scale$4112
  6722  0FC0  0846               	movf	?___ftmul+1,w
  6723  0FC1  00DC               	movwf	_scale$4112+1
  6724  0FC2  0847               	movf	?___ftmul+2,w
  6725  0FC3  00DD               	movwf	_scale$4112+2
  6726  0FC4  300A               	movlw	10
  6727  0FC5  00A8               	movwf	?___awmod
  6728  0FC6  01A9               	clrf	?___awmod+1
  6729  0FC7  085E               	movf	scale@scl,w
  6730  0FC8  00AA               	movwf	?___awmod+2
  6731  0FC9  01AB               	clrf	?___awmod+3
  6732  0FCA  0008               	return
  6733  0FCB                     PL18:	
  6734  0FCB  00AE               	movwf	?___awdiv
  6735  0FCC  01AF               	clrf	?___awdiv+1
  6736  0FCD  085E               	movf	scale@scl,w
  6737  0FCE  00AA               	movwf	?___awmod+2
  6738  0FCF  01AB               	clrf	?___awmod+3
  6739  0FD0  1BAA               	btfsc	?___awmod+2,7
  6740  0FD1  03AB               	decf	?___awmod+3,f
  6741  0FD2  3064               	movlw	100
  6742  0FD3  00A8               	movwf	?___awmod
  6743  0FD4  01A9               	clrf	?___awmod+1
  6744  0FD5  0008               	return
  6745  0FD6                     PL21:	
  6746  0FD6  07CF               	addwf	___ftmul@f3_as_product,f
  6747  0FD7  0849               	movf	___ftmul@f2+1,w
  6748  0FD8  1103               	clrz
  6749  0FD9  1803               	skipnc
  6750  0FDA  0A49               	incf	___ftmul@f2+1,w
  6751  0FDB  1D03               	btfss	3,2
  6752  0FDC  07D0               	addwf	___ftmul@f3_as_product+1,f
  6753  0FDD  084A               	movf	___ftmul@f2+2,w
  6754  0FDE  1103               	clrz
  6755  0FDF  0008               	return
  6756  0FE0                     PL23:	
  6757  0FE0  00C7               	movwf	?___ftmul+2
  6758  0FE1  300A               	movlw	10
  6759  0FE2  00AE               	movwf	?___awdiv
  6760  0FE3  01AF               	clrf	?___awdiv+1
  6761  0FE4  085E               	movf	scale@scl,w
  6762  0FE5  00B0               	movwf	?___awdiv+2
  6763  0FE6  01B1               	clrf	?___awdiv+3
  6764  0FE7  0008               	return
  6765  0FE8                     PL24:	
  6766  0FE8  082E               	movf	?___awdiv,w
  6767  0FE9  00D7               	movwf	??_scale
  6768  0FEA  082F               	movf	?___awdiv+1,w
  6769  0FEB  00D8               	movwf	??_scale+1
  6770  0FEC  0857               	movf	??_scale,w
  6771  0FED  0757               	addwf	??_scale,w
  6772  0FEE  0757               	addwf	??_scale,w
  6773  0FEF  0008               	return
  6774  0FF0                     PL25:	
  6775  0FF0  00C7               	movwf	?___ftmul+2
  6776  0FF1  3064               	movlw	100
  6777  0FF2  00AE               	movwf	?___awdiv
  6778  0FF3  01AF               	clrf	?___awdiv+1
  6779  0FF4  085E               	movf	scale@scl,w
  6780  0FF5  00B0               	movwf	?___awdiv+2
  6781  0FF6  01B1               	clrf	?___awdiv+3
  6782  0FF7  0008               	return
  6783  0FF8                     PL26:	
  6784  0FF8  00C7               	movwf	?___ftmul+2
  6785  0FF9  085B               	movf	_scale$4112,w
  6786  0FFA  00C8               	movwf	?___ftmul+3
  6787  0FFB  085C               	movf	_scale$4112+1,w
  6788  0FFC  00C9               	movwf	?___ftmul+4
  6789  0FFD  085D               	movf	_scale$4112+2,w
  6790  0FFE  00CA               	movwf	?___ftmul+5
  6791  0FFF  0008               	return
  6792                           
  6793                           	psect	text795
  6794  080D                     __ptext795:	
  6795 ;; =============== function ___bmul ends ============
  6796                           
  6797                           
  6798 ;; *************** function __div_to_l_ *****************
  6799 ;; Defined at:
  6800 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  f1              3    8[BANK0 ] unsigned char 
  6803 ;;  f2              3   11[BANK0 ] unsigned char 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;  quot            4   22[BANK0 ] unsigned long 
  6806 ;;  exp1            1   27[BANK0 ] unsigned char 
  6807 ;;  cntr            1   26[BANK0 ] unsigned char 
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  4    8[BANK0 ] unsigned long 
  6810 ;; Registers used:
  6811 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 60/0
  6815 ;;		Unchanged: FFE9F/0
  6816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6817 ;;      Params:         0       6       0       0       0
  6818 ;;      Locals:         0       6       0       0       0
  6819 ;;      Temps:          0       8       0       0       0
  6820 ;;      Totals:         0      20       0       0       0
  6821 ;;Total ram usage:       20 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    3
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_printf
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830  080D                     __div_to_l_:	
  6831                           
  6832                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6833  080D  3028               	movlw	low __div_to_l_@f1
  6834  080E  0084               	movwf	4
  6835  080F  1383               	bcf	3,7	;select IRP bank0
  6836  0810  0800               	movf	0,w
  6837  0811  1283               	bcf	3,5	;RP0=0, select bank0
  6838  0812  1303               	bcf	3,6	;RP1=0, select bank0
  6839  0813  00AE               	movwf	??__div_to_l_
  6840  0814  0A84               	incf	4,f
  6841  0815  0800               	movf	0,w
  6842  0816  00AF               	movwf	??__div_to_l_+1
  6843  0817  0A84               	incf	4,f
  6844  0818  0800               	movf	0,w
  6845  0819  00B0               	movwf	??__div_to_l_+2
  6846  081A  0A84               	incf	4,f
  6847  081B  0800               	movf	0,w
  6848  081C  00B1               	movwf	??__div_to_l_+3
  6849  081D  1003               	clrc
  6850  081E  0D30               	rlf	??__div_to_l_+2,w
  6851  081F  0D31               	rlf	??__div_to_l_+3,w
  6852  0820  00BB               	movwf	__div_to_l_@exp1
  6853  0821  08BB               	movf	__div_to_l_@exp1,f
  6854  0822  1D03               	skipz
  6855  0823  2829               	goto	l6443
  6856  0824                     l6441:	
  6857  0824  01A8               	clrf	?__div_to_l_
  6858  0825  01A9               	clrf	?__div_to_l_+1
  6859  0826  01AA               	clrf	?__div_to_l_+2
  6860  0827  01AB               	clrf	?__div_to_l_+3
  6861  0828  0008               	return
  6862  0829                     l6443:	
  6863  0829  302B               	movlw	low __div_to_l_@f2
  6864  082A  20CC  120A  158A   	fcall	PL3	;call to abstracted procedure
  6865  082D  1003               	clrc
  6866  082E  0D30               	rlf	??__div_to_l_+2,w
  6867  082F  0D31               	rlf	??__div_to_l_+3,w
  6868  0830  00BA               	movwf	__div_to_l_@cntr
  6869  0831  08BA               	movf	__div_to_l_@cntr,f
  6870  0832  1903               	btfsc	3,2
  6871  0833  2824               	goto	l6441
  6872  0834  3028               	movlw	low __div_to_l_@f1
  6873  0835  0084               	movwf	4
  6874  0836  3080               	movlw	128
  6875  0837  0A84               	incf	4,f
  6876  0838  0A84               	incf	4,f
  6877  0839  0480               	iorwf	0,f
  6878  083A  3028               	movlw	low __div_to_l_@f1
  6879  083B  0A84               	incf	4,f
  6880  083C  0084               	movwf	4
  6881  083D  302B               	movlw	low __div_to_l_@f2
  6882  083E  0A84               	incf	4,f
  6883  083F  0A84               	incf	4,f
  6884  0840  0A84               	incf	4,f
  6885  0841  0180               	clrf	0
  6886  0842  0084               	movwf	4
  6887  0843  3080               	movlw	128
  6888  0844  0A84               	incf	4,f
  6889  0845  0A84               	incf	4,f
  6890  0846  0480               	iorwf	0,f
  6891  0847  302B               	movlw	low __div_to_l_@f2
  6892  0848  0A84               	incf	4,f
  6893  0849  0084               	movwf	4
  6894  084A  307F               	movlw	127
  6895  084B  0A84               	incf	4,f
  6896  084C  0A84               	incf	4,f
  6897  084D  0A84               	incf	4,f
  6898  084E  0180               	clrf	0
  6899  084F  01B6               	clrf	__div_to_l_@quot
  6900  0850  01B7               	clrf	__div_to_l_@quot+1
  6901  0851  01B8               	clrf	__div_to_l_@quot+2
  6902  0852  01B9               	clrf	__div_to_l_@quot+3
  6903  0853  02BB               	subwf	__div_to_l_@exp1,f
  6904  0854  30A0               	movlw	160
  6905  0855  073A               	addwf	__div_to_l_@cntr,w
  6906  0856  00AE               	movwf	??__div_to_l_
  6907  0857  02BB               	subwf	__div_to_l_@exp1,f
  6908  0858  3020               	movlw	32
  6909  0859  00BA               	movwf	__div_to_l_@cntr
  6910  085A                     l6457:	
  6911  085A  302B               	movlw	low __div_to_l_@f2
  6912  085B  1003               	clrc
  6913  085C  0DB6               	rlf	__div_to_l_@quot,f
  6914  085D  0DB7               	rlf	__div_to_l_@quot+1,f
  6915  085E  0DB8               	rlf	__div_to_l_@quot+2,f
  6916  085F  0DB9               	rlf	__div_to_l_@quot+3,f
  6917  0860  20CC  120A  158A   	fcall	PL3	;call to abstracted procedure
  6918  0863  3028               	movlw	low __div_to_l_@f1
  6919  0864  0084               	movwf	4
  6920  0865  0800               	movf	0,w
  6921  0866  00B2               	movwf	??__div_to_l_+4
  6922  0867  0A84               	incf	4,f
  6923  0868  0800               	movf	0,w
  6924  0869  00B3               	movwf	??__div_to_l_+5
  6925  086A  0A84               	incf	4,f
  6926  086B  0800               	movf	0,w
  6927  086C  00B4               	movwf	??__div_to_l_+6
  6928  086D  0A84               	incf	4,f
  6929  086E  0800               	movf	0,w
  6930  086F  00B5               	movwf	??__div_to_l_+7
  6931  0870  0831               	movf	??__div_to_l_+3,w
  6932  0871  0235               	subwf	??__div_to_l_+7,w
  6933  0872  1D03               	skipz
  6934  0873  287E               	goto	u2725
  6935  0874  0830               	movf	??__div_to_l_+2,w
  6936  0875  0234               	subwf	??__div_to_l_+6,w
  6937  0876  1D03               	skipz
  6938  0877  287E               	goto	u2725
  6939  0878  082F               	movf	??__div_to_l_+1,w
  6940  0879  0233               	subwf	??__div_to_l_+5,w
  6941  087A  1D03               	skipz
  6942  087B  287E               	goto	u2725
  6943  087C  082E               	movf	??__div_to_l_,w
  6944  087D  0232               	subwf	??__div_to_l_+4,w
  6945  087E                     u2725:	
  6946  087E  1C03               	skipc
  6947  087F  289A               	goto	l3589
  6948  0880  302B               	movlw	low __div_to_l_@f2
  6949  0881  20CC  120A  158A   	fcall	PL3	;call to abstracted procedure
  6950  0884  3028               	movlw	low __div_to_l_@f1
  6951  0885  0084               	movwf	4
  6952  0886  082E               	movf	??__div_to_l_,w
  6953  0887  0280               	subwf	0,f
  6954  0888  0A84               	incf	4,f
  6955  0889  082F               	movf	??__div_to_l_+1,w
  6956  088A  1C03               	skipc
  6957  088B  0F2F               	incfsz	??__div_to_l_+1,w
  6958  088C  0280               	subwf	0,f
  6959  088D  0A84               	incf	4,f
  6960  088E  0830               	movf	??__div_to_l_+2,w
  6961  088F  1C03               	skipc
  6962  0890  0F30               	incfsz	??__div_to_l_+2,w
  6963  0891  0280               	subwf	0,f
  6964  0892  0A84               	incf	4,f
  6965  0893  0831               	movf	??__div_to_l_+3,w
  6966  0894  1C03               	skipc
  6967  0895  0A31               	incf	??__div_to_l_+3,w
  6968  0896  0280               	subwf	0,f
  6969  0897  3003               	movlw	3
  6970  0898  0284               	subwf	4,f
  6971  0899  1436               	bsf	__div_to_l_@quot,0
  6972  089A                     l3589:	
  6973  089A  3028               	movlw	low __div_to_l_@f1
  6974  089B  0084               	movwf	4
  6975  089C  1003               	clrc
  6976  089D  0D80               	rlf	0,f
  6977  089E  0A84               	incf	4,f
  6978  089F  0D80               	rlf	0,f
  6979  08A0  0A84               	incf	4,f
  6980  08A1  0D80               	rlf	0,f
  6981  08A2  0A84               	incf	4,f
  6982  08A3  0D80               	rlf	0,f
  6983  08A4  0BBA               	decfsz	__div_to_l_@cntr,f
  6984  08A5  285A               	goto	l6457
  6985  08A6  1FBB               	btfss	__div_to_l_@exp1,7
  6986  08A7  28B5               	goto	l6475
  6987  08A8  083B               	movf	__div_to_l_@exp1,w
  6988  08A9  3A80               	xorlw	128
  6989  08AA  3E9F               	addlw	159
  6990  08AB  1C03               	btfss	3,0
  6991  08AC  2824               	goto	l6441
  6992  08AD                     l6471:	
  6993  08AD  1003               	clrc
  6994  08AE  0CB9               	rrf	__div_to_l_@quot+3,f
  6995  08AF  0CB8               	rrf	__div_to_l_@quot+2,f
  6996  08B0  0CB7               	rrf	__div_to_l_@quot+1,f
  6997  08B1  0CB6               	rrf	__div_to_l_@quot,f
  6998  08B2  0FBB               	incfsz	__div_to_l_@exp1,f
  6999  08B3  28AD               	goto	l6471
  7000  08B4  28C3               	goto	l6481
  7001  08B5                     l6475:	
  7002  08B5  3020               	movlw	32
  7003  08B6  023B               	subwf	__div_to_l_@exp1,w
  7004  08B7  1803               	btfsc	3,0
  7005  08B8  2824               	goto	l6441
  7006  08B9                     l3597:	
  7007  08B9  08BB               	movf	__div_to_l_@exp1,f
  7008  08BA  1903               	btfsc	3,2
  7009  08BB  28C3               	goto	l6481
  7010  08BC  1003               	clrc
  7011  08BD  0DB6               	rlf	__div_to_l_@quot,f
  7012  08BE  0DB7               	rlf	__div_to_l_@quot+1,f
  7013  08BF  0DB8               	rlf	__div_to_l_@quot+2,f
  7014  08C0  0DB9               	rlf	__div_to_l_@quot+3,f
  7015  08C1  03BB               	decf	__div_to_l_@exp1,f
  7016  08C2  28B9               	goto	l3597
  7017  08C3                     l6481:	
  7018  08C3  0839               	movf	__div_to_l_@quot+3,w
  7019  08C4  00AB               	movwf	?__div_to_l_+3
  7020  08C5  0838               	movf	__div_to_l_@quot+2,w
  7021  08C6  00AA               	movwf	?__div_to_l_+2
  7022  08C7  0837               	movf	__div_to_l_@quot+1,w
  7023  08C8  00A9               	movwf	?__div_to_l_+1
  7024  08C9  0836               	movf	__div_to_l_@quot,w
  7025  08CA  00A8               	movwf	?__div_to_l_
  7026  08CB  0008               	return
  7027  08CC                     __end_of__div_to_l_:	
  7028  08CC                     PL3:	
  7029  08CC  0084               	movwf	4
  7030  08CD  0800               	movf	0,w
  7031  08CE  00AE               	movwf	??__div_to_l_
  7032  08CF  0A84               	incf	4,f
  7033  08D0  0800               	movf	0,w
  7034  08D1  00AF               	movwf	??__div_to_l_+1
  7035  08D2  0A84               	incf	4,f
  7036  08D3  0800               	movf	0,w
  7037  08D4  00B0               	movwf	??__div_to_l_+2
  7038  08D5  0A84               	incf	4,f
  7039  08D6  0800               	movf	0,w
  7040  08D7  00B1               	movwf	??__div_to_l_+3
  7041  08D8  0008               	return
  7042                           
  7043                           	psect	text799
  7044  16C8                     __ptext799:	
  7045 ;; =============== function _isprint ends ============
  7046                           
  7047                           
  7048 ;; *************** function _ngat *****************
  7049 ;; Defined at:
  7050 ;;		line 64 in file "D:\TTVXL\Project TTVXL\BT03week12ttvxl\BT03week12ttvxl.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;		None
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;		None
  7055 ;; Return value:  Size  Location     Type
  7056 ;;		None               void
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0, pclath, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 60/0
  7062 ;;		Unchanged: FFF9F/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7064 ;;      Params:         0       0       0       0       0
  7065 ;;      Locals:         0       0       0       0       0
  7066 ;;      Temps:          0       2       0       0       0
  7067 ;;      Totals:         0       2       0       0       0
  7068 ;;Total ram usage:        2 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    2
  7071 ;; This function calls:
  7072 ;;		i1___ftadd
  7073 ;; This function is called by:
  7074 ;;		Interrupt level 1
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077  16C8                     _ngat:	
  7078                           
  7079                           ;BT03week12ttvxl.c: 65: TMR0 = 7;
  7080  16C8  3007               	movlw	7
  7081  16C9  0081               	movwf	1	;volatile
  7082                           
  7083                           ;BT03week12ttvxl.c: 67: if(T0IF)
  7084  16CA  1D0B               	btfss	11,2
  7085  16CB  2EFB               	goto	L21
  7086                           
  7087                           ;BT03week12ttvxl.c: 68: {
  7088                           ;BT03week12ttvxl.c: 69: dem++;
  7089  16CC  3080               	movlw	128
  7090  16CD  01F8               	clrf	?i1___ftadd
  7091  16CE  00F9               	movwf	?i1___ftadd+1
  7092  16CF  303F               	movlw	63
  7093  16D0  00FA               	movwf	?i1___ftadd+2
  7094  16D1  0863               	movf	_dem,w
  7095  16D2  00FB               	movwf	?i1___ftadd+3
  7096  16D3  0864               	movf	_dem+1,w
  7097  16D4  00FC               	movwf	?i1___ftadd+4
  7098  16D5  0865               	movf	_dem+2,w
  7099  16D6  00FD               	movwf	?i1___ftadd+5
  7100  16D7  2702  160A  118A   	fcall	i1___ftadd
  7101  16DA  0878               	movf	?i1___ftadd,w
  7102  16DB  00E3               	movwf	_dem
  7103  16DC  0879               	movf	?i1___ftadd+1,w
  7104  16DD  00E4               	movwf	_dem+1
  7105  16DE  087A               	movf	?i1___ftadd+2,w
  7106  16DF  00E5               	movwf	_dem+2
  7107                           
  7108                           ;BT03week12ttvxl.c: 70: if(dem == 500){
  7109  16E0  3A43               	xorlw	67
  7110  16E1  1D03               	skipz
  7111  16E2  2EE9               	goto	u256_25
  7112  16E3  30FA               	movlw	250
  7113  16E4  0664               	xorwf	_dem+1,w
  7114  16E5  1D03               	skipz
  7115  16E6  2EE9               	goto	u256_25
  7116  16E7  3000               	movlw	0
  7117  16E8  0663               	xorwf	_dem,w
  7118  16E9                     u256_25:	
  7119  16E9  1D03               	skipz
  7120  16EA  2EFA               	goto	i1l6365
  7121                           
  7122                           ;BT03week12ttvxl.c: 71: dem= 0;
  7123  16EB  01E3               	clrf	_dem
  7124  16EC  01E4               	clrf	_dem+1
  7125  16ED  01E5               	clrf	_dem+2
  7126                           
  7127                           ;BT03week12ttvxl.c: 72: xung = TMR1;
  7128  16EE  080E               	movf	14,w	;volatile
  7129  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  7130  16F0  00CC               	movwf	_xung^(0+128)
  7131  16F1  1283               	bcf	3,5	;RP0=0, select bank0
  7132  16F2  080F               	movf	15,w	;volatile
  7133  16F3  1683               	bsf	3,5	;RP0=1, select bank1
  7134  16F4  00CD               	movwf	(_xung^(0+128)+1)
  7135  16F5  01CE               	clrf	(_xung^(0+128)+2)
  7136  16F6  01CF               	clrf	(_xung^(0+128)+3)
  7137                           
  7138                           ;BT03week12ttvxl.c: 73: TMR1H=0; TMR1L=0;
  7139  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  7140  16F8  018F               	clrf	15	;volatile
  7141  16F9  018E               	clrf	14	;volatile
  7142  16FA                     i1l6365:	
  7143                           
  7144                           ;BT03week12ttvxl.c: 74: }
  7145                           ;BT03week12ttvxl.c: 75: }
  7146                           ;BT03week12ttvxl.c: 76: T0IF = 0;
  7147  16FA  110B               	bcf	11,2
  7148  16FB                     L21:	
  7149  16FB  0827               	movf	??_ngat+1,w
  7150  16FC  008A               	movwf	10
  7151  16FD  0E26               	swapf	??_ngat^0,w
  7152  16FE  0083               	movwf	3
  7153  16FF  0EFE               	swapf	126,f
  7154  1700  0E7E               	swapf	126,w
  7155  1701  0009               	retfie
  7156  1702                     __end_of_ngat:	
  7157  1702                     __ptext800:	
  7158 ;; =============== function _ngat ends ============
  7159                           
  7160                           
  7161 ;; *************** function i1___ftadd *****************
  7162 ;; Defined at:
  7163 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  __ftadd         3    8[COMMON] float 
  7166 ;;  __ftadd         3   11[COMMON] float 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  __ftadd         1    5[BANK0 ] unsigned char 
  7169 ;;  __ftadd         1    4[BANK0 ] unsigned char 
  7170 ;;  __ftadd         1    3[BANK0 ] unsigned char 
  7171 ;; Return value:  Size  Location     Type
  7172 ;;                  3    8[COMMON] float 
  7173 ;; Registers used:
  7174 ;;		wreg, status,2, status,0, pclath, cstack
  7175 ;; Tracked objects:
  7176 ;;		On entry : 60/0
  7177 ;;		On exit  : 60/0
  7178 ;;		Unchanged: FFF9F/0
  7179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7180 ;;      Params:         6       0       0       0       0
  7181 ;;      Locals:         0       3       0       0       0
  7182 ;;      Temps:          0       3       0       0       0
  7183 ;;      Totals:         6       6       0       0       0
  7184 ;;Total ram usage:       12 bytes
  7185 ;; Hardware stack levels used:    1
  7186 ;; Hardware stack levels required when called:    1
  7187 ;; This function calls:
  7188 ;;		i1___ftpack
  7189 ;; This function is called by:
  7190 ;;		_ngat
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193  1702                     i1___ftadd:	
  7194                           
  7195                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7196  1702  0878               	movf	i1___ftadd@f1,w
  7197  1703  00A0               	movwf	??i1___ftadd
  7198  1704  0879               	movf	i1___ftadd@f1+1,w
  7199  1705  00A1               	movwf	??i1___ftadd+1
  7200  1706  087A               	movf	i1___ftadd@f1+2,w
  7201  1707  00A2               	movwf	??i1___ftadd+2
  7202  1708  1003               	clrc
  7203  1709  0D21               	rlf	??i1___ftadd+1,w
  7204  170A  0D22               	rlf	??i1___ftadd+2,w
  7205  170B  00A5               	movwf	i1___ftadd@exp1
  7206  170C  087B               	movf	i1___ftadd@f2,w
  7207  170D  00A0               	movwf	??i1___ftadd
  7208  170E  087C               	movf	i1___ftadd@f2+1,w
  7209  170F  00A1               	movwf	??i1___ftadd+1
  7210  1710  087D               	movf	i1___ftadd@f2+2,w
  7211  1711  00A2               	movwf	??i1___ftadd+2
  7212  1712  1003               	clrc
  7213  1713  0D21               	rlf	??i1___ftadd+1,w
  7214  1714  0D22               	rlf	??i1___ftadd+2,w
  7215  1715  00A4               	movwf	i1___ftadd@exp2
  7216  1716  0825               	movf	i1___ftadd@exp1,w
  7217  1717  1903               	btfsc	3,2
  7218  1718  2F25               	goto	i1l6787
  7219  1719  0824               	movf	i1___ftadd@exp2,w
  7220  171A  0225               	subwf	i1___ftadd@exp1,w
  7221  171B  0824               	movf	i1___ftadd@exp2,w
  7222  171C  1803               	skipnc
  7223  171D  2F2D               	goto	L22
  7224  171E  00A0               	movwf	??i1___ftadd
  7225  171F  0825               	movf	i1___ftadd@exp1,w
  7226  1720  02A0               	subwf	??i1___ftadd,f
  7227  1721  3019               	movlw	25
  7228  1722  0220               	subwf	??i1___ftadd,w
  7229  1723  1C03               	skipc
  7230  1724  2F2C               	goto	i1l6791
  7231  1725                     i1l6787:	
  7232  1725  087B               	movf	i1___ftadd@f2,w
  7233  1726  00F8               	movwf	?i1___ftadd
  7234  1727  087C               	movf	i1___ftadd@f2+1,w
  7235  1728  00F9               	movwf	?i1___ftadd+1
  7236  1729  087D               	movf	i1___ftadd@f2+2,w
  7237  172A  00FA               	movwf	?i1___ftadd+2
  7238  172B  0008               	return
  7239  172C                     i1l6791:	
  7240  172C  0824               	movf	i1___ftadd@exp2,w
  7241  172D                     L22:	
  7242  172D  1903               	btfsc	3,2
  7243  172E  0008               	return
  7244  172F  0825               	movf	i1___ftadd@exp1,w
  7245  1730  0224               	subwf	i1___ftadd@exp2,w
  7246  1731  1803               	skipnc
  7247  1732  2F3B               	goto	i1l6797
  7248  1733  0825               	movf	i1___ftadd@exp1,w
  7249  1734  00A0               	movwf	??i1___ftadd
  7250  1735  0824               	movf	i1___ftadd@exp2,w
  7251  1736  02A0               	subwf	??i1___ftadd,f
  7252  1737  3019               	movlw	25
  7253  1738  0220               	subwf	??i1___ftadd,w
  7254  1739  1803               	btfsc	3,0
  7255  173A  0008               	return
  7256  173B                     i1l6797:	
  7257  173B  3006               	movlw	6
  7258  173C  00A3               	movwf	i1___ftadd@sign
  7259  173D  1BFA               	btfsc	i1___ftadd@f1+2,7
  7260  173E  17A3               	bsf	i1___ftadd@sign,7
  7261  173F  1BFD               	btfsc	i1___ftadd@f2+2,7
  7262  1740  1723               	bsf	i1___ftadd@sign,6
  7263  1741  17F9               	bsf	i1___ftadd@f1+1,7
  7264  1742  01FA               	clrf	i1___ftadd@f1+2
  7265  1743  17FC               	bsf	i1___ftadd@f2+1,7
  7266  1744  01FD               	clrf	i1___ftadd@f2+2
  7267  1745  0824               	movf	i1___ftadd@exp2,w
  7268  1746  0225               	subwf	i1___ftadd@exp1,w
  7269  1747  1803               	skipnc
  7270  1748  2F62               	goto	i1l6819
  7271  1749                     i1l6809:	
  7272  1749  1003               	clrc
  7273  174A  0DFB               	rlf	i1___ftadd@f2,f
  7274  174B  0DFC               	rlf	i1___ftadd@f2+1,f
  7275  174C  0DFD               	rlf	i1___ftadd@f2+2,f
  7276  174D  03A4               	decf	i1___ftadd@exp2,f
  7277  174E  0824               	movf	i1___ftadd@exp2,w
  7278  174F  0625               	xorwf	i1___ftadd@exp1,w
  7279  1750  1903               	skipnz
  7280  1751  2F5D               	goto	i1l6817
  7281  1752  03A3               	decf	i1___ftadd@sign,f
  7282  1753  0823               	movf	i1___ftadd@sign,w
  7283  1754  3907               	andlw	7
  7284  1755  1903               	btfsc	3,2
  7285  1756  2F5D               	goto	i1l6817
  7286  1757  2F49               	goto	i1l6809
  7287  1758                     i1l6815:	
  7288  1758  1003               	clrc
  7289  1759  0CFA               	rrf	i1___ftadd@f1+2,f
  7290  175A  0CF9               	rrf	i1___ftadd@f1+1,f
  7291  175B  0CF8               	rrf	i1___ftadd@f1,f
  7292  175C  0AA5               	incf	i1___ftadd@exp1,f
  7293  175D                     i1l6817:	
  7294  175D  0825               	movf	i1___ftadd@exp1,w
  7295  175E  0624               	xorwf	i1___ftadd@exp2,w
  7296  175F  1903               	btfsc	3,2
  7297  1760  2F7E               	goto	i1l3360
  7298  1761  2F58               	goto	i1l6815
  7299  1762                     i1l6819:	
  7300  1762  0825               	movf	i1___ftadd@exp1,w
  7301  1763  0224               	subwf	i1___ftadd@exp2,w
  7302  1764  1803               	skipnc
  7303  1765  2F7E               	goto	i1l3360
  7304  1766                     i1l6821:	
  7305  1766  1003               	clrc
  7306  1767  0DF8               	rlf	i1___ftadd@f1,f
  7307  1768  0DF9               	rlf	i1___ftadd@f1+1,f
  7308  1769  0DFA               	rlf	i1___ftadd@f1+2,f
  7309  176A  03A5               	decf	i1___ftadd@exp1,f
  7310  176B  0824               	movf	i1___ftadd@exp2,w
  7311  176C  0625               	xorwf	i1___ftadd@exp1,w
  7312  176D  1903               	skipnz
  7313  176E  2F7A               	goto	i1l6829
  7314  176F  03A3               	decf	i1___ftadd@sign,f
  7315  1770  0823               	movf	i1___ftadd@sign,w
  7316  1771  3907               	andlw	7
  7317  1772  1903               	btfsc	3,2
  7318  1773  2F7A               	goto	i1l6829
  7319  1774  2F66               	goto	i1l6821
  7320  1775                     i1l6827:	
  7321  1775  1003               	clrc
  7322  1776  0CFD               	rrf	i1___ftadd@f2+2,f
  7323  1777  0CFC               	rrf	i1___ftadd@f2+1,f
  7324  1778  0CFB               	rrf	i1___ftadd@f2,f
  7325  1779  0AA4               	incf	i1___ftadd@exp2,f
  7326  177A                     i1l6829:	
  7327  177A  0825               	movf	i1___ftadd@exp1,w
  7328  177B  0624               	xorwf	i1___ftadd@exp2,w
  7329  177C  1D03               	skipz
  7330  177D  2F75               	goto	i1l6827
  7331  177E                     i1l3360:	
  7332  177E  1FA3               	btfss	i1___ftadd@sign,7
  7333  177F  2F89               	goto	i1l6835
  7334  1780  30FF               	movlw	255
  7335  1781  06F8               	xorwf	i1___ftadd@f1,f
  7336  1782  06F9               	xorwf	i1___ftadd@f1+1,f
  7337  1783  06FA               	xorwf	i1___ftadd@f1+2,f
  7338  1784  0AF8               	incf	i1___ftadd@f1,f
  7339  1785  1903               	skipnz
  7340  1786  0AF9               	incf	i1___ftadd@f1+1,f
  7341  1787  1903               	skipnz
  7342  1788  0AFA               	incf	i1___ftadd@f1+2,f
  7343  1789                     i1l6835:	
  7344  1789  1F23               	btfss	i1___ftadd@sign,6
  7345  178A  2F94               	goto	i1l6841
  7346  178B  30FF               	movlw	255
  7347  178C  06FB               	xorwf	i1___ftadd@f2,f
  7348  178D  06FC               	xorwf	i1___ftadd@f2+1,f
  7349  178E  06FD               	xorwf	i1___ftadd@f2+2,f
  7350  178F  0AFB               	incf	i1___ftadd@f2,f
  7351  1790  1903               	skipnz
  7352  1791  0AFC               	incf	i1___ftadd@f2+1,f
  7353  1792  1903               	skipnz
  7354  1793  0AFD               	incf	i1___ftadd@f2+2,f
  7355  1794                     i1l6841:	
  7356  1794  01A3               	clrf	i1___ftadd@sign
  7357  1795  0878               	movf	i1___ftadd@f1,w
  7358  1796  07FB               	addwf	i1___ftadd@f2,f
  7359  1797  0879               	movf	i1___ftadd@f1+1,w
  7360  1798  1103               	clrz
  7361  1799  1803               	skipnc
  7362  179A  0A79               	incf	i1___ftadd@f1+1,w
  7363  179B  1D03               	btfss	3,2
  7364  179C  07FC               	addwf	i1___ftadd@f2+1,f
  7365  179D  087A               	movf	i1___ftadd@f1+2,w
  7366  179E  1103               	clrz
  7367  179F  1803               	skipnc
  7368  17A0  0A7A               	incf	i1___ftadd@f1+2,w
  7369  17A1  1D03               	btfss	3,2
  7370  17A2  07FD               	addwf	i1___ftadd@f2+2,f
  7371  17A3  1FFD               	btfss	i1___ftadd@f2+2,7
  7372  17A4  2FB0               	goto	i1l6853
  7373  17A5  30FF               	movlw	255
  7374  17A6  06FB               	xorwf	i1___ftadd@f2,f
  7375  17A7  06FC               	xorwf	i1___ftadd@f2+1,f
  7376  17A8  06FD               	xorwf	i1___ftadd@f2+2,f
  7377  17A9  0AFB               	incf	i1___ftadd@f2,f
  7378  17AA  1903               	skipnz
  7379  17AB  0AFC               	incf	i1___ftadd@f2+1,f
  7380  17AC  1903               	skipnz
  7381  17AD  0AFD               	incf	i1___ftadd@f2+2,f
  7382  17AE  01A3               	clrf	i1___ftadd@sign
  7383  17AF  0AA3               	incf	i1___ftadd@sign,f
  7384  17B0                     i1l6853:	
  7385  17B0  087B               	movf	i1___ftadd@f2,w
  7386  17B1  00F0               	movwf	?i1___ftpack
  7387  17B2  087C               	movf	i1___ftadd@f2+1,w
  7388  17B3  00F1               	movwf	?i1___ftpack+1
  7389  17B4  087D               	movf	i1___ftadd@f2+2,w
  7390  17B5  00F2               	movwf	?i1___ftpack+2
  7391  17B6  0825               	movf	i1___ftadd@exp1,w
  7392  17B7  00F3               	movwf	?i1___ftpack+3
  7393  17B8  0823               	movf	i1___ftadd@sign,w
  7394  17B9  00F4               	movwf	?i1___ftpack+4
  7395  17BA  27C2               	fcall	i1___ftpack
  7396  17BB  0870               	movf	?i1___ftpack,w
  7397  17BC  00F8               	movwf	?i1___ftadd
  7398  17BD  0871               	movf	?i1___ftpack+1,w
  7399  17BE  00F9               	movwf	?i1___ftadd+1
  7400  17BF  0872               	movf	?i1___ftpack+2,w
  7401  17C0  00FA               	movwf	?i1___ftadd+2
  7402  17C1  0008               	return
  7403  17C2                     __end_ofi1___ftadd:	
  7404  17C2                     __ptext801:	
  7405 ;; =============== function i1___ftadd ends ============
  7406                           
  7407                           
  7408 ;; *************** function i1___ftpack *****************
  7409 ;; Defined at:
  7410 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  __ftpack        3    0[COMMON] unsigned um
  7413 ;;  __ftpack        1    3[COMMON] unsigned char 
  7414 ;;  __ftpack        1    4[COMMON] unsigned char 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;		None
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  3    0[COMMON] float 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 60/0
  7423 ;;		On exit  : 60/0
  7424 ;;		Unchanged: FFF9F/0
  7425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7426 ;;      Params:         5       0       0       0       0
  7427 ;;      Locals:         0       0       0       0       0
  7428 ;;      Temps:          3       0       0       0       0
  7429 ;;      Totals:         8       0       0       0       0
  7430 ;;Total ram usage:        8 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		i1___ftadd
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438  17C2                     i1___ftpack:	
  7439                           
  7440                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  7441  17C2  0873               	movf	i1___ftpack@exp,w
  7442  17C3  1903               	btfsc	3,2
  7443  17C4  2FCA               	goto	i1l6861
  7444  17C5  0872               	movf	i1___ftpack@arg+2,w
  7445  17C6  0471               	iorwf	i1___ftpack@arg+1,w
  7446  17C7  0470               	iorwf	i1___ftpack@arg,w
  7447  17C8  1D03               	skipz
  7448  17C9  2FD3               	goto	i1l6867
  7449  17CA                     i1l6861:	
  7450  17CA  01F0               	clrf	?i1___ftpack
  7451  17CB  01F1               	clrf	?i1___ftpack+1
  7452  17CC  01F2               	clrf	?i1___ftpack+2
  7453  17CD  0008               	return
  7454  17CE                     i1l6865:	
  7455  17CE  0AF3               	incf	i1___ftpack@exp,f
  7456  17CF  1003               	clrc
  7457  17D0  0CF2               	rrf	i1___ftpack@arg+2,f
  7458  17D1  0CF1               	rrf	i1___ftpack@arg+1,f
  7459  17D2  0CF0               	rrf	i1___ftpack@arg,f
  7460  17D3                     i1l6867:	
  7461  17D3  30FE               	movlw	254
  7462  17D4  0572               	andwf	i1___ftpack@arg+2,w
  7463  17D5  1903               	btfsc	3,2
  7464  17D6  2FE2               	goto	i1l6871
  7465  17D7  2FCE               	goto	i1l6865
  7466  17D8                     i1l6869:	
  7467  17D8  0AF3               	incf	i1___ftpack@exp,f
  7468  17D9  0AF0               	incf	i1___ftpack@arg,f
  7469  17DA  1903               	skipnz
  7470  17DB  0AF1               	incf	i1___ftpack@arg+1,f
  7471  17DC  1903               	skipnz
  7472  17DD  0AF2               	incf	i1___ftpack@arg+2,f
  7473  17DE  1003               	clrc
  7474  17DF  0CF2               	rrf	i1___ftpack@arg+2,f
  7475  17E0  0CF1               	rrf	i1___ftpack@arg+1,f
  7476  17E1  0CF0               	rrf	i1___ftpack@arg,f
  7477  17E2                     i1l6871:	
  7478  17E2  30FF               	movlw	255
  7479  17E3  0572               	andwf	i1___ftpack@arg+2,w
  7480  17E4  1903               	btfsc	3,2
  7481  17E5  2FEC               	goto	i1l6875
  7482  17E6  2FD8               	goto	i1l6869
  7483  17E7                     i1l6873:	
  7484  17E7  03F3               	decf	i1___ftpack@exp,f
  7485  17E8  1003               	clrc
  7486  17E9  0DF0               	rlf	i1___ftpack@arg,f
  7487  17EA  0DF1               	rlf	i1___ftpack@arg+1,f
  7488  17EB  0DF2               	rlf	i1___ftpack@arg+2,f
  7489  17EC                     i1l6875:	
  7490  17EC  1FF1               	btfss	i1___ftpack@arg+1,7
  7491  17ED  2FE7               	goto	i1l6873
  7492  17EE  1C73               	btfss	i1___ftpack@exp,0
  7493  17EF  13F1               	bcf	i1___ftpack@arg+1,7
  7494  17F0  1003               	clrc
  7495  17F1  0CF3               	rrf	i1___ftpack@exp,f
  7496  17F2  0873               	movf	i1___ftpack@exp,w
  7497  17F3  00F7               	movwf	??i1___ftpack+2
  7498  17F4  01F6               	clrf	??i1___ftpack+1
  7499  17F5  01F5               	clrf	??i1___ftpack
  7500  17F6  0875               	movf	??i1___ftpack,w
  7501  17F7  04F0               	iorwf	i1___ftpack@arg,f
  7502  17F8  0876               	movf	??i1___ftpack+1,w
  7503  17F9  04F1               	iorwf	i1___ftpack@arg+1,f
  7504  17FA  0877               	movf	??i1___ftpack+2,w
  7505  17FB  04F2               	iorwf	i1___ftpack@arg+2,f
  7506  17FC  0874               	movf	i1___ftpack@sign,w
  7507  17FD  1D03               	skipz
  7508  17FE  17F2               	bsf	i1___ftpack@arg+2,7
  7509  17FF  0008               	return
  7510  1800                     __end_ofi1___ftpack:	
  7511                           
  7512                           	psect	intentry
  7513  0004                     __pintentry:	
  7514                           ; Regs used in _ngat: [wreg+status,2+status,0+pclath+cstack]
  7515                           
  7516  0004                     interrupt_function:	
  7517  007E                     saved_w	set	btemp
  7518  0004  00FE               	movwf	btemp
  7519  0005  0E03               	swapf	3,w
  7520  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7521  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7522  0008  00A6               	movwf	??_ngat
  7523  0009  080A               	movf	10,w
  7524  000A  00A7               	movwf	??_ngat+1
  7525  000B  160A  118A  2EC8   	ljmp	_ngat
  7526                           
  7527                           	psect	text802
  7528  0000                     __ptext802:	
  7529 ;; =============== function i1___ftpack ends ============
  7530                           
  7531  007E                     btemp	set	126	;btemp
  7532  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Nov 15 16:16:32 2022

         ___altoft@exp 0034                      _v 00C9                      pc 0002             i1___ftpack 17C2  
       ___bmul@product 0032          ___altoft@sign 0035           ___awdiv@sign 0033                     fsr 0004  
  ___wmul@multiplicand 002A           ___ftadd@exp1 005F           ___ftadd@exp2 005E          ?_lcd_put_byte 0028  
         ___ftadd@sign 005D           i1___ftadd@f1 0078           i1___ftadd@f2 007B                    _GIE 005F  
                  _RD1 0041                    _RD2 0042                    _RD3 0043                    _RD4 0044  
                  _RD5 0045                    _RD6 0046                    _RD7 0047                    _PS0 0408  
                  _PS1 0409                    _PS2 040A                    _PSA 040B                    _dem 0063  
                  fsr0 0004                    indf 0000           ___awmod@sign 002D           ___ftdiv@cntr 003F  
         ___ftdiv@sign 0044                   l2120 0000                   l2202 002E                   l2131 0000  
                 l2123 0000                   l1059 0000                   l2217 00AC                   l2154 0000  
                 l3302 0000                   l2262 0393                   l3332 0000                   l3416 062F  
                 l3360 1682                   l2296 055C                   l3281 0000                   l3329 09FB  
                 l3338 0000                   l3531 0000                   l3517 0000                   l3286 0000  
                 l3382 0000                   l3463 0000                   l3296 0000                   l3449 0000  
                 l7001 0000                   l3554 06FC                   l3547 0000                   l3459 0000  
                 l3539 0000                   l7005 0000                   l3389 0C91                   l7013 0000  
                 l3590 0000                   l3478 0000                   l7007 0000                   l7031 0000  
                 l7103 0F3E                   l6401 0000                   l7009 16B4                   l7041 0000  
                 l7033 0000                   l7025 0000                   l7105 0000                   l7113 0000  
                 l8001 0000                   l6411 0000                   l6403 0000                   l7051 0000  
                 l7043 0CA4                   l7035 0000                   l7027 0000                   l7019 0C80  
                 l7107 0000                   l7123 0C52                   l7115 0000                   l7203 0000  
                 l7211 0000                   l8003 0000                   l6405 0000                   l3597 08B9  
                 l3589 089A                   l6501 0000                   l7053 0000                   l7037 0000  
                 l7029 0000                   l7109 0000                   l7125 0C5D                   l7117 0000  
                 l7133 07A8                   l7141 0000                   l6415 0000                   l6407 0000  
                 l6511 0000                   l6503 05DE                   l7047 0000                   l7039 0000  
                 l7071 0000                   l7063 0EFC                   l7135 07B3                   l7151 0B08  
                 l7143 0000                   l7207 09C6                   l7223 0D47                   l7215 0000  
                 l6425 06F0                   l6409 06C7                   l6441 0824                   l6521 0000  
                 l6601 0000                   l7081 0000                   l7073 0000                   l7057 0000  
                 l7129 0000                   l7145 0000                   l7241 0E0D                   l7233 0DA3  
                 l6435 0706                   l6427 0000                   l6419 0000                   l6451 0000  
                 l6443 0829                   l6507 05E6                   l6531 0000                   l6523 09F5  
                 l6611 062B                   l7091 0F28                   l7083 0000                   l7075 0000  
                 l7171 0B44                   l7163 0B2C                   l7155 0B14                   l7147 0000  
                 l7139 0000                   l6381 0000                   l6429 06F8                   l6453 0000  
                 l6509 0000                   l6517 0000                   l6541 0000                   l6621 0647  
                 l6701 05B0                   l7093 0000                   l7085 0000                   l7077 0000  
                 l7069 0F0D                   l7149 0000                   l7181 0A56                   l7229 0D8C  
                 l7261 0A6F                   l6375 0C39                   l6367 0000                   l6391 0000  
                 l6471 08AD                   l6463 0000                   l6455 0000                   l6439 0000  
                 l6535 0000                   l6527 0000                   l6519 0000                   l6543 0000  
                 l6607 0623                   l6631 0000                   l7095 0000                   l7087 0F1E  
                 l7079 0000                   l7175 0B50                   l7167 0B38                   l7159 0B20  
                 l7183 0A57                   l7247 0E52                   l7263 0A76                   l6369 0000  
                 l6393 06A5                   l6481 08C3                   l6473 0000                   l6465 0000  
                 l6457 085A                   l6449 0000                   l6537 0A08                   l6553 0A23  
                 l6545 0A0F                   l6561 0000                   l6617 0639                   l6609 0000  
                 l6641 0000                   l6633 0E73                   l6625 0000                   l6705 05BF  
                 l7097 0000                   l7185 0000                   l7177 0000                   l7193 0000  
                 l7265 0A7A                   l7273 0A8D                   l7257 0000                   l6387 05DA  
                 l6379 0000                   l6395 06AA                   l6475 08B5                   l6459 0000  
                 l6555 0000                   l6547 0000                   l6571 0F7F                   l6563 0F71  
                 l6619 0000                   l6651 0000                   l6627 0000                   l6707 0000  
                 l7099 0F34                   l7187 0A60                   l7179 0000                   l7259 0A69  
                 l7275 0000                   l6493 0000                   l6485 0000                   l6549 0000  
                 l6581 0000                   l6573 0F89                   l6661 0EA1                   l6637 0000  
                 l6709 0000                   l6733 0000                   l6717 0000                   l6901 0B8E  
                 l7189 0000                   l7269 0A86                   l7701 0000                   l6399 0000  
                 l6495 0000                   l6487 0F5D                   l6583 0000                   l6575 0F8E  
                 l6567 0F75                   l6559 0000                   l6591 0604                   l6663 0000  
                 l6655 0000                   l6639 0E7C                   l6727 0664                   l6719 0000  
                 l6751 0EB8                   l6743 0000                   l6911 0BC7                   l6903 0B9E  
                 l7199 0971                   l7711 0000                   l6585 0000                   l6577 0F93  
                 l6569 0F7A                   l6593 0000                   l6665 0EA9                   l6649 0E8A  
                 l6737 0000                   l6729 0000                   l6745 0000                   l6913 0BD4  
                 l6905 0000                   l6921 0000                   l7713 00AE                   l7705 0000  
                 l6595 0000                   l6587 0000                   l6659 0000                   l6683 0000  
                 l6739 068F                   l6763 0ECB                   l6771 0EDE                   l6755 0EBF  
                 l6915 0BE3                   l6907 0000                   l6931 0000                   l6923 0000  
                 l7811 0000                   l7707 007F                   l6597 0000                   l6589 05FF  
                 l6677 0573                   l6685 0598                   l6669 0000                   l6773 0000  
                 l6749 0000                   l6917 0000                   l6909 0000                   l6925 0000  
                 l7813 02D3                   l7805 02A5                   l7741 0000                   l7733 0000  
                 l7725 00D1                   l7717 00B1                   l7709 00A8                   l6599 0000  
                 l6775 0EE6                   l6919 0000                   l6927 0000                   l6943 1629  
                 l6935 0000                   l7903 04A6                   l7831 0306                   l7823 02FA  
                 l7815 0000                   l7751 0000                   l7743 0000                   l7735 010D  
                 l7727 0000                   l7719 00C5                   l7671 0000                   l6689 0000  
                 l6697 0000                   l6769 0000                   l6929 0000                   l6961 0000  
                 l6953 163F                   l6937 0000                   l7665 0000                   l7921 04E5  
                 l7833 0312                   l7745 0000                   l7737 0000                   l7729 0000  
                 l6971 165C                   l6963 0000                   l6955 0000                   l6947 1630  
                 l6939 0000                   l7667 0000                   l7923 04E8                   l7915 04C9  
                 l7851 035E                   l7843 032D                   l7835 0000                   l7827 02FD  
                 l7819 02F2                   l7771 01EB                   l7763 01A4                   l7755 016A  
                 l7747 0000                   l7691 0000                   l7683 0030                   l6893 0000  
                 l6885 0000                   l6973 1661                   l6965 164D                   l6949 0000  
                 l7941 0512                   l7933 0000                   l7917 04CC                   l7909 04B3  
                 l7861 03B6                   l7853 0373                   l7845 035A                   l7829 0000  
                 l7837 031B                   l7757 0000                   l7749 0000                   l7693 0000  
                 l7685 003B                   l7677 0029                   l6895 0000                   l6887 0000  
                 l6991 168D                   l6983 1679                   l6967 0000                   l6975 1666  
                 l7935 0501                   l7791 0000                   l7783 0227                   l7759 0000  
                 l7767 01B6                   l7871 0431                   l7695 0070                   l7679 0000  
                 l7951 0000                   l6897 0000                   l6889 0000                   l6985 167E  
                 l6977 166A                   l7937 0505                   l7929 04F2                   l7881 044D  
                 l7873 0000                   l7857 0382                   l7849 0000                   l7793 0000  
                 l7689 004A                   l7961 0000                   l7953 0000                   l6899 0B7F  
                 l6995 0000                   l6979 0000                   l7939 0000                   l7947 051A  
                 l7875 0000                   l7867 0000                   l7859 0000                   l7795 0268  
                 l7779 0216                   l7699 0000                   l7971 0000                   l7963 0000  
                 l7955 0000                   l6997 1698                   l6989 0000                   l7893 0000  
                 l7869 0423                   l7797 0000                   l7789 0000                   l7949 0014  
                 l7981 0000                   l7973 0000                   l7965 0000                   l7957 0000  
                 l6999 0000                   l7895 047D                   l7887 044F                   l7799 02A3  
                 l7991 0000                   l7983 0000                   l7975 0000                   l7967 0000  
                 l7959 0000                   l7993 0000                   l7985 0000                   l7977 0000  
                 l7969 0000                   l7899 048E                   l7995 1571                   l7987 0000  
                 l7979 0000                   l7997 0000                   l7989 0000                   l7999 0000  
                 STR_1 107C                   STR_2 1087                   _T0IE 005D                   _T0IF 005A  
                 _T0CS 040D                   u3145 0581                   u3225 0677                   u3095 0E93  
                 u5015 02CC                   u5105 0367                   u3610 0B8B                   u2635 06D6  
                 u5115 037D                   u2725 087E                   u3285 0ED1                   u5205 049E  
                 u3710 0BE0                   u3630 0B9B                   u5065 030F                   u3730 0BF0  
                 u3650 0BA9                   u5075 0324                   u5245 04BF                   u3670 0BC4  
                 u3590 0B7C                   u5407 0B01                   u5255 04D7                   u5175 0476  
                 u3744 0BF3                   u3664 0BAC                   u5417 0C0D                   u3690 0BD1  
                 u5507 0BFC                   u5427 0C14                   u5195 0488                   u2980 0000  
                 u5437 0C1F                   u5357 0AA8                   u4910 0000                   u5447 0C26  
                 u5367 0ABB                   u2985 0608                   u5457 0B64                   u5377 0ACE  
                 u5467 0B6B                   u5387 0AE3                   u4915 0123                   u5477 0BAE  
                 u5397 0AF2                   u5487 0BB5                   u3975 0CB2                   u5497 0BF5  
                 u4955 01C0                   u4965 01F5                   u4995 0214                   _TMR0 0001  
                 _TMR1 000E                   _main 1551                   _ngat 16C8           ___ftpack@arg 0028  
         ___ftpack@exp 002B           lcd_busy@busy 0029                   btemp 007E                   _xung 00CC  
                 start 000E      ___bmul@multiplier 0033           ___ftmul@cntr 0052           ___ftmul@sign 0053  
         ___fttol@exp1 0042           ___fttol@lval 003E         ??_lcd_put_byte 0029                  ?_main 0070  
                ?_ngat 0070        __end_of___awdiv 0EAE        __end_of___lbdiv 0A0A        __end_of___ftadd 16C8  
      __end_of___awmod 0EEB        __end_of___lbmod 0A27        __end_of___ftdiv 0CD7        __end_of___ftneg 07A6  
                _ANSEL 0188        __end_of___lldiv 0698        __end_of___ftmul 0F5A        ___awdiv@divisor 002E  
      __end_of___llmod 05A1        __end_of___ftsub 1606        __end_of___fttol 0650        ___awdiv@counter 0032  
                _TMR1H 000F                  _TMR1L 000E         i1___ftadd@exp1 0025         i1___ftadd@exp2 0024  
                _TRISD 0088         i1___ftadd@sign 0023           ___lltoft@exp 0034                  _scale 0CD7  
      __end_of_isdigit 05DC          ___ftpack@sign 002C                  _putch 055D        __end_of_isprint 0C3B  
                pclath 000A                  status 0003                  wtemp0 007E     __size_ofi1___ftadd 00C0  
      ___lbdiv@divisor 002D        ___lbdiv@counter 002F         i1___ftpack@arg 0070         i1___ftpack@exp 0073  
         __end_of_main 15E0           __end_of_ngat 1702            ?i1___ftpack 0070          lcd_gotoxy@col 002E  
        lcd_gotoxy@row 002D                 ??_main 0063          ___fttol@sign1 003D                 ??_ngat 0026  
 __size_of__tdiv_to_l_ 0077       __end_of___altoft 0C6F       ___llmod@dividend 0039                 ?_scale 0054  
     ___awdiv@dividend 0030                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lltoft 07C6                 i1l1064 0000                 i1l3360 177E                 _T1SYNC 0082  
               i1l6351 0000                 i1l6361 0000                 i1l6353 0000                 i1l6363 0000  
               i1l6357 0000                 i1l6365 16FA                 i1l6811 0000                 i1l6821 1766  
               i1l6805 0000                 i1l6823 0000                 i1l6815 1758                 i1l6807 0000  
               i1l6841 1794                 i1l6833 0000                 i1l6817 175D                 i1l6809 1749  
               i1l6851 0000                 i1l6843 0000                 i1l6835 1789                 i1l6827 1775  
               i1l6819 1762                 i1l6861 17CA                 i1l6853 17B0                 i1l6845 0000  
               i1l6829 177A                 i1l6781 0000                 i1l6871 17E2                 i1l6839 0000  
               i1l6791 172C                 i1l6783 0000                 i1l6881 0000                 i1l6873 17E7  
               i1l6865 17CE                 i1l6857 0000                 i1l6849 0000                 i1l6793 0000  
               i1l6883 0000                 i1l6875 17EC                 i1l6867 17D3                 i1l6859 0000  
               i1l6787 1725                 i1l6779 0000                 i1l6869 17D8                 i1l6797 173B  
               i1l6879 0000                 i1l6799 0000                 u256_25 16E9                 _TMR1GE 0086  
               _TMR1CS 0081                 _TMR1ON 0080                 _TRISA4 042C                 _TRISD1 0441  
               _TRISE0 0448                 _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444  
               _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C2D  
     __end_of_lcd_init 0B57       __end_of_lcd_putc 0A96                 ___bmul 0F5A                 ___ftge 05A1  
               ___wmul 05DC              ??___awdiv 0032              ??___lbdiv 002E              ??___ftadd 005A  
            ??___awmod 002C              ??___lbmod 0029              ??___ftdiv 003C              ??___ftneg 002B  
            ??___lldiv 0030              ??___ftmul 004B              ??___llmod 003D              ??___ftsub 0060  
            ??___fttol 003A                 _fround 08D9       ___awdiv@quotient 0034        ___awmod@divisor 0028  
      ___awmod@counter 002C                 _printf 0011          lcd_put_byte@b 0028  ___ftmul@f3_as_product 004F  
    __end_ofi1___ftadd 17C2              ??_isdigit 0028                 saved_w 007E              ??_isprint 0028  
               putch@c 0031       ___lbdiv@dividend 002E    __size_ofi1___ftpack 003E        ___lbmod@divisor 0028  
           ___altoft@c 0030        ___lbmod@counter 002B   __end_of_lcd_put_byte 0C02             ___ftadd@f1 0054  
           ___ftadd@f2 0057             ___ftge@ff1 0028             ___ftge@ff2 002B        i1___ftpack@sign 0074  
           ___ftdiv@f1 0039             ___ftdiv@f2 0036             ___ftdiv@f3 0040             ___ftneg@f1 0028  
  ___bmul@multiplicand 0031             ___ftmul@f1 0045             ___ftmul@f2 0048             ___ftsub@f1 00A3  
           ___ftsub@f2 00A0             ___fttol@f1 0036         __pcstackCOMMON 0070             ___lltoft@c 0030  
        __end_of_scale 0E69          __end_of_putch 0563       ___lbdiv@quotient 0030             __div_to_l_ 080D  
    lcd_gotoxy@address 002F        __div_to_l_@exp1 003B        __div_to_l_@cntr 003A                ??_scale 0057  
      __div_to_l_@quot 0036                ??_putch 0031             __pbssBANK0 0063             __pbssBANK1 00C9  
        __div_to_l_@f1 0028          __div_to_l_@f2 002B             __pmaintext 1551                ?___bmul 0031  
              ?___ftge 0028                ?___wmul 0028             __pintentry 0004              ?___altoft 0030  
              ?_fround 0060              ?___ftpack 0028                ?_printf 00A7              ?___lltoft 0030  
              _T1CKPS0 0084                _T1CKPS1 0085             _lcd_gotoxy 0A4F              ?_lcd_busy 0070  
            ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4112 005B        __size_of___bmul 000F  
      __size_of___ftge 002C           ??i1___ftpack 0075                ___awdiv 0E69                ___lbdiv 09EE  
              ___ftadd 1606                ___awmod 0EAE                ___lbmod 0A0A                ___ftdiv 0C6F  
              ___ftneg 079E                ___lldiv 0650        __size_of___wmul 0019                ___ftmul 0EEB  
              ___llmod 0563                ___ftsub 15E0                ___fttol 05F5             ??___altoft 0034  
           ??___ftpack 002D        __size_of_fround 0115             ??___lltoft 0034        __size_of_printf 054C  
          ?__div_to_l_ 0028                _dpowers 1054                _isdigit 05CD       ___awmod@dividend 002A  
              _isprint 0C2D  __size_of_lcd_put_byte 00AB             ??_lcd_busy 0028             ??_lcd_init 002D  
           ??_lcd_putc 0030   end_of_initialization 07D1         lcd_put_byte@rs 002B     __end_ofi1___ftpack 1800  
      ___lldiv@divisor 0028        ___lldiv@counter 0034                printf@c 00C8                printf@f 00BC  
       __tdiv_to_l_@f1 0028         __tdiv_to_l_@f2 002B          ??__tdiv_to_l_ 002E           _lcd_put_byte 0B57  
     ___lbmod@dividend 002A            ?_lcd_gotoxy 002D              i1___ftadd 1702            ___lbmod@rem 002C  
          printf@integ 00B5            ___ftdiv@exp 0043            printf@width 00C1    __size_of__div_to_l_ 00BF  
          ___ftmul@exp 004E         __end_of___bmul 0F69         __end_of___ftge 05CD         __end_of___wmul 05F5  
       __end_of_fround 09EE         __end_of_printf 055D    start_initialization 07C6    __end_of__tdiv_to_l_ 070F  
           ?i1___ftadd 0078        ___llmod@divisor 0035        ___llmod@counter 003D               ??___bmul 0032  
             ??___ftge 002E    __size_of_lcd_gotoxy 0018               ??___wmul 002C               ??_fround 0063  
             ??_printf 00AB      __size_of___altoft 002F             fround@prec 00A6      __size_of___ftpack 003E  
    __size_of___lltoft 0020          __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3673 0028  
    __size_of_lcd_busy 002B      __size_of_lcd_init 00C1      __size_of_lcd_putc 002F               ?___awdiv 002E  
             ?___lbdiv 002D               ?___ftadd 0054               ?___awmod 0028              __ptext800 1702  
            __ptext801 17C2              __ptext802 0000               ?___lbmod 0028              __ptext770 0A67  
            __ptext771 15E0              __ptext780 1606              __ptext772 0CD7              __ptext781 0C02  
            __ptext773 08D9              __ptext790 0F69              __ptext782 0B57              __ptext774 0A4F  
            __ptext791 0A0A              __ptext783 0EAE              __ptext775 0A96              __ptext792 09EE  
            __ptext784 0650              __ptext776 07A6              __ptext768 0011              __ptext793 05DC  
            __ptext785 05A1              __ptext777 0C40              __ptext769 055D              __ptext794 0F5A  
            __ptext786 079E              __ptext778 0EEB              __ptext795 080D              __ptext787 0563  
            __ptext779 0C6F              __ptext796 0698              __ptext788 0E69              __ptext797 05CD  
            __ptext789 05F5               ?___ftdiv 0036              __ptext798 0C2D              __ptext799 16C8  
             ?___ftneg 0028               ?___lldiv 0028               ?___ftmul 0045               ?___llmod 0035  
             ?___ftsub 00A0              __npowers_ 1006               ?___fttol 0036              __pstrings 1000  
          __tdiv_to_l_ 0698           ??__div_to_l_ 002E               ?_isdigit 0070               ?_isprint 0070  
          ??i1___ftadd 0020         __size_of_scale 0192         __size_of_putch 0006      interrupt_function 0004  
       ___wmul@product 002C     __end_of__div_to_l_ 08CC            __stringbase 1005      ___wmul@multiplier 0028  
           printf@_val 00B8             printf@flag 00BD             printf@fval 00C3             printf@prec 00C6  
            lcd_putc@c 0030           ??_lcd_gotoxy 002E       lcd_put_byte@temp 002C           _isprint$3676 0028  
   __end_of_lcd_gotoxy 0A67       __size_of___awdiv 0045       __size_of___lbdiv 001C       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001D       __size_of___ftdiv 0068       __size_of___ftneg 0008  
     __size_of___lldiv 0048               ___altoft 0C40       __size_of___ftmul 006F       __size_of___llmod 003E  
     __size_of___ftsub 0026       __size_of___fttol 005B               ___ftpack 0F69            _fround$4110 00A3  
          _fround$4111 00A0               ___lltoft 07A6       __size_of_isdigit 000F       __size_of_isprint 000E  
             __powers_ 102D               _lcd_busy 0C02               _lcd_init 0A96               _lcd_putc 0A67  
        __size_of_main 008F          __size_of_ngat 003A              printf@exp 00BF               isdigit@c 0029  
             scale@scl 005E               intlevel1 0000       __tdiv_to_l_@exp1 0036       __tdiv_to_l_@cntr 0035  
     __tdiv_to_l_@quot 0031       ___lldiv@dividend 002C               isprint@c 0029              stringcode 1000  
             printf@ap 00B4           ?__tdiv_to_l_ 0028            _printf$3165 00B0       ___lldiv@quotient 0030  
             stringdir 1000               stringtab 1000  
