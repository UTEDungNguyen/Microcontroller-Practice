

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 18 00:33:17 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	text156,local,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text157,local,class=CODE,delta=2
    13                           	psect	text159,local,class=CODE,delta=2
    14                           	psect	text160,local,class=CODE,delta=2
    15                           	psect	text161,local,class=CODE,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text162,local,class=CODE,delta=2
    18                           	psect	pa_nodes,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  000A                     	;#
    21                           
    22                           	psect	config
    23  2007  E3C4               	dw	58308	;#
    24                           
    25                           	psect	text156
    26  0000                     __ptext156:	
    27  001A                     _RCREG	set	26
    28  0011                     _TMR2	set	17
    29  0019                     _TXREG	set	25
    30  00C4                     _CREN	set	196
    31  005F                     _GIE	set	95
    32  005E                     _PEIE	set	94
    33  002B                     _RA3	set	43
    34  002C                     _RA4	set	44
    35  0065                     _RCIF	set	101
    36  00C6                     _RX9	set	198
    37  00C7                     _SPEN	set	199
    38  0090                     _T2CKPS0	set	144
    39  0091                     _T2CKPS1	set	145
    40  0061                     _TMR2IF	set	97
    41  0092                     _TMR2ON	set	146
    42  0093                     _TOUTPS0	set	147
    43  0094                     _TOUTPS1	set	148
    44  0095                     _TOUTPS2	set	149
    45  0096                     _TOUTPS3	set	150
    46  0064                     _TXIF	set	100
    47  0092                     _PR2	set	146
    48  0099                     _SPBRG	set	153
    49  009A                     _SPBRGH	set	154
    50  04C2                     _BRGH	set	1218
    51  047C                     _IRCF0	set	1148
    52  047D                     _IRCF1	set	1149
    53  047E                     _IRCF2	set	1150
    54  0465                     _RCIE	set	1125
    55  0478                     _SCS	set	1144
    56  04C4                     _SYNC	set	1220
    57  0461                     _TMR2IE	set	1121
    58  042B                     _TRISA3	set	1067
    59  042C                     _TRISA4	set	1068
    60  043E                     _TRISC6	set	1086
    61  043F                     _TRISC7	set	1087
    62  04C6                     _TX9	set	1222
    63  04C5                     _TXEN	set	1221
    64  0188                     _ANSEL	set	392
    65  0189                     _ANSELH	set	393
    66  0C3B                     _BRG16	set	3131
    67                           
    68                           	psect	strings
    69  00B3                     __pstrings:	
    70  00B3                     stringtab:	
    71                           ;	global	stringdir,stringtab,__stringbase
    72                           
    73  00B3                     stringcode:	
    74                           ;	String table - string pointers are 1 byte each
    75                           
    76  00B3                     stringdir:	
    77  00B3  3000               	movlw	high stringdir
    78  00B4  008A               	movwf	10
    79  00B5  0804               	movf	4,w
    80  00B6  0A84               	incf	4,f
    81  00B7  0782               	addwf	2,f
    82  00B8                     __stringbase:	
    83  00B8  3400               	retlw	0
    84  00B9                     STR_5:	
    85  00B9  344F               	retlw	79	;'O'
    86  00BA  3474               	retlw	116	;'t'
    87  00BB  3468               	retlw	104	;'h'
    88  00BC  3465               	retlw	101	;'e'
    89  00BD  3472               	retlw	114	;'r'
    90  00BE  3420               	retlw	32	;' '
    91  00BF  346E               	retlw	110	;'n'
    92  00C0  3475               	retlw	117	;'u'
    93  00C1  346D               	retlw	109	;'m'
    94  00C2  3462               	retlw	98	;'b'
    95  00C3  3465               	retlw	101	;'e'
    96  00C4  3472               	retlw	114	;'r'
    97  00C5  3473               	retlw	115	;'s'
    98  00C6  3400               	retlw	0
    99  00C7                     STR_1:	
   100  00C7  344E               	retlw	78	;'N'
   101  00C8  3475               	retlw	117	;'u'
   102  00C9  346D               	retlw	109	;'m'
   103  00CA  3462               	retlw	98	;'b'
   104  00CB  3465               	retlw	101	;'e'
   105  00CC  3472               	retlw	114	;'r'
   106  00CD  3431               	retlw	49	;'1'
   107  00CE  3400               	retlw	0
   108  00CF                     STR_2:	
   109  00CF  344E               	retlw	78	;'N'
   110  00D0  3475               	retlw	117	;'u'
   111  00D1  346D               	retlw	109	;'m'
   112  00D2  3462               	retlw	98	;'b'
   113  00D3  3465               	retlw	101	;'e'
   114  00D4  3472               	retlw	114	;'r'
   115  00D5  3432               	retlw	50	;'2'
   116  00D6  3400               	retlw	0
   117  00D7                     STR_3:	
   118  00D7  344E               	retlw	78	;'N'
   119  00D8  3475               	retlw	117	;'u'
   120  00D9  346D               	retlw	109	;'m'
   121  00DA  3462               	retlw	98	;'b'
   122  00DB  3465               	retlw	101	;'e'
   123  00DC  3472               	retlw	114	;'r'
   124  00DD  3433               	retlw	51	;'3'
   125  00DE  3400               	retlw	0
   126  00DF                     STR_4:	
   127  00DF  344E               	retlw	78	;'N'
   128  00E0  3475               	retlw	117	;'u'
   129  00E1  346D               	retlw	109	;'m'
   130  00E2  3462               	retlw	98	;'b'
   131  00E3  3465               	retlw	101	;'e'
   132  00E4  3472               	retlw	114	;'r'
   133  00E5  3434               	retlw	52	;'4'
   134  00E6  3400               	retlw	0
   135                           
   136                           	psect	cinit
   137  0106                     start_initialization:	
   138                           
   139                           ; Clear objects allocated to COMMON
   140  0106  01F5               	clrf	__pbssCOMMON& (0+127)
   141  0107  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   142  0108  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   143  0109  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   144                           
   145                           ; Clear objects allocated to BANK0
   146  010A  01A0               	clrf	__pbssBANK0& (0+127)
   147  010B  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   148  010C  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   149  010D  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   150  010E  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   151  010F  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   152  0110  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   153  0111  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   154  0112  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   155  0113  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   156  0114                     end_of_initialization:	
   157                           ;End of C runtime variable initialization code
   158                           
   159  0114  0183               	clrf	3
   160  0115  120A  118A  2811   	ljmp	_main	;jump to C main() function
   161                           
   162                           	psect	bssCOMMON
   163  0075                     __pbssCOMMON:	
   164  0075                     _dem:	
   165  0075                     	ds	2
   166  0077                     _i:	
   167  0077                     	ds	2
   168                           
   169                           	psect	bssBANK0
   170  0020                     __pbssBANK0:	
   171  0020                     _rx_data:	
   172  0020                     	ds	10
   173                           
   174                           	psect	cstackCOMMON
   175  0070                     __pcstackCOMMON:	
   176  0070                     ?_tx_init:	
   177  0070                     ?_rx_init:	
   178                           ; 0 bytes @ 0x0
   179                           
   180  0070                     ?_send_string:	
   181                           ; 0 bytes @ 0x0
   182                           
   183  0070                     ?_main:	
   184                           ; 0 bytes @ 0x0
   185                           
   186  0070                     ?_send_char:	
   187                           ; 0 bytes @ 0x0
   188                           
   189  0070                     ?_ngat:	
   190                           ; 0 bytes @ 0x0
   191                           
   192  0070                     ??_ngat:	
   193                           ; 0 bytes @ 0x0
   194                           
   195                           
   196                           ; 0 bytes @ 0x0
   197  0070                     	ds	3
   198  0073                     ??_tx_init:	
   199  0073                     ??_rx_init:	
   200                           ; 0 bytes @ 0x3
   201                           
   202  0073                     ??_send_char:	
   203                           ; 0 bytes @ 0x3
   204                           
   205  0073                     send_char@data:	
   206                           ; 0 bytes @ 0x3
   207                           
   208                           
   209                           ; 1 bytes @ 0x3
   210  0073                     	ds	1
   211  0074                     ??_send_string:	
   212  0074                     send_string@s:	
   213                           ; 0 bytes @ 0x4
   214                           
   215                           
   216                           ; 1 bytes @ 0x4
   217  0074                     	ds	1
   218  0075                     ??_main:	
   219                           
   220                           	psect	maintext
   221  0011                     __pmaintext:	
   222                           ; 0 bytes @ 0x5
   223 ;;Data sizes: Strings 46, constant 0, data 0, bss 14, persistent 0 stack 0
   224 ;;Auto spaces:   Size  Autos    Used
   225 ;; COMMON          14      5       9
   226 ;; BANK0           80      0      10
   227 ;; BANK1           80      0       0
   228 ;; BANK3           96      0       0
   229 ;; BANK2           96      0       0
   230 ;;
   231 ;; Pointer list with targets:
   232 ;; send_string@s	PTR const unsigned char  size(1) Largest target is 14
   233 ;;		 -> STR_5(CODE[14]), STR_4(CODE[8]), STR_3(CODE[8]), STR_2(CODE[8]), 
   234 ;;		 -> STR_1(CODE[8]), 
   235 ;;
   236 ;;
   237 ;; Critical Paths under _main in COMMON
   238 ;;
   239 ;;   _main->_send_string
   240 ;;   _send_string->_send_char
   241 ;;
   242 ;; Critical Paths under _ngat in COMMON
   243 ;;
   244 ;;   None.
   245 ;;
   246 ;; Critical Paths under _main in BANK0
   247 ;;
   248 ;;   None.
   249 ;;
   250 ;; Critical Paths under _ngat in BANK0
   251 ;;
   252 ;;   None.
   253 ;;
   254 ;; Critical Paths under _main in BANK1
   255 ;;
   256 ;;   None.
   257 ;;
   258 ;; Critical Paths under _ngat in BANK1
   259 ;;
   260 ;;   None.
   261 ;;
   262 ;; Critical Paths under _main in BANK3
   263 ;;
   264 ;;   None.
   265 ;;
   266 ;; Critical Paths under _ngat in BANK3
   267 ;;
   268 ;;   None.
   269 ;;
   270 ;; Critical Paths under _main in BANK2
   271 ;;
   272 ;;   None.
   273 ;;
   274 ;; Critical Paths under _ngat in BANK2
   275 ;;
   276 ;;   None.
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   279 ;;
   280 ;;
   281 ;;Call Graph Tables:
   282 ;;
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   285 ;; ---------------------------------------------------------------------------------
   286 ;; (0) _main                                                 0     0      0      67
   287 ;;                            _tx_init
   288 ;;                            _rx_init
   289 ;;                        _send_string
   290 ;; ---------------------------------------------------------------------------------
   291 ;; (1) _send_string                                          1     1      0      67
   292 ;;                                              4 COMMON     1     1      0
   293 ;;                          _send_char
   294 ;; ---------------------------------------------------------------------------------
   295 ;; (2) _send_char                                            1     1      0      22
   296 ;;                                              3 COMMON     1     1      0
   297 ;; ---------------------------------------------------------------------------------
   298 ;; (1) _rx_init                                              0     0      0       0
   299 ;; ---------------------------------------------------------------------------------
   300 ;; (1) _tx_init                                              0     0      0       0
   301 ;; ---------------------------------------------------------------------------------
   302 ;; Estimated maximum stack depth 2
   303 ;; ---------------------------------------------------------------------------------
   304 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   305 ;; ---------------------------------------------------------------------------------
   306 ;; (3) _ngat                                                 3     3      0       0
   307 ;;                                              0 COMMON     3     3      0
   308 ;; ---------------------------------------------------------------------------------
   309 ;; Estimated maximum stack depth 3
   310 ;; ---------------------------------------------------------------------------------
   311 ;; Call Graph Graphs:
   312 ;; _main (ROOT)
   313 ;;   _tx_init
   314 ;;   _rx_init
   315 ;;   _send_string
   316 ;;     _send_char
   317 ;;
   318 ;; _ngat (ROOT)
   319 ;;
   320 ;; Address spaces:
   321 ;;Name               Size   Autos  Total    Cost      Usage
   322 ;;BITCOMMON            E      0       0       0        0.0%
   323 ;;EEDATA             100      0       0       0        0.0%
   324 ;;NULL                 0      0       0       0        0.0%
   325 ;;CODE                 0      0       0       0        0.0%
   326 ;;COMMON               E      5       9       1       64.3%
   327 ;;BITSFR0              0      0       0       1        0.0%
   328 ;;SFR0                 0      0       0       1        0.0%
   329 ;;BITSFR1              0      0       0       2        0.0%
   330 ;;SFR1                 0      0       0       2        0.0%
   331 ;;STACK                0      0       2       2        0.0%
   332 ;;ABS                  0      0      13       3        0.0%
   333 ;;BITBANK0            50      0       0       4        0.0%
   334 ;;BITSFR3              0      0       0       4        0.0%
   335 ;;SFR3                 0      0       0       4        0.0%
   336 ;;BANK0               50      0       A       5       12.5%
   337 ;;BITSFR2              0      0       0       5        0.0%
   338 ;;SFR2                 0      0       0       5        0.0%
   339 ;;BITBANK1            50      0       0       6        0.0%
   340 ;;BANK1               50      0       0       7        0.0%
   341 ;;BITBANK3            60      0       0       8        0.0%
   342 ;;BANK3               60      0       0       9        0.0%
   343 ;;BITBANK2            60      0       0      10        0.0%
   344 ;;BANK2               60      0       0      11        0.0%
   345 ;;DATA                 0      0      15      12        0.0%
   346                           
   347                           
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 16 in file "D:\TTVXL\Project TTVXL\BT02week16ttvxl\BT02week16ttvxl.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;		None               void
   357 ;; Registers used:
   358 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 17F/0
   361 ;;		On exit  : 11F/0
   362 ;;		Unchanged: FFE80/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels required when called:    3
   370 ;; This function calls:
   371 ;;		_tx_init
   372 ;;		_rx_init
   373 ;;		_send_string
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378  0011                     _main:	
   379                           
   380                           ;BT02week16ttvxl.c: 17: IRCF2 = 1; IRCF1 = 1; IRCF0 = 0;
   381                           
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   383  0011  1683               	bsf	3,5	;RP0=1, select bank1
   384  0012  170F               	bsf	15,6
   385  0013  168F               	bsf	15,5
   386  0014  120F               	bcf	15,4
   387                           
   388                           ;BT02week16ttvxl.c: 18: SCS = 1;
   389  0015  140F               	bsf	15,0
   390                           
   391                           ;BT02week16ttvxl.c: 20: ANSEL = ANSELH = 0;
   392  0016  1703               	bsf	3,6	;RP1=1, select bank3
   393  0017  0189               	clrf	9	;volatile
   394  0018  0188               	clrf	8	;volatile
   395                           
   396                           ;BT02week16ttvxl.c: 21: TRISA3 = 0;
   397  0019  1303               	bcf	3,6	;RP1=0, select bank1
   398  001A  1185               	bcf	5,3
   399                           
   400                           ;BT02week16ttvxl.c: 22: TRISA4 = 0;
   401  001B  1205               	bcf	5,4
   402                           
   403                           ;BT02week16ttvxl.c: 23: TRISC6 = 0;
   404  001C  1307               	bcf	7,6
   405                           
   406                           ;BT02week16ttvxl.c: 24: TRISC7 = 1;
   407  001D  1787               	bsf	7,7
   408                           
   409                           ;BT02week16ttvxl.c: 27: RCIE = 1;
   410  001E  168C               	bsf	12,5
   411                           
   412                           ;BT02week16ttvxl.c: 28: RCIF = 0;
   413  001F  1283               	bcf	3,5	;RP0=0, select bank0
   414  0020  128C               	bcf	12,5
   415                           
   416                           ;BT02week16ttvxl.c: 29: PEIE = 1;
   417  0021  170B               	bsf	11,6
   418                           
   419                           ;BT02week16ttvxl.c: 30: GIE = 1;
   420  0022  178B               	bsf	11,7
   421                           
   422                           ;BT02week16ttvxl.c: 33: T2CKPS1 = 0; T2CKPS0 = 1;
   423  0023  1092               	bcf	18,1
   424  0024  1412               	bsf	18,0
   425                           
   426                           ;BT02week16ttvxl.c: 34: TOUTPS3 = 1; TOUTPS2 = 0; TOUTPS1 = 0; TOUTPS0 = 1;
   427  0025  1712               	bsf	18,6
   428  0026  1292               	bcf	18,5
   429  0027  1212               	bcf	18,4
   430  0028  1592               	bsf	18,3
   431                           
   432                           ;BT02week16ttvxl.c: 35: TMR2 = 0 ;PR2 = 250;
   433  0029  0191               	clrf	17	;volatile
   434  002A  30FA               	movlw	250
   435  002B  1683               	bsf	3,5	;RP0=1, select bank1
   436  002C  0092               	movwf	18	;volatile
   437                           
   438                           ;BT02week16ttvxl.c: 36: TMR2ON = 1;
   439  002D  1283               	bcf	3,5	;RP0=0, select bank0
   440  002E  1512               	bsf	18,2
   441                           
   442                           ;BT02week16ttvxl.c: 38: TMR2IE=1;
   443  002F  1683               	bsf	3,5	;RP0=1, select bank1
   444  0030  148C               	bsf	12,1
   445                           
   446                           ;BT02week16ttvxl.c: 39: TMR2IF=0;
   447  0031  1283               	bcf	3,5	;RP0=0, select bank0
   448  0032  108C               	bcf	12,1
   449                           
   450                           ;BT02week16ttvxl.c: 40: PEIE=1;
   451  0033  170B               	bsf	11,6
   452                           
   453                           ;BT02week16ttvxl.c: 41: GIE=1;
   454  0034  178B               	bsf	11,7
   455                           
   456                           ;BT02week16ttvxl.c: 43: tx_init();
   457  0035  120A  118A  2126   	fcall	_tx_init
      +       120A  118A         
   458                           
   459                           ;BT02week16ttvxl.c: 44: rx_init();
   460  003A  120A  118A  2118   	fcall	_rx_init
      +       120A  118A         
   461  003F  285A               	goto	l2693
   462  0040                     l2695:	
   463                           
   464                           ;BT02week16ttvxl.c: 48: {
   465                           ;BT02week16ttvxl.c: 49: RA3 = 0;RA4 = 0 ;
   466  0040  1283               	bcf	3,5	;RP0=0, select bank0
   467  0041  1303               	bcf	3,6	;RP1=0, select bank0
   468  0042  300F               	movlw	(STR_1-__stringbase)& (0+255)
   469  0043  1185               	bcf	5,3
   470  0044  284E               	goto	L2
   471  0045                     l2701:	
   472                           ;BT02week16ttvxl.c: 51: }
   473                           
   474                           ;BT02week16ttvxl.c: 50: send_string("Number1");
   475                           
   476                           
   477                           ;BT02week16ttvxl.c: 53: {
   478                           ;BT02week16ttvxl.c: 54: RA3 = 1;RA4 = 1 ;
   479  0045  1283               	bcf	3,5	;RP0=0, select bank0
   480  0046  1303               	bcf	3,6	;RP1=0, select bank0
   481  0047  3017               	movlw	(STR_2-__stringbase)& (0+255)
   482  0048  1585               	bsf	5,3
   483  0049  2854               	goto	L3
   484  004A                     l2707:	
   485                           ;BT02week16ttvxl.c: 56: }
   486                           
   487                           ;BT02week16ttvxl.c: 55: send_string("Number2");
   488                           
   489                           
   490                           ;BT02week16ttvxl.c: 58: {
   491                           ;BT02week16ttvxl.c: 59: RA3 = 1;RA4 = 0 ;
   492  004A  1283               	bcf	3,5	;RP0=0, select bank0
   493  004B  1303               	bcf	3,6	;RP1=0, select bank0
   494  004C  301F               	movlw	(STR_3-__stringbase)& (0+255)
   495  004D  1585               	bsf	5,3
   496  004E                     L2:	
   497  004E  1205               	bcf	5,4
   498                           
   499                           ;BT02week16ttvxl.c: 60: send_string("Number3");
   500  004F  2855               	goto	L1
   501  0050                     l2713:	
   502                           ;BT02week16ttvxl.c: 61: }
   503                           
   504                           
   505                           ;BT02week16ttvxl.c: 63: {
   506                           ;BT02week16ttvxl.c: 64: RA3 = 0;RA4 = 1 ;
   507  0050  1283               	bcf	3,5	;RP0=0, select bank0
   508  0051  1303               	bcf	3,6	;RP1=0, select bank0
   509  0052  3027               	movlw	(STR_4-__stringbase)& (0+255)
   510  0053  1185               	bcf	5,3
   511  0054                     L3:	
   512  0054  1605               	bsf	5,4
   513  0055                     L1:	
   514                           ;BT02week16ttvxl.c: 65: send_string("Number4");
   515                           
   516  0055  120A  118A  20E7   	fcall	_send_string
      +       120A  118A         
   517  005A                     l2693:	
   518                           ;BT02week16ttvxl.c: 66: }
   519                           
   520                           
   521                           ;BT02week16ttvxl.c: 46: {
   522                           ;BT02week16ttvxl.c: 47: if(rx_data[i] == '1')
   523  005A  0877               	movf	_i,w
   524  005B  3E20               	addlw	_rx_data& (0+255)
   525  005C  0084               	movwf	4
   526  005D  0800               	movf	0,w
   527  005E  3A31               	xorlw	49
   528  005F  1903               	btfsc	3,2
   529  0060  2840               	goto	l2695
   530                           
   531                           ;BT02week16ttvxl.c: 52: else if(rx_data[i] == '2')
   532  0061  0877               	movf	_i,w
   533  0062  3E20               	addlw	_rx_data& (0+255)
   534  0063  0084               	movwf	4
   535  0064  0800               	movf	0,w
   536  0065  3A32               	xorlw	50
   537  0066  1903               	btfsc	3,2
   538  0067  2845               	goto	l2701
   539                           
   540                           ;BT02week16ttvxl.c: 57: else if(rx_data[i] == '3')
   541  0068  0877               	movf	_i,w
   542  0069  3E20               	addlw	_rx_data& (0+255)
   543  006A  0084               	movwf	4
   544  006B  0800               	movf	0,w
   545  006C  3A33               	xorlw	51
   546  006D  1903               	btfsc	3,2
   547  006E  284A               	goto	l2707
   548                           
   549                           ;BT02week16ttvxl.c: 62: else if(rx_data[i] == '4')
   550  006F  0877               	movf	_i,w
   551  0070  3E20               	addlw	_rx_data& (0+255)
   552  0071  0084               	movwf	4
   553  0072  0800               	movf	0,w
   554  0073  3A34               	xorlw	52
   555  0074  1903               	btfsc	3,2
   556  0075  2850               	goto	l2713
   557                           
   558                           ;BT02week16ttvxl.c: 67: else
   559                           ;BT02week16ttvxl.c: 68: {
   560                           ;BT02week16ttvxl.c: 69: send_string("Other numbers");
   561  0076  3001               	movlw	(STR_5-__stringbase)& (0+255)
   562  0077  2855               	goto	L1
   563  0078                     __end_of_main:	
   564                           
   565                           	psect	text157
   566  00E7                     __ptext157:	
   567 ;; =============== function _main ends ============
   568                           
   569                           
   570 ;; *************** function _send_string *****************
   571 ;; Defined at:
   572 ;;		line 98 in file "D:\TTVXL\Project TTVXL\BT02week16ttvxl\BT02week16ttvxl.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  s               1    wreg     PTR const unsigned char 
   575 ;;		 -> STR_5(14), STR_4(8), STR_3(8), STR_2(8), 
   576 ;;		 -> STR_1(8), 
   577 ;; Auto vars:     Size  Location     Type
   578 ;;  s               1    4[COMMON] PTR const unsigned char 
   579 ;;		 -> STR_5(14), STR_4(8), STR_3(8), STR_2(8), 
   580 ;;		 -> STR_1(8), 
   581 ;; Return value:  Size  Location     Type
   582 ;;		None               void
   583 ;; Registers used:
   584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : 11F/0
   587 ;;		On exit  : 11F/0
   588 ;;		Unchanged: FFE80/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         1       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         1       0       0       0       0
   594 ;;Total ram usage:        1 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    2
   597 ;; This function calls:
   598 ;;		_send_char
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603  00E7                     _send_string:	
   604                           
   605                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   606                           ;send_string@s stored from wreg
   607  00E7  00F4               	movwf	send_string@s
   608  00E8                     l2643:	
   609                           ;BT02week16ttvxl.c: 99: while(*s){send_char(*s++);}
   610                           
   611  00E8  0874               	movf	send_string@s,w
   612  00E9  0084               	movwf	4
   613  00EA  120A  118A  20B3   	fcall	stringdir
      +       120A  118A         
   614  00EF  3800               	iorlw	0
   615  00F0  1903               	btfsc	3,2
   616  00F1  0008               	return
   617  00F2  0874               	movf	send_string@s,w
   618  00F3  0084               	movwf	4
   619  00F4  120A  118A  20B3   	fcall	stringdir
      +       120A  118A         
   620  00F9  20FE  120A  118A   	fcall	_send_char
   621  00FC  0AF4               	incf	send_string@s,f
   622  00FD  28E8               	goto	l2643
   623  00FE                     __end_of_send_string:	
   624  00FE                     __ptext158:	
   625 ;; =============== function _send_string ends ============
   626                           
   627                           
   628 ;; *************** function _send_char *****************
   629 ;; Defined at:
   630 ;;		line 92 in file "D:\TTVXL\Project TTVXL\BT02week16ttvxl\BT02week16ttvxl.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  data            1    wreg     unsigned char 
   633 ;; Auto vars:     Size  Location     Type
   634 ;;  data            1    3[COMMON] unsigned char 
   635 ;; Return value:  Size  Location     Type
   636 ;;		None               void
   637 ;; Registers used:
   638 ;;		wreg
   639 ;; Tracked objects:
   640 ;;		On entry : 11F/0
   641 ;;		On exit  : 17F/0
   642 ;;		Unchanged: FFE80/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         1       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         1       0       0       0       0
   648 ;;Total ram usage:        1 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_send_string
   655 ;; This function uses a non-reentrant model
   656 ;;
   657  00FE                     _send_char:	
   658                           
   659                           ; Regs used in _send_char: [wreg]
   660                           ;send_char@data stored from wreg
   661  00FE  00F3               	movwf	send_char@data
   662  00FF                     l1057:	
   663                           ;BT02week16ttvxl.c: 93: while(TXIF == 0){}
   664                           
   665  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   666  0100  1303               	bcf	3,6	;RP1=0, select bank0
   667  0101  1E0C               	btfss	12,4
   668  0102  28FF               	goto	l1057
   669                           
   670                           ;BT02week16ttvxl.c: 94: TXREG = data;
   671  0103  0873               	movf	send_char@data,w
   672  0104  0099               	movwf	25	;volatile
   673  0105  0008               	return
   674  0106                     __end_of_send_char:	
   675                           
   676                           	psect	text159
   677  0118                     __ptext159:	
   678 ;; =============== function _send_char ends ============
   679                           
   680                           
   681 ;; *************** function _rx_init *****************
   682 ;; Defined at:
   683 ;;		line 84 in file "D:\TTVXL\Project TTVXL\BT02week16ttvxl\BT02week16ttvxl.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;		None
   688 ;; Return value:  Size  Location     Type
   689 ;;		None               void
   690 ;; Registers used:
   691 ;;		wreg, status,2
   692 ;; Tracked objects:
   693 ;;		On entry : 17F/0
   694 ;;		On exit  : 17F/0
   695 ;;		Unchanged: FFE80/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0
   700 ;;      Totals:         0       0       0       0       0
   701 ;;Total ram usage:        0 bytes
   702 ;; Hardware stack levels used:    1
   703 ;; Hardware stack levels required when called:    1
   704 ;; This function calls:
   705 ;;		Nothing
   706 ;; This function is called by:
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710  0118                     _rx_init:	
   711                           
   712                           ;BT02week16ttvxl.c: 85: SPBRGH = 0;
   713                           
   714                           ; Regs used in _rx_init: [wreg+status,2]
   715  0118  1683               	bsf	3,5	;RP0=1, select bank1
   716  0119  019A               	clrf	26	;volatile
   717                           
   718                           ;BT02week16ttvxl.c: 86: SPBRG = 69;
   719  011A  3045               	movlw	69
   720  011B  0099               	movwf	25	;volatile
   721                           
   722                           ;BT02week16ttvxl.c: 87: SYNC = 0; BRGH = 1; BRG16 = 1;
   723  011C  1218               	bcf	24,4
   724  011D  1518               	bsf	24,2
   725  011E  1703               	bsf	3,6	;RP1=1, select bank3
   726  011F  1587               	bsf	7,3
   727                           
   728                           ;BT02week16ttvxl.c: 88: CREN = 1; RX9 = 0; SPEN = 1;
   729  0120  1283               	bcf	3,5	;RP0=0, select bank0
   730  0121  1303               	bcf	3,6	;RP1=0, select bank0
   731  0122  1618               	bsf	24,4
   732  0123  1318               	bcf	24,6
   733  0124  1798               	bsf	24,7
   734  0125  0008               	return
   735  0126                     __end_of_rx_init:	
   736                           
   737                           	psect	text160
   738  0126                     __ptext160:	
   739 ;; =============== function _rx_init ends ============
   740                           
   741                           
   742 ;; *************** function _tx_init *****************
   743 ;; Defined at:
   744 ;;		line 75 in file "D:\TTVXL\Project TTVXL\BT02week16ttvxl\BT02week16ttvxl.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;		None               void
   751 ;; Registers used:
   752 ;;		wreg, status,2
   753 ;; Tracked objects:
   754 ;;		On entry : 17F/0
   755 ;;		On exit  : 17F/0
   756 ;;		Unchanged: FFE80/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    1
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771  0126                     _tx_init:	
   772                           
   773                           ;BT02week16ttvxl.c: 76: SPBRGH = 0;
   774                           
   775                           ; Regs used in _tx_init: [wreg+status,2]
   776  0126  1683               	bsf	3,5	;RP0=1, select bank1
   777  0127  019A               	clrf	26	;volatile
   778                           
   779                           ;BT02week16ttvxl.c: 77: SPBRG = 69;
   780  0128  3045               	movlw	69
   781  0129  0099               	movwf	25	;volatile
   782                           
   783                           ;BT02week16ttvxl.c: 78: SYNC = 0; BRGH = 1; BRG16 = 1;
   784  012A  1218               	bcf	24,4
   785  012B  1518               	bsf	24,2
   786  012C  1703               	bsf	3,6	;RP1=1, select bank3
   787  012D  1587               	bsf	7,3
   788                           
   789                           ;BT02week16ttvxl.c: 79: TXEN = 1; TX9 = 0; SPEN = 1;
   790  012E  1303               	bcf	3,6	;RP1=0, select bank1
   791  012F  1698               	bsf	24,5
   792  0130  1318               	bcf	24,6
   793  0131  1283               	bcf	3,5	;RP0=0, select bank0
   794  0132  1798               	bsf	24,7
   795  0133  0008               	return
   796  0134                     __end_of_tx_init:	
   797                           
   798                           	psect	text161
   799  0078                     __ptext161:	
   800 ;; =============== function _tx_init ends ============
   801                           
   802                           
   803 ;; *************** function _ngat *****************
   804 ;; Defined at:
   805 ;;		line 103 in file "D:\TTVXL\Project TTVXL\BT02week16ttvxl\BT02week16ttvxl.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;		None
   808 ;; Auto vars:     Size  Location     Type
   809 ;;		None
   810 ;; Return value:  Size  Location     Type
   811 ;;		None               void
   812 ;; Registers used:
   813 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 60/0
   817 ;;		Unchanged: FFE00/0
   818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   819 ;;      Params:         0       0       0       0       0
   820 ;;      Locals:         0       0       0       0       0
   821 ;;      Temps:          3       0       0       0       0
   822 ;;      Totals:         3       0       0       0       0
   823 ;;Total ram usage:        3 bytes
   824 ;; Hardware stack levels used:    1
   825 ;; This function calls:
   826 ;;		Nothing
   827 ;; This function is called by:
   828 ;;		Interrupt level 1
   829 ;; This function uses a non-reentrant model
   830 ;;
   831  0078                     _ngat:	
   832                           
   833                           ;BT02week16ttvxl.c: 104: if(RCIF)
   834  0078  1283               	bcf	3,5	;RP0=0, select bank0
   835  0079  1303               	bcf	3,6	;RP1=0, select bank0
   836  007A  1E8C               	btfss	12,5
   837  007B  288C               	goto	L4
   838                           
   839                           ;BT02week16ttvxl.c: 105: {
   840                           ;BT02week16ttvxl.c: 106: rx_data[i] = RCREG;
   841  007C  0877               	movf	_i,w
   842  007D  3E20               	addlw	_rx_data& (0+255)
   843  007E  0084               	movwf	4
   844  007F  081A               	movf	26,w	;volatile
   845  0080  1383               	bcf	3,7	;select IRP bank0
   846  0081  0080               	movwf	0
   847                           
   848                           ;BT02week16ttvxl.c: 107: i++;
   849  0082  0AF7               	incf	_i,f
   850  0083  1903               	skipnz
   851  0084  0AF8               	incf	_i+1,f
   852                           
   853                           ;BT02week16ttvxl.c: 108: if(i==1) {i=0;}
   854  0085  0377               	decf	_i,w
   855  0086  0478               	iorwf	_i+1,w
   856  0087  1D03               	skipz
   857  0088  288B               	goto	i1l2619
   858  0089  01F7               	clrf	_i
   859  008A  01F8               	clrf	_i+1
   860  008B                     i1l2619:	
   861                           
   862                           ;BT02week16ttvxl.c: 109: }
   863                           ;BT02week16ttvxl.c: 110: RCIF=0;
   864  008B  128C               	bcf	12,5
   865  008C                     L4:	
   866                           
   867                           ;BT02week16ttvxl.c: 111: if(TMR2IF)
   868  008C  1C8C               	btfss	12,1
   869  008D  28AA               	goto	L5
   870                           
   871                           ;BT02week16ttvxl.c: 112: {
   872                           ;BT02week16ttvxl.c: 113: dem++;
   873  008E  0AF5               	incf	_dem,f
   874  008F  1903               	skipnz
   875  0090  0AF6               	incf	_dem+1,f
   876                           
   877                           ;BT02week16ttvxl.c: 114: if(dem==50)
   878  0091  0875               	movf	_dem,w
   879  0092  3A32               	xorlw	50
   880  0093  0476               	iorwf	_dem+1,w
   881  0094  1D03               	skipz
   882  0095  2898               	goto	i1l2629
   883                           
   884                           ;BT02week16ttvxl.c: 115: {
   885                           ;BT02week16ttvxl.c: 116: RA3 = RA4 =0;
   886  0096  1205               	bcf	5,4
   887  0097  1185               	bcf	5,3
   888  0098                     i1l2629:	
   889                           
   890                           ;BT02week16ttvxl.c: 117: }
   891                           ;BT02week16ttvxl.c: 118: if(dem==100)
   892  0098  0875               	movf	_dem,w
   893  0099  3A64               	xorlw	100
   894  009A  0476               	iorwf	_dem+1,w
   895  009B  1D03               	skipz
   896  009C  28A9               	goto	i1l2635
   897                           
   898                           ;BT02week16ttvxl.c: 119: {
   899                           ;BT02week16ttvxl.c: 120: RA3 = RA4 =1;
   900  009D  1605               	bsf	5,4
   901  009E  1E05               	btfss	5,4
   902  009F  28A4               	goto	u20_20
   903  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   904  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   905  00A2  1585               	bsf	5,3
   906  00A3  28A7               	goto	i1l2633
   907  00A4                     u20_20:	
   908  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   909  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   910  00A6  1185               	bcf	5,3
   911  00A7                     i1l2633:	
   912                           
   913                           ;BT02week16ttvxl.c: 121: dem = 0;
   914  00A7  01F5               	clrf	_dem
   915  00A8  01F6               	clrf	_dem+1
   916  00A9                     i1l2635:	
   917                           
   918                           ;BT02week16ttvxl.c: 122: }
   919                           ;BT02week16ttvxl.c: 123: }
   920                           ;BT02week16ttvxl.c: 124: TMR2IF=0;
   921  00A9  108C               	bcf	12,1
   922  00AA                     L5:	
   923  00AA  0872               	movf	??_ngat+2,w
   924  00AB  008A               	movwf	10
   925  00AC  0871               	movf	??_ngat+1,w
   926  00AD  0084               	movwf	4
   927  00AE  0E70               	swapf	??_ngat^(0+-128),w
   928  00AF  0083               	movwf	3
   929  00B0  0EFE               	swapf	126,f
   930  00B1  0E7E               	swapf	126,w
   931  00B2  0009               	retfie
   932  00B3                     __end_of_ngat:	
   933                           
   934                           	psect	intentry
   935  0004                     __pintentry:	
   936                           ; Regs used in _ngat: [wreg-fsr0h+status,2+status,0]
   937                           
   938  0004                     interrupt_function:	
   939  007E                     saved_w	set	btemp
   940  0004  00FE               	movwf	btemp
   941  0005  0E03               	swapf	3,w
   942  0006  00F0               	movwf	??_ngat
   943  0007  0804               	movf	4,w
   944  0008  00F1               	movwf	??_ngat+1
   945  0009  080A               	movf	10,w
   946  000A  00F2               	movwf	??_ngat+2
   947  000B  120A  118A  2878   	ljmp	_ngat
   948                           
   949                           	psect	text162
   950  0000                     __ptext162:	
   951 ;; =============== function _ngat ends ============
   952                           
   953  007E                     btemp	set	126	;btemp
   954  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 18 00:33:17 2022

                   _i 0077                     pc 0002                    fsr 0004                   _GIE 005F  
                 _RA3 002B                   _RA4 002C                   _PR2 0092                   _SCS 0478  
                 _RX9 00C6                   _TX9 04C6                   _dem 0075                   fsr0 0004  
                 indf 0000                  l1051 0000                  l1060 0000                  l1054 0000  
                l1057 00FF                  l1066 0000                  l2601 0000                  l2603 0000  
                l2605 0000                  l2701 0045                  l2703 0000                  l2641 0000  
                l2713 0050                  l2643 00E8                  l2715 0000                  l2707 004A  
                l2651 0000                  l2581 0000                  l2573 0000                  l2637 0000  
                l2709 0000                  l2661 0000                  l2653 0000                  l2645 0000  
                l2583 0000                  l2575 0000                  l2591 0000                  l2671 0000  
                l2663 0000                  l2655 0000                  l2647 0000                  l2585 0000  
                l2577 0000                  l2593 0000                  l2681 0000                  l2673 0000  
                l2665 0000                  l2657 0000                  l2649 0000                  l2587 0000  
                l2579 0000                  l2595 0000                  l2691 0000                  l2683 0000  
                l2675 0000                  l2667 0000                  l2659 0000                  l2597 0000  
                l2589 0000                  l2693 005A                  l2685 0000                  l2677 0000  
                l2669 0000                  l2599 0000                  l2695 0040                  l2687 0000  
                l2679 0000                  l2697 0000                  l2689 0000                  STR_1 00C7  
                STR_2 00CF                  STR_3 00D7                  STR_4 00DF                  STR_5 00B9  
                _BRGH 04C2                  _CREN 00C4                  _PEIE 005E                  _RCIE 0465  
                _RCIF 0065                  _TMR2 0011                  _SPEN 00C7                  _TXEN 04C5  
                _TXIF 0064                  _SYNC 04C4                  _main 0011                  _ngat 0078  
                btemp 007E                  start 000E                 ?_main 0070                 ?_ngat 0070  
               _BRG16 0C3B                 _ANSEL 0188                 _IRCF0 047C                 _IRCF1 047D  
               _IRCF2 047E                 _RCREG 001A                 u20_20 00A4                 _SPBRG 0099  
               _TXREG 0019                 pclath 000A       __end_of_rx_init 0126                 status 0003  
               wtemp0 007E       __end_of_tx_init 0134          __end_of_main 0078          __end_of_ngat 00B3  
              ??_main 0075                ??_ngat 0070                _ANSELH 0189                i1l1074 0000  
              i1l2621 0000                i1l2613 0000                i1l2615 0000                i1l2633 00A7  
              i1l2625 0000                i1l2609 0000                i1l2635 00A9                i1l2619 008B  
              i1l2629 0098          ?_send_string 0070                _TMR2IE 0461                _TMR2IF 0061  
              _SPBRGH 009A                _TMR2ON 0092                _TRISA3 042B                _TRISA4 042C  
              _TRISC6 043E                _TRISC7 043F                saved_w 007E             ??_rx_init 0073  
           ??_tx_init 0073        __pcstackCOMMON 0070            __pbssBANK0 0020            __pmaintext 0011  
          __pintentry 0004    __size_of_send_char 0008               _T2CKPS0 0090               _T2CKPS1 0091  
             _TOUTPS0 0093               _TOUTPS1 0094               _TOUTPS2 0095               _TOUTPS3 0096  
__size_of_send_string 0017               _rx_data 0020               _rx_init 0118               _tx_init 0126  
end_of_initialization 0114     __end_of_send_char 0106         send_char@data 0073   start_initialization 0106  
         __pbssCOMMON 0075             __ptext160 0126             __ptext161 0078             __ptext162 0000  
           __ptext156 0000             __ptext157 00E7             __ptext158 00FE             __ptext159 0118  
           __pstrings 00B3              ?_rx_init 0070              ?_tx_init 0070         ??_send_string 0074  
   interrupt_function 0004             _send_char 00FE           __stringbase 00B8            ?_send_char 0070  
        send_string@s 0074   __end_of_send_string 00FE      __size_of_rx_init 000E      __size_of_tx_init 000E  
       __size_of_main 0067         __size_of_ngat 003B              intlevel1 0000           _send_string 00E7  
         ??_send_char 0073             stringcode 00B3              stringdir 00B3              stringtab 00B3  
