

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Tue Nov 15 16:04:03 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text754,local,class=CODE,delta=2
    14                           	psect	text759,local,class=CODE,delta=2
    15                           	psect	text760,local,class=CODE,delta=2
    16                           	psect	text763,local,class=CODE,delta=2
    17                           	psect	text765,local,class=CODE,delta=2
    18                           	psect	text780,local,class=CODE,delta=2
    19                           	psect	text784,local,class=CODE,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text787,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E3C2               	dw	58306	;#
    28                           
    29                           	psect	strings
    30  1000                     __pstrings:	
    31  1000                     stringtab:	
    32                           ;	global	stringdir,stringtab,__stringbase
    33                           
    34  1000                     stringcode:	
    35                           ;	String table - string pointers are 1 byte each
    36                           
    37  1000                     stringdir:	
    38  1000  3010               	movlw	high stringdir
    39  1001  008A               	movwf	10
    40  1002  0804               	movf	4,w
    41  1003  0A84               	incf	4,f
    42  1004  0782               	addwf	2,f
    43  1005                     __stringbase:	
    44  1005  3400               	retlw	0
    45  1006                     __npowers_:	
    46  1006  3400               	retlw	0
    47  1007  3480               	retlw	128
    48  1008  343F               	retlw	63
    49  1009  34CD               	retlw	205
    50  100A  34CC               	retlw	204
    51  100B  343D               	retlw	61
    52  100C  34D7               	retlw	215
    53  100D  3423               	retlw	35
    54  100E  343C               	retlw	60
    55  100F  3412               	retlw	18
    56  1010  3483               	retlw	131
    57  1011  343A               	retlw	58
    58  1012  34B7               	retlw	183
    59  1013  34D1               	retlw	209
    60  1014  3438               	retlw	56
    61  1015  34C6               	retlw	198
    62  1016  3427               	retlw	39
    63  1017  3437               	retlw	55
    64  1018  3438               	retlw	56
    65  1019  3486               	retlw	134
    66  101A  3435               	retlw	53
    67  101B  34C0               	retlw	192
    68  101C  34D6               	retlw	214
    69  101D  3433               	retlw	51
    70  101E  34CC               	retlw	204
    71  101F  342B               	retlw	43
    72  1020  3432               	retlw	50
    73  1021  3470               	retlw	112
    74  1022  3489               	retlw	137
    75  1023  3430               	retlw	48
    76  1024  34E7               	retlw	231
    77  1025  34DB               	retlw	219
    78  1026  342E               	retlw	46
    79  1027  34E5               	retlw	229
    80  1028  343C               	retlw	60
    81  1029  341E               	retlw	30
    82  102A  3442               	retlw	66
    83  102B  34A2               	retlw	162
    84  102C  340D               	retlw	13
    85  102D                     __powers_:	
    86  102D  3400               	retlw	0
    87  102E  3480               	retlw	128
    88  102F  343F               	retlw	63
    89  1030  3400               	retlw	0
    90  1031  3420               	retlw	32
    91  1032  3441               	retlw	65
    92  1033  3400               	retlw	0
    93  1034  34C8               	retlw	200
    94  1035  3442               	retlw	66
    95  1036  3400               	retlw	0
    96  1037  347A               	retlw	122
    97  1038  3444               	retlw	68
    98  1039  3440               	retlw	64
    99  103A  341C               	retlw	28
   100  103B  3446               	retlw	70
   101  103C  3450               	retlw	80
   102  103D  34C3               	retlw	195
   103  103E  3447               	retlw	71
   104  103F  3424               	retlw	36
   105  1040  3474               	retlw	116
   106  1041  3449               	retlw	73
   107  1042  3497               	retlw	151
   108  1043  3418               	retlw	24
   109  1044  344B               	retlw	75
   110  1045  34BC               	retlw	188
   111  1046  34BE               	retlw	190
   112  1047  344C               	retlw	76
   113  1048  346B               	retlw	107
   114  1049  346E               	retlw	110
   115  104A  344E               	retlw	78
   116  104B  3403               	retlw	3
   117  104C  3415               	retlw	21
   118  104D  3450               	retlw	80
   119  104E  3479               	retlw	121
   120  104F  34AD               	retlw	173
   121  1050  3460               	retlw	96
   122  1051  34F3               	retlw	243
   123  1052  3449               	retlw	73
   124  1053  3471               	retlw	113
   125  1054                     _dpowers:	
   126  1054  3401               	retlw	1
   127  1055  3400               	retlw	0
   128  1056  3400               	retlw	0
   129  1057  3400               	retlw	0
   130  1058  340A               	retlw	10
   131  1059  3400               	retlw	0
   132  105A  3400               	retlw	0
   133  105B  3400               	retlw	0
   134  105C  3464               	retlw	100
   135  105D  3400               	retlw	0
   136  105E  3400               	retlw	0
   137  105F  3400               	retlw	0
   138  1060  34E8               	retlw	232
   139  1061  3403               	retlw	3
   140  1062  3400               	retlw	0
   141  1063  3400               	retlw	0
   142  1064  3410               	retlw	16
   143  1065  3427               	retlw	39
   144  1066  3400               	retlw	0
   145  1067  3400               	retlw	0
   146  1068  34A0               	retlw	160
   147  1069  3486               	retlw	134
   148  106A  3401               	retlw	1
   149  106B  3400               	retlw	0
   150  106C  3440               	retlw	64
   151  106D  3442               	retlw	66
   152  106E  340F               	retlw	15
   153  106F  3400               	retlw	0
   154  1070  3480               	retlw	128
   155  1071  3496               	retlw	150
   156  1072  3498               	retlw	152
   157  1073  3400               	retlw	0
   158  1074  3400               	retlw	0
   159  1075  34E1               	retlw	225
   160  1076  34F5               	retlw	245
   161  1077  3405               	retlw	5
   162  1078  3400               	retlw	0
   163  1079  34CA               	retlw	202
   164  107A  349A               	retlw	154
   165  107B  343B               	retlw	59
   166  000E                     _TMR1	set	14
   167  0001                     _TMR0	set	1
   168  000F                     _TMR1H	set	15
   169  000E                     _TMR1L	set	14
   170  005F                     _GIE	set	95
   171  0041                     _RD1	set	65
   172  0042                     _RD2	set	66
   173  0043                     _RD3	set	67
   174  0044                     _RD4	set	68
   175  0045                     _RD5	set	69
   176  0046                     _RD6	set	70
   177  0047                     _RD7	set	71
   178  005D                     _T0IE	set	93
   179  005A                     _T0IF	set	90
   180  0084                     _T1CKPS0	set	132
   181  0085                     _T1CKPS1	set	133
   182  0082                     _T1SYNC	set	130
   183  0081                     _TMR1CS	set	129
   184  0086                     _TMR1GE	set	134
   185  0080                     _TMR1ON	set	128
   186  0088                     _TRISD	set	136
   187  0408                     _PS0	set	1032
   188  0409                     _PS1	set	1033
   189  040A                     _PS2	set	1034
   190  040B                     _PSA	set	1035
   191  040D                     _T0CS	set	1037
   192  042C                     _TRISA4	set	1068
   193  0441                     _TRISD1	set	1089
   194  0442                     _TRISD2	set	1090
   195  0443                     _TRISD3	set	1091
   196  0444                     _TRISD4	set	1092
   197  0445                     _TRISD5	set	1093
   198  0446                     _TRISD6	set	1094
   199  0447                     _TRISD7	set	1095
   200  0448                     _TRISE0	set	1096
   201  0188                     _ANSEL	set	392
   202  0189                     _ANSELH	set	393
   203  107C                     STR_1:	
   204  107C  3478               	retlw	120	;'x'
   205  107D  3475               	retlw	117	;'u'
   206  107E  346E               	retlw	110	;'n'
   207  107F  3467               	retlw	103	;'g'
   208  1080  343A               	retlw	58	;':'
   209  1081  3420               	retlw	32	;' '
   210  1082  3425               	retlw	37	;'%'
   211  1083  3430               	retlw	48	;'0'
   212  1084  3438               	retlw	56	;'8'
   213  1085  3475               	retlw	117	;'u'
   214  1086  3400               	retlw	0
   215  1087                     STR_2:	
   216  1087  3466               	retlw	102	;'f'
   217  1088  343A               	retlw	58	;':'
   218  1089  3420               	retlw	32	;' '
   219  108A  3425               	retlw	37	;'%'
   220  108B  3433               	retlw	51	;'3'
   221  108C  342E               	retlw	46	;'.'
   222  108D  3432               	retlw	50	;'2'
   223  108E  3466               	retlw	102	;'f'
   224  108F  3400               	retlw	0
   225                           
   226                           	psect	cinit
   227  07E4                     start_initialization:	
   228                           
   229                           ; Clear objects allocated to BANK0
   230  07E4  01E4               	clrf	__pbssBANK0& (0+127)
   231  07E5  01E5               	clrf	(__pbssBANK0+1)& (0+127)
   232  07E6  01E6               	clrf	(__pbssBANK0+2)& (0+127)
   233                           
   234                           ; Clear objects allocated to BANK1
   235  07E7  1683               	bsf	3,5	;RP0=1, select bank1
   236  07E8  01C9               	clrf	__pbssBANK1& (0+127)
   237  07E9  01CA               	clrf	(__pbssBANK1+1)& (0+127)
   238  07EA  01CB               	clrf	(__pbssBANK1+2)& (0+127)
   239  07EB  01CC               	clrf	(__pbssBANK1+3)& (0+127)
   240  07EC  01CD               	clrf	(__pbssBANK1+4)& (0+127)
   241  07ED  01CE               	clrf	(__pbssBANK1+5)& (0+127)
   242  07EE  01CF               	clrf	(__pbssBANK1+6)& (0+127)
   243  07EF                     end_of_initialization:	
   244                           ;End of C runtime variable initialization code
   245                           
   246  07EF  0183               	clrf	3
   247  07F0  160A  118A  2DCD   	ljmp	_main	;jump to C main() function
   248                           
   249                           	psect	bssBANK0
   250  0064                     __pbssBANK0:	
   251  0064                     _dem:	
   252  0064                     	ds	3
   253                           
   254                           	psect	bssBANK1
   255  00C9                     __pbssBANK1:	
   256  00C9                     _xung:	
   257  00C9                     	ds	4
   258  00CD                     _f:	
   259  00CD                     	ds	3
   260                           
   261                           	psect	cstackBANK1
   262  00A0                     __pcstackBANK1:	
   263  00A0                     _fround$4113:	
   264                           
   265                           ; 3 bytes @ 0x0
   266  00A0                     	ds	3
   267  00A3                     _fround$4112:	
   268                           
   269                           ; 3 bytes @ 0x3
   270  00A3                     	ds	3
   271  00A6                     fround@prec:	
   272                           
   273                           ; 1 bytes @ 0x6
   274  00A6                     	ds	1
   275  00A7                     ?_printf:	
   276                           
   277                           ; 2 bytes @ 0x7
   278  00A7                     	ds	4
   279  00AB                     ??_printf:	
   280                           
   281                           ; 0 bytes @ 0xB
   282  00AB                     	ds	5
   283  00B0                     _printf$3166:	
   284                           
   285                           ; 4 bytes @ 0x10
   286  00B0                     	ds	4
   287  00B4                     printf@ap:	
   288                           
   289                           ; 1 bytes @ 0x14
   290  00B4                     	ds	1
   291  00B5                     printf@integ:	
   292                           
   293                           ; 3 bytes @ 0x15
   294  00B5                     	ds	3
   295  00B8                     printf@_val:	
   296                           
   297                           ; 4 bytes @ 0x18
   298  00B8                     	ds	4
   299  00BC                     printf@f:	
   300                           
   301                           ; 1 bytes @ 0x1C
   302  00BC                     	ds	1
   303  00BD                     printf@flag:	
   304                           
   305                           ; 2 bytes @ 0x1D
   306  00BD                     	ds	2
   307  00BF                     printf@exp:	
   308                           
   309                           ; 2 bytes @ 0x1F
   310  00BF                     	ds	2
   311  00C1                     printf@width:	
   312                           
   313                           ; 2 bytes @ 0x21
   314  00C1                     	ds	2
   315  00C3                     printf@fval:	
   316                           
   317                           ; 3 bytes @ 0x23
   318  00C3                     	ds	3
   319  00C6                     printf@prec:	
   320                           
   321                           ; 2 bytes @ 0x26
   322  00C6                     	ds	2
   323  00C8                     printf@c:	
   324                           
   325                           ; 1 bytes @ 0x28
   326  00C8                     	ds	1
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:	
   330  0070                     ?_lcd_init:	
   331  0070                     ?_lcd_putc:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_isprint:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ?_isdigit:	
   338                           ; 1 bit 
   339                           
   340  0070                     ?_main:	
   341                           ; 1 bit 
   342                           
   343  0070                     ?_putch:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_ngat:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_lcd_busy:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?i1___ftpack:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     i1___ftpack@arg:	
   356                           ; 3 bytes @ 0x0
   357                           
   358                           
   359                           ; 3 bytes @ 0x0
   360  0070                     	ds	3
   361  0073                     i1___ftpack@exp:	
   362                           
   363                           ; 1 bytes @ 0x3
   364  0073                     	ds	1
   365  0074                     i1___ftpack@sign:	
   366                           
   367                           ; 1 bytes @ 0x4
   368  0074                     	ds	1
   369  0075                     ??i1___ftpack:	
   370                           
   371                           ; 0 bytes @ 0x5
   372  0075                     	ds	3
   373  0078                     ?i1___ftadd:	
   374  0078                     i1___ftadd@f1:	
   375                           ; 3 bytes @ 0x8
   376                           
   377                           
   378                           ; 3 bytes @ 0x8
   379  0078                     	ds	3
   380  007B                     i1___ftadd@f2:	
   381                           
   382                           ; 3 bytes @ 0xB
   383  007B                     	ds	3
   384                           
   385                           	psect	cstackBANK0
   386  0020                     __pcstackBANK0:	
   387  0020                     ??i1___ftadd:	
   388                           
   389                           ; 0 bytes @ 0x0
   390  0020                     	ds	3
   391  0023                     i1___ftadd@sign:	
   392                           
   393                           ; 1 bytes @ 0x3
   394  0023                     	ds	1
   395  0024                     i1___ftadd@exp2:	
   396                           
   397                           ; 1 bytes @ 0x4
   398  0024                     	ds	1
   399  0025                     i1___ftadd@exp1:	
   400                           
   401                           ; 1 bytes @ 0x5
   402  0025                     	ds	1
   403  0026                     ??_ngat:	
   404                           
   405                           ; 0 bytes @ 0x6
   406  0026                     	ds	2
   407  0028                     ?_lcd_put_byte:	
   408  0028                     ??_lcd_busy:	
   409                           ; 0 bytes @ 0x8
   410                           
   411  0028                     ??_isprint:	
   412                           ; 0 bytes @ 0x8
   413                           
   414  0028                     ??_isdigit:	
   415                           ; 0 bytes @ 0x8
   416                           
   417  0028                     ?___ftge:	
   418                           ; 0 bytes @ 0x8
   419                           
   420  0028                     ?___lbmod:	
   421                           ; 1 bit 
   422                           
   423  0028                     ?___wmul:	
   424                           ; 1 bytes @ 0x8
   425                           
   426  0028                     ?___awmod:	
   427                           ; 2 bytes @ 0x8
   428                           
   429  0028                     ?___ftpack:	
   430                           ; 2 bytes @ 0x8
   431                           
   432  0028                     ?___ftneg:	
   433                           ; 3 bytes @ 0x8
   434                           
   435  0028                     ?__tdiv_to_l_:	
   436                           ; 3 bytes @ 0x8
   437                           
   438  0028                     ?__div_to_l_:	
   439                           ; 4 bytes @ 0x8
   440                           
   441  0028                     ?___lldiv:	
   442                           ; 4 bytes @ 0x8
   443                           
   444  0028                     lcd_put_byte@b:	
   445                           ; 4 bytes @ 0x8
   446                           
   447  0028                     _isdigit$3674:	
   448                           ; 1 bytes @ 0x8
   449                           
   450  0028                     _isprint$3677:	
   451                           ; 1 bytes @ 0x8
   452                           
   453  0028                     ___lbmod@divisor:	
   454                           ; 1 bytes @ 0x8
   455                           
   456  0028                     ___wmul@multiplier:	
   457                           ; 1 bytes @ 0x8
   458                           
   459  0028                     ___awmod@divisor:	
   460                           ; 2 bytes @ 0x8
   461                           
   462  0028                     ___ftneg@f1:	
   463                           ; 2 bytes @ 0x8
   464                           
   465  0028                     ___ftge@ff1:	
   466                           ; 3 bytes @ 0x8
   467                           
   468  0028                     __tdiv_to_l_@f1:	
   469                           ; 3 bytes @ 0x8
   470                           
   471  0028                     __div_to_l_@f1:	
   472                           ; 3 bytes @ 0x8
   473                           
   474  0028                     ___ftpack@arg:	
   475                           ; 3 bytes @ 0x8
   476                           
   477  0028                     ___lldiv@divisor:	
   478                           ; 3 bytes @ 0x8
   479                           
   480                           
   481                           ; 4 bytes @ 0x8
   482  0028                     	ds	1
   483  0029                     ??_lcd_put_byte:	
   484  0029                     ??___lbmod:	
   485                           ; 0 bytes @ 0x9
   486                           
   487  0029                     lcd_busy@busy:	
   488                           ; 0 bytes @ 0x9
   489                           
   490  0029                     isdigit@c:	
   491                           ; 1 bytes @ 0x9
   492                           
   493  0029                     isprint@c:	
   494                           ; 1 bytes @ 0x9
   495                           
   496                           
   497                           ; 1 bytes @ 0x9
   498  0029                     	ds	1
   499  002A                     ___lbmod@dividend:	
   500  002A                     ___wmul@multiplicand:	
   501                           ; 1 bytes @ 0xA
   502                           
   503  002A                     ___awmod@dividend:	
   504                           ; 2 bytes @ 0xA
   505                           
   506                           
   507                           ; 2 bytes @ 0xA
   508  002A                     	ds	1
   509  002B                     ??___ftneg:	
   510  002B                     lcd_put_byte@rs:	
   511                           ; 0 bytes @ 0xB
   512                           
   513  002B                     ___lbmod@counter:	
   514                           ; 1 bytes @ 0xB
   515                           
   516  002B                     ___ftpack@exp:	
   517                           ; 1 bytes @ 0xB
   518                           
   519  002B                     ___ftge@ff2:	
   520                           ; 1 bytes @ 0xB
   521                           
   522  002B                     __tdiv_to_l_@f2:	
   523                           ; 3 bytes @ 0xB
   524                           
   525  002B                     __div_to_l_@f2:	
   526                           ; 3 bytes @ 0xB
   527                           
   528                           
   529                           ; 3 bytes @ 0xB
   530  002B                     	ds	1
   531  002C                     ??___wmul:	
   532  002C                     ??___awmod:	
   533                           ; 0 bytes @ 0xC
   534                           
   535  002C                     lcd_put_byte@temp:	
   536                           ; 0 bytes @ 0xC
   537                           
   538  002C                     ___lbmod@rem:	
   539                           ; 1 bytes @ 0xC
   540                           
   541  002C                     ___awmod@counter:	
   542                           ; 1 bytes @ 0xC
   543                           
   544  002C                     ___ftpack@sign:	
   545                           ; 1 bytes @ 0xC
   546                           
   547  002C                     ___wmul@product:	
   548                           ; 1 bytes @ 0xC
   549                           
   550  002C                     ___lldiv@dividend:	
   551                           ; 2 bytes @ 0xC
   552                           
   553                           
   554                           ; 4 bytes @ 0xC
   555  002C                     	ds	1
   556  002D                     ??_lcd_init:	
   557  002D                     ?_lcd_gotoxy:	
   558                           ; 0 bytes @ 0xD
   559                           
   560  002D                     ??___ftpack:	
   561                           ; 0 bytes @ 0xD
   562                           
   563  002D                     ?___lbdiv:	
   564                           ; 0 bytes @ 0xD
   565                           
   566  002D                     lcd_gotoxy@row:	
   567                           ; 1 bytes @ 0xD
   568                           
   569  002D                     ___lbdiv@divisor:	
   570                           ; 1 bytes @ 0xD
   571                           
   572  002D                     ___awmod@sign:	
   573                           ; 1 bytes @ 0xD
   574                           
   575                           
   576                           ; 1 bytes @ 0xD
   577  002D                     	ds	1
   578  002E                     ??_lcd_gotoxy:	
   579  002E                     ??__tdiv_to_l_:	
   580                           ; 0 bytes @ 0xE
   581                           
   582  002E                     ??__div_to_l_:	
   583                           ; 0 bytes @ 0xE
   584                           
   585  002E                     ??___lbdiv:	
   586                           ; 0 bytes @ 0xE
   587                           
   588  002E                     ??___ftge:	
   589                           ; 0 bytes @ 0xE
   590                           
   591  002E                     ?___awdiv:	
   592                           ; 0 bytes @ 0xE
   593                           
   594  002E                     lcd_gotoxy@col:	
   595                           ; 2 bytes @ 0xE
   596                           
   597  002E                     ___lbdiv@dividend:	
   598                           ; 1 bytes @ 0xE
   599                           
   600  002E                     ___awdiv@divisor:	
   601                           ; 1 bytes @ 0xE
   602                           
   603                           
   604                           ; 2 bytes @ 0xE
   605  002E                     	ds	1
   606  002F                     lcd_gotoxy@address:	
   607  002F                     ___lbdiv@counter:	
   608                           ; 1 bytes @ 0xF
   609                           
   610                           
   611                           ; 1 bytes @ 0xF
   612  002F                     	ds	1
   613  0030                     ??_lcd_putc:	
   614  0030                     ??___lldiv:	
   615                           ; 0 bytes @ 0x10
   616                           
   617  0030                     ?___altoft:	
   618                           ; 0 bytes @ 0x10
   619                           
   620  0030                     ?___lltoft:	
   621                           ; 3 bytes @ 0x10
   622                           
   623  0030                     lcd_putc@c:	
   624                           ; 3 bytes @ 0x10
   625                           
   626  0030                     ___lbdiv@quotient:	
   627                           ; 1 bytes @ 0x10
   628                           
   629  0030                     ___awdiv@dividend:	
   630                           ; 1 bytes @ 0x10
   631                           
   632  0030                     ___lldiv@quotient:	
   633                           ; 2 bytes @ 0x10
   634                           
   635  0030                     ___altoft@c:	
   636                           ; 4 bytes @ 0x10
   637                           
   638  0030                     ___lltoft@c:	
   639                           ; 4 bytes @ 0x10
   640                           
   641                           
   642                           ; 4 bytes @ 0x10
   643  0030                     	ds	1
   644  0031                     ??_putch:	
   645  0031                     ?___bmul:	
   646                           ; 0 bytes @ 0x11
   647                           
   648  0031                     putch@c:	
   649                           ; 1 bytes @ 0x11
   650                           
   651  0031                     ___bmul@multiplicand:	
   652                           ; 1 bytes @ 0x11
   653                           
   654  0031                     __tdiv_to_l_@quot:	
   655                           ; 1 bytes @ 0x11
   656                           
   657                           
   658                           ; 4 bytes @ 0x11
   659  0031                     	ds	1
   660  0032                     ??___bmul:	
   661  0032                     ??___awdiv:	
   662                           ; 0 bytes @ 0x12
   663                           
   664  0032                     ___bmul@product:	
   665                           ; 0 bytes @ 0x12
   666                           
   667  0032                     ___awdiv@counter:	
   668                           ; 1 bytes @ 0x12
   669                           
   670                           
   671                           ; 1 bytes @ 0x12
   672  0032                     	ds	1
   673  0033                     ___bmul@multiplier:	
   674  0033                     ___awdiv@sign:	
   675                           ; 1 bytes @ 0x13
   676                           
   677                           
   678                           ; 1 bytes @ 0x13
   679  0033                     	ds	1
   680  0034                     ??___altoft:	
   681  0034                     ??___lltoft:	
   682                           ; 0 bytes @ 0x14
   683                           
   684  0034                     ___lldiv@counter:	
   685                           ; 0 bytes @ 0x14
   686                           
   687  0034                     ___altoft@exp:	
   688                           ; 1 bytes @ 0x14
   689                           
   690  0034                     ___lltoft@exp:	
   691                           ; 1 bytes @ 0x14
   692                           
   693  0034                     ___awdiv@quotient:	
   694                           ; 1 bytes @ 0x14
   695                           
   696                           
   697                           ; 2 bytes @ 0x14
   698  0034                     	ds	1
   699  0035                     ?___llmod:	
   700  0035                     ___altoft@sign:	
   701                           ; 4 bytes @ 0x15
   702                           
   703  0035                     __tdiv_to_l_@cntr:	
   704                           ; 1 bytes @ 0x15
   705                           
   706  0035                     ___llmod@divisor:	
   707                           ; 1 bytes @ 0x15
   708                           
   709                           
   710                           ; 4 bytes @ 0x15
   711  0035                     	ds	1
   712  0036                     ?___fttol:	
   713  0036                     __tdiv_to_l_@exp1:	
   714                           ; 4 bytes @ 0x16
   715                           
   716  0036                     ___fttol@f1:	
   717                           ; 1 bytes @ 0x16
   718                           
   719  0036                     __div_to_l_@quot:	
   720                           ; 3 bytes @ 0x16
   721                           
   722                           
   723                           ; 4 bytes @ 0x16
   724  0036                     	ds	3
   725  0039                     ___llmod@dividend:	
   726                           
   727                           ; 4 bytes @ 0x19
   728  0039                     	ds	1
   729  003A                     ??___fttol:	
   730  003A                     __div_to_l_@cntr:	
   731                           ; 0 bytes @ 0x1A
   732                           
   733                           
   734                           ; 1 bytes @ 0x1A
   735  003A                     	ds	1
   736  003B                     __div_to_l_@exp1:	
   737                           
   738                           ; 1 bytes @ 0x1B
   739  003B                     	ds	2
   740  003D                     ??___llmod:	
   741  003D                     ___fttol@sign1:	
   742                           ; 0 bytes @ 0x1D
   743                           
   744  003D                     ___llmod@counter:	
   745                           ; 1 bytes @ 0x1D
   746                           
   747                           
   748                           ; 1 bytes @ 0x1D
   749  003D                     	ds	1
   750  003E                     ___fttol@lval:	
   751                           
   752                           ; 4 bytes @ 0x1E
   753  003E                     	ds	4
   754  0042                     ___fttol@exp1:	
   755                           
   756                           ; 1 bytes @ 0x22
   757  0042                     	ds	1
   758  0043                     ?___ftmul:	
   759  0043                     ___ftmul@f1:	
   760                           ; 3 bytes @ 0x23
   761                           
   762                           
   763                           ; 3 bytes @ 0x23
   764  0043                     	ds	3
   765  0046                     ___ftmul@f2:	
   766                           
   767                           ; 3 bytes @ 0x26
   768  0046                     	ds	3
   769  0049                     ??___ftmul:	
   770                           
   771                           ; 0 bytes @ 0x29
   772  0049                     	ds	3
   773  004C                     ___ftmul@exp:	
   774                           
   775                           ; 1 bytes @ 0x2C
   776  004C                     	ds	1
   777  004D                     ___ftmul@f3_as_product:	
   778                           
   779                           ; 3 bytes @ 0x2D
   780  004D                     	ds	3
   781  0050                     ___ftmul@cntr:	
   782                           
   783                           ; 1 bytes @ 0x30
   784  0050                     	ds	1
   785  0051                     ___ftmul@sign:	
   786                           
   787                           ; 1 bytes @ 0x31
   788  0051                     	ds	1
   789  0052                     ?_scale:	
   790  0052                     ?___ftadd:	
   791                           ; 3 bytes @ 0x32
   792                           
   793  0052                     ___ftadd@f1:	
   794                           ; 3 bytes @ 0x32
   795                           
   796                           
   797                           ; 3 bytes @ 0x32
   798  0052                     	ds	3
   799  0055                     ??_scale:	
   800  0055                     ___ftadd@f2:	
   801                           ; 0 bytes @ 0x35
   802                           
   803                           
   804                           ; 3 bytes @ 0x35
   805  0055                     	ds	3
   806  0058                     ??___ftadd:	
   807                           
   808                           ; 0 bytes @ 0x38
   809  0058                     	ds	1
   810  0059                     _scale$4114:	
   811                           
   812                           ; 3 bytes @ 0x39
   813  0059                     	ds	2
   814  005B                     ___ftadd@sign:	
   815                           
   816                           ; 1 bytes @ 0x3B
   817  005B                     	ds	1
   818  005C                     scale@scl:	
   819  005C                     ___ftadd@exp2:	
   820                           ; 1 bytes @ 0x3C
   821                           
   822                           
   823                           ; 1 bytes @ 0x3C
   824  005C                     	ds	1
   825  005D                     ___ftadd@exp1:	
   826                           
   827                           ; 1 bytes @ 0x3D
   828  005D                     	ds	1
   829  005E                     ?_fround:	
   830  005E                     ?___ftsub:	
   831                           ; 3 bytes @ 0x3E
   832                           
   833  005E                     ___ftsub@f2:	
   834                           ; 3 bytes @ 0x3E
   835                           
   836                           
   837                           ; 3 bytes @ 0x3E
   838  005E                     	ds	3
   839  0061                     ??_fround:	
   840  0061                     ___ftsub@f1:	
   841                           ; 0 bytes @ 0x41
   842                           
   843                           
   844                           ; 3 bytes @ 0x41
   845  0061                     	ds	3
   846  0064                     ??_main:	
   847  0064                     ??___ftsub:	
   848                           ; 0 bytes @ 0x44
   849                           
   850                           
   851                           	psect	maintext
   852  15CD                     __pmaintext:	
   853                           ; 0 bytes @ 0x44
   854 ;;Data sizes: Strings 20, constant 118, data 0, bss 10, persistent 0 stack 0
   855 ;;Auto spaces:   Size  Autos    Used
   856 ;; COMMON          14     14      14
   857 ;; BANK0           80     68      71
   858 ;; BANK1           80     41      48
   859 ;; BANK3           96      0       0
   860 ;; BANK2           96      0       0
   861 ;;
   862 ;; Pointer list with targets:
   863 ;; ?i1___ftpack	float  size(1) Largest target is 0
   864 ;;
   865 ;; ?i1___ftadd	float  size(1) Largest target is 0
   866 ;;
   867 ;; ?___ftpack	float  size(1) Largest target is 0
   868 ;;
   869 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   870 ;;
   871 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   872 ;;
   873 ;; ?___lltoft	float  size(1) Largest target is 0
   874 ;;
   875 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   876 ;;
   877 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   878 ;;
   879 ;; ?___fttol	long  size(1) Largest target is 0
   880 ;;
   881 ;; ?___ftneg	float  size(1) Largest target is 0
   882 ;;
   883 ;; ?___awmod	int  size(1) Largest target is 40
   884 ;;		 -> dpowers(CODE[40]), 
   885 ;;
   886 ;; ?___awdiv	int  size(1) Largest target is 0
   887 ;;
   888 ;; ?_scale	int  size(1) Largest target is 0
   889 ;;
   890 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   891 ;;
   892 ;; ?_fround	unsigned int  size(1) Largest target is 0
   893 ;;
   894 ;; ?___ftadd	float  size(1) Largest target is 0
   895 ;;
   896 ;; ?___ftsub	float  size(1) Largest target is 0
   897 ;;
   898 ;; ?___ftmul	float  size(1) Largest target is 0
   899 ;;
   900 ;; ?___altoft	float  size(1) Largest target is 0
   901 ;;
   902 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   903 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   904 ;;
   905 ;; ?_printf	int  size(1) Largest target is 0
   906 ;;
   907 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   908 ;;		 -> ?_printf(BANK1[2]), 
   909 ;;
   910 ;; S3155$_cp	PTR const unsigned char  size(1) Largest target is 0
   911 ;;
   912 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   913 ;;
   914 ;;
   915 ;; Critical Paths under _main in COMMON
   916 ;;
   917 ;;   None.
   918 ;;
   919 ;; Critical Paths under _ngat in COMMON
   920 ;;
   921 ;;   _ngat->i1___ftadd
   922 ;;   i1___ftadd->i1___ftpack
   923 ;;
   924 ;; Critical Paths under _main in BANK0
   925 ;;
   926 ;;   _main->___ftsub
   927 ;;   _printf->___ftsub
   928 ;;   _putch->_lcd_putc
   929 ;;   _lcd_putc->_lcd_gotoxy
   930 ;;   ___ftsub->___ftadd
   931 ;;   _scale->___ftmul
   932 ;;   _fround->___ftadd
   933 ;;   _lcd_gotoxy->_lcd_put_byte
   934 ;;   _lcd_init->_lcd_put_byte
   935 ;;   ___lltoft->___ftpack
   936 ;;   ___altoft->___ftpack
   937 ;;   ___ftmul->___fttol
   938 ;;   ___ftadd->___ftmul
   939 ;;   ___llmod->___lldiv
   940 ;;   ___awdiv->___awmod
   941 ;;   ___fttol->___awdiv
   942 ;;   ___lbdiv->___lbmod
   943 ;;   ___bmul->___lbdiv
   944 ;;
   945 ;; Critical Paths under _ngat in BANK0
   946 ;;
   947 ;;   _ngat->i1___ftadd
   948 ;;
   949 ;; Critical Paths under _main in BANK1
   950 ;;
   951 ;;   _main->_printf
   952 ;;   _printf->_fround
   953 ;;
   954 ;; Critical Paths under _ngat in BANK1
   955 ;;
   956 ;;   None.
   957 ;;
   958 ;; Critical Paths under _main in BANK3
   959 ;;
   960 ;;   None.
   961 ;;
   962 ;; Critical Paths under _ngat in BANK3
   963 ;;
   964 ;;   None.
   965 ;;
   966 ;; Critical Paths under _main in BANK2
   967 ;;
   968 ;;   None.
   969 ;;
   970 ;; Critical Paths under _ngat in BANK2
   971 ;;
   972 ;;   None.
   973 ;;
   974 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   975 ;;
   976 ;;
   977 ;;Call Graph Tables:
   978 ;;
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (0) _main                                                 0     0      0   18010
   983 ;;                           _lcd_init
   984 ;;                           ___altoft
   985 ;;                            ___ftmul
   986 ;;                            ___ftsub
   987 ;;                         _lcd_gotoxy
   988 ;;                             _printf
   989 ;; ---------------------------------------------------------------------------------
   990 ;; (1) _printf                                              38    34      4   14535
   991 ;;                                              7 BANK1     34    30      4
   992 ;;                              _putch
   993 ;;                            _isdigit
   994 ;;                             ___wmul
   995 ;;                             ___ftge
   996 ;;                            ___ftneg
   997 ;;                            ___awdiv
   998 ;;                              _scale
   999 ;;                            ___ftmul
  1000 ;;                             _fround
  1001 ;;                            ___ftadd
  1002 ;;                            ___fttol
  1003 ;;                         __div_to_l_
  1004 ;;                        __tdiv_to_l_
  1005 ;;                           ___lltoft
  1006 ;;                            ___ftsub
  1007 ;;                            ___lldiv
  1008 ;;                            ___llmod
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (2) _putch                                                1     1      0     713
  1011 ;;                                             17 BANK0      1     1      0
  1012 ;;                           _lcd_putc
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (3) _lcd_putc                                             1     1      0     691
  1015 ;;                                             16 BANK0      1     1      0
  1016 ;;                       _lcd_put_byte
  1017 ;;                           _lcd_busy
  1018 ;;                         _lcd_gotoxy
  1019 ;;                            _isprint
  1020 ;; ---------------------------------------------------------------------------------
  1021 ;; (2) ___ftsub                                              6     0      6    1602
  1022 ;;                                             62 BANK0      6     0      6
  1023 ;;                            ___ftadd
  1024 ;;                            ___ftmul (ARG)
  1025 ;;                           ___altoft (ARG)
  1026 ;;                           ___lltoft (ARG)
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (2) _scale                                               14    11      3    2161
  1029 ;;                                             50 BANK0     11     8      3
  1030 ;;                            ___awmod
  1031 ;;                            ___awdiv
  1032 ;;                            ___ftmul
  1033 ;;                             ___bmul
  1034 ;;                            ___fttol (ARG)
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (2) _fround                                              13    10      3    1759
  1037 ;;                                             62 BANK0      3     0      3
  1038 ;;                                              0 BANK1      7     7      0
  1039 ;;                            ___lbmod
  1040 ;;                             ___bmul
  1041 ;;                            ___lbdiv
  1042 ;;                            ___ftmul
  1043 ;;                            ___ftadd (ARG)
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1046 ;;                                             13 BANK0      3     2      1
  1047 ;;                       _lcd_put_byte
  1048 ;;                           _lcd_busy
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (1) _lcd_init                                             4     4      0     244
  1051 ;;                                             13 BANK0      3     3      0
  1052 ;;                       _lcd_put_byte
  1053 ;;                           _lcd_busy
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (2) ___lltoft                                             5     1      4     414
  1056 ;;                                             16 BANK0      5     1      4
  1057 ;;                           ___ftpack
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (1) ___altoft                                             6     2      4     516
  1060 ;;                                             16 BANK0      6     2      4
  1061 ;;                           ___ftpack
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (3) ___ftmul                                             15     9      6     800
  1064 ;;                                             35 BANK0     15     9      6
  1065 ;;                           ___ftpack
  1066 ;;                           ___altoft (ARG)
  1067 ;;                            ___fttol (ARG)
  1068 ;;                            ___awdiv (ARG)
  1069 ;;                            ___awmod (ARG)
  1070 ;;                             ___bmul (ARG)
  1071 ;;                            ___lbdiv (ARG)
  1072 ;;                            ___lbmod (ARG)
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (3) ___ftadd                                             12     6      6    1537
  1075 ;;                                             50 BANK0     12     6      6
  1076 ;;                           ___ftpack
  1077 ;;                            ___lbmod (ARG)
  1078 ;;                             ___bmul (ARG)
  1079 ;;                            ___lbdiv (ARG)
  1080 ;;                            ___ftmul (ARG)
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (5) _lcd_busy                                             2     2      0      23
  1083 ;;                                              8 BANK0      2     2      0
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (5) _lcd_put_byte                                         5     4      1     221
  1086 ;;                                              8 BANK0      5     4      1
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (3) ___awmod                                              6     2      4     296
  1089 ;;                                              8 BANK0      6     2      4
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (2) ___lldiv                                             13     5      8     162
  1092 ;;                                              8 BANK0     13     5      8
  1093 ;; ---------------------------------------------------------------------------------
  1094 ;; (2) ___ftge                                               6     0      6     136
  1095 ;;                                              8 BANK0      6     0      6
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (2) ___ftneg                                              3     0      3      45
  1098 ;;                                              8 BANK0      3     0      3
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (2) ___llmod                                              9     1      8     159
  1101 ;;                                             21 BANK0      9     1      8
  1102 ;;                            ___lldiv (ARG)
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (3) ___awdiv                                              8     4      4     300
  1105 ;;                                             14 BANK0      8     4      4
  1106 ;;                            ___awmod (ARG)
  1107 ;; ---------------------------------------------------------------------------------
  1108 ;; (2) ___fttol                                             13     9      4     252
  1109 ;;                                             22 BANK0     13     9      4
  1110 ;;                           ___ftpack (ARG)
  1111 ;;                            ___awmod (ARG)
  1112 ;;                            ___awdiv (ARG)
  1113 ;;                             ___bmul (ARG)
  1114 ;; ---------------------------------------------------------------------------------
  1115 ;; (4) ___ftpack                                             8     3      5     312
  1116 ;;                                              8 BANK0      8     3      5
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (3) ___lbmod                                              5     4      1     232
  1119 ;;                                              8 BANK0      5     4      1
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (3) ___lbdiv                                              4     3      1     241
  1122 ;;                                             13 BANK0      4     3      1
  1123 ;;                            ___lbmod (ARG)
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (2) ___wmul                                               6     2      4     136
  1126 ;;                                              8 BANK0      6     2      4
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (3) ___bmul                                               3     2      1      68
  1129 ;;                                             17 BANK0      3     2      1
  1130 ;;                            ___lbmod (ARG)
  1131 ;;                            ___lbdiv (ARG)
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (2) __div_to_l_                                          20    14      6     446
  1134 ;;                                              8 BANK0     20    14      6
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1137 ;;                                              8 BANK0     15     9      6
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (2) _isdigit                                              2     2      0      68
  1140 ;;                                              8 BANK0      2     2      0
  1141 ;; ---------------------------------------------------------------------------------
  1142 ;; (4) _isprint                                              2     2      0      68
  1143 ;;                                              8 BANK0      2     2      0
  1144 ;; ---------------------------------------------------------------------------------
  1145 ;; Estimated maximum stack depth 5
  1146 ;; ---------------------------------------------------------------------------------
  1147 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (6) _ngat                                                 2     2      0    3432
  1150 ;;                                              6 BANK0      2     2      0
  1151 ;;                          i1___ftadd
  1152 ;; ---------------------------------------------------------------------------------
  1153 ;; (7) i1___ftadd                                           12     6      6    3432
  1154 ;;                                              8 COMMON     6     0      6
  1155 ;;                                              0 BANK0      6     6      0
  1156 ;;                         i1___ftpack
  1157 ;; ---------------------------------------------------------------------------------
  1158 ;; (8) i1___ftpack                                           8     3      5     679
  1159 ;;                                              0 COMMON     8     3      5
  1160 ;; ---------------------------------------------------------------------------------
  1161 ;; Estimated maximum stack depth 8
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; Call Graph Graphs:
  1164 ;; _main (ROOT)
  1165 ;;   _lcd_init
  1166 ;;     _lcd_put_byte
  1167 ;;     _lcd_busy
  1168 ;;   ___altoft
  1169 ;;     ___ftpack
  1170 ;;   ___ftmul
  1171 ;;     ___ftpack
  1172 ;;     ___altoft (ARG)
  1173 ;;       ___ftpack
  1174 ;;     ___fttol (ARG)
  1175 ;;       ___ftpack (ARG)
  1176 ;;       ___awmod (ARG)
  1177 ;;       ___awdiv (ARG)
  1178 ;;         ___awmod (ARG)
  1179 ;;       ___bmul (ARG)
  1180 ;;         ___lbmod (ARG)
  1181 ;;         ___lbdiv (ARG)
  1182 ;;           ___lbmod (ARG)
  1183 ;;     ___awdiv (ARG)
  1184 ;;       ___awmod (ARG)
  1185 ;;     ___awmod (ARG)
  1186 ;;     ___bmul (ARG)
  1187 ;;       ___lbmod (ARG)
  1188 ;;       ___lbdiv (ARG)
  1189 ;;         ___lbmod (ARG)
  1190 ;;     ___lbdiv (ARG)
  1191 ;;       ___lbmod (ARG)
  1192 ;;     ___lbmod (ARG)
  1193 ;;   ___ftsub
  1194 ;;     ___ftadd
  1195 ;;       ___ftpack
  1196 ;;       ___lbmod (ARG)
  1197 ;;       ___bmul (ARG)
  1198 ;;         ___lbmod (ARG)
  1199 ;;         ___lbdiv (ARG)
  1200 ;;           ___lbmod (ARG)
  1201 ;;       ___lbdiv (ARG)
  1202 ;;         ___lbmod (ARG)
  1203 ;;       ___ftmul (ARG)
  1204 ;;         ___ftpack
  1205 ;;         ___altoft (ARG)
  1206 ;;           ___ftpack
  1207 ;;         ___fttol (ARG)
  1208 ;;           ___ftpack (ARG)
  1209 ;;           ___awmod (ARG)
  1210 ;;           ___awdiv (ARG)
  1211 ;;             ___awmod (ARG)
  1212 ;;           ___bmul (ARG)
  1213 ;;             ___lbmod (ARG)
  1214 ;;             ___lbdiv (ARG)
  1215 ;;               ___lbmod (ARG)
  1216 ;;         ___awdiv (ARG)
  1217 ;;           ___awmod (ARG)
  1218 ;;         ___awmod (ARG)
  1219 ;;         ___bmul (ARG)
  1220 ;;           ___lbmod (ARG)
  1221 ;;           ___lbdiv (ARG)
  1222 ;;             ___lbmod (ARG)
  1223 ;;         ___lbdiv (ARG)
  1224 ;;           ___lbmod (ARG)
  1225 ;;         ___lbmod (ARG)
  1226 ;;     ___ftmul (ARG)
  1227 ;;       ___ftpack
  1228 ;;       ___altoft (ARG)
  1229 ;;         ___ftpack
  1230 ;;       ___fttol (ARG)
  1231 ;;         ___ftpack (ARG)
  1232 ;;         ___awmod (ARG)
  1233 ;;         ___awdiv (ARG)
  1234 ;;           ___awmod (ARG)
  1235 ;;         ___bmul (ARG)
  1236 ;;           ___lbmod (ARG)
  1237 ;;           ___lbdiv (ARG)
  1238 ;;             ___lbmod (ARG)
  1239 ;;       ___awdiv (ARG)
  1240 ;;         ___awmod (ARG)
  1241 ;;       ___awmod (ARG)
  1242 ;;       ___bmul (ARG)
  1243 ;;         ___lbmod (ARG)
  1244 ;;         ___lbdiv (ARG)
  1245 ;;           ___lbmod (ARG)
  1246 ;;       ___lbdiv (ARG)
  1247 ;;         ___lbmod (ARG)
  1248 ;;       ___lbmod (ARG)
  1249 ;;     ___altoft (ARG)
  1250 ;;       ___ftpack
  1251 ;;     ___lltoft (ARG)
  1252 ;;       ___ftpack
  1253 ;;   _lcd_gotoxy
  1254 ;;     _lcd_put_byte
  1255 ;;     _lcd_busy
  1256 ;;   _printf
  1257 ;;     _putch
  1258 ;;       _lcd_putc
  1259 ;;         _lcd_put_byte
  1260 ;;         _lcd_busy
  1261 ;;         _lcd_gotoxy
  1262 ;;           _lcd_put_byte
  1263 ;;           _lcd_busy
  1264 ;;         _isprint
  1265 ;;     _isdigit
  1266 ;;     ___wmul
  1267 ;;     ___ftge
  1268 ;;     ___ftneg
  1269 ;;     ___awdiv
  1270 ;;       ___awmod (ARG)
  1271 ;;     _scale
  1272 ;;       ___awmod
  1273 ;;       ___awdiv
  1274 ;;         ___awmod (ARG)
  1275 ;;       ___ftmul
  1276 ;;         ___ftpack
  1277 ;;         ___altoft (ARG)
  1278 ;;           ___ftpack
  1279 ;;         ___fttol (ARG)
  1280 ;;           ___ftpack (ARG)
  1281 ;;           ___awmod (ARG)
  1282 ;;           ___awdiv (ARG)
  1283 ;;             ___awmod (ARG)
  1284 ;;           ___bmul (ARG)
  1285 ;;             ___lbmod (ARG)
  1286 ;;             ___lbdiv (ARG)
  1287 ;;               ___lbmod (ARG)
  1288 ;;         ___awdiv (ARG)
  1289 ;;           ___awmod (ARG)
  1290 ;;         ___awmod (ARG)
  1291 ;;         ___bmul (ARG)
  1292 ;;           ___lbmod (ARG)
  1293 ;;           ___lbdiv (ARG)
  1294 ;;             ___lbmod (ARG)
  1295 ;;         ___lbdiv (ARG)
  1296 ;;           ___lbmod (ARG)
  1297 ;;         ___lbmod (ARG)
  1298 ;;       ___bmul
  1299 ;;         ___lbmod (ARG)
  1300 ;;         ___lbdiv (ARG)
  1301 ;;           ___lbmod (ARG)
  1302 ;;       ___fttol (ARG)
  1303 ;;         ___ftpack (ARG)
  1304 ;;         ___awmod (ARG)
  1305 ;;         ___awdiv (ARG)
  1306 ;;           ___awmod (ARG)
  1307 ;;         ___bmul (ARG)
  1308 ;;           ___lbmod (ARG)
  1309 ;;           ___lbdiv (ARG)
  1310 ;;             ___lbmod (ARG)
  1311 ;;     ___ftmul
  1312 ;;       ___ftpack
  1313 ;;       ___altoft (ARG)
  1314 ;;         ___ftpack
  1315 ;;       ___fttol (ARG)
  1316 ;;         ___ftpack (ARG)
  1317 ;;         ___awmod (ARG)
  1318 ;;         ___awdiv (ARG)
  1319 ;;           ___awmod (ARG)
  1320 ;;         ___bmul (ARG)
  1321 ;;           ___lbmod (ARG)
  1322 ;;           ___lbdiv (ARG)
  1323 ;;             ___lbmod (ARG)
  1324 ;;       ___awdiv (ARG)
  1325 ;;         ___awmod (ARG)
  1326 ;;       ___awmod (ARG)
  1327 ;;       ___bmul (ARG)
  1328 ;;         ___lbmod (ARG)
  1329 ;;         ___lbdiv (ARG)
  1330 ;;           ___lbmod (ARG)
  1331 ;;       ___lbdiv (ARG)
  1332 ;;         ___lbmod (ARG)
  1333 ;;       ___lbmod (ARG)
  1334 ;;     _fround
  1335 ;;       ___lbmod
  1336 ;;       ___bmul
  1337 ;;         ___lbmod (ARG)
  1338 ;;         ___lbdiv (ARG)
  1339 ;;           ___lbmod (ARG)
  1340 ;;       ___lbdiv
  1341 ;;         ___lbmod (ARG)
  1342 ;;       ___ftmul
  1343 ;;         ___ftpack
  1344 ;;         ___altoft (ARG)
  1345 ;;           ___ftpack
  1346 ;;         ___fttol (ARG)
  1347 ;;           ___ftpack (ARG)
  1348 ;;           ___awmod (ARG)
  1349 ;;           ___awdiv (ARG)
  1350 ;;             ___awmod (ARG)
  1351 ;;           ___bmul (ARG)
  1352 ;;             ___lbmod (ARG)
  1353 ;;             ___lbdiv (ARG)
  1354 ;;               ___lbmod (ARG)
  1355 ;;         ___awdiv (ARG)
  1356 ;;           ___awmod (ARG)
  1357 ;;         ___awmod (ARG)
  1358 ;;         ___bmul (ARG)
  1359 ;;           ___lbmod (ARG)
  1360 ;;           ___lbdiv (ARG)
  1361 ;;             ___lbmod (ARG)
  1362 ;;         ___lbdiv (ARG)
  1363 ;;           ___lbmod (ARG)
  1364 ;;         ___lbmod (ARG)
  1365 ;;       ___ftadd (ARG)
  1366 ;;         ___ftpack
  1367 ;;         ___lbmod (ARG)
  1368 ;;         ___bmul (ARG)
  1369 ;;           ___lbmod (ARG)
  1370 ;;           ___lbdiv (ARG)
  1371 ;;             ___lbmod (ARG)
  1372 ;;         ___lbdiv (ARG)
  1373 ;;           ___lbmod (ARG)
  1374 ;;         ___ftmul (ARG)
  1375 ;;           ___ftpack
  1376 ;;           ___altoft (ARG)
  1377 ;;             ___ftpack
  1378 ;;           ___fttol (ARG)
  1379 ;;             ___ftpack (ARG)
  1380 ;;             ___awmod (ARG)
  1381 ;;             ___awdiv (ARG)
  1382 ;;               ___awmod (ARG)
  1383 ;;             ___bmul (ARG)
  1384 ;;               ___lbmod (ARG)
  1385 ;;               ___lbdiv (ARG)
  1386 ;;                 ___lbmod (ARG)
  1387 ;;           ___awdiv (ARG)
  1388 ;;             ___awmod (ARG)
  1389 ;;           ___awmod (ARG)
  1390 ;;           ___bmul (ARG)
  1391 ;;             ___lbmod (ARG)
  1392 ;;             ___lbdiv (ARG)
  1393 ;;               ___lbmod (ARG)
  1394 ;;           ___lbdiv (ARG)
  1395 ;;             ___lbmod (ARG)
  1396 ;;           ___lbmod (ARG)
  1397 ;;     ___ftadd
  1398 ;;       ___ftpack
  1399 ;;       ___lbmod (ARG)
  1400 ;;       ___bmul (ARG)
  1401 ;;         ___lbmod (ARG)
  1402 ;;         ___lbdiv (ARG)
  1403 ;;           ___lbmod (ARG)
  1404 ;;       ___lbdiv (ARG)
  1405 ;;         ___lbmod (ARG)
  1406 ;;       ___ftmul (ARG)
  1407 ;;         ___ftpack
  1408 ;;         ___altoft (ARG)
  1409 ;;           ___ftpack
  1410 ;;         ___fttol (ARG)
  1411 ;;           ___ftpack (ARG)
  1412 ;;           ___awmod (ARG)
  1413 ;;           ___awdiv (ARG)
  1414 ;;             ___awmod (ARG)
  1415 ;;           ___bmul (ARG)
  1416 ;;             ___lbmod (ARG)
  1417 ;;             ___lbdiv (ARG)
  1418 ;;               ___lbmod (ARG)
  1419 ;;         ___awdiv (ARG)
  1420 ;;           ___awmod (ARG)
  1421 ;;         ___awmod (ARG)
  1422 ;;         ___bmul (ARG)
  1423 ;;           ___lbmod (ARG)
  1424 ;;           ___lbdiv (ARG)
  1425 ;;             ___lbmod (ARG)
  1426 ;;         ___lbdiv (ARG)
  1427 ;;           ___lbmod (ARG)
  1428 ;;         ___lbmod (ARG)
  1429 ;;     ___fttol
  1430 ;;       ___ftpack (ARG)
  1431 ;;       ___awmod (ARG)
  1432 ;;       ___awdiv (ARG)
  1433 ;;         ___awmod (ARG)
  1434 ;;       ___bmul (ARG)
  1435 ;;         ___lbmod (ARG)
  1436 ;;         ___lbdiv (ARG)
  1437 ;;           ___lbmod (ARG)
  1438 ;;     __div_to_l_
  1439 ;;     __tdiv_to_l_
  1440 ;;     ___lltoft
  1441 ;;       ___ftpack
  1442 ;;     ___ftsub
  1443 ;;       ___ftadd
  1444 ;;         ___ftpack
  1445 ;;         ___lbmod (ARG)
  1446 ;;         ___bmul (ARG)
  1447 ;;           ___lbmod (ARG)
  1448 ;;           ___lbdiv (ARG)
  1449 ;;             ___lbmod (ARG)
  1450 ;;         ___lbdiv (ARG)
  1451 ;;           ___lbmod (ARG)
  1452 ;;         ___ftmul (ARG)
  1453 ;;           ___ftpack
  1454 ;;           ___altoft (ARG)
  1455 ;;             ___ftpack
  1456 ;;           ___fttol (ARG)
  1457 ;;             ___ftpack (ARG)
  1458 ;;             ___awmod (ARG)
  1459 ;;             ___awdiv (ARG)
  1460 ;;               ___awmod (ARG)
  1461 ;;             ___bmul (ARG)
  1462 ;;               ___lbmod (ARG)
  1463 ;;               ___lbdiv (ARG)
  1464 ;;                 ___lbmod (ARG)
  1465 ;;           ___awdiv (ARG)
  1466 ;;             ___awmod (ARG)
  1467 ;;           ___awmod (ARG)
  1468 ;;           ___bmul (ARG)
  1469 ;;             ___lbmod (ARG)
  1470 ;;             ___lbdiv (ARG)
  1471 ;;               ___lbmod (ARG)
  1472 ;;           ___lbdiv (ARG)
  1473 ;;             ___lbmod (ARG)
  1474 ;;           ___lbmod (ARG)
  1475 ;;       ___ftmul (ARG)
  1476 ;;         ___ftpack
  1477 ;;         ___altoft (ARG)
  1478 ;;           ___ftpack
  1479 ;;         ___fttol (ARG)
  1480 ;;           ___ftpack (ARG)
  1481 ;;           ___awmod (ARG)
  1482 ;;           ___awdiv (ARG)
  1483 ;;             ___awmod (ARG)
  1484 ;;           ___bmul (ARG)
  1485 ;;             ___lbmod (ARG)
  1486 ;;             ___lbdiv (ARG)
  1487 ;;               ___lbmod (ARG)
  1488 ;;         ___awdiv (ARG)
  1489 ;;           ___awmod (ARG)
  1490 ;;         ___awmod (ARG)
  1491 ;;         ___bmul (ARG)
  1492 ;;           ___lbmod (ARG)
  1493 ;;           ___lbdiv (ARG)
  1494 ;;             ___lbmod (ARG)
  1495 ;;         ___lbdiv (ARG)
  1496 ;;           ___lbmod (ARG)
  1497 ;;         ___lbmod (ARG)
  1498 ;;       ___altoft (ARG)
  1499 ;;         ___ftpack
  1500 ;;       ___lltoft (ARG)
  1501 ;;         ___ftpack
  1502 ;;     ___lldiv
  1503 ;;     ___llmod
  1504 ;;       ___lldiv (ARG)
  1505 ;;
  1506 ;; _ngat (ROOT)
  1507 ;;   i1___ftadd
  1508 ;;     i1___ftpack
  1509 ;;
  1510 ;; Address spaces:
  1511 ;;Name               Size   Autos  Total    Cost      Usage
  1512 ;;BITCOMMON            E      0       0       0        0.0%
  1513 ;;EEDATA             100      0       0       0        0.0%
  1514 ;;NULL                 0      0       0       0        0.0%
  1515 ;;CODE                 0      0       0       0        0.0%
  1516 ;;COMMON               E      E       E       1      100.0%
  1517 ;;BITSFR0              0      0       0       1        0.0%
  1518 ;;SFR0                 0      0       0       1        0.0%
  1519 ;;BITSFR1              0      0       0       2        0.0%
  1520 ;;SFR1                 0      0       0       2        0.0%
  1521 ;;STACK                0      0       B       2        0.0%
  1522 ;;ABS                  0      0      85       3        0.0%
  1523 ;;BITBANK0            50      0       0       4        0.0%
  1524 ;;BITSFR3              0      0       0       4        0.0%
  1525 ;;SFR3                 0      0       0       4        0.0%
  1526 ;;BANK0               50     44      47       5       88.8%
  1527 ;;BITSFR2              0      0       0       5        0.0%
  1528 ;;SFR2                 0      0       0       5        0.0%
  1529 ;;BITBANK1            50      0       0       6        0.0%
  1530 ;;BANK1               50     29      30       7       60.0%
  1531 ;;BITBANK3            60      0       0       8        0.0%
  1532 ;;BANK3               60      0       0       9        0.0%
  1533 ;;BITBANK2            60      0       0      10        0.0%
  1534 ;;BANK2               60      0       0      11        0.0%
  1535 ;;DATA                 0      0      90      12        0.0%
  1536                           
  1537                           
  1538 ;; *************** function _main *****************
  1539 ;; Defined at:
  1540 ;;		line 18 in file "D:\TTVXL\Project TTVXL\BT02week12ttvxl\BT02week12ttvxl.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;		None
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;		None               void
  1547 ;; Registers used:
  1548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 17F/0
  1551 ;;		On exit  : 60/20
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         0       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         0       0       0       0       0
  1558 ;;Total ram usage:        0 bytes
  1559 ;; Hardware stack levels required when called:    8
  1560 ;; This function calls:
  1561 ;;		_lcd_init
  1562 ;;		___altoft
  1563 ;;		___ftmul
  1564 ;;		___ftsub
  1565 ;;		_lcd_gotoxy
  1566 ;;		_printf
  1567 ;; This function is called by:
  1568 ;;		Startup code after reset
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571  15CD                     _main:	
  1572                           
  1573                           ;BT02week12ttvxl.c: 19: ANSEL = ANSELH = 0;
  1574                           
  1575                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1576  15CD  1683               	bsf	3,5	;RP0=1, select bank3
  1577  15CE  1703               	bsf	3,6	;RP1=1, select bank3
  1578  15CF  0189               	clrf	9	;volatile
  1579  15D0  0188               	clrf	8	;volatile
  1580                           
  1581                           ;BT02week12ttvxl.c: 20: lcd_init();
  1582  15D1  120A  158A  22FE   	fcall	_lcd_init
      +       160A  118A         
  1583                           
  1584                           ;BT02week12ttvxl.c: 21: TRISA4 = 1;
  1585  15D6  1683               	bsf	3,5	;RP0=1, select bank1
  1586  15D7  1605               	bsf	5,4
  1587                           
  1588                           ;BT02week12ttvxl.c: 22: TRISD = 0x00;
  1589  15D8  0188               	clrf	8	;volatile
  1590  15D9  3007               	movlw	7
  1591                           
  1592                           ;BT02week12ttvxl.c: 23: TRISE0 = 0;
  1593  15DA  1009               	bcf	9,0
  1594                           
  1595                           ;BT02week12ttvxl.c: 26: T0CS = 0;
  1596  15DB  1281               	bcf	1,5
  1597                           
  1598                           ;BT02week12ttvxl.c: 27: PSA = 0;
  1599  15DC  1181               	bcf	1,3
  1600                           
  1601                           ;BT02week12ttvxl.c: 28: PS2= 0; PS1 = 1; PS0= 0;
  1602  15DD  1101               	bcf	1,2
  1603  15DE  1481               	bsf	1,1
  1604  15DF  1001               	bcf	1,0
  1605                           
  1606                           ;BT02week12ttvxl.c: 29: TMR0 = 7;
  1607  15E0  1283               	bcf	3,5	;RP0=0, select bank0
  1608  15E1  0081               	movwf	1	;volatile
  1609                           
  1610                           ;BT02week12ttvxl.c: 32: T0IE = 1;
  1611  15E2  168B               	bsf	11,5
  1612                           
  1613                           ;BT02week12ttvxl.c: 33: T0IF = 0;
  1614  15E3  110B               	bcf	11,2
  1615                           
  1616                           ;BT02week12ttvxl.c: 34: GIE = 1;
  1617  15E4  178B               	bsf	11,7
  1618                           
  1619                           ;BT02week12ttvxl.c: 37: TMR1GE=0;
  1620  15E5  1310               	bcf	16,6
  1621                           
  1622                           ;BT02week12ttvxl.c: 38: TMR1CS=1;
  1623  15E6  1490               	bsf	16,1
  1624                           
  1625                           ;BT02week12ttvxl.c: 39: T1SYNC=1;
  1626  15E7  1510               	bsf	16,2
  1627                           
  1628                           ;BT02week12ttvxl.c: 40: T1CKPS1=0;T1CKPS0=0;
  1629  15E8  1290               	bcf	16,5
  1630  15E9  1210               	bcf	16,4
  1631                           
  1632                           ;BT02week12ttvxl.c: 42: TMR1ON=1;
  1633  15EA  1410               	bsf	16,0
  1634                           
  1635                           ;BT02week12ttvxl.c: 43: TMR1H=0;
  1636  15EB  018F               	clrf	15	;volatile
  1637                           
  1638                           ;BT02week12ttvxl.c: 44: TMR1L=0;
  1639  15EC  018E               	clrf	14	;volatile
  1640  15ED                     l8313:	
  1641                           
  1642                           ;BT02week12ttvxl.c: 52: {
  1643                           ;BT02week12ttvxl.c: 53: f = xung-xung*0.0038;
  1644  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  1645  15EE  084C               	movf	(_xung+3)^(0+128),w
  1646  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  1647  15F0  00B3               	movwf	?___altoft+3
  1648  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  1649  15F2  084B               	movf	(_xung+2)^(0+128),w
  1650  15F3  1283               	bcf	3,5	;RP0=0, select bank0
  1651  15F4  00B2               	movwf	?___altoft+2
  1652  15F5  1683               	bsf	3,5	;RP0=1, select bank1
  1653  15F6  084A               	movf	(_xung+1)^(0+128),w
  1654  15F7  1283               	bcf	3,5	;RP0=0, select bank0
  1655  15F8  00B1               	movwf	?___altoft+1
  1656  15F9  1683               	bsf	3,5	;RP0=1, select bank1
  1657  15FA  0849               	movf	_xung^(0+128),w
  1658  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  1659  15FC  00B0               	movwf	?___altoft
  1660  15FD  120A  158A  24A8   	fcall	___altoft
      +       160A  118A         
  1661  1602  0830               	movf	?___altoft,w
  1662  1603  00C6               	movwf	?___ftmul+3
  1663  1604  0831               	movf	?___altoft+1,w
  1664  1605  00C7               	movwf	?___ftmul+4
  1665  1606  0832               	movf	?___altoft+2,w
  1666  1607  00C8               	movwf	?___ftmul+5
  1667  1608  3009               	movlw	9
  1668  1609  00C3               	movwf	?___ftmul
  1669  160A  3079               	movlw	121
  1670  160B  00C4               	movwf	?___ftmul+1
  1671  160C  303B               	movlw	59
  1672  160D  00C5               	movwf	?___ftmul+2
  1673  160E  120A  158A  26EB   	fcall	___ftmul
      +       160A  118A         
  1674  1613  0843               	movf	?___ftmul,w
  1675  1614  00DE               	movwf	?___ftsub
  1676  1615  0844               	movf	?___ftmul+1,w
  1677  1616  00DF               	movwf	?___ftsub+1
  1678  1617  0845               	movf	?___ftmul+2,w
  1679  1618  00E0               	movwf	?___ftsub+2
  1680  1619  1683               	bsf	3,5	;RP0=1, select bank1
  1681  161A  084C               	movf	(_xung+3)^(0+128),w
  1682  161B  1283               	bcf	3,5	;RP0=0, select bank0
  1683  161C  00B3               	movwf	?___altoft+3
  1684  161D  1683               	bsf	3,5	;RP0=1, select bank1
  1685  161E  084B               	movf	(_xung+2)^(0+128),w
  1686  161F  1283               	bcf	3,5	;RP0=0, select bank0
  1687  1620  00B2               	movwf	?___altoft+2
  1688  1621  1683               	bsf	3,5	;RP0=1, select bank1
  1689  1622  084A               	movf	(_xung+1)^(0+128),w
  1690  1623  1283               	bcf	3,5	;RP0=0, select bank0
  1691  1624  00B1               	movwf	?___altoft+1
  1692  1625  1683               	bsf	3,5	;RP0=1, select bank1
  1693  1626  0849               	movf	_xung^(0+128),w
  1694  1627  1283               	bcf	3,5	;RP0=0, select bank0
  1695  1628  00B0               	movwf	?___altoft
  1696  1629  120A  158A  24A8   	fcall	___altoft
      +       160A  118A         
  1697  162E  0830               	movf	?___altoft,w
  1698  162F  00E1               	movwf	?___ftsub+3
  1699  1630  0831               	movf	?___altoft+1,w
  1700  1631  00E2               	movwf	?___ftsub+4
  1701  1632  0832               	movf	?___altoft+2,w
  1702  1633  00E3               	movwf	?___ftsub+5
  1703  1634  120A  118A  26C6   	fcall	___ftsub
      +       160A  118A         
  1704  1639  085E               	movf	?___ftsub,w
  1705  163A  1683               	bsf	3,5	;RP0=1, select bank1
  1706  163B  00CD               	movwf	_f^(0+128)
  1707  163C  1283               	bcf	3,5	;RP0=0, select bank0
  1708  163D  085F               	movf	?___ftsub+1,w
  1709  163E  1683               	bsf	3,5	;RP0=1, select bank1
  1710  163F  00CE               	movwf	(_f+1)^(0+128)
  1711  1640  1283               	bcf	3,5	;RP0=0, select bank0
  1712  1641  0860               	movf	?___ftsub+2,w
  1713  1642  1683               	bsf	3,5	;RP0=1, select bank1
  1714  1643  00CF               	movwf	(_f+2)^(0+128)
  1715                           
  1716                           ;BT02week12ttvxl.c: 54: lcd_gotoxy(0,0);
  1717  1644  1283               	bcf	3,5	;RP0=0, select bank0
  1718  1645  3000               	movlw	0
  1719  1646  01AD               	clrf	?_lcd_gotoxy
  1720  1647  120A  158A  22B7   	fcall	_lcd_gotoxy
      +       160A  118A         
  1721                           
  1722                           ;BT02week12ttvxl.c: 55: printf("xung: %08u",xung);
  1723  164C  1683               	bsf	3,5	;RP0=1, select bank1
  1724  164D  084C               	movf	(_xung+3)^(0+128),w
  1725  164E  00AA               	movwf	(?_printf+3)^(0+128)
  1726  164F  084B               	movf	(_xung+2)^(0+128),w
  1727  1650  00A9               	movwf	(?_printf+2)^(0+128)
  1728  1651  084A               	movf	(_xung+1)^(0+128),w
  1729  1652  00A8               	movwf	(?_printf+1)^(0+128)
  1730  1653  0849               	movf	_xung^(0+128),w
  1731  1654  00A7               	movwf	?_printf^(0+128)
  1732  1655  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1733  1656  120A  118A  2011   	fcall	_printf
      +       160A  118A         
  1734                           
  1735                           ;BT02week12ttvxl.c: 56: lcd_gotoxy(0,1);
  1736  165B  1283               	bcf	3,5	;RP0=0, select bank0
  1737  165C  3000               	movlw	0
  1738  165D  01AD               	clrf	?_lcd_gotoxy
  1739  165E  0AAD               	incf	?_lcd_gotoxy,f
  1740  165F  120A  158A  22B7   	fcall	_lcd_gotoxy
      +       160A  118A         
  1741                           
  1742                           ;BT02week12ttvxl.c: 57: printf("f: %3.2f",f);
  1743  1664  1683               	bsf	3,5	;RP0=1, select bank1
  1744  1665  084D               	movf	_f^(0+128),w
  1745  1666  00A7               	movwf	?_printf^(0+128)
  1746  1667  084E               	movf	(_f+1)^(0+128),w
  1747  1668  00A8               	movwf	(?_printf+1)^(0+128)
  1748  1669  084F               	movf	(_f+2)^(0+128),w
  1749  166A  00A9               	movwf	(?_printf+2)^(0+128)
  1750  166B  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1751  166C  120A  118A  2011   	fcall	_printf
      +       160A  118A         
  1752  1671  2DED               	goto	l8313
  1753  1672                     __end_of_main:	
  1754                           
  1755                           	psect	text754
  1756  0011                     __ptext754:	
  1757 ;; =============== function _main ends ============
  1758                           
  1759                           
  1760 ;; *************** function _printf *****************
  1761 ;; Defined at:
  1762 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  f               1    wreg     PTR const unsigned char 
  1765 ;;		 -> STR_2(9), STR_1(11), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  f               1   28[BANK1 ] PTR const unsigned char 
  1768 ;;		 -> STR_2(9), STR_1(11), 
  1769 ;;  _val            4   24[BANK1 ] struct .
  1770 ;;  fval            3   35[BANK1 ] struct .
  1771 ;;  integ           3   21[BANK1 ] struct .
  1772 ;;  ival            3    0        struct .
  1773 ;;  prec            2   38[BANK1 ] int 
  1774 ;;  width           2   33[BANK1 ] int 
  1775 ;;  exp             2   31[BANK1 ] int 
  1776 ;;  flag            2   29[BANK1 ] unsigned short 
  1777 ;;  c               1   40[BANK1 ] char 
  1778 ;;  ap              1   20[BANK1 ] PTR void [1]
  1779 ;;		 -> ?_printf(2), 
  1780 ;;  d               1    0        unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  2    7[BANK1 ] int 
  1783 ;; Registers used:
  1784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 60/20
  1787 ;;		On exit  : 60/20
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1790 ;;      Params:         0       0       4       0       0
  1791 ;;      Locals:         0       0      25       0       0
  1792 ;;      Temps:          0       0       5       0       0
  1793 ;;      Totals:         0       0      34       0       0
  1794 ;;Total ram usage:       34 bytes
  1795 ;; Hardware stack levels used:    1
  1796 ;; Hardware stack levels required when called:    7
  1797 ;; This function calls:
  1798 ;;		_putch
  1799 ;;		_isdigit
  1800 ;;		___wmul
  1801 ;;		___ftge
  1802 ;;		___ftneg
  1803 ;;		___awdiv
  1804 ;;		_scale
  1805 ;;		___ftmul
  1806 ;;		_fround
  1807 ;;		___ftadd
  1808 ;;		___fttol
  1809 ;;		__div_to_l_
  1810 ;;		__tdiv_to_l_
  1811 ;;		___lltoft
  1812 ;;		___ftsub
  1813 ;;		___lldiv
  1814 ;;		___llmod
  1815 ;; This function is called by:
  1816 ;;		_main
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819  0011                     _printf:	
  1820                           
  1821 ;; using string table level
  1822                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1823                           ;printf@f stored from wreg
  1824  0011  00BC               	movwf	printf@f^(0+128)
  1825  0012  30A7               	movlw	?_printf& (0+255)
  1826  0013  00B4               	movwf	printf@ap^(0+128)
  1827  0014                     l8267:	
  1828  0014  1683               	bsf	3,5	;RP0=1, select bank1
  1829  0015  083C               	movf	printf@f^(0+128),w
  1830  0016  0ABC               	incf	printf@f^(0+128),f
  1831  0017  0084               	movwf	4
  1832  0018  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1833  001D  00C8               	movwf	printf@c^(0+128)
  1834  001E  08C8               	movf	printf@c^(0+128),f
  1835  001F  1903               	btfsc	3,2
  1836  0020  0008               	return
  1837  0021  3A25               	xorlw	37
  1838  0022  1903               	skipnz
  1839  0023  2829               	goto	l7995
  1840  0024  0848               	movf	printf@c^(0+128),w
  1841  0025  2563  120A  118A   	fcall	_putch
  1842  0028  2814               	goto	l8267
  1843  0029                     l7995:	
  1844  0029  01C1               	clrf	printf@width^(0+128)
  1845  002A  01C2               	clrf	(printf@width+1)^(0+128)
  1846  002B  01BD               	clrf	printf@flag^(0+128)
  1847  002C  01BE               	clrf	(printf@flag+1)^(0+128)
  1848  002D  2830               	goto	l8001
  1849  002E                     l2204:	
  1850  002E  153D               	bsf	printf@flag^(0+128),2
  1851  002F  0ABC               	incf	printf@f^(0+128),f
  1852  0030                     l8001:	
  1853  0030  083C               	movf	printf@f^(0+128),w
  1854  0031  0084               	movwf	4
  1855  0032  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1856                           
  1857                           ; Switch size 1, requested type "space"
  1858                           ; Number of cases is 1, Range of values is 48 to 48
  1859                           ; switch strategies available:
  1860                           ; Name         Instructions Cycles
  1861                           ; simple_byte            4     3 (average)
  1862                           ; direct_byte           14    11 (fixed)
  1863                           ; jumptable            263     9 (fixed)
  1864                           ;	Chosen strategy is simple_byte
  1865  0037  3A30               	xorlw	48	; case 48
  1866  0038  1903               	skipnz
  1867  0039  282E               	goto	l2204
  1868  003A  283B               	goto	l8003
  1869  003B                     l8003:	
  1870  003B  083C               	movf	printf@f^(0+128),w
  1871  003C  0084               	movwf	4
  1872  003D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1873  0042  25D3  120A  118A   	fcall	_isdigit
  1874  0045  1C03               	btfss	3,0
  1875  0046  2870               	goto	l8013
  1876  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0048  01C1               	clrf	printf@width^(0+128)
  1878  0049  01C2               	clrf	(printf@width+1)^(0+128)
  1879  004A                     l8007:	
  1880  004A  1683               	bsf	3,5	;RP0=1, select bank1
  1881  004B  0842               	movf	(printf@width+1)^(0+128),w
  1882  004C  1283               	bcf	3,5	;RP0=0, select bank0
  1883  004D  00A9               	movwf	?___wmul+1
  1884  004E  1683               	bsf	3,5	;RP0=1, select bank1
  1885  004F  0841               	movf	printf@width^(0+128),w
  1886  0050  2764  120A  118A   	fcall	PL30	;call to abstracted procedure
  1887  0053  25E2               	fcall	___wmul
  1888  0054  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0055  083C               	movf	printf@f^(0+128),w
  1890  0056  0084               	movwf	4
  1891  0057  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1892  005C  270D               	fcall	PL7	;call to abstracted procedure
  1893  005D  00C1               	movwf	printf@width^(0+128)
  1894  005E  082C               	movf	(??_printf+1)^(0+128),w
  1895  005F  1803               	skipnc
  1896  0060  3E01               	addlw	1
  1897  0061  3EFF               	addlw	255
  1898  0062  00C2               	movwf	(printf@width+1)^(0+128)
  1899  0063  0ABC               	incf	printf@f^(0+128),f
  1900  0064  083C               	movf	printf@f^(0+128),w
  1901  0065  0084               	movwf	4
  1902  0066  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1903  006B  25D3  120A  118A   	fcall	_isdigit
  1904  006E  1803               	btfsc	3,0
  1905  006F  284A               	goto	l8007
  1906  0070                     l8013:	
  1907  0070  1683               	bsf	3,5	;RP0=1, select bank1
  1908  0071  083C               	movf	printf@f^(0+128),w
  1909  0072  0084               	movwf	4
  1910  0073  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1911  0078  3A2E               	xorlw	46
  1912  0079  1D03               	skipz
  1913  007A  28A8               	goto	l8027
  1914  007B  173E               	bsf	(printf@flag^(0+128)+1),6
  1915  007C  0ABC               	incf	printf@f^(0+128),f
  1916  007D  01C6               	clrf	printf@prec^(0+128)
  1917  007E  01C7               	clrf	(printf@prec+1)^(0+128)
  1918  007F                     l8025:	
  1919  007F  083C               	movf	printf@f^(0+128),w
  1920  0080  0084               	movwf	4
  1921  0081  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1922  0086  25D3  120A  118A   	fcall	_isdigit
  1923  0089  1C03               	btfss	3,0
  1924  008A  28B1               	goto	l8035
  1925  008B  1683               	bsf	3,5	;RP0=1, select bank1
  1926  008C  0847               	movf	(printf@prec+1)^(0+128),w
  1927  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1928  008E  00A9               	movwf	?___wmul+1
  1929  008F  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0090  0846               	movf	printf@prec^(0+128),w
  1931  0091  2764  120A  118A   	fcall	PL30	;call to abstracted procedure
  1932  0094  25E2               	fcall	___wmul
  1933  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0096  083C               	movf	printf@f^(0+128),w
  1935  0097  0084               	movwf	4
  1936  0098  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1937  009D  270D  120A  118A   	fcall	PL7	;call to abstracted procedure
  1938  00A0  00C6               	movwf	printf@prec^(0+128)
  1939  00A1  082C               	movf	(??_printf+1)^(0+128),w
  1940  00A2  1803               	skipnc
  1941  00A3  3E01               	addlw	1
  1942  00A4  3EFF               	addlw	255
  1943  00A5  00C7               	movwf	(printf@prec+1)^(0+128)
  1944  00A6  0ABC               	incf	printf@f^(0+128),f
  1945  00A7  287F               	goto	l8025
  1946  00A8                     l8027:	
  1947  00A8  01C6               	clrf	printf@prec^(0+128)
  1948  00A9  01C7               	clrf	(printf@prec+1)^(0+128)
  1949  00AA  163E               	bsf	(printf@flag^(0+128)+1),4
  1950  00AB  28B1               	goto	l8035
  1951  00AC                     l2219:	
  1952  00AC  153E               	bsf	(printf@flag^(0+128)+1),2
  1953  00AD  28C5               	goto	l8037
  1954  00AE                     l8031:	
  1955  00AE  30C0               	movlw	192
  1956  00AF  04BD               	iorwf	printf@flag^(0+128),f
  1957  00B0  28C5               	goto	l8037
  1958  00B1                     l8035:	
  1959  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  1960  00B2  083C               	movf	printf@f^(0+128),w
  1961  00B3  0ABC               	incf	printf@f^(0+128),f
  1962  00B4  0084               	movwf	4
  1963  00B5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1964  00BA  00C8               	movwf	printf@c^(0+128)
  1965                           
  1966                           ; Switch size 1, requested type "space"
  1967                           ; Number of cases is 3, Range of values is 0 to 117
  1968                           ; switch strategies available:
  1969                           ; Name         Instructions Cycles
  1970                           ; simple_byte           10     6 (average)
  1971                           ; jumptable            260     6 (fixed)
  1972                           ; rangetable           122     6 (fixed)
  1973                           ; spacedrange          242     9 (fixed)
  1974                           ; locatedrange         118     3 (fixed)
  1975                           ;	Chosen strategy is simple_byte
  1976  00BB  3A00               	xorlw	0	; case 0
  1977  00BC  1903               	skipnz
  1978  00BD  2D62               	goto	l2298
  1979  00BE  3A66               	xorlw	102	; case 102
  1980  00BF  1903               	skipnz
  1981  00C0  28AC               	goto	l2219
  1982  00C1  3A13               	xorlw	19	; case 117
  1983  00C2  1903               	skipnz
  1984  00C3  28AE               	goto	l8031
  1985  00C4  2814               	goto	l8267
  1986  00C5                     l8037:	
  1987  00C5  3007               	movlw	7
  1988  00C6  01AB               	clrf	??_printf^(0+128)
  1989  00C7  053E               	andwf	(printf@flag+1)^(0+128),w
  1990  00C8  00AC               	movwf	(??_printf+1)^(0+128)
  1991  00C9  042B               	iorwf	??_printf^(0+128),w
  1992  00CA  1903               	skipnz
  1993  00CB  2C37               	goto	l8189
  1994  00CC  1E3E               	btfss	(printf@flag+1)^(0+128),4
  1995  00CD  28D1               	goto	l8043
  1996  00CE  3006               	movlw	6
  1997  00CF  00C6               	movwf	printf@prec^(0+128)
  1998  00D0  01C7               	clrf	(printf@prec+1)^(0+128)
  1999  00D1                     l8043:	
  2000  00D1  0834               	movf	printf@ap^(0+128),w
  2001  00D2  0084               	movwf	4
  2002  00D3  1383               	bcf	3,7	;select IRP bank0
  2003  00D4  0800               	movf	0,w
  2004  00D5  00C3               	movwf	printf@fval^(0+128)
  2005  00D6  0A84               	incf	4,f
  2006  00D7  0800               	movf	0,w
  2007  00D8  00C4               	movwf	(printf@fval+1)^(0+128)
  2008  00D9  0A84               	incf	4,f
  2009  00DA  0800               	movf	0,w
  2010  00DB  00C5               	movwf	(printf@fval+2)^(0+128)
  2011  00DC  3003               	movlw	3
  2012  00DD  07B4               	addwf	printf@ap^(0+128),f
  2013  00DE  0843               	movf	printf@fval^(0+128),w
  2014  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2015  00E0  00A8               	movwf	?___ftge
  2016  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  2017  00E2  0844               	movf	(printf@fval+1)^(0+128),w
  2018  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2019  00E4  00A9               	movwf	?___ftge+1
  2020  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  2021  00E6  0845               	movf	(printf@fval+2)^(0+128),w
  2022  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  2023  00E8  00AA               	movwf	?___ftge+2
  2024  00E9  01AB               	clrf	?___ftge+3
  2025  00EA  01AC               	clrf	?___ftge+4
  2026  00EB  01AD               	clrf	?___ftge+5
  2027  00EC  25A7  120A  118A   	fcall	___ftge
  2028  00EF  1803               	btfsc	3,0
  2029  00F0  290D               	goto	l8053
  2030  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  2031  00F2  0843               	movf	printf@fval^(0+128),w
  2032  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2033  00F4  00A8               	movwf	?___ftneg
  2034  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  2035  00F6  0844               	movf	(printf@fval+1)^(0+128),w
  2036  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2037  00F8  00A9               	movwf	?___ftneg+1
  2038  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  2039  00FA  0845               	movf	(printf@fval+2)^(0+128),w
  2040  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2041  00FC  00AA               	movwf	?___ftneg+2
  2042  00FD  269E  120A  118A   	fcall	___ftneg
  2043  0100  0828               	movf	?___ftneg,w
  2044  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2045  0102  00C3               	movwf	printf@fval^(0+128)
  2046  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2047  0104  0829               	movf	?___ftneg+1,w
  2048  0105  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0106  00C4               	movwf	(printf@fval+1)^(0+128)
  2050  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0108  082A               	movf	?___ftneg+2,w
  2052  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2053  010A  00C5               	movwf	(printf@fval+2)^(0+128)
  2054  010B  3003               	movlw	3
  2055  010C  04BD               	iorwf	printf@flag^(0+128),f
  2056  010D                     l8053:	
  2057  010D  1683               	bsf	3,5	;RP0=1, select bank1
  2058  010E  01BF               	clrf	printf@exp^(0+128)
  2059  010F  01C0               	clrf	(printf@exp+1)^(0+128)
  2060  0110  0845               	movf	(printf@fval+2)^(0+128),w
  2061  0111  0444               	iorwf	(printf@fval+1)^(0+128),w
  2062  0112  0443               	iorwf	printf@fval^(0+128),w
  2063  0113  1903               	skipnz
  2064  0114  29B6               	goto	l8085
  2065  0115  30C3               	movlw	low printf@fval
  2066  0116  0084               	movwf	4
  2067  0117  0800               	movf	0,w
  2068  0118  00AB               	movwf	??_printf^(0+128)
  2069  0119  0A84               	incf	4,f
  2070  011A  0800               	movf	0,w
  2071  011B  00AC               	movwf	(??_printf^(0+128)+1)
  2072  011C  0A84               	incf	4,f
  2073  011D  0800               	movf	0,w
  2074  011E  00AD               	movwf	(??_printf^(0+128)+2)
  2075  011F  0A84               	incf	4,f
  2076  0120  0800               	movf	0,w
  2077  0121  00AE               	movwf	(??_printf^(0+128)+3)
  2078  0122  300F               	movlw	15
  2079  0123                     u5375:	
  2080  0123  1003               	clrc
  2081  0124  0CAE               	rrf	(??_printf^(0+128)+3),f
  2082  0125  0CAD               	rrf	(??_printf^(0+128)+2),f
  2083  0126  0CAC               	rrf	(??_printf^(0+128)+1),f
  2084  0127  0CAB               	rrf	??_printf^(0+128),f
  2085  0128  3EFF               	addlw	-1
  2086  0129  1D03               	skipz
  2087  012A  2923               	goto	u5375
  2088  012B  082C               	movf	(??_printf+1)^(0+128),w
  2089  012C  00C0               	movwf	(printf@exp+1)^(0+128)
  2090  012D  082B               	movf	??_printf^(0+128),w
  2091  012E  00BF               	movwf	printf@exp^(0+128)
  2092  012F  3082               	movlw	-126
  2093  0130  01C0               	clrf	(printf@exp+1)^(0+128)
  2094  0131  07BF               	addwf	printf@exp^(0+128),f
  2095  0132  1C03               	skipc
  2096  0133  03C0               	decf	(printf@exp+1)^(0+128),f
  2097  0134  30FF               	movlw	-1
  2098  0135  07BF               	addwf	printf@exp^(0+128),f
  2099  0136  1C03               	skipc
  2100  0137  03C0               	decf	(printf@exp+1)^(0+128),f
  2101  0138  3003               	movlw	3
  2102  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2103  013A  00A8               	movwf	?___wmul
  2104  013B  01A9               	clrf	?___wmul+1
  2105  013C  1683               	bsf	3,5	;RP0=1, select bank1
  2106  013D  0840               	movf	(printf@exp+1)^(0+128),w
  2107  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2108  013F  00AB               	movwf	?___wmul+3
  2109  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2110  0141  083F               	movf	printf@exp^(0+128),w
  2111  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0143  00AA               	movwf	?___wmul+2
  2113  0144  25E2               	fcall	___wmul
  2114  0145  0829               	movf	?___wmul+1,w
  2115  0146  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0147  00C0               	movwf	(printf@exp+1)^(0+128)
  2117  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0149  0828               	movf	?___wmul,w
  2119  014A  1683               	bsf	3,5	;RP0=1, select bank1
  2120  014B  00BF               	movwf	printf@exp^(0+128)
  2121  014C  300A               	movlw	10
  2122  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2123  014E  00AE               	movwf	?___awdiv
  2124  014F  01AF               	clrf	?___awdiv+1
  2125  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2126  0151  0840               	movf	(printf@exp+1)^(0+128),w
  2127  0152  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0153  00B1               	movwf	?___awdiv+3
  2129  0154  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0155  083F               	movf	printf@exp^(0+128),w
  2131  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0157  00B0               	movwf	?___awdiv+2
  2133  0158  120A  158A  2669   	fcall	___awdiv
      +       120A  118A         
  2134  015D  082F               	movf	?___awdiv+1,w
  2135  015E  1683               	bsf	3,5	;RP0=1, select bank1
  2136  015F  00C0               	movwf	(printf@exp+1)^(0+128)
  2137  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0161  082E               	movf	?___awdiv,w
  2139  0162  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0163  00BF               	movwf	printf@exp^(0+128)
  2141  0164  1FC0               	btfss	(printf@exp+1)^(0+128),7
  2142  0165  296A               	goto	l8073
  2143  0166  30FF               	movlw	-1
  2144  0167  07BF               	addwf	printf@exp^(0+128),f
  2145  0168  1C03               	skipc
  2146  0169  03C0               	decf	(printf@exp+1)^(0+128),f
  2147  016A                     l8073:	
  2148  016A  033F               	decf	printf@exp^(0+128),w
  2149  016B  3AFF               	xorlw	255
  2150  016C  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2151  0171  271B  120A  118A   	fcall	PL8	;call to abstracted procedure
  2152  0174  274B               	fcall	PL20	;call to abstracted procedure
  2153  0175  1683               	bsf	3,5	;RP0=1, select bank1
  2154  0176  0835               	movf	printf@integ^(0+128),w
  2155  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0178  00C6               	movwf	?___ftmul+3
  2157  0179  1683               	bsf	3,5	;RP0=1, select bank1
  2158  017A  0836               	movf	(printf@integ+1)^(0+128),w
  2159  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2160  017C  00C7               	movwf	?___ftmul+4
  2161  017D  1683               	bsf	3,5	;RP0=1, select bank1
  2162  017E  0837               	movf	(printf@integ+2)^(0+128),w
  2163  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2164  0180  00C8               	movwf	?___ftmul+5
  2165  0181  120A  158A  26EB   	fcall	___ftmul
      +       120A  118A         
  2166  0186  0843               	movf	?___ftmul,w
  2167  0187  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0188  00B5               	movwf	printf@integ^(0+128)
  2169  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2170  018A  0844               	movf	?___ftmul+1,w
  2171  018B  1683               	bsf	3,5	;RP0=1, select bank1
  2172  018C  00B6               	movwf	(printf@integ+1)^(0+128)
  2173  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2174  018E  0845               	movf	?___ftmul+2,w
  2175  018F  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0190  00B7               	movwf	(printf@integ+2)^(0+128)
  2177  0191  26F9  120A  118A   	fcall	PL5	;call to abstracted procedure
  2178  0194  3080               	movlw	128
  2179  0195  01AB               	clrf	?___ftge+3
  2180  0196  00AC               	movwf	?___ftge+4
  2181  0197  303F               	movlw	63
  2182  0198  00AD               	movwf	?___ftge+5
  2183  0199  25A7  120A  118A   	fcall	___ftge
  2184  019C  1803               	btfsc	3,0
  2185  019D  29A4               	goto	l8081
  2186  019E  30FF               	movlw	-1
  2187  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2188  01A0  07BF               	addwf	printf@exp^(0+128),f
  2189  01A1  1C03               	skipc
  2190  01A2  03C0               	decf	(printf@exp+1)^(0+128),f
  2191  01A3  29B6               	goto	l8085
  2192  01A4                     l8081:	
  2193  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2194  01A5  26F9  120A  118A   	fcall	PL5	;call to abstracted procedure
  2195  01A8  3020               	movlw	32
  2196  01A9  01AB               	clrf	?___ftge+3
  2197  01AA  00AC               	movwf	?___ftge+4
  2198  01AB  3041               	movlw	65
  2199  01AC  00AD               	movwf	?___ftge+5
  2200  01AD  25A7  120A  118A   	fcall	___ftge
  2201  01B0  1C03               	btfss	3,0
  2202  01B1  29B6               	goto	l8085
  2203  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  2204  01B3  0ABF               	incf	printf@exp^(0+128),f
  2205  01B4  1903               	skipnz
  2206  01B5  0AC0               	incf	(printf@exp+1)^(0+128),f
  2207  01B6                     l8085:	
  2208  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2209  01B7  0847               	movf	(printf@prec+1)^(0+128),w
  2210  01B8  3A80               	xorlw	128
  2211  01B9  00FF               	movwf	127
  2212  01BA  3080               	movlw	128
  2213  01BB  027F               	subwf	127,w
  2214  01BC  1D03               	skipz
  2215  01BD  29C0               	goto	u5415
  2216  01BE  300D               	movlw	13
  2217  01BF  0246               	subwf	printf@prec^(0+128),w
  2218  01C0                     u5415:	
  2219  01C0  1803               	skipnc
  2220  01C1  29EB               	goto	l8089
  2221  01C2  276A               	call	PL31	;select bank 1
  2222  01C3  0846               	movf	printf@prec^(0+128),w
  2223  01C4  120A  158A  2141   	fcall	_fround
      +       120A  118A         
  2224  01C9  085E               	movf	?_fround,w
  2225  01CA  00D2               	movwf	?___ftadd
  2226  01CB  085F               	movf	?_fround+1,w
  2227  01CC  00D3               	movwf	?___ftadd+1
  2228  01CD  0860               	movf	?_fround+2,w
  2229  01CE  00D4               	movwf	?___ftadd+2
  2230  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2231  01D0  0843               	movf	printf@fval^(0+128),w
  2232  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2233  01D2  00D5               	movwf	?___ftadd+3
  2234  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2235  01D4  0844               	movf	(printf@fval+1)^(0+128),w
  2236  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2237  01D6  00D6               	movwf	?___ftadd+4
  2238  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  2239  01D8  0845               	movf	(printf@fval+2)^(0+128),w
  2240  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2241  01DA  00D7               	movwf	?___ftadd+5
  2242  01DB  160A  118A  2672   	fcall	___ftadd
      +       120A  118A         
  2243  01E0  0852               	movf	?___ftadd,w
  2244  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  2245  01E2  00C3               	movwf	printf@fval^(0+128)
  2246  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2247  01E4  0853               	movf	?___ftadd+1,w
  2248  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2249  01E6  00C4               	movwf	(printf@fval+1)^(0+128)
  2250  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2251  01E8  0854               	movf	?___ftadd+2,w
  2252  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  2253  01EA  00C5               	movwf	(printf@fval+2)^(0+128)
  2254  01EB                     l8089:	
  2255  01EB  276A               	call	PL31	;select bank 1
  2256  01EC  0840               	movf	(printf@exp+1)^(0+128),w
  2257  01ED  3A80               	xorlw	128
  2258  01EE  00FF               	movwf	127
  2259  01EF  3080               	movlw	128
  2260  01F0  027F               	subwf	127,w
  2261  01F1  1D03               	skipz
  2262  01F2  29F5               	goto	u5425
  2263  01F3  300A               	movlw	10
  2264  01F4  023F               	subwf	printf@exp^(0+128),w
  2265  01F5                     u5425:	
  2266  01F5  1803               	skipnc
  2267  01F6  2A16               	goto	l8097
  2268  01F7  276A               	call	PL31	;select bank 1
  2269  01F8  0845               	movf	(printf@fval+2)^(0+128),w
  2270  01F9  0444               	iorwf	(printf@fval+1)^(0+128),w
  2271  01FA  0443               	iorwf	printf@fval^(0+128),w
  2272  01FB  1903               	skipnz
  2273  01FC  2A68               	goto	l8113
  2274  01FD  0843               	movf	printf@fval^(0+128),w
  2275  01FE  2740  120A  118A   	fcall	PL17	;call to abstracted procedure
  2276  0201  25FB  120A  118A   	fcall	___fttol
  2277  0204  0839               	movf	?___fttol+3,w
  2278  0205  0438               	iorwf	?___fttol+2,w
  2279  0206  0437               	iorwf	?___fttol+1,w
  2280  0207  0436               	iorwf	?___fttol,w
  2281  0208  1D03               	skipz
  2282  0209  2A68               	goto	l8113
  2283  020A  1683               	bsf	3,5	;RP0=1, select bank1
  2284  020B  0840               	movf	(printf@exp+1)^(0+128),w
  2285  020C  3A80               	xorlw	128
  2286  020D  00FF               	movwf	127
  2287  020E  3080               	movlw	128
  2288  020F  027F               	subwf	127,w
  2289  0210  1D03               	skipz
  2290  0211  2A14               	goto	u5455
  2291  0212  3002               	movlw	2
  2292  0213  023F               	subwf	printf@exp^(0+128),w
  2293  0214                     u5455:	
  2294  0214  1C03               	skipc
  2295  0215  2A68               	goto	l8113
  2296  0216                     l8097:	
  2297  0216  276A               	call	PL31	;select bank 1
  2298  0217  26F9  120A  118A   	fcall	PL5	;call to abstracted procedure
  2299  021A  3070               	movlw	112
  2300  021B  00AB               	movwf	?___ftge+3
  2301  021C  3089               	movlw	137
  2302  021D  00AC               	movwf	?___ftge+4
  2303  021E  3040               	movlw	64
  2304  021F  00AD               	movwf	?___ftge+5
  2305  0220  25A7  120A  118A   	fcall	___ftge
  2306  0223  1803               	btfsc	3,0
  2307  0224  2A27               	goto	l8101
  2308  0225  30F7               	movlw	-9
  2309  0226  2A28               	goto	L1
  2310  0227                     l8101:	
  2311  0227  30F8               	movlw	-8
  2312  0228                     L1:	
  2313  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2314  0229  07BF               	addwf	printf@exp^(0+128),f
  2315  022A  1C03               	skipc
  2316  022B  03C0               	decf	(printf@exp+1)^(0+128),f
  2317  022C  083F               	movf	printf@exp^(0+128),w
  2318  022D  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2319  0232  271B  120A  118A   	fcall	PL8	;call to abstracted procedure
  2320  0235  00A8               	movwf	?__tdiv_to_l_
  2321  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2322  0237  0844               	movf	(printf@fval+1)^(0+128),w
  2323  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2324  0239  00A9               	movwf	?__tdiv_to_l_+1
  2325  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2326  023B  0845               	movf	(printf@fval+2)^(0+128),w
  2327  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2328  023D  00AA               	movwf	?__tdiv_to_l_+2
  2329  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2330  023F  0835               	movf	printf@integ^(0+128),w
  2331  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0241  00AB               	movwf	?__tdiv_to_l_+3
  2333  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2334  0243  0836               	movf	(printf@integ+1)^(0+128),w
  2335  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2336  0245  00AC               	movwf	?__tdiv_to_l_+4
  2337  0246  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0247  0837               	movf	(printf@integ+2)^(0+128),w
  2339  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0249  00AD               	movwf	?__tdiv_to_l_+5
  2341  024A  276D  120A  118A   	fcall	__tdiv_to_l_
  2342  024D  082B               	movf	?__tdiv_to_l_+3,w
  2343  024E  1683               	bsf	3,5	;RP0=1, select bank1
  2344  024F  00B3               	movwf	(_printf$3166+3)^(0+128)
  2345  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2346  0251  082A               	movf	?__tdiv_to_l_+2,w
  2347  0252  1683               	bsf	3,5	;RP0=1, select bank1
  2348  0253  00B2               	movwf	(_printf$3166+2)^(0+128)
  2349  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0255  0829               	movf	?__tdiv_to_l_+1,w
  2351  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0257  00B1               	movwf	(_printf$3166+1)^(0+128)
  2353  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0259  0828               	movf	?__tdiv_to_l_,w
  2355  025A  1683               	bsf	3,5	;RP0=1, select bank1
  2356  025B  00B0               	movwf	_printf$3166^(0+128)
  2357  025C  0833               	movf	(_printf$3166+3)^(0+128),w
  2358  025D  00BB               	movwf	(printf@_val+3)^(0+128)
  2359  025E  0832               	movf	(_printf$3166+2)^(0+128),w
  2360  025F  00BA               	movwf	(printf@_val+2)^(0+128)
  2361  0260  0831               	movf	(_printf$3166+1)^(0+128),w
  2362  0261  00B9               	movwf	(printf@_val+1)^(0+128)
  2363  0262  0830               	movf	_printf$3166^(0+128),w
  2364  0263  00B8               	movwf	printf@_val^(0+128)
  2365  0264  01C3               	clrf	printf@fval^(0+128)
  2366  0265  01C4               	clrf	(printf@fval+1)^(0+128)
  2367  0266  01C5               	clrf	(printf@fval+2)^(0+128)
  2368  0267  2AA9               	goto	l8117
  2369  0268                     l8113:	
  2370  0268  276A               	call	PL31	;select bank 1
  2371  0269  0843               	movf	printf@fval^(0+128),w
  2372  026A  2740  120A  118A   	fcall	PL17	;call to abstracted procedure
  2373  026D  25FB  120A  118A   	fcall	___fttol
  2374  0270  2729  120A  118A   	fcall	PL9	;call to abstracted procedure
  2375  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2376  0274  00B8               	movwf	printf@_val^(0+128)
  2377  0275  083B               	movf	(printf@_val+3)^(0+128),w
  2378  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0277  00B3               	movwf	?___lltoft+3
  2380  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2381  0279  083A               	movf	(printf@_val+2)^(0+128),w
  2382  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2383  027B  00B2               	movwf	?___lltoft+2
  2384  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2385  027D  0839               	movf	(printf@_val+1)^(0+128),w
  2386  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2387  027F  00B1               	movwf	?___lltoft+1
  2388  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0281  0838               	movf	printf@_val^(0+128),w
  2390  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0283  00B0               	movwf	?___lltoft
  2392  0284  26A6  120A  118A   	fcall	___lltoft
  2393  0287  0830               	movf	?___lltoft,w
  2394  0288  00DE               	movwf	?___ftsub
  2395  0289  0831               	movf	?___lltoft+1,w
  2396  028A  00DF               	movwf	?___ftsub+1
  2397  028B  0832               	movf	?___lltoft+2,w
  2398  028C  00E0               	movwf	?___ftsub+2
  2399  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2400  028E  0843               	movf	printf@fval^(0+128),w
  2401  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0290  00E1               	movwf	?___ftsub+3
  2403  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2404  0292  0844               	movf	(printf@fval+1)^(0+128),w
  2405  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0294  00E2               	movwf	?___ftsub+4
  2407  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0296  0845               	movf	(printf@fval+2)^(0+128),w
  2409  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0298  00E3               	movwf	?___ftsub+5
  2411  0299  26C6  120A  118A   	fcall	___ftsub
  2412  029C  085E               	movf	?___ftsub,w
  2413  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2414  029E  00C3               	movwf	printf@fval^(0+128)
  2415  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2416  02A0  085F               	movf	?___ftsub+1,w
  2417  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2418  02A2  00C4               	movwf	(printf@fval+1)^(0+128)
  2419  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2420  02A4  0860               	movf	?___ftsub+2,w
  2421  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  2422  02A6  00C5               	movwf	(printf@fval+2)^(0+128)
  2423  02A7  01BF               	clrf	printf@exp^(0+128)
  2424  02A8  01C0               	clrf	(printf@exp+1)^(0+128)
  2425  02A9                     l8117:	
  2426  02A9  01C8               	clrf	printf@c^(0+128)
  2427  02AA  0AC8               	incf	printf@c^(0+128),f
  2428  02AB                     l8123:	
  2429  02AB  26F0               	fcall	PL4	;call to abstracted procedure
  2430  02AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2431  02B1  00AC               	movwf	(??_printf+1)^(0+128)
  2432  02B2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2433  02B7  00AD               	movwf	((??_printf+1)^(0+128)+1)
  2434  02B8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2435  02BD  00AE               	movwf	((??_printf+1)^(0+128)+2)
  2436  02BE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2437  02C3  00AF               	movwf	((??_printf+1)^(0+128)+3)
  2438  02C4  082F               	movf	(??_printf+4)^(0+128),w
  2439  02C5  023B               	subwf	(printf@_val+3)^(0+128),w
  2440  02C6  1D03               	skipz
  2441  02C7  2AD2               	goto	u5475
  2442  02C8  082E               	movf	(??_printf+3)^(0+128),w
  2443  02C9  023A               	subwf	(printf@_val+2)^(0+128),w
  2444  02CA  1D03               	skipz
  2445  02CB  2AD2               	goto	u5475
  2446  02CC  082D               	movf	(??_printf+2)^(0+128),w
  2447  02CD  0239               	subwf	(printf@_val+1)^(0+128),w
  2448  02CE  1D03               	skipz
  2449  02CF  2AD2               	goto	u5475
  2450  02D0  082C               	movf	(??_printf+1)^(0+128),w
  2451  02D1  0238               	subwf	printf@_val^(0+128),w
  2452  02D2                     u5475:	
  2453  02D2  1C03               	btfss	3,0
  2454  02D3  2AD9               	goto	l8131
  2455  02D4  0AC8               	incf	printf@c^(0+128),f
  2456  02D5  0848               	movf	printf@c^(0+128),w
  2457  02D6  3A0A               	xorlw	10
  2458  02D7  1D03               	skipz
  2459  02D8  2AAB               	goto	l8123
  2460  02D9                     l8131:	
  2461  02D9  0846               	movf	printf@prec^(0+128),w
  2462  02DA  0748               	addwf	printf@c^(0+128),w
  2463  02DB  00AB               	movwf	??_printf^(0+128)
  2464  02DC  0847               	movf	(printf@prec+1)^(0+128),w
  2465  02DD  1803               	skipnc
  2466  02DE  0A47               	incf	(printf@prec+1)^(0+128),w
  2467  02DF  1BC8               	btfsc	printf@c^(0+128),7
  2468  02E0  3EFF               	addlw	255
  2469  02E1  00AC               	movwf	(??_printf^(0+128)+1)
  2470  02E2  083F               	movf	printf@exp^(0+128),w
  2471  02E3  072B               	addwf	??_printf^(0+128),w
  2472  02E4  00AD               	movwf	(??_printf+2)^(0+128)
  2473  02E5  0840               	movf	(printf@exp+1)^(0+128),w
  2474  02E6  1803               	skipnc
  2475  02E7  0A40               	incf	(printf@exp+1)^(0+128),w
  2476  02E8  072C               	addwf	(??_printf+1)^(0+128),w
  2477  02E9  00AE               	movwf	(??_printf+3)^(0+128)
  2478  02EA  082D               	movf	(??_printf+2)^(0+128),w
  2479  02EB  02C1               	subwf	printf@width^(0+128),f
  2480  02EC  082E               	movf	(??_printf+3)^(0+128),w
  2481  02ED  1C03               	skipc
  2482  02EE  03C2               	decf	(printf@width+1)^(0+128),f
  2483  02EF  02C2               	subwf	(printf@width+1)^(0+128),f
  2484  02F0  0847               	movf	(printf@prec+1)^(0+128),w
  2485  02F1  0446               	iorwf	printf@prec^(0+128),w
  2486  02F2  1903               	skipnz
  2487  02F3  2AF8               	goto	l8137
  2488  02F4  30FF               	movlw	-1
  2489  02F5  07C1               	addwf	printf@width^(0+128),f
  2490  02F6  1C03               	skipc
  2491  02F7  03C2               	decf	(printf@width+1)^(0+128),f
  2492  02F8                     l8137:	
  2493  02F8  083D               	movf	printf@flag^(0+128),w
  2494  02F9  3903               	andlw	3
  2495  02FA  1903               	btfsc	3,2
  2496  02FB  2B00               	goto	l8141
  2497  02FC  30FF               	movlw	-1
  2498  02FD  07C1               	addwf	printf@width^(0+128),f
  2499  02FE  1C03               	skipc
  2500  02FF  03C2               	decf	(printf@width+1)^(0+128),f
  2501  0300                     l8141:	
  2502  0300  193D               	btfsc	printf@flag^(0+128),2
  2503  0301  2B0C               	goto	l8149
  2504  0302  2B21               	goto	l8155
  2505  0303                     l8145:	
  2506  0303  3030               	movlw	48
  2507  0304  2563  120A  118A   	fcall	_putch
  2508  0307  30FF               	movlw	-1
  2509  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0309  07C1               	addwf	printf@width^(0+128),f
  2511  030A  1C03               	skipc
  2512  030B  03C2               	decf	(printf@width+1)^(0+128),f
  2513  030C                     l8149:	
  2514  030C  0842               	movf	(printf@width+1)^(0+128),w
  2515  030D  3A80               	xorlw	128
  2516  030E  00FF               	movwf	127
  2517  030F  3080               	movlw	128
  2518  0310  027F               	subwf	127,w
  2519  0311  1D03               	skipz
  2520  0312  2B15               	goto	u5525
  2521  0313  3001               	movlw	1
  2522  0314  0241               	subwf	printf@width^(0+128),w
  2523  0315                     u5525:	
  2524  0315  1C03               	btfss	3,0
  2525  0316  2B60               	goto	l8163
  2526  0317  2B03               	goto	l8145
  2527  0318                     l8151:	
  2528  0318  3020               	movlw	32
  2529  0319  2563  120A  118A   	fcall	_putch
  2530  031C  30FF               	movlw	-1
  2531  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2532  031E  07C1               	addwf	printf@width^(0+128),f
  2533  031F  1C03               	skipc
  2534  0320  03C2               	decf	(printf@width+1)^(0+128),f
  2535  0321                     l8155:	
  2536  0321  0842               	movf	(printf@width+1)^(0+128),w
  2537  0322  3A80               	xorlw	128
  2538  0323  00FF               	movwf	127
  2539  0324  3080               	movlw	128
  2540  0325  027F               	subwf	127,w
  2541  0326  1D03               	skipz
  2542  0327  2B2A               	goto	u5535
  2543  0328  3001               	movlw	1
  2544  0329  0241               	subwf	printf@width^(0+128),w
  2545  032A                     u5535:	
  2546  032A  1803               	skipnc
  2547  032B  2B18               	goto	l8151
  2548  032C  276A               	call	PL31	;select bank 1
  2549  032D  083D               	movf	printf@flag^(0+128),w
  2550  032E  3903               	andlw	3
  2551  032F  1903               	btfsc	3,2
  2552  0330  2B60               	goto	l8163
  2553  0331  302D               	movlw	45
  2554  0332  2B5D               	goto	L2
  2555  0333                     l8161:	
  2556  0333  2705  120A  118A   	fcall	PL6	;call to abstracted procedure
  2557  0336  26F0               	fcall	PL4	;call to abstracted procedure
  2558  0337  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2559  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2560  033D  00A8               	movwf	?___lldiv
  2561  033E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2562  0343  00A9               	movwf	?___lldiv+1
  2563  0344  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2564  0349  00AA               	movwf	?___lldiv+2
  2565  034A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2566  034F  26DE  120A  118A   	fcall	PL2	;call to abstracted procedure
  2567  0352  2656  120A  118A   	fcall	___lldiv
  2568  0355  2737  120A  118A   	fcall	PL15	;call to abstracted procedure
  2569  0358  2569  120A  118A   	fcall	___llmod
  2570  035B  0835               	movf	?___llmod,w
  2571  035C  3E30               	addlw	48
  2572  035D                     L2:	
  2573  035D  2563  120A  118A   	fcall	_putch
  2574  0360                     l8163:	
  2575  0360  276A               	call	PL31	;select bank 1
  2576  0361  03C8               	decf	printf@c^(0+128),f
  2577  0362  0F48               	incfsz	printf@c^(0+128),w
  2578  0363  2B33               	goto	l8161
  2579  0364                     l8169:	
  2580  0364  0840               	movf	(printf@exp+1)^(0+128),w
  2581  0365  3A80               	xorlw	128
  2582  0366  00FF               	movwf	127
  2583  0367  3080               	movlw	128
  2584  0368  027F               	subwf	127,w
  2585  0369  1D03               	skipz
  2586  036A  2B6D               	goto	u5565
  2587  036B  3001               	movlw	1
  2588  036C  023F               	subwf	printf@exp^(0+128),w
  2589  036D                     u5565:	
  2590  036D  1C03               	btfss	3,0
  2591  036E  2B79               	goto	l8171
  2592  036F  3030               	movlw	48
  2593  0370  2563  120A  118A   	fcall	_putch
  2594  0373  30FF               	movlw	-1
  2595  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0375  07BF               	addwf	printf@exp^(0+128),f
  2597  0376  1C03               	skipc
  2598  0377  03C0               	decf	(printf@exp+1)^(0+128),f
  2599  0378  2B64               	goto	l8169
  2600  0379                     l8171:	
  2601  0379  276A               	call	PL31	;select bank 1
  2602  037A  0847               	movf	(printf@prec+1)^(0+128),w
  2603  037B  3A80               	xorlw	128
  2604  037C  00FF               	movwf	127
  2605  037D  3080               	movlw	128
  2606  037E  027F               	subwf	127,w
  2607  037F  1D03               	skipz
  2608  0380  2B83               	goto	u5575
  2609  0381  3009               	movlw	9
  2610  0382  0246               	subwf	printf@prec^(0+128),w
  2611  0383                     u5575:	
  2612  0383  1C03               	skipc
  2613  0384  2B88               	goto	l8175
  2614  0385  3008               	movlw	8
  2615  0386  276A               	call	PL31	;select bank 1
  2616  0387  2B8A               	goto	L3
  2617  0388                     l8175:	
  2618  0388  276A               	call	PL31	;select bank 1
  2619  0389  0846               	movf	printf@prec^(0+128),w
  2620  038A                     L3:	
  2621  038A  00C8               	movwf	printf@c^(0+128)
  2622  038B  00AB               	movwf	??_printf^(0+128)
  2623  038C  01AC               	clrf	(??_printf^(0+128)+1)
  2624  038D  1BAB               	btfsc	??_printf^(0+128),7
  2625  038E  03AC               	decf	(??_printf^(0+128)+1),f
  2626  038F  02C6               	subwf	printf@prec^(0+128),f
  2627  0390  082C               	movf	(??_printf+1)^(0+128),w
  2628  0391  1C03               	skipc
  2629  0392  03C7               	decf	(printf@prec+1)^(0+128),f
  2630  0393  02C7               	subwf	(printf@prec+1)^(0+128),f
  2631  0394  0848               	movf	printf@c^(0+128),w
  2632  0395  1903               	btfsc	3,2
  2633  0396  2B99               	goto	l2264
  2634  0397  302E               	movlw	46
  2635  0398  2563               	fcall	_putch
  2636  0399                     l2264:	
  2637  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2638  039A  0848               	movf	printf@c^(0+128),w
  2639  039B  120A  158A  24D7   	fcall	_scale
      +       120A  118A         
  2640  03A0  0852               	movf	?_scale,w
  2641  03A1  00C6               	movwf	?___ftmul+3
  2642  03A2  0853               	movf	?_scale+1,w
  2643  03A3  00C7               	movwf	?___ftmul+4
  2644  03A4  0854               	movf	?_scale+2,w
  2645  03A5  00C8               	movwf	?___ftmul+5
  2646  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2647  03A7  0843               	movf	printf@fval^(0+128),w
  2648  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2649  03A9  274B               	fcall	PL20	;call to abstracted procedure
  2650  03AA  120A  158A  26EB   	fcall	___ftmul
      +       120A  118A         
  2651  03AF  0843               	movf	?___ftmul,w
  2652  03B0  00B6               	movwf	?___fttol
  2653  03B1  0844               	movf	?___ftmul+1,w
  2654  03B2  00B7               	movwf	?___fttol+1
  2655  03B3  0845               	movf	?___ftmul+2,w
  2656  03B4  00B8               	movwf	?___fttol+2
  2657  03B5  25FB  120A  118A   	fcall	___fttol
  2658  03B8  2729  120A  118A   	fcall	PL9	;call to abstracted procedure
  2659  03BB  2C24               	goto	L4
  2660  03BC                     l8179:	
  2661  03BC  2705  120A  118A   	fcall	PL6	;call to abstracted procedure
  2662  03BF  26F0               	fcall	PL4	;call to abstracted procedure
  2663  03C0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2664  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2665  03C6  00A8               	movwf	?___lldiv
  2666  03C7  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2667  03CC  00A9               	movwf	?___lldiv+1
  2668  03CD  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2669  03D2  00AA               	movwf	?___lldiv+2
  2670  03D3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2671  03D8  26DE  120A  118A   	fcall	PL2	;call to abstracted procedure
  2672  03DB  2656  120A  118A   	fcall	___lldiv
  2673  03DE  2737  120A  118A   	fcall	PL15	;call to abstracted procedure
  2674  03E1  2569  120A  118A   	fcall	___llmod
  2675  03E4  0835               	movf	?___llmod,w
  2676  03E5  3E30               	addlw	48
  2677  03E6  2563  120A  118A   	fcall	_putch
  2678  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2679  03EA  26F0               	fcall	PL4	;call to abstracted procedure
  2680  03EB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2681  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2682  03F1  00B5               	movwf	?___llmod
  2683  03F2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2684  03F7  00B6               	movwf	?___llmod+1
  2685  03F8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2686  03FD  00B7               	movwf	?___llmod+2
  2687  03FE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2688  0403  00B8               	movwf	?___llmod+3
  2689  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2690  0405  083B               	movf	(printf@_val+3)^(0+128),w
  2691  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2692  0407  00BC               	movwf	?___llmod+7
  2693  0408  1683               	bsf	3,5	;RP0=1, select bank1
  2694  0409  083A               	movf	(printf@_val+2)^(0+128),w
  2695  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2696  040B  00BB               	movwf	?___llmod+6
  2697  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2698  040D  0839               	movf	(printf@_val+1)^(0+128),w
  2699  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2700  040F  00BA               	movwf	?___llmod+5
  2701  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2702  0411  0838               	movf	printf@_val^(0+128),w
  2703  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0413  00B9               	movwf	?___llmod+4
  2705  0414  2569  120A  118A   	fcall	___llmod
  2706  0417  0838               	movf	?___llmod+3,w
  2707  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0419  00BB               	movwf	(printf@_val+3)^(0+128)
  2709  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2710  041B  0837               	movf	?___llmod+2,w
  2711  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2712  041D  00BA               	movwf	(printf@_val+2)^(0+128)
  2713  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2714  041F  0836               	movf	?___llmod+1,w
  2715  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0421  00B9               	movwf	(printf@_val+1)^(0+128)
  2717  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0423  0835               	movf	?___llmod,w
  2719  0424                     L4:	
  2720  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2721  0425  00B8               	movwf	printf@_val^(0+128)
  2722  0426  03C8               	decf	printf@c^(0+128),f
  2723  0427  0F48               	incfsz	printf@c^(0+128),w
  2724  0428  2BBC               	goto	l8179
  2725  0429                     l8187:	
  2726  0429  0847               	movf	(printf@prec+1)^(0+128),w
  2727  042A  0446               	iorwf	printf@prec^(0+128),w
  2728  042B  1903               	btfsc	3,2
  2729  042C  2814               	goto	l8267
  2730  042D  3030               	movlw	48
  2731  042E  2563  120A  118A   	fcall	_putch
  2732  0431  30FF               	movlw	-1
  2733  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0433  07C6               	addwf	printf@prec^(0+128),f
  2735  0434  1C03               	skipc
  2736  0435  03C7               	decf	(printf@prec+1)^(0+128),f
  2737  0436  2C29               	goto	l8187
  2738  0437                     l8189:	
  2739  0437  0834               	movf	printf@ap^(0+128),w
  2740  0438  0084               	movwf	4
  2741  0439  1383               	bcf	3,7	;select IRP bank0
  2742  043A  0800               	movf	0,w
  2743  043B  00AB               	movwf	??_printf^(0+128)
  2744  043C  0A84               	incf	4,f
  2745  043D  0800               	movf	0,w
  2746  043E  00AC               	movwf	(??_printf^(0+128)+1)
  2747  043F  082B               	movf	??_printf^(0+128),w
  2748  0440  00B8               	movwf	printf@_val^(0+128)
  2749  0441  082C               	movf	(??_printf+1)^(0+128),w
  2750  0442  00B9               	movwf	(printf@_val^(0+128)+1)
  2751  0443  01BA               	clrf	(printf@_val^(0+128)+2)
  2752  0444  01BB               	clrf	(printf@_val^(0+128)+3)
  2753  0445  0AB4               	incf	printf@ap^(0+128),f
  2754  0446  0AB4               	incf	printf@ap^(0+128),f
  2755  0447  0847               	movf	(printf@prec+1)^(0+128),w
  2756  0448  0446               	iorwf	printf@prec^(0+128),w
  2757  0449  1D03               	skipz
  2758  044A  2C53               	goto	l8199
  2759  044B  083B               	movf	(printf@_val+3)^(0+128),w
  2760  044C  043A               	iorwf	(printf@_val+2)^(0+128),w
  2761  044D  0439               	iorwf	(printf@_val+1)^(0+128),w
  2762  044E  0438               	iorwf	printf@_val^(0+128),w
  2763  044F  1903               	btfsc	3,2
  2764  0450  0AC6               	incf	printf@prec^(0+128),f
  2765  0451  1903               	skipnz
  2766  0452  0AC7               	incf	(printf@prec+1)^(0+128),f
  2767  0453                     l8199:	
  2768  0453  01C8               	clrf	printf@c^(0+128)
  2769  0454  0AC8               	incf	printf@c^(0+128),f
  2770  0455                     l8205:	
  2771  0455  26F0               	fcall	PL4	;call to abstracted procedure
  2772  0456  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2773  045B  00AC               	movwf	(??_printf+1)^(0+128)
  2774  045C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2775  0461  00AD               	movwf	((??_printf+1)^(0+128)+1)
  2776  0462  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2777  0467  00AE               	movwf	((??_printf+1)^(0+128)+2)
  2778  0468  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2779  046D  00AF               	movwf	((??_printf+1)^(0+128)+3)
  2780  046E  082F               	movf	(??_printf+4)^(0+128),w
  2781  046F  023B               	subwf	(printf@_val+3)^(0+128),w
  2782  0470  1D03               	skipz
  2783  0471  2C7C               	goto	u5635
  2784  0472  082E               	movf	(??_printf+3)^(0+128),w
  2785  0473  023A               	subwf	(printf@_val+2)^(0+128),w
  2786  0474  1D03               	skipz
  2787  0475  2C7C               	goto	u5635
  2788  0476  082D               	movf	(??_printf+2)^(0+128),w
  2789  0477  0239               	subwf	(printf@_val+1)^(0+128),w
  2790  0478  1D03               	skipz
  2791  0479  2C7C               	goto	u5635
  2792  047A  082C               	movf	(??_printf+1)^(0+128),w
  2793  047B  0238               	subwf	printf@_val^(0+128),w
  2794  047C                     u5635:	
  2795  047C  1C03               	btfss	3,0
  2796  047D  2C83               	goto	l8213
  2797  047E  0AC8               	incf	printf@c^(0+128),f
  2798  047F  0848               	movf	printf@c^(0+128),w
  2799  0480  3A0A               	xorlw	10
  2800  0481  1D03               	skipz
  2801  0482  2C55               	goto	l8205
  2802  0483                     l8213:	
  2803  0483  0848               	movf	printf@c^(0+128),w
  2804  0484  2755  120A  118A   	fcall	PL25	;call to abstracted procedure
  2805  0487  0847               	movf	(printf@prec+1)^(0+128),w
  2806  0488  3A80               	xorlw	128
  2807  0489  022D               	subwf	(??_printf+2)^(0+128),w
  2808  048A  1D03               	skipz
  2809  048B  2C8E               	goto	u5655
  2810  048C  0846               	movf	printf@prec^(0+128),w
  2811  048D  022B               	subwf	??_printf^(0+128),w
  2812  048E                     u5655:	
  2813  048E  1803               	skipnc
  2814  048F  2C94               	goto	l8217
  2815  0490  276A               	call	PL31	;select bank 1
  2816  0491  0846               	movf	printf@prec^(0+128),w
  2817  0492  00C8               	movwf	printf@c^(0+128)
  2818  0493  2CAC               	goto	l8221
  2819  0494                     l8217:	
  2820  0494  276A               	call	PL31	;select bank 1
  2821  0495  0848               	movf	printf@c^(0+128),w
  2822  0496  00AB               	movwf	??_printf^(0+128)
  2823  0497  01AC               	clrf	(??_printf^(0+128)+1)
  2824  0498  1BAB               	btfsc	??_printf^(0+128),7
  2825  0499  03AC               	decf	(??_printf^(0+128)+1),f
  2826  049A  0847               	movf	(printf@prec+1)^(0+128),w
  2827  049B  3A80               	xorlw	128
  2828  049C  00AD               	movwf	(??_printf+2)^(0+128)
  2829  049D  082C               	movf	(??_printf+1)^(0+128),w
  2830  049E  3A80               	xorlw	128
  2831  049F  022D               	subwf	(??_printf+2)^(0+128),w
  2832  04A0  1D03               	skipz
  2833  04A1  2CA4               	goto	u5665
  2834  04A2  082B               	movf	??_printf^(0+128),w
  2835  04A3  0246               	subwf	printf@prec^(0+128),w
  2836  04A4                     u5665:	
  2837  04A4  1803               	skipnc
  2838  04A5  2CAC               	goto	l8221
  2839  04A6  276A               	call	PL31	;select bank 1
  2840  04A7  0848               	movf	printf@c^(0+128),w
  2841  04A8  00C6               	movwf	printf@prec^(0+128)
  2842  04A9  01C7               	clrf	(printf@prec+1)^(0+128)
  2843  04AA  1BC6               	btfsc	printf@prec^(0+128),7
  2844  04AB  03C7               	decf	(printf@prec+1)^(0+128),f
  2845  04AC                     l8221:	
  2846  04AC  276A               	call	PL31	;select bank 1
  2847  04AD  0842               	movf	(printf@width+1)^(0+128),w
  2848  04AE  0441               	iorwf	printf@width^(0+128),w
  2849  04AF  1903               	skipnz
  2850  04B0  2CB9               	goto	l8227
  2851  04B1  083D               	movf	printf@flag^(0+128),w
  2852  04B2  3903               	andlw	3
  2853  04B3  1903               	btfsc	3,2
  2854  04B4  2CB9               	goto	l8227
  2855  04B5  30FF               	movlw	-1
  2856  04B6  07C1               	addwf	printf@width^(0+128),f
  2857  04B7  1C03               	skipc
  2858  04B8  03C2               	decf	(printf@width+1)^(0+128),f
  2859  04B9                     l8227:	
  2860  04B9  1F3E               	btfss	(printf@flag+1)^(0+128),6
  2861  04BA  2CD2               	goto	l8235
  2862  04BB  0847               	movf	(printf@prec+1)^(0+128),w
  2863  04BC  3A80               	xorlw	128
  2864  04BD  00AB               	movwf	??_printf^(0+128)
  2865  04BE  0842               	movf	(printf@width+1)^(0+128),w
  2866  04BF  3A80               	xorlw	128
  2867  04C0  022B               	subwf	??_printf^(0+128),w
  2868  04C1  1D03               	skipz
  2869  04C2  2CC5               	goto	u5705
  2870  04C3  0841               	movf	printf@width^(0+128),w
  2871  04C4  0246               	subwf	printf@prec^(0+128),w
  2872  04C5                     u5705:	
  2873  04C5  1803               	skipnc
  2874  04C6  2CCF               	goto	l8233
  2875  04C7  276A               	call	PL31	;select bank 1
  2876  04C8  0846               	movf	printf@prec^(0+128),w
  2877  04C9  02C1               	subwf	printf@width^(0+128),f
  2878  04CA  0847               	movf	(printf@prec+1)^(0+128),w
  2879  04CB  1C03               	skipc
  2880  04CC  03C2               	decf	(printf@width+1)^(0+128),f
  2881  04CD  02C2               	subwf	(printf@width+1)^(0+128),f
  2882  04CE  2CD2               	goto	l8235
  2883  04CF                     l8233:	
  2884  04CF  276A               	call	PL31	;select bank 1
  2885  04D0  01C1               	clrf	printf@width^(0+128)
  2886  04D1  01C2               	clrf	(printf@width+1)^(0+128)
  2887  04D2                     l8235:	
  2888  04D2  0848               	movf	printf@c^(0+128),w
  2889  04D3  2755  120A  118A   	fcall	PL25	;call to abstracted procedure
  2890  04D6  0842               	movf	(printf@width+1)^(0+128),w
  2891  04D7  3A80               	xorlw	128
  2892  04D8  022D               	subwf	(??_printf+2)^(0+128),w
  2893  04D9  1D03               	skipz
  2894  04DA  2CDD               	goto	u5715
  2895  04DB  0841               	movf	printf@width^(0+128),w
  2896  04DC  022B               	subwf	??_printf^(0+128),w
  2897  04DD                     u5715:	
  2898  04DD  1803               	skipnc
  2899  04DE  2CEB               	goto	l8239
  2900  04DF  276A               	call	PL31	;select bank 1
  2901  04E0  0848               	movf	printf@c^(0+128),w
  2902  04E1  00AB               	movwf	??_printf^(0+128)
  2903  04E2  01AC               	clrf	(??_printf^(0+128)+1)
  2904  04E3  1BAB               	btfsc	??_printf^(0+128),7
  2905  04E4  03AC               	decf	(??_printf^(0+128)+1),f
  2906  04E5  02C1               	subwf	printf@width^(0+128),f
  2907  04E6  082C               	movf	(??_printf+1)^(0+128),w
  2908  04E7  1C03               	skipc
  2909  04E8  03C2               	decf	(printf@width+1)^(0+128),f
  2910  04E9  02C2               	subwf	(printf@width+1)^(0+128),f
  2911  04EA  2CEE               	goto	l8241
  2912  04EB                     l8239:	
  2913  04EB  276A               	call	PL31	;select bank 1
  2914  04EC  01C1               	clrf	printf@width^(0+128)
  2915  04ED  01C2               	clrf	(printf@width+1)^(0+128)
  2916  04EE                     l8241:	
  2917  04EE  1D3D               	btfss	printf@flag^(0+128),2
  2918  04EF  2D07               	goto	l8253
  2919  04F0  083D               	movf	printf@flag^(0+128),w
  2920  04F1  3903               	andlw	3
  2921  04F2  1903               	btfsc	3,2
  2922  04F3  2CF8               	goto	l8247
  2923  04F4  302D               	movlw	45
  2924  04F5  2563  120A  118A   	fcall	_putch
  2925  04F8                     l8247:	
  2926  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  2927  04F9                     L6:	
  2928  04F9  0842               	movf	(printf@width+1)^(0+128),w
  2929  04FA  0441               	iorwf	printf@width^(0+128),w
  2930  04FB  1903               	skipnz
  2931  04FC  2D20               	goto	l8265
  2932  04FD  3030               	movlw	48
  2933  04FE  2563  120A  118A   	fcall	_putch
  2934  0501  30FF               	movlw	-1
  2935  0502  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0503  07C1               	addwf	printf@width^(0+128),f
  2937  0504  1C03               	skipc
  2938  0505  03C2               	decf	(printf@width+1)^(0+128),f
  2939  0506  2CF9               	goto	L6
  2940  0507                     l8253:	
  2941  0507  0842               	movf	(printf@width+1)^(0+128),w
  2942  0508  0441               	iorwf	printf@width^(0+128),w
  2943  0509  1903               	skipnz
  2944  050A  2D18               	goto	l8259
  2945  050B                     l8255:	
  2946  050B  3020               	movlw	32
  2947  050C  2563  120A  118A   	fcall	_putch
  2948  050F  30FF               	movlw	-1
  2949  0510  1683               	bsf	3,5	;RP0=1, select bank1
  2950  0511  07C1               	addwf	printf@width^(0+128),f
  2951  0512  1C03               	skipc
  2952  0513  03C2               	decf	(printf@width+1)^(0+128),f
  2953  0514  0842               	movf	(printf@width+1)^(0+128),w
  2954  0515  0441               	iorwf	printf@width^(0+128),w
  2955  0516  1D03               	skipz
  2956  0517  2D0B               	goto	l8255
  2957  0518                     l8259:	
  2958  0518  083D               	movf	printf@flag^(0+128),w
  2959  0519  3903               	andlw	3
  2960  051A  1903               	btfsc	3,2
  2961  051B  2D20               	goto	l8265
  2962  051C  302D               	movlw	45
  2963  051D                     L5:	
  2964  051D  2563  120A  118A   	fcall	_putch
  2965  0520                     l8265:	
  2966  0520  30FF               	movlw	-1
  2967  0521  1683               	bsf	3,5	;RP0=1, select bank1
  2968  0522  07C6               	addwf	printf@prec^(0+128),f
  2969  0523  1C03               	skipc
  2970  0524  03C7               	decf	(printf@prec+1)^(0+128),f
  2971  0525  0A46               	incf	printf@prec^(0+128),w
  2972  0526  1903               	skipnz
  2973  0527  0A47               	incf	(printf@prec+1)^(0+128),w
  2974  0528  1903               	btfsc	3,2
  2975  0529  2814               	goto	l8267
  2976  052A  300A               	movlw	10
  2977  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2978  052C  00B5               	movwf	?___llmod
  2979  052D  01B6               	clrf	?___llmod+1
  2980  052E  01B7               	clrf	?___llmod+2
  2981  052F  01B8               	clrf	?___llmod+3
  2982  0530  1683               	bsf	3,5	;RP0=1, select bank1
  2983  0531  0846               	movf	printf@prec^(0+128),w
  2984  0532  00AB               	movwf	??_printf^(0+128)
  2985  0533  1003               	clrc
  2986  0534  0DAB               	rlf	??_printf^(0+128),f
  2987  0535  1003               	clrc
  2988  0536  0D2B               	rlf	??_printf^(0+128),w
  2989  0537  3E4F               	addlw	low (_dpowers-__stringbase)
  2990  0538  0084               	movwf	4
  2991  0539  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2992  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2993  053F  00A8               	movwf	?___lldiv
  2994  0540  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2995  0545  00A9               	movwf	?___lldiv+1
  2996  0546  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2997  054B  00AA               	movwf	?___lldiv+2
  2998  054C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2999  0551  26DE  120A  118A   	fcall	PL2	;call to abstracted procedure
  3000  0554  2656  120A  118A   	fcall	___lldiv
  3001  0557  2737  120A  118A   	fcall	PL15	;call to abstracted procedure
  3002  055A  2569  120A  118A   	fcall	___llmod
  3003  055D  0835               	movf	?___llmod,w
  3004  055E  3E30               	addlw	48
  3005  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3006  0560  00C8               	movwf	printf@c^(0+128)
  3007  0561  2D1D               	goto	L5
  3008  0562                     l2298:	
  3009  0562  0008               	return
  3010  0563                     __end_of_printf:	
  3011  0563                     __ptext755:	
  3012 ;; =============== function _printf ends ============
  3013                           
  3014                           
  3015 ;; *************** function _putch *****************
  3016 ;; Defined at:
  3017 ;;		line 62 in file "D:\TTVXL\Project TTVXL\BT02week12ttvxl\BT02week12ttvxl.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  c               1    wreg     unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  c               1   17[BANK0 ] unsigned char 
  3022 ;; Return value:  Size  Location     Type
  3023 ;;		None               void
  3024 ;; Registers used:
  3025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3026 ;; Tracked objects:
  3027 ;;		On entry : 0/20
  3028 ;;		On exit  : 60/0
  3029 ;;		Unchanged: 0/0
  3030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3031 ;;      Params:         0       0       0       0       0
  3032 ;;      Locals:         0       1       0       0       0
  3033 ;;      Temps:          0       0       0       0       0
  3034 ;;      Totals:         0       1       0       0       0
  3035 ;;Total ram usage:        1 bytes
  3036 ;; Hardware stack levels used:    1
  3037 ;; Hardware stack levels required when called:    6
  3038 ;; This function calls:
  3039 ;;		_lcd_putc
  3040 ;; This function is called by:
  3041 ;;		_printf
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044  0563                     _putch:	
  3045                           
  3046                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3047                           ;putch@c stored from wreg
  3048  0563  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0564  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0565  00B1               	movwf	putch@c
  3051                           
  3052                           ;BT02week12ttvxl.c: 63: lcd_putc(c);
  3053  0566  120A  158A  2ACF   	ljmp	_lcd_putc
  3054  0569                     __end_of_putch:	
  3055  0569                     __ptext772:	
  3056 ;; =============== function ___ftneg ends ============
  3057                           
  3058                           
  3059 ;; *************** function ___llmod *****************
  3060 ;; Defined at:
  3061 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  divisor         4   21[BANK0 ] unsigned long 
  3064 ;;  dividend        4   25[BANK0 ] unsigned long 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  counter         1   29[BANK0 ] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  4   21[BANK0 ] unsigned long 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 60/0
  3073 ;;		On exit  : 60/0
  3074 ;;		Unchanged: FFF9F/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       8       0       0       0
  3077 ;;      Locals:         0       1       0       0       0
  3078 ;;      Temps:          0       0       0       0       0
  3079 ;;      Totals:         0       9       0       0       0
  3080 ;;Total ram usage:        9 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_printf
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089  0569                     ___llmod:	
  3090                           
  3091                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3092  0569  0838               	movf	___llmod@divisor+3,w
  3093  056A  0437               	iorwf	___llmod@divisor+2,w
  3094  056B  0436               	iorwf	___llmod@divisor+1,w
  3095  056C  0435               	iorwf	___llmod@divisor,w
  3096  056D  1903               	skipnz
  3097  056E  2D9E               	goto	l6661
  3098  056F  01BD               	clrf	___llmod@counter
  3099  0570                     L13:	
  3100  0570  0ABD               	incf	___llmod@counter,f
  3101  0571  1BB8               	btfsc	___llmod@divisor+3,7
  3102  0572  2D79               	goto	l6653
  3103  0573  1003               	clrc
  3104  0574  0DB5               	rlf	___llmod@divisor,f
  3105  0575  0DB6               	rlf	___llmod@divisor+1,f
  3106  0576  0DB7               	rlf	___llmod@divisor+2,f
  3107  0577  0DB8               	rlf	___llmod@divisor+3,f
  3108  0578  2D70               	goto	L13
  3109  0579                     l6653:	
  3110  0579  0838               	movf	___llmod@divisor+3,w
  3111  057A  023C               	subwf	___llmod@dividend+3,w
  3112  057B  1D03               	skipz
  3113  057C  2D87               	goto	u3105
  3114  057D  0837               	movf	___llmod@divisor+2,w
  3115  057E  023B               	subwf	___llmod@dividend+2,w
  3116  057F  1D03               	skipz
  3117  0580  2D87               	goto	u3105
  3118  0581  0836               	movf	___llmod@divisor+1,w
  3119  0582  023A               	subwf	___llmod@dividend+1,w
  3120  0583  1D03               	skipz
  3121  0584  2D87               	goto	u3105
  3122  0585  0835               	movf	___llmod@divisor,w
  3123  0586  0239               	subwf	___llmod@dividend,w
  3124  0587                     u3105:	
  3125  0587  1C03               	skipc
  3126  0588  2D98               	goto	L14
  3127  0589  0835               	movf	___llmod@divisor,w
  3128  058A  02B9               	subwf	___llmod@dividend,f
  3129  058B  0836               	movf	___llmod@divisor+1,w
  3130  058C  1C03               	skipc
  3131  058D  0F36               	incfsz	___llmod@divisor+1,w
  3132  058E  02BA               	subwf	___llmod@dividend+1,f
  3133  058F  0837               	movf	___llmod@divisor+2,w
  3134  0590  1C03               	skipc
  3135  0591  0F37               	incfsz	___llmod@divisor+2,w
  3136  0592  02BB               	subwf	___llmod@dividend+2,f
  3137  0593  0838               	movf	___llmod@divisor+3,w
  3138  0594  1C03               	skipc
  3139  0595  0F38               	incfsz	___llmod@divisor+3,w
  3140  0596  02BC               	subwf	___llmod@dividend+3,f
  3141  0597  1003               	clrc
  3142  0598                     L14:	
  3143  0598  0CB8               	rrf	___llmod@divisor+3,f
  3144  0599  0CB7               	rrf	___llmod@divisor+2,f
  3145  059A  0CB6               	rrf	___llmod@divisor+1,f
  3146  059B  0CB5               	rrf	___llmod@divisor,f
  3147  059C  0BBD               	decfsz	___llmod@counter,f
  3148  059D  2D79               	goto	l6653
  3149  059E                     l6661:	
  3150  059E  083C               	movf	___llmod@dividend+3,w
  3151  059F  00B8               	movwf	?___llmod+3
  3152  05A0  083B               	movf	___llmod@dividend+2,w
  3153  05A1  00B7               	movwf	?___llmod+2
  3154  05A2  083A               	movf	___llmod@dividend+1,w
  3155  05A3  00B6               	movwf	?___llmod+1
  3156  05A4  0839               	movf	___llmod@dividend,w
  3157  05A5  00B5               	movwf	?___llmod
  3158  05A6  0008               	return
  3159  05A7                     __end_of___llmod:	
  3160  05A7                     __ptext770:	
  3161 ;; =============== function ___lldiv ends ============
  3162                           
  3163                           
  3164 ;; *************** function ___ftge *****************
  3165 ;; Defined at:
  3166 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  ff1             3    8[BANK0 ] float 
  3169 ;;  ff2             3   11[BANK0 ] float 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 60/0
  3178 ;;		On exit  : 60/0
  3179 ;;		Unchanged: FFF9F/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3181 ;;      Params:         0       6       0       0       0
  3182 ;;      Locals:         0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0
  3184 ;;      Totals:         0       6       0       0       0
  3185 ;;Total ram usage:        6 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    3
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_printf
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194  05A7                     ___ftge:	
  3195                           
  3196                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3197  05A7  1FAA               	btfss	___ftge@ff1+2,7
  3198  05A8  2DB6               	goto	l6677
  3199  05A9  0828               	movf	___ftge@ff1,w
  3200  05AA  3C00               	sublw	0
  3201  05AB  00A8               	movwf	___ftge@ff1
  3202  05AC  0829               	movf	___ftge@ff1+1,w
  3203  05AD  1C03               	skipc
  3204  05AE  0F29               	incfsz	___ftge@ff1+1,w
  3205  05AF  3C00               	sublw	0
  3206  05B0  00A9               	movwf	___ftge@ff1+1
  3207  05B1  082A               	movf	___ftge@ff1+2,w
  3208  05B2  1C03               	skipc
  3209  05B3  0F2A               	incfsz	___ftge@ff1+2,w
  3210  05B4  3C80               	sublw	128
  3211  05B5  00AA               	movwf	___ftge@ff1+2
  3212  05B6                     l6677:	
  3213  05B6  1FAD               	btfss	___ftge@ff2+2,7
  3214  05B7  2DC5               	goto	l6681
  3215  05B8  082B               	movf	___ftge@ff2,w
  3216  05B9  3C00               	sublw	0
  3217  05BA  00AB               	movwf	___ftge@ff2
  3218  05BB  082C               	movf	___ftge@ff2+1,w
  3219  05BC  1C03               	skipc
  3220  05BD  0F2C               	incfsz	___ftge@ff2+1,w
  3221  05BE  3C00               	sublw	0
  3222  05BF  00AC               	movwf	___ftge@ff2+1
  3223  05C0  082D               	movf	___ftge@ff2+2,w
  3224  05C1  1C03               	skipc
  3225  05C2  0F2D               	incfsz	___ftge@ff2+2,w
  3226  05C3  3C80               	sublw	128
  3227  05C4  00AD               	movwf	___ftge@ff2+2
  3228  05C5                     l6681:	
  3229  05C5  3080               	movlw	128
  3230  05C6  06AA               	xorwf	___ftge@ff1+2,f
  3231  05C7  06AD               	xorwf	___ftge@ff2+2,f
  3232  05C8  082D               	movf	___ftge@ff2+2,w
  3233  05C9  022A               	subwf	___ftge@ff1+2,w
  3234  05CA  1D03               	skipz
  3235  05CB  0008               	return
  3236  05CC  082C               	movf	___ftge@ff2+1,w
  3237  05CD  0229               	subwf	___ftge@ff1+1,w
  3238  05CE  1D03               	skipz
  3239  05CF  0008               	return
  3240  05D0  082B               	movf	___ftge@ff2,w
  3241  05D1  0228               	subwf	___ftge@ff1,w
  3242  05D2  0008               	return
  3243  05D3                     __end_of___ftge:	
  3244  05D3                     __ptext782:	
  3245 ;; =============== function __tdiv_to_l_ ends ============
  3246                           
  3247                           
  3248 ;; *************** function _isdigit *****************
  3249 ;; Defined at:
  3250 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  c               1    wreg     unsigned char 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  c               1    9[BANK0 ] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;		None               void
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0
  3259 ;; Tracked objects:
  3260 ;;		On entry : 60/20
  3261 ;;		On exit  : 60/0
  3262 ;;		Unchanged: FFF9F/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         0       0       0       0       0
  3265 ;;      Locals:         0       2       0       0       0
  3266 ;;      Temps:          0       0       0       0       0
  3267 ;;      Totals:         0       2       0       0       0
  3268 ;;Total ram usage:        2 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    3
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_printf
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277  05D3                     _isdigit:	
  3278                           
  3279                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3280                           ;isdigit@c stored from wreg
  3281  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3282  05D4  00A9               	movwf	isdigit@c
  3283  05D5  303A               	movlw	58
  3284  05D6  01A8               	clrf	_isdigit$3674
  3285  05D7  0229               	subwf	isdigit@c,w
  3286  05D8  1803               	skipnc
  3287  05D9  2DE0               	goto	l6363
  3288  05DA  3030               	movlw	48
  3289  05DB  0229               	subwf	isdigit@c,w
  3290  05DC  1C03               	skipc
  3291  05DD  2DE0               	goto	l6363
  3292  05DE  01A8               	clrf	_isdigit$3674
  3293  05DF  0AA8               	incf	_isdigit$3674,f
  3294  05E0                     l6363:	
  3295  05E0  0C28               	rrf	_isdigit$3674,w
  3296  05E1  0008               	return
  3297  05E2                     __end_of_isdigit:	
  3298  05E2                     __ptext778:	
  3299 ;; =============== function ___lbdiv ends ============
  3300                           
  3301                           
  3302 ;; *************** function ___wmul *****************
  3303 ;; Defined at:
  3304 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  multiplier      2    8[BANK0 ] unsigned int 
  3307 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  product         2   12[BANK0 ] unsigned int 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  2    8[BANK0 ] unsigned int 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0
  3314 ;; Tracked objects:
  3315 ;;		On entry : 60/0
  3316 ;;		On exit  : 60/0
  3317 ;;		Unchanged: FFF9F/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       4       0       0       0
  3320 ;;      Locals:         0       2       0       0       0
  3321 ;;      Temps:          0       0       0       0       0
  3322 ;;      Totals:         0       6       0       0       0
  3323 ;;Total ram usage:        6 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    3
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_fround
  3330 ;;		_scale
  3331 ;;		_printf
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334  05E2                     ___wmul:	
  3335                           
  3336                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3337  05E2  01AC               	clrf	___wmul@product
  3338  05E3  01AD               	clrf	___wmul@product+1
  3339  05E4                     l7677:	
  3340  05E4  1C28               	btfss	___wmul@multiplier,0
  3341  05E5  2DEC               	goto	l7681
  3342  05E6  082A               	movf	___wmul@multiplicand,w
  3343  05E7  07AC               	addwf	___wmul@product,f
  3344  05E8  1803               	skipnc
  3345  05E9  0AAD               	incf	___wmul@product+1,f
  3346  05EA  082B               	movf	___wmul@multiplicand+1,w
  3347  05EB  07AD               	addwf	___wmul@product+1,f
  3348  05EC                     l7681:	
  3349  05EC  1003               	clrc
  3350  05ED  0DAA               	rlf	___wmul@multiplicand,f
  3351  05EE  0DAB               	rlf	___wmul@multiplicand+1,f
  3352  05EF  1003               	clrc
  3353  05F0  0CA9               	rrf	___wmul@multiplier+1,f
  3354  05F1  0CA8               	rrf	___wmul@multiplier,f
  3355  05F2  0829               	movf	___wmul@multiplier+1,w
  3356  05F3  0428               	iorwf	___wmul@multiplier,w
  3357  05F4  1D03               	skipz
  3358  05F5  2DE4               	goto	l7677
  3359  05F6  082D               	movf	___wmul@product+1,w
  3360  05F7  00A9               	movwf	?___wmul+1
  3361  05F8  082C               	movf	___wmul@product,w
  3362  05F9  00A8               	movwf	?___wmul
  3363  05FA  0008               	return
  3364  05FB                     __end_of___wmul:	
  3365  05FB                     __ptext774:	
  3366 ;; =============== function ___awdiv ends ============
  3367                           
  3368                           
  3369 ;; *************** function ___fttol *****************
  3370 ;; Defined at:
  3371 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  f1              3   22[BANK0 ] float 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  lval            4   30[BANK0 ] unsigned long 
  3376 ;;  exp1            1   34[BANK0 ] unsigned char 
  3377 ;;  sign1           1   29[BANK0 ] unsigned char 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  4   22[BANK0 ] long 
  3380 ;; Registers used:
  3381 ;;		wreg, status,2, status,0
  3382 ;; Tracked objects:
  3383 ;;		On entry : 60/0
  3384 ;;		On exit  : 60/0
  3385 ;;		Unchanged: FFF9F/0
  3386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3387 ;;      Params:         0       4       0       0       0
  3388 ;;      Locals:         0       6       0       0       0
  3389 ;;      Temps:          0       3       0       0       0
  3390 ;;      Totals:         0      13       0       0       0
  3391 ;;Total ram usage:       13 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    3
  3394 ;; This function calls:
  3395 ;;		Nothing
  3396 ;; This function is called by:
  3397 ;;		_printf
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400  05FB                     ___fttol:	
  3401                           
  3402                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3403  05FB  275D  120A  118A   	fcall	PL27	;call to abstracted procedure
  3404  05FE  1003               	clrc
  3405  05FF  0D3B               	rlf	??___fttol+1,w
  3406  0600  0D3C               	rlf	??___fttol+2,w
  3407  0601  00C2               	movwf	___fttol@exp1
  3408  0602  08C2               	movf	___fttol@exp1,f
  3409  0603  1D03               	skipz
  3410  0604  2E0A               	goto	l6567
  3411  0605                     l6565:	
  3412  0605  01B6               	clrf	?___fttol
  3413  0606  01B7               	clrf	?___fttol+1
  3414  0607  01B8               	clrf	?___fttol+2
  3415  0608  01B9               	clrf	?___fttol+3
  3416  0609  0008               	return
  3417  060A                     l6567:	
  3418  060A  275D  120A  118A   	fcall	PL27	;call to abstracted procedure
  3419  060D  3017               	movlw	23
  3420  060E                     u2945:	
  3421  060E  1003               	clrc
  3422  060F  0CBC               	rrf	??___fttol+2,f
  3423  0610  0CBB               	rrf	??___fttol+1,f
  3424  0611  0CBA               	rrf	??___fttol,f
  3425  0612  3EFF               	addlw	-1
  3426  0613  1D03               	skipz
  3427  0614  2E0E               	goto	u2945
  3428  0615  083A               	movf	??___fttol,w
  3429  0616  00BD               	movwf	___fttol@sign1
  3430  0617  17B7               	bsf	___fttol@f1+1,7
  3431  0618  01B8               	clrf	___fttol@f1+2
  3432  0619  0836               	movf	___fttol@f1,w
  3433  061A  00BE               	movwf	___fttol@lval
  3434  061B  0837               	movf	___fttol@f1+1,w
  3435  061C  00BF               	movwf	___fttol@lval+1
  3436  061D  0838               	movf	___fttol@f1+2,w
  3437  061E  00C0               	movwf	___fttol@lval+2
  3438  061F  308E               	movlw	142
  3439  0620  01C1               	clrf	___fttol@lval+3
  3440  0621  02C2               	subwf	___fttol@exp1,f
  3441  0622  1FC2               	btfss	___fttol@exp1,7
  3442  0623  2E31               	goto	l6587
  3443  0624  0842               	movf	___fttol@exp1,w
  3444  0625  3A80               	xorlw	128
  3445  0626  3E8F               	addlw	143
  3446  0627  1C03               	btfss	3,0
  3447  0628  2E05               	goto	l6565
  3448  0629                     l6583:	
  3449  0629  1003               	clrc
  3450  062A  0CC1               	rrf	___fttol@lval+3,f
  3451  062B  0CC0               	rrf	___fttol@lval+2,f
  3452  062C  0CBF               	rrf	___fttol@lval+1,f
  3453  062D  0CBE               	rrf	___fttol@lval,f
  3454  062E  0FC2               	incfsz	___fttol@exp1,f
  3455  062F  2E29               	goto	l6583
  3456  0630  2E3F               	goto	l6593
  3457  0631                     l6587:	
  3458  0631  3018               	movlw	24
  3459  0632  0242               	subwf	___fttol@exp1,w
  3460  0633  1803               	btfsc	3,0
  3461  0634  2E05               	goto	l6565
  3462  0635                     l3418:	
  3463  0635  08C2               	movf	___fttol@exp1,f
  3464  0636  1903               	btfsc	3,2
  3465  0637  2E3F               	goto	l6593
  3466  0638  1003               	clrc
  3467  0639  0DBE               	rlf	___fttol@lval,f
  3468  063A  0DBF               	rlf	___fttol@lval+1,f
  3469  063B  0DC0               	rlf	___fttol@lval+2,f
  3470  063C  0DC1               	rlf	___fttol@lval+3,f
  3471  063D  03C2               	decf	___fttol@exp1,f
  3472  063E  2E35               	goto	l3418
  3473  063F                     l6593:	
  3474  063F  083D               	movf	___fttol@sign1,w
  3475  0640  1903               	btfsc	3,2
  3476  0641  2E4D               	goto	l6597
  3477  0642  09BE               	comf	___fttol@lval,f
  3478  0643  09BF               	comf	___fttol@lval+1,f
  3479  0644  09C0               	comf	___fttol@lval+2,f
  3480  0645  09C1               	comf	___fttol@lval+3,f
  3481  0646  0ABE               	incf	___fttol@lval,f
  3482  0647  1903               	skipnz
  3483  0648  0ABF               	incf	___fttol@lval+1,f
  3484  0649  1903               	skipnz
  3485  064A  0AC0               	incf	___fttol@lval+2,f
  3486  064B  1903               	skipnz
  3487  064C  0AC1               	incf	___fttol@lval+3,f
  3488  064D                     l6597:	
  3489  064D  0841               	movf	___fttol@lval+3,w
  3490  064E  00B9               	movwf	?___fttol+3
  3491  064F  0840               	movf	___fttol@lval+2,w
  3492  0650  00B8               	movwf	?___fttol+2
  3493  0651  083F               	movf	___fttol@lval+1,w
  3494  0652  00B7               	movwf	?___fttol+1
  3495  0653  083E               	movf	___fttol@lval,w
  3496  0654  00B6               	movwf	?___fttol
  3497  0655  0008               	return
  3498  0656                     __end_of___fttol:	
  3499  0656                     __ptext769:	
  3500 ;; =============== function ___awmod ends ============
  3501                           
  3502                           
  3503 ;; *************** function ___lldiv *****************
  3504 ;; Defined at:
  3505 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  divisor         4    8[BANK0 ] unsigned long 
  3508 ;;  dividend        4   12[BANK0 ] unsigned long 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  quotient        4   16[BANK0 ] unsigned long 
  3511 ;;  counter         1   20[BANK0 ] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  4    8[BANK0 ] unsigned long 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 60/0
  3518 ;;		On exit  : 60/0
  3519 ;;		Unchanged: FFF9F/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       8       0       0       0
  3522 ;;      Locals:         0       5       0       0       0
  3523 ;;      Temps:          0       0       0       0       0
  3524 ;;      Totals:         0      13       0       0       0
  3525 ;;Total ram usage:       13 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    3
  3528 ;; This function calls:
  3529 ;;		Nothing
  3530 ;; This function is called by:
  3531 ;;		_printf
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534  0656                     ___lldiv:	
  3535                           
  3536                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3537  0656  01B0               	clrf	___lldiv@quotient
  3538  0657  01B1               	clrf	___lldiv@quotient+1
  3539  0658  01B2               	clrf	___lldiv@quotient+2
  3540  0659  01B3               	clrf	___lldiv@quotient+3
  3541  065A  082B               	movf	___lldiv@divisor+3,w
  3542  065B  042A               	iorwf	___lldiv@divisor+2,w
  3543  065C  0429               	iorwf	___lldiv@divisor+1,w
  3544  065D  0428               	iorwf	___lldiv@divisor,w
  3545  065E  1903               	skipnz
  3546  065F  2E95               	goto	l6715
  3547  0660  01B4               	clrf	___lldiv@counter
  3548  0661                     L10:	
  3549  0661  0AB4               	incf	___lldiv@counter,f
  3550  0662  1BAB               	btfsc	___lldiv@divisor+3,7
  3551  0663  2E6A               	goto	l6703
  3552  0664  1003               	clrc
  3553  0665  0DA8               	rlf	___lldiv@divisor,f
  3554  0666  0DA9               	rlf	___lldiv@divisor+1,f
  3555  0667  0DAA               	rlf	___lldiv@divisor+2,f
  3556  0668  0DAB               	rlf	___lldiv@divisor+3,f
  3557  0669  2E61               	goto	L10
  3558  066A                     l6703:	
  3559  066A  1003               	clrc
  3560  066B  0DB0               	rlf	___lldiv@quotient,f
  3561  066C  0DB1               	rlf	___lldiv@quotient+1,f
  3562  066D  0DB2               	rlf	___lldiv@quotient+2,f
  3563  066E  0DB3               	rlf	___lldiv@quotient+3,f
  3564  066F  082B               	movf	___lldiv@divisor+3,w
  3565  0670  022F               	subwf	___lldiv@dividend+3,w
  3566  0671  1D03               	skipz
  3567  0672  2E7D               	goto	u3185
  3568  0673  082A               	movf	___lldiv@divisor+2,w
  3569  0674  022E               	subwf	___lldiv@dividend+2,w
  3570  0675  1D03               	skipz
  3571  0676  2E7D               	goto	u3185
  3572  0677  0829               	movf	___lldiv@divisor+1,w
  3573  0678  022D               	subwf	___lldiv@dividend+1,w
  3574  0679  1D03               	skipz
  3575  067A  2E7D               	goto	u3185
  3576  067B  0828               	movf	___lldiv@divisor,w
  3577  067C  022C               	subwf	___lldiv@dividend,w
  3578  067D                     u3185:	
  3579  067D  1C03               	skipc
  3580  067E  2E8F               	goto	L11
  3581  067F  0828               	movf	___lldiv@divisor,w
  3582  0680  02AC               	subwf	___lldiv@dividend,f
  3583  0681  0829               	movf	___lldiv@divisor+1,w
  3584  0682  1C03               	skipc
  3585  0683  0F29               	incfsz	___lldiv@divisor+1,w
  3586  0684  02AD               	subwf	___lldiv@dividend+1,f
  3587  0685  082A               	movf	___lldiv@divisor+2,w
  3588  0686  1C03               	skipc
  3589  0687  0F2A               	incfsz	___lldiv@divisor+2,w
  3590  0688  02AE               	subwf	___lldiv@dividend+2,f
  3591  0689  082B               	movf	___lldiv@divisor+3,w
  3592  068A  1C03               	skipc
  3593  068B  0F2B               	incfsz	___lldiv@divisor+3,w
  3594  068C  02AF               	subwf	___lldiv@dividend+3,f
  3595  068D  1430               	bsf	___lldiv@quotient,0
  3596  068E  1003               	clrc
  3597  068F                     L11:	
  3598  068F  0CAB               	rrf	___lldiv@divisor+3,f
  3599  0690  0CAA               	rrf	___lldiv@divisor+2,f
  3600  0691  0CA9               	rrf	___lldiv@divisor+1,f
  3601  0692  0CA8               	rrf	___lldiv@divisor,f
  3602  0693  0BB4               	decfsz	___lldiv@counter,f
  3603  0694  2E6A               	goto	l6703
  3604  0695                     l6715:	
  3605  0695  0833               	movf	___lldiv@quotient+3,w
  3606  0696  00AB               	movwf	?___lldiv+3
  3607  0697  0832               	movf	___lldiv@quotient+2,w
  3608  0698  00AA               	movwf	?___lldiv+2
  3609  0699  0831               	movf	___lldiv@quotient+1,w
  3610  069A  00A9               	movwf	?___lldiv+1
  3611  069B  0830               	movf	___lldiv@quotient,w
  3612  069C  00A8               	movwf	?___lldiv
  3613  069D  0008               	return
  3614  069E                     __end_of___lldiv:	
  3615  069E                     __ptext771:	
  3616 ;; =============== function ___ftge ends ============
  3617                           
  3618                           
  3619 ;; *************** function ___ftneg *****************
  3620 ;; Defined at:
  3621 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  f1              3    8[BANK0 ] float 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  3    8[BANK0 ] float 
  3628 ;; Registers used:
  3629 ;;		wreg
  3630 ;; Tracked objects:
  3631 ;;		On entry : 160/0
  3632 ;;		On exit  : 160/0
  3633 ;;		Unchanged: FFE9F/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         0       3       0       0       0
  3636 ;;      Locals:         0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0
  3638 ;;      Totals:         0       3       0       0       0
  3639 ;;Total ram usage:        3 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    3
  3642 ;; This function calls:
  3643 ;;		Nothing
  3644 ;; This function is called by:
  3645 ;;		_printf
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648  069E                     ___ftneg:	
  3649                           
  3650                           ; Regs used in ___ftneg: [wreg]
  3651  069E  082A               	movf	___ftneg@f1+2,w
  3652  069F  0429               	iorwf	___ftneg@f1+1,w
  3653  06A0  0428               	iorwf	___ftneg@f1,w
  3654  06A1  1903               	skipnz
  3655  06A2  0008               	return
  3656  06A3  3080               	movlw	128
  3657  06A4  06AA               	xorwf	___ftneg@f1+2,f
  3658  06A5  0008               	return
  3659  06A6                     __end_of___ftneg:	
  3660  06A6                     __ptext762:	
  3661 ;; =============== function _lcd_init ends ============
  3662                           
  3663                           
  3664 ;; *************** function ___lltoft *****************
  3665 ;; Defined at:
  3666 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  c               4   16[BANK0 ] unsigned long 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  exp             1   20[BANK0 ] unsigned char 
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  3   16[BANK0 ] float 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0, pclath, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 60/0
  3677 ;;		On exit  : 60/0
  3678 ;;		Unchanged: FFF9F/0
  3679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3680 ;;      Params:         0       4       0       0       0
  3681 ;;      Locals:         0       1       0       0       0
  3682 ;;      Temps:          0       0       0       0       0
  3683 ;;      Totals:         0       5       0       0       0
  3684 ;;Total ram usage:        5 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    4
  3687 ;; This function calls:
  3688 ;;		___ftpack
  3689 ;; This function is called by:
  3690 ;;		_printf
  3691 ;; This function uses a non-reentrant model
  3692 ;;
  3693  06A6                     ___lltoft:	
  3694                           
  3695                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3696  06A6  308E               	movlw	142
  3697  06A7  00B4               	movwf	___lltoft@exp
  3698  06A8                     l7915:	
  3699  06A8  30FF               	movlw	255
  3700  06A9  0533               	andwf	___lltoft@c+3,w
  3701  06AA  1903               	btfsc	3,2
  3702  06AB  2EB3               	goto	l7917
  3703  06AC  1003               	clrc
  3704  06AD  0CB3               	rrf	___lltoft@c+3,f
  3705  06AE  0CB2               	rrf	___lltoft@c+2,f
  3706  06AF  0CB1               	rrf	___lltoft@c+1,f
  3707  06B0  0CB0               	rrf	___lltoft@c,f
  3708  06B1  0AB4               	incf	___lltoft@exp,f
  3709  06B2  2EA8               	goto	l7915
  3710  06B3                     l7917:	
  3711  06B3  0830               	movf	___lltoft@c,w
  3712  06B4  00A8               	movwf	?___ftpack
  3713  06B5  0831               	movf	___lltoft@c+1,w
  3714  06B6  00A9               	movwf	?___ftpack+1
  3715  06B7  0832               	movf	___lltoft@c+2,w
  3716  06B8  00AA               	movwf	?___ftpack+2
  3717  06B9  0834               	movf	___lltoft@exp,w
  3718  06BA  00AB               	movwf	?___ftpack+3
  3719  06BB  01AC               	clrf	?___ftpack+4
  3720  06BC  120A  158A  2769   	fcall	___ftpack
  3721  06BF  0828               	movf	?___ftpack,w
  3722  06C0  00B0               	movwf	?___lltoft
  3723  06C1  0829               	movf	?___ftpack+1,w
  3724  06C2  00B1               	movwf	?___lltoft+1
  3725  06C3  082A               	movf	?___ftpack+2,w
  3726  06C4  00B2               	movwf	?___lltoft+2
  3727  06C5  0008               	return
  3728  06C6                     __end_of___lltoft:	
  3729  06C6                     __ptext757:	
  3730 ;; =============== function _lcd_putc ends ============
  3731                           
  3732                           
  3733 ;; *************** function ___ftsub *****************
  3734 ;; Defined at:
  3735 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  f2              3   62[BANK0 ] float 
  3738 ;;  f1              3   65[BANK0 ] float 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  3   62[BANK0 ] float 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 60/0
  3747 ;;		On exit  : 60/0
  3748 ;;		Unchanged: FFF9F/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3750 ;;      Params:         0       6       0       0       0
  3751 ;;      Locals:         0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0
  3753 ;;      Totals:         0       6       0       0       0
  3754 ;;Total ram usage:        6 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    5
  3757 ;; This function calls:
  3758 ;;		___ftadd
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;;		_printf
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764  06C6                     ___ftsub:	
  3765                           
  3766                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3767  06C6  3080               	movlw	128
  3768  06C7  06E0               	xorwf	___ftsub@f2+2,f
  3769  06C8  0861               	movf	___ftsub@f1,w
  3770  06C9  00D2               	movwf	?___ftadd
  3771  06CA  0862               	movf	___ftsub@f1+1,w
  3772  06CB  00D3               	movwf	?___ftadd+1
  3773  06CC  0863               	movf	___ftsub@f1+2,w
  3774  06CD  00D4               	movwf	?___ftadd+2
  3775  06CE  085E               	movf	___ftsub@f2,w
  3776  06CF  00D5               	movwf	?___ftadd+3
  3777  06D0  085F               	movf	___ftsub@f2+1,w
  3778  06D1  00D6               	movwf	?___ftadd+4
  3779  06D2  0860               	movf	___ftsub@f2+2,w
  3780  06D3  00D7               	movwf	?___ftadd+5
  3781  06D4  160A  118A  2672   	fcall	___ftadd
  3782  06D7  0852               	movf	?___ftadd,w
  3783  06D8  00DE               	movwf	?___ftsub
  3784  06D9  0853               	movf	?___ftadd+1,w
  3785  06DA  00DF               	movwf	?___ftsub+1
  3786  06DB  0854               	movf	?___ftadd+2,w
  3787  06DC  00E0               	movwf	?___ftsub+2
  3788  06DD  0008               	return
  3789  06DE                     __end_of___ftsub:	
  3790  06DE                     PL2:	
  3791  06DE  00AB               	movwf	?___lldiv+3
  3792  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  3793  06E0  083B               	movf	(printf@_val+3)^(0+128),w
  3794  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  3795  06E2  00AF               	movwf	?___lldiv+7
  3796  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3797  06E4  083A               	movf	(printf@_val+2)^(0+128),w
  3798  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3799  06E6  00AE               	movwf	?___lldiv+6
  3800  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3801  06E8  0839               	movf	(printf@_val+1)^(0+128),w
  3802  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3803  06EA  00AD               	movwf	?___lldiv+5
  3804  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  3805  06EC  0838               	movf	printf@_val^(0+128),w
  3806  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3807  06EE  00AC               	movwf	?___lldiv+4
  3808  06EF  0008               	return
  3809  06F0                     PL4:	
  3810  06F0  0848               	movf	printf@c^(0+128),w
  3811  06F1  00AB               	movwf	??_printf^(0+128)
  3812  06F2  1003               	clrc
  3813  06F3  0DAB               	rlf	??_printf^(0+128),f
  3814  06F4  1003               	clrc
  3815  06F5  0D2B               	rlf	??_printf^(0+128),w
  3816  06F6  3E4F               	addlw	low (_dpowers-__stringbase)
  3817  06F7  0084               	movwf	4
  3818  06F8  0008               	return
  3819  06F9                     PL5:	
  3820  06F9  0835               	movf	printf@integ^(0+128),w
  3821  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3822  06FB  00A8               	movwf	?___ftge
  3823  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  3824  06FD  0836               	movf	(printf@integ+1)^(0+128),w
  3825  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3826  06FF  00A9               	movwf	?___ftge+1
  3827  0700  1683               	bsf	3,5	;RP0=1, select bank1
  3828  0701  0837               	movf	(printf@integ+2)^(0+128),w
  3829  0702  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0703  00AA               	movwf	?___ftge+2
  3831  0704  0008               	return
  3832  0705                     PL6:	
  3833  0705  300A               	movlw	10
  3834  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3835  0707  00B5               	movwf	?___llmod
  3836  0708  01B6               	clrf	?___llmod+1
  3837  0709  01B7               	clrf	?___llmod+2
  3838  070A  01B8               	clrf	?___llmod+3
  3839  070B  1683               	bsf	3,5	;RP0=1, select bank1
  3840  070C  0008               	return
  3841  070D                     PL7:	
  3842  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3843  070E  0728               	addwf	?___wmul,w
  3844  070F  1683               	bsf	3,5	;RP0=1, select bank1
  3845  0710  00AB               	movwf	??_printf^(0+128)
  3846  0711  3000               	movlw	0
  3847  0712  1803               	skipnc
  3848  0713  3001               	movlw	1
  3849  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3850  0715  0729               	addwf	?___wmul+1,w
  3851  0716  1683               	bsf	3,5	;RP0=1, select bank1
  3852  0717  00AC               	movwf	(??_printf+1)^(0+128)
  3853  0718  082B               	movf	??_printf^(0+128),w
  3854  0719  3ED0               	addlw	208
  3855  071A  0008               	return
  3856  071B                     PL8:	
  3857  071B  0852               	movf	?_scale,w
  3858  071C  1683               	bsf	3,5	;RP0=1, select bank1
  3859  071D  00B5               	movwf	printf@integ^(0+128)
  3860  071E  1283               	bcf	3,5	;RP0=0, select bank0
  3861  071F  0853               	movf	?_scale+1,w
  3862  0720  1683               	bsf	3,5	;RP0=1, select bank1
  3863  0721  00B6               	movwf	(printf@integ+1)^(0+128)
  3864  0722  1283               	bcf	3,5	;RP0=0, select bank0
  3865  0723  0854               	movf	?_scale+2,w
  3866  0724  1683               	bsf	3,5	;RP0=1, select bank1
  3867  0725  00B7               	movwf	(printf@integ+2)^(0+128)
  3868  0726  0843               	movf	printf@fval^(0+128),w
  3869  0727  1283               	bcf	3,5	;RP0=0, select bank0
  3870  0728  0008               	return
  3871  0729                     PL9:	
  3872  0729  0839               	movf	?___fttol+3,w
  3873  072A  1683               	bsf	3,5	;RP0=1, select bank1
  3874  072B  00BB               	movwf	(printf@_val+3)^(0+128)
  3875  072C  1283               	bcf	3,5	;RP0=0, select bank0
  3876  072D  0838               	movf	?___fttol+2,w
  3877  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3878  072F  00BA               	movwf	(printf@_val+2)^(0+128)
  3879  0730  1283               	bcf	3,5	;RP0=0, select bank0
  3880  0731  0837               	movf	?___fttol+1,w
  3881  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3882  0733  00B9               	movwf	(printf@_val+1)^(0+128)
  3883  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0735  0836               	movf	?___fttol,w
  3885  0736  0008               	return
  3886  0737                     PL15:	
  3887  0737  082B               	movf	?___lldiv+3,w
  3888  0738  00BC               	movwf	?___llmod+7
  3889  0739  082A               	movf	?___lldiv+2,w
  3890  073A  00BB               	movwf	?___llmod+6
  3891  073B  0829               	movf	?___lldiv+1,w
  3892  073C  00BA               	movwf	?___llmod+5
  3893  073D  0828               	movf	?___lldiv,w
  3894  073E  00B9               	movwf	?___llmod+4
  3895  073F  0008               	return
  3896  0740                     PL17:	
  3897  0740  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0741  00B6               	movwf	?___fttol
  3899  0742  1683               	bsf	3,5	;RP0=1, select bank1
  3900  0743  0844               	movf	(printf@fval+1)^(0+128),w
  3901  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0745  00B7               	movwf	?___fttol+1
  3903  0746  1683               	bsf	3,5	;RP0=1, select bank1
  3904  0747  0845               	movf	(printf@fval+2)^(0+128),w
  3905  0748  1283               	bcf	3,5	;RP0=0, select bank0
  3906  0749  00B8               	movwf	?___fttol+2
  3907  074A  0008               	return
  3908  074B                     PL20:	
  3909  074B  00C3               	movwf	?___ftmul
  3910  074C  1683               	bsf	3,5	;RP0=1, select bank1
  3911  074D  0844               	movf	(printf@fval+1)^(0+128),w
  3912  074E  1283               	bcf	3,5	;RP0=0, select bank0
  3913  074F  00C4               	movwf	?___ftmul+1
  3914  0750  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0751  0845               	movf	(printf@fval+2)^(0+128),w
  3916  0752  1283               	bcf	3,5	;RP0=0, select bank0
  3917  0753  00C5               	movwf	?___ftmul+2
  3918  0754  0008               	return
  3919  0755                     PL25:	
  3920  0755  00AB               	movwf	??_printf^(0+128)
  3921  0756  01AC               	clrf	(??_printf^(0+128)+1)
  3922  0757  1BAB               	btfsc	??_printf^(0+128),7
  3923  0758  03AC               	decf	(??_printf^(0+128)+1),f
  3924  0759  082C               	movf	(??_printf+1)^(0+128),w
  3925  075A  3A80               	xorlw	128
  3926  075B  00AD               	movwf	(??_printf+2)^(0+128)
  3927  075C  0008               	return
  3928  075D                     PL27:	
  3929  075D  0836               	movf	___fttol@f1,w
  3930  075E  00BA               	movwf	??___fttol
  3931  075F  0837               	movf	___fttol@f1+1,w
  3932  0760  00BB               	movwf	??___fttol+1
  3933  0761  0838               	movf	___fttol@f1+2,w
  3934  0762  00BC               	movwf	??___fttol+2
  3935  0763  0008               	return
  3936  0764                     PL30:	
  3937  0764  1283               	bcf	3,5	;RP0=0, select bank0
  3938  0765  00A8               	movwf	?___wmul
  3939  0766  300A               	movlw	10
  3940  0767  00AA               	movwf	?___wmul+2
  3941  0768  01AB               	clrf	?___wmul+3
  3942  0769  0008               	return
  3943  076A                     PL31:	
  3944  076A  1683               	bsf	3,5	;RP0=1, select bank1
  3945  076B  1303               	bcf	3,6	;RP1=0, select bank1
  3946  076C  0008               	return
  3947  076D                     __ptext781:	
  3948 ;; =============== function __div_to_l_ ends ============
  3949                           
  3950                           
  3951 ;; *************** function __tdiv_to_l_ *****************
  3952 ;; Defined at:
  3953 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  f1              3    8[BANK0 ] float 
  3956 ;;  f2              3   11[BANK0 ] float 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  quot            4   17[BANK0 ] unsigned long 
  3959 ;;  exp1            1   22[BANK0 ] unsigned char 
  3960 ;;  cntr            1   21[BANK0 ] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  4    8[BANK0 ] unsigned long 
  3963 ;; Registers used:
  3964 ;;		wreg, status,2, status,0
  3965 ;; Tracked objects:
  3966 ;;		On entry : 60/0
  3967 ;;		On exit  : 60/0
  3968 ;;		Unchanged: FFF9F/0
  3969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3970 ;;      Params:         0       6       0       0       0
  3971 ;;      Locals:         0       6       0       0       0
  3972 ;;      Temps:          0       3       0       0       0
  3973 ;;      Totals:         0      15       0       0       0
  3974 ;;Total ram usage:       15 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    3
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_printf
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983  076D                     __tdiv_to_l_:	
  3984                           
  3985                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3986  076D  0828               	movf	__tdiv_to_l_@f1,w
  3987  076E  00AE               	movwf	??__tdiv_to_l_
  3988  076F  0829               	movf	__tdiv_to_l_@f1+1,w
  3989  0770  00AF               	movwf	??__tdiv_to_l_+1
  3990  0771  082A               	movf	__tdiv_to_l_@f1+2,w
  3991  0772  00B0               	movwf	??__tdiv_to_l_+2
  3992  0773  1003               	clrc
  3993  0774  0D2F               	rlf	??__tdiv_to_l_+1,w
  3994  0775  0D30               	rlf	??__tdiv_to_l_+2,w
  3995  0776  00B6               	movwf	__tdiv_to_l_@exp1
  3996  0777  08B6               	movf	__tdiv_to_l_@exp1,f
  3997  0778  1D03               	skipz
  3998  0779  2F7F               	goto	l6371
  3999  077A                     l6369:	
  4000  077A  01A8               	clrf	?__tdiv_to_l_
  4001  077B  01A9               	clrf	?__tdiv_to_l_+1
  4002  077C  01AA               	clrf	?__tdiv_to_l_+2
  4003  077D  01AB               	clrf	?__tdiv_to_l_+3
  4004  077E  0008               	return
  4005  077F                     l6371:	
  4006  077F  082B               	movf	__tdiv_to_l_@f2,w
  4007  0780  00AE               	movwf	??__tdiv_to_l_
  4008  0781  082C               	movf	__tdiv_to_l_@f2+1,w
  4009  0782  00AF               	movwf	??__tdiv_to_l_+1
  4010  0783  082D               	movf	__tdiv_to_l_@f2+2,w
  4011  0784  00B0               	movwf	??__tdiv_to_l_+2
  4012  0785  1003               	clrc
  4013  0786  0D2F               	rlf	??__tdiv_to_l_+1,w
  4014  0787  0D30               	rlf	??__tdiv_to_l_+2,w
  4015  0788  00B5               	movwf	__tdiv_to_l_@cntr
  4016  0789  08B5               	movf	__tdiv_to_l_@cntr,f
  4017  078A  1903               	btfsc	3,2
  4018  078B  2F7A               	goto	l6369
  4019  078C  307F               	movlw	127
  4020  078D  17A9               	bsf	__tdiv_to_l_@f1+1,7
  4021  078E  01AA               	clrf	__tdiv_to_l_@f1+2
  4022  078F  17AC               	bsf	__tdiv_to_l_@f2+1,7
  4023  0790  01AD               	clrf	__tdiv_to_l_@f2+2
  4024  0791  01B1               	clrf	__tdiv_to_l_@quot
  4025  0792  01B2               	clrf	__tdiv_to_l_@quot+1
  4026  0793  01B3               	clrf	__tdiv_to_l_@quot+2
  4027  0794  01B4               	clrf	__tdiv_to_l_@quot+3
  4028  0795  02B6               	subwf	__tdiv_to_l_@exp1,f
  4029  0796  3098               	movlw	152
  4030  0797  0735               	addwf	__tdiv_to_l_@cntr,w
  4031  0798  00AE               	movwf	??__tdiv_to_l_
  4032  0799  02B6               	subwf	__tdiv_to_l_@exp1,f
  4033  079A  3018               	movlw	24
  4034  079B  00B5               	movwf	__tdiv_to_l_@cntr
  4035  079C                     l6385:	
  4036  079C  1003               	clrc
  4037  079D  0DB1               	rlf	__tdiv_to_l_@quot,f
  4038  079E  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  4039  079F  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  4040  07A0  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  4041  07A1  082D               	movf	__tdiv_to_l_@f2+2,w
  4042  07A2  022A               	subwf	__tdiv_to_l_@f1+2,w
  4043  07A3  1D03               	skipz
  4044  07A4  2FAB               	goto	u2595
  4045  07A5  082C               	movf	__tdiv_to_l_@f2+1,w
  4046  07A6  0229               	subwf	__tdiv_to_l_@f1+1,w
  4047  07A7  1D03               	skipz
  4048  07A8  2FAB               	goto	u2595
  4049  07A9  082B               	movf	__tdiv_to_l_@f2,w
  4050  07AA  0228               	subwf	__tdiv_to_l_@f1,w
  4051  07AB                     u2595:	
  4052  07AB  1C03               	skipc
  4053  07AC  2FB9               	goto	L19
  4054  07AD  082B               	movf	__tdiv_to_l_@f2,w
  4055  07AE  02A8               	subwf	__tdiv_to_l_@f1,f
  4056  07AF  082C               	movf	__tdiv_to_l_@f2+1,w
  4057  07B0  1C03               	skipc
  4058  07B1  0F2C               	incfsz	__tdiv_to_l_@f2+1,w
  4059  07B2  02A9               	subwf	__tdiv_to_l_@f1+1,f
  4060  07B3  082D               	movf	__tdiv_to_l_@f2+2,w
  4061  07B4  1C03               	skipc
  4062  07B5  0A2D               	incf	__tdiv_to_l_@f2+2,w
  4063  07B6  02AA               	subwf	__tdiv_to_l_@f1+2,f
  4064  07B7  1431               	bsf	__tdiv_to_l_@quot,0
  4065  07B8  1003               	clrc
  4066  07B9                     L19:	
  4067  07B9  0DA8               	rlf	__tdiv_to_l_@f1,f
  4068  07BA  0DA9               	rlf	__tdiv_to_l_@f1+1,f
  4069  07BB  0DAA               	rlf	__tdiv_to_l_@f1+2,f
  4070  07BC  0BB5               	decfsz	__tdiv_to_l_@cntr,f
  4071  07BD  2F9C               	goto	l6385
  4072  07BE  1FB6               	btfss	__tdiv_to_l_@exp1,7
  4073  07BF  2FCD               	goto	l6405
  4074  07C0  0836               	movf	__tdiv_to_l_@exp1,w
  4075  07C1  3A80               	xorlw	128
  4076  07C2  3E97               	addlw	151
  4077  07C3  1C03               	btfss	3,0
  4078  07C4  2F7A               	goto	l6369
  4079  07C5                     l6401:	
  4080  07C5  1003               	clrc
  4081  07C6  0CB4               	rrf	__tdiv_to_l_@quot+3,f
  4082  07C7  0CB3               	rrf	__tdiv_to_l_@quot+2,f
  4083  07C8  0CB2               	rrf	__tdiv_to_l_@quot+1,f
  4084  07C9  0CB1               	rrf	__tdiv_to_l_@quot,f
  4085  07CA  0FB6               	incfsz	__tdiv_to_l_@exp1,f
  4086  07CB  2FC5               	goto	l6401
  4087  07CC  2FDB               	goto	l6411
  4088  07CD                     l6405:	
  4089  07CD  3018               	movlw	24
  4090  07CE  0236               	subwf	__tdiv_to_l_@exp1,w
  4091  07CF  1803               	btfsc	3,0
  4092  07D0  2F7A               	goto	l6369
  4093  07D1                     l3556:	
  4094  07D1  08B6               	movf	__tdiv_to_l_@exp1,f
  4095  07D2  1903               	btfsc	3,2
  4096  07D3  2FDB               	goto	l6411
  4097  07D4  1003               	clrc
  4098  07D5  0DB1               	rlf	__tdiv_to_l_@quot,f
  4099  07D6  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  4100  07D7  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  4101  07D8  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  4102  07D9  03B6               	decf	__tdiv_to_l_@exp1,f
  4103  07DA  2FD1               	goto	l3556
  4104  07DB                     l6411:	
  4105  07DB  0834               	movf	__tdiv_to_l_@quot+3,w
  4106  07DC  00AB               	movwf	?__tdiv_to_l_+3
  4107  07DD  0833               	movf	__tdiv_to_l_@quot+2,w
  4108  07DE  00AA               	movwf	?__tdiv_to_l_+2
  4109  07DF  0832               	movf	__tdiv_to_l_@quot+1,w
  4110  07E0  00A9               	movwf	?__tdiv_to_l_+1
  4111  07E1  0831               	movf	__tdiv_to_l_@quot,w
  4112  07E2  00A8               	movwf	?__tdiv_to_l_
  4113  07E3  0008               	return
  4114  07E4                     __end_of__tdiv_to_l_:	
  4115                           
  4116                           	psect	text759
  4117  0941                     __ptext759:	
  4118 ;; =============== function _scale ends ============
  4119                           
  4120                           
  4121 ;; *************** function _fround *****************
  4122 ;; Defined at:
  4123 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  prec            1    wreg     unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  prec            1    6[BANK1 ] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  3   62[BANK0 ] unsigned char 
  4130 ;; Registers used:
  4131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 60/20
  4134 ;;		On exit  : 60/0
  4135 ;;		Unchanged: FFF9F/0
  4136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4137 ;;      Params:         0       3       0       0       0
  4138 ;;      Locals:         0       0       7       0       0
  4139 ;;      Temps:          0       0       0       0       0
  4140 ;;      Totals:         0       3       7       0       0
  4141 ;;Total ram usage:       10 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    5
  4144 ;; This function calls:
  4145 ;;		___lbmod
  4146 ;;		___bmul
  4147 ;;		___lbdiv
  4148 ;;		___ftmul
  4149 ;; This function is called by:
  4150 ;;		_printf
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153  0941                     _fround:	
  4154                           
  4155                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4156                           ;fround@prec stored from wreg
  4157  0941  00A6               	movwf	fround@prec^(0+128)
  4158  0942  306E               	movlw	110
  4159  0943  0226               	subwf	fround@prec^(0+128),w
  4160  0944  1C03               	skipc
  4161  0945  29D9               	goto	l7931
  4162  0946  3003               	movlw	3
  4163  0947  1283               	bcf	3,5	;RP0=0, select bank0
  4164  0948  00B1               	movwf	?___bmul
  4165  0949  300A               	movlw	10
  4166  094A  00AD               	movwf	?___lbdiv
  4167  094B  3064               	movlw	100
  4168  094C  00A8               	movwf	?___lbmod
  4169  094D  1683               	bsf	3,5	;RP0=1, select bank1
  4170  094E  0826               	movf	fround@prec^(0+128),w
  4171  094F  2272  120A  158A   	fcall	___lbmod
  4172  0952  2256               	fcall	___lbdiv
  4173  0953  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4174  0958  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4175  0959  0084               	movwf	4
  4176  095A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4177  095F  00C3               	movwf	?___ftmul
  4178  0960  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4179  0965  00C4               	movwf	?___ftmul+1
  4180  0966  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4181  096B  00C5               	movwf	?___ftmul+2
  4182  096C  3003               	movlw	3
  4183  096D  00B1               	movwf	?___bmul
  4184  096E  3064               	movlw	100
  4185  096F  00AD               	movwf	?___lbdiv
  4186  0970  1683               	bsf	3,5	;RP0=1, select bank1
  4187  0971  0826               	movf	fround@prec^(0+128),w
  4188  0972  2256               	fcall	___lbdiv
  4189  0973  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4190  0978  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4191  0979  0084               	movwf	4
  4192  097A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4193  097F  00C6               	movwf	?___ftmul+3
  4194  0980  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4195  0985  00C7               	movwf	?___ftmul+4
  4196  0986  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4197  098B  00C8               	movwf	?___ftmul+5
  4198  098C  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4199  0991  229D  120A  158A   	fcall	PL16	;call to abstracted procedure
  4200  0994  3003               	movlw	3
  4201  0995  22B0  120A  158A   	fcall	PL28	;call to abstracted procedure
  4202  0998  2272               	fcall	___lbmod
  4203  0999  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4204  099E  3E01               	addlw	low (__npowers_-__stringbase)
  4205  099F  0084               	movwf	4
  4206  09A0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4207  09A5  00C3               	movwf	?___ftmul
  4208  09A6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4209  09AB  00C4               	movwf	?___ftmul+1
  4210  09AC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4211  09B1  228F               	fcall	PL10	;call to abstracted procedure
  4212  09B2  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4213  09B7  0843               	movf	?___ftmul,w
  4214  09B8  1683               	bsf	3,5	;RP0=1, select bank1
  4215  09B9  00A0               	movwf	_fround$4113^(0+128)
  4216  09BA  1283               	bcf	3,5	;RP0=0, select bank0
  4217  09BB  0844               	movf	?___ftmul+1,w
  4218  09BC  1683               	bsf	3,5	;RP0=1, select bank1
  4219  09BD  00A1               	movwf	(_fround$4113+1)^(0+128)
  4220  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  4221  09BF  0845               	movf	?___ftmul+2,w
  4222  09C0  1683               	bsf	3,5	;RP0=1, select bank1
  4223  09C1  00A2               	movwf	(_fround$4113+2)^(0+128)
  4224  09C2  1283               	bcf	3,5	;RP0=0, select bank0
  4225  09C3  303F               	movlw	63
  4226  09C4  01C3               	clrf	?___ftmul
  4227  09C5  01C4               	clrf	?___ftmul+1
  4228  09C6  00C5               	movwf	?___ftmul+2
  4229  09C7  1683               	bsf	3,5	;RP0=1, select bank1
  4230  09C8  0820               	movf	_fround$4113^(0+128),w
  4231  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  4232  09CA  00C6               	movwf	?___ftmul+3
  4233  09CB  1683               	bsf	3,5	;RP0=1, select bank1
  4234  09CC  0821               	movf	(_fround$4113+1)^(0+128),w
  4235  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  4236  09CE  00C7               	movwf	?___ftmul+4
  4237  09CF  1683               	bsf	3,5	;RP0=1, select bank1
  4238  09D0  0822               	movf	(_fround$4113+2)^(0+128),w
  4239  09D1  1283               	bcf	3,5	;RP0=0, select bank0
  4240  09D2  00C8               	movwf	?___ftmul+5
  4241  09D3  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4242  09D8  2AA9               	ljmp	PL19	;call to abstracted procedure
  4243  09D9                     l7931:	
  4244  09D9  300B               	movlw	11
  4245  09DA  0226               	subwf	fround@prec^(0+128),w
  4246  09DB  1C03               	skipc
  4247  09DC  2A2E               	goto	l7939
  4248  09DD  3003               	movlw	3
  4249  09DE  22B0  120A  158A   	fcall	PL28	;call to abstracted procedure
  4250  09E1  2272               	fcall	___lbmod
  4251  09E2  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4252  09E7  3E01               	addlw	low (__npowers_-__stringbase)
  4253  09E8  0084               	movwf	4
  4254  09E9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4255  09EE  00C3               	movwf	?___ftmul
  4256  09EF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4257  09F4  00C4               	movwf	?___ftmul+1
  4258  09F5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4259  09FA  00C5               	movwf	?___ftmul+2
  4260  09FB  3003               	movlw	3
  4261  09FC  00B1               	movwf	?___bmul
  4262  09FD  300A               	movlw	10
  4263  09FE  00AD               	movwf	?___lbdiv
  4264  09FF  1683               	bsf	3,5	;RP0=1, select bank1
  4265  0A00  0826               	movf	fround@prec^(0+128),w
  4266  0A01  2256               	fcall	___lbdiv
  4267  0A02  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4268  0A07  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4269  0A08  0084               	movwf	4
  4270  0A09  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4271  0A0E  00C6               	movwf	?___ftmul+3
  4272  0A0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4273  0A14  00C7               	movwf	?___ftmul+4
  4274  0A15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4275  0A1A  00C8               	movwf	?___ftmul+5
  4276  0A1B  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4277  0A20  229D  120A  158A   	fcall	PL16	;call to abstracted procedure
  4278  0A23  1283               	bcf	3,5	;RP0=0, select bank0
  4279  0A24  303F               	movlw	63
  4280  0A25  01C3               	clrf	?___ftmul
  4281  0A26  01C4               	clrf	?___ftmul+1
  4282  0A27  228F               	fcall	PL10	;call to abstracted procedure
  4283  0A28  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4284  0A2D  2AA9               	ljmp	PL19	;call to abstracted procedure
  4285  0A2E                     l7939:	
  4286  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  4287  0A2F  303F               	movlw	63
  4288  0A30  01C3               	clrf	?___ftmul
  4289  0A31  01C4               	clrf	?___ftmul+1
  4290  0A32  00C5               	movwf	?___ftmul+2
  4291  0A33  3003               	movlw	3
  4292  0A34  00B1               	movwf	?___bmul
  4293  0A35  1683               	bsf	3,5	;RP0=1, select bank1
  4294  0A36  0826               	movf	fround@prec^(0+128),w
  4295  0A37  120A  158A  275A   	fcall	___bmul
      +       120A  158A         
  4296  0A3C  3E01               	addlw	low (__npowers_-__stringbase)
  4297  0A3D  0084               	movwf	4
  4298  0A3E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4299  0A43  00C6               	movwf	?___ftmul+3
  4300  0A44  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4301  0A49  00C7               	movwf	?___ftmul+4
  4302  0A4A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4303  0A4F  00C8               	movwf	?___ftmul+5
  4304  0A50  120A  158A  26EB   	fcall	___ftmul
      +       120A  158A         
  4305  0A55  2AA9               	ljmp	PL19	;call to abstracted procedure
  4306  0A56                     __end_of_fround:	
  4307  0A56                     __ptext777:	
  4308 ;; =============== function ___lbmod ends ============
  4309                           
  4310                           
  4311 ;; *************** function ___lbdiv *****************
  4312 ;; Defined at:
  4313 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  dividend        1    wreg     unsigned char 
  4316 ;;  divisor         1   13[BANK0 ] unsigned char 
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;  dividend        1   14[BANK0 ] unsigned char 
  4319 ;;  quotient        1   16[BANK0 ] unsigned char 
  4320 ;;  counter         1   15[BANK0 ] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg, status,2, status,0
  4325 ;; Tracked objects:
  4326 ;;		On entry : 40/0
  4327 ;;		On exit  : 60/0
  4328 ;;		Unchanged: FFF9F/0
  4329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4330 ;;      Params:         0       1       0       0       0
  4331 ;;      Locals:         0       3       0       0       0
  4332 ;;      Temps:          0       0       0       0       0
  4333 ;;      Totals:         0       4       0       0       0
  4334 ;;Total ram usage:        4 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    3
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_fround
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343  0A56                     ___lbdiv:	
  4344                           
  4345                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4346                           ;___lbdiv@dividend stored from wreg
  4347  0A56  1283               	bcf	3,5	;RP0=0, select bank0
  4348  0A57  00AE               	movwf	___lbdiv@dividend
  4349  0A58  01B0               	clrf	___lbdiv@quotient
  4350  0A59  082D               	movf	___lbdiv@divisor,w
  4351  0A5A  1903               	btfsc	3,2
  4352  0A5B  2A70               	goto	l7711
  4353  0A5C  01AF               	clrf	___lbdiv@counter
  4354  0A5D                     l7697:	
  4355  0A5D  0AAF               	incf	___lbdiv@counter,f
  4356  0A5E  1BAD               	btfsc	___lbdiv@divisor,7
  4357  0A5F  2A63               	goto	l3331
  4358  0A60  1003               	clrc
  4359  0A61  0DAD               	rlf	___lbdiv@divisor,f
  4360  0A62  2A5D               	goto	l7697
  4361  0A63                     l3331:	
  4362  0A63  1003               	clrc
  4363  0A64  0DB0               	rlf	___lbdiv@quotient,f
  4364  0A65  082D               	movf	___lbdiv@divisor,w
  4365  0A66  022E               	subwf	___lbdiv@dividend,w
  4366  0A67  1C03               	skipc
  4367  0A68  2A6D               	goto	L18
  4368  0A69  082D               	movf	___lbdiv@divisor,w
  4369  0A6A  02AE               	subwf	___lbdiv@dividend,f
  4370  0A6B  1430               	bsf	___lbdiv@quotient,0
  4371  0A6C  1003               	clrc
  4372  0A6D                     L18:	
  4373  0A6D  0CAD               	rrf	___lbdiv@divisor,f
  4374  0A6E  0BAF               	decfsz	___lbdiv@counter,f
  4375  0A6F  2A63               	goto	l3331
  4376  0A70                     l7711:	
  4377  0A70  0830               	movf	___lbdiv@quotient,w
  4378  0A71  0008               	return
  4379  0A72                     __end_of___lbdiv:	
  4380  0A72                     __ptext776:	
  4381 ;; =============== function ___ftpack ends ============
  4382                           
  4383                           
  4384 ;; *************** function ___lbmod *****************
  4385 ;; Defined at:
  4386 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  dividend        1    wreg     unsigned char 
  4389 ;;  divisor         1    8[BANK0 ] unsigned char 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  dividend        1   10[BANK0 ] unsigned char 
  4392 ;;  rem             1   12[BANK0 ] unsigned char 
  4393 ;;  counter         1   11[BANK0 ] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      unsigned char 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 60/20
  4400 ;;		On exit  : 60/0
  4401 ;;		Unchanged: FFF9F/0
  4402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4403 ;;      Params:         0       1       0       0       0
  4404 ;;      Locals:         0       3       0       0       0
  4405 ;;      Temps:          0       1       0       0       0
  4406 ;;      Totals:         0       5       0       0       0
  4407 ;;Total ram usage:        5 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    3
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_fround
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416  0A72                     ___lbmod:	
  4417                           
  4418                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4419                           ;___lbmod@dividend stored from wreg
  4420  0A72  1283               	bcf	3,5	;RP0=0, select bank0
  4421  0A73  00AA               	movwf	___lbmod@dividend
  4422  0A74  3008               	movlw	8
  4423  0A75  00AB               	movwf	___lbmod@counter
  4424  0A76  01AC               	clrf	___lbmod@rem
  4425  0A77                     l7719:	
  4426  0A77  082A               	movf	___lbmod@dividend,w
  4427  0A78  00A9               	movwf	??___lbmod
  4428  0A79  3007               	movlw	7
  4429  0A7A  1003               	clrc
  4430  0A7B                     L17:	
  4431  0A7B  0CA9               	rrf	??___lbmod,f
  4432  0A7C  3EFF               	addlw	-1
  4433  0A7D  1003               	clrc
  4434  0A7E  1D03               	skipz
  4435  0A7F  2A7B               	goto	L17
  4436  0A80  0D2C               	rlf	___lbmod@rem,w
  4437  0A81  0429               	iorwf	??___lbmod,w
  4438  0A82  00AC               	movwf	___lbmod@rem
  4439  0A83  1003               	clrc
  4440  0A84  0DAA               	rlf	___lbmod@dividend,f
  4441  0A85  0828               	movf	___lbmod@divisor,w
  4442  0A86  022C               	subwf	___lbmod@rem,w
  4443  0A87  1C03               	skipc
  4444  0A88  2A8B               	goto	l7727
  4445  0A89  0828               	movf	___lbmod@divisor,w
  4446  0A8A  02AC               	subwf	___lbmod@rem,f
  4447  0A8B                     l7727:	
  4448  0A8B  0BAB               	decfsz	___lbmod@counter,f
  4449  0A8C  2A77               	goto	l7719
  4450  0A8D  082C               	movf	___lbmod@rem,w
  4451  0A8E  0008               	return
  4452  0A8F                     __end_of___lbmod:	
  4453  0A8F                     PL10:	
  4454  0A8F  00C5               	movwf	?___ftmul+2
  4455  0A90  1683               	bsf	3,5	;RP0=1, select bank1
  4456  0A91  0823               	movf	_fround$4112^(0+128),w
  4457  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  4458  0A93  00C6               	movwf	?___ftmul+3
  4459  0A94  1683               	bsf	3,5	;RP0=1, select bank1
  4460  0A95  0824               	movf	(_fround$4112+1)^(0+128),w
  4461  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  4462  0A97  00C7               	movwf	?___ftmul+4
  4463  0A98  1683               	bsf	3,5	;RP0=1, select bank1
  4464  0A99  0825               	movf	(_fround$4112+2)^(0+128),w
  4465  0A9A  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0A9B  00C8               	movwf	?___ftmul+5
  4467  0A9C  0008               	return
  4468  0A9D                     PL16:	
  4469  0A9D  0843               	movf	?___ftmul,w
  4470  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  4471  0A9F  00A3               	movwf	_fround$4112^(0+128)
  4472  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  4473  0AA1  0844               	movf	?___ftmul+1,w
  4474  0AA2  1683               	bsf	3,5	;RP0=1, select bank1
  4475  0AA3  00A4               	movwf	(_fround$4112+1)^(0+128)
  4476  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4477  0AA5  0845               	movf	?___ftmul+2,w
  4478  0AA6  1683               	bsf	3,5	;RP0=1, select bank1
  4479  0AA7  00A5               	movwf	(_fround$4112+2)^(0+128)
  4480  0AA8  0008               	return
  4481  0AA9                     PL19:	
  4482  0AA9  0843               	movf	?___ftmul,w
  4483  0AAA  00DE               	movwf	?_fround
  4484  0AAB  0844               	movf	?___ftmul+1,w
  4485  0AAC  00DF               	movwf	?_fround+1
  4486  0AAD  0845               	movf	?___ftmul+2,w
  4487  0AAE  00E0               	movwf	?_fround+2
  4488  0AAF  0008               	return
  4489  0AB0                     PL28:	
  4490  0AB0  1283               	bcf	3,5	;RP0=0, select bank0
  4491  0AB1  00B1               	movwf	?___bmul
  4492  0AB2  300A               	movlw	10
  4493  0AB3  00A8               	movwf	?___lbmod
  4494  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
  4495  0AB5  0826               	movf	fround@prec^(0+128),w
  4496  0AB6  0008               	return
  4497                           
  4498                           	psect	text760
  4499  0AB7                     __ptext760:	
  4500 ;; =============== function _fround ends ============
  4501                           
  4502                           
  4503 ;; *************** function _lcd_gotoxy *****************
  4504 ;; Defined at:
  4505 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  col             1    wreg     unsigned char 
  4508 ;;  row             1   13[BANK0 ] unsigned char 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  col             1   14[BANK0 ] unsigned char 
  4511 ;;  address         1   15[BANK0 ] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;		None               void
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, pclath, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 60/0
  4518 ;;		On exit  : 60/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4521 ;;      Params:         0       1       0       0       0
  4522 ;;      Locals:         0       2       0       0       0
  4523 ;;      Temps:          0       0       0       0       0
  4524 ;;      Totals:         0       3       0       0       0
  4525 ;;Total ram usage:        3 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    4
  4528 ;; This function calls:
  4529 ;;		_lcd_put_byte
  4530 ;;		_lcd_busy
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;;		_lcd_putc
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536  0AB7                     _lcd_gotoxy:	
  4537                           
  4538                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4539                           ;lcd_gotoxy@col stored from wreg
  4540  0AB7  00AE               	movwf	lcd_gotoxy@col
  4541                           
  4542                           ;lcd(16).c: 163: unsigned char address;
  4543                           ;lcd(16).c: 165: if(row!=0)
  4544  0AB8  082D               	movf	lcd_gotoxy@row,w
  4545  0AB9  1903               	btfsc	3,2
  4546  0ABA  2ABE               	goto	l7113
  4547                           
  4548                           ;lcd(16).c: 166: address=0x40;
  4549  0ABB  3040               	movlw	64
  4550  0ABC  00AF               	movwf	lcd_gotoxy@address
  4551  0ABD  2ABF               	goto	l7115
  4552  0ABE                     l7113:	
  4553                           
  4554                           ;lcd(16).c: 167: else
  4555                           ;lcd(16).c: 168: address=0;
  4556  0ABE  01AF               	clrf	lcd_gotoxy@address
  4557  0ABF                     l7115:	
  4558                           
  4559                           ;lcd(16).c: 170: address += col;
  4560  0ABF  082E               	movf	lcd_gotoxy@col,w
  4561  0AC0  07AF               	addwf	lcd_gotoxy@address,f
  4562                           
  4563                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4564  0AC1  082F               	movf	lcd_gotoxy@address,w
  4565  0AC2  3880               	iorlw	128
  4566  0AC3  00A8               	movwf	?_lcd_put_byte
  4567  0AC4  3000               	movlw	0
  4568  0AC5  23BF  120A  158A   	fcall	_lcd_put_byte
  4569  0AC8                     l7119:	
  4570                           ;lcd(16).c: 172: while(lcd_busy());
  4571                           
  4572  0AC8  246A  120A  158A   	fcall	_lcd_busy
  4573  0ACB  3800               	iorlw	0
  4574  0ACC  1903               	btfsc	3,2
  4575  0ACD  0008               	return
  4576  0ACE  2AC8               	goto	l7119
  4577  0ACF                     __end_of_lcd_gotoxy:	
  4578  0ACF                     __ptext756:	
  4579 ;; =============== function _putch ends ============
  4580                           
  4581                           
  4582 ;; *************** function _lcd_putc *****************
  4583 ;; Defined at:
  4584 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  c               1    wreg     unsigned char 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  c               1   16[BANK0 ] unsigned char 
  4589 ;; Return value:  Size  Location     Type
  4590 ;;		None               void
  4591 ;; Registers used:
  4592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4593 ;; Tracked objects:
  4594 ;;		On entry : 60/0
  4595 ;;		On exit  : 60/0
  4596 ;;		Unchanged: 0/0
  4597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4598 ;;      Params:         0       0       0       0       0
  4599 ;;      Locals:         0       1       0       0       0
  4600 ;;      Temps:          0       0       0       0       0
  4601 ;;      Totals:         0       1       0       0       0
  4602 ;;Total ram usage:        1 bytes
  4603 ;; Hardware stack levels used:    1
  4604 ;; Hardware stack levels required when called:    5
  4605 ;; This function calls:
  4606 ;;		_lcd_put_byte
  4607 ;;		_lcd_busy
  4608 ;;		_lcd_gotoxy
  4609 ;;		_isprint
  4610 ;; This function is called by:
  4611 ;;		_putch
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614  0ACF                     _lcd_putc:	
  4615                           
  4616                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4617                           ;lcd_putc@c stored from wreg
  4618  0ACF  00B0               	movwf	lcd_putc@c
  4619                           
  4620                           ;lcd(16).c: 144: switch(c){
  4621  0AD0  2AF5               	goto	l7205
  4622  0AD1                     l7191:	
  4623  0AD1  3000               	movlw	0
  4624                           
  4625                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4626  0AD2  01A8               	clrf	?_lcd_put_byte
  4627  0AD3  0AA8               	incf	?_lcd_put_byte,f
  4628  0AD4  23BF  120A  158A   	fcall	_lcd_put_byte
  4629  0AD7                     l7193:	
  4630                           ;lcd(16).c: 147: while(lcd_busy());
  4631                           
  4632  0AD7  246A  120A  158A   	fcall	_lcd_busy
  4633  0ADA  3800               	iorlw	0
  4634  0ADB  1903               	btfsc	3,2
  4635  0ADC  0008               	return
  4636  0ADD  2AD7               	goto	l7193
  4637  0ADE                     l7195:	
  4638  0ADE  3000               	movlw	0
  4639                           
  4640                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4641  0ADF  01AD               	clrf	?_lcd_gotoxy
  4642  0AE0  0AAD               	incf	?_lcd_gotoxy,f
  4643  0AE1  2AB7               	ljmp	_lcd_gotoxy
  4644  0AE2                     l7197:	
  4645                           ;lcd(16).c: 151: break;
  4646                           
  4647                           
  4648                           ;lcd(16).c: 153: if(isprint(c)){
  4649  0AE2  0830               	movf	lcd_putc@c,w
  4650  0AE3  2495  120A  158A   	fcall	_isprint
  4651  0AE6  1C03               	btfss	3,0
  4652  0AE7  0008               	return
  4653                           
  4654                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4655  0AE8  0830               	movf	lcd_putc@c,w
  4656  0AE9  00A8               	movwf	?_lcd_put_byte
  4657  0AEA  3001               	movlw	1
  4658  0AEB  23BF  120A  158A   	fcall	_lcd_put_byte
  4659  0AEE                     l7201:	
  4660                           ;lcd(16).c: 155: while(lcd_busy());
  4661                           
  4662  0AEE  246A  120A  158A   	fcall	_lcd_busy
  4663  0AF1  3800               	iorlw	0
  4664  0AF2  1903               	btfsc	3,2
  4665  0AF3  0008               	return
  4666  0AF4  2AEE               	goto	l7201
  4667  0AF5                     l7205:	
  4668  0AF5  0830               	movf	lcd_putc@c,w
  4669                           
  4670                           ; Switch size 1, requested type "space"
  4671                           ; Number of cases is 2, Range of values is 10 to 12
  4672                           ; switch strategies available:
  4673                           ; Name         Instructions Cycles
  4674                           ; simple_byte            7     4 (average)
  4675                           ; direct_byte           20    11 (fixed)
  4676                           ; jumptable            263     9 (fixed)
  4677                           ;	Chosen strategy is simple_byte
  4678  0AF6  3A0A               	xorlw	10	; case 10
  4679  0AF7  1903               	skipnz
  4680  0AF8  2ADE               	goto	l7195
  4681  0AF9  3A06               	xorlw	6	; case 12
  4682  0AFA  1903               	skipnz
  4683  0AFB  2AD1               	goto	l7191
  4684  0AFC  2AE2               	goto	l7197
  4685  0AFD  0008               	return
  4686  0AFE                     __end_of_lcd_putc:	
  4687  0AFE                     __ptext761:	
  4688 ;; =============== function _lcd_gotoxy ends ============
  4689                           
  4690                           
  4691 ;; *************** function _lcd_init *****************
  4692 ;; Defined at:
  4693 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  i               1    0        unsigned char 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;		None               void
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0, pclath, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 17F/60
  4704 ;;		On exit  : 60/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4707 ;;      Params:         0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0
  4709 ;;      Temps:          0       3       0       0       0
  4710 ;;      Totals:         0       3       0       0       0
  4711 ;;Total ram usage:        3 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    4
  4714 ;; This function calls:
  4715 ;;		_lcd_put_byte
  4716 ;;		_lcd_busy
  4717 ;; This function is called by:
  4718 ;;		_main
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721  0AFE                     _lcd_init:	
  4722                           
  4723                           ;lcd(16).c: 6: unsigned char i;
  4724                           ;lcd(16).c: 7: TRISD3 = 0;
  4725                           
  4726                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4727  0AFE  1303               	bcf	3,6	;RP1=0, select bank1
  4728  0AFF  1188               	bcf	8,3
  4729                           
  4730                           ;lcd(16).c: 8: TRISD1 = 0;
  4731  0B00  1088               	bcf	8,1
  4732                           
  4733                           ;lcd(16).c: 9: TRISD2 = 0;
  4734  0B01  1108               	bcf	8,2
  4735                           
  4736                           ;lcd(16).c: 10: TRISD4 = 0;
  4737  0B02  1208               	bcf	8,4
  4738                           
  4739                           ;lcd(16).c: 11: TRISD5 = 0;
  4740  0B03  1288               	bcf	8,5
  4741                           
  4742                           ;lcd(16).c: 12: TRISD6 = 0;
  4743  0B04  1308               	bcf	8,6
  4744                           
  4745                           ;lcd(16).c: 13: TRISD7 = 0;
  4746  0B05  1388               	bcf	8,7
  4747                           
  4748                           ;lcd(16).c: 14: RD3 = 0;
  4749  0B06  1283               	bcf	3,5	;RP0=0, select bank0
  4750  0B07  3003               	movlw	3
  4751  0B08  1188               	bcf	8,3
  4752                           
  4753                           ;lcd(16).c: 15: RD1 = 0;
  4754  0B09  1088               	bcf	8,1
  4755                           
  4756                           ;lcd(16).c: 16: RD2 = 0;
  4757  0B0A  1108               	bcf	8,2
  4758                           
  4759                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4760  0B0B  00AF               	movwf	??_lcd_init+2
  4761  0B0C  308A               	movlw	138
  4762  0B0D  00AE               	movwf	??_lcd_init+1
  4763  0B0E  3056               	movlw	86
  4764  0B0F  00AD               	movwf	??_lcd_init
  4765  0B10                     u5817:	
  4766  0B10  0BAD               	decfsz	??_lcd_init,f
  4767  0B11  2B10               	goto	u5817
  4768  0B12  0BAE               	decfsz	??_lcd_init+1,f
  4769  0B13  2B10               	goto	u5817
  4770  0B14  0BAF               	decfsz	??_lcd_init+2,f
  4771  0B15  2B10               	goto	u5817
  4772  0B16  2B17               	nop2
  4773                           
  4774                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4775  0B17  24A3  120A  158A   	fcall	PL29	;call to abstracted procedure
  4776  0B1A  23BF  120A  158A   	fcall	_lcd_put_byte
  4777                           
  4778                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4779  0B1D  3002               	movlw	2
  4780  0B1E  00AF               	movwf	??_lcd_init+2
  4781  0B1F  3045               	movlw	69
  4782  0B20  00AE               	movwf	??_lcd_init+1
  4783  0B21  30A9               	movlw	169
  4784  0B22  00AD               	movwf	??_lcd_init
  4785  0B23                     u5827:	
  4786  0B23  0BAD               	decfsz	??_lcd_init,f
  4787  0B24  2B23               	goto	u5827
  4788  0B25  0BAE               	decfsz	??_lcd_init+1,f
  4789  0B26  2B23               	goto	u5827
  4790  0B27  0BAF               	decfsz	??_lcd_init+2,f
  4791  0B28  2B23               	goto	u5827
  4792  0B29  2B2A               	nop2
  4793                           
  4794                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4795  0B2A  24A3  120A  158A   	fcall	PL29	;call to abstracted procedure
  4796  0B2D  23BF  120A  158A   	fcall	_lcd_put_byte
  4797                           
  4798                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4799  0B30  3002               	movlw	2
  4800  0B31  00AF               	movwf	??_lcd_init+2
  4801  0B32  3045               	movlw	69
  4802  0B33  00AE               	movwf	??_lcd_init+1
  4803  0B34  30A9               	movlw	169
  4804  0B35  00AD               	movwf	??_lcd_init
  4805  0B36                     u5837:	
  4806  0B36  0BAD               	decfsz	??_lcd_init,f
  4807  0B37  2B36               	goto	u5837
  4808  0B38  0BAE               	decfsz	??_lcd_init+1,f
  4809  0B39  2B36               	goto	u5837
  4810  0B3A  0BAF               	decfsz	??_lcd_init+2,f
  4811  0B3B  2B36               	goto	u5837
  4812  0B3C  2B3D               	nop2
  4813                           
  4814                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4815  0B3D  3032               	movlw	50
  4816  0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  4817  0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  4818  0B40  00A8               	movwf	?_lcd_put_byte
  4819  0B41  3000               	movlw	0
  4820  0B42  23BF  120A  158A   	fcall	_lcd_put_byte
  4821                           
  4822                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4823  0B45  3003               	movlw	3
  4824  0B46  00AF               	movwf	??_lcd_init+2
  4825  0B47  308A               	movlw	138
  4826  0B48  00AE               	movwf	??_lcd_init+1
  4827  0B49  3056               	movlw	86
  4828  0B4A  00AD               	movwf	??_lcd_init
  4829  0B4B                     u5847:	
  4830  0B4B  0BAD               	decfsz	??_lcd_init,f
  4831  0B4C  2B4B               	goto	u5847
  4832  0B4D  0BAE               	decfsz	??_lcd_init+1,f
  4833  0B4E  2B4B               	goto	u5847
  4834  0B4F  0BAF               	decfsz	??_lcd_init+2,f
  4835  0B50  2B4B               	goto	u5847
  4836  0B51  2B52               	nop2
  4837                           
  4838                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4839  0B52  3003               	movlw	3
  4840  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4841  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4842  0B55  00AF               	movwf	??_lcd_init+2
  4843  0B56  308A               	movlw	138
  4844  0B57  00AE               	movwf	??_lcd_init+1
  4845  0B58  3056               	movlw	86
  4846  0B59  00AD               	movwf	??_lcd_init
  4847  0B5A                     u5857:	
  4848  0B5A  0BAD               	decfsz	??_lcd_init,f
  4849  0B5B  2B5A               	goto	u5857
  4850  0B5C  0BAE               	decfsz	??_lcd_init+1,f
  4851  0B5D  2B5A               	goto	u5857
  4852  0B5E  0BAF               	decfsz	??_lcd_init+2,f
  4853  0B5F  2B5A               	goto	u5857
  4854  0B60  2B61               	nop2
  4855                           
  4856                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  4857  0B61  3003               	movlw	3
  4858  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  4860  0B64  00AF               	movwf	??_lcd_init+2
  4861  0B65  308A               	movlw	138
  4862  0B66  00AE               	movwf	??_lcd_init+1
  4863  0B67  3056               	movlw	86
  4864  0B68  00AD               	movwf	??_lcd_init
  4865  0B69                     u5867:	
  4866  0B69  0BAD               	decfsz	??_lcd_init,f
  4867  0B6A  2B69               	goto	u5867
  4868  0B6B  0BAE               	decfsz	??_lcd_init+1,f
  4869  0B6C  2B69               	goto	u5867
  4870  0B6D  0BAF               	decfsz	??_lcd_init+2,f
  4871  0B6E  2B69               	goto	u5867
  4872  0B6F  2B70               	nop2
  4873  0B70                     l7083:	
  4874                           ;lcd(16).c: 30: while(lcd_busy());
  4875                           
  4876  0B70  246A  120A  158A   	fcall	_lcd_busy
  4877  0B73  3800               	iorlw	0
  4878  0B74  1D03               	skipz
  4879  0B75  2B70               	goto	l7083
  4880                           
  4881                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  4882  0B76  3028               	movlw	40
  4883  0B77  00A8               	movwf	?_lcd_put_byte
  4884  0B78  3000               	movlw	0
  4885  0B79  23BF  120A  158A   	fcall	_lcd_put_byte
  4886  0B7C                     l7087:	
  4887                           ;lcd(16).c: 32: while(lcd_busy());
  4888                           
  4889  0B7C  246A  120A  158A   	fcall	_lcd_busy
  4890  0B7F  3800               	iorlw	0
  4891  0B80  1D03               	skipz
  4892  0B81  2B7C               	goto	l7087
  4893                           
  4894                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  4895  0B82  3008               	movlw	8
  4896  0B83  00A8               	movwf	?_lcd_put_byte
  4897  0B84  3000               	movlw	0
  4898  0B85  23BF  120A  158A   	fcall	_lcd_put_byte
  4899  0B88                     l7091:	
  4900                           ;lcd(16).c: 35: while(lcd_busy());
  4901                           
  4902  0B88  246A  120A  158A   	fcall	_lcd_busy
  4903  0B8B  3800               	iorlw	0
  4904  0B8C  1D03               	skipz
  4905  0B8D  2B88               	goto	l7091
  4906                           
  4907                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  4908  0B8E  300C               	movlw	12
  4909  0B8F  00A8               	movwf	?_lcd_put_byte
  4910  0B90  3000               	movlw	0
  4911  0B91  23BF  120A  158A   	fcall	_lcd_put_byte
  4912  0B94                     l7095:	
  4913                           ;lcd(16).c: 37: while(lcd_busy());
  4914                           
  4915  0B94  246A  120A  158A   	fcall	_lcd_busy
  4916  0B97  3800               	iorlw	0
  4917  0B98  1D03               	skipz
  4918  0B99  2B94               	goto	l7095
  4919  0B9A  3000               	movlw	0
  4920                           
  4921                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  4922  0B9B  01A8               	clrf	?_lcd_put_byte
  4923  0B9C  0AA8               	incf	?_lcd_put_byte,f
  4924  0B9D  23BF  120A  158A   	fcall	_lcd_put_byte
  4925  0BA0                     l7099:	
  4926                           ;lcd(16).c: 40: while(lcd_busy());
  4927                           
  4928  0BA0  246A  120A  158A   	fcall	_lcd_busy
  4929  0BA3  3800               	iorlw	0
  4930  0BA4  1D03               	skipz
  4931  0BA5  2BA0               	goto	l7099
  4932                           
  4933                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  4934  0BA6  3004               	movlw	4
  4935  0BA7  00A8               	movwf	?_lcd_put_byte
  4936  0BA8  3000               	movlw	0
  4937  0BA9  23BF  120A  158A   	fcall	_lcd_put_byte
  4938  0BAC                     l7103:	
  4939                           ;lcd(16).c: 42: while(lcd_busy());
  4940                           
  4941  0BAC  246A  120A  158A   	fcall	_lcd_busy
  4942  0BAF  3800               	iorlw	0
  4943  0BB0  1D03               	skipz
  4944  0BB1  2BAC               	goto	l7103
  4945  0BB2  3000               	movlw	0
  4946                           
  4947                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  4948  0BB3  01A8               	clrf	?_lcd_put_byte
  4949  0BB4  0AA8               	incf	?_lcd_put_byte,f
  4950  0BB5  23BF  120A  158A   	fcall	_lcd_put_byte
  4951  0BB8                     l7107:	
  4952                           ;lcd(16).c: 44: while(lcd_busy());
  4953                           
  4954  0BB8  246A  120A  158A   	fcall	_lcd_busy
  4955  0BBB  3800               	iorlw	0
  4956  0BBC  1903               	btfsc	3,2
  4957  0BBD  0008               	return
  4958  0BBE  2BB8               	goto	l7107
  4959  0BBF                     __end_of_lcd_init:	
  4960  0BBF                     __ptext767:	
  4961 ;; =============== function _lcd_busy ends ============
  4962                           
  4963                           
  4964 ;; *************** function _lcd_put_byte *****************
  4965 ;; Defined at:
  4966 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  rs              1    wreg     unsigned char 
  4969 ;;  b               1    8[BANK0 ] unsigned char 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  rs              1   11[BANK0 ] unsigned char 
  4972 ;;  temp            1   12[BANK0 ] struct _BYTE_VAL
  4973 ;; Return value:  Size  Location     Type
  4974 ;;		None               void
  4975 ;; Registers used:
  4976 ;;		wreg, status,2, status,0
  4977 ;; Tracked objects:
  4978 ;;		On entry : 60/0
  4979 ;;		On exit  : 60/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4982 ;;      Params:         0       1       0       0       0
  4983 ;;      Locals:         0       2       0       0       0
  4984 ;;      Temps:          0       2       0       0       0
  4985 ;;      Totals:         0       5       0       0       0
  4986 ;;Total ram usage:        5 bytes
  4987 ;; Hardware stack levels used:    1
  4988 ;; Hardware stack levels required when called:    3
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_lcd_init
  4993 ;;		_lcd_putc
  4994 ;;		_lcd_gotoxy
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997  0BBF                     _lcd_put_byte:	
  4998                           
  4999                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5000                           ;lcd_put_byte@rs stored from wreg
  5001  0BBF  00AB               	movwf	lcd_put_byte@rs
  5002                           
  5003                           ;lcd(16).c: 107: BYTE_VAL temp;
  5004                           ;lcd(16).c: 109: TRISD4 = 0;
  5005  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  5006  0BC1  1208               	bcf	8,4
  5007                           
  5008                           ;lcd(16).c: 110: TRISD5 = 0;
  5009  0BC2  1288               	bcf	8,5
  5010                           
  5011                           ;lcd(16).c: 111: TRISD6 = 0;
  5012  0BC3  1308               	bcf	8,6
  5013                           
  5014                           ;lcd(16).c: 112: TRISD7 = 0;
  5015  0BC4  1388               	bcf	8,7
  5016                           
  5017                           ;lcd(16).c: 114: RD1 = 0;
  5018  0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  5019  0BC6  1088               	bcf	8,1
  5020                           
  5021                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5022  0BC7  082B               	movf	lcd_put_byte@rs,w
  5023  0BC8  1D03               	skipz
  5024  0BC9  1488               	bsf	8,1
  5025                           
  5026                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5027  0BCA  3021               	movlw	33
  5028  0BCB  00A9               	movwf	??_lcd_put_byte
  5029  0BCC                     u5917:	
  5030  0BCC  0BA9               	decfsz	??_lcd_put_byte,f
  5031  0BCD  2BCC               	goto	u5917
  5032                           
  5033                           ;lcd(16).c: 118: RD2 = 0;
  5034  0BCE  1283               	bcf	3,5	;RP0=0, select bank0
  5035  0BCF  1303               	bcf	3,6	;RP1=0, select bank0
  5036  0BD0  3021               	movlw	33
  5037  0BD1  1108               	bcf	8,2
  5038                           
  5039                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5040  0BD2  00A9               	movwf	??_lcd_put_byte
  5041  0BD3                     u5927:	
  5042  0BD3  0BA9               	decfsz	??_lcd_put_byte,f
  5043  0BD4  2BD3               	goto	u5927
  5044                           
  5045                           ;lcd(16).c: 120: RD3 = 0;
  5046  0BD5  1283               	bcf	3,5	;RP0=0, select bank0
  5047  0BD6  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0BD7  1188               	bcf	8,3
  5049                           
  5050                           ;lcd(16).c: 122: temp.Val = b;
  5051  0BD8  0828               	movf	lcd_put_byte@b,w
  5052  0BD9  00AC               	movwf	lcd_put_byte@temp
  5053                           
  5054                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5055  0BDA  0E2C               	swapf	lcd_put_byte@temp,w
  5056  0BDB  3901               	andlw	1
  5057  0BDC  00A9               	movwf	??_lcd_put_byte
  5058  0BDD  0C29               	rrf	??_lcd_put_byte,w
  5059  0BDE  1C03               	btfss	3,0
  5060  0BDF  2BE4               	goto	u3550
  5061  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  5062  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  5063  0BE2  1608               	bsf	8,4
  5064  0BE3  2BE7               	goto	l6875
  5065  0BE4                     u3550:	
  5066  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  5067  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  5068  0BE6  1208               	bcf	8,4
  5069  0BE7                     l6875:	
  5070                           
  5071                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5072  0BE7  0E2C               	swapf	lcd_put_byte@temp,w
  5073  0BE8  00A9               	movwf	??_lcd_put_byte
  5074  0BE9  0C29               	rrf	??_lcd_put_byte,w
  5075  0BEA  3901               	andlw	1
  5076  0BEB  00AA               	movwf	??_lcd_put_byte+1
  5077  0BEC  0C2A               	rrf	??_lcd_put_byte+1,w
  5078  0BED  1C03               	btfss	3,0
  5079  0BEE  2BF3               	goto	u3570
  5080  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  5081  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  5082  0BF1  1688               	bsf	8,5
  5083  0BF2  2BF6               	goto	l6877
  5084  0BF3                     u3570:	
  5085  0BF3  1283               	bcf	3,5	;RP0=0, select bank0
  5086  0BF4  1303               	bcf	3,6	;RP1=0, select bank0
  5087  0BF5  1288               	bcf	8,5
  5088  0BF6                     l6877:	
  5089                           
  5090                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5091  0BF6  0E2C               	swapf	lcd_put_byte@temp,w
  5092  0BF7  00A9               	movwf	??_lcd_put_byte
  5093  0BF8  0CA9               	rrf	??_lcd_put_byte,f
  5094  0BF9  0C29               	rrf	??_lcd_put_byte,w
  5095  0BFA  3901               	andlw	1
  5096  0BFB  00AA               	movwf	??_lcd_put_byte+1
  5097  0BFC  0C2A               	rrf	??_lcd_put_byte+1,w
  5098  0BFD  1C03               	btfss	3,0
  5099  0BFE  2C03               	goto	u3590
  5100  0BFF  1283               	bcf	3,5	;RP0=0, select bank0
  5101  0C00  1303               	bcf	3,6	;RP1=0, select bank0
  5102  0C01  1708               	bsf	8,6
  5103  0C02  2C06               	goto	l6879
  5104  0C03                     u3590:	
  5105  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0C05  1308               	bcf	8,6
  5108  0C06                     l6879:	
  5109                           
  5110                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5111  0C06  0D2C               	rlf	lcd_put_byte@temp,w
  5112  0C07  0D2C               	rlf	lcd_put_byte@temp,w
  5113  0C08  3901               	andlw	1
  5114  0C09  00A9               	movwf	??_lcd_put_byte
  5115  0C0A  0C29               	rrf	??_lcd_put_byte,w
  5116  0C0B  1C03               	btfss	3,0
  5117  0C0C  2C11               	goto	u3610
  5118  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  5119  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  5120  0C0F  1788               	bsf	8,7
  5121  0C10  2C14               	goto	u3624
  5122  0C11                     u3610:	
  5123  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  5124  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  5125  0C13  1388               	bcf	8,7
  5126  0C14                     u3624:	
  5127                           
  5128                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5129  0C14  3021               	movlw	33
  5130  0C15  00A9               	movwf	??_lcd_put_byte
  5131  0C16                     u5937:	
  5132  0C16  0BA9               	decfsz	??_lcd_put_byte,f
  5133  0C17  2C16               	goto	u5937
  5134                           
  5135                           ;lcd(16).c: 130: RD3 = 1;
  5136  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  5137  0C19  1303               	bcf	3,6	;RP1=0, select bank0
  5138  0C1A  3021               	movlw	33
  5139  0C1B  1588               	bsf	8,3
  5140                           
  5141                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5142  0C1C  00A9               	movwf	??_lcd_put_byte
  5143  0C1D                     u5947:	
  5144  0C1D  0BA9               	decfsz	??_lcd_put_byte,f
  5145  0C1E  2C1D               	goto	u5947
  5146                           
  5147                           ;lcd(16).c: 132: RD3 = 0;
  5148  0C1F  1283               	bcf	3,5	;RP0=0, select bank0
  5149  0C20  1303               	bcf	3,6	;RP1=0, select bank0
  5150  0C21  1188               	bcf	8,3
  5151                           
  5152                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5153  0C22  082C               	movf	lcd_put_byte@temp,w
  5154  0C23  3901               	andlw	1
  5155  0C24  00A9               	movwf	??_lcd_put_byte
  5156  0C25  0C29               	rrf	??_lcd_put_byte,w
  5157  0C26  1C03               	btfss	3,0
  5158  0C27  2C2C               	goto	u3630
  5159  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  5160  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  5161  0C2A  1608               	bsf	8,4
  5162  0C2B  2C2F               	goto	l6887
  5163  0C2C                     u3630:	
  5164  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  5165  0C2D  1303               	bcf	3,6	;RP1=0, select bank0
  5166  0C2E  1208               	bcf	8,4
  5167  0C2F                     l6887:	
  5168                           
  5169                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5170  0C2F  0C2C               	rrf	lcd_put_byte@temp,w
  5171  0C30  3901               	andlw	1
  5172  0C31  00A9               	movwf	??_lcd_put_byte
  5173  0C32  0C29               	rrf	??_lcd_put_byte,w
  5174  0C33  1C03               	btfss	3,0
  5175  0C34  2C39               	goto	u3650
  5176  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5177  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5178  0C37  1688               	bsf	8,5
  5179  0C38  2C3C               	goto	l6889
  5180  0C39                     u3650:	
  5181  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  5182  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  5183  0C3B  1288               	bcf	8,5
  5184  0C3C                     l6889:	
  5185                           
  5186                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5187  0C3C  0C2C               	rrf	lcd_put_byte@temp,w
  5188  0C3D  00A9               	movwf	??_lcd_put_byte
  5189  0C3E  0C29               	rrf	??_lcd_put_byte,w
  5190  0C3F  3901               	andlw	1
  5191  0C40  00AA               	movwf	??_lcd_put_byte+1
  5192  0C41  0C2A               	rrf	??_lcd_put_byte+1,w
  5193  0C42  1C03               	btfss	3,0
  5194  0C43  2C48               	goto	u3670
  5195  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  5196  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  5197  0C46  1708               	bsf	8,6
  5198  0C47  2C4B               	goto	l6891
  5199  0C48                     u3670:	
  5200  0C48  1283               	bcf	3,5	;RP0=0, select bank0
  5201  0C49  1303               	bcf	3,6	;RP1=0, select bank0
  5202  0C4A  1308               	bcf	8,6
  5203  0C4B                     l6891:	
  5204                           
  5205                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5206  0C4B  0C2C               	rrf	lcd_put_byte@temp,w
  5207  0C4C  00A9               	movwf	??_lcd_put_byte
  5208  0C4D  0CA9               	rrf	??_lcd_put_byte,f
  5209  0C4E  0C29               	rrf	??_lcd_put_byte,w
  5210  0C4F  3901               	andlw	1
  5211  0C50  00AA               	movwf	??_lcd_put_byte+1
  5212  0C51  0C2A               	rrf	??_lcd_put_byte+1,w
  5213  0C52  1C03               	btfss	3,0
  5214  0C53  2C58               	goto	u3690
  5215  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  5216  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  5217  0C56  1788               	bsf	8,7
  5218  0C57  2C5B               	goto	u3704
  5219  0C58                     u3690:	
  5220  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  5221  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  5222  0C5A  1388               	bcf	8,7
  5223  0C5B                     u3704:	
  5224                           
  5225                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5226  0C5B  3021               	movlw	33
  5227  0C5C  00A9               	movwf	??_lcd_put_byte
  5228  0C5D                     u5957:	
  5229  0C5D  0BA9               	decfsz	??_lcd_put_byte,f
  5230  0C5E  2C5D               	goto	u5957
  5231                           
  5232                           ;lcd(16).c: 139: RD3 = 1;
  5233  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0C61  3021               	movlw	33
  5236  0C62  1588               	bsf	8,3
  5237                           
  5238                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5239  0C63  00A9               	movwf	??_lcd_put_byte
  5240  0C64                     u5967:	
  5241  0C64  0BA9               	decfsz	??_lcd_put_byte,f
  5242  0C65  2C64               	goto	u5967
  5243                           
  5244                           ;lcd(16).c: 141: RD3 = 0;
  5245  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0C68  1188               	bcf	8,3
  5248  0C69  0008               	return
  5249  0C6A                     __end_of_lcd_put_byte:	
  5250  0C6A                     __ptext766:	
  5251 ;; =============== function ___ftadd ends ============
  5252                           
  5253                           
  5254 ;; *************** function _lcd_busy *****************
  5255 ;; Defined at:
  5256 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;		None
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  busy            1    9[BANK0 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      unsigned char 
  5263 ;; Registers used:
  5264 ;;		wreg
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 60/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5270 ;;      Params:         0       0       0       0       0
  5271 ;;      Locals:         0       1       0       0       0
  5272 ;;      Temps:          0       1       0       0       0
  5273 ;;      Totals:         0       2       0       0       0
  5274 ;;Total ram usage:        2 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    3
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_lcd_init
  5281 ;;		_lcd_putc
  5282 ;;		_lcd_gotoxy
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285  0C6A                     _lcd_busy:	
  5286                           
  5287                           ;lcd(16).c: 48: unsigned char busy;
  5288                           ;lcd(16).c: 50: TRISD4 = 1;
  5289                           
  5290                           ; Regs used in _lcd_busy: [wreg]
  5291  0C6A  1683               	bsf	3,5	;RP0=1, select bank1
  5292  0C6B  1303               	bcf	3,6	;RP1=0, select bank1
  5293  0C6C  1608               	bsf	8,4
  5294                           
  5295                           ;lcd(16).c: 51: TRISD5 = 1;
  5296  0C6D  1688               	bsf	8,5
  5297                           
  5298                           ;lcd(16).c: 52: TRISD6 = 1;
  5299  0C6E  1708               	bsf	8,6
  5300                           
  5301                           ;lcd(16).c: 53: TRISD7 = 1;
  5302  0C6F  1788               	bsf	8,7
  5303                           
  5304                           ;lcd(16).c: 55: RD2 = 1;
  5305  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5306  0C71  3021               	movlw	33
  5307  0C72  1508               	bsf	8,2
  5308                           
  5309                           ;lcd(16).c: 56: RD1 = 0;
  5310  0C73  1088               	bcf	8,1
  5311                           
  5312                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5313  0C74  00A8               	movwf	??_lcd_busy
  5314  0C75                     u5877:	
  5315  0C75  0BA8               	decfsz	??_lcd_busy,f
  5316  0C76  2C75               	goto	u5877
  5317                           
  5318                           ;lcd(16).c: 58: RD3 = 1;
  5319  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  5320  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  5321  0C79  3021               	movlw	33
  5322  0C7A  1588               	bsf	8,3
  5323                           
  5324                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5325  0C7B  00A8               	movwf	??_lcd_busy
  5326  0C7C                     u5887:	
  5327  0C7C  0BA8               	decfsz	??_lcd_busy,f
  5328  0C7D  2C7C               	goto	u5887
  5329                           
  5330                           ;lcd(16).c: 61: busy = RD7;
  5331  0C7E  3000               	movlw	0
  5332  0C7F  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0C80  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0C81  1B88               	btfsc	8,7
  5335  0C82  3001               	movlw	1
  5336  0C83  00A9               	movwf	lcd_busy@busy
  5337  0C84  3021               	movlw	33
  5338                           
  5339                           ;lcd(16).c: 63: RD3 = 0;
  5340  0C85  1188               	bcf	8,3
  5341                           
  5342                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5343  0C86  00A8               	movwf	??_lcd_busy
  5344  0C87                     u5897:	
  5345  0C87  0BA8               	decfsz	??_lcd_busy,f
  5346  0C88  2C87               	goto	u5897
  5347                           
  5348                           ;lcd(16).c: 65: RD3 = 1;
  5349  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  5350  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  5351  0C8B  3021               	movlw	33
  5352  0C8C  1588               	bsf	8,3
  5353                           
  5354                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5355  0C8D  00A8               	movwf	??_lcd_busy
  5356  0C8E                     u5907:	
  5357  0C8E  0BA8               	decfsz	??_lcd_busy,f
  5358  0C8F  2C8E               	goto	u5907
  5359                           
  5360                           ;lcd(16).c: 67: RD3 = 0;
  5361  0C90  1283               	bcf	3,5	;RP0=0, select bank0
  5362  0C91  1303               	bcf	3,6	;RP1=0, select bank0
  5363  0C92  1188               	bcf	8,3
  5364                           
  5365                           ;lcd(16).c: 70: return busy;
  5366  0C93  0829               	movf	lcd_busy@busy,w
  5367  0C94  0008               	return
  5368  0C95                     __end_of_lcd_busy:	
  5369  0C95                     __ptext783:	
  5370 ;; =============== function _isdigit ends ============
  5371                           
  5372                           
  5373 ;; *************** function _isprint *****************
  5374 ;; Defined at:
  5375 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  c               1    wreg     unsigned char 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  c               1    9[BANK0 ] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;		None               void
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 60/0
  5386 ;;		On exit  : 60/0
  5387 ;;		Unchanged: FFF9F/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5389 ;;      Params:         0       0       0       0       0
  5390 ;;      Locals:         0       2       0       0       0
  5391 ;;      Temps:          0       0       0       0       0
  5392 ;;      Totals:         0       2       0       0       0
  5393 ;;Total ram usage:        2 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    3
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_lcd_putc
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402  0C95                     _isprint:	
  5403                           
  5404                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5405                           ;isprint@c stored from wreg
  5406  0C95  00A9               	movwf	isprint@c
  5407  0C96  307F               	movlw	127
  5408  0C97  01A8               	clrf	_isprint$3677
  5409  0C98  0229               	subwf	isprint@c,w
  5410  0C99  1803               	skipnc
  5411  0C9A  2CA1               	goto	l6351
  5412  0C9B  3020               	movlw	32
  5413  0C9C  0229               	subwf	isprint@c,w
  5414  0C9D  1C03               	skipc
  5415  0C9E  2CA1               	goto	l6351
  5416  0C9F  01A8               	clrf	_isprint$3677
  5417  0CA0  0AA8               	incf	_isprint$3677,f
  5418  0CA1                     l6351:	
  5419  0CA1  0C28               	rrf	_isprint$3677,w
  5420  0CA2  0008               	return
  5421  0CA3                     __end_of_isprint:	
  5422  0CA3                     PL29:	
  5423  0CA3  3030               	movlw	48
  5424  0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  5425  0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  5426  0CA6  00A8               	movwf	?_lcd_put_byte
  5427  0CA7  3400               	retlw	0
  5428                           
  5429                           	psect	text763
  5430  0CA8                     __ptext763:	
  5431 ;; =============== function ___lltoft ends ============
  5432                           
  5433                           
  5434 ;; *************** function ___altoft *****************
  5435 ;; Defined at:
  5436 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  c               4   16[BANK0 ] long 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  sign            1   21[BANK0 ] unsigned char 
  5441 ;;  exp             1   20[BANK0 ] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  3   16[BANK0 ] float 
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, pclath, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 60/0
  5448 ;;		On exit  : 60/0
  5449 ;;		Unchanged: FFF9F/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5451 ;;      Params:         0       4       0       0       0
  5452 ;;      Locals:         0       2       0       0       0
  5453 ;;      Temps:          0       0       0       0       0
  5454 ;;      Totals:         0       6       0       0       0
  5455 ;;Total ram usage:        6 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    4
  5458 ;; This function calls:
  5459 ;;		___ftpack
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464  0CA8                     ___altoft:	
  5465  0CA8  308E               	movlw	142
  5466                           
  5467                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5468  0CA9  01B5               	clrf	___altoft@sign
  5469  0CAA  00B4               	movwf	___altoft@exp
  5470  0CAB  1FB3               	btfss	___altoft@c+3,7
  5471  0CAC  2CBA               	goto	l7905
  5472  0CAD  09B0               	comf	___altoft@c,f
  5473  0CAE  09B1               	comf	___altoft@c+1,f
  5474  0CAF  09B2               	comf	___altoft@c+2,f
  5475  0CB0  09B3               	comf	___altoft@c+3,f
  5476  0CB1  0AB0               	incf	___altoft@c,f
  5477  0CB2  1903               	skipnz
  5478  0CB3  0AB1               	incf	___altoft@c+1,f
  5479  0CB4  1903               	skipnz
  5480  0CB5  0AB2               	incf	___altoft@c+2,f
  5481  0CB6  1903               	skipnz
  5482  0CB7  0AB3               	incf	___altoft@c+3,f
  5483  0CB8  01B5               	clrf	___altoft@sign
  5484  0CB9  0AB5               	incf	___altoft@sign,f
  5485  0CBA                     l7905:	
  5486  0CBA  30FF               	movlw	255
  5487  0CBB  0533               	andwf	___altoft@c+3,w
  5488  0CBC  1903               	btfsc	3,2
  5489  0CBD  2CC5               	goto	l7907
  5490  0CBE  1003               	clrc
  5491  0CBF  0CB3               	rrf	___altoft@c+3,f
  5492  0CC0  0CB2               	rrf	___altoft@c+2,f
  5493  0CC1  0CB1               	rrf	___altoft@c+1,f
  5494  0CC2  0CB0               	rrf	___altoft@c,f
  5495  0CC3  0AB4               	incf	___altoft@exp,f
  5496  0CC4  2CBA               	goto	l7905
  5497  0CC5                     l7907:	
  5498  0CC5  0830               	movf	___altoft@c,w
  5499  0CC6  00A8               	movwf	?___ftpack
  5500  0CC7  0831               	movf	___altoft@c+1,w
  5501  0CC8  00A9               	movwf	?___ftpack+1
  5502  0CC9  0832               	movf	___altoft@c+2,w
  5503  0CCA  00AA               	movwf	?___ftpack+2
  5504  0CCB  0834               	movf	___altoft@exp,w
  5505  0CCC  00AB               	movwf	?___ftpack+3
  5506  0CCD  0835               	movf	___altoft@sign,w
  5507  0CCE  00AC               	movwf	?___ftpack+4
  5508  0CCF  2769               	fcall	___ftpack
  5509  0CD0  0828               	movf	?___ftpack,w
  5510  0CD1  00B0               	movwf	?___altoft
  5511  0CD2  0829               	movf	?___ftpack+1,w
  5512  0CD3  00B1               	movwf	?___altoft+1
  5513  0CD4  082A               	movf	?___ftpack+2,w
  5514  0CD5  00B2               	movwf	?___altoft+2
  5515  0CD6  0008               	return
  5516  0CD7                     __end_of___altoft:	
  5517  0CD7                     __ptext758:	
  5518 ;; =============== function ___ftsub ends ============
  5519                           
  5520                           
  5521 ;; *************** function _scale *****************
  5522 ;; Defined at:
  5523 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;  scl             1    wreg     char 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  scl             1   60[BANK0 ] char 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  3   50[BANK0 ] char 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 60/20
  5534 ;;		On exit  : 60/0
  5535 ;;		Unchanged: FFF9F/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5537 ;;      Params:         0       3       0       0       0
  5538 ;;      Locals:         0       4       0       0       0
  5539 ;;      Temps:          0       4       0       0       0
  5540 ;;      Totals:         0      11       0       0       0
  5541 ;;Total ram usage:       11 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    5
  5544 ;; This function calls:
  5545 ;;		___awmod
  5546 ;;		___awdiv
  5547 ;;		___ftmul
  5548 ;;		___bmul
  5549 ;; This function is called by:
  5550 ;;		_printf
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553  0CD7                     _scale:	
  5554                           
  5555                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5556                           ;scale@scl stored from wreg
  5557  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  5558  0CD8  00DC               	movwf	scale@scl
  5559  0CD9  1FDC               	btfss	scale@scl,7
  5560  0CDA  2DA3               	goto	l7965
  5561  0CDB  09DC               	comf	scale@scl,f
  5562  0CDC  0ADC               	incf	scale@scl,f
  5563  0CDD  085C               	movf	scale@scl,w
  5564  0CDE  3A80               	xorlw	128
  5565  0CDF  3E12               	addlw	-238
  5566  0CE0  1C03               	skipc
  5567  0CE1  2D47               	goto	l7955
  5568  0CE2  300A               	movlw	10
  5569  0CE3  27CB  120A  158A   	fcall	PL18	;call to abstracted procedure
  5570  0CE6  26AE  120A  158A   	fcall	___awmod
  5571  0CE9  0829               	movf	?___awmod+1,w
  5572  0CEA  00B1               	movwf	?___awdiv+3
  5573  0CEB  0828               	movf	?___awmod,w
  5574  0CEC  00B0               	movwf	?___awdiv+2
  5575  0CED  2669  120A  158A   	fcall	___awdiv
  5576  0CF0  27E0               	fcall	PL22	;call to abstracted procedure
  5577  0CF1  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5578  0CF2  0084               	movwf	4
  5579  0CF3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5580  0CF8  00C3               	movwf	?___ftmul
  5581  0CF9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5582  0CFE  00C4               	movwf	?___ftmul+1
  5583  0CFF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5584  0D04  27F0  120A  158A   	fcall	PL24	;call to abstracted procedure
  5585  0D07  1BB0               	btfsc	?___awdiv+2,7
  5586  0D08  03B1               	decf	?___awdiv+3,f
  5587  0D09  2669  120A  158A   	fcall	___awdiv
  5588  0D0C  27AF               	fcall	PL12	;call to abstracted procedure
  5589  0D0D  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5590  0D0E  0084               	movwf	4
  5591  0D0F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5592  0D14  00C6               	movwf	?___ftmul+3
  5593  0D15  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5594  0D1A  00C7               	movwf	?___ftmul+4
  5595  0D1B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5596  0D20  00C8               	movwf	?___ftmul+5
  5597  0D21  26EB  120A  158A   	fcall	___ftmul
  5598  0D24  27BE  120A  158A   	fcall	PL14	;call to abstracted procedure
  5599  0D27  1BAA               	btfsc	?___awmod+2,7
  5600  0D28  03AB               	decf	?___awmod+3,f
  5601  0D29  26AE  120A  158A   	fcall	___awmod
  5602  0D2C  27A7               	fcall	PL11	;call to abstracted procedure
  5603  0D2D  3E01               	addlw	low (__npowers_-__stringbase)
  5604  0D2E  0084               	movwf	4
  5605  0D2F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5606  0D34  00C3               	movwf	?___ftmul
  5607  0D35  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5608  0D3A  00C4               	movwf	?___ftmul+1
  5609  0D3B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5610  0D40  27E8  120A  158A   	fcall	PL23	;call to abstracted procedure
  5611  0D43  26EB  120A  158A   	fcall	___ftmul
  5612  0D46  2FB7               	ljmp	PL13	;call to abstracted procedure
  5613  0D47                     l7955:	
  5614  0D47  085C               	movf	scale@scl,w
  5615  0D48  3A80               	xorlw	128
  5616  0D49  3E75               	addlw	-139
  5617  0D4A  1C03               	skipc
  5618  0D4B  2D8C               	goto	l7961
  5619  0D4C  300A               	movlw	10
  5620  0D4D  00A8               	movwf	?___awmod
  5621  0D4E  01A9               	clrf	?___awmod+1
  5622  0D4F  085C               	movf	scale@scl,w
  5623  0D50  00AA               	movwf	?___awmod+2
  5624  0D51  01AB               	clrf	?___awmod+3
  5625  0D52  1BAA               	btfsc	?___awmod+2,7
  5626  0D53  03AB               	decf	?___awmod+3,f
  5627  0D54  26AE  120A  158A   	fcall	___awmod
  5628  0D57  27A7               	fcall	PL11	;call to abstracted procedure
  5629  0D58  3E01               	addlw	low (__npowers_-__stringbase)
  5630  0D59  0084               	movwf	4
  5631  0D5A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5632  0D5F  00C3               	movwf	?___ftmul
  5633  0D60  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5634  0D65  00C4               	movwf	?___ftmul+1
  5635  0D66  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5636  0D6B  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5637  0D6E  1BB0               	btfsc	?___awdiv+2,7
  5638  0D6F  03B1               	decf	?___awdiv+3,f
  5639  0D70  2669  120A  158A   	fcall	___awdiv
  5640  0D73  27AF               	fcall	PL12	;call to abstracted procedure
  5641  0D74  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5642  0D75  0084               	movwf	4
  5643  0D76  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5644  0D7B  00C6               	movwf	?___ftmul+3
  5645  0D7C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5646  0D81  00C7               	movwf	?___ftmul+4
  5647  0D82  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5648  0D87  00C8               	movwf	?___ftmul+5
  5649  0D88  26EB  120A  158A   	fcall	___ftmul
  5650  0D8B  2FB7               	ljmp	PL13	;call to abstracted procedure
  5651  0D8C                     l7961:	
  5652  0D8C  3003               	movlw	3
  5653  0D8D  00B1               	movwf	?___bmul
  5654  0D8E  085C               	movf	scale@scl,w
  5655  0D8F  275A               	fcall	___bmul
  5656  0D90  3E01               	addlw	low (__npowers_-__stringbase)
  5657  0D91  0084               	movwf	4
  5658  0D92  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5659  0D97  00D2               	movwf	?_scale
  5660  0D98  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5661  0D9D  00D3               	movwf	?_scale+1
  5662  0D9E  160A  118A  2000   	fcall	stringdir
  5663  0DA1  00D4               	movwf	?_scale+2
  5664  0DA2  0008               	return
  5665  0DA3                     l7965:	
  5666  0DA3  085C               	movf	scale@scl,w
  5667  0DA4  3A80               	xorlw	128
  5668  0DA5  3E12               	addlw	-238
  5669  0DA6  1C03               	skipc
  5670  0DA7  2E0D               	goto	l7973
  5671  0DA8  300A               	movlw	10
  5672  0DA9  27CB  120A  158A   	fcall	PL18	;call to abstracted procedure
  5673  0DAC  26AE  120A  158A   	fcall	___awmod
  5674  0DAF  0829               	movf	?___awmod+1,w
  5675  0DB0  00B1               	movwf	?___awdiv+3
  5676  0DB1  0828               	movf	?___awmod,w
  5677  0DB2  00B0               	movwf	?___awdiv+2
  5678  0DB3  2669  120A  158A   	fcall	___awdiv
  5679  0DB6  27E0               	fcall	PL22	;call to abstracted procedure
  5680  0DB7  3E43               	addlw	low ((__powers_-__stringbase+27))
  5681  0DB8  0084               	movwf	4
  5682  0DB9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5683  0DBE  00C3               	movwf	?___ftmul
  5684  0DBF  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5685  0DC4  00C4               	movwf	?___ftmul+1
  5686  0DC5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5687  0DCA  27F0  120A  158A   	fcall	PL24	;call to abstracted procedure
  5688  0DCD  1BB0               	btfsc	?___awdiv+2,7
  5689  0DCE  03B1               	decf	?___awdiv+3,f
  5690  0DCF  2669  120A  158A   	fcall	___awdiv
  5691  0DD2  27AF               	fcall	PL12	;call to abstracted procedure
  5692  0DD3  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5693  0DD4  0084               	movwf	4
  5694  0DD5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5695  0DDA  00C6               	movwf	?___ftmul+3
  5696  0DDB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5697  0DE0  00C7               	movwf	?___ftmul+4
  5698  0DE1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5699  0DE6  00C8               	movwf	?___ftmul+5
  5700  0DE7  26EB  120A  158A   	fcall	___ftmul
  5701  0DEA  27BE  120A  158A   	fcall	PL14	;call to abstracted procedure
  5702  0DED  1BAA               	btfsc	?___awmod+2,7
  5703  0DEE  03AB               	decf	?___awmod+3,f
  5704  0DEF  26AE  120A  158A   	fcall	___awmod
  5705  0DF2  27A7               	fcall	PL11	;call to abstracted procedure
  5706  0DF3  3E28               	addlw	low (__powers_-__stringbase)
  5707  0DF4  0084               	movwf	4
  5708  0DF5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5709  0DFA  00C3               	movwf	?___ftmul
  5710  0DFB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5711  0E00  00C4               	movwf	?___ftmul+1
  5712  0E01  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5713  0E06  27E8  120A  158A   	fcall	PL23	;call to abstracted procedure
  5714  0E09  26EB  120A  158A   	fcall	___ftmul
  5715  0E0C  2FB7               	ljmp	PL13	;call to abstracted procedure
  5716  0E0D                     l7973:	
  5717  0E0D  085C               	movf	scale@scl,w
  5718  0E0E  3A80               	xorlw	128
  5719  0E0F  3E75               	addlw	-139
  5720  0E10  1C03               	skipc
  5721  0E11  2E52               	goto	l7979
  5722  0E12  300A               	movlw	10
  5723  0E13  00A8               	movwf	?___awmod
  5724  0E14  01A9               	clrf	?___awmod+1
  5725  0E15  085C               	movf	scale@scl,w
  5726  0E16  00AA               	movwf	?___awmod+2
  5727  0E17  01AB               	clrf	?___awmod+3
  5728  0E18  1BAA               	btfsc	?___awmod+2,7
  5729  0E19  03AB               	decf	?___awmod+3,f
  5730  0E1A  26AE  120A  158A   	fcall	___awmod
  5731  0E1D  27A7               	fcall	PL11	;call to abstracted procedure
  5732  0E1E  3E28               	addlw	low (__powers_-__stringbase)
  5733  0E1F  0084               	movwf	4
  5734  0E20  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5735  0E25  00C3               	movwf	?___ftmul
  5736  0E26  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5737  0E2B  00C4               	movwf	?___ftmul+1
  5738  0E2C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5739  0E31  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  5740  0E34  1BB0               	btfsc	?___awdiv+2,7
  5741  0E35  03B1               	decf	?___awdiv+3,f
  5742  0E36  2669  120A  158A   	fcall	___awdiv
  5743  0E39  27AF               	fcall	PL12	;call to abstracted procedure
  5744  0E3A  3E43               	addlw	low ((__powers_-__stringbase+27))
  5745  0E3B  0084               	movwf	4
  5746  0E3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5747  0E41  00C6               	movwf	?___ftmul+3
  5748  0E42  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5749  0E47  00C7               	movwf	?___ftmul+4
  5750  0E48  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5751  0E4D  00C8               	movwf	?___ftmul+5
  5752  0E4E  26EB  120A  158A   	fcall	___ftmul
  5753  0E51  2FB7               	ljmp	PL13	;call to abstracted procedure
  5754  0E52                     l7979:	
  5755  0E52  3003               	movlw	3
  5756  0E53  00B1               	movwf	?___bmul
  5757  0E54  085C               	movf	scale@scl,w
  5758  0E55  275A               	fcall	___bmul
  5759  0E56  3E28               	addlw	low (__powers_-__stringbase)
  5760  0E57  0084               	movwf	4
  5761  0E58  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5762  0E5D  00D2               	movwf	?_scale
  5763  0E5E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5764  0E63  00D3               	movwf	?_scale+1
  5765  0E64  160A  118A  2000   	fcall	stringdir
  5766  0E67  00D4               	movwf	?_scale+2
  5767  0E68  0008               	return
  5768  0E69                     __end_of_scale:	
  5769  0E69                     __ptext773:	
  5770 ;; =============== function ___llmod ends ============
  5771                           
  5772                           
  5773 ;; *************** function ___awdiv *****************
  5774 ;; Defined at:
  5775 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  divisor         2   14[BANK0 ] int 
  5778 ;;  dividend        2   16[BANK0 ] int 
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  quotient        2   20[BANK0 ] int 
  5781 ;;  sign            1   19[BANK0 ] unsigned char 
  5782 ;;  counter         1   18[BANK0 ] unsigned char 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  2   14[BANK0 ] int 
  5785 ;; Registers used:
  5786 ;;		wreg, status,2, status,0
  5787 ;; Tracked objects:
  5788 ;;		On entry : 60/0
  5789 ;;		On exit  : 60/0
  5790 ;;		Unchanged: FFF9F/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5792 ;;      Params:         0       4       0       0       0
  5793 ;;      Locals:         0       4       0       0       0
  5794 ;;      Temps:          0       0       0       0       0
  5795 ;;      Totals:         0       8       0       0       0
  5796 ;;Total ram usage:        8 bytes
  5797 ;; Hardware stack levels used:    1
  5798 ;; Hardware stack levels required when called:    3
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_scale
  5803 ;;		_printf
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806  0E69                     ___awdiv:	
  5807                           
  5808                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5809  0E69  01B3               	clrf	___awdiv@sign
  5810  0E6A  1FAF               	btfss	___awdiv@divisor+1,7
  5811  0E6B  2E73               	goto	l6609
  5812  0E6C  09AE               	comf	___awdiv@divisor,f
  5813  0E6D  09AF               	comf	___awdiv@divisor+1,f
  5814  0E6E  0AAE               	incf	___awdiv@divisor,f
  5815  0E6F  1903               	skipnz
  5816  0E70  0AAF               	incf	___awdiv@divisor+1,f
  5817  0E71  01B3               	clrf	___awdiv@sign
  5818  0E72  0AB3               	incf	___awdiv@sign,f
  5819  0E73                     l6609:	
  5820  0E73  1FB1               	btfss	___awdiv@dividend+1,7
  5821  0E74  2E7C               	goto	l6615
  5822  0E75  09B0               	comf	___awdiv@dividend,f
  5823  0E76  09B1               	comf	___awdiv@dividend+1,f
  5824  0E77  0AB0               	incf	___awdiv@dividend,f
  5825  0E78  1903               	skipnz
  5826  0E79  0AB1               	incf	___awdiv@dividend+1,f
  5827  0E7A  3001               	movlw	1
  5828  0E7B  06B3               	xorwf	___awdiv@sign,f
  5829  0E7C                     l6615:	
  5830  0E7C  01B4               	clrf	___awdiv@quotient
  5831  0E7D  01B5               	clrf	___awdiv@quotient+1
  5832  0E7E  082F               	movf	___awdiv@divisor+1,w
  5833  0E7F  042E               	iorwf	___awdiv@divisor,w
  5834  0E80  1903               	skipnz
  5835  0E81  2EA1               	goto	l6637
  5836  0E82  01B2               	clrf	___awdiv@counter
  5837  0E83                     L15:	
  5838  0E83  0AB2               	incf	___awdiv@counter,f
  5839  0E84  1BAF               	btfsc	___awdiv@divisor+1,7
  5840  0E85  2E8A               	goto	l6625
  5841  0E86  1003               	clrc
  5842  0E87  0DAE               	rlf	___awdiv@divisor,f
  5843  0E88  0DAF               	rlf	___awdiv@divisor+1,f
  5844  0E89  2E83               	goto	L15
  5845  0E8A                     l6625:	
  5846  0E8A  1003               	clrc
  5847  0E8B  0DB4               	rlf	___awdiv@quotient,f
  5848  0E8C  0DB5               	rlf	___awdiv@quotient+1,f
  5849  0E8D  082F               	movf	___awdiv@divisor+1,w
  5850  0E8E  0231               	subwf	___awdiv@dividend+1,w
  5851  0E8F  1D03               	skipz
  5852  0E90  2E93               	goto	u3055
  5853  0E91  082E               	movf	___awdiv@divisor,w
  5854  0E92  0230               	subwf	___awdiv@dividend,w
  5855  0E93                     u3055:	
  5856  0E93  1C03               	skipc
  5857  0E94  2E9D               	goto	L16
  5858  0E95  082E               	movf	___awdiv@divisor,w
  5859  0E96  02B0               	subwf	___awdiv@dividend,f
  5860  0E97  082F               	movf	___awdiv@divisor+1,w
  5861  0E98  1C03               	skipc
  5862  0E99  03B1               	decf	___awdiv@dividend+1,f
  5863  0E9A  02B1               	subwf	___awdiv@dividend+1,f
  5864  0E9B  1434               	bsf	___awdiv@quotient,0
  5865  0E9C  1003               	clrc
  5866  0E9D                     L16:	
  5867  0E9D  0CAF               	rrf	___awdiv@divisor+1,f
  5868  0E9E  0CAE               	rrf	___awdiv@divisor,f
  5869  0E9F  0BB2               	decfsz	___awdiv@counter,f
  5870  0EA0  2E8A               	goto	l6625
  5871  0EA1                     l6637:	
  5872  0EA1  0833               	movf	___awdiv@sign,w
  5873  0EA2  1903               	btfsc	3,2
  5874  0EA3  2EA9               	goto	l6641
  5875  0EA4  09B4               	comf	___awdiv@quotient,f
  5876  0EA5  09B5               	comf	___awdiv@quotient+1,f
  5877  0EA6  0AB4               	incf	___awdiv@quotient,f
  5878  0EA7  1903               	skipnz
  5879  0EA8  0AB5               	incf	___awdiv@quotient+1,f
  5880  0EA9                     l6641:	
  5881  0EA9  0835               	movf	___awdiv@quotient+1,w
  5882  0EAA  00AF               	movwf	?___awdiv+1
  5883  0EAB  0834               	movf	___awdiv@quotient,w
  5884  0EAC  00AE               	movwf	?___awdiv
  5885  0EAD  0008               	return
  5886  0EAE                     __end_of___awdiv:	
  5887  0EAE                     __ptext768:	
  5888 ;; =============== function _lcd_put_byte ends ============
  5889                           
  5890                           
  5891 ;; *************** function ___awmod *****************
  5892 ;; Defined at:
  5893 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  divisor         2    8[BANK0 ] int 
  5896 ;;  dividend        2   10[BANK0 ] int 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  sign            1   13[BANK0 ] unsigned char 
  5899 ;;  counter         1   12[BANK0 ] unsigned char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  2    8[BANK0 ] int 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0
  5904 ;; Tracked objects:
  5905 ;;		On entry : 60/0
  5906 ;;		On exit  : 60/0
  5907 ;;		Unchanged: FFF9F/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         0       4       0       0       0
  5910 ;;      Locals:         0       2       0       0       0
  5911 ;;      Temps:          0       0       0       0       0
  5912 ;;      Totals:         0       6       0       0       0
  5913 ;;Total ram usage:        6 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    3
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_scale
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922  0EAE                     ___awmod:	
  5923                           
  5924                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5925  0EAE  01AD               	clrf	___awmod@sign
  5926  0EAF  1FAB               	btfss	___awmod@dividend+1,7
  5927  0EB0  2EB8               	goto	l6727
  5928  0EB1  09AA               	comf	___awmod@dividend,f
  5929  0EB2  09AB               	comf	___awmod@dividend+1,f
  5930  0EB3  0AAA               	incf	___awmod@dividend,f
  5931  0EB4  1903               	skipnz
  5932  0EB5  0AAB               	incf	___awmod@dividend+1,f
  5933  0EB6  01AD               	clrf	___awmod@sign
  5934  0EB7  0AAD               	incf	___awmod@sign,f
  5935  0EB8                     l6727:	
  5936  0EB8  1FA9               	btfss	___awmod@divisor+1,7
  5937  0EB9  2EBF               	goto	l6731
  5938  0EBA  09A8               	comf	___awmod@divisor,f
  5939  0EBB  09A9               	comf	___awmod@divisor+1,f
  5940  0EBC  0AA8               	incf	___awmod@divisor,f
  5941  0EBD  1903               	skipnz
  5942  0EBE  0AA9               	incf	___awmod@divisor+1,f
  5943  0EBF                     l6731:	
  5944  0EBF  0829               	movf	___awmod@divisor+1,w
  5945  0EC0  0428               	iorwf	___awmod@divisor,w
  5946  0EC1  1903               	skipnz
  5947  0EC2  2EDE               	goto	l6747
  5948  0EC3  01AC               	clrf	___awmod@counter
  5949  0EC4                     L8:	
  5950  0EC4  0AAC               	incf	___awmod@counter,f
  5951  0EC5  1BA9               	btfsc	___awmod@divisor+1,7
  5952  0EC6  2ECB               	goto	l6739
  5953  0EC7  1003               	clrc
  5954  0EC8  0DA8               	rlf	___awmod@divisor,f
  5955  0EC9  0DA9               	rlf	___awmod@divisor+1,f
  5956  0ECA  2EC4               	goto	L8
  5957  0ECB                     l6739:	
  5958  0ECB  0829               	movf	___awmod@divisor+1,w
  5959  0ECC  022B               	subwf	___awmod@dividend+1,w
  5960  0ECD  1D03               	skipz
  5961  0ECE  2ED1               	goto	u3245
  5962  0ECF  0828               	movf	___awmod@divisor,w
  5963  0ED0  022A               	subwf	___awmod@dividend,w
  5964  0ED1                     u3245:	
  5965  0ED1  1C03               	skipc
  5966  0ED2  2EDA               	goto	L9
  5967  0ED3  0828               	movf	___awmod@divisor,w
  5968  0ED4  02AA               	subwf	___awmod@dividend,f
  5969  0ED5  0829               	movf	___awmod@divisor+1,w
  5970  0ED6  1C03               	skipc
  5971  0ED7  03AB               	decf	___awmod@dividend+1,f
  5972  0ED8  02AB               	subwf	___awmod@dividend+1,f
  5973  0ED9  1003               	clrc
  5974  0EDA                     L9:	
  5975  0EDA  0CA9               	rrf	___awmod@divisor+1,f
  5976  0EDB  0CA8               	rrf	___awmod@divisor,f
  5977  0EDC  0BAC               	decfsz	___awmod@counter,f
  5978  0EDD  2ECB               	goto	l6739
  5979  0EDE                     l6747:	
  5980  0EDE  082D               	movf	___awmod@sign,w
  5981  0EDF  1903               	btfsc	3,2
  5982  0EE0  2EE6               	goto	l6751
  5983  0EE1  09AA               	comf	___awmod@dividend,f
  5984  0EE2  09AB               	comf	___awmod@dividend+1,f
  5985  0EE3  0AAA               	incf	___awmod@dividend,f
  5986  0EE4  1903               	skipnz
  5987  0EE5  0AAB               	incf	___awmod@dividend+1,f
  5988  0EE6                     l6751:	
  5989  0EE6  082B               	movf	___awmod@dividend+1,w
  5990  0EE7  00A9               	movwf	?___awmod+1
  5991  0EE8  082A               	movf	___awmod@dividend,w
  5992  0EE9  00A8               	movwf	?___awmod
  5993  0EEA  0008               	return
  5994  0EEB                     __end_of___awmod:	
  5995  0EEB                     __ptext764:	
  5996 ;; =============== function ___altoft ends ============
  5997                           
  5998                           
  5999 ;; *************** function ___ftmul *****************
  6000 ;; Defined at:
  6001 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  f1              3   35[BANK0 ] float 
  6004 ;;  f2              3   38[BANK0 ] float 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  f3_as_produc    3   45[BANK0 ] unsigned um
  6007 ;;  sign            1   49[BANK0 ] unsigned char 
  6008 ;;  cntr            1   48[BANK0 ] unsigned char 
  6009 ;;  exp             1   44[BANK0 ] unsigned char 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  3   35[BANK0 ] float 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0, pclath, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 60/0
  6016 ;;		On exit  : 60/0
  6017 ;;		Unchanged: FFF9F/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6019 ;;      Params:         0       6       0       0       0
  6020 ;;      Locals:         0       6       0       0       0
  6021 ;;      Temps:          0       3       0       0       0
  6022 ;;      Totals:         0      15       0       0       0
  6023 ;;Total ram usage:       15 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    4
  6026 ;; This function calls:
  6027 ;;		___ftpack
  6028 ;; This function is called by:
  6029 ;;		_main
  6030 ;;		_fround
  6031 ;;		_scale
  6032 ;;		_printf
  6033 ;; This function uses a non-reentrant model
  6034 ;;
  6035  0EEB                     ___ftmul:	
  6036                           
  6037                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6038  0EEB  0843               	movf	___ftmul@f1,w
  6039  0EEC  00C9               	movwf	??___ftmul
  6040  0EED  0844               	movf	___ftmul@f1+1,w
  6041  0EEE  00CA               	movwf	??___ftmul+1
  6042  0EEF  0845               	movf	___ftmul@f1+2,w
  6043  0EF0  00CB               	movwf	??___ftmul+2
  6044  0EF1  1003               	clrc
  6045  0EF2  0D4A               	rlf	??___ftmul+1,w
  6046  0EF3  0D4B               	rlf	??___ftmul+2,w
  6047  0EF4  00CC               	movwf	___ftmul@exp
  6048  0EF5  08CC               	movf	___ftmul@exp,f
  6049  0EF6  1D03               	skipz
  6050  0EF7  2EFC               	goto	l7845
  6051  0EF8  01C3               	clrf	?___ftmul
  6052  0EF9  01C4               	clrf	?___ftmul+1
  6053  0EFA  01C5               	clrf	?___ftmul+2
  6054  0EFB  0008               	return
  6055  0EFC                     l7845:	
  6056  0EFC  0846               	movf	___ftmul@f2,w
  6057  0EFD  00C9               	movwf	??___ftmul
  6058  0EFE  0847               	movf	___ftmul@f2+1,w
  6059  0EFF  00CA               	movwf	??___ftmul+1
  6060  0F00  0848               	movf	___ftmul@f2+2,w
  6061  0F01  00CB               	movwf	??___ftmul+2
  6062  0F02  1003               	clrc
  6063  0F03  0D4A               	rlf	??___ftmul+1,w
  6064  0F04  0D4B               	rlf	??___ftmul+2,w
  6065  0F05  00D1               	movwf	___ftmul@sign
  6066  0F06  08D1               	movf	___ftmul@sign,f
  6067  0F07  1D03               	skipz
  6068  0F08  2F0D               	goto	l7851
  6069  0F09  01C3               	clrf	?___ftmul
  6070  0F0A  01C4               	clrf	?___ftmul+1
  6071  0F0B  01C5               	clrf	?___ftmul+2
  6072  0F0C  0008               	return
  6073  0F0D                     l7851:	
  6074  0F0D  0851               	movf	___ftmul@sign,w
  6075  0F0E  3E7B               	addlw	123
  6076  0F0F  07CC               	addwf	___ftmul@exp,f
  6077  0F10  0845               	movf	___ftmul@f1+2,w
  6078  0F11  00D1               	movwf	___ftmul@sign
  6079  0F12  0848               	movf	___ftmul@f2+2,w
  6080  0F13  06D1               	xorwf	___ftmul@sign,f
  6081  0F14  3080               	movlw	128
  6082  0F15  05D1               	andwf	___ftmul@sign,f
  6083  0F16  3007               	movlw	7
  6084  0F17  17C4               	bsf	___ftmul@f1+1,7
  6085  0F18  17C7               	bsf	___ftmul@f2+1,7
  6086  0F19  01C8               	clrf	___ftmul@f2+2
  6087  0F1A  01CD               	clrf	___ftmul@f3_as_product
  6088  0F1B  01CE               	clrf	___ftmul@f3_as_product+1
  6089  0F1C  01CF               	clrf	___ftmul@f3_as_product+2
  6090  0F1D  00D0               	movwf	___ftmul@cntr
  6091  0F1E                     l7869:	
  6092  0F1E  1C43               	btfss	___ftmul@f1,0
  6093  0F1F  2F28               	goto	l7873
  6094  0F20  0846               	movf	___ftmul@f2,w
  6095  0F21  27D6  120A  158A   	fcall	PL21	;call to abstracted procedure
  6096  0F24  1803               	skipnc
  6097  0F25  0A48               	incf	___ftmul@f2+2,w
  6098  0F26  1D03               	btfss	3,2
  6099  0F27  07CF               	addwf	___ftmul@f3_as_product+2,f
  6100  0F28                     l7873:	
  6101  0F28  1003               	clrc
  6102  0F29  0CC5               	rrf	___ftmul@f1+2,f
  6103  0F2A  0CC4               	rrf	___ftmul@f1+1,f
  6104  0F2B  0CC3               	rrf	___ftmul@f1,f
  6105  0F2C  1003               	clrc
  6106  0F2D  0DC6               	rlf	___ftmul@f2,f
  6107  0F2E  0DC7               	rlf	___ftmul@f2+1,f
  6108  0F2F  0DC8               	rlf	___ftmul@f2+2,f
  6109  0F30  0BD0               	decfsz	___ftmul@cntr,f
  6110  0F31  2F1E               	goto	l7869
  6111  0F32  3009               	movlw	9
  6112  0F33  00D0               	movwf	___ftmul@cntr
  6113  0F34                     l7881:	
  6114  0F34  1C43               	btfss	___ftmul@f1,0
  6115  0F35  2F3E               	goto	l7885
  6116  0F36  0846               	movf	___ftmul@f2,w
  6117  0F37  27D6  120A  158A   	fcall	PL21	;call to abstracted procedure
  6118  0F3A  1803               	skipnc
  6119  0F3B  0A48               	incf	___ftmul@f2+2,w
  6120  0F3C  1D03               	btfss	3,2
  6121  0F3D  07CF               	addwf	___ftmul@f3_as_product+2,f
  6122  0F3E                     l7885:	
  6123  0F3E  1003               	clrc
  6124  0F3F  0CC5               	rrf	___ftmul@f1+2,f
  6125  0F40  0CC4               	rrf	___ftmul@f1+1,f
  6126  0F41  0CC3               	rrf	___ftmul@f1,f
  6127  0F42  1003               	clrc
  6128  0F43  0CCF               	rrf	___ftmul@f3_as_product+2,f
  6129  0F44  0CCE               	rrf	___ftmul@f3_as_product+1,f
  6130  0F45  0CCD               	rrf	___ftmul@f3_as_product,f
  6131  0F46  0BD0               	decfsz	___ftmul@cntr,f
  6132  0F47  2F34               	goto	l7881
  6133  0F48  084D               	movf	___ftmul@f3_as_product,w
  6134  0F49  00A8               	movwf	?___ftpack
  6135  0F4A  084E               	movf	___ftmul@f3_as_product+1,w
  6136  0F4B  00A9               	movwf	?___ftpack+1
  6137  0F4C  084F               	movf	___ftmul@f3_as_product+2,w
  6138  0F4D  00AA               	movwf	?___ftpack+2
  6139  0F4E  084C               	movf	___ftmul@exp,w
  6140  0F4F  00AB               	movwf	?___ftpack+3
  6141  0F50  0851               	movf	___ftmul@sign,w
  6142  0F51  00AC               	movwf	?___ftpack+4
  6143  0F52  2769               	fcall	___ftpack
  6144  0F53  0828               	movf	?___ftpack,w
  6145  0F54  00C3               	movwf	?___ftmul
  6146  0F55  0829               	movf	?___ftpack+1,w
  6147  0F56  00C4               	movwf	?___ftmul+1
  6148  0F57  082A               	movf	?___ftpack+2,w
  6149  0F58  00C5               	movwf	?___ftmul+2
  6150  0F59  0008               	return
  6151  0F5A                     __end_of___ftmul:	
  6152  0F5A                     __ptext779:	
  6153 ;; =============== function ___wmul ends ============
  6154                           
  6155                           
  6156 ;; *************** function ___bmul *****************
  6157 ;; Defined at:
  6158 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  multiplier      1    wreg     unsigned char 
  6161 ;;  multiplicand    1   17[BANK0 ] unsigned char 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  multiplier      1   19[BANK0 ] unsigned char 
  6164 ;;  product         1   18[BANK0 ] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      unsigned char 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0
  6169 ;; Tracked objects:
  6170 ;;		On entry : 40/0
  6171 ;;		On exit  : 60/0
  6172 ;;		Unchanged: FFF9F/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6174 ;;      Params:         0       1       0       0       0
  6175 ;;      Locals:         0       2       0       0       0
  6176 ;;      Temps:          0       0       0       0       0
  6177 ;;      Totals:         0       3       0       0       0
  6178 ;;Total ram usage:        3 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    3
  6181 ;; This function calls:
  6182 ;;		Nothing
  6183 ;; This function is called by:
  6184 ;;		_fround
  6185 ;;		_scale
  6186 ;; This function uses a non-reentrant model
  6187 ;;
  6188  0F5A                     ___bmul:	
  6189                           
  6190                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6191                           ;___bmul@multiplier stored from wreg
  6192  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  6193  0F5B  00B3               	movwf	___bmul@multiplier
  6194  0F5C  01B2               	clrf	___bmul@product
  6195  0F5D                     l6463:	
  6196  0F5D  0831               	movf	___bmul@multiplicand,w
  6197  0F5E  1833               	btfsc	___bmul@multiplier,0
  6198  0F5F  07B2               	addwf	___bmul@product,f
  6199  0F60  1003               	clrc
  6200  0F61  0DB1               	rlf	___bmul@multiplicand,f
  6201  0F62  1003               	clrc
  6202  0F63  0CB3               	rrf	___bmul@multiplier,f
  6203  0F64  08B3               	movf	___bmul@multiplier,f
  6204  0F65  1D03               	skipz
  6205  0F66  2F5D               	goto	l6463
  6206  0F67  0832               	movf	___bmul@product,w
  6207  0F68  0008               	return
  6208  0F69                     __end_of___bmul:	
  6209  0F69                     __ptext775:	
  6210 ;; =============== function ___fttol ends ============
  6211                           
  6212                           
  6213 ;; *************** function ___ftpack *****************
  6214 ;; Defined at:
  6215 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6216 ;; Parameters:    Size  Location     Type
  6217 ;;  arg             3    8[BANK0 ] unsigned um
  6218 ;;  exp             1   11[BANK0 ] unsigned char 
  6219 ;;  sign            1   12[BANK0 ] unsigned char 
  6220 ;; Auto vars:     Size  Location     Type
  6221 ;;		None
  6222 ;; Return value:  Size  Location     Type
  6223 ;;                  3    8[BANK0 ] float 
  6224 ;; Registers used:
  6225 ;;		wreg, status,2, status,0
  6226 ;; Tracked objects:
  6227 ;;		On entry : 60/0
  6228 ;;		On exit  : 60/0
  6229 ;;		Unchanged: FFF9F/0
  6230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6231 ;;      Params:         0       5       0       0       0
  6232 ;;      Locals:         0       0       0       0       0
  6233 ;;      Temps:          0       3       0       0       0
  6234 ;;      Totals:         0       8       0       0       0
  6235 ;;Total ram usage:        8 bytes
  6236 ;; Hardware stack levels used:    1
  6237 ;; Hardware stack levels required when called:    3
  6238 ;; This function calls:
  6239 ;;		Nothing
  6240 ;; This function is called by:
  6241 ;;		___ftadd
  6242 ;;		___ftmul
  6243 ;;		___altoft
  6244 ;;		___lltoft
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247  0F69                     ___ftpack:	
  6248                           
  6249                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6250  0F69  082B               	movf	___ftpack@exp,w
  6251  0F6A  1903               	btfsc	3,2
  6252  0F6B  2F71               	goto	l7737
  6253  0F6C  082A               	movf	___ftpack@arg+2,w
  6254  0F6D  0429               	iorwf	___ftpack@arg+1,w
  6255  0F6E  0428               	iorwf	___ftpack@arg,w
  6256  0F6F  1D03               	skipz
  6257  0F70  2F7A               	goto	l7743
  6258  0F71                     l7737:	
  6259  0F71  01A8               	clrf	?___ftpack
  6260  0F72  01A9               	clrf	?___ftpack+1
  6261  0F73  01AA               	clrf	?___ftpack+2
  6262  0F74  0008               	return
  6263  0F75                     l7741:	
  6264  0F75  0AAB               	incf	___ftpack@exp,f
  6265  0F76  1003               	clrc
  6266  0F77  0CAA               	rrf	___ftpack@arg+2,f
  6267  0F78  0CA9               	rrf	___ftpack@arg+1,f
  6268  0F79  0CA8               	rrf	___ftpack@arg,f
  6269  0F7A                     l7743:	
  6270  0F7A  30FE               	movlw	254
  6271  0F7B  052A               	andwf	___ftpack@arg+2,w
  6272  0F7C  1903               	btfsc	3,2
  6273  0F7D  2F89               	goto	l7747
  6274  0F7E  2F75               	goto	l7741
  6275  0F7F                     l7745:	
  6276  0F7F  0AAB               	incf	___ftpack@exp,f
  6277  0F80  0AA8               	incf	___ftpack@arg,f
  6278  0F81  1903               	skipnz
  6279  0F82  0AA9               	incf	___ftpack@arg+1,f
  6280  0F83  1903               	skipnz
  6281  0F84  0AAA               	incf	___ftpack@arg+2,f
  6282  0F85  1003               	clrc
  6283  0F86  0CAA               	rrf	___ftpack@arg+2,f
  6284  0F87  0CA9               	rrf	___ftpack@arg+1,f
  6285  0F88  0CA8               	rrf	___ftpack@arg,f
  6286  0F89                     l7747:	
  6287  0F89  30FF               	movlw	255
  6288  0F8A  052A               	andwf	___ftpack@arg+2,w
  6289  0F8B  1903               	btfsc	3,2
  6290  0F8C  2F93               	goto	l7751
  6291  0F8D  2F7F               	goto	l7745
  6292  0F8E                     l7749:	
  6293  0F8E  03AB               	decf	___ftpack@exp,f
  6294  0F8F  1003               	clrc
  6295  0F90  0DA8               	rlf	___ftpack@arg,f
  6296  0F91  0DA9               	rlf	___ftpack@arg+1,f
  6297  0F92  0DAA               	rlf	___ftpack@arg+2,f
  6298  0F93                     l7751:	
  6299  0F93  1FA9               	btfss	___ftpack@arg+1,7
  6300  0F94  2F8E               	goto	l7749
  6301  0F95  1C2B               	btfss	___ftpack@exp,0
  6302  0F96  13A9               	bcf	___ftpack@arg+1,7
  6303  0F97  1003               	clrc
  6304  0F98  0CAB               	rrf	___ftpack@exp,f
  6305  0F99  082B               	movf	___ftpack@exp,w
  6306  0F9A  00AF               	movwf	??___ftpack+2
  6307  0F9B  01AE               	clrf	??___ftpack+1
  6308  0F9C  01AD               	clrf	??___ftpack
  6309  0F9D  082D               	movf	??___ftpack,w
  6310  0F9E  04A8               	iorwf	___ftpack@arg,f
  6311  0F9F  082E               	movf	??___ftpack+1,w
  6312  0FA0  04A9               	iorwf	___ftpack@arg+1,f
  6313  0FA1  082F               	movf	??___ftpack+2,w
  6314  0FA2  04AA               	iorwf	___ftpack@arg+2,f
  6315  0FA3  082C               	movf	___ftpack@sign,w
  6316  0FA4  1D03               	skipz
  6317  0FA5  17AA               	bsf	___ftpack@arg+2,7
  6318  0FA6  0008               	return
  6319  0FA7                     __end_of___ftpack:	
  6320  0FA7                     PL11:	
  6321  0FA7  0828               	movf	?___awmod,w
  6322  0FA8  00D5               	movwf	??_scale
  6323  0FA9  0829               	movf	?___awmod+1,w
  6324  0FAA  00D6               	movwf	??_scale+1
  6325  0FAB  0855               	movf	??_scale,w
  6326  0FAC  0755               	addwf	??_scale,w
  6327  0FAD  0755               	addwf	??_scale,w
  6328  0FAE  0008               	return
  6329  0FAF                     PL12:	
  6330  0FAF  082E               	movf	?___awdiv,w
  6331  0FB0  00D7               	movwf	??_scale+2
  6332  0FB1  082F               	movf	?___awdiv+1,w
  6333  0FB2  00D8               	movwf	??_scale+3
  6334  0FB3  0857               	movf	??_scale+2,w
  6335  0FB4  0757               	addwf	??_scale+2,w
  6336  0FB5  0757               	addwf	??_scale+2,w
  6337  0FB6  0008               	return
  6338  0FB7                     PL13:	
  6339  0FB7  0843               	movf	?___ftmul,w
  6340  0FB8  00D2               	movwf	?_scale
  6341  0FB9  0844               	movf	?___ftmul+1,w
  6342  0FBA  00D3               	movwf	?_scale+1
  6343  0FBB  0845               	movf	?___ftmul+2,w
  6344  0FBC  00D4               	movwf	?_scale+2
  6345  0FBD  0008               	return
  6346  0FBE                     PL14:	
  6347  0FBE  0843               	movf	?___ftmul,w
  6348  0FBF  00D9               	movwf	_scale$4114
  6349  0FC0  0844               	movf	?___ftmul+1,w
  6350  0FC1  00DA               	movwf	_scale$4114+1
  6351  0FC2  0845               	movf	?___ftmul+2,w
  6352  0FC3  00DB               	movwf	_scale$4114+2
  6353  0FC4  300A               	movlw	10
  6354  0FC5  00A8               	movwf	?___awmod
  6355  0FC6  01A9               	clrf	?___awmod+1
  6356  0FC7  085C               	movf	scale@scl,w
  6357  0FC8  00AA               	movwf	?___awmod+2
  6358  0FC9  01AB               	clrf	?___awmod+3
  6359  0FCA  0008               	return
  6360  0FCB                     PL18:	
  6361  0FCB  00AE               	movwf	?___awdiv
  6362  0FCC  01AF               	clrf	?___awdiv+1
  6363  0FCD  085C               	movf	scale@scl,w
  6364  0FCE  00AA               	movwf	?___awmod+2
  6365  0FCF  01AB               	clrf	?___awmod+3
  6366  0FD0  1BAA               	btfsc	?___awmod+2,7
  6367  0FD1  03AB               	decf	?___awmod+3,f
  6368  0FD2  3064               	movlw	100
  6369  0FD3  00A8               	movwf	?___awmod
  6370  0FD4  01A9               	clrf	?___awmod+1
  6371  0FD5  0008               	return
  6372  0FD6                     PL21:	
  6373  0FD6  07CD               	addwf	___ftmul@f3_as_product,f
  6374  0FD7  0847               	movf	___ftmul@f2+1,w
  6375  0FD8  1103               	clrz
  6376  0FD9  1803               	skipnc
  6377  0FDA  0A47               	incf	___ftmul@f2+1,w
  6378  0FDB  1D03               	btfss	3,2
  6379  0FDC  07CE               	addwf	___ftmul@f3_as_product+1,f
  6380  0FDD  0848               	movf	___ftmul@f2+2,w
  6381  0FDE  1103               	clrz
  6382  0FDF  0008               	return
  6383  0FE0                     PL22:	
  6384  0FE0  082E               	movf	?___awdiv,w
  6385  0FE1  00D5               	movwf	??_scale
  6386  0FE2  082F               	movf	?___awdiv+1,w
  6387  0FE3  00D6               	movwf	??_scale+1
  6388  0FE4  0855               	movf	??_scale,w
  6389  0FE5  0755               	addwf	??_scale,w
  6390  0FE6  0755               	addwf	??_scale,w
  6391  0FE7  0008               	return
  6392  0FE8                     PL23:	
  6393  0FE8  00C5               	movwf	?___ftmul+2
  6394  0FE9  0859               	movf	_scale$4114,w
  6395  0FEA  00C6               	movwf	?___ftmul+3
  6396  0FEB  085A               	movf	_scale$4114+1,w
  6397  0FEC  00C7               	movwf	?___ftmul+4
  6398  0FED  085B               	movf	_scale$4114+2,w
  6399  0FEE  00C8               	movwf	?___ftmul+5
  6400  0FEF  0008               	return
  6401  0FF0                     PL24:	
  6402  0FF0  00C5               	movwf	?___ftmul+2
  6403  0FF1  3064               	movlw	100
  6404  0FF2  00AE               	movwf	?___awdiv
  6405  0FF3  01AF               	clrf	?___awdiv+1
  6406  0FF4  085C               	movf	scale@scl,w
  6407  0FF5  00B0               	movwf	?___awdiv+2
  6408  0FF6  01B1               	clrf	?___awdiv+3
  6409  0FF7  0008               	return
  6410  0FF8                     PL26:	
  6411  0FF8  00C5               	movwf	?___ftmul+2
  6412  0FF9  300A               	movlw	10
  6413  0FFA  00AE               	movwf	?___awdiv
  6414  0FFB  01AF               	clrf	?___awdiv+1
  6415  0FFC  085C               	movf	scale@scl,w
  6416  0FFD  00B0               	movwf	?___awdiv+2
  6417  0FFE  01B1               	clrf	?___awdiv+3
  6418  0FFF  0008               	return
  6419                           
  6420                           	psect	text765
  6421  1672                     __ptext765:	
  6422 ;; =============== function ___ftmul ends ============
  6423                           
  6424                           
  6425 ;; *************** function ___ftadd *****************
  6426 ;; Defined at:
  6427 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  f1              3   50[BANK0 ] float 
  6430 ;;  f2              3   53[BANK0 ] float 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  exp1            1   61[BANK0 ] unsigned char 
  6433 ;;  exp2            1   60[BANK0 ] unsigned char 
  6434 ;;  sign            1   59[BANK0 ] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  3   50[BANK0 ] float 
  6437 ;; Registers used:
  6438 ;;		wreg, status,2, status,0, pclath, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 60/0
  6441 ;;		On exit  : 60/0
  6442 ;;		Unchanged: FFF9F/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6444 ;;      Params:         0       6       0       0       0
  6445 ;;      Locals:         0       3       0       0       0
  6446 ;;      Temps:          0       3       0       0       0
  6447 ;;      Totals:         0      12       0       0       0
  6448 ;;Total ram usage:       12 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    4
  6451 ;; This function calls:
  6452 ;;		___ftpack
  6453 ;; This function is called by:
  6454 ;;		_printf
  6455 ;;		___ftsub
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458  1672                     ___ftadd:	
  6459                           
  6460                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6461  1672  0852               	movf	___ftadd@f1,w
  6462  1673  00D8               	movwf	??___ftadd
  6463  1674  0853               	movf	___ftadd@f1+1,w
  6464  1675  00D9               	movwf	??___ftadd+1
  6465  1676  0854               	movf	___ftadd@f1+2,w
  6466  1677  00DA               	movwf	??___ftadd+2
  6467  1678  1003               	clrc
  6468  1679  0D59               	rlf	??___ftadd+1,w
  6469  167A  0D5A               	rlf	??___ftadd+2,w
  6470  167B  00DD               	movwf	___ftadd@exp1
  6471  167C  0855               	movf	___ftadd@f2,w
  6472  167D  00D8               	movwf	??___ftadd
  6473  167E  0856               	movf	___ftadd@f2+1,w
  6474  167F  00D9               	movwf	??___ftadd+1
  6475  1680  0857               	movf	___ftadd@f2+2,w
  6476  1681  00DA               	movwf	??___ftadd+2
  6477  1682  1003               	clrc
  6478  1683  0D59               	rlf	??___ftadd+1,w
  6479  1684  0D5A               	rlf	??___ftadd+2,w
  6480  1685  00DC               	movwf	___ftadd@exp2
  6481  1686  085D               	movf	___ftadd@exp1,w
  6482  1687  1903               	btfsc	3,2
  6483  1688  2E95               	goto	l7769
  6484  1689  085C               	movf	___ftadd@exp2,w
  6485  168A  025D               	subwf	___ftadd@exp1,w
  6486  168B  085C               	movf	___ftadd@exp2,w
  6487  168C  1803               	skipnc
  6488  168D  2E9D               	goto	L7
  6489  168E  00D8               	movwf	??___ftadd
  6490  168F  085D               	movf	___ftadd@exp1,w
  6491  1690  02D8               	subwf	??___ftadd,f
  6492  1691  3019               	movlw	25
  6493  1692  0258               	subwf	??___ftadd,w
  6494  1693  1C03               	skipc
  6495  1694  2E9C               	goto	l7773
  6496  1695                     l7769:	
  6497  1695  0855               	movf	___ftadd@f2,w
  6498  1696  00D2               	movwf	?___ftadd
  6499  1697  0856               	movf	___ftadd@f2+1,w
  6500  1698  00D3               	movwf	?___ftadd+1
  6501  1699  0857               	movf	___ftadd@f2+2,w
  6502  169A  00D4               	movwf	?___ftadd+2
  6503  169B  0008               	return
  6504  169C                     l7773:	
  6505  169C  085C               	movf	___ftadd@exp2,w
  6506  169D                     L7:	
  6507  169D  1903               	btfsc	3,2
  6508  169E  0008               	return
  6509  169F  085D               	movf	___ftadd@exp1,w
  6510  16A0  025C               	subwf	___ftadd@exp2,w
  6511  16A1  1803               	skipnc
  6512  16A2  2EAB               	goto	l7779
  6513  16A3  085D               	movf	___ftadd@exp1,w
  6514  16A4  00D8               	movwf	??___ftadd
  6515  16A5  085C               	movf	___ftadd@exp2,w
  6516  16A6  02D8               	subwf	??___ftadd,f
  6517  16A7  3019               	movlw	25
  6518  16A8  0258               	subwf	??___ftadd,w
  6519  16A9  1803               	btfsc	3,0
  6520  16AA  0008               	return
  6521  16AB                     l7779:	
  6522  16AB  3006               	movlw	6
  6523  16AC  00DB               	movwf	___ftadd@sign
  6524  16AD  1BD4               	btfsc	___ftadd@f1+2,7
  6525  16AE  17DB               	bsf	___ftadd@sign,7
  6526  16AF  1BD7               	btfsc	___ftadd@f2+2,7
  6527  16B0  175B               	bsf	___ftadd@sign,6
  6528  16B1  17D3               	bsf	___ftadd@f1+1,7
  6529  16B2  01D4               	clrf	___ftadd@f1+2
  6530  16B3  17D6               	bsf	___ftadd@f2+1,7
  6531  16B4  01D7               	clrf	___ftadd@f2+2
  6532  16B5  085C               	movf	___ftadd@exp2,w
  6533  16B6  025D               	subwf	___ftadd@exp1,w
  6534  16B7  1803               	skipnc
  6535  16B8  2ED2               	goto	l7801
  6536  16B9                     l7791:	
  6537  16B9  1003               	clrc
  6538  16BA  0DD5               	rlf	___ftadd@f2,f
  6539  16BB  0DD6               	rlf	___ftadd@f2+1,f
  6540  16BC  0DD7               	rlf	___ftadd@f2+2,f
  6541  16BD  03DC               	decf	___ftadd@exp2,f
  6542  16BE  085C               	movf	___ftadd@exp2,w
  6543  16BF  065D               	xorwf	___ftadd@exp1,w
  6544  16C0  1903               	skipnz
  6545  16C1  2ECD               	goto	l7799
  6546  16C2  03DB               	decf	___ftadd@sign,f
  6547  16C3  085B               	movf	___ftadd@sign,w
  6548  16C4  3907               	andlw	7
  6549  16C5  1903               	btfsc	3,2
  6550  16C6  2ECD               	goto	l7799
  6551  16C7  2EB9               	goto	l7791
  6552  16C8                     l7797:	
  6553  16C8  1003               	clrc
  6554  16C9  0CD4               	rrf	___ftadd@f1+2,f
  6555  16CA  0CD3               	rrf	___ftadd@f1+1,f
  6556  16CB  0CD2               	rrf	___ftadd@f1,f
  6557  16CC  0ADD               	incf	___ftadd@exp1,f
  6558  16CD                     l7799:	
  6559  16CD  085D               	movf	___ftadd@exp1,w
  6560  16CE  065C               	xorwf	___ftadd@exp2,w
  6561  16CF  1903               	btfsc	3,2
  6562  16D0  2EEE               	goto	l3362
  6563  16D1  2EC8               	goto	l7797
  6564  16D2                     l7801:	
  6565  16D2  085D               	movf	___ftadd@exp1,w
  6566  16D3  025C               	subwf	___ftadd@exp2,w
  6567  16D4  1803               	skipnc
  6568  16D5  2EEE               	goto	l3362
  6569  16D6                     l7803:	
  6570  16D6  1003               	clrc
  6571  16D7  0DD2               	rlf	___ftadd@f1,f
  6572  16D8  0DD3               	rlf	___ftadd@f1+1,f
  6573  16D9  0DD4               	rlf	___ftadd@f1+2,f
  6574  16DA  03DD               	decf	___ftadd@exp1,f
  6575  16DB  085C               	movf	___ftadd@exp2,w
  6576  16DC  065D               	xorwf	___ftadd@exp1,w
  6577  16DD  1903               	skipnz
  6578  16DE  2EEA               	goto	l7811
  6579  16DF  03DB               	decf	___ftadd@sign,f
  6580  16E0  085B               	movf	___ftadd@sign,w
  6581  16E1  3907               	andlw	7
  6582  16E2  1903               	btfsc	3,2
  6583  16E3  2EEA               	goto	l7811
  6584  16E4  2ED6               	goto	l7803
  6585  16E5                     l7809:	
  6586  16E5  1003               	clrc
  6587  16E6  0CD7               	rrf	___ftadd@f2+2,f
  6588  16E7  0CD6               	rrf	___ftadd@f2+1,f
  6589  16E8  0CD5               	rrf	___ftadd@f2,f
  6590  16E9  0ADC               	incf	___ftadd@exp2,f
  6591  16EA                     l7811:	
  6592  16EA  085D               	movf	___ftadd@exp1,w
  6593  16EB  065C               	xorwf	___ftadd@exp2,w
  6594  16EC  1D03               	skipz
  6595  16ED  2EE5               	goto	l7809
  6596  16EE                     l3362:	
  6597  16EE  1FDB               	btfss	___ftadd@sign,7
  6598  16EF  2EF9               	goto	l7817
  6599  16F0  30FF               	movlw	255
  6600  16F1  06D2               	xorwf	___ftadd@f1,f
  6601  16F2  06D3               	xorwf	___ftadd@f1+1,f
  6602  16F3  06D4               	xorwf	___ftadd@f1+2,f
  6603  16F4  0AD2               	incf	___ftadd@f1,f
  6604  16F5  1903               	skipnz
  6605  16F6  0AD3               	incf	___ftadd@f1+1,f
  6606  16F7  1903               	skipnz
  6607  16F8  0AD4               	incf	___ftadd@f1+2,f
  6608  16F9                     l7817:	
  6609  16F9  1F5B               	btfss	___ftadd@sign,6
  6610  16FA  2F04               	goto	l7823
  6611  16FB  30FF               	movlw	255
  6612  16FC  06D5               	xorwf	___ftadd@f2,f
  6613  16FD  06D6               	xorwf	___ftadd@f2+1,f
  6614  16FE  06D7               	xorwf	___ftadd@f2+2,f
  6615  16FF  0AD5               	incf	___ftadd@f2,f
  6616  1700  1903               	skipnz
  6617  1701  0AD6               	incf	___ftadd@f2+1,f
  6618  1702  1903               	skipnz
  6619  1703  0AD7               	incf	___ftadd@f2+2,f
  6620  1704                     l7823:	
  6621  1704  01DB               	clrf	___ftadd@sign
  6622  1705  0852               	movf	___ftadd@f1,w
  6623  1706  07D5               	addwf	___ftadd@f2,f
  6624  1707  0853               	movf	___ftadd@f1+1,w
  6625  1708  1103               	clrz
  6626  1709  1803               	skipnc
  6627  170A  0A53               	incf	___ftadd@f1+1,w
  6628  170B  1D03               	btfss	3,2
  6629  170C  07D6               	addwf	___ftadd@f2+1,f
  6630  170D  0854               	movf	___ftadd@f1+2,w
  6631  170E  1103               	clrz
  6632  170F  1803               	skipnc
  6633  1710  0A54               	incf	___ftadd@f1+2,w
  6634  1711  1D03               	btfss	3,2
  6635  1712  07D7               	addwf	___ftadd@f2+2,f
  6636  1713  1FD7               	btfss	___ftadd@f2+2,7
  6637  1714  2F20               	goto	l7835
  6638  1715  30FF               	movlw	255
  6639  1716  06D5               	xorwf	___ftadd@f2,f
  6640  1717  06D6               	xorwf	___ftadd@f2+1,f
  6641  1718  06D7               	xorwf	___ftadd@f2+2,f
  6642  1719  0AD5               	incf	___ftadd@f2,f
  6643  171A  1903               	skipnz
  6644  171B  0AD6               	incf	___ftadd@f2+1,f
  6645  171C  1903               	skipnz
  6646  171D  0AD7               	incf	___ftadd@f2+2,f
  6647  171E  01DB               	clrf	___ftadd@sign
  6648  171F  0ADB               	incf	___ftadd@sign,f
  6649  1720                     l7835:	
  6650  1720  0855               	movf	___ftadd@f2,w
  6651  1721  00A8               	movwf	?___ftpack
  6652  1722  0856               	movf	___ftadd@f2+1,w
  6653  1723  00A9               	movwf	?___ftpack+1
  6654  1724  0857               	movf	___ftadd@f2+2,w
  6655  1725  00AA               	movwf	?___ftpack+2
  6656  1726  085D               	movf	___ftadd@exp1,w
  6657  1727  00AB               	movwf	?___ftpack+3
  6658  1728  085B               	movf	___ftadd@sign,w
  6659  1729  00AC               	movwf	?___ftpack+4
  6660  172A  120A  158A  2769   	fcall	___ftpack
  6661  172D  0828               	movf	?___ftpack,w
  6662  172E  00D2               	movwf	?___ftadd
  6663  172F  0829               	movf	?___ftpack+1,w
  6664  1730  00D3               	movwf	?___ftadd+1
  6665  1731  082A               	movf	?___ftpack+2,w
  6666  1732  00D4               	movwf	?___ftadd+2
  6667  1733  0008               	return
  6668  1734                     __end_of___ftadd:	
  6669                           
  6670                           	psect	text780
  6671  1734                     __ptext780:	
  6672 ;; =============== function ___bmul ends ============
  6673                           
  6674                           
  6675 ;; *************** function __div_to_l_ *****************
  6676 ;; Defined at:
  6677 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  f1              3    8[BANK0 ] unsigned char 
  6680 ;;  f2              3   11[BANK0 ] unsigned char 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;  quot            4   22[BANK0 ] unsigned long 
  6683 ;;  exp1            1   27[BANK0 ] unsigned char 
  6684 ;;  cntr            1   26[BANK0 ] unsigned char 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  4    8[BANK0 ] unsigned long 
  6687 ;; Registers used:
  6688 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 60/0
  6692 ;;		Unchanged: FFE9F/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6694 ;;      Params:         0       6       0       0       0
  6695 ;;      Locals:         0       6       0       0       0
  6696 ;;      Temps:          0       8       0       0       0
  6697 ;;      Totals:         0      20       0       0       0
  6698 ;;Total ram usage:       20 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    3
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_printf
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707  1734                     __div_to_l_:	
  6708                           
  6709                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6710  1734  3028               	movlw	low __div_to_l_@f1
  6711  1735  0084               	movwf	4
  6712  1736  1383               	bcf	3,7	;select IRP bank0
  6713  1737  0800               	movf	0,w
  6714  1738  1283               	bcf	3,5	;RP0=0, select bank0
  6715  1739  1303               	bcf	3,6	;RP1=0, select bank0
  6716  173A  00AE               	movwf	??__div_to_l_
  6717  173B  0A84               	incf	4,f
  6718  173C  0800               	movf	0,w
  6719  173D  00AF               	movwf	??__div_to_l_+1
  6720  173E  0A84               	incf	4,f
  6721  173F  0800               	movf	0,w
  6722  1740  00B0               	movwf	??__div_to_l_+2
  6723  1741  0A84               	incf	4,f
  6724  1742  0800               	movf	0,w
  6725  1743  00B1               	movwf	??__div_to_l_+3
  6726  1744  1003               	clrc
  6727  1745  0D30               	rlf	??__div_to_l_+2,w
  6728  1746  0D31               	rlf	??__div_to_l_+3,w
  6729  1747  00BB               	movwf	__div_to_l_@exp1
  6730  1748  08BB               	movf	__div_to_l_@exp1,f
  6731  1749  1D03               	skipz
  6732  174A  2F50               	goto	l6419
  6733  174B                     l6417:	
  6734  174B  01A8               	clrf	?__div_to_l_
  6735  174C  01A9               	clrf	?__div_to_l_+1
  6736  174D  01AA               	clrf	?__div_to_l_+2
  6737  174E  01AB               	clrf	?__div_to_l_+3
  6738  174F  0008               	return
  6739  1750                     l6419:	
  6740  1750  302B               	movlw	low __div_to_l_@f2
  6741  1751  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6742  1754  1003               	clrc
  6743  1755  0D30               	rlf	??__div_to_l_+2,w
  6744  1756  0D31               	rlf	??__div_to_l_+3,w
  6745  1757  00BA               	movwf	__div_to_l_@cntr
  6746  1758  08BA               	movf	__div_to_l_@cntr,f
  6747  1759  1903               	btfsc	3,2
  6748  175A  2F4B               	goto	l6417
  6749  175B  3028               	movlw	low __div_to_l_@f1
  6750  175C  0084               	movwf	4
  6751  175D  3080               	movlw	128
  6752  175E  0A84               	incf	4,f
  6753  175F  0A84               	incf	4,f
  6754  1760  0480               	iorwf	0,f
  6755  1761  3028               	movlw	low __div_to_l_@f1
  6756  1762  0A84               	incf	4,f
  6757  1763  0084               	movwf	4
  6758  1764  302B               	movlw	low __div_to_l_@f2
  6759  1765  0A84               	incf	4,f
  6760  1766  0A84               	incf	4,f
  6761  1767  0A84               	incf	4,f
  6762  1768  0180               	clrf	0
  6763  1769  0084               	movwf	4
  6764  176A  3080               	movlw	128
  6765  176B  0A84               	incf	4,f
  6766  176C  0A84               	incf	4,f
  6767  176D  0480               	iorwf	0,f
  6768  176E  302B               	movlw	low __div_to_l_@f2
  6769  176F  0A84               	incf	4,f
  6770  1770  0084               	movwf	4
  6771  1771  307F               	movlw	127
  6772  1772  0A84               	incf	4,f
  6773  1773  0A84               	incf	4,f
  6774  1774  0A84               	incf	4,f
  6775  1775  0180               	clrf	0
  6776  1776  01B6               	clrf	__div_to_l_@quot
  6777  1777  01B7               	clrf	__div_to_l_@quot+1
  6778  1778  01B8               	clrf	__div_to_l_@quot+2
  6779  1779  01B9               	clrf	__div_to_l_@quot+3
  6780  177A  02BB               	subwf	__div_to_l_@exp1,f
  6781  177B  30A0               	movlw	160
  6782  177C  073A               	addwf	__div_to_l_@cntr,w
  6783  177D  00AE               	movwf	??__div_to_l_
  6784  177E  02BB               	subwf	__div_to_l_@exp1,f
  6785  177F  3020               	movlw	32
  6786  1780  00BA               	movwf	__div_to_l_@cntr
  6787  1781                     l6433:	
  6788  1781  302B               	movlw	low __div_to_l_@f2
  6789  1782  1003               	clrc
  6790  1783  0DB6               	rlf	__div_to_l_@quot,f
  6791  1784  0DB7               	rlf	__div_to_l_@quot+1,f
  6792  1785  0DB8               	rlf	__div_to_l_@quot+2,f
  6793  1786  0DB9               	rlf	__div_to_l_@quot+3,f
  6794  1787  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6795  178A  3028               	movlw	low __div_to_l_@f1
  6796  178B  0084               	movwf	4
  6797  178C  0800               	movf	0,w
  6798  178D  00B2               	movwf	??__div_to_l_+4
  6799  178E  0A84               	incf	4,f
  6800  178F  0800               	movf	0,w
  6801  1790  00B3               	movwf	??__div_to_l_+5
  6802  1791  0A84               	incf	4,f
  6803  1792  0800               	movf	0,w
  6804  1793  00B4               	movwf	??__div_to_l_+6
  6805  1794  0A84               	incf	4,f
  6806  1795  0800               	movf	0,w
  6807  1796  00B5               	movwf	??__div_to_l_+7
  6808  1797  0831               	movf	??__div_to_l_+3,w
  6809  1798  0235               	subwf	??__div_to_l_+7,w
  6810  1799  1D03               	skipz
  6811  179A  2FA5               	goto	u2685
  6812  179B  0830               	movf	??__div_to_l_+2,w
  6813  179C  0234               	subwf	??__div_to_l_+6,w
  6814  179D  1D03               	skipz
  6815  179E  2FA5               	goto	u2685
  6816  179F  082F               	movf	??__div_to_l_+1,w
  6817  17A0  0233               	subwf	??__div_to_l_+5,w
  6818  17A1  1D03               	skipz
  6819  17A2  2FA5               	goto	u2685
  6820  17A3  082E               	movf	??__div_to_l_,w
  6821  17A4  0232               	subwf	??__div_to_l_+4,w
  6822  17A5                     u2685:	
  6823  17A5  1C03               	skipc
  6824  17A6  2FC1               	goto	l3591
  6825  17A7  302B               	movlw	low __div_to_l_@f2
  6826  17A8  27F3  160A  118A   	fcall	PL3	;call to abstracted procedure
  6827  17AB  3028               	movlw	low __div_to_l_@f1
  6828  17AC  0084               	movwf	4
  6829  17AD  082E               	movf	??__div_to_l_,w
  6830  17AE  0280               	subwf	0,f
  6831  17AF  0A84               	incf	4,f
  6832  17B0  082F               	movf	??__div_to_l_+1,w
  6833  17B1  1C03               	skipc
  6834  17B2  0F2F               	incfsz	??__div_to_l_+1,w
  6835  17B3  0280               	subwf	0,f
  6836  17B4  0A84               	incf	4,f
  6837  17B5  0830               	movf	??__div_to_l_+2,w
  6838  17B6  1C03               	skipc
  6839  17B7  0F30               	incfsz	??__div_to_l_+2,w
  6840  17B8  0280               	subwf	0,f
  6841  17B9  0A84               	incf	4,f
  6842  17BA  0831               	movf	??__div_to_l_+3,w
  6843  17BB  1C03               	skipc
  6844  17BC  0A31               	incf	??__div_to_l_+3,w
  6845  17BD  0280               	subwf	0,f
  6846  17BE  3003               	movlw	3
  6847  17BF  0284               	subwf	4,f
  6848  17C0  1436               	bsf	__div_to_l_@quot,0
  6849  17C1                     l3591:	
  6850  17C1  3028               	movlw	low __div_to_l_@f1
  6851  17C2  0084               	movwf	4
  6852  17C3  1003               	clrc
  6853  17C4  0D80               	rlf	0,f
  6854  17C5  0A84               	incf	4,f
  6855  17C6  0D80               	rlf	0,f
  6856  17C7  0A84               	incf	4,f
  6857  17C8  0D80               	rlf	0,f
  6858  17C9  0A84               	incf	4,f
  6859  17CA  0D80               	rlf	0,f
  6860  17CB  0BBA               	decfsz	__div_to_l_@cntr,f
  6861  17CC  2F81               	goto	l6433
  6862  17CD  1FBB               	btfss	__div_to_l_@exp1,7
  6863  17CE  2FDC               	goto	l6451
  6864  17CF  083B               	movf	__div_to_l_@exp1,w
  6865  17D0  3A80               	xorlw	128
  6866  17D1  3E9F               	addlw	159
  6867  17D2  1C03               	btfss	3,0
  6868  17D3  2F4B               	goto	l6417
  6869  17D4                     l6447:	
  6870  17D4  1003               	clrc
  6871  17D5  0CB9               	rrf	__div_to_l_@quot+3,f
  6872  17D6  0CB8               	rrf	__div_to_l_@quot+2,f
  6873  17D7  0CB7               	rrf	__div_to_l_@quot+1,f
  6874  17D8  0CB6               	rrf	__div_to_l_@quot,f
  6875  17D9  0FBB               	incfsz	__div_to_l_@exp1,f
  6876  17DA  2FD4               	goto	l6447
  6877  17DB  2FEA               	goto	l6457
  6878  17DC                     l6451:	
  6879  17DC  3020               	movlw	32
  6880  17DD  023B               	subwf	__div_to_l_@exp1,w
  6881  17DE  1803               	btfsc	3,0
  6882  17DF  2F4B               	goto	l6417
  6883  17E0                     l3599:	
  6884  17E0  08BB               	movf	__div_to_l_@exp1,f
  6885  17E1  1903               	btfsc	3,2
  6886  17E2  2FEA               	goto	l6457
  6887  17E3  1003               	clrc
  6888  17E4  0DB6               	rlf	__div_to_l_@quot,f
  6889  17E5  0DB7               	rlf	__div_to_l_@quot+1,f
  6890  17E6  0DB8               	rlf	__div_to_l_@quot+2,f
  6891  17E7  0DB9               	rlf	__div_to_l_@quot+3,f
  6892  17E8  03BB               	decf	__div_to_l_@exp1,f
  6893  17E9  2FE0               	goto	l3599
  6894  17EA                     l6457:	
  6895  17EA  0839               	movf	__div_to_l_@quot+3,w
  6896  17EB  00AB               	movwf	?__div_to_l_+3
  6897  17EC  0838               	movf	__div_to_l_@quot+2,w
  6898  17ED  00AA               	movwf	?__div_to_l_+2
  6899  17EE  0837               	movf	__div_to_l_@quot+1,w
  6900  17EF  00A9               	movwf	?__div_to_l_+1
  6901  17F0  0836               	movf	__div_to_l_@quot,w
  6902  17F1  00A8               	movwf	?__div_to_l_
  6903  17F2  0008               	return
  6904  17F3                     __end_of__div_to_l_:	
  6905  17F3                     PL3:	
  6906  17F3  0084               	movwf	4
  6907  17F4  0800               	movf	0,w
  6908  17F5  00AE               	movwf	??__div_to_l_
  6909  17F6  0A84               	incf	4,f
  6910  17F7  0800               	movf	0,w
  6911  17F8  00AF               	movwf	??__div_to_l_+1
  6912  17F9  0A84               	incf	4,f
  6913  17FA  0800               	movf	0,w
  6914  17FB  00B0               	movwf	??__div_to_l_+2
  6915  17FC  0A84               	incf	4,f
  6916  17FD  0800               	movf	0,w
  6917  17FE  00B1               	movwf	??__div_to_l_+3
  6918  17FF  0008               	return
  6919                           
  6920                           	psect	text784
  6921  0809                     __ptext784:	
  6922 ;; =============== function _isprint ends ============
  6923                           
  6924                           
  6925 ;; *************** function _ngat *****************
  6926 ;; Defined at:
  6927 ;;		line 66 in file "D:\TTVXL\Project TTVXL\BT02week12ttvxl\BT02week12ttvxl.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;		None
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;		None               void
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, status,0, pclath, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 60/0
  6939 ;;		Unchanged: FFF9F/0
  6940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6941 ;;      Params:         0       0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0
  6943 ;;      Temps:          0       2       0       0       0
  6944 ;;      Totals:         0       2       0       0       0
  6945 ;;Total ram usage:        2 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    2
  6948 ;; This function calls:
  6949 ;;		i1___ftadd
  6950 ;; This function is called by:
  6951 ;;		Interrupt level 1
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954  0809                     _ngat:	
  6955                           
  6956                           ;BT02week12ttvxl.c: 67: TMR0 = 7;
  6957  0809  3007               	movlw	7
  6958  080A  0081               	movwf	1	;volatile
  6959                           
  6960                           ;BT02week12ttvxl.c: 68: if(T0IF)
  6961  080B  1D0B               	btfss	11,2
  6962  080C  283C               	goto	L20
  6963                           
  6964                           ;BT02week12ttvxl.c: 69: {
  6965                           ;BT02week12ttvxl.c: 70: dem++;
  6966  080D  3080               	movlw	128
  6967  080E  01F8               	clrf	?i1___ftadd
  6968  080F  00F9               	movwf	?i1___ftadd+1
  6969  0810  303F               	movlw	63
  6970  0811  00FA               	movwf	?i1___ftadd+2
  6971  0812  0864               	movf	_dem,w
  6972  0813  00FB               	movwf	?i1___ftadd+3
  6973  0814  0865               	movf	_dem+1,w
  6974  0815  00FC               	movwf	?i1___ftadd+4
  6975  0816  0866               	movf	_dem+2,w
  6976  0817  00FD               	movwf	?i1___ftadd+5
  6977  0818  2043  120A  158A   	fcall	i1___ftadd
  6978  081B  0878               	movf	?i1___ftadd,w
  6979  081C  00E4               	movwf	_dem
  6980  081D  0879               	movf	?i1___ftadd+1,w
  6981  081E  00E5               	movwf	_dem+1
  6982  081F  087A               	movf	?i1___ftadd+2,w
  6983  0820  00E6               	movwf	_dem+2
  6984                           
  6985                           ;BT02week12ttvxl.c: 71: if(dem == 2500){
  6986  0821  3A45               	xorlw	69
  6987  0822  1D03               	skipz
  6988  0823  282A               	goto	u252_25
  6989  0824  301C               	movlw	28
  6990  0825  0665               	xorwf	_dem+1,w
  6991  0826  1D03               	skipz
  6992  0827  282A               	goto	u252_25
  6993  0828  3040               	movlw	64
  6994  0829  0664               	xorwf	_dem,w
  6995  082A                     u252_25:	
  6996  082A  1D03               	skipz
  6997  082B  283B               	goto	i1l6341
  6998                           
  6999                           ;BT02week12ttvxl.c: 72: dem= 0;
  7000  082C  01E4               	clrf	_dem
  7001  082D  01E5               	clrf	_dem+1
  7002  082E  01E6               	clrf	_dem+2
  7003                           
  7004                           ;BT02week12ttvxl.c: 73: xung = TMR1;
  7005  082F  080E               	movf	14,w	;volatile
  7006  0830  1683               	bsf	3,5	;RP0=1, select bank1
  7007  0831  00C9               	movwf	_xung^(0+128)
  7008  0832  1283               	bcf	3,5	;RP0=0, select bank0
  7009  0833  080F               	movf	15,w	;volatile
  7010  0834  1683               	bsf	3,5	;RP0=1, select bank1
  7011  0835  00CA               	movwf	(_xung^(0+128)+1)
  7012  0836  01CB               	clrf	(_xung^(0+128)+2)
  7013  0837  01CC               	clrf	(_xung^(0+128)+3)
  7014                           
  7015                           ;BT02week12ttvxl.c: 74: TMR1H=0; TMR1L=0;
  7016  0838  1283               	bcf	3,5	;RP0=0, select bank0
  7017  0839  018F               	clrf	15	;volatile
  7018  083A  018E               	clrf	14	;volatile
  7019  083B                     i1l6341:	
  7020                           
  7021                           ;BT02week12ttvxl.c: 75: }
  7022                           ;BT02week12ttvxl.c: 76: }
  7023                           ;BT02week12ttvxl.c: 77: T0IF = 0;
  7024  083B  110B               	bcf	11,2
  7025  083C                     L20:	
  7026  083C  0827               	movf	??_ngat+1,w
  7027  083D  008A               	movwf	10
  7028  083E  0E26               	swapf	??_ngat^0,w
  7029  083F  0083               	movwf	3
  7030  0840  0EFE               	swapf	126,f
  7031  0841  0E7E               	swapf	126,w
  7032  0842  0009               	retfie
  7033  0843                     __end_of_ngat:	
  7034  0843                     __ptext785:	
  7035 ;; =============== function _ngat ends ============
  7036                           
  7037                           
  7038 ;; *************** function i1___ftadd *****************
  7039 ;; Defined at:
  7040 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  __ftadd         3    8[COMMON] float 
  7043 ;;  __ftadd         3   11[COMMON] float 
  7044 ;; Auto vars:     Size  Location     Type
  7045 ;;  __ftadd         1    5[BANK0 ] unsigned char 
  7046 ;;  __ftadd         1    4[BANK0 ] unsigned char 
  7047 ;;  __ftadd         1    3[BANK0 ] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  3    8[COMMON] float 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0, pclath, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 60/0
  7054 ;;		On exit  : 60/0
  7055 ;;		Unchanged: FFF9F/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7057 ;;      Params:         6       0       0       0       0
  7058 ;;      Locals:         0       3       0       0       0
  7059 ;;      Temps:          0       3       0       0       0
  7060 ;;      Totals:         6       6       0       0       0
  7061 ;;Total ram usage:       12 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; Hardware stack levels required when called:    1
  7064 ;; This function calls:
  7065 ;;		i1___ftpack
  7066 ;; This function is called by:
  7067 ;;		_ngat
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070  0843                     i1___ftadd:	
  7071                           
  7072                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7073  0843  0878               	movf	i1___ftadd@f1,w
  7074  0844  00A0               	movwf	??i1___ftadd
  7075  0845  0879               	movf	i1___ftadd@f1+1,w
  7076  0846  00A1               	movwf	??i1___ftadd+1
  7077  0847  087A               	movf	i1___ftadd@f1+2,w
  7078  0848  00A2               	movwf	??i1___ftadd+2
  7079  0849  1003               	clrc
  7080  084A  0D21               	rlf	??i1___ftadd+1,w
  7081  084B  0D22               	rlf	??i1___ftadd+2,w
  7082  084C  00A5               	movwf	i1___ftadd@exp1
  7083  084D  087B               	movf	i1___ftadd@f2,w
  7084  084E  00A0               	movwf	??i1___ftadd
  7085  084F  087C               	movf	i1___ftadd@f2+1,w
  7086  0850  00A1               	movwf	??i1___ftadd+1
  7087  0851  087D               	movf	i1___ftadd@f2+2,w
  7088  0852  00A2               	movwf	??i1___ftadd+2
  7089  0853  1003               	clrc
  7090  0854  0D21               	rlf	??i1___ftadd+1,w
  7091  0855  0D22               	rlf	??i1___ftadd+2,w
  7092  0856  00A4               	movwf	i1___ftadd@exp2
  7093  0857  0825               	movf	i1___ftadd@exp1,w
  7094  0858  1903               	btfsc	3,2
  7095  0859  2866               	goto	i1l6763
  7096  085A  0824               	movf	i1___ftadd@exp2,w
  7097  085B  0225               	subwf	i1___ftadd@exp1,w
  7098  085C  0824               	movf	i1___ftadd@exp2,w
  7099  085D  1803               	skipnc
  7100  085E  286E               	goto	L21
  7101  085F  00A0               	movwf	??i1___ftadd
  7102  0860  0825               	movf	i1___ftadd@exp1,w
  7103  0861  02A0               	subwf	??i1___ftadd,f
  7104  0862  3019               	movlw	25
  7105  0863  0220               	subwf	??i1___ftadd,w
  7106  0864  1C03               	skipc
  7107  0865  286D               	goto	i1l6767
  7108  0866                     i1l6763:	
  7109  0866  087B               	movf	i1___ftadd@f2,w
  7110  0867  00F8               	movwf	?i1___ftadd
  7111  0868  087C               	movf	i1___ftadd@f2+1,w
  7112  0869  00F9               	movwf	?i1___ftadd+1
  7113  086A  087D               	movf	i1___ftadd@f2+2,w
  7114  086B  00FA               	movwf	?i1___ftadd+2
  7115  086C  0008               	return
  7116  086D                     i1l6767:	
  7117  086D  0824               	movf	i1___ftadd@exp2,w
  7118  086E                     L21:	
  7119  086E  1903               	btfsc	3,2
  7120  086F  0008               	return
  7121  0870  0825               	movf	i1___ftadd@exp1,w
  7122  0871  0224               	subwf	i1___ftadd@exp2,w
  7123  0872  1803               	skipnc
  7124  0873  287C               	goto	i1l6773
  7125  0874  0825               	movf	i1___ftadd@exp1,w
  7126  0875  00A0               	movwf	??i1___ftadd
  7127  0876  0824               	movf	i1___ftadd@exp2,w
  7128  0877  02A0               	subwf	??i1___ftadd,f
  7129  0878  3019               	movlw	25
  7130  0879  0220               	subwf	??i1___ftadd,w
  7131  087A  1803               	btfsc	3,0
  7132  087B  0008               	return
  7133  087C                     i1l6773:	
  7134  087C  3006               	movlw	6
  7135  087D  00A3               	movwf	i1___ftadd@sign
  7136  087E  1BFA               	btfsc	i1___ftadd@f1+2,7
  7137  087F  17A3               	bsf	i1___ftadd@sign,7
  7138  0880  1BFD               	btfsc	i1___ftadd@f2+2,7
  7139  0881  1723               	bsf	i1___ftadd@sign,6
  7140  0882  17F9               	bsf	i1___ftadd@f1+1,7
  7141  0883  01FA               	clrf	i1___ftadd@f1+2
  7142  0884  17FC               	bsf	i1___ftadd@f2+1,7
  7143  0885  01FD               	clrf	i1___ftadd@f2+2
  7144  0886  0824               	movf	i1___ftadd@exp2,w
  7145  0887  0225               	subwf	i1___ftadd@exp1,w
  7146  0888  1803               	skipnc
  7147  0889  28A3               	goto	i1l6795
  7148  088A                     i1l6785:	
  7149  088A  1003               	clrc
  7150  088B  0DFB               	rlf	i1___ftadd@f2,f
  7151  088C  0DFC               	rlf	i1___ftadd@f2+1,f
  7152  088D  0DFD               	rlf	i1___ftadd@f2+2,f
  7153  088E  03A4               	decf	i1___ftadd@exp2,f
  7154  088F  0824               	movf	i1___ftadd@exp2,w
  7155  0890  0625               	xorwf	i1___ftadd@exp1,w
  7156  0891  1903               	skipnz
  7157  0892  289E               	goto	i1l6793
  7158  0893  03A3               	decf	i1___ftadd@sign,f
  7159  0894  0823               	movf	i1___ftadd@sign,w
  7160  0895  3907               	andlw	7
  7161  0896  1903               	btfsc	3,2
  7162  0897  289E               	goto	i1l6793
  7163  0898  288A               	goto	i1l6785
  7164  0899                     i1l6791:	
  7165  0899  1003               	clrc
  7166  089A  0CFA               	rrf	i1___ftadd@f1+2,f
  7167  089B  0CF9               	rrf	i1___ftadd@f1+1,f
  7168  089C  0CF8               	rrf	i1___ftadd@f1,f
  7169  089D  0AA5               	incf	i1___ftadd@exp1,f
  7170  089E                     i1l6793:	
  7171  089E  0825               	movf	i1___ftadd@exp1,w
  7172  089F  0624               	xorwf	i1___ftadd@exp2,w
  7173  08A0  1903               	btfsc	3,2
  7174  08A1  28BF               	goto	i1l3362
  7175  08A2  2899               	goto	i1l6791
  7176  08A3                     i1l6795:	
  7177  08A3  0825               	movf	i1___ftadd@exp1,w
  7178  08A4  0224               	subwf	i1___ftadd@exp2,w
  7179  08A5  1803               	skipnc
  7180  08A6  28BF               	goto	i1l3362
  7181  08A7                     i1l6797:	
  7182  08A7  1003               	clrc
  7183  08A8  0DF8               	rlf	i1___ftadd@f1,f
  7184  08A9  0DF9               	rlf	i1___ftadd@f1+1,f
  7185  08AA  0DFA               	rlf	i1___ftadd@f1+2,f
  7186  08AB  03A5               	decf	i1___ftadd@exp1,f
  7187  08AC  0824               	movf	i1___ftadd@exp2,w
  7188  08AD  0625               	xorwf	i1___ftadd@exp1,w
  7189  08AE  1903               	skipnz
  7190  08AF  28BB               	goto	i1l6805
  7191  08B0  03A3               	decf	i1___ftadd@sign,f
  7192  08B1  0823               	movf	i1___ftadd@sign,w
  7193  08B2  3907               	andlw	7
  7194  08B3  1903               	btfsc	3,2
  7195  08B4  28BB               	goto	i1l6805
  7196  08B5  28A7               	goto	i1l6797
  7197  08B6                     i1l6803:	
  7198  08B6  1003               	clrc
  7199  08B7  0CFD               	rrf	i1___ftadd@f2+2,f
  7200  08B8  0CFC               	rrf	i1___ftadd@f2+1,f
  7201  08B9  0CFB               	rrf	i1___ftadd@f2,f
  7202  08BA  0AA4               	incf	i1___ftadd@exp2,f
  7203  08BB                     i1l6805:	
  7204  08BB  0825               	movf	i1___ftadd@exp1,w
  7205  08BC  0624               	xorwf	i1___ftadd@exp2,w
  7206  08BD  1D03               	skipz
  7207  08BE  28B6               	goto	i1l6803
  7208  08BF                     i1l3362:	
  7209  08BF  1FA3               	btfss	i1___ftadd@sign,7
  7210  08C0  28CA               	goto	i1l6811
  7211  08C1  30FF               	movlw	255
  7212  08C2  06F8               	xorwf	i1___ftadd@f1,f
  7213  08C3  06F9               	xorwf	i1___ftadd@f1+1,f
  7214  08C4  06FA               	xorwf	i1___ftadd@f1+2,f
  7215  08C5  0AF8               	incf	i1___ftadd@f1,f
  7216  08C6  1903               	skipnz
  7217  08C7  0AF9               	incf	i1___ftadd@f1+1,f
  7218  08C8  1903               	skipnz
  7219  08C9  0AFA               	incf	i1___ftadd@f1+2,f
  7220  08CA                     i1l6811:	
  7221  08CA  1F23               	btfss	i1___ftadd@sign,6
  7222  08CB  28D5               	goto	i1l6817
  7223  08CC  30FF               	movlw	255
  7224  08CD  06FB               	xorwf	i1___ftadd@f2,f
  7225  08CE  06FC               	xorwf	i1___ftadd@f2+1,f
  7226  08CF  06FD               	xorwf	i1___ftadd@f2+2,f
  7227  08D0  0AFB               	incf	i1___ftadd@f2,f
  7228  08D1  1903               	skipnz
  7229  08D2  0AFC               	incf	i1___ftadd@f2+1,f
  7230  08D3  1903               	skipnz
  7231  08D4  0AFD               	incf	i1___ftadd@f2+2,f
  7232  08D5                     i1l6817:	
  7233  08D5  01A3               	clrf	i1___ftadd@sign
  7234  08D6  0878               	movf	i1___ftadd@f1,w
  7235  08D7  07FB               	addwf	i1___ftadd@f2,f
  7236  08D8  0879               	movf	i1___ftadd@f1+1,w
  7237  08D9  1103               	clrz
  7238  08DA  1803               	skipnc
  7239  08DB  0A79               	incf	i1___ftadd@f1+1,w
  7240  08DC  1D03               	btfss	3,2
  7241  08DD  07FC               	addwf	i1___ftadd@f2+1,f
  7242  08DE  087A               	movf	i1___ftadd@f1+2,w
  7243  08DF  1103               	clrz
  7244  08E0  1803               	skipnc
  7245  08E1  0A7A               	incf	i1___ftadd@f1+2,w
  7246  08E2  1D03               	btfss	3,2
  7247  08E3  07FD               	addwf	i1___ftadd@f2+2,f
  7248  08E4  1FFD               	btfss	i1___ftadd@f2+2,7
  7249  08E5  28F1               	goto	i1l6829
  7250  08E6  30FF               	movlw	255
  7251  08E7  06FB               	xorwf	i1___ftadd@f2,f
  7252  08E8  06FC               	xorwf	i1___ftadd@f2+1,f
  7253  08E9  06FD               	xorwf	i1___ftadd@f2+2,f
  7254  08EA  0AFB               	incf	i1___ftadd@f2,f
  7255  08EB  1903               	skipnz
  7256  08EC  0AFC               	incf	i1___ftadd@f2+1,f
  7257  08ED  1903               	skipnz
  7258  08EE  0AFD               	incf	i1___ftadd@f2+2,f
  7259  08EF  01A3               	clrf	i1___ftadd@sign
  7260  08F0  0AA3               	incf	i1___ftadd@sign,f
  7261  08F1                     i1l6829:	
  7262  08F1  087B               	movf	i1___ftadd@f2,w
  7263  08F2  00F0               	movwf	?i1___ftpack
  7264  08F3  087C               	movf	i1___ftadd@f2+1,w
  7265  08F4  00F1               	movwf	?i1___ftpack+1
  7266  08F5  087D               	movf	i1___ftadd@f2+2,w
  7267  08F6  00F2               	movwf	?i1___ftpack+2
  7268  08F7  0825               	movf	i1___ftadd@exp1,w
  7269  08F8  00F3               	movwf	?i1___ftpack+3
  7270  08F9  0823               	movf	i1___ftadd@sign,w
  7271  08FA  00F4               	movwf	?i1___ftpack+4
  7272  08FB  2103               	fcall	i1___ftpack
  7273  08FC  0870               	movf	?i1___ftpack,w
  7274  08FD  00F8               	movwf	?i1___ftadd
  7275  08FE  0871               	movf	?i1___ftpack+1,w
  7276  08FF  00F9               	movwf	?i1___ftadd+1
  7277  0900  0872               	movf	?i1___ftpack+2,w
  7278  0901  00FA               	movwf	?i1___ftadd+2
  7279  0902  0008               	return
  7280  0903                     __end_ofi1___ftadd:	
  7281  0903                     __ptext786:	
  7282 ;; =============== function i1___ftadd ends ============
  7283                           
  7284                           
  7285 ;; *************** function i1___ftpack *****************
  7286 ;; Defined at:
  7287 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  7288 ;; Parameters:    Size  Location     Type
  7289 ;;  __ftpack        3    0[COMMON] unsigned um
  7290 ;;  __ftpack        1    3[COMMON] unsigned char 
  7291 ;;  __ftpack        1    4[COMMON] unsigned char 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  3    0[COMMON] float 
  7296 ;; Registers used:
  7297 ;;		wreg, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 60/0
  7300 ;;		On exit  : 60/0
  7301 ;;		Unchanged: FFF9F/0
  7302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7303 ;;      Params:         5       0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0
  7305 ;;      Temps:          3       0       0       0       0
  7306 ;;      Totals:         8       0       0       0       0
  7307 ;;Total ram usage:        8 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		i1___ftadd
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315  0903                     i1___ftpack:	
  7316                           
  7317                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  7318  0903  0873               	movf	i1___ftpack@exp,w
  7319  0904  1903               	btfsc	3,2
  7320  0905  290B               	goto	i1l6837
  7321  0906  0872               	movf	i1___ftpack@arg+2,w
  7322  0907  0471               	iorwf	i1___ftpack@arg+1,w
  7323  0908  0470               	iorwf	i1___ftpack@arg,w
  7324  0909  1D03               	skipz
  7325  090A  2914               	goto	i1l6843
  7326  090B                     i1l6837:	
  7327  090B  01F0               	clrf	?i1___ftpack
  7328  090C  01F1               	clrf	?i1___ftpack+1
  7329  090D  01F2               	clrf	?i1___ftpack+2
  7330  090E  0008               	return
  7331  090F                     i1l6841:	
  7332  090F  0AF3               	incf	i1___ftpack@exp,f
  7333  0910  1003               	clrc
  7334  0911  0CF2               	rrf	i1___ftpack@arg+2,f
  7335  0912  0CF1               	rrf	i1___ftpack@arg+1,f
  7336  0913  0CF0               	rrf	i1___ftpack@arg,f
  7337  0914                     i1l6843:	
  7338  0914  30FE               	movlw	254
  7339  0915  0572               	andwf	i1___ftpack@arg+2,w
  7340  0916  1903               	btfsc	3,2
  7341  0917  2923               	goto	i1l6847
  7342  0918  290F               	goto	i1l6841
  7343  0919                     i1l6845:	
  7344  0919  0AF3               	incf	i1___ftpack@exp,f
  7345  091A  0AF0               	incf	i1___ftpack@arg,f
  7346  091B  1903               	skipnz
  7347  091C  0AF1               	incf	i1___ftpack@arg+1,f
  7348  091D  1903               	skipnz
  7349  091E  0AF2               	incf	i1___ftpack@arg+2,f
  7350  091F  1003               	clrc
  7351  0920  0CF2               	rrf	i1___ftpack@arg+2,f
  7352  0921  0CF1               	rrf	i1___ftpack@arg+1,f
  7353  0922  0CF0               	rrf	i1___ftpack@arg,f
  7354  0923                     i1l6847:	
  7355  0923  30FF               	movlw	255
  7356  0924  0572               	andwf	i1___ftpack@arg+2,w
  7357  0925  1903               	btfsc	3,2
  7358  0926  292D               	goto	i1l6851
  7359  0927  2919               	goto	i1l6845
  7360  0928                     i1l6849:	
  7361  0928  03F3               	decf	i1___ftpack@exp,f
  7362  0929  1003               	clrc
  7363  092A  0DF0               	rlf	i1___ftpack@arg,f
  7364  092B  0DF1               	rlf	i1___ftpack@arg+1,f
  7365  092C  0DF2               	rlf	i1___ftpack@arg+2,f
  7366  092D                     i1l6851:	
  7367  092D  1FF1               	btfss	i1___ftpack@arg+1,7
  7368  092E  2928               	goto	i1l6849
  7369  092F  1C73               	btfss	i1___ftpack@exp,0
  7370  0930  13F1               	bcf	i1___ftpack@arg+1,7
  7371  0931  1003               	clrc
  7372  0932  0CF3               	rrf	i1___ftpack@exp,f
  7373  0933  0873               	movf	i1___ftpack@exp,w
  7374  0934  00F7               	movwf	??i1___ftpack+2
  7375  0935  01F6               	clrf	??i1___ftpack+1
  7376  0936  01F5               	clrf	??i1___ftpack
  7377  0937  0875               	movf	??i1___ftpack,w
  7378  0938  04F0               	iorwf	i1___ftpack@arg,f
  7379  0939  0876               	movf	??i1___ftpack+1,w
  7380  093A  04F1               	iorwf	i1___ftpack@arg+1,f
  7381  093B  0877               	movf	??i1___ftpack+2,w
  7382  093C  04F2               	iorwf	i1___ftpack@arg+2,f
  7383  093D  0874               	movf	i1___ftpack@sign,w
  7384  093E  1D03               	skipz
  7385  093F  17F2               	bsf	i1___ftpack@arg+2,7
  7386  0940  0008               	return
  7387  0941                     __end_ofi1___ftpack:	
  7388                           
  7389                           	psect	intentry
  7390  0004                     __pintentry:	
  7391                           ; Regs used in _ngat: [wreg+status,2+status,0+pclath+cstack]
  7392                           
  7393  0004                     interrupt_function:	
  7394  007E                     saved_w	set	btemp
  7395  0004  00FE               	movwf	btemp
  7396  0005  0E03               	swapf	3,w
  7397  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7398  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7399  0008  00A6               	movwf	??_ngat
  7400  0009  080A               	movf	10,w
  7401  000A  00A7               	movwf	??_ngat+1
  7402  000B  120A  158A  2809   	ljmp	_ngat
  7403                           
  7404                           	psect	text787
  7405  0000                     __ptext787:	
  7406 ;; =============== function i1___ftpack ends ============
  7407                           
  7408  007E                     btemp	set	126	;btemp
  7409  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Nov 15 16:04:03 2022

         ___altoft@exp 0034                      _f 00CD                      pc 0002             i1___ftpack 0903  
       ___bmul@product 0032          ___altoft@sign 0035           ___awdiv@sign 0033                     fsr 0004  
  ___wmul@multiplicand 002A           ___ftadd@exp1 005D           ___ftadd@exp2 005C          ?_lcd_put_byte 0028  
         ___ftadd@sign 005B           i1___ftadd@f1 0078           i1___ftadd@f2 007B                    _GIE 005F  
                  _RD1 0041                    _RD2 0042                    _RD3 0043                    _RD4 0044  
                  _RD5 0045                    _RD6 0046                    _RD7 0047                    _PS0 0408  
                  _PS1 0409                    _PS2 040A                    _PSA 040B                    _dem 0064  
                  fsr0 0004                    indf 0000           ___awmod@sign 002D                   l1061 0000  
                 l2122 0000                   l2204 002E                   l2133 0000                   l2125 0000  
                 l2219 00AC                   l2156 0000                   l3304 0000                   l2264 0399  
                 l3331 0A63                   l3340 0000                   l3334 0000                   l3418 0635  
                 l3362 16EE                   l2298 0562                   l3283 0000                   l3451 0000  
                 l3461 0000                   l3533 0000                   l3541 0000                   l3519 0000  
                 l3288 0000                   l3480 0000                   l3384 0000                   l3465 0000  
                 l3298 0000                   l3556 07D1                   l3549 0000                   l3591 17C1  
                 l7103 0BAC                   l7111 0000                   l3592 0000                   l6401 07C5  
                 l7113 0ABE                   l7201 0AEE                   l8001 0030                   l6411 07DB  
                 l6403 0000                   l7107 0BB8                   l7115 0ABF                   l8011 0000  
                 l8003 003B                   l6405 07CD                   l7117 0000                   l7109 0000  
                 l7205 0AF5                   l8101 0227                   l8013 0070                   l6351 0CA1  
                 l6343 0000                   l3599 17E0                   l6431 0000                   l6415 0000  
                 l7071 0000                   l7119 0AC8                   l7207 0000                   l8111 0000  
                 l8031 00AE                   l8023 0000                   l8007 004A                   l6345 0000  
                 l6441 0000                   l6433 1781                   l6425 0000                   l6417 174B  
                 l6601 0000                   l7081 0000                   l7073 0000                   l8113 0268  
                 l8025 007F                   l8017 0000                   l8009 0000                   l6363 05E0  
                 l6355 0000                   l6371 077F                   l6451 17DC                   l6435 0000  
                 l6427 0000                   l6419 1750                   l6603 0000                   l7091 0B88  
                 l7083 0B70                   l7075 0000                   l8211 0000                   l8131 02D9  
                 l8123 02AB                   l8115 0000                   l8107 0000                   l8051 0000  
                 l8043 00D1                   l8035 00B1                   l8019 0000                   l8027 00A8  
                 l6357 0000                   l6381 0000                   l6429 0000                   l6461 0000  
                 l6613 0000                   l7077 0000                   l8221 04AC                   l8213 0483  
                 l8205 0455                   l8141 0300                   l8133 0000                   l8117 02A9  
                 l8109 0000                   l8061 0000                   l8053 010D                   l8045 0000  
                 l8037 00C5                   l8029 0000                   l8301 0000                   l6391 0000  
                 l6383 0000                   l6375 0000                   l6367 0000                   l6447 17D4  
                 l6439 0000                   l6471 0000                   l6463 0F5D                   l6631 0000  
                 l6615 0E7C                   l6607 0000                   l6703 066A                   l7095 0B94  
                 l7087 0B7C                   l7079 0000                   l7191 0AD1                   l8151 0318  
                 l8063 0000                   l8055 0000                   l8047 0000                   l8311 0000  
                 l8303 0000                   l6385 079C                   l6377 0000                   l6369 077A  
                 l6457 17EA                   l6449 0000                   l6641 0EA9                   l6625 0E8A  
                 l6617 0000                   l6609 0E73                   l6713 0000                   l6705 0000  
                 l6721 0000                   l7193 0AD7                   l8241 04EE                   l8233 04CF  
                 l8217 0494                   l8161 0333                   l8153 0000                   l8145 0303  
                 l8137 02F8                   l8129 0000                   l8081 01A4                   l8073 016A  
                 l8065 0000                   l8321 0000                   l8313 15ED                   l8305 0000  
                 l6395 0000                   l6387 0000                   l6379 0000                   l6571 0000  
                 l6563 0000                   l6635 0000                   l6627 0000                   l6715 0695  
                 l6731 0EBF                   l7099 0BA0                   l7195 0ADE                   l8251 0000  
                 l8235 04D2                   l8227 04B9                   l8171 0379                   l8163 0360  
                 l8147 0000                   l8155 0321                   l8075 0000                   l8067 0000  
                 l8059 0000                   l8315 0000                   l8307 0000                   l6469 0000  
                 l7701 0000                   l6573 0000                   l6565 0605                   l6637 0EA1  
                 l6653 0579                   l6661 059E                   l6645 0000                   l6709 0000  
                 l6725 0000                   l6901 0000                   l7197 0AE2                   l7189 0000  
                 l8253 0507                   l8149 030C                   l8077 0000                   l8069 0000  
                 l8085 01B6                   l8317 0000                   l8309 0000                   l7711 0A70  
                 l6583 0629                   l6575 0000                   l6567 060A                   l6639 0000  
                 l6751 0EE6                   l6727 0EB8                   l6719 0000                   l6903 0000  
                 l8255 050B                   l8247 04F8                   l8239 04EB                   l8191 0000  
                 l8175 0388                   l8167 0000                   l8319 0000                   l8271 0000  
                 l7705 0000                   l7721 0000                   l6593 063F                   l6585 0000  
                 l6577 0000                   l6569 0000                   l6665 0000                   l6681 05C5  
                 l6673 0000                   l6745 0000                   l6905 0000                   l7801 16D2  
                 l8257 0000                   l8265 0520                   l8193 0000                   l8185 0000  
                 l8177 0000                   l8169 0364                   l8097 0216                   l8089 01EB  
                 l8281 0000                   l8273 0000                   l7723 0000                   l7715 0000  
                 l6595 0000                   l6587 0631                   l6659 0000                   l6683 0000  
                 l6739 0ECB                   l6747 0EDE                   l6907 0000                   l7811 16EA  
                 l7803 16D6                   l8259 0518                   l8187 0429                   l8179 03BC  
                 l8267 0014                   l8291 0000                   l8283 0000                   l8275 0000  
                 l7709 0000                   l7717 0000                   l7741 0F75                   l7733 0000  
                 l6597 064D                   l6685 0000                   l6677 05B6                   l6693 0000  
                 l6749 0000                   l6861 0000                   l7821 0000                   l7805 0000  
                 l8189 0437                   l8293 0000                   l8285 0000                   l8277 0000  
                 l8269 0000                   l7727 0A8B                   l7719 0A77                   l7751 0F93  
                 l7743 0F7A                   l7735 0000                   l6695 0000                   l6871 0000  
                 l6863 0000                   l7831 0000                   l7823 1704                   l7815 0000  
                 l7911 0000                   l8199 0453                   l8295 0000                   l8287 0000  
                 l8279 0000                   l7681 05EC                   l7729 0000                   l7745 0F7F  
                 l7737 0F71                   l6881 0000                   l6873 0000                   l6865 0000  
                 l7833 0000                   l7825 0000                   l7817 16F9                   l7809 16E5  
                 l7761 0000                   l7905 0CBA                   l7921 0000                   l8297 0000  
                 l8289 0000                   l7683 0000                   l7675 0000                   l7691 0000  
                 l7755 0000                   l7747 0F89                   l6891 0C4B                   l6883 0000  
                 l6875 0BE7                   l7835 1720                   l7827 0000                   l7763 0000  
                 l7851 0F0D                   l7907 0CC5                   l7915 06A8                   l7931 09D9  
                 l8299 0000                   l7685 0000                   l7677 05E4                   l7693 0000  
                 l7757 0000                   l7749 0F8E                   l6893 0000                   l6885 0000  
                 l6877 0BF6                   l6869 0000                   l7781 0000                   l7773 169C  
                 l7765 0000                   l7861 0000                   l7853 0000                   l7845 0EFC  
                 l7917 06B3                   l7925 0000                   l7695 0000                   l7759 0000  
                 l6895 0000                   l6887 0C2F                   l6879 0C06                   l7791 16B9  
                 l7775 0000                   l7863 0000                   l7855 0000                   l7839 0000  
                 l7935 0000                   l7943 0000                   l7697 0A5D                   l6889 0C3C  
                 l6897 0000                   l7793 0000                   l7769 1695                   l7881 0F34  
                 l7873 0F28                   l7865 0000                   l7857 0000                   l7961 0D8C  
                 l6899 0000                   l7787 0000                   l7779 16AB                   l7891 0000  
                 l7875 0000                   l7867 0000                   l7859 0000                   l7939 0A2E  
                 l7955 0D47                   l7947 0000                   l7797 16C8                   l7789 0000  
                 l7885 0F3E                   l7877 0000                   l7869 0F1E                   l7973 0E0D  
                 l7965 0DA3                   l7799 16CD                   l7887 0000                   l7879 0000  
                 l7895 0000                   l7983 0000                   l7889 0000                   l7897 0000  
                 l7985 0000                   l7899 0000                   l7979 0E52                   l7995 0029  
                 l7997 0000                   l7989 0000                   STR_1 107C                   STR_2 1087  
                 _T0IE 005D                   _T0IF 005A                   _T0CS 040D                   u3105 0587  
                 u3055 0E93                   u3245 0ED1                   u3185 067D                   u3610 0C11  
                 u3630 0C2C                   u3550 0BE4                   u3704 0C5B                   u3624 0C14  
                 u3650 0C39                   u3570 0BF3                   u2595 07AB                   u2940 0000  
                 u2685 17A5                   u3670 0C48                   u3590 0C03                   u5415 01C0  
                 u2945 060E                   u5425 01F5                   u3690 0C58                   u5370 0000  
                 u5525 0315                   u5535 032A                   u5455 0214                   u5375 0123  
                 u5705 04C5                   u5715 04DD                   u5635 047C                   u5475 02D2  
                 u5565 036D                   u5655 048E                   u5575 0383                   u5817 0B10  
                 u5665 04A4                   u5907 0C8E                   u5827 0B23                   u5917 0BCC  
                 u5837 0B36                   u5927 0BD3                   u5847 0B4B                   u5937 0C16  
                 u5857 0B5A                   u5947 0C1D                   u5867 0B69                   u5957 0C5D  
                 u5877 0C75                   u5967 0C64                   u5887 0C7C                   u5897 0C87  
                 _TMR0 0001                   _TMR1 000E                   _main 15CD                   _ngat 0809  
         ___ftpack@arg 0028           ___ftpack@exp 002B           lcd_busy@busy 0029                   btemp 007E  
                 _xung 00C9                   start 000E      ___bmul@multiplier 0033           ___ftmul@cntr 0050  
         ___ftmul@sign 0051           ___fttol@exp1 0042           ___fttol@lval 003E         ??_lcd_put_byte 0029  
                ?_main 0070                  ?_ngat 0070        __end_of___awdiv 0EAE        __end_of___lbdiv 0A72  
      __end_of___ftadd 1734        __end_of___awmod 0EEB        __end_of___lbmod 0A8F        __end_of___ftneg 06A6  
                _ANSEL 0188        __end_of___lldiv 069E        __end_of___ftmul 0F5A        ___awdiv@divisor 002E  
      __end_of___llmod 05A7        __end_of___ftsub 06DE        __end_of___fttol 0656        ___awdiv@counter 0032  
                _TMR1H 000F                  _TMR1L 000E         i1___ftadd@exp1 0025         i1___ftadd@exp2 0024  
                _TRISD 0088         i1___ftadd@sign 0023           ___lltoft@exp 0034                  _scale 0CD7  
      __end_of_isdigit 05E2          ___ftpack@sign 002C                  _putch 0563        __end_of_isprint 0CA3  
                pclath 000A                  status 0003                  wtemp0 007E     __size_ofi1___ftadd 00C0  
      ___lbdiv@divisor 002D        ___lbdiv@counter 002F         i1___ftpack@arg 0070         i1___ftpack@exp 0073  
         __end_of_main 1672           __end_of_ngat 0843            ?i1___ftpack 0070          lcd_gotoxy@col 002E  
        lcd_gotoxy@row 002D                 ??_main 0064          ___fttol@sign1 003D                 ??_ngat 0026  
 __size_of__tdiv_to_l_ 0077       __end_of___altoft 0CD7       ___llmod@dividend 0039                 ?_scale 0052  
     ___awdiv@dividend 0030                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lltoft 06C6                 i1l1066 0000                 i1l3362 08BF                 _T1SYNC 0082  
               i1l6333 0000                 i1l6341 083B                 i1l6327 0000                 i1l6337 0000  
               i1l6329 0000                 i1l6339 0000                 i1l6811 08CA                 i1l6803 08B6  
               i1l6821 0000                 i1l6805 08BB                 i1l6815 0000                 i1l6841 090F  
               i1l6833 0000                 i1l6825 0000                 i1l6817 08D5                 i1l6809 0000  
               i1l6851 092D                 i1l6843 0914                 i1l6835 0000                 i1l6827 0000  
               i1l6819 0000                 i1l6763 0866                 i1l6755 0000                 i1l6845 0919  
               i1l6837 090B                 i1l6829 08F1                 i1l6781 0000                 i1l6773 087C  
               i1l6757 0000                 i1l6855 0000                 i1l6847 0923                 i1l6791 0899  
               i1l6783 0000                 i1l6775 0000                 i1l6767 086D                 i1l6759 0000  
               i1l6857 0000                 i1l6849 0928                 i1l6793 089E                 i1l6785 088A  
               i1l6769 0000                 i1l6859 0000                 i1l6787 0000                 i1l6795 08A3  
               i1l6797 08A7                 i1l6799 0000                 u252_25 082A                 _TMR1GE 0086  
               _TMR1CS 0081                 _TMR1ON 0080                 _TRISA4 042C                 _TRISD1 0441  
               _TRISE0 0448                 _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444  
               _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C95  
     __end_of_lcd_init 0BBF       __end_of_lcd_putc 0AFE                 ___bmul 0F5A                 ___ftge 05A7  
               ___wmul 05E2              ??___awdiv 0032              ??___lbdiv 002E              ??___ftadd 0058  
            ??___awmod 002C              ??___lbmod 0029              ??___ftneg 002B              ??___lldiv 0030  
            ??___ftmul 0049              ??___llmod 003D              ??___ftsub 0064              ??___fttol 003A  
               _fround 0941       ___awdiv@quotient 0034        ___awmod@divisor 0028        ___awmod@counter 002C  
               _printf 0011          lcd_put_byte@b 0028  ___ftmul@f3_as_product 004D      __end_ofi1___ftadd 0903  
            ??_isdigit 0028                 saved_w 007E              ??_isprint 0028                 putch@c 0031  
     ___lbdiv@dividend 002E    __size_ofi1___ftpack 003E        ___lbmod@divisor 0028             ___altoft@c 0030  
      ___lbmod@counter 002B   __end_of_lcd_put_byte 0C6A             ___ftadd@f1 0052             ___ftadd@f2 0055  
           ___ftge@ff1 0028             ___ftge@ff2 002B        i1___ftpack@sign 0074             ___ftneg@f1 0028  
  ___bmul@multiplicand 0031             ___ftmul@f1 0043             ___ftmul@f2 0046             ___ftsub@f1 0061  
           ___ftsub@f2 005E             ___fttol@f1 0036         __pcstackCOMMON 0070             ___lltoft@c 0030  
        __end_of_scale 0E69          __end_of_putch 0569       ___lbdiv@quotient 0030             __div_to_l_ 1734  
    lcd_gotoxy@address 002F        __div_to_l_@exp1 003B        __div_to_l_@cntr 003A                ??_scale 0055  
      __div_to_l_@quot 0036                ??_putch 0031             __pbssBANK0 0064             __pbssBANK1 00C9  
        __div_to_l_@f1 0028          __div_to_l_@f2 002B             __pmaintext 15CD                ?___bmul 0031  
              ?___ftge 0028                ?___wmul 0028             __pintentry 0004              ?___altoft 0030  
              ?_fround 005E              ?___ftpack 0028                ?_printf 00A7              ?___lltoft 0030  
              _T1CKPS0 0084                _T1CKPS1 0085             _lcd_gotoxy 0AB7              ?_lcd_busy 0070  
            ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4114 0059        __size_of___bmul 000F  
      __size_of___ftge 002C           ??i1___ftpack 0075                ___awdiv 0E69                ___lbdiv 0A56  
              ___ftadd 1672                ___awmod 0EAE                ___lbmod 0A72                ___ftneg 069E  
              ___lldiv 0656        __size_of___wmul 0019                ___ftmul 0EEB                ___llmod 0569  
              ___ftsub 06C6                ___fttol 05FB             ??___altoft 0034             ??___ftpack 002D  
      __size_of_fround 0115             ??___lltoft 0034        __size_of_printf 0552            ?__div_to_l_ 0028  
              _dpowers 1054                _isdigit 05D3       ___awmod@dividend 002A                _isprint 0C95  
__size_of_lcd_put_byte 00AB             ??_lcd_busy 0028             ??_lcd_init 002D             ??_lcd_putc 0030  
 end_of_initialization 07EF         lcd_put_byte@rs 002B     __end_ofi1___ftpack 0941        ___lldiv@divisor 0028  
      ___lldiv@counter 0034                printf@c 00C8                printf@f 00BC         __tdiv_to_l_@f1 0028  
       __tdiv_to_l_@f2 002B          ??__tdiv_to_l_ 002E           _lcd_put_byte 0BBF       ___lbmod@dividend 002A  
          ?_lcd_gotoxy 002D              i1___ftadd 0843            ___lbmod@rem 002C            printf@integ 00B5  
          printf@width 00C1    __size_of__div_to_l_ 00BF            ___ftmul@exp 004C         __end_of___bmul 0F69  
       __end_of___ftge 05D3         __end_of___wmul 05FB         __end_of_fround 0A56         __end_of_printf 0563  
  start_initialization 07E4    __end_of__tdiv_to_l_ 07E4             ?i1___ftadd 0078        ___llmod@divisor 0035  
      ___llmod@counter 003D               ??___bmul 0032               ??___ftge 002E    __size_of_lcd_gotoxy 0018  
             ??___wmul 002C               ??_fround 0061               ??_printf 00AB      __size_of___altoft 002F  
           fround@prec 00A6      __size_of___ftpack 003E      __size_of___lltoft 0020          __pcstackBANK0 0020  
        __pcstackBANK1 00A0           _isdigit$3674 0028      __size_of_lcd_busy 002B      __size_of_lcd_init 00C1  
    __size_of_lcd_putc 002F               ?___awdiv 002E               ?___lbdiv 002D               ?___ftadd 0052  
             ?___awmod 0028               ?___lbmod 0028              __ptext760 0AB7              __ptext761 0AFE  
            __ptext770 05A7              __ptext762 06A6              __ptext754 0011              __ptext771 069E  
            __ptext763 0CA8              __ptext755 0563              __ptext780 1734              __ptext772 0569  
            __ptext764 0EEB              __ptext756 0ACF              __ptext781 076D              __ptext773 0E69  
            __ptext765 1672              __ptext757 06C6              __ptext782 05D3              __ptext774 05FB  
            __ptext766 0C6A              __ptext758 0CD7              __ptext783 0C95              __ptext775 0F69  
            __ptext767 0BBF              __ptext759 0941              __ptext784 0809              __ptext776 0A72  
            __ptext768 0EAE              __ptext785 0843              __ptext777 0A56              __ptext769 0656  
            __ptext786 0903              __ptext778 05E2              __ptext787 0000              __ptext779 0F5A  
             ?___ftneg 0028               ?___lldiv 0028               ?___ftmul 0043               ?___llmod 0035  
             ?___ftsub 005E              __npowers_ 1006               ?___fttol 0036              __pstrings 1000  
          __tdiv_to_l_ 076D           ??__div_to_l_ 002E               ?_isdigit 0070               ?_isprint 0070  
          ??i1___ftadd 0020         __size_of_scale 0192         __size_of_putch 0006      interrupt_function 0004  
       ___wmul@product 002C     __end_of__div_to_l_ 17F3            __stringbase 1005      ___wmul@multiplier 0028  
           printf@_val 00B8             printf@flag 00BD             printf@fval 00C3             printf@prec 00C6  
            lcd_putc@c 0030           ??_lcd_gotoxy 002E       lcd_put_byte@temp 002C           _isprint$3677 0028  
   __end_of_lcd_gotoxy 0ACF       __size_of___awdiv 0045       __size_of___lbdiv 001C       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001D       __size_of___ftneg 0008       __size_of___lldiv 0048  
             ___altoft 0CA8       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0018  
     __size_of___fttol 005B               ___ftpack 0F69            _fround$4112 00A3            _fround$4113 00A0  
             ___lltoft 06A6       __size_of_isdigit 000F       __size_of_isprint 000E               __powers_ 102D  
             _lcd_busy 0C6A               _lcd_init 0AFE               _lcd_putc 0ACF          __size_of_main 00A5  
        __size_of_ngat 003A              printf@exp 00BF               isdigit@c 0029               scale@scl 005C  
             intlevel1 0000       __tdiv_to_l_@exp1 0036       __tdiv_to_l_@cntr 0035       __tdiv_to_l_@quot 0031  
     ___lldiv@dividend 002C               isprint@c 0029              stringcode 1000               printf@ap 00B4  
         ?__tdiv_to_l_ 0028            _printf$3166 00B0       ___lldiv@quotient 0030               stringdir 1000  
             stringtab 1000  
