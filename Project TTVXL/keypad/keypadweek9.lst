

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 09 16:48:07 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,delta=2
    11                           	psect	text48,local,class=CODE,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text49,local,class=CODE,delta=2
    14                           	psect	pa_nodes,global,class=CODE,delta=2
    15                           	dabs	1,0x7E,2
    16  000A                     	;#
    17                           
    18                           	psect	config
    19  2007  E3C2               	dw	58306	;#
    20                           
    21                           	psect	idataBANK0
    22  0000                     __pidataBANK0:	
    23  0008                     _PORTD	set	8
    24  005F                     _GIE	set	95
    25  0030                     _RB0	set	48
    26  0031                     _RB1	set	49
    27  0032                     _RB2	set	50
    28  0033                     _RB3	set	51
    29  0034                     _RB4	set	52
    30  0035                     _RB5	set	53
    31  0036                     _RB6	set	54
    32  005B                     _RBIE	set	91
    33  0058                     _RBIF	set	88
    34  0096                     _IOCB	set	150
    35  0086                     _TRISB	set	134
    36  0088                     _TRISD	set	136
    37  0188                     _ANSEL	set	392
    38  0189                     _ANSELH	set	393
    39                           
    40                           	psect	cinit
    41  00C6                     start_initialization:	
    42  00C6  30C0               	movlw	192
    43                           
    44                           ; Clear objects allocated to COMMON
    45  00C7  01F2               	clrf	__pbssCOMMON& (0+127)
    46                           
    47                           ;initializer for _maled
    48  00C8  00A0               	movwf	__pdataBANK0& (0+127)
    49  00C9  30F9               	movlw	249
    50  00CA  00A1               	movwf	(__pdataBANK0+1)& (0+127)
    51  00CB  30A4               	movlw	164
    52  00CC  00A2               	movwf	(__pdataBANK0+2)& (0+127)
    53  00CD  30B0               	movlw	176
    54  00CE  00A3               	movwf	(__pdataBANK0+3)& (0+127)
    55  00CF  3099               	movlw	153
    56  00D0  00A4               	movwf	(__pdataBANK0+4)& (0+127)
    57  00D1  3092               	movlw	146
    58  00D2  00A5               	movwf	(__pdataBANK0+5)& (0+127)
    59  00D3  3082               	movlw	130
    60  00D4  00A6               	movwf	(__pdataBANK0+6)& (0+127)
    61  00D5  30F8               	movlw	248
    62  00D6  00A7               	movwf	(__pdataBANK0+7)& (0+127)
    63  00D7  3080               	movlw	128
    64  00D8  00A8               	movwf	(__pdataBANK0+8)& (0+127)
    65  00D9  3090               	movlw	144
    66  00DA  00A9               	movwf	(__pdataBANK0+9)& (0+127)
    67  00DB  30C6               	movlw	198
    68  00DC  00AA               	movwf	(__pdataBANK0+10)& (0+127)
    69  00DD  3086               	movlw	134
    70  00DE  00AB               	movwf	(__pdataBANK0+11)& (0+127)
    71  00DF                     end_of_initialization:	
    72                           ;End of C runtime variable initialization code
    73                           
    74  00DF  0183               	clrf	3
    75  00E0  120A  118A  280F   	ljmp	_main	;jump to C main() function
    76                           
    77                           	psect	bssCOMMON
    78  0072                     __pbssCOMMON:	
    79  0072                     _S1_state:	
    80  0072                     	ds	1
    81                           
    82                           	psect	dataBANK0
    83  0020                     __pdataBANK0:	
    84  0020                     _maled:	
    85  0020                     	ds	12
    86                           
    87                           	psect	cstackCOMMON
    88  0070                     __pcstackCOMMON:	
    89  0070                     ?_main:	
    90  0070                     ?_button:	
    91                           ; 0 bytes @ 0x0
    92                           
    93  0070                     ??_button:	
    94                           ; 0 bytes @ 0x0
    95                           
    96                           
    97                           ; 0 bytes @ 0x0
    98  0070                     	ds	2
    99  0072                     ??_main:	
   100                           
   101                           	psect	maintext
   102  000F                     __pmaintext:	
   103                           ; 0 bytes @ 0x2
   104 ;;Data sizes: Strings 0, constant 0, data 12, bss 1, persistent 0 stack 0
   105 ;;Auto spaces:   Size  Autos    Used
   106 ;; COMMON          14      2       3
   107 ;; BANK0           80      0      12
   108 ;; BANK1           80      0       0
   109 ;; BANK3           96      0       0
   110 ;; BANK2           96      0       0
   111 ;;
   112 ;; Pointer list with targets:
   113 ;;
   114 ;; Critical Paths under _main in COMMON
   115 ;;
   116 ;;   None.
   117 ;;
   118 ;; Critical Paths under _button in COMMON
   119 ;;
   120 ;;   None.
   121 ;;
   122 ;; Critical Paths under _main in BANK0
   123 ;;
   124 ;;   None.
   125 ;;
   126 ;; Critical Paths under _button in BANK0
   127 ;;
   128 ;;   None.
   129 ;;
   130 ;; Critical Paths under _main in BANK1
   131 ;;
   132 ;;   None.
   133 ;;
   134 ;; Critical Paths under _button in BANK1
   135 ;;
   136 ;;   None.
   137 ;;
   138 ;; Critical Paths under _main in BANK3
   139 ;;
   140 ;;   None.
   141 ;;
   142 ;; Critical Paths under _button in BANK3
   143 ;;
   144 ;;   None.
   145 ;;
   146 ;; Critical Paths under _main in BANK2
   147 ;;
   148 ;;   None.
   149 ;;
   150 ;; Critical Paths under _button in BANK2
   151 ;;
   152 ;;   None.
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;;
   157 ;;Call Graph Tables:
   158 ;;
   159 ;; ---------------------------------------------------------------------------------
   160 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   161 ;; ---------------------------------------------------------------------------------
   162 ;; (0) _main                                                 0     0      0       0
   163 ;; ---------------------------------------------------------------------------------
   164 ;; Estimated maximum stack depth 0
   165 ;; ---------------------------------------------------------------------------------
   166 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   167 ;; ---------------------------------------------------------------------------------
   168 ;; (1) _button                                               2     2      0       0
   169 ;;                                              0 COMMON     2     2      0
   170 ;; ---------------------------------------------------------------------------------
   171 ;; Estimated maximum stack depth 1
   172 ;; ---------------------------------------------------------------------------------
   173 ;; Call Graph Graphs:
   174 ;; _main (ROOT)
   175 ;;
   176 ;; _button (ROOT)
   177 ;;
   178 ;; Address spaces:
   179 ;;Name               Size   Autos  Total    Cost      Usage
   180 ;;BANK3               60      0       0       9        0.0%
   181 ;;BITBANK3            60      0       0       8        0.0%
   182 ;;SFR3                 0      0       0       4        0.0%
   183 ;;BITSFR3              0      0       0       4        0.0%
   184 ;;BANK2               60      0       0      11        0.0%
   185 ;;BITBANK2            60      0       0      10        0.0%
   186 ;;SFR2                 0      0       0       5        0.0%
   187 ;;BITSFR2              0      0       0       5        0.0%
   188 ;;SFR1                 0      0       0       2        0.0%
   189 ;;BITSFR1              0      0       0       2        0.0%
   190 ;;BANK1               50      0       0       7        0.0%
   191 ;;BITBANK1            50      0       0       6        0.0%
   192 ;;CODE                 0      0       0       0        0.0%
   193 ;;DATA                 0      0       F      12        0.0%
   194 ;;ABS                  0      0       F       3        0.0%
   195 ;;NULL                 0      0       0       0        0.0%
   196 ;;STACK                0      0       0       2        0.0%
   197 ;;BANK0               50      0       C       5       15.0%
   198 ;;BITBANK0            50      0       0       4        0.0%
   199 ;;SFR0                 0      0       0       1        0.0%
   200 ;;BITSFR0              0      0       0       1        0.0%
   201 ;;COMMON               E      2       3       1       21.4%
   202 ;;BITCOMMON            E      0       0       0        0.0%
   203 ;;EEDATA             100      0       0       0        0.0%
   204                           
   205                           
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 14 in file "D:\TTVXL\Project TTVXL\keypad\keypadweek9.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;		None
   213 ;; Return value:  Size  Location     Type
   214 ;;		None               void
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0
   217 ;; Tracked objects:
   218 ;;		On entry : 17F/0
   219 ;;		On exit  : 17F/0
   220 ;;		Unchanged: FFE80/0
   221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   222 ;;      Params:         0       0       0       0       0
   223 ;;      Locals:         0       0       0       0       0
   224 ;;      Temps:          0       0       0       0       0
   225 ;;      Totals:         0       0       0       0       0
   226 ;;Total ram usage:        0 bytes
   227 ;; Hardware stack levels required when called:    1
   228 ;; This function calls:
   229 ;;		Nothing
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234  000F                     _main:	
   235                           
   236                           ;keypadweek9.c: 16: ANSEL = ANSELH = 0;
   237                           
   238                           ; Regs used in _main: [wreg+status,2+status,0]
   239  000F  1683               	bsf	3,5	;RP0=1, select bank3
   240  0010  1703               	bsf	3,6	;RP1=1, select bank3
   241  0011  0189               	clrf	9	;volatile
   242  0012  0188               	clrf	8	;volatile
   243                           
   244                           ;keypadweek9.c: 17: TRISB = 0b01111000;
   245  0013  3078               	movlw	120
   246  0014  1303               	bcf	3,6	;RP1=0, select bank1
   247  0015  0086               	movwf	6	;volatile
   248                           
   249                           ;keypadweek9.c: 18: TRISD = 0x00;
   250  0016  0188               	clrf	8	;volatile
   251                           
   252                           ;keypadweek9.c: 19: PORTD=0;
   253  0017  1283               	bcf	3,5	;RP0=0, select bank0
   254  0018  0188               	clrf	8	;volatile
   255                           
   256                           ;keypadweek9.c: 21: GIE = 1;
   257  0019  178B               	bsf	11,7
   258                           
   259                           ;keypadweek9.c: 22: RBIE = 1;
   260  001A  158B               	bsf	11,3
   261                           
   262                           ;keypadweek9.c: 23: RBIF = 0;
   263  001B  100B               	bcf	11,0
   264                           
   265                           ;keypadweek9.c: 24: IOCB = 0b01111000;
   266  001C  1683               	bsf	3,5	;RP0=1, select bank1
   267  001D  0096               	movwf	22	;volatile
   268  001E                     l3679:	
   269                           
   270                           ;keypadweek9.c: 29: RB0=0;RB1=0;RB2=1;
   271  001E  1283               	bcf	3,5	;RP0=0, select bank0
   272  001F  1006               	bcf	6,0
   273  0020  1086               	bcf	6,1
   274  0021  1506               	bsf	6,2
   275                           
   276                           ;keypadweek9.c: 31: RB0=0;RB1=1;RB2=0;
   277  0022  1006               	bcf	6,0
   278  0023  1486               	bsf	6,1
   279  0024  1106               	bcf	6,2
   280                           
   281                           ;keypadweek9.c: 33: RB0=1;RB1=0;RB2=0;
   282  0025  1406               	bsf	6,0
   283  0026  1086               	bcf	6,1
   284  0027  1106               	bcf	6,2
   285                           
   286                           ;keypadweek9.c: 35: if (S1_state ==0){PORTD=maled[0];}
   287  0028  08F2               	movf	_S1_state,f
   288  0029  1D03               	skipz
   289  002A  282D               	goto	l1033
   290  002B  0820               	movf	_maled,w
   291  002C  0088               	movwf	8	;volatile
   292  002D                     l1033:	
   293                           
   294                           ;keypadweek9.c: 36: if (S1_state != 0){break;}
   295  002D  0872               	movf	_S1_state,w
   296  002E  1903               	btfsc	3,2
   297  002F  281E               	goto	l3679
   298                           
   299                           ;keypadweek9.c: 37: }
   300                           ;keypadweek9.c: 38: if (S1_state ==0){PORTD=maled[0];}
   301  0030  08F2               	movf	_S1_state,f
   302  0031  1D03               	skipz
   303  0032  2835               	goto	l1037
   304  0033  0820               	movf	_maled,w
   305  0034  0088               	movwf	8	;volatile
   306  0035                     l1037:	
   307                           
   308                           ;keypadweek9.c: 39: if (S1_state ==1){PORTD = maled[1];}
   309  0035  0B72               	decfsz	_S1_state,w
   310  0036  2839               	goto	l1038
   311  0037  0821               	movf	_maled+1,w
   312  0038  0088               	movwf	8	;volatile
   313  0039                     l1038:	
   314                           
   315                           ;keypadweek9.c: 40: if (S1_state ==2){PORTD = maled[4];}
   316  0039  0872               	movf	_S1_state,w
   317  003A  3A02               	xorlw	2
   318  003B  1D03               	skipz
   319  003C  283F               	goto	l1039
   320  003D  0824               	movf	_maled+4,w
   321  003E  0088               	movwf	8	;volatile
   322  003F                     l1039:	
   323                           
   324                           ;keypadweek9.c: 41: if (S1_state ==3){PORTD = maled[7];}
   325  003F  0872               	movf	_S1_state,w
   326  0040  3A03               	xorlw	3
   327  0041  1D03               	skipz
   328  0042  2845               	goto	l1040
   329  0043  0827               	movf	_maled+7,w
   330  0044  0088               	movwf	8	;volatile
   331  0045                     l1040:	
   332                           
   333                           ;keypadweek9.c: 42: if (S1_state ==4){PORTD = maled[10];}
   334  0045  0872               	movf	_S1_state,w
   335  0046  3A04               	xorlw	4
   336  0047  1D03               	skipz
   337  0048  284B               	goto	l1041
   338  0049  082A               	movf	_maled+10,w
   339  004A  0088               	movwf	8	;volatile
   340  004B                     l1041:	
   341                           
   342                           ;keypadweek9.c: 43: if (S1_state ==5){PORTD = maled[2];}
   343  004B  0872               	movf	_S1_state,w
   344  004C  3A05               	xorlw	5
   345  004D  1D03               	skipz
   346  004E  2851               	goto	l1042
   347  004F  0822               	movf	_maled+2,w
   348  0050  0088               	movwf	8	;volatile
   349  0051                     l1042:	
   350                           
   351                           ;keypadweek9.c: 44: if (S1_state ==6){PORTD = maled[5];}
   352  0051  0872               	movf	_S1_state,w
   353  0052  3A06               	xorlw	6
   354  0053  1D03               	skipz
   355  0054  2857               	goto	l1043
   356  0055  0825               	movf	_maled+5,w
   357  0056  0088               	movwf	8	;volatile
   358  0057                     l1043:	
   359                           
   360                           ;keypadweek9.c: 45: if (S1_state ==7){PORTD = maled[8];}
   361  0057  0872               	movf	_S1_state,w
   362  0058  3A07               	xorlw	7
   363  0059  1D03               	skipz
   364  005A  285D               	goto	l1044
   365  005B  0828               	movf	_maled+8,w
   366  005C  0088               	movwf	8	;volatile
   367  005D                     l1044:	
   368                           
   369                           ;keypadweek9.c: 46: if (S1_state ==8){PORTD = maled[0];}
   370  005D  0872               	movf	_S1_state,w
   371  005E  3A08               	xorlw	8
   372  005F  1D03               	skipz
   373  0060  2863               	goto	l1045
   374  0061  0820               	movf	_maled,w
   375  0062  0088               	movwf	8	;volatile
   376  0063                     l1045:	
   377                           
   378                           ;keypadweek9.c: 47: if (S1_state ==9){PORTD = maled[3];}
   379  0063  0872               	movf	_S1_state,w
   380  0064  3A09               	xorlw	9
   381  0065  1D03               	skipz
   382  0066  2869               	goto	l1046
   383  0067  0823               	movf	_maled+3,w
   384  0068  0088               	movwf	8	;volatile
   385  0069                     l1046:	
   386                           
   387                           ;keypadweek9.c: 48: if (S1_state ==10){PORTD = maled[6];}
   388  0069  0872               	movf	_S1_state,w
   389  006A  3A0A               	xorlw	10
   390  006B  1D03               	skipz
   391  006C  286F               	goto	l1047
   392  006D  0826               	movf	_maled+6,w
   393  006E  0088               	movwf	8	;volatile
   394  006F                     l1047:	
   395                           
   396                           ;keypadweek9.c: 49: if (S1_state ==11){PORTD = maled[9];}
   397  006F  0872               	movf	_S1_state,w
   398  0070  3A0B               	xorlw	11
   399  0071  1D03               	skipz
   400  0072  2875               	goto	l1048
   401  0073  0829               	movf	_maled+9,w
   402  0074  0088               	movwf	8	;volatile
   403  0075                     l1048:	
   404                           
   405                           ;keypadweek9.c: 50: if (S1_state ==12){PORTD = maled[11];}
   406  0075  0872               	movf	_S1_state,w
   407  0076  3A0C               	xorlw	12
   408  0077  1D03               	skipz
   409  0078  281E               	goto	l3679
   410  0079  082B               	movf	_maled+11,w
   411  007A  0088               	movwf	8	;volatile
   412  007B  281E               	goto	l3679
   413  007C                     __end_of_main:	
   414                           
   415                           	psect	text48
   416  007C                     __ptext48:	
   417 ;; =============== function _main ends ============
   418                           
   419                           
   420 ;; *************** function _button *****************
   421 ;; Defined at:
   422 ;;		line 54 in file "D:\TTVXL\Project TTVXL\keypad\keypadweek9.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;		None               void
   429 ;; Registers used:
   430 ;;		wreg
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 60/0
   434 ;;		Unchanged: FFF9F/0
   435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   436 ;;      Params:         0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0
   438 ;;      Temps:          2       0       0       0       0
   439 ;;      Totals:         2       0       0       0       0
   440 ;;Total ram usage:        2 bytes
   441 ;; Hardware stack levels used:    1
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		Interrupt level 1
   446 ;; This function uses a non-reentrant model
   447 ;;
   448  007C                     _button:	
   449                           
   450                           ;keypadweek9.c: 55: RBIF = 0;
   451  007C  100B               	bcf	11,0
   452                           
   453                           ;keypadweek9.c: 56: if (RB3 == 1){
   454  007D  1283               	bcf	3,5	;RP0=0, select bank0
   455  007E  1303               	bcf	3,6	;RP1=0, select bank0
   456  007F  1D86               	btfss	6,3
   457  0080  288F               	goto	i1l3621
   458  0081                     i1l1056:	
   459  0081  1986               	btfsc	6,3
   460  0082  2881               	goto	i1l1056
   461                           
   462                           ;keypadweek9.c: 58: }
   463                           ;keypadweek9.c: 59: if (RB0 == 1){
   464  0083  1C06               	btfss	6,0
   465  0084  2887               	goto	i1l1059
   466                           
   467                           ;keypadweek9.c: 60: S1_state =1;
   468  0085  01F2               	clrf	_S1_state
   469  0086  0AF2               	incf	_S1_state,f
   470  0087                     i1l1059:	
   471                           
   472                           ;keypadweek9.c: 61: }
   473                           ;keypadweek9.c: 62: if (RB1 == 1){
   474  0087  1C86               	btfss	6,1
   475  0088  288B               	goto	i1l3617
   476                           
   477                           ;keypadweek9.c: 63: S1_state =5;
   478  0089  3005               	movlw	5
   479  008A  00F2               	movwf	_S1_state
   480  008B                     i1l3617:	
   481                           
   482                           ;keypadweek9.c: 64: }
   483                           ;keypadweek9.c: 65: if (RB2 == 1){
   484  008B  1D06               	btfss	6,2
   485  008C  288F               	goto	i1l3621
   486                           
   487                           ;keypadweek9.c: 66: S1_state =9;
   488  008D  3009               	movlw	9
   489  008E  00F2               	movwf	_S1_state
   490  008F                     i1l3621:	
   491                           
   492                           ;keypadweek9.c: 67: }
   493                           ;keypadweek9.c: 68: }
   494                           ;keypadweek9.c: 69: if (RB4 == 1){
   495  008F  1E06               	btfss	6,4
   496  0090  289F               	goto	i1l3635
   497  0091                     i1l1063:	
   498  0091  1A06               	btfsc	6,4
   499  0092  2891               	goto	i1l1063
   500                           
   501                           ;keypadweek9.c: 71: }
   502                           ;keypadweek9.c: 72: if (RB0 == 1){
   503  0093  1C06               	btfss	6,0
   504  0094  2897               	goto	i1l3627
   505                           
   506                           ;keypadweek9.c: 73: S1_state =2;
   507  0095  3002               	movlw	2
   508  0096  00F2               	movwf	_S1_state
   509  0097                     i1l3627:	
   510                           
   511                           ;keypadweek9.c: 74: }
   512                           ;keypadweek9.c: 75: if (RB1 == 1){
   513  0097  1C86               	btfss	6,1
   514  0098  289B               	goto	i1l3631
   515                           
   516                           ;keypadweek9.c: 76: S1_state =6;
   517  0099  3006               	movlw	6
   518  009A  00F2               	movwf	_S1_state
   519  009B                     i1l3631:	
   520                           
   521                           ;keypadweek9.c: 77: }
   522                           ;keypadweek9.c: 78: if (RB2 == 1){
   523  009B  1D06               	btfss	6,2
   524  009C  289F               	goto	i1l3635
   525                           
   526                           ;keypadweek9.c: 79: S1_state =10;
   527  009D  300A               	movlw	10
   528  009E  00F2               	movwf	_S1_state
   529  009F                     i1l3635:	
   530                           
   531                           ;keypadweek9.c: 80: }
   532                           ;keypadweek9.c: 81: }
   533                           ;keypadweek9.c: 82: if (RB5 == 1){
   534  009F  1E86               	btfss	6,5
   535  00A0  28AF               	goto	i1l3649
   536  00A1                     i1l1070:	
   537  00A1  1A86               	btfsc	6,5
   538  00A2  28A1               	goto	i1l1070
   539                           
   540                           ;keypadweek9.c: 84: }
   541                           ;keypadweek9.c: 85: if (RB0 == 1){
   542  00A3  1C06               	btfss	6,0
   543  00A4  28A7               	goto	i1l3641
   544                           
   545                           ;keypadweek9.c: 86: S1_state =3;
   546  00A5  3003               	movlw	3
   547  00A6  00F2               	movwf	_S1_state
   548  00A7                     i1l3641:	
   549                           
   550                           ;keypadweek9.c: 87: }
   551                           ;keypadweek9.c: 88: if (RB1 == 1){
   552  00A7  1C86               	btfss	6,1
   553  00A8  28AB               	goto	i1l3645
   554                           
   555                           ;keypadweek9.c: 89: S1_state =7;
   556  00A9  3007               	movlw	7
   557  00AA  00F2               	movwf	_S1_state
   558  00AB                     i1l3645:	
   559                           
   560                           ;keypadweek9.c: 90: }
   561                           ;keypadweek9.c: 91: if (RB2 == 1){
   562  00AB  1D06               	btfss	6,2
   563  00AC  28AF               	goto	i1l3649
   564                           
   565                           ;keypadweek9.c: 92: S1_state =11;
   566  00AD  300B               	movlw	11
   567  00AE  00F2               	movwf	_S1_state
   568  00AF                     i1l3649:	
   569                           
   570                           ;keypadweek9.c: 93: }
   571                           ;keypadweek9.c: 94: }
   572                           ;keypadweek9.c: 95: if (RB6 == 1){
   573  00AF  1F06               	btfss	6,6
   574  00B0  28BF               	goto	i1l1083
   575  00B1                     i1l1077:	
   576  00B1  1B06               	btfsc	6,6
   577  00B2  28B1               	goto	i1l1077
   578                           
   579                           ;keypadweek9.c: 97: }
   580                           ;keypadweek9.c: 98: if (RB0 == 1){
   581  00B3  1C06               	btfss	6,0
   582  00B4  28B7               	goto	i1l3655
   583                           
   584                           ;keypadweek9.c: 99: S1_state =4;
   585  00B5  3004               	movlw	4
   586  00B6  00F2               	movwf	_S1_state
   587  00B7                     i1l3655:	
   588                           
   589                           ;keypadweek9.c: 100: }
   590                           ;keypadweek9.c: 101: if (RB1 == 1){
   591  00B7  1C86               	btfss	6,1
   592  00B8  28BB               	goto	i1l3659
   593                           
   594                           ;keypadweek9.c: 102: S1_state =8;
   595  00B9  3008               	movlw	8
   596  00BA  00F2               	movwf	_S1_state
   597  00BB                     i1l3659:	
   598                           
   599                           ;keypadweek9.c: 103: }
   600                           ;keypadweek9.c: 104: if (RB2 == 1){
   601  00BB  1D06               	btfss	6,2
   602  00BC  28BF               	goto	i1l1083
   603                           
   604                           ;keypadweek9.c: 105: S1_state =12;
   605  00BD  300C               	movlw	12
   606  00BE  00F2               	movwf	_S1_state
   607  00BF                     i1l1083:	
   608  00BF  0871               	movf	??_button+1,w
   609  00C0  008A               	movwf	10
   610  00C1  0E70               	swapf	??_button^(0+-128),w
   611  00C2  0083               	movwf	3
   612  00C3  0EFE               	swapf	126,f
   613  00C4  0E7E               	swapf	126,w
   614  00C5  0009               	retfie
   615  00C6                     __end_of_button:	
   616                           
   617                           	psect	intentry
   618  0004                     __pintentry:	
   619                           ; Regs used in _button: [wreg]
   620                           
   621  0004                     interrupt_function:	
   622  007E                     saved_w	set	btemp
   623  0004  00FE               	movwf	btemp
   624  0005  0E03               	swapf	3,w
   625  0006  00F0               	movwf	??_button
   626  0007  080A               	movf	10,w
   627  0008  00F1               	movwf	??_button+1
   628  0009  120A  118A  287C   	ljmp	_button
   629                           
   630                           	psect	text49
   631  0000                     __ptext49:	
   632 ;; =============== function _button ends ============
   633                           
   634  007E                     btemp	set	126	;btemp
   635  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 09 16:48:07 2022

                 _GIE 005F                   _RB0 0030                   _RB1 0031                   _RB2 0032  
                 _RB3 0033                   _RB4 0034                   _RB5 0035                   _RB6 0036  
                l1040 0045                  l1041 004B                  l1033 002D                  l1042 0051  
                l1043 0057                  l1044 005D                  l1045 0063                  l1037 0035  
                l1046 0069                  l1038 0039                  l1047 006F                  l1039 003F  
                l1048 0075                  l3703 0000                  l3707 0000                  l3671 0000  
                l3663 0000                  l3681 0000                  l3673 0000                  l3665 0000  
                l3691 0000                  l3683 0000                  l3675 0000                  l3667 0000  
                l3693 0000                  l3685 0000                  l3677 0000                  l3669 0000  
                l3695 0000                  l3687 0000                  l3679 001E                  l3697 0000  
                l3689 0000                  _IOCB 0096                  _RBIE 005B                  _RBIF 0058  
                _main 000F                  btemp 007E                  start 000C                 ?_main 0070  
               _ANSEL 0188                 _PORTD 0008                 _TRISB 0086                 _TRISD 0088  
               _maled 0020                 pclath 000A                 status 0003                 wtemp0 007E  
        __end_of_main 007C                ??_main 0072                _ANSELH 0189                i1l1070 00A1  
              i1l1063 0091                i1l1056 0081                i1l1083 00BF                i1l1059 0087  
              i1l1077 00B1                i1l3621 008F                i1l3631 009B                i1l3641 00A7  
              i1l3617 008B                i1l3609 0000                i1l3627 0097                i1l3635 009F  
              i1l3645 00AB                i1l3655 00B7                i1l3649 00AF                i1l3659 00BB  
              _button 007C                saved_w 007E        __pcstackCOMMON 0070          __pidataBANK0 0000  
          __pmaintext 000F            __pintentry 0004               ?_button 0070       __size_of_button 004A  
end_of_initialization 00DF        __end_of_button 00C6   start_initialization 00C6           __pdataBANK0 0020  
            ??_button 0070           __pbssCOMMON 0072     interrupt_function 0004              _S1_state 0072  
            __ptext48 007C              __ptext49 0000         __size_of_main 006D              intlevel1 0000  
