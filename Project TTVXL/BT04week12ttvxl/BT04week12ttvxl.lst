

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 25 11:33:46 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	text757,local,class=CODE,delta=2
    15                           	psect	text760,local,class=CODE,delta=2
    16                           	psect	text762,local,class=CODE,delta=2
    17                           	psect	text763,local,class=CODE,delta=2
    18                           	psect	text766,local,class=CODE,delta=2
    19                           	psect	text784,local,class=CODE,delta=2
    20                           	psect	text788,local,class=CODE,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text790,local,class=CODE,delta=2
    23                           	psect	pa_nodes,global,class=CODE,delta=2
    24                           	dabs	1,0x7E,2
    25  000A                     	;#
    26                           
    27                           	psect	config
    28  2007  E3C2               	dw	58306	;#
    29                           
    30                           	psect	strings
    31  1000                     __pstrings:	
    32  1000                     stringtab:	
    33                           ;	global	stringdir,stringtab,__stringbase
    34                           
    35  1000                     stringcode:	
    36                           ;	String table - string pointers are 1 byte each
    37                           
    38  1000                     stringdir:	
    39  1000  3010               	movlw	high stringdir
    40  1001  008A               	movwf	10
    41  1002  0804               	movf	4,w
    42  1003  0A84               	incf	4,f
    43  1004  0782               	addwf	2,f
    44  1005                     __stringbase:	
    45  1005  3400               	retlw	0
    46  1006                     __npowers_:	
    47  1006  3400               	retlw	0
    48  1007  3480               	retlw	128
    49  1008  343F               	retlw	63
    50  1009  34CD               	retlw	205
    51  100A  34CC               	retlw	204
    52  100B  343D               	retlw	61
    53  100C  34D7               	retlw	215
    54  100D  3423               	retlw	35
    55  100E  343C               	retlw	60
    56  100F  3412               	retlw	18
    57  1010  3483               	retlw	131
    58  1011  343A               	retlw	58
    59  1012  34B7               	retlw	183
    60  1013  34D1               	retlw	209
    61  1014  3438               	retlw	56
    62  1015  34C6               	retlw	198
    63  1016  3427               	retlw	39
    64  1017  3437               	retlw	55
    65  1018  3438               	retlw	56
    66  1019  3486               	retlw	134
    67  101A  3435               	retlw	53
    68  101B  34C0               	retlw	192
    69  101C  34D6               	retlw	214
    70  101D  3433               	retlw	51
    71  101E  34CC               	retlw	204
    72  101F  342B               	retlw	43
    73  1020  3432               	retlw	50
    74  1021  3470               	retlw	112
    75  1022  3489               	retlw	137
    76  1023  3430               	retlw	48
    77  1024  34E7               	retlw	231
    78  1025  34DB               	retlw	219
    79  1026  342E               	retlw	46
    80  1027  34E5               	retlw	229
    81  1028  343C               	retlw	60
    82  1029  341E               	retlw	30
    83  102A  3442               	retlw	66
    84  102B  34A2               	retlw	162
    85  102C  340D               	retlw	13
    86  102D                     __powers_:	
    87  102D  3400               	retlw	0
    88  102E  3480               	retlw	128
    89  102F  343F               	retlw	63
    90  1030  3400               	retlw	0
    91  1031  3420               	retlw	32
    92  1032  3441               	retlw	65
    93  1033  3400               	retlw	0
    94  1034  34C8               	retlw	200
    95  1035  3442               	retlw	66
    96  1036  3400               	retlw	0
    97  1037  347A               	retlw	122
    98  1038  3444               	retlw	68
    99  1039  3440               	retlw	64
   100  103A  341C               	retlw	28
   101  103B  3446               	retlw	70
   102  103C  3450               	retlw	80
   103  103D  34C3               	retlw	195
   104  103E  3447               	retlw	71
   105  103F  3424               	retlw	36
   106  1040  3474               	retlw	116
   107  1041  3449               	retlw	73
   108  1042  3497               	retlw	151
   109  1043  3418               	retlw	24
   110  1044  344B               	retlw	75
   111  1045  34BC               	retlw	188
   112  1046  34BE               	retlw	190
   113  1047  344C               	retlw	76
   114  1048  346B               	retlw	107
   115  1049  346E               	retlw	110
   116  104A  344E               	retlw	78
   117  104B  3403               	retlw	3
   118  104C  3415               	retlw	21
   119  104D  3450               	retlw	80
   120  104E  3479               	retlw	121
   121  104F  34AD               	retlw	173
   122  1050  3460               	retlw	96
   123  1051  34F3               	retlw	243
   124  1052  3449               	retlw	73
   125  1053  3471               	retlw	113
   126  1054                     _dpowers:	
   127  1054  3401               	retlw	1
   128  1055  3400               	retlw	0
   129  1056  3400               	retlw	0
   130  1057  3400               	retlw	0
   131  1058  340A               	retlw	10
   132  1059  3400               	retlw	0
   133  105A  3400               	retlw	0
   134  105B  3400               	retlw	0
   135  105C  3464               	retlw	100
   136  105D  3400               	retlw	0
   137  105E  3400               	retlw	0
   138  105F  3400               	retlw	0
   139  1060  34E8               	retlw	232
   140  1061  3403               	retlw	3
   141  1062  3400               	retlw	0
   142  1063  3400               	retlw	0
   143  1064  3410               	retlw	16
   144  1065  3427               	retlw	39
   145  1066  3400               	retlw	0
   146  1067  3400               	retlw	0
   147  1068  34A0               	retlw	160
   148  1069  3486               	retlw	134
   149  106A  3401               	retlw	1
   150  106B  3400               	retlw	0
   151  106C  3440               	retlw	64
   152  106D  3442               	retlw	66
   153  106E  340F               	retlw	15
   154  106F  3400               	retlw	0
   155  1070  3480               	retlw	128
   156  1071  3496               	retlw	150
   157  1072  3498               	retlw	152
   158  1073  3400               	retlw	0
   159  1074  3400               	retlw	0
   160  1075  34E1               	retlw	225
   161  1076  34F5               	retlw	245
   162  1077  3405               	retlw	5
   163  1078  3400               	retlw	0
   164  1079  34CA               	retlw	202
   165  107A  349A               	retlw	154
   166  107B  343B               	retlw	59
   167  0015                     _CCPR1	set	21
   168  0017                     _CCP1CON	set	23
   169  000F                     _TMR1H	set	15
   170  000E                     _TMR1L	set	14
   171  0062                     _CCP1IF	set	98
   172  005F                     _GIE	set	95
   173  005E                     _PEIE	set	94
   174  0041                     _RD1	set	65
   175  0042                     _RD2	set	66
   176  0043                     _RD3	set	67
   177  0044                     _RD4	set	68
   178  0045                     _RD5	set	69
   179  0046                     _RD6	set	70
   180  0047                     _RD7	set	71
   181  0084                     _T1CKPS0	set	132
   182  0085                     _T1CKPS1	set	133
   183  0082                     _T1SYNC	set	130
   184  0081                     _TMR1CS	set	129
   185  0086                     _TMR1GE	set	134
   186  0080                     _TMR1ON	set	128
   187  0088                     _TRISD	set	136
   188  0462                     _CCP1IE	set	1122
   189  042C                     _TRISA4	set	1068
   190  043A                     _TRISC2	set	1082
   191  0441                     _TRISD1	set	1089
   192  0442                     _TRISD2	set	1090
   193  0443                     _TRISD3	set	1091
   194  0444                     _TRISD4	set	1092
   195  0445                     _TRISD5	set	1093
   196  0446                     _TRISD6	set	1094
   197  0447                     _TRISD7	set	1095
   198  0448                     _TRISE0	set	1096
   199  0188                     _ANSEL	set	392
   200  0189                     _ANSELH	set	393
   201  107C                     STR_1:	
   202  107C  3478               	retlw	120	;'x'
   203  107D  3475               	retlw	117	;'u'
   204  107E  346E               	retlw	110	;'n'
   205  107F  3467               	retlw	103	;'g'
   206  1080  343A               	retlw	58	;':'
   207  1081  3420               	retlw	32	;' '
   208  1082  3425               	retlw	37	;'%'
   209  1083  3430               	retlw	48	;'0'
   210  1084  3438               	retlw	56	;'8'
   211  1085  3475               	retlw	117	;'u'
   212  1086  3400               	retlw	0
   213  1087                     STR_2:	
   214  1087  3466               	retlw	102	;'f'
   215  1088  343A               	retlw	58	;':'
   216  1089  3420               	retlw	32	;' '
   217  108A  3425               	retlw	37	;'%'
   218  108B  3435               	retlw	53	;'5'
   219  108C  342E               	retlw	46	;'.'
   220  108D  3432               	retlw	50	;'2'
   221  108E  3466               	retlw	102	;'f'
   222  108F  3400               	retlw	0
   223                           
   224                           	psect	cinit
   225  07D0                     start_initialization:	
   226                           
   227                           ; Clear objects allocated to COMMON
   228  07D0  01F6               	clrf	__pbssCOMMON& (0+127)
   229  07D1  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   230                           
   231                           ; Clear objects allocated to BANK0
   232  07D2  01E9               	clrf	__pbssBANK0& (0+127)
   233  07D3  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   234  07D4  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   235  07D5  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   236  07D6  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   237  07D7  01EE               	clrf	(__pbssBANK0+5)& (0+127)
   238  07D8  01EF               	clrf	(__pbssBANK0+6)& (0+127)
   239                           
   240                           ; Clear objects allocated to BANK1
   241  07D9  1683               	bsf	3,5	;RP0=1, select bank1
   242  07DA  01B9               	clrf	__pbssBANK1& (0+127)
   243  07DB  01BA               	clrf	(__pbssBANK1+1)& (0+127)
   244  07DC  01BB               	clrf	(__pbssBANK1+2)& (0+127)
   245  07DD                     end_of_initialization:	
   246                           ;End of C runtime variable initialization code
   247                           
   248  07DD  0183               	clrf	3
   249  07DE  160A  118A  2EA3   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	bssCOMMON
   252  0076                     __pbssCOMMON:	
   253  0076                     _count_old:	
   254  0076                     	ds	2
   255                           
   256                           	psect	bssBANK0
   257  0069                     __pbssBANK0:	
   258  0069                     _xung:	
   259  0069                     	ds	4
   260  006D                     _f:	
   261  006D                     	ds	3
   262                           
   263                           	psect	bssBANK1
   264  00B9                     __pbssBANK1:	
   265  00B9                     _t:	
   266  00B9                     	ds	3
   267                           
   268                           	psect	cstackBANK1
   269  00A0                     __pcstackBANK1:	
   270  00A0                     _printf$3173:	
   271                           
   272                           ; 4 bytes @ 0x0
   273  00A0                     	ds	4
   274  00A4                     printf@ap:	
   275                           
   276                           ; 1 bytes @ 0x4
   277  00A4                     	ds	1
   278  00A5                     printf@integ:	
   279                           
   280                           ; 3 bytes @ 0x5
   281  00A5                     	ds	3
   282  00A8                     printf@_val:	
   283                           
   284                           ; 4 bytes @ 0x8
   285  00A8                     	ds	4
   286  00AC                     printf@f:	
   287                           
   288                           ; 1 bytes @ 0xC
   289  00AC                     	ds	1
   290  00AD                     printf@flag:	
   291                           
   292                           ; 2 bytes @ 0xD
   293  00AD                     	ds	2
   294  00AF                     printf@exp:	
   295                           
   296                           ; 2 bytes @ 0xF
   297  00AF                     	ds	2
   298  00B1                     printf@width:	
   299                           
   300                           ; 2 bytes @ 0x11
   301  00B1                     	ds	2
   302  00B3                     printf@fval:	
   303                           
   304                           ; 3 bytes @ 0x13
   305  00B3                     	ds	3
   306  00B6                     printf@prec:	
   307                           
   308                           ; 2 bytes @ 0x16
   309  00B6                     	ds	2
   310  00B8                     printf@c:	
   311                           
   312                           ; 1 bytes @ 0x18
   313  00B8                     	ds	1
   314                           
   315                           	psect	cstackCOMMON
   316  0070                     __pcstackCOMMON:	
   317  0070                     ?_lcd_init:	
   318  0070                     ?_lcd_putc:	
   319                           ; 0 bytes @ 0x0
   320                           
   321  0070                     ?_isprint:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_isdigit:	
   325                           ; 1 bit 
   326                           
   327  0070                     ?_main:	
   328                           ; 1 bit 
   329                           
   330  0070                     ?_putch:	
   331                           ; 0 bytes @ 0x0
   332                           
   333  0070                     ?_ngat:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ?_lcd_busy:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_abs:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     abs@a:	
   343                           ; 2 bytes @ 0x0
   344                           
   345                           
   346                           ; 2 bytes @ 0x0
   347  0070                     	ds	2
   348  0072                     ??_abs:	
   349                           
   350                           ; 0 bytes @ 0x2
   351  0072                     	ds	2
   352  0074                     ??_ngat:	
   353                           
   354                           ; 0 bytes @ 0x4
   355  0074                     	ds	2
   356  0076                     ??_lcd_gotoxy:	
   357  0076                     ??_lcd_putc:	
   358                           ; 0 bytes @ 0x6
   359                           
   360  0076                     ??_isprint:	
   361                           ; 0 bytes @ 0x6
   362                           
   363  0076                     ??_isdigit:	
   364                           ; 0 bytes @ 0x6
   365                           
   366  0076                     ??_main:	
   367                           ; 0 bytes @ 0x6
   368                           
   369  0076                     ??_putch:	
   370                           ; 0 bytes @ 0x6
   371                           
   372  0076                     ??_fround:	
   373                           ; 0 bytes @ 0x6
   374                           
   375  0076                     ??___bmul:	
   376                           ; 0 bytes @ 0x6
   377                           
   378  0076                     ??___wmul:	
   379                           ; 0 bytes @ 0x6
   380                           
   381  0076                     ??___lbdiv:	
   382                           ; 0 bytes @ 0x6
   383                           
   384  0076                     ??___ftsub:	
   385                           ; 0 bytes @ 0x6
   386                           
   387  0076                     ??___awdiv:	
   388                           ; 0 bytes @ 0x6
   389                           
   390  0076                     ??___llmod:	
   391                           ; 0 bytes @ 0x6
   392                           
   393  0076                     ??___ftneg:	
   394                           ; 0 bytes @ 0x6
   395                           
   396  0076                     ??___ftge:	
   397                           ; 0 bytes @ 0x6
   398                           
   399  0076                     ??___lldiv:	
   400                           ; 0 bytes @ 0x6
   401                           
   402  0076                     ??___awmod:	
   403                           ; 0 bytes @ 0x6
   404                           
   405  0076                     ??___altoft:	
   406                           ; 0 bytes @ 0x6
   407                           
   408  0076                     ??___lltoft:	
   409                           ; 0 bytes @ 0x6
   410                           
   411                           
   412                           	psect	cstackBANK0
   413  0020                     __pcstackBANK0:	
   414                           ; 0 bytes @ 0x6
   415                           
   416  0020                     ?_lcd_put_byte:	
   417  0020                     ??_lcd_busy:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0020                     ?___ftge:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0020                     ?___lbmod:	
   424                           ; 1 bit 
   425                           
   426  0020                     ?___wmul:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0020                     ?___awmod:	
   430                           ; 2 bytes @ 0x0
   431                           
   432  0020                     ?___ftpack:	
   433                           ; 2 bytes @ 0x0
   434                           
   435  0020                     ?___ftneg:	
   436                           ; 3 bytes @ 0x0
   437                           
   438  0020                     ?__tdiv_to_l_:	
   439                           ; 3 bytes @ 0x0
   440                           
   441  0020                     ?__div_to_l_:	
   442                           ; 4 bytes @ 0x0
   443                           
   444  0020                     ?___lldiv:	
   445                           ; 4 bytes @ 0x0
   446                           
   447  0020                     lcd_put_byte@b:	
   448                           ; 4 bytes @ 0x0
   449                           
   450  0020                     _isdigit$3683:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0020                     _isprint$3686:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0020                     ___lbmod@divisor:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0020                     ___wmul@multiplier:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0020                     ___awmod@divisor:	
   463                           ; 2 bytes @ 0x0
   464                           
   465  0020                     ___ftneg@f1:	
   466                           ; 2 bytes @ 0x0
   467                           
   468  0020                     ___ftge@ff1:	
   469                           ; 3 bytes @ 0x0
   470                           
   471  0020                     __tdiv_to_l_@f1:	
   472                           ; 3 bytes @ 0x0
   473                           
   474  0020                     __div_to_l_@f1:	
   475                           ; 3 bytes @ 0x0
   476                           
   477  0020                     ___ftpack@arg:	
   478                           ; 3 bytes @ 0x0
   479                           
   480  0020                     ___lldiv@divisor:	
   481                           ; 3 bytes @ 0x0
   482                           
   483                           
   484                           ; 4 bytes @ 0x0
   485  0020                     	ds	1
   486  0021                     ??_lcd_put_byte:	
   487  0021                     ??___lbmod:	
   488                           ; 0 bytes @ 0x1
   489                           
   490  0021                     lcd_busy@busy:	
   491                           ; 0 bytes @ 0x1
   492                           
   493  0021                     isdigit@c:	
   494                           ; 1 bytes @ 0x1
   495                           
   496  0021                     isprint@c:	
   497                           ; 1 bytes @ 0x1
   498                           
   499                           
   500                           ; 1 bytes @ 0x1
   501  0021                     	ds	1
   502  0022                     ___lbmod@dividend:	
   503  0022                     ___wmul@multiplicand:	
   504                           ; 1 bytes @ 0x2
   505                           
   506  0022                     ___awmod@dividend:	
   507                           ; 2 bytes @ 0x2
   508                           
   509                           
   510                           ; 2 bytes @ 0x2
   511  0022                     	ds	1
   512  0023                     lcd_put_byte@rs:	
   513  0023                     ___lbmod@counter:	
   514                           ; 1 bytes @ 0x3
   515                           
   516  0023                     ___ftpack@exp:	
   517                           ; 1 bytes @ 0x3
   518                           
   519  0023                     ___ftge@ff2:	
   520                           ; 1 bytes @ 0x3
   521                           
   522  0023                     __tdiv_to_l_@f2:	
   523                           ; 3 bytes @ 0x3
   524                           
   525  0023                     __div_to_l_@f2:	
   526                           ; 3 bytes @ 0x3
   527                           
   528                           
   529                           ; 3 bytes @ 0x3
   530  0023                     	ds	1
   531  0024                     lcd_put_byte@temp:	
   532  0024                     ___lbmod@rem:	
   533                           ; 1 bytes @ 0x4
   534                           
   535  0024                     ___awmod@counter:	
   536                           ; 1 bytes @ 0x4
   537                           
   538  0024                     ___ftpack@sign:	
   539                           ; 1 bytes @ 0x4
   540                           
   541  0024                     ___wmul@product:	
   542                           ; 1 bytes @ 0x4
   543                           
   544  0024                     ___lldiv@dividend:	
   545                           ; 2 bytes @ 0x4
   546                           
   547                           
   548                           ; 4 bytes @ 0x4
   549  0024                     	ds	1
   550  0025                     ??_lcd_init:	
   551  0025                     ?_lcd_gotoxy:	
   552                           ; 0 bytes @ 0x5
   553                           
   554  0025                     ??___ftpack:	
   555                           ; 0 bytes @ 0x5
   556                           
   557  0025                     ?___lbdiv:	
   558                           ; 0 bytes @ 0x5
   559                           
   560  0025                     lcd_gotoxy@row:	
   561                           ; 1 bytes @ 0x5
   562                           
   563  0025                     ___lbdiv@divisor:	
   564                           ; 1 bytes @ 0x5
   565                           
   566  0025                     ___awmod@sign:	
   567                           ; 1 bytes @ 0x5
   568                           
   569                           
   570                           ; 1 bytes @ 0x5
   571  0025                     	ds	1
   572  0026                     ??__tdiv_to_l_:	
   573  0026                     ??__div_to_l_:	
   574                           ; 0 bytes @ 0x6
   575                           
   576  0026                     ?___awdiv:	
   577                           ; 0 bytes @ 0x6
   578                           
   579  0026                     lcd_gotoxy@col:	
   580                           ; 2 bytes @ 0x6
   581                           
   582  0026                     ___lbdiv@dividend:	
   583                           ; 1 bytes @ 0x6
   584                           
   585  0026                     ___awdiv@divisor:	
   586                           ; 1 bytes @ 0x6
   587                           
   588                           
   589                           ; 2 bytes @ 0x6
   590  0026                     	ds	1
   591  0027                     lcd_gotoxy@address:	
   592  0027                     ___lbdiv@counter:	
   593                           ; 1 bytes @ 0x7
   594                           
   595                           
   596                           ; 1 bytes @ 0x7
   597  0027                     	ds	1
   598  0028                     ?___ftdiv:	
   599  0028                     ?___altoft:	
   600                           ; 3 bytes @ 0x8
   601                           
   602  0028                     ?___lltoft:	
   603                           ; 3 bytes @ 0x8
   604                           
   605  0028                     lcd_putc@c:	
   606                           ; 3 bytes @ 0x8
   607                           
   608  0028                     ___lbdiv@quotient:	
   609                           ; 1 bytes @ 0x8
   610                           
   611  0028                     ___awdiv@dividend:	
   612                           ; 1 bytes @ 0x8
   613                           
   614  0028                     ___ftdiv@f2:	
   615                           ; 2 bytes @ 0x8
   616                           
   617  0028                     ___lldiv@quotient:	
   618                           ; 3 bytes @ 0x8
   619                           
   620  0028                     ___altoft@c:	
   621                           ; 4 bytes @ 0x8
   622                           
   623  0028                     ___lltoft@c:	
   624                           ; 4 bytes @ 0x8
   625                           
   626                           
   627                           ; 4 bytes @ 0x8
   628  0028                     	ds	1
   629  0029                     ?___bmul:	
   630  0029                     putch@c:	
   631                           ; 1 bytes @ 0x9
   632                           
   633  0029                     ___bmul@multiplicand:	
   634                           ; 1 bytes @ 0x9
   635                           
   636  0029                     __tdiv_to_l_@quot:	
   637                           ; 1 bytes @ 0x9
   638                           
   639                           
   640                           ; 4 bytes @ 0x9
   641  0029                     	ds	1
   642  002A                     ___bmul@product:	
   643  002A                     ___awdiv@counter:	
   644                           ; 1 bytes @ 0xA
   645                           
   646                           
   647                           ; 1 bytes @ 0xA
   648  002A                     	ds	1
   649  002B                     ___bmul@multiplier:	
   650  002B                     ___awdiv@sign:	
   651                           ; 1 bytes @ 0xB
   652                           
   653  002B                     ___ftdiv@f1:	
   654                           ; 1 bytes @ 0xB
   655                           
   656                           
   657                           ; 3 bytes @ 0xB
   658  002B                     	ds	1
   659  002C                     ___lldiv@counter:	
   660  002C                     ___altoft@exp:	
   661                           ; 1 bytes @ 0xC
   662                           
   663  002C                     ___lltoft@exp:	
   664                           ; 1 bytes @ 0xC
   665                           
   666  002C                     ___awdiv@quotient:	
   667                           ; 1 bytes @ 0xC
   668                           
   669                           
   670                           ; 2 bytes @ 0xC
   671  002C                     	ds	1
   672  002D                     ?___llmod:	
   673  002D                     ___altoft@sign:	
   674                           ; 4 bytes @ 0xD
   675                           
   676  002D                     __tdiv_to_l_@cntr:	
   677                           ; 1 bytes @ 0xD
   678                           
   679  002D                     ___llmod@divisor:	
   680                           ; 1 bytes @ 0xD
   681                           
   682                           
   683                           ; 4 bytes @ 0xD
   684  002D                     	ds	1
   685  002E                     ??___ftdiv:	
   686  002E                     ?___fttol:	
   687                           ; 0 bytes @ 0xE
   688                           
   689  002E                     __tdiv_to_l_@exp1:	
   690                           ; 4 bytes @ 0xE
   691                           
   692  002E                     ___fttol@f1:	
   693                           ; 1 bytes @ 0xE
   694                           
   695  002E                     __div_to_l_@quot:	
   696                           ; 3 bytes @ 0xE
   697                           
   698                           
   699                           ; 4 bytes @ 0xE
   700  002E                     	ds	3
   701  0031                     ___ftdiv@cntr:	
   702  0031                     ___llmod@dividend:	
   703                           ; 1 bytes @ 0x11
   704                           
   705                           
   706                           ; 4 bytes @ 0x11
   707  0031                     	ds	1
   708  0032                     ??___fttol:	
   709  0032                     __div_to_l_@cntr:	
   710                           ; 0 bytes @ 0x12
   711                           
   712  0032                     ___ftdiv@f3:	
   713                           ; 1 bytes @ 0x12
   714                           
   715                           
   716                           ; 3 bytes @ 0x12
   717  0032                     	ds	1
   718  0033                     __div_to_l_@exp1:	
   719                           
   720                           ; 1 bytes @ 0x13
   721  0033                     	ds	2
   722  0035                     ___ftdiv@exp:	
   723  0035                     ___fttol@sign1:	
   724                           ; 1 bytes @ 0x15
   725                           
   726  0035                     ___llmod@counter:	
   727                           ; 1 bytes @ 0x15
   728                           
   729                           
   730                           ; 1 bytes @ 0x15
   731  0035                     	ds	1
   732  0036                     ___ftdiv@sign:	
   733  0036                     ___fttol@lval:	
   734                           ; 1 bytes @ 0x16
   735                           
   736                           
   737                           ; 4 bytes @ 0x16
   738  0036                     	ds	4
   739  003A                     ___fttol@exp1:	
   740                           
   741                           ; 1 bytes @ 0x1A
   742  003A                     	ds	1
   743  003B                     ?___ftmul:	
   744  003B                     ___ftmul@f1:	
   745                           ; 3 bytes @ 0x1B
   746                           
   747                           
   748                           ; 3 bytes @ 0x1B
   749  003B                     	ds	3
   750  003E                     ___ftmul@f2:	
   751                           
   752                           ; 3 bytes @ 0x1E
   753  003E                     	ds	3
   754  0041                     ??___ftmul:	
   755                           
   756                           ; 0 bytes @ 0x21
   757  0041                     	ds	3
   758  0044                     ___ftmul@exp:	
   759                           
   760                           ; 1 bytes @ 0x24
   761  0044                     	ds	1
   762  0045                     ___ftmul@f3_as_product:	
   763                           
   764                           ; 3 bytes @ 0x25
   765  0045                     	ds	3
   766  0048                     ___ftmul@cntr:	
   767                           
   768                           ; 1 bytes @ 0x28
   769  0048                     	ds	1
   770  0049                     ___ftmul@sign:	
   771                           
   772                           ; 1 bytes @ 0x29
   773  0049                     	ds	1
   774  004A                     ?_scale:	
   775  004A                     ?___ftadd:	
   776                           ; 3 bytes @ 0x2A
   777                           
   778  004A                     ___ftadd@f1:	
   779                           ; 3 bytes @ 0x2A
   780                           
   781                           
   782                           ; 3 bytes @ 0x2A
   783  004A                     	ds	3
   784  004D                     ??_scale:	
   785  004D                     ___ftadd@f2:	
   786                           ; 0 bytes @ 0x2D
   787                           
   788                           
   789                           ; 3 bytes @ 0x2D
   790  004D                     	ds	3
   791  0050                     ??___ftadd:	
   792                           
   793                           ; 0 bytes @ 0x30
   794  0050                     	ds	1
   795  0051                     _scale$4121:	
   796                           
   797                           ; 3 bytes @ 0x31
   798  0051                     	ds	2
   799  0053                     ___ftadd@sign:	
   800                           
   801                           ; 1 bytes @ 0x33
   802  0053                     	ds	1
   803  0054                     scale@scl:	
   804  0054                     ___ftadd@exp2:	
   805                           ; 1 bytes @ 0x34
   806                           
   807                           
   808                           ; 1 bytes @ 0x34
   809  0054                     	ds	1
   810  0055                     ___ftadd@exp1:	
   811                           
   812                           ; 1 bytes @ 0x35
   813  0055                     	ds	1
   814  0056                     ?_fround:	
   815  0056                     ?___ftsub:	
   816                           ; 3 bytes @ 0x36
   817                           
   818  0056                     ___ftsub@f2:	
   819                           ; 3 bytes @ 0x36
   820                           
   821                           
   822                           ; 3 bytes @ 0x36
   823  0056                     	ds	3
   824  0059                     ___ftsub@f1:	
   825  0059                     _fround$4120:	
   826                           ; 3 bytes @ 0x39
   827                           
   828                           
   829                           ; 3 bytes @ 0x39
   830  0059                     	ds	3
   831  005C                     _fround$4119:	
   832                           
   833                           ; 3 bytes @ 0x3C
   834  005C                     	ds	3
   835  005F                     fround@prec:	
   836                           
   837                           ; 1 bytes @ 0x3F
   838  005F                     	ds	1
   839  0060                     ?_printf:	
   840                           
   841                           ; 2 bytes @ 0x40
   842  0060                     	ds	4
   843  0064                     ??_printf:	
   844                           
   845                           ; 0 bytes @ 0x44
   846  0064                     	ds	5
   847                           
   848                           	psect	maintext
   849  16A3                     __pmaintext:	
   850 ;;Data sizes: Strings 20, constant 118, data 0, bss 12, persistent 0 stack 0
   851 ;;Auto spaces:   Size  Autos    Used
   852 ;; COMMON          14      6       8
   853 ;; BANK0           80     73      80
   854 ;; BANK1           80     25      28
   855 ;; BANK3           96      0       0
   856 ;; BANK2           96      0       0
   857 ;;
   858 ;; Pointer list with targets:
   859 ;; ?___ftpack	float  size(1) Largest target is 3
   860 ;;		 -> t(BANK1[3]), 
   861 ;;
   862 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   863 ;;
   864 ;; ?___llmod	unsigned long  size(1) Largest target is 3
   865 ;;		 -> t(BANK1[3]), 
   866 ;;
   867 ;; ?___ftsub	float  size(1) Largest target is 0
   868 ;;
   869 ;; ?___lltoft	float  size(1) Largest target is 0
   870 ;;
   871 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   872 ;;
   873 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   874 ;;
   875 ;; ?___fttol	long  size(1) Largest target is 3
   876 ;;		 -> t(BANK1[3]), 
   877 ;;
   878 ;; ?___ftadd	float  size(1) Largest target is 3
   879 ;;		 -> t(BANK1[3]), 
   880 ;;
   881 ;; ?___ftneg	float  size(1) Largest target is 3
   882 ;;		 -> t(BANK1[3]), 
   883 ;;
   884 ;; ?___awmod	int  size(2) Largest target is 40
   885 ;;		 -> dpowers(CODE[40]), t(BANK1[3]), 
   886 ;;
   887 ;; ?___awdiv	int  size(1) Largest target is 0
   888 ;;
   889 ;; ?_scale	int  size(1) Largest target is 0
   890 ;;
   891 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   892 ;;
   893 ;; ?_fround	unsigned int  size(1) Largest target is 0
   894 ;;
   895 ;; ?_abs	int  size(1) Largest target is 0
   896 ;;
   897 ;; ?___ftdiv	float  size(1) Largest target is 0
   898 ;;
   899 ;; ?___ftmul	float  size(1) Largest target is 0
   900 ;;
   901 ;; ?___altoft	float  size(1) Largest target is 0
   902 ;;
   903 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   904 ;;		 -> STR_2(CODE[9]), STR_1(CODE[11]), 
   905 ;;
   906 ;; ?_printf	int  size(1) Largest target is 3
   907 ;;		 -> t(BANK1[3]), 
   908 ;;
   909 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   910 ;;		 -> ?_printf(BANK0[2]), 
   911 ;;
   912 ;; S3162$_cp	PTR const unsigned char  size(1) Largest target is 0
   913 ;;
   914 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   915 ;;
   916 ;;
   917 ;; Critical Paths under _main in COMMON
   918 ;;
   919 ;;   None.
   920 ;;
   921 ;; Critical Paths under _ngat in COMMON
   922 ;;
   923 ;;   _ngat->_abs
   924 ;;
   925 ;; Critical Paths under _main in BANK0
   926 ;;
   927 ;;   _main->_printf
   928 ;;   _printf->_fround
   929 ;;   _putch->_lcd_putc
   930 ;;   _lcd_putc->_lcd_gotoxy
   931 ;;   ___ftsub->___ftadd
   932 ;;   _scale->___ftmul
   933 ;;   _fround->___ftadd
   934 ;;   _lcd_gotoxy->_lcd_put_byte
   935 ;;   _lcd_init->_lcd_put_byte
   936 ;;   ___lltoft->___ftpack
   937 ;;   ___altoft->___ftpack
   938 ;;   ___ftmul->___fttol
   939 ;;   ___ftdiv->___ftpack
   940 ;;   ___ftadd->___ftmul
   941 ;;   ___llmod->___lldiv
   942 ;;   ___awdiv->___awmod
   943 ;;   ___fttol->___awdiv
   944 ;;   ___lbdiv->___lbmod
   945 ;;   ___bmul->___lbdiv
   946 ;;
   947 ;; Critical Paths under _ngat in BANK0
   948 ;;
   949 ;;   None.
   950 ;;
   951 ;; Critical Paths under _main in BANK1
   952 ;;
   953 ;;   _main->_printf
   954 ;;
   955 ;; Critical Paths under _ngat in BANK1
   956 ;;
   957 ;;   None.
   958 ;;
   959 ;; Critical Paths under _main in BANK3
   960 ;;
   961 ;;   None.
   962 ;;
   963 ;; Critical Paths under _ngat in BANK3
   964 ;;
   965 ;;   None.
   966 ;;
   967 ;; Critical Paths under _main in BANK2
   968 ;;
   969 ;;   None.
   970 ;;
   971 ;; Critical Paths under _ngat in BANK2
   972 ;;
   973 ;;   None.
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   976 ;;
   977 ;;
   978 ;;Call Graph Tables:
   979 ;;
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   982 ;; ---------------------------------------------------------------------------------
   983 ;; (0) _main                                                 0     0      0   15487
   984 ;;                           _lcd_init
   985 ;;                           ___altoft
   986 ;;                            ___ftmul
   987 ;;                            ___ftdiv
   988 ;;                         _lcd_gotoxy
   989 ;;                             _printf
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (1) _printf                                              38    34      4   13460
   992 ;;                                             64 BANK0      9     5      4
   993 ;;                                              0 BANK1     25    25      0
   994 ;;                              _putch
   995 ;;                            _isdigit
   996 ;;                             ___wmul
   997 ;;                             ___ftge
   998 ;;                            ___ftneg
   999 ;;                            ___awdiv
  1000 ;;                              _scale
  1001 ;;                            ___ftmul
  1002 ;;                             _fround
  1003 ;;                            ___ftadd
  1004 ;;                            ___fttol
  1005 ;;                         __div_to_l_
  1006 ;;                        __tdiv_to_l_
  1007 ;;                           ___lltoft
  1008 ;;                            ___ftsub
  1009 ;;                            ___lldiv
  1010 ;;                            ___llmod
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (2) _putch                                                1     1      0     813
  1013 ;;                                              9 BANK0      1     1      0
  1014 ;;                           _lcd_putc
  1015 ;; ---------------------------------------------------------------------------------
  1016 ;; (3) _lcd_putc                                             1     1      0     782
  1017 ;;                                              8 BANK0      1     1      0
  1018 ;;                       _lcd_put_byte
  1019 ;;                           _lcd_busy
  1020 ;;                         _lcd_gotoxy
  1021 ;;                            _isprint
  1022 ;; ---------------------------------------------------------------------------------
  1023 ;; (2) ___ftsub                                              6     0      6    1114
  1024 ;;                                             54 BANK0      6     0      6
  1025 ;;                            ___ftadd
  1026 ;;                           ___lltoft (ARG)
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (2) _scale                                               14    11      3    2218
  1029 ;;                                             42 BANK0     11     8      3
  1030 ;;                            ___awmod
  1031 ;;                            ___awdiv
  1032 ;;                            ___ftmul
  1033 ;;                             ___bmul
  1034 ;;                            ___fttol (ARG)
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (2) _fround                                              13    10      3    1461
  1037 ;;                                             54 BANK0     10     7      3
  1038 ;;                            ___lbmod
  1039 ;;                             ___bmul
  1040 ;;                            ___lbdiv
  1041 ;;                            ___ftmul
  1042 ;;                            ___ftadd (ARG)
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (4) _lcd_gotoxy                                           3     2      1     346
  1045 ;;                                              5 BANK0      3     2      1
  1046 ;;                       _lcd_put_byte
  1047 ;;                           _lcd_busy
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (1) _lcd_init                                             4     4      0     244
  1050 ;;                                              5 BANK0      3     3      0
  1051 ;;                       _lcd_put_byte
  1052 ;;                           _lcd_busy
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (2) ___lltoft                                             5     1      4     311
  1055 ;;                                              8 BANK0      5     1      4
  1056 ;;                           ___ftpack
  1057 ;; ---------------------------------------------------------------------------------
  1058 ;; (1) ___altoft                                             6     2      4     413
  1059 ;;                                              8 BANK0      6     2      4
  1060 ;;                           ___ftpack
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (3) ___ftmul                                             15     9      6     535
  1063 ;;                                             27 BANK0     15     9      6
  1064 ;;                           ___ftpack
  1065 ;;                           ___altoft (ARG)
  1066 ;;                            ___fttol (ARG)
  1067 ;;                            ___awdiv (ARG)
  1068 ;;                            ___awmod (ARG)
  1069 ;;                             ___bmul (ARG)
  1070 ;;                            ___lbdiv (ARG)
  1071 ;;                            ___lbmod (ARG)
  1072 ;; ---------------------------------------------------------------------------------
  1073 ;; (1) ___ftdiv                                             15     9      6     489
  1074 ;;                                              8 BANK0     15     9      6
  1075 ;;                           ___ftpack
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (3) ___ftadd                                             12     6      6    1049
  1078 ;;                                             42 BANK0     12     6      6
  1079 ;;                           ___ftpack
  1080 ;;                            ___lbmod (ARG)
  1081 ;;                             ___bmul (ARG)
  1082 ;;                            ___lbdiv (ARG)
  1083 ;;                            ___ftmul (ARG)
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (5) _lcd_busy                                             2     2      0      23
  1086 ;;                                              0 BANK0      2     2      0
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (5) _lcd_put_byte                                         5     4      1     221
  1089 ;;                                              0 BANK0      5     4      1
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (3) ___awmod                                              6     2      4     433
  1092 ;;                                              0 BANK0      6     2      4
  1093 ;; ---------------------------------------------------------------------------------
  1094 ;; (2) ___lldiv                                             13     5      8     241
  1095 ;;                                              0 BANK0     13     5      8
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (2) ___ftge                                               6     0      6     198
  1098 ;;                                              0 BANK0      6     0      6
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (2) ___ftneg                                              3     0      3      65
  1101 ;;                                              0 BANK0      3     0      3
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (2) ___llmod                                              9     1      8     232
  1104 ;;                                             13 BANK0      9     1      8
  1105 ;;                            ___lldiv (ARG)
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (3) ___awdiv                                              8     4      4     445
  1108 ;;                                              6 BANK0      8     4      4
  1109 ;;                            ___awmod (ARG)
  1110 ;; ---------------------------------------------------------------------------------
  1111 ;; (2) ___fttol                                             13     9      4     252
  1112 ;;                                             14 BANK0     13     9      4
  1113 ;;                           ___ftpack (ARG)
  1114 ;;                            ___awmod (ARG)
  1115 ;;                            ___awdiv (ARG)
  1116 ;;                             ___bmul (ARG)
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (4) ___ftpack                                             8     3      5     209
  1119 ;;                                              0 BANK0      8     3      5
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (3) ___lbmod                                              5     4      1     159
  1122 ;;                                              0 BANK0      5     4      1
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (3) ___lbdiv                                              4     3      1     241
  1125 ;;                                              5 BANK0      4     3      1
  1126 ;;                            ___lbmod (ARG)
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (2) ___wmul                                               6     2      4     136
  1129 ;;                                              0 BANK0      6     2      4
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; (3) ___bmul                                               3     2      1     108
  1132 ;;                                              9 BANK0      3     2      1
  1133 ;;                            ___lbmod (ARG)
  1134 ;;                            ___lbdiv (ARG)
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (2) __div_to_l_                                          20    14      6     446
  1137 ;;                                              0 BANK0     20    14      6
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1140 ;;                                              0 BANK0     15     9      6
  1141 ;; ---------------------------------------------------------------------------------
  1142 ;; (2) _isdigit                                              2     2      0      99
  1143 ;;                                              0 BANK0      2     2      0
  1144 ;; ---------------------------------------------------------------------------------
  1145 ;; (4) _isprint                                              2     2      0      99
  1146 ;;                                              0 BANK0      2     2      0
  1147 ;; ---------------------------------------------------------------------------------
  1148 ;; Estimated maximum stack depth 5
  1149 ;; ---------------------------------------------------------------------------------
  1150 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (6) _ngat                                                 2     2      0      66
  1153 ;;                                              4 COMMON     2     2      0
  1154 ;;                                _abs
  1155 ;; ---------------------------------------------------------------------------------
  1156 ;; (7) _abs                                                  4     2      2      66
  1157 ;;                                              0 COMMON     4     2      2
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; Estimated maximum stack depth 7
  1160 ;; ---------------------------------------------------------------------------------
  1161 ;; Call Graph Graphs:
  1162 ;; _main (ROOT)
  1163 ;;   _lcd_init
  1164 ;;     _lcd_put_byte
  1165 ;;     _lcd_busy
  1166 ;;   ___altoft
  1167 ;;     ___ftpack
  1168 ;;   ___ftmul
  1169 ;;     ___ftpack
  1170 ;;     ___altoft (ARG)
  1171 ;;       ___ftpack
  1172 ;;     ___fttol (ARG)
  1173 ;;       ___ftpack (ARG)
  1174 ;;       ___awmod (ARG)
  1175 ;;       ___awdiv (ARG)
  1176 ;;         ___awmod (ARG)
  1177 ;;       ___bmul (ARG)
  1178 ;;         ___lbmod (ARG)
  1179 ;;         ___lbdiv (ARG)
  1180 ;;           ___lbmod (ARG)
  1181 ;;     ___awdiv (ARG)
  1182 ;;       ___awmod (ARG)
  1183 ;;     ___awmod (ARG)
  1184 ;;     ___bmul (ARG)
  1185 ;;       ___lbmod (ARG)
  1186 ;;       ___lbdiv (ARG)
  1187 ;;         ___lbmod (ARG)
  1188 ;;     ___lbdiv (ARG)
  1189 ;;       ___lbmod (ARG)
  1190 ;;     ___lbmod (ARG)
  1191 ;;   ___ftdiv
  1192 ;;     ___ftpack
  1193 ;;   _lcd_gotoxy
  1194 ;;     _lcd_put_byte
  1195 ;;     _lcd_busy
  1196 ;;   _printf
  1197 ;;     _putch
  1198 ;;       _lcd_putc
  1199 ;;         _lcd_put_byte
  1200 ;;         _lcd_busy
  1201 ;;         _lcd_gotoxy
  1202 ;;           _lcd_put_byte
  1203 ;;           _lcd_busy
  1204 ;;         _isprint
  1205 ;;     _isdigit
  1206 ;;     ___wmul
  1207 ;;     ___ftge
  1208 ;;     ___ftneg
  1209 ;;     ___awdiv
  1210 ;;       ___awmod (ARG)
  1211 ;;     _scale
  1212 ;;       ___awmod
  1213 ;;       ___awdiv
  1214 ;;         ___awmod (ARG)
  1215 ;;       ___ftmul
  1216 ;;         ___ftpack
  1217 ;;         ___altoft (ARG)
  1218 ;;           ___ftpack
  1219 ;;         ___fttol (ARG)
  1220 ;;           ___ftpack (ARG)
  1221 ;;           ___awmod (ARG)
  1222 ;;           ___awdiv (ARG)
  1223 ;;             ___awmod (ARG)
  1224 ;;           ___bmul (ARG)
  1225 ;;             ___lbmod (ARG)
  1226 ;;             ___lbdiv (ARG)
  1227 ;;               ___lbmod (ARG)
  1228 ;;         ___awdiv (ARG)
  1229 ;;           ___awmod (ARG)
  1230 ;;         ___awmod (ARG)
  1231 ;;         ___bmul (ARG)
  1232 ;;           ___lbmod (ARG)
  1233 ;;           ___lbdiv (ARG)
  1234 ;;             ___lbmod (ARG)
  1235 ;;         ___lbdiv (ARG)
  1236 ;;           ___lbmod (ARG)
  1237 ;;         ___lbmod (ARG)
  1238 ;;       ___bmul
  1239 ;;         ___lbmod (ARG)
  1240 ;;         ___lbdiv (ARG)
  1241 ;;           ___lbmod (ARG)
  1242 ;;       ___fttol (ARG)
  1243 ;;         ___ftpack (ARG)
  1244 ;;         ___awmod (ARG)
  1245 ;;         ___awdiv (ARG)
  1246 ;;           ___awmod (ARG)
  1247 ;;         ___bmul (ARG)
  1248 ;;           ___lbmod (ARG)
  1249 ;;           ___lbdiv (ARG)
  1250 ;;             ___lbmod (ARG)
  1251 ;;     ___ftmul
  1252 ;;       ___ftpack
  1253 ;;       ___altoft (ARG)
  1254 ;;         ___ftpack
  1255 ;;       ___fttol (ARG)
  1256 ;;         ___ftpack (ARG)
  1257 ;;         ___awmod (ARG)
  1258 ;;         ___awdiv (ARG)
  1259 ;;           ___awmod (ARG)
  1260 ;;         ___bmul (ARG)
  1261 ;;           ___lbmod (ARG)
  1262 ;;           ___lbdiv (ARG)
  1263 ;;             ___lbmod (ARG)
  1264 ;;       ___awdiv (ARG)
  1265 ;;         ___awmod (ARG)
  1266 ;;       ___awmod (ARG)
  1267 ;;       ___bmul (ARG)
  1268 ;;         ___lbmod (ARG)
  1269 ;;         ___lbdiv (ARG)
  1270 ;;           ___lbmod (ARG)
  1271 ;;       ___lbdiv (ARG)
  1272 ;;         ___lbmod (ARG)
  1273 ;;       ___lbmod (ARG)
  1274 ;;     _fround
  1275 ;;       ___lbmod
  1276 ;;       ___bmul
  1277 ;;         ___lbmod (ARG)
  1278 ;;         ___lbdiv (ARG)
  1279 ;;           ___lbmod (ARG)
  1280 ;;       ___lbdiv
  1281 ;;         ___lbmod (ARG)
  1282 ;;       ___ftmul
  1283 ;;         ___ftpack
  1284 ;;         ___altoft (ARG)
  1285 ;;           ___ftpack
  1286 ;;         ___fttol (ARG)
  1287 ;;           ___ftpack (ARG)
  1288 ;;           ___awmod (ARG)
  1289 ;;           ___awdiv (ARG)
  1290 ;;             ___awmod (ARG)
  1291 ;;           ___bmul (ARG)
  1292 ;;             ___lbmod (ARG)
  1293 ;;             ___lbdiv (ARG)
  1294 ;;               ___lbmod (ARG)
  1295 ;;         ___awdiv (ARG)
  1296 ;;           ___awmod (ARG)
  1297 ;;         ___awmod (ARG)
  1298 ;;         ___bmul (ARG)
  1299 ;;           ___lbmod (ARG)
  1300 ;;           ___lbdiv (ARG)
  1301 ;;             ___lbmod (ARG)
  1302 ;;         ___lbdiv (ARG)
  1303 ;;           ___lbmod (ARG)
  1304 ;;         ___lbmod (ARG)
  1305 ;;       ___ftadd (ARG)
  1306 ;;         ___ftpack
  1307 ;;         ___lbmod (ARG)
  1308 ;;         ___bmul (ARG)
  1309 ;;           ___lbmod (ARG)
  1310 ;;           ___lbdiv (ARG)
  1311 ;;             ___lbmod (ARG)
  1312 ;;         ___lbdiv (ARG)
  1313 ;;           ___lbmod (ARG)
  1314 ;;         ___ftmul (ARG)
  1315 ;;           ___ftpack
  1316 ;;           ___altoft (ARG)
  1317 ;;             ___ftpack
  1318 ;;           ___fttol (ARG)
  1319 ;;             ___ftpack (ARG)
  1320 ;;             ___awmod (ARG)
  1321 ;;             ___awdiv (ARG)
  1322 ;;               ___awmod (ARG)
  1323 ;;             ___bmul (ARG)
  1324 ;;               ___lbmod (ARG)
  1325 ;;               ___lbdiv (ARG)
  1326 ;;                 ___lbmod (ARG)
  1327 ;;           ___awdiv (ARG)
  1328 ;;             ___awmod (ARG)
  1329 ;;           ___awmod (ARG)
  1330 ;;           ___bmul (ARG)
  1331 ;;             ___lbmod (ARG)
  1332 ;;             ___lbdiv (ARG)
  1333 ;;               ___lbmod (ARG)
  1334 ;;           ___lbdiv (ARG)
  1335 ;;             ___lbmod (ARG)
  1336 ;;           ___lbmod (ARG)
  1337 ;;     ___ftadd
  1338 ;;       ___ftpack
  1339 ;;       ___lbmod (ARG)
  1340 ;;       ___bmul (ARG)
  1341 ;;         ___lbmod (ARG)
  1342 ;;         ___lbdiv (ARG)
  1343 ;;           ___lbmod (ARG)
  1344 ;;       ___lbdiv (ARG)
  1345 ;;         ___lbmod (ARG)
  1346 ;;       ___ftmul (ARG)
  1347 ;;         ___ftpack
  1348 ;;         ___altoft (ARG)
  1349 ;;           ___ftpack
  1350 ;;         ___fttol (ARG)
  1351 ;;           ___ftpack (ARG)
  1352 ;;           ___awmod (ARG)
  1353 ;;           ___awdiv (ARG)
  1354 ;;             ___awmod (ARG)
  1355 ;;           ___bmul (ARG)
  1356 ;;             ___lbmod (ARG)
  1357 ;;             ___lbdiv (ARG)
  1358 ;;               ___lbmod (ARG)
  1359 ;;         ___awdiv (ARG)
  1360 ;;           ___awmod (ARG)
  1361 ;;         ___awmod (ARG)
  1362 ;;         ___bmul (ARG)
  1363 ;;           ___lbmod (ARG)
  1364 ;;           ___lbdiv (ARG)
  1365 ;;             ___lbmod (ARG)
  1366 ;;         ___lbdiv (ARG)
  1367 ;;           ___lbmod (ARG)
  1368 ;;         ___lbmod (ARG)
  1369 ;;     ___fttol
  1370 ;;       ___ftpack (ARG)
  1371 ;;       ___awmod (ARG)
  1372 ;;       ___awdiv (ARG)
  1373 ;;         ___awmod (ARG)
  1374 ;;       ___bmul (ARG)
  1375 ;;         ___lbmod (ARG)
  1376 ;;         ___lbdiv (ARG)
  1377 ;;           ___lbmod (ARG)
  1378 ;;     __div_to_l_
  1379 ;;     __tdiv_to_l_
  1380 ;;     ___lltoft
  1381 ;;       ___ftpack
  1382 ;;     ___ftsub
  1383 ;;       ___ftadd
  1384 ;;         ___ftpack
  1385 ;;         ___lbmod (ARG)
  1386 ;;         ___bmul (ARG)
  1387 ;;           ___lbmod (ARG)
  1388 ;;           ___lbdiv (ARG)
  1389 ;;             ___lbmod (ARG)
  1390 ;;         ___lbdiv (ARG)
  1391 ;;           ___lbmod (ARG)
  1392 ;;         ___ftmul (ARG)
  1393 ;;           ___ftpack
  1394 ;;           ___altoft (ARG)
  1395 ;;             ___ftpack
  1396 ;;           ___fttol (ARG)
  1397 ;;             ___ftpack (ARG)
  1398 ;;             ___awmod (ARG)
  1399 ;;             ___awdiv (ARG)
  1400 ;;               ___awmod (ARG)
  1401 ;;             ___bmul (ARG)
  1402 ;;               ___lbmod (ARG)
  1403 ;;               ___lbdiv (ARG)
  1404 ;;                 ___lbmod (ARG)
  1405 ;;           ___awdiv (ARG)
  1406 ;;             ___awmod (ARG)
  1407 ;;           ___awmod (ARG)
  1408 ;;           ___bmul (ARG)
  1409 ;;             ___lbmod (ARG)
  1410 ;;             ___lbdiv (ARG)
  1411 ;;               ___lbmod (ARG)
  1412 ;;           ___lbdiv (ARG)
  1413 ;;             ___lbmod (ARG)
  1414 ;;           ___lbmod (ARG)
  1415 ;;       ___lltoft (ARG)
  1416 ;;         ___ftpack
  1417 ;;     ___lldiv
  1418 ;;     ___llmod
  1419 ;;       ___lldiv (ARG)
  1420 ;;
  1421 ;; _ngat (ROOT)
  1422 ;;   _abs
  1423 ;;
  1424 ;; Address spaces:
  1425 ;;Name               Size   Autos  Total    Cost      Usage
  1426 ;;BITCOMMON            E      0       0       0        0.0%
  1427 ;;EEDATA             100      0       0       0        0.0%
  1428 ;;NULL                 0      0       0       0        0.0%
  1429 ;;CODE                 0      0       0       0        0.0%
  1430 ;;COMMON               E      6       8       1       57.1%
  1431 ;;BITSFR0              0      0       0       1        0.0%
  1432 ;;SFR0                 0      0       0       1        0.0%
  1433 ;;BITSFR1              0      0       0       2        0.0%
  1434 ;;SFR1                 0      0       0       2        0.0%
  1435 ;;STACK                0      0       9       2        0.0%
  1436 ;;ABS                  0      0      74       3        0.0%
  1437 ;;BITBANK0            50      0       0       4        0.0%
  1438 ;;BITSFR3              0      0       0       4        0.0%
  1439 ;;SFR3                 0      0       0       4        0.0%
  1440 ;;BANK0               50     49      50       5      100.0%
  1441 ;;BITSFR2              0      0       0       5        0.0%
  1442 ;;SFR2                 0      0       0       5        0.0%
  1443 ;;BITBANK1            50      0       0       6        0.0%
  1444 ;;BANK1               50     19      1C       7       35.0%
  1445 ;;BITBANK3            60      0       0       8        0.0%
  1446 ;;BANK3               60      0       0       9        0.0%
  1447 ;;BITBANK2            60      0       0      10        0.0%
  1448 ;;BANK2               60      0       0      11        0.0%
  1449 ;;DATA                 0      0      7D      12        0.0%
  1450                           
  1451                           
  1452 ;; *************** function _main *****************
  1453 ;; Defined at:
  1454 ;;		line 19 in file "D:\TTVXL\Project TTVXL\BT04week12ttvxl\BT04week12ttvxl.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;		None               void
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 17F/0
  1465 ;;		On exit  : 60/20
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0
  1470 ;;      Temps:          0       0       0       0       0
  1471 ;;      Totals:         0       0       0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels required when called:    7
  1474 ;; This function calls:
  1475 ;;		_lcd_init
  1476 ;;		___altoft
  1477 ;;		___ftmul
  1478 ;;		___ftdiv
  1479 ;;		_lcd_gotoxy
  1480 ;;		_printf
  1481 ;; This function is called by:
  1482 ;;		Startup code after reset
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485  16A3                     _main:	
  1486                           
  1487                           ;BT04week12ttvxl.c: 20: ANSEL = ANSELH = 0;
  1488                           
  1489                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1490  16A3  1683               	bsf	3,5	;RP0=1, select bank3
  1491  16A4  1703               	bsf	3,6	;RP1=1, select bank3
  1492  16A5  0189               	clrf	9	;volatile
  1493  16A6  0188               	clrf	8	;volatile
  1494                           
  1495                           ;BT04week12ttvxl.c: 21: lcd_init();
  1496  16A7  120A  118A  2415   	fcall	_lcd_init
      +       160A  118A         
  1497                           
  1498                           ;BT04week12ttvxl.c: 22: TRISA4 = 1;
  1499  16AC  1683               	bsf	3,5	;RP0=1, select bank1
  1500  16AD  1605               	bsf	5,4
  1501                           
  1502                           ;BT04week12ttvxl.c: 23: TRISD = 0x00;
  1503  16AE  0188               	clrf	8	;volatile
  1504                           
  1505                           ;BT04week12ttvxl.c: 24: TRISE0 = 0;
  1506  16AF  1009               	bcf	9,0
  1507                           
  1508                           ;BT04week12ttvxl.c: 27: TMR1GE=0;
  1509  16B0  1283               	bcf	3,5	;RP0=0, select bank0
  1510  16B1  1310               	bcf	16,6
  1511                           
  1512                           ;BT04week12ttvxl.c: 28: TMR1CS=0;
  1513  16B2  1090               	bcf	16,1
  1514                           
  1515                           ;BT04week12ttvxl.c: 29: T1SYNC=1;
  1516  16B3  1510               	bsf	16,2
  1517                           
  1518                           ;BT04week12ttvxl.c: 30: T1CKPS1=0;T1CKPS0=0;
  1519  16B4  1290               	bcf	16,5
  1520  16B5  1210               	bcf	16,4
  1521                           
  1522                           ;BT04week12ttvxl.c: 31: TMR1ON=1;
  1523  16B6  1410               	bsf	16,0
  1524                           
  1525                           ;BT04week12ttvxl.c: 32: TMR1H=0;
  1526  16B7  018F               	clrf	15	;volatile
  1527                           
  1528                           ;BT04week12ttvxl.c: 33: TMR1L=0;
  1529  16B8  018E               	clrf	14	;volatile
  1530                           
  1531                           ;BT04week12ttvxl.c: 36: TRISC2 =1;
  1532  16B9  1683               	bsf	3,5	;RP0=1, select bank1
  1533  16BA  3006               	movlw	6
  1534  16BB  1507               	bsf	7,2
  1535                           
  1536                           ;BT04week12ttvxl.c: 38: CCP1CON = 0b00000110;
  1537  16BC  1283               	bcf	3,5	;RP0=0, select bank0
  1538  16BD  0097               	movwf	23	;volatile
  1539                           
  1540                           ;BT04week12ttvxl.c: 39: CCP1IE=1;
  1541  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  1542  16BF  150C               	bsf	12,2
  1543                           
  1544                           ;BT04week12ttvxl.c: 40: CCP1IF=0;
  1545  16C0  1283               	bcf	3,5	;RP0=0, select bank0
  1546  16C1  110C               	bcf	12,2
  1547                           
  1548                           ;BT04week12ttvxl.c: 41: PEIE=1;
  1549  16C2  170B               	bsf	11,6
  1550                           
  1551                           ;BT04week12ttvxl.c: 42: GIE=1;
  1552  16C3  178B               	bsf	11,7
  1553  16C4                     l8086:	
  1554                           
  1555                           ;BT04week12ttvxl.c: 45: {
  1556                           ;BT04week12ttvxl.c: 47: t = xung*(1.0/5000000.0);
  1557  16C4  30C0               	movlw	192
  1558  16C5  1283               	bcf	3,5	;RP0=0, select bank0
  1559  16C6  00BB               	movwf	?___ftmul
  1560  16C7  3056               	movlw	86
  1561  16C8  00BC               	movwf	?___ftmul+1
  1562  16C9  3034               	movlw	52
  1563  16CA  00BD               	movwf	?___ftmul+2
  1564  16CB  086C               	movf	_xung+3,w
  1565  16CC  00AB               	movwf	?___altoft+3
  1566  16CD  086B               	movf	_xung+2,w
  1567  16CE  00AA               	movwf	?___altoft+2
  1568  16CF  086A               	movf	_xung+1,w
  1569  16D0  00A9               	movwf	?___altoft+1
  1570  16D1  0869               	movf	_xung,w
  1571  16D2  00A8               	movwf	?___altoft
  1572  16D3  120A  118A  200F   	fcall	___altoft
      +       160A  118A         
  1573  16D8  0828               	movf	?___altoft,w
  1574  16D9  00BE               	movwf	?___ftmul+3
  1575  16DA  0829               	movf	?___altoft+1,w
  1576  16DB  00BF               	movwf	?___ftmul+4
  1577  16DC  082A               	movf	?___altoft+2,w
  1578  16DD  00C0               	movwf	?___ftmul+5
  1579  16DE  120A  118A  22BA   	fcall	___ftmul
      +       160A  118A         
  1580  16E3  083B               	movf	?___ftmul,w
  1581  16E4  1683               	bsf	3,5	;RP0=1, select bank1
  1582  16E5  00B9               	movwf	_t^(0+128)
  1583  16E6  1283               	bcf	3,5	;RP0=0, select bank0
  1584  16E7  083C               	movf	?___ftmul+1,w
  1585  16E8  1683               	bsf	3,5	;RP0=1, select bank1
  1586  16E9  00BA               	movwf	(_t+1)^(0+128)
  1587  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  1588  16EB  083D               	movf	?___ftmul+2,w
  1589  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  1590  16ED  00BB               	movwf	(_t+2)^(0+128)
  1591                           
  1592                           ;BT04week12ttvxl.c: 48: f = 4.0/t;
  1593  16EE  0839               	movf	_t^(0+128),w
  1594  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  1595  16F0  00A8               	movwf	?___ftdiv
  1596  16F1  1683               	bsf	3,5	;RP0=1, select bank1
  1597  16F2  083A               	movf	(_t+1)^(0+128),w
  1598  16F3  1283               	bcf	3,5	;RP0=0, select bank0
  1599  16F4  00A9               	movwf	?___ftdiv+1
  1600  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  1601  16F6  083B               	movf	(_t+2)^(0+128),w
  1602  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  1603  16F8  00AA               	movwf	?___ftdiv+2
  1604  16F9  3080               	movlw	128
  1605  16FA  01AB               	clrf	?___ftdiv+3
  1606  16FB  00AC               	movwf	?___ftdiv+4
  1607  16FC  3040               	movlw	64
  1608  16FD  00AD               	movwf	?___ftdiv+5
  1609  16FE  120A  118A  203E   	fcall	___ftdiv
      +       160A  118A         
  1610  1703  0828               	movf	?___ftdiv,w
  1611  1704  00ED               	movwf	_f
  1612  1705  0829               	movf	?___ftdiv+1,w
  1613  1706  00EE               	movwf	_f+1
  1614  1707  082A               	movf	?___ftdiv+2,w
  1615  1708  00EF               	movwf	_f+2
  1616  1709  3000               	movlw	0
  1617                           
  1618                           ;BT04week12ttvxl.c: 49: lcd_gotoxy(0,0);
  1619  170A  01A5               	clrf	?_lcd_gotoxy
  1620  170B  120A  118A  23CE   	fcall	_lcd_gotoxy
      +       160A  118A         
  1621                           
  1622                           ;BT04week12ttvxl.c: 50: printf("xung: %08u",xung);
  1623  1710  086C               	movf	_xung+3,w
  1624  1711  00E3               	movwf	?_printf+3
  1625  1712  086B               	movf	_xung+2,w
  1626  1713  00E2               	movwf	?_printf+2
  1627  1714  086A               	movf	_xung+1,w
  1628  1715  00E1               	movwf	?_printf+1
  1629  1716  0869               	movf	_xung,w
  1630  1717  00E0               	movwf	?_printf
  1631  1718  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1632  1719  120A  158A  2006   	fcall	_printf
      +       160A  118A         
  1633                           
  1634                           ;BT04week12ttvxl.c: 51: lcd_gotoxy(0,1);
  1635  171E  1283               	bcf	3,5	;RP0=0, select bank0
  1636  171F  3000               	movlw	0
  1637  1720  01A5               	clrf	?_lcd_gotoxy
  1638  1721  0AA5               	incf	?_lcd_gotoxy,f
  1639  1722  120A  118A  23CE   	fcall	_lcd_gotoxy
      +       160A  118A         
  1640                           
  1641                           ;BT04week12ttvxl.c: 52: printf("f: %5.2f",f);
  1642  1727  086D               	movf	_f,w
  1643  1728  00E0               	movwf	?_printf
  1644  1729  086E               	movf	_f+1,w
  1645  172A  00E1               	movwf	?_printf+1
  1646  172B  086F               	movf	_f+2,w
  1647  172C  00E2               	movwf	?_printf+2
  1648  172D  3082               	movlw	(STR_2-__stringbase)& (0+255)
  1649  172E  120A  158A  2006   	fcall	_printf
      +       160A  118A         
  1650  1733  2EC4               	goto	l8086
  1651  1734                     __end_of_main:	
  1652                           
  1653                           	psect	text757
  1654  0806                     __ptext757:	
  1655 ;; =============== function _main ends ============
  1656                           
  1657                           
  1658 ;; *************** function _printf *****************
  1659 ;; Defined at:
  1660 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1661 ;; Parameters:    Size  Location     Type
  1662 ;;  f               1    wreg     PTR const unsigned char 
  1663 ;;		 -> STR_2(9), STR_1(11), 
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1666 ;;		 -> STR_2(9), STR_1(11), 
  1667 ;;  _val            4    8[BANK1 ] struct .
  1668 ;;  fval            3   19[BANK1 ] struct .
  1669 ;;  integ           3    5[BANK1 ] struct .
  1670 ;;  ival            3    0        struct .
  1671 ;;  prec            2   22[BANK1 ] int 
  1672 ;;  width           2   17[BANK1 ] int 
  1673 ;;  exp             2   15[BANK1 ] int 
  1674 ;;  flag            2   13[BANK1 ] unsigned short 
  1675 ;;  c               1   24[BANK1 ] char 
  1676 ;;  ap              1    4[BANK1 ] PTR void [1]
  1677 ;;		 -> ?_printf(2), 
  1678 ;;  d               1    0        unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  2   64[BANK0 ] int 
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 60/0
  1685 ;;		On exit  : 60/20
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       4       0       0       0
  1689 ;;      Locals:         0       0      25       0       0
  1690 ;;      Temps:          0       5       0       0       0
  1691 ;;      Totals:         0       9      25       0       0
  1692 ;;Total ram usage:       34 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    6
  1695 ;; This function calls:
  1696 ;;		_putch
  1697 ;;		_isdigit
  1698 ;;		___wmul
  1699 ;;		___ftge
  1700 ;;		___ftneg
  1701 ;;		___awdiv
  1702 ;;		_scale
  1703 ;;		___ftmul
  1704 ;;		_fround
  1705 ;;		___ftadd
  1706 ;;		___fttol
  1707 ;;		__div_to_l_
  1708 ;;		__tdiv_to_l_
  1709 ;;		___lltoft
  1710 ;;		___ftsub
  1711 ;;		___lldiv
  1712 ;;		___llmod
  1713 ;; This function is called by:
  1714 ;;		_main
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717  0806                     _printf:	
  1718                           
  1719                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1720                           ;printf@f stored from wreg
  1721  0806  1683               	bsf	3,5	;RP0=1, select bank1
  1722  0807  00AC               	movwf	printf@f^(0+128)
  1723  0808  3060               	movlw	?_printf& (0+255)
  1724  0809  00A4               	movwf	printf@ap^(0+128)
  1725  080A                     l8046:	
  1726  080A  1683               	bsf	3,5	;RP0=1, select bank1
  1727  080B  082C               	movf	printf@f^(0+128),w
  1728  080C  0AAC               	incf	printf@f^(0+128),f
  1729  080D  0084               	movwf	4
  1730  080E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1731  0813  00B8               	movwf	printf@c^(0+128)
  1732  0814  08B8               	movf	printf@c^(0+128),f
  1733  0815  1903               	btfsc	3,2
  1734  0816  0008               	return
  1735  0817  3A25               	xorlw	37
  1736  0818  1903               	skipnz
  1737  0819  281F               	goto	l7774
  1738  081A  0838               	movf	printf@c^(0+128),w
  1739  081B  257F  120A  158A   	fcall	_putch
  1740  081E  280A               	goto	l8046
  1741  081F                     l7774:	
  1742  081F  01B1               	clrf	printf@width^(0+128)
  1743  0820  01B2               	clrf	(printf@width+1)^(0+128)
  1744  0821  01AD               	clrf	printf@flag^(0+128)
  1745  0822  01AE               	clrf	(printf@flag+1)^(0+128)
  1746  0823  2826               	goto	l7780
  1747  0824                     l2209:	
  1748  0824  152D               	bsf	printf@flag^(0+128),2
  1749  0825  0AAC               	incf	printf@f^(0+128),f
  1750  0826                     l7780:	
  1751  0826  082C               	movf	printf@f^(0+128),w
  1752  0827  0084               	movwf	4
  1753  0828  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1754                           
  1755                           ; Switch size 1, requested type "space"
  1756                           ; Number of cases is 1, Range of values is 48 to 48
  1757                           ; switch strategies available:
  1758                           ; Name         Instructions Cycles
  1759                           ; simple_byte            4     3 (average)
  1760                           ; direct_byte           14    11 (fixed)
  1761                           ; jumptable            263     9 (fixed)
  1762                           ;	Chosen strategy is simple_byte
  1763  082D  3A30               	xorlw	48	; case 48
  1764  082E  1903               	skipnz
  1765  082F  2824               	goto	l2209
  1766  0830  2831               	goto	l7782
  1767  0831                     l7782:	
  1768  0831  082C               	movf	printf@f^(0+128),w
  1769  0832  0084               	movwf	4
  1770  0833  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1771  0838  25EF  120A  158A   	fcall	_isdigit
  1772  083B  1C03               	btfss	3,0
  1773  083C  2865               	goto	l7792
  1774  083D  1683               	bsf	3,5	;RP0=1, select bank1
  1775  083E  01B1               	clrf	printf@width^(0+128)
  1776  083F  01B2               	clrf	(printf@width+1)^(0+128)
  1777  0840                     l7786:	
  1778  0840  1683               	bsf	3,5	;RP0=1, select bank1
  1779  0841  0832               	movf	(printf@width+1)^(0+128),w
  1780  0842  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0843  00A1               	movwf	?___wmul+1
  1782  0844  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0845  0831               	movf	printf@width^(0+128),w
  1784  0846  2780  120A  158A   	fcall	PL33	;call to abstracted procedure
  1785  0849  25FE               	fcall	___wmul
  1786  084A  1683               	bsf	3,5	;RP0=1, select bank1
  1787  084B  082C               	movf	printf@f^(0+128),w
  1788  084C  0084               	movwf	4
  1789  084D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1790  0852  2737  120A  158A   	fcall	PL14	;call to abstracted procedure
  1791  0855  00B1               	movwf	printf@width^(0+128)
  1792  0856  276B               	fcall	PL28	;call to abstracted procedure
  1793  0857  00B2               	movwf	(printf@width+1)^(0+128)
  1794  0858  0AAC               	incf	printf@f^(0+128),f
  1795  0859  082C               	movf	printf@f^(0+128),w
  1796  085A  0084               	movwf	4
  1797  085B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1798  0860  25EF  120A  158A   	fcall	_isdigit
  1799  0863  1803               	btfsc	3,0
  1800  0864  2840               	goto	l7786
  1801  0865                     l7792:	
  1802  0865  1683               	bsf	3,5	;RP0=1, select bank1
  1803  0866  082C               	movf	printf@f^(0+128),w
  1804  0867  0084               	movwf	4
  1805  0868  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1806  086D  3A2E               	xorlw	46
  1807  086E  1D03               	skipz
  1808  086F  289C               	goto	l7806
  1809  0870  172E               	bsf	(printf@flag^(0+128)+1),6
  1810  0871  0AAC               	incf	printf@f^(0+128),f
  1811  0872  01B6               	clrf	printf@prec^(0+128)
  1812  0873  01B7               	clrf	(printf@prec+1)^(0+128)
  1813  0874                     l7804:	
  1814  0874  082C               	movf	printf@f^(0+128),w
  1815  0875  0084               	movwf	4
  1816  0876  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1817  087B  25EF  120A  158A   	fcall	_isdigit
  1818  087E  1C03               	btfss	3,0
  1819  087F  28A5               	goto	l7814
  1820  0880  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0881  0837               	movf	(printf@prec+1)^(0+128),w
  1822  0882  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0883  00A1               	movwf	?___wmul+1
  1824  0884  1683               	bsf	3,5	;RP0=1, select bank1
  1825  0885  0836               	movf	printf@prec^(0+128),w
  1826  0886  2780  120A  158A   	fcall	PL33	;call to abstracted procedure
  1827  0889  25FE               	fcall	___wmul
  1828  088A  1683               	bsf	3,5	;RP0=1, select bank1
  1829  088B  082C               	movf	printf@f^(0+128),w
  1830  088C  0084               	movwf	4
  1831  088D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1832  0892  2737  120A  158A   	fcall	PL14	;call to abstracted procedure
  1833  0895  00B6               	movwf	printf@prec^(0+128)
  1834  0896  276B  120A  158A   	fcall	PL28	;call to abstracted procedure
  1835  0899  00B7               	movwf	(printf@prec+1)^(0+128)
  1836  089A  0AAC               	incf	printf@f^(0+128),f
  1837  089B  2874               	goto	l7804
  1838  089C                     l7806:	
  1839  089C  01B6               	clrf	printf@prec^(0+128)
  1840  089D  01B7               	clrf	(printf@prec+1)^(0+128)
  1841  089E  162E               	bsf	(printf@flag^(0+128)+1),4
  1842  089F  28A5               	goto	l7814
  1843  08A0                     l2224:	
  1844  08A0  152E               	bsf	(printf@flag^(0+128)+1),2
  1845  08A1  28B9               	goto	l7816
  1846  08A2                     l7810:	
  1847  08A2  30C0               	movlw	192
  1848  08A3  04AD               	iorwf	printf@flag^(0+128),f
  1849  08A4  28B9               	goto	l7816
  1850  08A5                     l7814:	
  1851  08A5  1683               	bsf	3,5	;RP0=1, select bank1
  1852  08A6  082C               	movf	printf@f^(0+128),w
  1853  08A7  0AAC               	incf	printf@f^(0+128),f
  1854  08A8  0084               	movwf	4
  1855  08A9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  1856  08AE  00B8               	movwf	printf@c^(0+128)
  1857                           
  1858                           ; Switch size 1, requested type "space"
  1859                           ; Number of cases is 3, Range of values is 0 to 117
  1860                           ; switch strategies available:
  1861                           ; Name         Instructions Cycles
  1862                           ; simple_byte           10     6 (average)
  1863                           ; jumptable            260     6 (fixed)
  1864                           ; rangetable           122     6 (fixed)
  1865                           ; spacedrange          242     9 (fixed)
  1866                           ; locatedrange         118     3 (fixed)
  1867                           ;	Chosen strategy is simple_byte
  1868  08AF  3A00               	xorlw	0	; case 0
  1869  08B0  1903               	skipnz
  1870  08B1  2D7E               	goto	l2303
  1871  08B2  3A66               	xorlw	102	; case 102
  1872  08B3  1903               	skipnz
  1873  08B4  28A0               	goto	l2224
  1874  08B5  3A13               	xorlw	19	; case 117
  1875  08B6  1903               	skipnz
  1876  08B7  28A2               	goto	l7810
  1877  08B8  280A               	goto	l8046
  1878  08B9                     l7816:	
  1879  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  1880  08BA  3007               	movlw	7
  1881  08BB  01E4               	clrf	??_printf
  1882  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  1883  08BD  052E               	andwf	(printf@flag+1)^(0+128),w
  1884  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  1885  08BF  00E5               	movwf	??_printf+1
  1886  08C0  0464               	iorwf	??_printf,w
  1887  08C1  1903               	skipnz
  1888  08C2  2C41               	goto	l7968
  1889  08C3  1683               	bsf	3,5	;RP0=1, select bank1
  1890  08C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  1891  08C5  28C9               	goto	l7822
  1892  08C6  3006               	movlw	6
  1893  08C7  00B6               	movwf	printf@prec^(0+128)
  1894  08C8  01B7               	clrf	(printf@prec+1)^(0+128)
  1895  08C9                     l7822:	
  1896  08C9  0824               	movf	printf@ap^(0+128),w
  1897  08CA  0084               	movwf	4
  1898  08CB  1383               	bcf	3,7	;select IRP bank0
  1899  08CC  0800               	movf	0,w
  1900  08CD  00B3               	movwf	printf@fval^(0+128)
  1901  08CE  0A84               	incf	4,f
  1902  08CF  0800               	movf	0,w
  1903  08D0  00B4               	movwf	(printf@fval+1)^(0+128)
  1904  08D1  0A84               	incf	4,f
  1905  08D2  0800               	movf	0,w
  1906  08D3  00B5               	movwf	(printf@fval+2)^(0+128)
  1907  08D4  3003               	movlw	3
  1908  08D5  07A4               	addwf	printf@ap^(0+128),f
  1909  08D6  0833               	movf	printf@fval^(0+128),w
  1910  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  1911  08D8  00A0               	movwf	?___ftge
  1912  08D9  1683               	bsf	3,5	;RP0=1, select bank1
  1913  08DA  0834               	movf	(printf@fval+1)^(0+128),w
  1914  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  1915  08DC  00A1               	movwf	?___ftge+1
  1916  08DD  1683               	bsf	3,5	;RP0=1, select bank1
  1917  08DE  0835               	movf	(printf@fval+2)^(0+128),w
  1918  08DF  1283               	bcf	3,5	;RP0=0, select bank0
  1919  08E0  00A2               	movwf	?___ftge+2
  1920  08E1  01A3               	clrf	?___ftge+3
  1921  08E2  01A4               	clrf	?___ftge+4
  1922  08E3  01A5               	clrf	?___ftge+5
  1923  08E4  25C3  120A  158A   	fcall	___ftge
  1924  08E7  1803               	btfsc	3,0
  1925  08E8  2905               	goto	l7832
  1926  08E9  1683               	bsf	3,5	;RP0=1, select bank1
  1927  08EA  0833               	movf	printf@fval^(0+128),w
  1928  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  1929  08EC  00A0               	movwf	?___ftneg
  1930  08ED  1683               	bsf	3,5	;RP0=1, select bank1
  1931  08EE  0834               	movf	(printf@fval+1)^(0+128),w
  1932  08EF  1283               	bcf	3,5	;RP0=0, select bank0
  1933  08F0  00A1               	movwf	?___ftneg+1
  1934  08F1  1683               	bsf	3,5	;RP0=1, select bank1
  1935  08F2  0835               	movf	(printf@fval+2)^(0+128),w
  1936  08F3  1283               	bcf	3,5	;RP0=0, select bank0
  1937  08F4  00A2               	movwf	?___ftneg+2
  1938  08F5  26BA  120A  158A   	fcall	___ftneg
  1939  08F8  0820               	movf	?___ftneg,w
  1940  08F9  1683               	bsf	3,5	;RP0=1, select bank1
  1941  08FA  00B3               	movwf	printf@fval^(0+128)
  1942  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  1943  08FC  0821               	movf	?___ftneg+1,w
  1944  08FD  1683               	bsf	3,5	;RP0=1, select bank1
  1945  08FE  00B4               	movwf	(printf@fval+1)^(0+128)
  1946  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0900  0822               	movf	?___ftneg+2,w
  1948  0901  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0902  00B5               	movwf	(printf@fval+2)^(0+128)
  1950  0903  3003               	movlw	3
  1951  0904  04AD               	iorwf	printf@flag^(0+128),f
  1952  0905                     l7832:	
  1953  0905  1683               	bsf	3,5	;RP0=1, select bank1
  1954  0906  01AF               	clrf	printf@exp^(0+128)
  1955  0907  01B0               	clrf	(printf@exp+1)^(0+128)
  1956  0908  0835               	movf	(printf@fval+2)^(0+128),w
  1957  0909  0434               	iorwf	(printf@fval+1)^(0+128),w
  1958  090A  0433               	iorwf	printf@fval^(0+128),w
  1959  090B  1903               	skipnz
  1960  090C  29AF               	goto	l7864
  1961  090D  30B3               	movlw	low printf@fval
  1962  090E  0084               	movwf	4
  1963  090F  2779  120A  158A   	fcall	PL31	;call to abstracted procedure
  1964  0912  0A84               	incf	4,f
  1965  0913  0800               	movf	0,w
  1966  0914  00E6               	movwf	??_printf+2
  1967  0915  0A84               	incf	4,f
  1968  0916  0800               	movf	0,w
  1969  0917  00E7               	movwf	??_printf+3
  1970  0918  300F               	movlw	15
  1971  0919                     u4635:	
  1972  0919  1003               	clrc
  1973  091A  0CE7               	rrf	??_printf+3,f
  1974  091B  0CE6               	rrf	??_printf+2,f
  1975  091C  0CE5               	rrf	??_printf+1,f
  1976  091D  0CE4               	rrf	??_printf,f
  1977  091E  3EFF               	addlw	-1
  1978  091F  1D03               	skipz
  1979  0920  2919               	goto	u4635
  1980  0921  0865               	movf	??_printf+1,w
  1981  0922  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0923  00B0               	movwf	(printf@exp+1)^(0+128)
  1983  0924  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0925  0864               	movf	??_printf,w
  1985  0926  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0927  00AF               	movwf	printf@exp^(0+128)
  1987  0928  3082               	movlw	-126
  1988  0929  01B0               	clrf	(printf@exp+1)^(0+128)
  1989  092A  07AF               	addwf	printf@exp^(0+128),f
  1990  092B  1C03               	skipc
  1991  092C  03B0               	decf	(printf@exp+1)^(0+128),f
  1992  092D  30FF               	movlw	-1
  1993  092E  07AF               	addwf	printf@exp^(0+128),f
  1994  092F  1C03               	skipc
  1995  0930  03B0               	decf	(printf@exp+1)^(0+128),f
  1996  0931  3003               	movlw	3
  1997  0932  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0933  00A0               	movwf	?___wmul
  1999  0934  01A1               	clrf	?___wmul+1
  2000  0935  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0936  0830               	movf	(printf@exp+1)^(0+128),w
  2002  0937  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0938  00A3               	movwf	?___wmul+3
  2004  0939  1683               	bsf	3,5	;RP0=1, select bank1
  2005  093A  082F               	movf	printf@exp^(0+128),w
  2006  093B  1283               	bcf	3,5	;RP0=0, select bank0
  2007  093C  00A2               	movwf	?___wmul+2
  2008  093D  25FE               	fcall	___wmul
  2009  093E  0821               	movf	?___wmul+1,w
  2010  093F  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0940  00B0               	movwf	(printf@exp+1)^(0+128)
  2012  0941  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0942  0820               	movf	?___wmul,w
  2014  0943  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0944  00AF               	movwf	printf@exp^(0+128)
  2016  0945  300A               	movlw	10
  2017  0946  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0947  00A6               	movwf	?___awdiv
  2019  0948  01A7               	clrf	?___awdiv+1
  2020  0949  1683               	bsf	3,5	;RP0=1, select bank1
  2021  094A  0830               	movf	(printf@exp+1)^(0+128),w
  2022  094B  1283               	bcf	3,5	;RP0=0, select bank0
  2023  094C  00A9               	movwf	?___awdiv+3
  2024  094D  1683               	bsf	3,5	;RP0=1, select bank1
  2025  094E  082F               	movf	printf@exp^(0+128),w
  2026  094F  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0950  00A8               	movwf	?___awdiv+2
  2028  0951  120A  118A  2238   	fcall	___awdiv
      +       120A  158A         
  2029  0956  0827               	movf	?___awdiv+1,w
  2030  0957  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0958  00B0               	movwf	(printf@exp+1)^(0+128)
  2032  0959  1283               	bcf	3,5	;RP0=0, select bank0
  2033  095A  0826               	movf	?___awdiv,w
  2034  095B  1683               	bsf	3,5	;RP0=1, select bank1
  2035  095C  00AF               	movwf	printf@exp^(0+128)
  2036  095D  1FB0               	btfss	(printf@exp+1)^(0+128),7
  2037  095E  2963               	goto	l7852
  2038  095F  30FF               	movlw	-1
  2039  0960  07AF               	addwf	printf@exp^(0+128),f
  2040  0961  1C03               	skipc
  2041  0962  03B0               	decf	(printf@exp+1)^(0+128),f
  2042  0963                     l7852:	
  2043  0963  032F               	decf	printf@exp^(0+128),w
  2044  0964  3AFF               	xorlw	255
  2045  0965  120A  118A  20A6   	fcall	_scale
      +       120A  158A         
  2046  096A  2712  120A  158A   	fcall	PL7	;call to abstracted procedure
  2047  096D  2758               	fcall	PL19	;call to abstracted procedure
  2048  096E  1683               	bsf	3,5	;RP0=1, select bank1
  2049  096F  0825               	movf	printf@integ^(0+128),w
  2050  0970  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0971  00BE               	movwf	?___ftmul+3
  2052  0972  1683               	bsf	3,5	;RP0=1, select bank1
  2053  0973  0826               	movf	(printf@integ+1)^(0+128),w
  2054  0974  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0975  00BF               	movwf	?___ftmul+4
  2056  0976  1683               	bsf	3,5	;RP0=1, select bank1
  2057  0977  0827               	movf	(printf@integ+2)^(0+128),w
  2058  0978  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0979  00C0               	movwf	?___ftmul+5
  2060  097A  120A  118A  22BA   	fcall	___ftmul
      +       120A  158A         
  2061  097F  083B               	movf	?___ftmul,w
  2062  0980  1683               	bsf	3,5	;RP0=1, select bank1
  2063  0981  00A5               	movwf	printf@integ^(0+128)
  2064  0982  1283               	bcf	3,5	;RP0=0, select bank0
  2065  0983  083C               	movf	?___ftmul+1,w
  2066  0984  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0985  00A6               	movwf	(printf@integ+1)^(0+128)
  2068  0986  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0987  083D               	movf	?___ftmul+2,w
  2070  0988  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0989  00A7               	movwf	(printf@integ+2)^(0+128)
  2072  098A  26FE  120A  158A   	fcall	PL5	;call to abstracted procedure
  2073  098D  3080               	movlw	128
  2074  098E  01A3               	clrf	?___ftge+3
  2075  098F  00A4               	movwf	?___ftge+4
  2076  0990  303F               	movlw	63
  2077  0991  00A5               	movwf	?___ftge+5
  2078  0992  25C3  120A  158A   	fcall	___ftge
  2079  0995  1803               	btfsc	3,0
  2080  0996  299D               	goto	l7860
  2081  0997  30FF               	movlw	-1
  2082  0998  1683               	bsf	3,5	;RP0=1, select bank1
  2083  0999  07AF               	addwf	printf@exp^(0+128),f
  2084  099A  1C03               	skipc
  2085  099B  03B0               	decf	(printf@exp+1)^(0+128),f
  2086  099C  29AF               	goto	l7864
  2087  099D                     l7860:	
  2088  099D  1683               	bsf	3,5	;RP0=1, select bank1
  2089  099E  26FE  120A  158A   	fcall	PL5	;call to abstracted procedure
  2090  09A1  3020               	movlw	32
  2091  09A2  01A3               	clrf	?___ftge+3
  2092  09A3  00A4               	movwf	?___ftge+4
  2093  09A4  3041               	movlw	65
  2094  09A5  00A5               	movwf	?___ftge+5
  2095  09A6  25C3  120A  158A   	fcall	___ftge
  2096  09A9  1C03               	btfss	3,0
  2097  09AA  29AF               	goto	l7864
  2098  09AB  1683               	bsf	3,5	;RP0=1, select bank1
  2099  09AC  0AAF               	incf	printf@exp^(0+128),f
  2100  09AD  1903               	skipnz
  2101  09AE  0AB0               	incf	(printf@exp+1)^(0+128),f
  2102  09AF                     l7864:	
  2103  09AF  1683               	bsf	3,5	;RP0=1, select bank1
  2104  09B0  0837               	movf	(printf@prec+1)^(0+128),w
  2105  09B1  3A80               	xorlw	128
  2106  09B2  00FF               	movwf	127
  2107  09B3  3080               	movlw	128
  2108  09B4  027F               	subwf	127,w
  2109  09B5  1D03               	skipz
  2110  09B6  29B9               	goto	u4675
  2111  09B7  300D               	movlw	13
  2112  09B8  0236               	subwf	printf@prec^(0+128),w
  2113  09B9                     u4675:	
  2114  09B9  1803               	skipnc
  2115  09BA  29E4               	goto	l7868
  2116  09BB  2786               	call	PL34	;select bank 1
  2117  09BC  0836               	movf	printf@prec^(0+128),w
  2118  09BD  120A  118A  25A6   	fcall	_fround
      +       120A  158A         
  2119  09C2  0856               	movf	?_fround,w
  2120  09C3  00CA               	movwf	?___ftadd
  2121  09C4  0857               	movf	?_fround+1,w
  2122  09C5  00CB               	movwf	?___ftadd+1
  2123  09C6  0858               	movf	?_fround+2,w
  2124  09C7  00CC               	movwf	?___ftadd+2
  2125  09C8  1683               	bsf	3,5	;RP0=1, select bank1
  2126  09C9  0833               	movf	printf@fval^(0+128),w
  2127  09CA  1283               	bcf	3,5	;RP0=0, select bank0
  2128  09CB  00CD               	movwf	?___ftadd+3
  2129  09CC  1683               	bsf	3,5	;RP0=1, select bank1
  2130  09CD  0834               	movf	(printf@fval+1)^(0+128),w
  2131  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  2132  09CF  00CE               	movwf	?___ftadd+4
  2133  09D0  1683               	bsf	3,5	;RP0=1, select bank1
  2134  09D1  0835               	movf	(printf@fval+2)^(0+128),w
  2135  09D2  1283               	bcf	3,5	;RP0=0, select bank0
  2136  09D3  00CF               	movwf	?___ftadd+5
  2137  09D4  120A  118A  270E   	fcall	___ftadd
      +       120A  158A         
  2138  09D9  084A               	movf	?___ftadd,w
  2139  09DA  1683               	bsf	3,5	;RP0=1, select bank1
  2140  09DB  00B3               	movwf	printf@fval^(0+128)
  2141  09DC  1283               	bcf	3,5	;RP0=0, select bank0
  2142  09DD  084B               	movf	?___ftadd+1,w
  2143  09DE  1683               	bsf	3,5	;RP0=1, select bank1
  2144  09DF  00B4               	movwf	(printf@fval+1)^(0+128)
  2145  09E0  1283               	bcf	3,5	;RP0=0, select bank0
  2146  09E1  084C               	movf	?___ftadd+2,w
  2147  09E2  1683               	bsf	3,5	;RP0=1, select bank1
  2148  09E3  00B5               	movwf	(printf@fval+2)^(0+128)
  2149  09E4                     l7868:	
  2150  09E4  2786               	call	PL34	;select bank 1
  2151  09E5  0830               	movf	(printf@exp+1)^(0+128),w
  2152  09E6  3A80               	xorlw	128
  2153  09E7  00FF               	movwf	127
  2154  09E8  3080               	movlw	128
  2155  09E9  027F               	subwf	127,w
  2156  09EA  1D03               	skipz
  2157  09EB  29EE               	goto	u4685
  2158  09EC  300A               	movlw	10
  2159  09ED  022F               	subwf	printf@exp^(0+128),w
  2160  09EE                     u4685:	
  2161  09EE  1803               	skipnc
  2162  09EF  2A0F               	goto	l7876
  2163  09F0  2786               	call	PL34	;select bank 1
  2164  09F1  0835               	movf	(printf@fval+2)^(0+128),w
  2165  09F2  0434               	iorwf	(printf@fval+1)^(0+128),w
  2166  09F3  0433               	iorwf	printf@fval^(0+128),w
  2167  09F4  1903               	skipnz
  2168  09F5  2A61               	goto	l7892
  2169  09F6  0833               	movf	printf@fval^(0+128),w
  2170  09F7  2743  120A  158A   	fcall	PL15	;call to abstracted procedure
  2171  09FA  2617  120A  158A   	fcall	___fttol
  2172  09FD  0831               	movf	?___fttol+3,w
  2173  09FE  0430               	iorwf	?___fttol+2,w
  2174  09FF  042F               	iorwf	?___fttol+1,w
  2175  0A00  042E               	iorwf	?___fttol,w
  2176  0A01  1D03               	skipz
  2177  0A02  2A61               	goto	l7892
  2178  0A03  1683               	bsf	3,5	;RP0=1, select bank1
  2179  0A04  0830               	movf	(printf@exp+1)^(0+128),w
  2180  0A05  3A80               	xorlw	128
  2181  0A06  00FF               	movwf	127
  2182  0A07  3080               	movlw	128
  2183  0A08  027F               	subwf	127,w
  2184  0A09  1D03               	skipz
  2185  0A0A  2A0D               	goto	u4715
  2186  0A0B  3002               	movlw	2
  2187  0A0C  022F               	subwf	printf@exp^(0+128),w
  2188  0A0D                     u4715:	
  2189  0A0D  1C03               	skipc
  2190  0A0E  2A61               	goto	l7892
  2191  0A0F                     l7876:	
  2192  0A0F  2786               	call	PL34	;select bank 1
  2193  0A10  26FE  120A  158A   	fcall	PL5	;call to abstracted procedure
  2194  0A13  3070               	movlw	112
  2195  0A14  00A3               	movwf	?___ftge+3
  2196  0A15  3089               	movlw	137
  2197  0A16  00A4               	movwf	?___ftge+4
  2198  0A17  3040               	movlw	64
  2199  0A18  00A5               	movwf	?___ftge+5
  2200  0A19  25C3  120A  158A   	fcall	___ftge
  2201  0A1C  1803               	btfsc	3,0
  2202  0A1D  2A20               	goto	l7880
  2203  0A1E  30F7               	movlw	-9
  2204  0A1F  2A21               	goto	L1
  2205  0A20                     l7880:	
  2206  0A20  30F8               	movlw	-8
  2207  0A21                     L1:	
  2208  0A21  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0A22  07AF               	addwf	printf@exp^(0+128),f
  2210  0A23  1C03               	skipc
  2211  0A24  03B0               	decf	(printf@exp+1)^(0+128),f
  2212  0A25  082F               	movf	printf@exp^(0+128),w
  2213  0A26  120A  118A  20A6   	fcall	_scale
      +       120A  158A         
  2214  0A2B  2712  120A  158A   	fcall	PL7	;call to abstracted procedure
  2215  0A2E  00A0               	movwf	?__tdiv_to_l_
  2216  0A2F  1683               	bsf	3,5	;RP0=1, select bank1
  2217  0A30  0834               	movf	(printf@fval+1)^(0+128),w
  2218  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  2219  0A32  00A1               	movwf	?__tdiv_to_l_+1
  2220  0A33  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0A34  0835               	movf	(printf@fval+2)^(0+128),w
  2222  0A35  1283               	bcf	3,5	;RP0=0, select bank0
  2223  0A36  00A2               	movwf	?__tdiv_to_l_+2
  2224  0A37  1683               	bsf	3,5	;RP0=1, select bank1
  2225  0A38  0825               	movf	printf@integ^(0+128),w
  2226  0A39  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0A3A  00A3               	movwf	?__tdiv_to_l_+3
  2228  0A3B  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0A3C  0826               	movf	(printf@integ+1)^(0+128),w
  2230  0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0A3E  00A4               	movwf	?__tdiv_to_l_+4
  2232  0A3F  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0A40  0827               	movf	(printf@integ+2)^(0+128),w
  2234  0A41  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0A42  00A5               	movwf	?__tdiv_to_l_+5
  2236  0A43  2789  120A  158A   	fcall	__tdiv_to_l_
  2237  0A46  0823               	movf	?__tdiv_to_l_+3,w
  2238  0A47  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0A48  00A3               	movwf	(_printf$3173+3)^(0+128)
  2240  0A49  1283               	bcf	3,5	;RP0=0, select bank0
  2241  0A4A  0822               	movf	?__tdiv_to_l_+2,w
  2242  0A4B  1683               	bsf	3,5	;RP0=1, select bank1
  2243  0A4C  00A2               	movwf	(_printf$3173+2)^(0+128)
  2244  0A4D  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0A4E  0821               	movf	?__tdiv_to_l_+1,w
  2246  0A4F  1683               	bsf	3,5	;RP0=1, select bank1
  2247  0A50  00A1               	movwf	(_printf$3173+1)^(0+128)
  2248  0A51  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0A52  0820               	movf	?__tdiv_to_l_,w
  2250  0A53  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0A54  00A0               	movwf	_printf$3173^(0+128)
  2252  0A55  0823               	movf	(_printf$3173+3)^(0+128),w
  2253  0A56  00AB               	movwf	(printf@_val+3)^(0+128)
  2254  0A57  0822               	movf	(_printf$3173+2)^(0+128),w
  2255  0A58  00AA               	movwf	(printf@_val+2)^(0+128)
  2256  0A59  0821               	movf	(_printf$3173+1)^(0+128),w
  2257  0A5A  00A9               	movwf	(printf@_val+1)^(0+128)
  2258  0A5B  0820               	movf	_printf$3173^(0+128),w
  2259  0A5C  00A8               	movwf	printf@_val^(0+128)
  2260  0A5D  01B3               	clrf	printf@fval^(0+128)
  2261  0A5E  01B4               	clrf	(printf@fval+1)^(0+128)
  2262  0A5F  01B5               	clrf	(printf@fval+2)^(0+128)
  2263  0A60  2AA2               	goto	l7896
  2264  0A61                     l7892:	
  2265  0A61  2786               	call	PL34	;select bank 1
  2266  0A62  0833               	movf	printf@fval^(0+128),w
  2267  0A63  2743  120A  158A   	fcall	PL15	;call to abstracted procedure
  2268  0A66  2617  120A  158A   	fcall	___fttol
  2269  0A69  2720  120A  158A   	fcall	PL8	;call to abstracted procedure
  2270  0A6C  1683               	bsf	3,5	;RP0=1, select bank1
  2271  0A6D  00A8               	movwf	printf@_val^(0+128)
  2272  0A6E  082B               	movf	(printf@_val+3)^(0+128),w
  2273  0A6F  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0A70  00AB               	movwf	?___lltoft+3
  2275  0A71  1683               	bsf	3,5	;RP0=1, select bank1
  2276  0A72  082A               	movf	(printf@_val+2)^(0+128),w
  2277  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0A74  00AA               	movwf	?___lltoft+2
  2279  0A75  1683               	bsf	3,5	;RP0=1, select bank1
  2280  0A76  0829               	movf	(printf@_val+1)^(0+128),w
  2281  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0A78  00A9               	movwf	?___lltoft+1
  2283  0A79  1683               	bsf	3,5	;RP0=1, select bank1
  2284  0A7A  0828               	movf	printf@_val^(0+128),w
  2285  0A7B  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0A7C  00A8               	movwf	?___lltoft
  2287  0A7D  26C2               	fcall	___lltoft
  2288  0A7E  0828               	movf	?___lltoft,w
  2289  0A7F  00D6               	movwf	?___ftsub
  2290  0A80  0829               	movf	?___lltoft+1,w
  2291  0A81  00D7               	movwf	?___ftsub+1
  2292  0A82  082A               	movf	?___lltoft+2,w
  2293  0A83  00D8               	movwf	?___ftsub+2
  2294  0A84  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0A85  0833               	movf	printf@fval^(0+128),w
  2296  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0A87  00D9               	movwf	?___ftsub+3
  2298  0A88  1683               	bsf	3,5	;RP0=1, select bank1
  2299  0A89  0834               	movf	(printf@fval+1)^(0+128),w
  2300  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0A8B  00DA               	movwf	?___ftsub+4
  2302  0A8C  1683               	bsf	3,5	;RP0=1, select bank1
  2303  0A8D  0835               	movf	(printf@fval+2)^(0+128),w
  2304  0A8E  1283               	bcf	3,5	;RP0=0, select bank0
  2305  0A8F  00DB               	movwf	?___ftsub+5
  2306  0A90  120A  118A  26F8   	fcall	___ftsub
      +       120A  158A         
  2307  0A95  0856               	movf	?___ftsub,w
  2308  0A96  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0A97  00B3               	movwf	printf@fval^(0+128)
  2310  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0A99  0857               	movf	?___ftsub+1,w
  2312  0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  2313  0A9B  00B4               	movwf	(printf@fval+1)^(0+128)
  2314  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0A9D  0858               	movf	?___ftsub+2,w
  2316  0A9E  1683               	bsf	3,5	;RP0=1, select bank1
  2317  0A9F  00B5               	movwf	(printf@fval+2)^(0+128)
  2318  0AA0  01AF               	clrf	printf@exp^(0+128)
  2319  0AA1  01B0               	clrf	(printf@exp+1)^(0+128)
  2320  0AA2                     l7896:	
  2321  0AA2  01B8               	clrf	printf@c^(0+128)
  2322  0AA3  0AB8               	incf	printf@c^(0+128),f
  2323  0AA4                     l7902:	
  2324  0AA4  26F4               	fcall	PL3	;call to abstracted procedure
  2325  0AA5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2326  0AAA  00E5               	movwf	??_printf+1
  2327  0AAB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2328  0AB0  00E6               	movwf	??_printf+2
  2329  0AB1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2330  0AB6  00E7               	movwf	??_printf+3
  2331  0AB7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2332  0ABC  00E8               	movwf	??_printf+4
  2333  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
  2334  0ABE  022B               	subwf	(printf@_val+3)^(0+128),w
  2335  0ABF  1D03               	skipz
  2336  0AC0  2AD1               	goto	u4735
  2337  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  2338  0AC2  0867               	movf	??_printf+3,w
  2339  0AC3  1683               	bsf	3,5	;RP0=1, select bank1
  2340  0AC4  022A               	subwf	(printf@_val+2)^(0+128),w
  2341  0AC5  1D03               	skipz
  2342  0AC6  2AD1               	goto	u4735
  2343  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0AC8  0866               	movf	??_printf+2,w
  2345  0AC9  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0ACA  0229               	subwf	(printf@_val+1)^(0+128),w
  2347  0ACB  1D03               	skipz
  2348  0ACC  2AD1               	goto	u4735
  2349  0ACD  1283               	bcf	3,5	;RP0=0, select bank0
  2350  0ACE  0865               	movf	??_printf+1,w
  2351  0ACF  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0AD0  0228               	subwf	printf@_val^(0+128),w
  2353  0AD1                     u4735:	
  2354  0AD1  1C03               	btfss	3,0
  2355  0AD2  2AD8               	goto	l7910
  2356  0AD3  0AB8               	incf	printf@c^(0+128),f
  2357  0AD4  0838               	movf	printf@c^(0+128),w
  2358  0AD5  3A0A               	xorlw	10
  2359  0AD6  1D03               	skipz
  2360  0AD7  2AA4               	goto	l7902
  2361  0AD8                     l7910:	
  2362  0AD8  0836               	movf	printf@prec^(0+128),w
  2363  0AD9  0738               	addwf	printf@c^(0+128),w
  2364  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0ADB  00E4               	movwf	??_printf
  2366  0ADC  1683               	bsf	3,5	;RP0=1, select bank1
  2367  0ADD  0837               	movf	(printf@prec+1)^(0+128),w
  2368  0ADE  1803               	skipnc
  2369  0ADF  0A37               	incf	(printf@prec+1)^(0+128),w
  2370  0AE0  1BB8               	btfsc	printf@c^(0+128),7
  2371  0AE1  3EFF               	addlw	255
  2372  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0AE3  00E5               	movwf	??_printf+1
  2374  0AE4  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0AE5  082F               	movf	printf@exp^(0+128),w
  2376  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0AE7  0764               	addwf	??_printf,w
  2378  0AE8  00E6               	movwf	??_printf+2
  2379  0AE9  1683               	bsf	3,5	;RP0=1, select bank1
  2380  0AEA  0830               	movf	(printf@exp+1)^(0+128),w
  2381  0AEB  1803               	skipnc
  2382  0AEC  0A30               	incf	(printf@exp+1)^(0+128),w
  2383  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0AEE  0765               	addwf	??_printf+1,w
  2385  0AEF  00E7               	movwf	??_printf+3
  2386  0AF0  0866               	movf	??_printf+2,w
  2387  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  2388  0AF2  02B1               	subwf	printf@width^(0+128),f
  2389  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0AF4  0867               	movf	??_printf+3,w
  2391  0AF5  1683               	bsf	3,5	;RP0=1, select bank1
  2392  0AF6  1C03               	skipc
  2393  0AF7  03B2               	decf	(printf@width+1)^(0+128),f
  2394  0AF8  02B2               	subwf	(printf@width+1)^(0+128),f
  2395  0AF9  0837               	movf	(printf@prec+1)^(0+128),w
  2396  0AFA  0436               	iorwf	printf@prec^(0+128),w
  2397  0AFB  1903               	skipnz
  2398  0AFC  2B01               	goto	l7916
  2399  0AFD  30FF               	movlw	-1
  2400  0AFE  07B1               	addwf	printf@width^(0+128),f
  2401  0AFF  1C03               	skipc
  2402  0B00  03B2               	decf	(printf@width+1)^(0+128),f
  2403  0B01                     l7916:	
  2404  0B01  082D               	movf	printf@flag^(0+128),w
  2405  0B02  3903               	andlw	3
  2406  0B03  1903               	btfsc	3,2
  2407  0B04  2B09               	goto	l7920
  2408  0B05  30FF               	movlw	-1
  2409  0B06  07B1               	addwf	printf@width^(0+128),f
  2410  0B07  1C03               	skipc
  2411  0B08  03B2               	decf	(printf@width+1)^(0+128),f
  2412  0B09                     l7920:	
  2413  0B09  192D               	btfsc	printf@flag^(0+128),2
  2414  0B0A  2B15               	goto	l7928
  2415  0B0B  2B2A               	goto	l7934
  2416  0B0C                     l7924:	
  2417  0B0C  3030               	movlw	48
  2418  0B0D  257F  120A  158A   	fcall	_putch
  2419  0B10  30FF               	movlw	-1
  2420  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  2421  0B12  07B1               	addwf	printf@width^(0+128),f
  2422  0B13  1C03               	skipc
  2423  0B14  03B2               	decf	(printf@width+1)^(0+128),f
  2424  0B15                     l7928:	
  2425  0B15  0832               	movf	(printf@width+1)^(0+128),w
  2426  0B16  3A80               	xorlw	128
  2427  0B17  00FF               	movwf	127
  2428  0B18  3080               	movlw	128
  2429  0B19  027F               	subwf	127,w
  2430  0B1A  1D03               	skipz
  2431  0B1B  2B1E               	goto	u4785
  2432  0B1C  3001               	movlw	1
  2433  0B1D  0231               	subwf	printf@width^(0+128),w
  2434  0B1E                     u4785:	
  2435  0B1E  1C03               	btfss	3,0
  2436  0B1F  2B68               	goto	l7942
  2437  0B20  2B0C               	goto	l7924
  2438  0B21                     l7930:	
  2439  0B21  3020               	movlw	32
  2440  0B22  257F  120A  158A   	fcall	_putch
  2441  0B25  30FF               	movlw	-1
  2442  0B26  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0B27  07B1               	addwf	printf@width^(0+128),f
  2444  0B28  1C03               	skipc
  2445  0B29  03B2               	decf	(printf@width+1)^(0+128),f
  2446  0B2A                     l7934:	
  2447  0B2A  0832               	movf	(printf@width+1)^(0+128),w
  2448  0B2B  3A80               	xorlw	128
  2449  0B2C  00FF               	movwf	127
  2450  0B2D  3080               	movlw	128
  2451  0B2E  027F               	subwf	127,w
  2452  0B2F  1D03               	skipz
  2453  0B30  2B33               	goto	u4795
  2454  0B31  3001               	movlw	1
  2455  0B32  0231               	subwf	printf@width^(0+128),w
  2456  0B33                     u4795:	
  2457  0B33  1803               	skipnc
  2458  0B34  2B21               	goto	l7930
  2459  0B35  2786               	call	PL34	;select bank 1
  2460  0B36  082D               	movf	printf@flag^(0+128),w
  2461  0B37  3903               	andlw	3
  2462  0B38  1903               	btfsc	3,2
  2463  0B39  2B68               	goto	l7942
  2464  0B3A  302D               	movlw	45
  2465  0B3B  2B65               	goto	L2
  2466  0B3C                     l7940:	
  2467  0B3C  270A  120A  158A   	fcall	PL6	;call to abstracted procedure
  2468  0B3F  26F4               	fcall	PL3	;call to abstracted procedure
  2469  0B40  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2470  0B45  00A0               	movwf	?___lldiv
  2471  0B46  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2472  0B4B  00A1               	movwf	?___lldiv+1
  2473  0B4C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2474  0B51  00A2               	movwf	?___lldiv+2
  2475  0B52  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2476  0B57  26E2  120A  158A   	fcall	PL2	;call to abstracted procedure
  2477  0B5A  2672  120A  158A   	fcall	___lldiv
  2478  0B5D  272E  120A  158A   	fcall	PL13	;call to abstracted procedure
  2479  0B60  2585  120A  158A   	fcall	___llmod
  2480  0B63  082D               	movf	?___llmod,w
  2481  0B64  3E30               	addlw	48
  2482  0B65                     L2:	
  2483  0B65  257F  120A  158A   	fcall	_putch
  2484  0B68                     l7942:	
  2485  0B68  2786               	call	PL34	;select bank 1
  2486  0B69  03B8               	decf	printf@c^(0+128),f
  2487  0B6A  0F38               	incfsz	printf@c^(0+128),w
  2488  0B6B  2B3C               	goto	l7940
  2489  0B6C                     l7948:	
  2490  0B6C  0830               	movf	(printf@exp+1)^(0+128),w
  2491  0B6D  3A80               	xorlw	128
  2492  0B6E  00FF               	movwf	127
  2493  0B6F  3080               	movlw	128
  2494  0B70  027F               	subwf	127,w
  2495  0B71  1D03               	skipz
  2496  0B72  2B75               	goto	u4825
  2497  0B73  3001               	movlw	1
  2498  0B74  022F               	subwf	printf@exp^(0+128),w
  2499  0B75                     u4825:	
  2500  0B75  1C03               	btfss	3,0
  2501  0B76  2B81               	goto	l7950
  2502  0B77  3030               	movlw	48
  2503  0B78  257F  120A  158A   	fcall	_putch
  2504  0B7B  30FF               	movlw	-1
  2505  0B7C  1683               	bsf	3,5	;RP0=1, select bank1
  2506  0B7D  07AF               	addwf	printf@exp^(0+128),f
  2507  0B7E  1C03               	skipc
  2508  0B7F  03B0               	decf	(printf@exp+1)^(0+128),f
  2509  0B80  2B6C               	goto	l7948
  2510  0B81                     l7950:	
  2511  0B81  2786               	call	PL34	;select bank 1
  2512  0B82  0837               	movf	(printf@prec+1)^(0+128),w
  2513  0B83  3A80               	xorlw	128
  2514  0B84  00FF               	movwf	127
  2515  0B85  3080               	movlw	128
  2516  0B86  027F               	subwf	127,w
  2517  0B87  1D03               	skipz
  2518  0B88  2B8B               	goto	u4835
  2519  0B89  3009               	movlw	9
  2520  0B8A  0236               	subwf	printf@prec^(0+128),w
  2521  0B8B                     u4835:	
  2522  0B8B  1C03               	skipc
  2523  0B8C  2B90               	goto	l7954
  2524  0B8D  3008               	movlw	8
  2525  0B8E  2786               	call	PL34	;select bank 1
  2526  0B8F  2B92               	goto	L3
  2527  0B90                     l7954:	
  2528  0B90  2786               	call	PL34	;select bank 1
  2529  0B91  0836               	movf	printf@prec^(0+128),w
  2530  0B92                     L3:	
  2531  0B92  00B8               	movwf	printf@c^(0+128)
  2532  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0B94  00E4               	movwf	??_printf
  2534  0B95  01E5               	clrf	??_printf+1
  2535  0B96  1BE4               	btfsc	??_printf,7
  2536  0B97  03E5               	decf	??_printf+1,f
  2537  0B98  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0B99  02B6               	subwf	printf@prec^(0+128),f
  2539  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0B9B  0865               	movf	??_printf+1,w
  2541  0B9C  1683               	bsf	3,5	;RP0=1, select bank1
  2542  0B9D  1C03               	skipc
  2543  0B9E  03B7               	decf	(printf@prec+1)^(0+128),f
  2544  0B9F  02B7               	subwf	(printf@prec+1)^(0+128),f
  2545  0BA0  0838               	movf	printf@c^(0+128),w
  2546  0BA1  1903               	btfsc	3,2
  2547  0BA2  2BA5               	goto	l2269
  2548  0BA3  302E               	movlw	46
  2549  0BA4  257F               	fcall	_putch
  2550  0BA5                     l2269:	
  2551  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  2552  0BA6  0838               	movf	printf@c^(0+128),w
  2553  0BA7  120A  118A  20A6   	fcall	_scale
      +       120A  158A         
  2554  0BAC  084A               	movf	?_scale,w
  2555  0BAD  00BE               	movwf	?___ftmul+3
  2556  0BAE  084B               	movf	?_scale+1,w
  2557  0BAF  00BF               	movwf	?___ftmul+4
  2558  0BB0  084C               	movf	?_scale+2,w
  2559  0BB1  00C0               	movwf	?___ftmul+5
  2560  0BB2  1683               	bsf	3,5	;RP0=1, select bank1
  2561  0BB3  0833               	movf	printf@fval^(0+128),w
  2562  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0BB5  2758               	fcall	PL19	;call to abstracted procedure
  2564  0BB6  120A  118A  22BA   	fcall	___ftmul
      +       120A  158A         
  2565  0BBB  083B               	movf	?___ftmul,w
  2566  0BBC  00AE               	movwf	?___fttol
  2567  0BBD  083C               	movf	?___ftmul+1,w
  2568  0BBE  00AF               	movwf	?___fttol+1
  2569  0BBF  083D               	movf	?___ftmul+2,w
  2570  0BC0  00B0               	movwf	?___fttol+2
  2571  0BC1  2617  120A  158A   	fcall	___fttol
  2572  0BC4  2720  120A  158A   	fcall	PL8	;call to abstracted procedure
  2573  0BC7  2C2E               	goto	L4
  2574  0BC8                     l7958:	
  2575  0BC8  270A  120A  158A   	fcall	PL6	;call to abstracted procedure
  2576  0BCB  26F4               	fcall	PL3	;call to abstracted procedure
  2577  0BCC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2578  0BD1  00A0               	movwf	?___lldiv
  2579  0BD2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2580  0BD7  00A1               	movwf	?___lldiv+1
  2581  0BD8  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2582  0BDD  00A2               	movwf	?___lldiv+2
  2583  0BDE  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2584  0BE3  26E2  120A  158A   	fcall	PL2	;call to abstracted procedure
  2585  0BE6  2672  120A  158A   	fcall	___lldiv
  2586  0BE9  272E  120A  158A   	fcall	PL13	;call to abstracted procedure
  2587  0BEC  2585  120A  158A   	fcall	___llmod
  2588  0BEF  082D               	movf	?___llmod,w
  2589  0BF0  3E30               	addlw	48
  2590  0BF1  257F  120A  158A   	fcall	_putch
  2591  0BF4  1683               	bsf	3,5	;RP0=1, select bank1
  2592  0BF5  26F4               	fcall	PL3	;call to abstracted procedure
  2593  0BF6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2594  0BFB  00AD               	movwf	?___llmod
  2595  0BFC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2596  0C01  00AE               	movwf	?___llmod+1
  2597  0C02  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2598  0C07  00AF               	movwf	?___llmod+2
  2599  0C08  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2600  0C0D  00B0               	movwf	?___llmod+3
  2601  0C0E  1683               	bsf	3,5	;RP0=1, select bank1
  2602  0C0F  082B               	movf	(printf@_val+3)^(0+128),w
  2603  0C10  1283               	bcf	3,5	;RP0=0, select bank0
  2604  0C11  00B4               	movwf	?___llmod+7
  2605  0C12  1683               	bsf	3,5	;RP0=1, select bank1
  2606  0C13  082A               	movf	(printf@_val+2)^(0+128),w
  2607  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  2608  0C15  00B3               	movwf	?___llmod+6
  2609  0C16  1683               	bsf	3,5	;RP0=1, select bank1
  2610  0C17  0829               	movf	(printf@_val+1)^(0+128),w
  2611  0C18  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0C19  00B2               	movwf	?___llmod+5
  2613  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
  2614  0C1B  0828               	movf	printf@_val^(0+128),w
  2615  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0C1D  00B1               	movwf	?___llmod+4
  2617  0C1E  2585  120A  158A   	fcall	___llmod
  2618  0C21  0830               	movf	?___llmod+3,w
  2619  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  2620  0C23  00AB               	movwf	(printf@_val+3)^(0+128)
  2621  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0C25  082F               	movf	?___llmod+2,w
  2623  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  2624  0C27  00AA               	movwf	(printf@_val+2)^(0+128)
  2625  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0C29  082E               	movf	?___llmod+1,w
  2627  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  2628  0C2B  00A9               	movwf	(printf@_val+1)^(0+128)
  2629  0C2C  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0C2D  082D               	movf	?___llmod,w
  2631  0C2E                     L4:	
  2632  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  2633  0C2F  00A8               	movwf	printf@_val^(0+128)
  2634  0C30  03B8               	decf	printf@c^(0+128),f
  2635  0C31  0F38               	incfsz	printf@c^(0+128),w
  2636  0C32  2BC8               	goto	l7958
  2637  0C33                     l7966:	
  2638  0C33  0837               	movf	(printf@prec+1)^(0+128),w
  2639  0C34  0436               	iorwf	printf@prec^(0+128),w
  2640  0C35  1903               	btfsc	3,2
  2641  0C36  280A               	goto	l8046
  2642  0C37  3030               	movlw	48
  2643  0C38  257F  120A  158A   	fcall	_putch
  2644  0C3B  30FF               	movlw	-1
  2645  0C3C  1683               	bsf	3,5	;RP0=1, select bank1
  2646  0C3D  07B6               	addwf	printf@prec^(0+128),f
  2647  0C3E  1C03               	skipc
  2648  0C3F  03B7               	decf	(printf@prec+1)^(0+128),f
  2649  0C40  2C33               	goto	l7966
  2650  0C41                     l7968:	
  2651  0C41  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0C42  0824               	movf	printf@ap^(0+128),w
  2653  0C43  0084               	movwf	4
  2654  0C44  1383               	bcf	3,7	;select IRP bank0
  2655  0C45  2779  120A  158A   	fcall	PL31	;call to abstracted procedure
  2656  0C48  0864               	movf	??_printf,w
  2657  0C49  1683               	bsf	3,5	;RP0=1, select bank1
  2658  0C4A  00A8               	movwf	printf@_val^(0+128)
  2659  0C4B  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0C4C  0865               	movf	??_printf+1,w
  2661  0C4D  1683               	bsf	3,5	;RP0=1, select bank1
  2662  0C4E  00A9               	movwf	(printf@_val^(0+128)+1)
  2663  0C4F  01AA               	clrf	(printf@_val^(0+128)+2)
  2664  0C50  01AB               	clrf	(printf@_val^(0+128)+3)
  2665  0C51  0AA4               	incf	printf@ap^(0+128),f
  2666  0C52  0AA4               	incf	printf@ap^(0+128),f
  2667  0C53  0837               	movf	(printf@prec+1)^(0+128),w
  2668  0C54  0436               	iorwf	printf@prec^(0+128),w
  2669  0C55  1D03               	skipz
  2670  0C56  2C5F               	goto	l7978
  2671  0C57  082B               	movf	(printf@_val+3)^(0+128),w
  2672  0C58  042A               	iorwf	(printf@_val+2)^(0+128),w
  2673  0C59  0429               	iorwf	(printf@_val+1)^(0+128),w
  2674  0C5A  0428               	iorwf	printf@_val^(0+128),w
  2675  0C5B  1903               	btfsc	3,2
  2676  0C5C  0AB6               	incf	printf@prec^(0+128),f
  2677  0C5D  1903               	skipnz
  2678  0C5E  0AB7               	incf	(printf@prec+1)^(0+128),f
  2679  0C5F                     l7978:	
  2680  0C5F  01B8               	clrf	printf@c^(0+128)
  2681  0C60  0AB8               	incf	printf@c^(0+128),f
  2682  0C61                     l7984:	
  2683  0C61  26F4               	fcall	PL3	;call to abstracted procedure
  2684  0C62  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2685  0C67  00E5               	movwf	??_printf+1
  2686  0C68  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2687  0C6D  00E6               	movwf	??_printf+2
  2688  0C6E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2689  0C73  00E7               	movwf	??_printf+3
  2690  0C74  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2691  0C79  00E8               	movwf	??_printf+4
  2692  0C7A  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0C7B  022B               	subwf	(printf@_val+3)^(0+128),w
  2694  0C7C  1D03               	skipz
  2695  0C7D  2C8E               	goto	u4895
  2696  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0C7F  0867               	movf	??_printf+3,w
  2698  0C80  1683               	bsf	3,5	;RP0=1, select bank1
  2699  0C81  022A               	subwf	(printf@_val+2)^(0+128),w
  2700  0C82  1D03               	skipz
  2701  0C83  2C8E               	goto	u4895
  2702  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0C85  0866               	movf	??_printf+2,w
  2704  0C86  1683               	bsf	3,5	;RP0=1, select bank1
  2705  0C87  0229               	subwf	(printf@_val+1)^(0+128),w
  2706  0C88  1D03               	skipz
  2707  0C89  2C8E               	goto	u4895
  2708  0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0C8B  0865               	movf	??_printf+1,w
  2710  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0C8D  0228               	subwf	printf@_val^(0+128),w
  2712  0C8E                     u4895:	
  2713  0C8E  1C03               	btfss	3,0
  2714  0C8F  2C95               	goto	l7992
  2715  0C90  0AB8               	incf	printf@c^(0+128),f
  2716  0C91  0838               	movf	printf@c^(0+128),w
  2717  0C92  3A0A               	xorlw	10
  2718  0C93  1D03               	skipz
  2719  0C94  2C61               	goto	l7984
  2720  0C95                     l7992:	
  2721  0C95  0838               	movf	printf@c^(0+128),w
  2722  0C96  274E  120A  158A   	fcall	PL18	;call to abstracted procedure
  2723  0C99  0837               	movf	(printf@prec+1)^(0+128),w
  2724  0C9A  3A80               	xorlw	128
  2725  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0C9C  0266               	subwf	??_printf+2,w
  2727  0C9D  1D03               	skipz
  2728  0C9E  2CA3               	goto	u4915
  2729  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0CA0  0836               	movf	printf@prec^(0+128),w
  2731  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0CA2  0264               	subwf	??_printf,w
  2733  0CA3                     u4915:	
  2734  0CA3  1803               	skipnc
  2735  0CA4  2CA9               	goto	l7996
  2736  0CA5  2786               	call	PL34	;select bank 1
  2737  0CA6  0836               	movf	printf@prec^(0+128),w
  2738  0CA7  00B8               	movwf	printf@c^(0+128)
  2739  0CA8  2CC1               	goto	l8000
  2740  0CA9                     l7996:	
  2741  0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  2742  0CAA  2762  120A  158A   	fcall	PL21	;call to abstracted procedure
  2743  0CAD  0837               	movf	(printf@prec+1)^(0+128),w
  2744  0CAE  3A80               	xorlw	128
  2745  0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0CB0  00E6               	movwf	??_printf+2
  2747  0CB1  0865               	movf	??_printf+1,w
  2748  0CB2  3A80               	xorlw	128
  2749  0CB3  0266               	subwf	??_printf+2,w
  2750  0CB4  1D03               	skipz
  2751  0CB5  2CB9               	goto	u4925
  2752  0CB6  0864               	movf	??_printf,w
  2753  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  2754  0CB8  0236               	subwf	printf@prec^(0+128),w
  2755  0CB9                     u4925:	
  2756  0CB9  1803               	skipnc
  2757  0CBA  2CC1               	goto	l8000
  2758  0CBB  2786               	call	PL34	;select bank 1
  2759  0CBC  0838               	movf	printf@c^(0+128),w
  2760  0CBD  00B6               	movwf	printf@prec^(0+128)
  2761  0CBE  01B7               	clrf	(printf@prec+1)^(0+128)
  2762  0CBF  1BB6               	btfsc	printf@prec^(0+128),7
  2763  0CC0  03B7               	decf	(printf@prec+1)^(0+128),f
  2764  0CC1                     l8000:	
  2765  0CC1  2786               	call	PL34	;select bank 1
  2766  0CC2  0832               	movf	(printf@width+1)^(0+128),w
  2767  0CC3  0431               	iorwf	printf@width^(0+128),w
  2768  0CC4  1903               	skipnz
  2769  0CC5  2CCE               	goto	l8006
  2770  0CC6  082D               	movf	printf@flag^(0+128),w
  2771  0CC7  3903               	andlw	3
  2772  0CC8  1903               	btfsc	3,2
  2773  0CC9  2CCE               	goto	l8006
  2774  0CCA  30FF               	movlw	-1
  2775  0CCB  07B1               	addwf	printf@width^(0+128),f
  2776  0CCC  1C03               	skipc
  2777  0CCD  03B2               	decf	(printf@width+1)^(0+128),f
  2778  0CCE                     l8006:	
  2779  0CCE  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2780  0CCF  2CEB               	goto	l8014
  2781  0CD0  0837               	movf	(printf@prec+1)^(0+128),w
  2782  0CD1  3A80               	xorlw	128
  2783  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0CD3  00E4               	movwf	??_printf
  2785  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  2786  0CD5  0832               	movf	(printf@width+1)^(0+128),w
  2787  0CD6  3A80               	xorlw	128
  2788  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0CD8  0264               	subwf	??_printf,w
  2790  0CD9  1D03               	skipz
  2791  0CDA  2CDE               	goto	u4965
  2792  0CDB  1683               	bsf	3,5	;RP0=1, select bank1
  2793  0CDC  0831               	movf	printf@width^(0+128),w
  2794  0CDD  0236               	subwf	printf@prec^(0+128),w
  2795  0CDE                     u4965:	
  2796  0CDE  1803               	skipnc
  2797  0CDF  2CE8               	goto	l8012
  2798  0CE0  2786               	call	PL34	;select bank 1
  2799  0CE1  0836               	movf	printf@prec^(0+128),w
  2800  0CE2  02B1               	subwf	printf@width^(0+128),f
  2801  0CE3  0837               	movf	(printf@prec+1)^(0+128),w
  2802  0CE4  1C03               	skipc
  2803  0CE5  03B2               	decf	(printf@width+1)^(0+128),f
  2804  0CE6  02B2               	subwf	(printf@width+1)^(0+128),f
  2805  0CE7  2CEB               	goto	l8014
  2806  0CE8                     l8012:	
  2807  0CE8  2786               	call	PL34	;select bank 1
  2808  0CE9  01B1               	clrf	printf@width^(0+128)
  2809  0CEA  01B2               	clrf	(printf@width+1)^(0+128)
  2810  0CEB                     l8014:	
  2811  0CEB  0838               	movf	printf@c^(0+128),w
  2812  0CEC  274E  120A  158A   	fcall	PL18	;call to abstracted procedure
  2813  0CEF  0832               	movf	(printf@width+1)^(0+128),w
  2814  0CF0  3A80               	xorlw	128
  2815  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0CF2  0266               	subwf	??_printf+2,w
  2817  0CF3  1D03               	skipz
  2818  0CF4  2CF9               	goto	u4975
  2819  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  2820  0CF6  0831               	movf	printf@width^(0+128),w
  2821  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  2822  0CF8  0264               	subwf	??_printf,w
  2823  0CF9                     u4975:	
  2824  0CF9  1803               	skipnc
  2825  0CFA  2D07               	goto	l8018
  2826  0CFB  1683               	bsf	3,5	;RP0=1, select bank1
  2827  0CFC  2762  120A  158A   	fcall	PL21	;call to abstracted procedure
  2828  0CFF  02B1               	subwf	printf@width^(0+128),f
  2829  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0D01  0865               	movf	??_printf+1,w
  2831  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  2832  0D03  1C03               	skipc
  2833  0D04  03B2               	decf	(printf@width+1)^(0+128),f
  2834  0D05  02B2               	subwf	(printf@width+1)^(0+128),f
  2835  0D06  2D0A               	goto	l8020
  2836  0D07                     l8018:	
  2837  0D07  2786               	call	PL34	;select bank 1
  2838  0D08  01B1               	clrf	printf@width^(0+128)
  2839  0D09  01B2               	clrf	(printf@width+1)^(0+128)
  2840  0D0A                     l8020:	
  2841  0D0A  1D2D               	btfss	printf@flag^(0+128),2
  2842  0D0B  2D23               	goto	l8032
  2843  0D0C  082D               	movf	printf@flag^(0+128),w
  2844  0D0D  3903               	andlw	3
  2845  0D0E  1903               	btfsc	3,2
  2846  0D0F  2D14               	goto	l8026
  2847  0D10  302D               	movlw	45
  2848  0D11  257F  120A  158A   	fcall	_putch
  2849  0D14                     l8026:	
  2850  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0D15                     L6:	
  2852  0D15  0832               	movf	(printf@width+1)^(0+128),w
  2853  0D16  0431               	iorwf	printf@width^(0+128),w
  2854  0D17  1903               	skipnz
  2855  0D18  2D3C               	goto	l8044
  2856  0D19  3030               	movlw	48
  2857  0D1A  257F  120A  158A   	fcall	_putch
  2858  0D1D  30FF               	movlw	-1
  2859  0D1E  1683               	bsf	3,5	;RP0=1, select bank1
  2860  0D1F  07B1               	addwf	printf@width^(0+128),f
  2861  0D20  1C03               	skipc
  2862  0D21  03B2               	decf	(printf@width+1)^(0+128),f
  2863  0D22  2D15               	goto	L6
  2864  0D23                     l8032:	
  2865  0D23  0832               	movf	(printf@width+1)^(0+128),w
  2866  0D24  0431               	iorwf	printf@width^(0+128),w
  2867  0D25  1903               	skipnz
  2868  0D26  2D34               	goto	l8038
  2869  0D27                     l8034:	
  2870  0D27  3020               	movlw	32
  2871  0D28  257F  120A  158A   	fcall	_putch
  2872  0D2B  30FF               	movlw	-1
  2873  0D2C  1683               	bsf	3,5	;RP0=1, select bank1
  2874  0D2D  07B1               	addwf	printf@width^(0+128),f
  2875  0D2E  1C03               	skipc
  2876  0D2F  03B2               	decf	(printf@width+1)^(0+128),f
  2877  0D30  0832               	movf	(printf@width+1)^(0+128),w
  2878  0D31  0431               	iorwf	printf@width^(0+128),w
  2879  0D32  1D03               	skipz
  2880  0D33  2D27               	goto	l8034
  2881  0D34                     l8038:	
  2882  0D34  082D               	movf	printf@flag^(0+128),w
  2883  0D35  3903               	andlw	3
  2884  0D36  1903               	btfsc	3,2
  2885  0D37  2D3C               	goto	l8044
  2886  0D38  302D               	movlw	45
  2887  0D39                     L5:	
  2888  0D39  257F  120A  158A   	fcall	_putch
  2889  0D3C                     l8044:	
  2890  0D3C  30FF               	movlw	-1
  2891  0D3D  1683               	bsf	3,5	;RP0=1, select bank1
  2892  0D3E  07B6               	addwf	printf@prec^(0+128),f
  2893  0D3F  1C03               	skipc
  2894  0D40  03B7               	decf	(printf@prec+1)^(0+128),f
  2895  0D41  0A36               	incf	printf@prec^(0+128),w
  2896  0D42  1903               	skipnz
  2897  0D43  0A37               	incf	(printf@prec+1)^(0+128),w
  2898  0D44  1903               	btfsc	3,2
  2899  0D45  280A               	goto	l8046
  2900  0D46  300A               	movlw	10
  2901  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0D48  00AD               	movwf	?___llmod
  2903  0D49  01AE               	clrf	?___llmod+1
  2904  0D4A  01AF               	clrf	?___llmod+2
  2905  0D4B  01B0               	clrf	?___llmod+3
  2906  0D4C  1683               	bsf	3,5	;RP0=1, select bank1
  2907  0D4D  0836               	movf	printf@prec^(0+128),w
  2908  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0D4F  00E4               	movwf	??_printf
  2910  0D50  1003               	clrc
  2911  0D51  0DE4               	rlf	??_printf,f
  2912  0D52  1003               	clrc
  2913  0D53  0D64               	rlf	??_printf,w
  2914  0D54  3E4F               	addlw	low (_dpowers-__stringbase)
  2915  0D55  0084               	movwf	4
  2916  0D56  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2917  0D5B  00A0               	movwf	?___lldiv
  2918  0D5C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2919  0D61  00A1               	movwf	?___lldiv+1
  2920  0D62  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2921  0D67  00A2               	movwf	?___lldiv+2
  2922  0D68  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  2923  0D6D  26E2  120A  158A   	fcall	PL2	;call to abstracted procedure
  2924  0D70  2672  120A  158A   	fcall	___lldiv
  2925  0D73  272E  120A  158A   	fcall	PL13	;call to abstracted procedure
  2926  0D76  2585  120A  158A   	fcall	___llmod
  2927  0D79  082D               	movf	?___llmod,w
  2928  0D7A  3E30               	addlw	48
  2929  0D7B  1683               	bsf	3,5	;RP0=1, select bank1
  2930  0D7C  00B8               	movwf	printf@c^(0+128)
  2931  0D7D  2D39               	goto	L5
  2932  0D7E                     l2303:	
  2933  0D7E  0008               	return
  2934  0D7F                     __end_of_printf:	
  2935  0D7F                     __ptext758:	
  2936 ;; =============== function _printf ends ============
  2937                           
  2938                           
  2939 ;; *************** function _putch *****************
  2940 ;; Defined at:
  2941 ;;		line 64 in file "D:\TTVXL\Project TTVXL\BT04week12ttvxl\BT04week12ttvxl.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  c               1    wreg     unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  c               1    9[BANK0 ] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;		None               void
  2948 ;; Registers used:
  2949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/20
  2952 ;;		On exit  : 60/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2955 ;;      Params:         0       0       0       0       0
  2956 ;;      Locals:         0       1       0       0       0
  2957 ;;      Temps:          0       0       0       0       0
  2958 ;;      Totals:         0       1       0       0       0
  2959 ;;Total ram usage:        1 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    5
  2962 ;; This function calls:
  2963 ;;		_lcd_putc
  2964 ;; This function is called by:
  2965 ;;		_printf
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968  0D7F                     _putch:	
  2969                           
  2970                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2971                           ;putch@c stored from wreg
  2972  0D7F  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0D80  1303               	bcf	3,6	;RP1=0, select bank0
  2974  0D81  00A9               	movwf	putch@c
  2975                           
  2976                           ;BT04week12ttvxl.c: 65: lcd_putc(c);
  2977  0D82  120A  118A  2BE6   	ljmp	_lcd_putc
  2978  0D85                     __end_of_putch:	
  2979  0D85                     __ptext776:	
  2980 ;; =============== function ___ftneg ends ============
  2981                           
  2982                           
  2983 ;; *************** function ___llmod *****************
  2984 ;; Defined at:
  2985 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  divisor         4   13[BANK0 ] unsigned long 
  2988 ;;  dividend        4   17[BANK0 ] unsigned long 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  counter         1   21[BANK0 ] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  4   13[BANK0 ] unsigned long 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0
  2995 ;; Tracked objects:
  2996 ;;		On entry : 60/0
  2997 ;;		On exit  : 60/0
  2998 ;;		Unchanged: FFF9F/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3000 ;;      Params:         0       8       0       0       0
  3001 ;;      Locals:         0       1       0       0       0
  3002 ;;      Temps:          0       0       0       0       0
  3003 ;;      Totals:         0       9       0       0       0
  3004 ;;Total ram usage:        9 bytes
  3005 ;; Hardware stack levels used:    1
  3006 ;; Hardware stack levels required when called:    2
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_printf
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013  0D85                     ___llmod:	
  3014                           
  3015                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3016  0D85  0830               	movf	___llmod@divisor+3,w
  3017  0D86  042F               	iorwf	___llmod@divisor+2,w
  3018  0D87  042E               	iorwf	___llmod@divisor+1,w
  3019  0D88  042D               	iorwf	___llmod@divisor,w
  3020  0D89  1903               	skipnz
  3021  0D8A  2DBA               	goto	l7548
  3022  0D8B  01B5               	clrf	___llmod@counter
  3023  0D8C                     L14:	
  3024  0D8C  0AB5               	incf	___llmod@counter,f
  3025  0D8D  1BB0               	btfsc	___llmod@divisor+3,7
  3026  0D8E  2D95               	goto	l7540
  3027  0D8F  1003               	clrc
  3028  0D90  0DAD               	rlf	___llmod@divisor,f
  3029  0D91  0DAE               	rlf	___llmod@divisor+1,f
  3030  0D92  0DAF               	rlf	___llmod@divisor+2,f
  3031  0D93  0DB0               	rlf	___llmod@divisor+3,f
  3032  0D94  2D8C               	goto	L14
  3033  0D95                     l7540:	
  3034  0D95  0830               	movf	___llmod@divisor+3,w
  3035  0D96  0234               	subwf	___llmod@dividend+3,w
  3036  0D97  1D03               	skipz
  3037  0D98  2DA3               	goto	u4225
  3038  0D99  082F               	movf	___llmod@divisor+2,w
  3039  0D9A  0233               	subwf	___llmod@dividend+2,w
  3040  0D9B  1D03               	skipz
  3041  0D9C  2DA3               	goto	u4225
  3042  0D9D  082E               	movf	___llmod@divisor+1,w
  3043  0D9E  0232               	subwf	___llmod@dividend+1,w
  3044  0D9F  1D03               	skipz
  3045  0DA0  2DA3               	goto	u4225
  3046  0DA1  082D               	movf	___llmod@divisor,w
  3047  0DA2  0231               	subwf	___llmod@dividend,w
  3048  0DA3                     u4225:	
  3049  0DA3  1C03               	skipc
  3050  0DA4  2DB4               	goto	L15
  3051  0DA5  082D               	movf	___llmod@divisor,w
  3052  0DA6  02B1               	subwf	___llmod@dividend,f
  3053  0DA7  082E               	movf	___llmod@divisor+1,w
  3054  0DA8  1C03               	skipc
  3055  0DA9  0F2E               	incfsz	___llmod@divisor+1,w
  3056  0DAA  02B2               	subwf	___llmod@dividend+1,f
  3057  0DAB  082F               	movf	___llmod@divisor+2,w
  3058  0DAC  1C03               	skipc
  3059  0DAD  0F2F               	incfsz	___llmod@divisor+2,w
  3060  0DAE  02B3               	subwf	___llmod@dividend+2,f
  3061  0DAF  0830               	movf	___llmod@divisor+3,w
  3062  0DB0  1C03               	skipc
  3063  0DB1  0F30               	incfsz	___llmod@divisor+3,w
  3064  0DB2  02B4               	subwf	___llmod@dividend+3,f
  3065  0DB3  1003               	clrc
  3066  0DB4                     L15:	
  3067  0DB4  0CB0               	rrf	___llmod@divisor+3,f
  3068  0DB5  0CAF               	rrf	___llmod@divisor+2,f
  3069  0DB6  0CAE               	rrf	___llmod@divisor+1,f
  3070  0DB7  0CAD               	rrf	___llmod@divisor,f
  3071  0DB8  0BB5               	decfsz	___llmod@counter,f
  3072  0DB9  2D95               	goto	l7540
  3073  0DBA                     l7548:	
  3074  0DBA  0834               	movf	___llmod@dividend+3,w
  3075  0DBB  00B0               	movwf	?___llmod+3
  3076  0DBC  0833               	movf	___llmod@dividend+2,w
  3077  0DBD  00AF               	movwf	?___llmod+2
  3078  0DBE  0832               	movf	___llmod@dividend+1,w
  3079  0DBF  00AE               	movwf	?___llmod+1
  3080  0DC0  0831               	movf	___llmod@dividend,w
  3081  0DC1  00AD               	movwf	?___llmod
  3082  0DC2  0008               	return
  3083  0DC3                     __end_of___llmod:	
  3084  0DC3                     __ptext774:	
  3085 ;; =============== function ___lldiv ends ============
  3086                           
  3087                           
  3088 ;; *************** function ___ftge *****************
  3089 ;; Defined at:
  3090 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  ff1             3    0[BANK0 ] float 
  3093 ;;  ff2             3    3[BANK0 ] float 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;		None               void
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0
  3100 ;; Tracked objects:
  3101 ;;		On entry : 60/0
  3102 ;;		On exit  : 60/0
  3103 ;;		Unchanged: FFF9F/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3105 ;;      Params:         0       6       0       0       0
  3106 ;;      Locals:         0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0
  3108 ;;      Totals:         0       6       0       0       0
  3109 ;;Total ram usage:        6 bytes
  3110 ;; Hardware stack levels used:    1
  3111 ;; Hardware stack levels required when called:    2
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_printf
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118  0DC3                     ___ftge:	
  3119                           
  3120                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3121  0DC3  1FA2               	btfss	___ftge@ff1+2,7
  3122  0DC4  2DD2               	goto	l7564
  3123  0DC5  0820               	movf	___ftge@ff1,w
  3124  0DC6  3C00               	sublw	0
  3125  0DC7  00A0               	movwf	___ftge@ff1
  3126  0DC8  0821               	movf	___ftge@ff1+1,w
  3127  0DC9  1C03               	skipc
  3128  0DCA  0F21               	incfsz	___ftge@ff1+1,w
  3129  0DCB  3C00               	sublw	0
  3130  0DCC  00A1               	movwf	___ftge@ff1+1
  3131  0DCD  0822               	movf	___ftge@ff1+2,w
  3132  0DCE  1C03               	skipc
  3133  0DCF  0F22               	incfsz	___ftge@ff1+2,w
  3134  0DD0  3C80               	sublw	128
  3135  0DD1  00A2               	movwf	___ftge@ff1+2
  3136  0DD2                     l7564:	
  3137  0DD2  1FA5               	btfss	___ftge@ff2+2,7
  3138  0DD3  2DE1               	goto	l7568
  3139  0DD4  0823               	movf	___ftge@ff2,w
  3140  0DD5  3C00               	sublw	0
  3141  0DD6  00A3               	movwf	___ftge@ff2
  3142  0DD7  0824               	movf	___ftge@ff2+1,w
  3143  0DD8  1C03               	skipc
  3144  0DD9  0F24               	incfsz	___ftge@ff2+1,w
  3145  0DDA  3C00               	sublw	0
  3146  0DDB  00A4               	movwf	___ftge@ff2+1
  3147  0DDC  0825               	movf	___ftge@ff2+2,w
  3148  0DDD  1C03               	skipc
  3149  0DDE  0F25               	incfsz	___ftge@ff2+2,w
  3150  0DDF  3C80               	sublw	128
  3151  0DE0  00A5               	movwf	___ftge@ff2+2
  3152  0DE1                     l7568:	
  3153  0DE1  3080               	movlw	128
  3154  0DE2  06A2               	xorwf	___ftge@ff1+2,f
  3155  0DE3  06A5               	xorwf	___ftge@ff2+2,f
  3156  0DE4  0825               	movf	___ftge@ff2+2,w
  3157  0DE5  0222               	subwf	___ftge@ff1+2,w
  3158  0DE6  1D03               	skipz
  3159  0DE7  0008               	return
  3160  0DE8  0824               	movf	___ftge@ff2+1,w
  3161  0DE9  0221               	subwf	___ftge@ff1+1,w
  3162  0DEA  1D03               	skipz
  3163  0DEB  0008               	return
  3164  0DEC  0823               	movf	___ftge@ff2,w
  3165  0DED  0220               	subwf	___ftge@ff1,w
  3166  0DEE  0008               	return
  3167  0DEF                     __end_of___ftge:	
  3168  0DEF                     __ptext786:	
  3169 ;; =============== function __tdiv_to_l_ ends ============
  3170                           
  3171                           
  3172 ;; *************** function _isdigit *****************
  3173 ;; Defined at:
  3174 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  c               1    wreg     unsigned char 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  c               1    1[BANK0 ] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;		None               void
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0
  3183 ;; Tracked objects:
  3184 ;;		On entry : 60/20
  3185 ;;		On exit  : 60/0
  3186 ;;		Unchanged: FFF9F/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       0       0       0       0
  3189 ;;      Locals:         0       2       0       0       0
  3190 ;;      Temps:          0       0       0       0       0
  3191 ;;      Totals:         0       2       0       0       0
  3192 ;;Total ram usage:        2 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    2
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_printf
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201  0DEF                     _isdigit:	
  3202                           
  3203                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3204                           ;isdigit@c stored from wreg
  3205  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0DF0  00A1               	movwf	isdigit@c
  3207  0DF1  303A               	movlw	58
  3208  0DF2  01A0               	clrf	_isdigit$3683
  3209  0DF3  0221               	subwf	isdigit@c,w
  3210  0DF4  1803               	skipnc
  3211  0DF5  2DFC               	goto	l7428
  3212  0DF6  3030               	movlw	48
  3213  0DF7  0221               	subwf	isdigit@c,w
  3214  0DF8  1C03               	skipc
  3215  0DF9  2DFC               	goto	l7428
  3216  0DFA  01A0               	clrf	_isdigit$3683
  3217  0DFB  0AA0               	incf	_isdigit$3683,f
  3218  0DFC                     l7428:	
  3219  0DFC  0C20               	rrf	_isdigit$3683,w
  3220  0DFD  0008               	return
  3221  0DFE                     __end_of_isdigit:	
  3222  0DFE                     __ptext782:	
  3223 ;; =============== function ___lbdiv ends ============
  3224                           
  3225                           
  3226 ;; *************** function ___wmul *****************
  3227 ;; Defined at:
  3228 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3231 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  product         2    4[BANK0 ] unsigned int 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2    0[BANK0 ] unsigned int 
  3236 ;; Registers used:
  3237 ;;		wreg, status,2, status,0
  3238 ;; Tracked objects:
  3239 ;;		On entry : 60/0
  3240 ;;		On exit  : 60/0
  3241 ;;		Unchanged: FFF9F/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3243 ;;      Params:         0       4       0       0       0
  3244 ;;      Locals:         0       2       0       0       0
  3245 ;;      Temps:          0       0       0       0       0
  3246 ;;      Totals:         0       6       0       0       0
  3247 ;;Total ram usage:        6 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    2
  3250 ;; This function calls:
  3251 ;;		Nothing
  3252 ;; This function is called by:
  3253 ;;		_fround
  3254 ;;		_scale
  3255 ;;		_printf
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258  0DFE                     ___wmul:	
  3259                           
  3260                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3261  0DFE  01A4               	clrf	___wmul@product
  3262  0DFF  01A5               	clrf	___wmul@product+1
  3263  0E00                     l7450:	
  3264  0E00  1C20               	btfss	___wmul@multiplier,0
  3265  0E01  2E08               	goto	l7454
  3266  0E02  0822               	movf	___wmul@multiplicand,w
  3267  0E03  07A4               	addwf	___wmul@product,f
  3268  0E04  1803               	skipnc
  3269  0E05  0AA5               	incf	___wmul@product+1,f
  3270  0E06  0823               	movf	___wmul@multiplicand+1,w
  3271  0E07  07A5               	addwf	___wmul@product+1,f
  3272  0E08                     l7454:	
  3273  0E08  1003               	clrc
  3274  0E09  0DA2               	rlf	___wmul@multiplicand,f
  3275  0E0A  0DA3               	rlf	___wmul@multiplicand+1,f
  3276  0E0B  1003               	clrc
  3277  0E0C  0CA1               	rrf	___wmul@multiplier+1,f
  3278  0E0D  0CA0               	rrf	___wmul@multiplier,f
  3279  0E0E  0821               	movf	___wmul@multiplier+1,w
  3280  0E0F  0420               	iorwf	___wmul@multiplier,w
  3281  0E10  1D03               	skipz
  3282  0E11  2E00               	goto	l7450
  3283  0E12  0825               	movf	___wmul@product+1,w
  3284  0E13  00A1               	movwf	?___wmul+1
  3285  0E14  0824               	movf	___wmul@product,w
  3286  0E15  00A0               	movwf	?___wmul
  3287  0E16  0008               	return
  3288  0E17                     __end_of___wmul:	
  3289  0E17                     __ptext778:	
  3290 ;; =============== function ___awdiv ends ============
  3291                           
  3292                           
  3293 ;; *************** function ___fttol *****************
  3294 ;; Defined at:
  3295 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  f1              3   14[BANK0 ] float 
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;  lval            4   22[BANK0 ] unsigned long 
  3300 ;;  exp1            1   26[BANK0 ] unsigned char 
  3301 ;;  sign1           1   21[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  4   14[BANK0 ] long 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0
  3306 ;; Tracked objects:
  3307 ;;		On entry : 60/0
  3308 ;;		On exit  : 60/0
  3309 ;;		Unchanged: FFF9F/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       4       0       0       0
  3312 ;;      Locals:         0       6       0       0       0
  3313 ;;      Temps:          0       3       0       0       0
  3314 ;;      Totals:         0      13       0       0       0
  3315 ;;Total ram usage:       13 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    2
  3318 ;; This function calls:
  3319 ;;		Nothing
  3320 ;; This function is called by:
  3321 ;;		_printf
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324  0E17                     ___fttol:	
  3325                           
  3326                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3327  0E17  2772  120A  158A   	fcall	PL29	;call to abstracted procedure
  3328  0E1A  1003               	clrc
  3329  0E1B  0D33               	rlf	??___fttol+1,w
  3330  0E1C  0D34               	rlf	??___fttol+2,w
  3331  0E1D  00BA               	movwf	___fttol@exp1
  3332  0E1E  08BA               	movf	___fttol@exp1,f
  3333  0E1F  1D03               	skipz
  3334  0E20  2E26               	goto	l6364
  3335  0E21                     l6362:	
  3336  0E21  01AE               	clrf	?___fttol
  3337  0E22  01AF               	clrf	?___fttol+1
  3338  0E23  01B0               	clrf	?___fttol+2
  3339  0E24  01B1               	clrf	?___fttol+3
  3340  0E25  0008               	return
  3341  0E26                     l6364:	
  3342  0E26  2772  120A  158A   	fcall	PL29	;call to abstracted procedure
  3343  0E29  3017               	movlw	23
  3344  0E2A                     u2445:	
  3345  0E2A  1003               	clrc
  3346  0E2B  0CB4               	rrf	??___fttol+2,f
  3347  0E2C  0CB3               	rrf	??___fttol+1,f
  3348  0E2D  0CB2               	rrf	??___fttol,f
  3349  0E2E  3EFF               	addlw	-1
  3350  0E2F  1D03               	skipz
  3351  0E30  2E2A               	goto	u2445
  3352  0E31  0832               	movf	??___fttol,w
  3353  0E32  00B5               	movwf	___fttol@sign1
  3354  0E33  17AF               	bsf	___fttol@f1+1,7
  3355  0E34  01B0               	clrf	___fttol@f1+2
  3356  0E35  082E               	movf	___fttol@f1,w
  3357  0E36  00B6               	movwf	___fttol@lval
  3358  0E37  082F               	movf	___fttol@f1+1,w
  3359  0E38  00B7               	movwf	___fttol@lval+1
  3360  0E39  0830               	movf	___fttol@f1+2,w
  3361  0E3A  00B8               	movwf	___fttol@lval+2
  3362  0E3B  308E               	movlw	142
  3363  0E3C  01B9               	clrf	___fttol@lval+3
  3364  0E3D  02BA               	subwf	___fttol@exp1,f
  3365  0E3E  1FBA               	btfss	___fttol@exp1,7
  3366  0E3F  2E4D               	goto	l6384
  3367  0E40  083A               	movf	___fttol@exp1,w
  3368  0E41  3A80               	xorlw	128
  3369  0E42  3E8F               	addlw	143
  3370  0E43  1C03               	btfss	3,0
  3371  0E44  2E21               	goto	l6362
  3372  0E45                     l6380:	
  3373  0E45  1003               	clrc
  3374  0E46  0CB9               	rrf	___fttol@lval+3,f
  3375  0E47  0CB8               	rrf	___fttol@lval+2,f
  3376  0E48  0CB7               	rrf	___fttol@lval+1,f
  3377  0E49  0CB6               	rrf	___fttol@lval,f
  3378  0E4A  0FBA               	incfsz	___fttol@exp1,f
  3379  0E4B  2E45               	goto	l6380
  3380  0E4C  2E5B               	goto	l6390
  3381  0E4D                     l6384:	
  3382  0E4D  3018               	movlw	24
  3383  0E4E  023A               	subwf	___fttol@exp1,w
  3384  0E4F  1803               	btfsc	3,0
  3385  0E50  2E21               	goto	l6362
  3386  0E51                     l3427:	
  3387  0E51  08BA               	movf	___fttol@exp1,f
  3388  0E52  1903               	btfsc	3,2
  3389  0E53  2E5B               	goto	l6390
  3390  0E54  1003               	clrc
  3391  0E55  0DB6               	rlf	___fttol@lval,f
  3392  0E56  0DB7               	rlf	___fttol@lval+1,f
  3393  0E57  0DB8               	rlf	___fttol@lval+2,f
  3394  0E58  0DB9               	rlf	___fttol@lval+3,f
  3395  0E59  03BA               	decf	___fttol@exp1,f
  3396  0E5A  2E51               	goto	l3427
  3397  0E5B                     l6390:	
  3398  0E5B  0835               	movf	___fttol@sign1,w
  3399  0E5C  1903               	btfsc	3,2
  3400  0E5D  2E69               	goto	l6394
  3401  0E5E  09B6               	comf	___fttol@lval,f
  3402  0E5F  09B7               	comf	___fttol@lval+1,f
  3403  0E60  09B8               	comf	___fttol@lval+2,f
  3404  0E61  09B9               	comf	___fttol@lval+3,f
  3405  0E62  0AB6               	incf	___fttol@lval,f
  3406  0E63  1903               	skipnz
  3407  0E64  0AB7               	incf	___fttol@lval+1,f
  3408  0E65  1903               	skipnz
  3409  0E66  0AB8               	incf	___fttol@lval+2,f
  3410  0E67  1903               	skipnz
  3411  0E68  0AB9               	incf	___fttol@lval+3,f
  3412  0E69                     l6394:	
  3413  0E69  0839               	movf	___fttol@lval+3,w
  3414  0E6A  00B1               	movwf	?___fttol+3
  3415  0E6B  0838               	movf	___fttol@lval+2,w
  3416  0E6C  00B0               	movwf	?___fttol+2
  3417  0E6D  0837               	movf	___fttol@lval+1,w
  3418  0E6E  00AF               	movwf	?___fttol+1
  3419  0E6F  0836               	movf	___fttol@lval,w
  3420  0E70  00AE               	movwf	?___fttol
  3421  0E71  0008               	return
  3422  0E72                     __end_of___fttol:	
  3423  0E72                     __ptext773:	
  3424 ;; =============== function ___awmod ends ============
  3425                           
  3426                           
  3427 ;; *************** function ___lldiv *****************
  3428 ;; Defined at:
  3429 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  divisor         4    0[BANK0 ] unsigned long 
  3432 ;;  dividend        4    4[BANK0 ] unsigned long 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  quotient        4    8[BANK0 ] unsigned long 
  3435 ;;  counter         1   12[BANK0 ] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  4    0[BANK0 ] unsigned long 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 60/0
  3442 ;;		On exit  : 60/0
  3443 ;;		Unchanged: FFF9F/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         0       8       0       0       0
  3446 ;;      Locals:         0       5       0       0       0
  3447 ;;      Temps:          0       0       0       0       0
  3448 ;;      Totals:         0      13       0       0       0
  3449 ;;Total ram usage:       13 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; Hardware stack levels required when called:    2
  3452 ;; This function calls:
  3453 ;;		Nothing
  3454 ;; This function is called by:
  3455 ;;		_printf
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458  0E72                     ___lldiv:	
  3459                           
  3460                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3461  0E72  01A8               	clrf	___lldiv@quotient
  3462  0E73  01A9               	clrf	___lldiv@quotient+1
  3463  0E74  01AA               	clrf	___lldiv@quotient+2
  3464  0E75  01AB               	clrf	___lldiv@quotient+3
  3465  0E76  0823               	movf	___lldiv@divisor+3,w
  3466  0E77  0422               	iorwf	___lldiv@divisor+2,w
  3467  0E78  0421               	iorwf	___lldiv@divisor+1,w
  3468  0E79  0420               	iorwf	___lldiv@divisor,w
  3469  0E7A  1903               	skipnz
  3470  0E7B  2EB1               	goto	l7602
  3471  0E7C  01AC               	clrf	___lldiv@counter
  3472  0E7D                     L11:	
  3473  0E7D  0AAC               	incf	___lldiv@counter,f
  3474  0E7E  1BA3               	btfsc	___lldiv@divisor+3,7
  3475  0E7F  2E86               	goto	l7590
  3476  0E80  1003               	clrc
  3477  0E81  0DA0               	rlf	___lldiv@divisor,f
  3478  0E82  0DA1               	rlf	___lldiv@divisor+1,f
  3479  0E83  0DA2               	rlf	___lldiv@divisor+2,f
  3480  0E84  0DA3               	rlf	___lldiv@divisor+3,f
  3481  0E85  2E7D               	goto	L11
  3482  0E86                     l7590:	
  3483  0E86  1003               	clrc
  3484  0E87  0DA8               	rlf	___lldiv@quotient,f
  3485  0E88  0DA9               	rlf	___lldiv@quotient+1,f
  3486  0E89  0DAA               	rlf	___lldiv@quotient+2,f
  3487  0E8A  0DAB               	rlf	___lldiv@quotient+3,f
  3488  0E8B  0823               	movf	___lldiv@divisor+3,w
  3489  0E8C  0227               	subwf	___lldiv@dividend+3,w
  3490  0E8D  1D03               	skipz
  3491  0E8E  2E99               	goto	u4305
  3492  0E8F  0822               	movf	___lldiv@divisor+2,w
  3493  0E90  0226               	subwf	___lldiv@dividend+2,w
  3494  0E91  1D03               	skipz
  3495  0E92  2E99               	goto	u4305
  3496  0E93  0821               	movf	___lldiv@divisor+1,w
  3497  0E94  0225               	subwf	___lldiv@dividend+1,w
  3498  0E95  1D03               	skipz
  3499  0E96  2E99               	goto	u4305
  3500  0E97  0820               	movf	___lldiv@divisor,w
  3501  0E98  0224               	subwf	___lldiv@dividend,w
  3502  0E99                     u4305:	
  3503  0E99  1C03               	skipc
  3504  0E9A  2EAB               	goto	L12
  3505  0E9B  0820               	movf	___lldiv@divisor,w
  3506  0E9C  02A4               	subwf	___lldiv@dividend,f
  3507  0E9D  0821               	movf	___lldiv@divisor+1,w
  3508  0E9E  1C03               	skipc
  3509  0E9F  0F21               	incfsz	___lldiv@divisor+1,w
  3510  0EA0  02A5               	subwf	___lldiv@dividend+1,f
  3511  0EA1  0822               	movf	___lldiv@divisor+2,w
  3512  0EA2  1C03               	skipc
  3513  0EA3  0F22               	incfsz	___lldiv@divisor+2,w
  3514  0EA4  02A6               	subwf	___lldiv@dividend+2,f
  3515  0EA5  0823               	movf	___lldiv@divisor+3,w
  3516  0EA6  1C03               	skipc
  3517  0EA7  0F23               	incfsz	___lldiv@divisor+3,w
  3518  0EA8  02A7               	subwf	___lldiv@dividend+3,f
  3519  0EA9  1428               	bsf	___lldiv@quotient,0
  3520  0EAA  1003               	clrc
  3521  0EAB                     L12:	
  3522  0EAB  0CA3               	rrf	___lldiv@divisor+3,f
  3523  0EAC  0CA2               	rrf	___lldiv@divisor+2,f
  3524  0EAD  0CA1               	rrf	___lldiv@divisor+1,f
  3525  0EAE  0CA0               	rrf	___lldiv@divisor,f
  3526  0EAF  0BAC               	decfsz	___lldiv@counter,f
  3527  0EB0  2E86               	goto	l7590
  3528  0EB1                     l7602:	
  3529  0EB1  082B               	movf	___lldiv@quotient+3,w
  3530  0EB2  00A3               	movwf	?___lldiv+3
  3531  0EB3  082A               	movf	___lldiv@quotient+2,w
  3532  0EB4  00A2               	movwf	?___lldiv+2
  3533  0EB5  0829               	movf	___lldiv@quotient+1,w
  3534  0EB6  00A1               	movwf	?___lldiv+1
  3535  0EB7  0828               	movf	___lldiv@quotient,w
  3536  0EB8  00A0               	movwf	?___lldiv
  3537  0EB9  0008               	return
  3538  0EBA                     __end_of___lldiv:	
  3539  0EBA                     __ptext775:	
  3540 ;; =============== function ___ftge ends ============
  3541                           
  3542                           
  3543 ;; *************** function ___ftneg *****************
  3544 ;; Defined at:
  3545 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;  f1              3    0[BANK0 ] float 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  3    0[BANK0 ] float 
  3552 ;; Registers used:
  3553 ;;		wreg
  3554 ;; Tracked objects:
  3555 ;;		On entry : 160/0
  3556 ;;		On exit  : 160/0
  3557 ;;		Unchanged: FFE9F/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       3       0       0       0
  3560 ;;      Locals:         0       0       0       0       0
  3561 ;;      Temps:          0       0       0       0       0
  3562 ;;      Totals:         0       3       0       0       0
  3563 ;;Total ram usage:        3 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    2
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_printf
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572  0EBA                     ___ftneg:	
  3573                           
  3574                           ; Regs used in ___ftneg: [wreg]
  3575  0EBA  0822               	movf	___ftneg@f1+2,w
  3576  0EBB  0421               	iorwf	___ftneg@f1+1,w
  3577  0EBC  0420               	iorwf	___ftneg@f1,w
  3578  0EBD  1903               	skipnz
  3579  0EBE  0008               	return
  3580  0EBF  3080               	movlw	128
  3581  0EC0  06A2               	xorwf	___ftneg@f1+2,f
  3582  0EC1  0008               	return
  3583  0EC2                     __end_of___ftneg:	
  3584  0EC2                     __ptext765:	
  3585 ;; =============== function _lcd_init ends ============
  3586                           
  3587                           
  3588 ;; *************** function ___lltoft *****************
  3589 ;; Defined at:
  3590 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  c               4    8[BANK0 ] unsigned long 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  exp             1   12[BANK0 ] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  3    8[BANK0 ] float 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, pclath, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 60/0
  3601 ;;		On exit  : 60/0
  3602 ;;		Unchanged: FFF9F/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         0       4       0       0       0
  3605 ;;      Locals:         0       1       0       0       0
  3606 ;;      Temps:          0       0       0       0       0
  3607 ;;      Totals:         0       5       0       0       0
  3608 ;;Total ram usage:        5 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    3
  3611 ;; This function calls:
  3612 ;;		___ftpack
  3613 ;; This function is called by:
  3614 ;;		_printf
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617  0EC2                     ___lltoft:	
  3618                           
  3619                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3620  0EC2  308E               	movlw	142
  3621  0EC3  00AC               	movwf	___lltoft@exp
  3622  0EC4                     l7662:	
  3623  0EC4  30FF               	movlw	255
  3624  0EC5  052B               	andwf	___lltoft@c+3,w
  3625  0EC6  1903               	btfsc	3,2
  3626  0EC7  2ECF               	goto	l7664
  3627  0EC8  1003               	clrc
  3628  0EC9  0CAB               	rrf	___lltoft@c+3,f
  3629  0ECA  0CAA               	rrf	___lltoft@c+2,f
  3630  0ECB  0CA9               	rrf	___lltoft@c+1,f
  3631  0ECC  0CA8               	rrf	___lltoft@c,f
  3632  0ECD  0AAC               	incf	___lltoft@exp,f
  3633  0ECE  2EC4               	goto	l7662
  3634  0ECF                     l7664:	
  3635  0ECF  0828               	movf	___lltoft@c,w
  3636  0ED0  00A0               	movwf	?___ftpack
  3637  0ED1  0829               	movf	___lltoft@c+1,w
  3638  0ED2  00A1               	movwf	?___ftpack+1
  3639  0ED3  082A               	movf	___lltoft@c+2,w
  3640  0ED4  00A2               	movwf	?___ftpack+2
  3641  0ED5  082C               	movf	___lltoft@exp,w
  3642  0ED6  00A3               	movwf	?___ftpack+3
  3643  0ED7  01A4               	clrf	?___ftpack+4
  3644  0ED8  120A  118A  2337   	fcall	___ftpack
  3645  0EDB  0820               	movf	?___ftpack,w
  3646  0EDC  00A8               	movwf	?___lltoft
  3647  0EDD  0821               	movf	?___ftpack+1,w
  3648  0EDE  00A9               	movwf	?___lltoft+1
  3649  0EDF  0822               	movf	?___ftpack+2,w
  3650  0EE0  00AA               	movwf	?___lltoft+2
  3651  0EE1  0008               	return
  3652  0EE2                     __end_of___lltoft:	
  3653  0EE2                     PL2:	
  3654  0EE2  00A3               	movwf	?___lldiv+3
  3655  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  3656  0EE4  082B               	movf	(printf@_val+3)^(0+128),w
  3657  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0EE6  00A7               	movwf	?___lldiv+7
  3659  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  3660  0EE8  082A               	movf	(printf@_val+2)^(0+128),w
  3661  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0EEA  00A6               	movwf	?___lldiv+6
  3663  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  3664  0EEC  0829               	movf	(printf@_val+1)^(0+128),w
  3665  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  3666  0EEE  00A5               	movwf	?___lldiv+5
  3667  0EEF  1683               	bsf	3,5	;RP0=1, select bank1
  3668  0EF0  0828               	movf	printf@_val^(0+128),w
  3669  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0EF2  00A4               	movwf	?___lldiv+4
  3671  0EF3  0008               	return
  3672  0EF4                     PL3:	
  3673  0EF4  0838               	movf	printf@c^(0+128),w
  3674  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  3675  0EF6  00E4               	movwf	??_printf
  3676  0EF7  1003               	clrc
  3677  0EF8  0DE4               	rlf	??_printf,f
  3678  0EF9  1003               	clrc
  3679  0EFA  0D64               	rlf	??_printf,w
  3680  0EFB  3E4F               	addlw	low (_dpowers-__stringbase)
  3681  0EFC  0084               	movwf	4
  3682  0EFD  0008               	return
  3683  0EFE                     PL5:	
  3684  0EFE  0825               	movf	printf@integ^(0+128),w
  3685  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3686  0F00  00A0               	movwf	?___ftge
  3687  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  3688  0F02  0826               	movf	(printf@integ+1)^(0+128),w
  3689  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0F04  00A1               	movwf	?___ftge+1
  3691  0F05  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0F06  0827               	movf	(printf@integ+2)^(0+128),w
  3693  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0F08  00A2               	movwf	?___ftge+2
  3695  0F09  0008               	return
  3696  0F0A                     PL6:	
  3697  0F0A  300A               	movlw	10
  3698  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3699  0F0C  00AD               	movwf	?___llmod
  3700  0F0D  01AE               	clrf	?___llmod+1
  3701  0F0E  01AF               	clrf	?___llmod+2
  3702  0F0F  01B0               	clrf	?___llmod+3
  3703  0F10  1683               	bsf	3,5	;RP0=1, select bank1
  3704  0F11  0008               	return
  3705  0F12                     PL7:	
  3706  0F12  084A               	movf	?_scale,w
  3707  0F13  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0F14  00A5               	movwf	printf@integ^(0+128)
  3709  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0F16  084B               	movf	?_scale+1,w
  3711  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  3712  0F18  00A6               	movwf	(printf@integ+1)^(0+128)
  3713  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0F1A  084C               	movf	?_scale+2,w
  3715  0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  3716  0F1C  00A7               	movwf	(printf@integ+2)^(0+128)
  3717  0F1D  0833               	movf	printf@fval^(0+128),w
  3718  0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0F1F  0008               	return
  3720  0F20                     PL8:	
  3721  0F20  0831               	movf	?___fttol+3,w
  3722  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0F22  00AB               	movwf	(printf@_val+3)^(0+128)
  3724  0F23  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0F24  0830               	movf	?___fttol+2,w
  3726  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  3727  0F26  00AA               	movwf	(printf@_val+2)^(0+128)
  3728  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0F28  082F               	movf	?___fttol+1,w
  3730  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  3731  0F2A  00A9               	movwf	(printf@_val+1)^(0+128)
  3732  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0F2C  082E               	movf	?___fttol,w
  3734  0F2D  0008               	return
  3735  0F2E                     PL13:	
  3736  0F2E  0823               	movf	?___lldiv+3,w
  3737  0F2F  00B4               	movwf	?___llmod+7
  3738  0F30  0822               	movf	?___lldiv+2,w
  3739  0F31  00B3               	movwf	?___llmod+6
  3740  0F32  0821               	movf	?___lldiv+1,w
  3741  0F33  00B2               	movwf	?___llmod+5
  3742  0F34  0820               	movf	?___lldiv,w
  3743  0F35  00B1               	movwf	?___llmod+4
  3744  0F36  0008               	return
  3745  0F37                     PL14:	
  3746  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  3747  0F38  0720               	addwf	?___wmul,w
  3748  0F39  00E4               	movwf	??_printf
  3749  0F3A  3000               	movlw	0
  3750  0F3B  1803               	skipnc
  3751  0F3C  3001               	movlw	1
  3752  0F3D  0721               	addwf	?___wmul+1,w
  3753  0F3E  00E5               	movwf	??_printf+1
  3754  0F3F  0864               	movf	??_printf,w
  3755  0F40  3ED0               	addlw	208
  3756  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  3757  0F42  0008               	return
  3758  0F43                     PL15:	
  3759  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0F44  00AE               	movwf	?___fttol
  3761  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  3762  0F46  0834               	movf	(printf@fval+1)^(0+128),w
  3763  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3764  0F48  00AF               	movwf	?___fttol+1
  3765  0F49  1683               	bsf	3,5	;RP0=1, select bank1
  3766  0F4A  0835               	movf	(printf@fval+2)^(0+128),w
  3767  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0F4C  00B0               	movwf	?___fttol+2
  3769  0F4D  0008               	return
  3770  0F4E                     PL18:	
  3771  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0F4F  00E4               	movwf	??_printf
  3773  0F50  01E5               	clrf	??_printf+1
  3774  0F51  1BE4               	btfsc	??_printf,7
  3775  0F52  03E5               	decf	??_printf+1,f
  3776  0F53  0865               	movf	??_printf+1,w
  3777  0F54  3A80               	xorlw	128
  3778  0F55  00E6               	movwf	??_printf+2
  3779  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  3780  0F57  0008               	return
  3781  0F58                     PL19:	
  3782  0F58  00BB               	movwf	?___ftmul
  3783  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  3784  0F5A  0834               	movf	(printf@fval+1)^(0+128),w
  3785  0F5B  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0F5C  00BC               	movwf	?___ftmul+1
  3787  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  3788  0F5E  0835               	movf	(printf@fval+2)^(0+128),w
  3789  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3790  0F60  00BD               	movwf	?___ftmul+2
  3791  0F61  0008               	return
  3792  0F62                     PL21:	
  3793  0F62  1303               	bcf	3,6	;RP1=0, select bank1
  3794  0F63  0838               	movf	printf@c^(0+128),w
  3795  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0F65  00E4               	movwf	??_printf
  3797  0F66  01E5               	clrf	??_printf+1
  3798  0F67  1BE4               	btfsc	??_printf,7
  3799  0F68  03E5               	decf	??_printf+1,f
  3800  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  3801  0F6A  0008               	return
  3802  0F6B                     PL28:	
  3803  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3804  0F6C  0865               	movf	??_printf+1,w
  3805  0F6D  1803               	skipnc
  3806  0F6E  3E01               	addlw	1
  3807  0F6F  3EFF               	addlw	255
  3808  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  3809  0F71  0008               	return
  3810  0F72                     PL29:	
  3811  0F72  082E               	movf	___fttol@f1,w
  3812  0F73  00B2               	movwf	??___fttol
  3813  0F74  082F               	movf	___fttol@f1+1,w
  3814  0F75  00B3               	movwf	??___fttol+1
  3815  0F76  0830               	movf	___fttol@f1+2,w
  3816  0F77  00B4               	movwf	??___fttol+2
  3817  0F78  0008               	return
  3818  0F79                     PL31:	
  3819  0F79  0800               	movf	0,w
  3820  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0F7B  00E4               	movwf	??_printf
  3822  0F7C  0A84               	incf	4,f
  3823  0F7D  0800               	movf	0,w
  3824  0F7E  00E5               	movwf	??_printf+1
  3825  0F7F  0008               	return
  3826  0F80                     PL33:	
  3827  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  3828  0F81  00A0               	movwf	?___wmul
  3829  0F82  300A               	movlw	10
  3830  0F83  00A2               	movwf	?___wmul+2
  3831  0F84  01A3               	clrf	?___wmul+3
  3832  0F85  0008               	return
  3833  0F86                     PL34:	
  3834  0F86  1683               	bsf	3,5	;RP0=1, select bank1
  3835  0F87  1303               	bcf	3,6	;RP1=0, select bank1
  3836  0F88  0008               	return
  3837  0F89                     __ptext785:	
  3838 ;; =============== function __div_to_l_ ends ============
  3839                           
  3840                           
  3841 ;; *************** function __tdiv_to_l_ *****************
  3842 ;; Defined at:
  3843 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  f1              3    0[BANK0 ] float 
  3846 ;;  f2              3    3[BANK0 ] float 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  quot            4    9[BANK0 ] unsigned long 
  3849 ;;  exp1            1   14[BANK0 ] unsigned char 
  3850 ;;  cntr            1   13[BANK0 ] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  4    0[BANK0 ] unsigned long 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 60/0
  3857 ;;		On exit  : 60/0
  3858 ;;		Unchanged: FFF9F/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3860 ;;      Params:         0       6       0       0       0
  3861 ;;      Locals:         0       6       0       0       0
  3862 ;;      Temps:          0       3       0       0       0
  3863 ;;      Totals:         0      15       0       0       0
  3864 ;;Total ram usage:       15 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    2
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_printf
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873  0F89                     __tdiv_to_l_:	
  3874                           
  3875                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3876  0F89  0820               	movf	__tdiv_to_l_@f1,w
  3877  0F8A  00A6               	movwf	??__tdiv_to_l_
  3878  0F8B  0821               	movf	__tdiv_to_l_@f1+1,w
  3879  0F8C  00A7               	movwf	??__tdiv_to_l_+1
  3880  0F8D  0822               	movf	__tdiv_to_l_@f1+2,w
  3881  0F8E  00A8               	movwf	??__tdiv_to_l_+2
  3882  0F8F  1003               	clrc
  3883  0F90  0D27               	rlf	??__tdiv_to_l_+1,w
  3884  0F91  0D28               	rlf	??__tdiv_to_l_+2,w
  3885  0F92  00AE               	movwf	__tdiv_to_l_@exp1
  3886  0F93  08AE               	movf	__tdiv_to_l_@exp1,f
  3887  0F94  1D03               	skipz
  3888  0F95  2F9B               	goto	l6168
  3889  0F96                     l6166:	
  3890  0F96  01A0               	clrf	?__tdiv_to_l_
  3891  0F97  01A1               	clrf	?__tdiv_to_l_+1
  3892  0F98  01A2               	clrf	?__tdiv_to_l_+2
  3893  0F99  01A3               	clrf	?__tdiv_to_l_+3
  3894  0F9A  0008               	return
  3895  0F9B                     l6168:	
  3896  0F9B  0823               	movf	__tdiv_to_l_@f2,w
  3897  0F9C  00A6               	movwf	??__tdiv_to_l_
  3898  0F9D  0824               	movf	__tdiv_to_l_@f2+1,w
  3899  0F9E  00A7               	movwf	??__tdiv_to_l_+1
  3900  0F9F  0825               	movf	__tdiv_to_l_@f2+2,w
  3901  0FA0  00A8               	movwf	??__tdiv_to_l_+2
  3902  0FA1  1003               	clrc
  3903  0FA2  0D27               	rlf	??__tdiv_to_l_+1,w
  3904  0FA3  0D28               	rlf	??__tdiv_to_l_+2,w
  3905  0FA4  00AD               	movwf	__tdiv_to_l_@cntr
  3906  0FA5  08AD               	movf	__tdiv_to_l_@cntr,f
  3907  0FA6  1903               	btfsc	3,2
  3908  0FA7  2F96               	goto	l6166
  3909  0FA8  307F               	movlw	127
  3910  0FA9  17A1               	bsf	__tdiv_to_l_@f1+1,7
  3911  0FAA  01A2               	clrf	__tdiv_to_l_@f1+2
  3912  0FAB  17A4               	bsf	__tdiv_to_l_@f2+1,7
  3913  0FAC  01A5               	clrf	__tdiv_to_l_@f2+2
  3914  0FAD  01A9               	clrf	__tdiv_to_l_@quot
  3915  0FAE  01AA               	clrf	__tdiv_to_l_@quot+1
  3916  0FAF  01AB               	clrf	__tdiv_to_l_@quot+2
  3917  0FB0  01AC               	clrf	__tdiv_to_l_@quot+3
  3918  0FB1  02AE               	subwf	__tdiv_to_l_@exp1,f
  3919  0FB2  3098               	movlw	152
  3920  0FB3  072D               	addwf	__tdiv_to_l_@cntr,w
  3921  0FB4  00A6               	movwf	??__tdiv_to_l_
  3922  0FB5  02AE               	subwf	__tdiv_to_l_@exp1,f
  3923  0FB6  3018               	movlw	24
  3924  0FB7  00AD               	movwf	__tdiv_to_l_@cntr
  3925  0FB8                     l6182:	
  3926  0FB8  1003               	clrc
  3927  0FB9  0DA9               	rlf	__tdiv_to_l_@quot,f
  3928  0FBA  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  3929  0FBB  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  3930  0FBC  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  3931  0FBD  0825               	movf	__tdiv_to_l_@f2+2,w
  3932  0FBE  0222               	subwf	__tdiv_to_l_@f1+2,w
  3933  0FBF  1D03               	skipz
  3934  0FC0  2FC7               	goto	u2095
  3935  0FC1  0824               	movf	__tdiv_to_l_@f2+1,w
  3936  0FC2  0221               	subwf	__tdiv_to_l_@f1+1,w
  3937  0FC3  1D03               	skipz
  3938  0FC4  2FC7               	goto	u2095
  3939  0FC5  0823               	movf	__tdiv_to_l_@f2,w
  3940  0FC6  0220               	subwf	__tdiv_to_l_@f1,w
  3941  0FC7                     u2095:	
  3942  0FC7  1C03               	skipc
  3943  0FC8  2FD5               	goto	L20
  3944  0FC9  0823               	movf	__tdiv_to_l_@f2,w
  3945  0FCA  02A0               	subwf	__tdiv_to_l_@f1,f
  3946  0FCB  0824               	movf	__tdiv_to_l_@f2+1,w
  3947  0FCC  1C03               	skipc
  3948  0FCD  0F24               	incfsz	__tdiv_to_l_@f2+1,w
  3949  0FCE  02A1               	subwf	__tdiv_to_l_@f1+1,f
  3950  0FCF  0825               	movf	__tdiv_to_l_@f2+2,w
  3951  0FD0  1C03               	skipc
  3952  0FD1  0A25               	incf	__tdiv_to_l_@f2+2,w
  3953  0FD2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  3954  0FD3  1429               	bsf	__tdiv_to_l_@quot,0
  3955  0FD4  1003               	clrc
  3956  0FD5                     L20:	
  3957  0FD5  0DA0               	rlf	__tdiv_to_l_@f1,f
  3958  0FD6  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  3959  0FD7  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  3960  0FD8  0BAD               	decfsz	__tdiv_to_l_@cntr,f
  3961  0FD9  2FB8               	goto	l6182
  3962  0FDA  1FAE               	btfss	__tdiv_to_l_@exp1,7
  3963  0FDB  2FE9               	goto	l6202
  3964  0FDC  082E               	movf	__tdiv_to_l_@exp1,w
  3965  0FDD  3A80               	xorlw	128
  3966  0FDE  3E97               	addlw	151
  3967  0FDF  1C03               	btfss	3,0
  3968  0FE0  2F96               	goto	l6166
  3969  0FE1                     l6198:	
  3970  0FE1  1003               	clrc
  3971  0FE2  0CAC               	rrf	__tdiv_to_l_@quot+3,f
  3972  0FE3  0CAB               	rrf	__tdiv_to_l_@quot+2,f
  3973  0FE4  0CAA               	rrf	__tdiv_to_l_@quot+1,f
  3974  0FE5  0CA9               	rrf	__tdiv_to_l_@quot,f
  3975  0FE6  0FAE               	incfsz	__tdiv_to_l_@exp1,f
  3976  0FE7  2FE1               	goto	l6198
  3977  0FE8  2FF7               	goto	l6208
  3978  0FE9                     l6202:	
  3979  0FE9  3018               	movlw	24
  3980  0FEA  022E               	subwf	__tdiv_to_l_@exp1,w
  3981  0FEB  1803               	btfsc	3,0
  3982  0FEC  2F96               	goto	l6166
  3983  0FED                     l3565:	
  3984  0FED  08AE               	movf	__tdiv_to_l_@exp1,f
  3985  0FEE  1903               	btfsc	3,2
  3986  0FEF  2FF7               	goto	l6208
  3987  0FF0  1003               	clrc
  3988  0FF1  0DA9               	rlf	__tdiv_to_l_@quot,f
  3989  0FF2  0DAA               	rlf	__tdiv_to_l_@quot+1,f
  3990  0FF3  0DAB               	rlf	__tdiv_to_l_@quot+2,f
  3991  0FF4  0DAC               	rlf	__tdiv_to_l_@quot+3,f
  3992  0FF5  03AE               	decf	__tdiv_to_l_@exp1,f
  3993  0FF6  2FED               	goto	l3565
  3994  0FF7                     l6208:	
  3995  0FF7  082C               	movf	__tdiv_to_l_@quot+3,w
  3996  0FF8  00A3               	movwf	?__tdiv_to_l_+3
  3997  0FF9  082B               	movf	__tdiv_to_l_@quot+2,w
  3998  0FFA  00A2               	movwf	?__tdiv_to_l_+2
  3999  0FFB  082A               	movf	__tdiv_to_l_@quot+1,w
  4000  0FFC  00A1               	movwf	?__tdiv_to_l_+1
  4001  0FFD  0829               	movf	__tdiv_to_l_@quot,w
  4002  0FFE  00A0               	movwf	?__tdiv_to_l_
  4003  0FFF  0008               	return
  4004  1000                     __end_of__tdiv_to_l_:	
  4005                           
  4006                           	psect	text760
  4007  06F8                     __ptext760:	
  4008 ;; =============== function _lcd_putc ends ============
  4009                           
  4010                           
  4011 ;; *************** function ___ftsub *****************
  4012 ;; Defined at:
  4013 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  f2              3   54[BANK0 ] float 
  4016 ;;  f1              3   57[BANK0 ] float 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;		None
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  3   54[BANK0 ] float 
  4021 ;; Registers used:
  4022 ;;		wreg, status,2, status,0, pclath, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 60/0
  4025 ;;		On exit  : 60/0
  4026 ;;		Unchanged: FFF9F/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       6       0       0       0
  4029 ;;      Locals:         0       0       0       0       0
  4030 ;;      Temps:          0       0       0       0       0
  4031 ;;      Totals:         0       6       0       0       0
  4032 ;;Total ram usage:        6 bytes
  4033 ;; Hardware stack levels used:    1
  4034 ;; Hardware stack levels required when called:    4
  4035 ;; This function calls:
  4036 ;;		___ftadd
  4037 ;; This function is called by:
  4038 ;;		_printf
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041  06F8                     ___ftsub:	
  4042                           
  4043                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4044  06F8  3080               	movlw	128
  4045  06F9  06D8               	xorwf	___ftsub@f2+2,f
  4046  06FA  0859               	movf	___ftsub@f1,w
  4047  06FB  00CA               	movwf	?___ftadd
  4048  06FC  085A               	movf	___ftsub@f1+1,w
  4049  06FD  00CB               	movwf	?___ftadd+1
  4050  06FE  085B               	movf	___ftsub@f1+2,w
  4051  06FF  00CC               	movwf	?___ftadd+2
  4052  0700  0856               	movf	___ftsub@f2,w
  4053  0701  00CD               	movwf	?___ftadd+3
  4054  0702  0857               	movf	___ftsub@f2+1,w
  4055  0703  00CE               	movwf	?___ftadd+4
  4056  0704  0858               	movf	___ftsub@f2+2,w
  4057  0705  00CF               	movwf	?___ftadd+5
  4058  0706  270E               	fcall	___ftadd
  4059  0707  084A               	movf	?___ftadd,w
  4060  0708  00D6               	movwf	?___ftsub
  4061  0709  084B               	movf	?___ftadd+1,w
  4062  070A  00D7               	movwf	?___ftsub+1
  4063  070B  084C               	movf	?___ftadd+2,w
  4064  070C  00D8               	movwf	?___ftsub+2
  4065  070D  0008               	return
  4066  070E                     __end_of___ftsub:	
  4067  070E                     __ptext769:	
  4068 ;; =============== function ___ftdiv ends ============
  4069                           
  4070                           
  4071 ;; *************** function ___ftadd *****************
  4072 ;; Defined at:
  4073 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  f1              3   42[BANK0 ] float 
  4076 ;;  f2              3   45[BANK0 ] float 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  exp1            1   53[BANK0 ] unsigned char 
  4079 ;;  exp2            1   52[BANK0 ] unsigned char 
  4080 ;;  sign            1   51[BANK0 ] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  3   42[BANK0 ] float 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, pclath, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 60/0
  4087 ;;		On exit  : 60/0
  4088 ;;		Unchanged: FFF9F/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       6       0       0       0
  4091 ;;      Locals:         0       3       0       0       0
  4092 ;;      Temps:          0       3       0       0       0
  4093 ;;      Totals:         0      12       0       0       0
  4094 ;;Total ram usage:       12 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    3
  4097 ;; This function calls:
  4098 ;;		___ftpack
  4099 ;; This function is called by:
  4100 ;;		_printf
  4101 ;;		___ftsub
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104  070E                     ___ftadd:	
  4105                           
  4106                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4107  070E  084A               	movf	___ftadd@f1,w
  4108  070F  00D0               	movwf	??___ftadd
  4109  0710  084B               	movf	___ftadd@f1+1,w
  4110  0711  00D1               	movwf	??___ftadd+1
  4111  0712  084C               	movf	___ftadd@f1+2,w
  4112  0713  00D2               	movwf	??___ftadd+2
  4113  0714  1003               	clrc
  4114  0715  0D51               	rlf	??___ftadd+1,w
  4115  0716  0D52               	rlf	??___ftadd+2,w
  4116  0717  00D5               	movwf	___ftadd@exp1
  4117  0718  084D               	movf	___ftadd@f2,w
  4118  0719  00D0               	movwf	??___ftadd
  4119  071A  084E               	movf	___ftadd@f2+1,w
  4120  071B  00D1               	movwf	??___ftadd+1
  4121  071C  084F               	movf	___ftadd@f2+2,w
  4122  071D  00D2               	movwf	??___ftadd+2
  4123  071E  1003               	clrc
  4124  071F  0D51               	rlf	??___ftadd+1,w
  4125  0720  0D52               	rlf	??___ftadd+2,w
  4126  0721  00D4               	movwf	___ftadd@exp2
  4127  0722  0855               	movf	___ftadd@exp1,w
  4128  0723  1903               	btfsc	3,2
  4129  0724  2F31               	goto	l6610
  4130  0725  0854               	movf	___ftadd@exp2,w
  4131  0726  0255               	subwf	___ftadd@exp1,w
  4132  0727  0854               	movf	___ftadd@exp2,w
  4133  0728  1803               	skipnc
  4134  0729  2F39               	goto	L8
  4135  072A  00D0               	movwf	??___ftadd
  4136  072B  0855               	movf	___ftadd@exp1,w
  4137  072C  02D0               	subwf	??___ftadd,f
  4138  072D  3019               	movlw	25
  4139  072E  0250               	subwf	??___ftadd,w
  4140  072F  1C03               	skipc
  4141  0730  2F38               	goto	l6614
  4142  0731                     l6610:	
  4143  0731  084D               	movf	___ftadd@f2,w
  4144  0732  00CA               	movwf	?___ftadd
  4145  0733  084E               	movf	___ftadd@f2+1,w
  4146  0734  00CB               	movwf	?___ftadd+1
  4147  0735  084F               	movf	___ftadd@f2+2,w
  4148  0736  00CC               	movwf	?___ftadd+2
  4149  0737  0008               	return
  4150  0738                     l6614:	
  4151  0738  0854               	movf	___ftadd@exp2,w
  4152  0739                     L8:	
  4153  0739  1903               	btfsc	3,2
  4154  073A  0008               	return
  4155  073B  0855               	movf	___ftadd@exp1,w
  4156  073C  0254               	subwf	___ftadd@exp2,w
  4157  073D  1803               	skipnc
  4158  073E  2F47               	goto	l6620
  4159  073F  0855               	movf	___ftadd@exp1,w
  4160  0740  00D0               	movwf	??___ftadd
  4161  0741  0854               	movf	___ftadd@exp2,w
  4162  0742  02D0               	subwf	??___ftadd,f
  4163  0743  3019               	movlw	25
  4164  0744  0250               	subwf	??___ftadd,w
  4165  0745  1803               	btfsc	3,0
  4166  0746  0008               	return
  4167  0747                     l6620:	
  4168  0747  3006               	movlw	6
  4169  0748  00D3               	movwf	___ftadd@sign
  4170  0749  1BCC               	btfsc	___ftadd@f1+2,7
  4171  074A  17D3               	bsf	___ftadd@sign,7
  4172  074B  1BCF               	btfsc	___ftadd@f2+2,7
  4173  074C  1753               	bsf	___ftadd@sign,6
  4174  074D  17CB               	bsf	___ftadd@f1+1,7
  4175  074E  01CC               	clrf	___ftadd@f1+2
  4176  074F  17CE               	bsf	___ftadd@f2+1,7
  4177  0750  01CF               	clrf	___ftadd@f2+2
  4178  0751  0854               	movf	___ftadd@exp2,w
  4179  0752  0255               	subwf	___ftadd@exp1,w
  4180  0753  1803               	skipnc
  4181  0754  2F6E               	goto	l6642
  4182  0755                     l6632:	
  4183  0755  1003               	clrc
  4184  0756  0DCD               	rlf	___ftadd@f2,f
  4185  0757  0DCE               	rlf	___ftadd@f2+1,f
  4186  0758  0DCF               	rlf	___ftadd@f2+2,f
  4187  0759  03D4               	decf	___ftadd@exp2,f
  4188  075A  0854               	movf	___ftadd@exp2,w
  4189  075B  0655               	xorwf	___ftadd@exp1,w
  4190  075C  1903               	skipnz
  4191  075D  2F69               	goto	l6640
  4192  075E  03D3               	decf	___ftadd@sign,f
  4193  075F  0853               	movf	___ftadd@sign,w
  4194  0760  3907               	andlw	7
  4195  0761  1903               	btfsc	3,2
  4196  0762  2F69               	goto	l6640
  4197  0763  2F55               	goto	l6632
  4198  0764                     l6638:	
  4199  0764  1003               	clrc
  4200  0765  0CCC               	rrf	___ftadd@f1+2,f
  4201  0766  0CCB               	rrf	___ftadd@f1+1,f
  4202  0767  0CCA               	rrf	___ftadd@f1,f
  4203  0768  0AD5               	incf	___ftadd@exp1,f
  4204  0769                     l6640:	
  4205  0769  0855               	movf	___ftadd@exp1,w
  4206  076A  0654               	xorwf	___ftadd@exp2,w
  4207  076B  1903               	btfsc	3,2
  4208  076C  2F8A               	goto	l3371
  4209  076D  2F64               	goto	l6638
  4210  076E                     l6642:	
  4211  076E  0855               	movf	___ftadd@exp1,w
  4212  076F  0254               	subwf	___ftadd@exp2,w
  4213  0770  1803               	skipnc
  4214  0771  2F8A               	goto	l3371
  4215  0772                     l6644:	
  4216  0772  1003               	clrc
  4217  0773  0DCA               	rlf	___ftadd@f1,f
  4218  0774  0DCB               	rlf	___ftadd@f1+1,f
  4219  0775  0DCC               	rlf	___ftadd@f1+2,f
  4220  0776  03D5               	decf	___ftadd@exp1,f
  4221  0777  0854               	movf	___ftadd@exp2,w
  4222  0778  0655               	xorwf	___ftadd@exp1,w
  4223  0779  1903               	skipnz
  4224  077A  2F86               	goto	l6652
  4225  077B  03D3               	decf	___ftadd@sign,f
  4226  077C  0853               	movf	___ftadd@sign,w
  4227  077D  3907               	andlw	7
  4228  077E  1903               	btfsc	3,2
  4229  077F  2F86               	goto	l6652
  4230  0780  2F72               	goto	l6644
  4231  0781                     l6650:	
  4232  0781  1003               	clrc
  4233  0782  0CCF               	rrf	___ftadd@f2+2,f
  4234  0783  0CCE               	rrf	___ftadd@f2+1,f
  4235  0784  0CCD               	rrf	___ftadd@f2,f
  4236  0785  0AD4               	incf	___ftadd@exp2,f
  4237  0786                     l6652:	
  4238  0786  0855               	movf	___ftadd@exp1,w
  4239  0787  0654               	xorwf	___ftadd@exp2,w
  4240  0788  1D03               	skipz
  4241  0789  2F81               	goto	l6650
  4242  078A                     l3371:	
  4243  078A  1FD3               	btfss	___ftadd@sign,7
  4244  078B  2F95               	goto	l6658
  4245  078C  30FF               	movlw	255
  4246  078D  06CA               	xorwf	___ftadd@f1,f
  4247  078E  06CB               	xorwf	___ftadd@f1+1,f
  4248  078F  06CC               	xorwf	___ftadd@f1+2,f
  4249  0790  0ACA               	incf	___ftadd@f1,f
  4250  0791  1903               	skipnz
  4251  0792  0ACB               	incf	___ftadd@f1+1,f
  4252  0793  1903               	skipnz
  4253  0794  0ACC               	incf	___ftadd@f1+2,f
  4254  0795                     l6658:	
  4255  0795  1F53               	btfss	___ftadd@sign,6
  4256  0796  2FA0               	goto	l6664
  4257  0797  30FF               	movlw	255
  4258  0798  06CD               	xorwf	___ftadd@f2,f
  4259  0799  06CE               	xorwf	___ftadd@f2+1,f
  4260  079A  06CF               	xorwf	___ftadd@f2+2,f
  4261  079B  0ACD               	incf	___ftadd@f2,f
  4262  079C  1903               	skipnz
  4263  079D  0ACE               	incf	___ftadd@f2+1,f
  4264  079E  1903               	skipnz
  4265  079F  0ACF               	incf	___ftadd@f2+2,f
  4266  07A0                     l6664:	
  4267  07A0  01D3               	clrf	___ftadd@sign
  4268  07A1  084A               	movf	___ftadd@f1,w
  4269  07A2  07CD               	addwf	___ftadd@f2,f
  4270  07A3  084B               	movf	___ftadd@f1+1,w
  4271  07A4  1103               	clrz
  4272  07A5  1803               	skipnc
  4273  07A6  0A4B               	incf	___ftadd@f1+1,w
  4274  07A7  1D03               	btfss	3,2
  4275  07A8  07CE               	addwf	___ftadd@f2+1,f
  4276  07A9  084C               	movf	___ftadd@f1+2,w
  4277  07AA  1103               	clrz
  4278  07AB  1803               	skipnc
  4279  07AC  0A4C               	incf	___ftadd@f1+2,w
  4280  07AD  1D03               	btfss	3,2
  4281  07AE  07CF               	addwf	___ftadd@f2+2,f
  4282  07AF  1FCF               	btfss	___ftadd@f2+2,7
  4283  07B0  2FBC               	goto	l6676
  4284  07B1  30FF               	movlw	255
  4285  07B2  06CD               	xorwf	___ftadd@f2,f
  4286  07B3  06CE               	xorwf	___ftadd@f2+1,f
  4287  07B4  06CF               	xorwf	___ftadd@f2+2,f
  4288  07B5  0ACD               	incf	___ftadd@f2,f
  4289  07B6  1903               	skipnz
  4290  07B7  0ACE               	incf	___ftadd@f2+1,f
  4291  07B8  1903               	skipnz
  4292  07B9  0ACF               	incf	___ftadd@f2+2,f
  4293  07BA  01D3               	clrf	___ftadd@sign
  4294  07BB  0AD3               	incf	___ftadd@sign,f
  4295  07BC                     l6676:	
  4296  07BC  084D               	movf	___ftadd@f2,w
  4297  07BD  00A0               	movwf	?___ftpack
  4298  07BE  084E               	movf	___ftadd@f2+1,w
  4299  07BF  00A1               	movwf	?___ftpack+1
  4300  07C0  084F               	movf	___ftadd@f2+2,w
  4301  07C1  00A2               	movwf	?___ftpack+2
  4302  07C2  0855               	movf	___ftadd@exp1,w
  4303  07C3  00A3               	movwf	?___ftpack+3
  4304  07C4  0853               	movf	___ftadd@sign,w
  4305  07C5  00A4               	movwf	?___ftpack+4
  4306  07C6  120A  118A  2337   	fcall	___ftpack
  4307  07C9  0820               	movf	?___ftpack,w
  4308  07CA  00CA               	movwf	?___ftadd
  4309  07CB  0821               	movf	?___ftpack+1,w
  4310  07CC  00CB               	movwf	?___ftadd+1
  4311  07CD  0822               	movf	?___ftpack+2,w
  4312  07CE  00CC               	movwf	?___ftadd+2
  4313  07CF  0008               	return
  4314  07D0                     __end_of___ftadd:	
  4315                           
  4316                           	psect	text762
  4317  05A6                     __ptext762:	
  4318 ;; =============== function _scale ends ============
  4319                           
  4320                           
  4321 ;; *************** function _fround *****************
  4322 ;; Defined at:
  4323 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  prec            1    wreg     unsigned char 
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;  prec            1   63[BANK0 ] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  3   54[BANK0 ] unsigned char 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 60/20
  4334 ;;		On exit  : 60/0
  4335 ;;		Unchanged: FFF9F/0
  4336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4337 ;;      Params:         0       3       0       0       0
  4338 ;;      Locals:         0       7       0       0       0
  4339 ;;      Temps:          0       0       0       0       0
  4340 ;;      Totals:         0      10       0       0       0
  4341 ;;Total ram usage:       10 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    4
  4344 ;; This function calls:
  4345 ;;		___lbmod
  4346 ;;		___bmul
  4347 ;;		___lbdiv
  4348 ;;		___ftmul
  4349 ;; This function is called by:
  4350 ;;		_printf
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353  05A6                     _fround:	
  4354                           
  4355                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4356                           ;fround@prec stored from wreg
  4357  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  4358  05A7  00DF               	movwf	fround@prec
  4359  05A8  306E               	movlw	110
  4360  05A9  025F               	subwf	fround@prec,w
  4361  05AA  1C03               	skipc
  4362  05AB  2E31               	goto	l7690
  4363  05AC  3003               	movlw	3
  4364  05AD  00A9               	movwf	?___bmul
  4365  05AE  300A               	movlw	10
  4366  05AF  00A5               	movwf	?___lbdiv
  4367  05B0  3064               	movlw	100
  4368  05B1  00A0               	movwf	?___lbmod
  4369  05B2  085F               	movf	fround@prec,w
  4370  05B3  26C6  120A  118A   	fcall	___lbmod
  4371  05B6  26AB               	fcall	___lbdiv
  4372  05B7  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4373  05BC  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4374  05BD  0084               	movwf	4
  4375  05BE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4376  05C3  00BB               	movwf	?___ftmul
  4377  05C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4378  05C9  00BC               	movwf	?___ftmul+1
  4379  05CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4380  05CF  00BD               	movwf	?___ftmul+2
  4381  05D0  3003               	movlw	3
  4382  05D1  00A9               	movwf	?___bmul
  4383  05D2  3064               	movlw	100
  4384  05D3  00A5               	movwf	?___lbdiv
  4385  05D4  085F               	movf	fround@prec,w
  4386  05D5  26AB               	fcall	___lbdiv
  4387  05D6  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4388  05DB  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4389  05DC  0084               	movwf	4
  4390  05DD  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4391  05E2  00BE               	movwf	?___ftmul+3
  4392  05E3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4393  05E8  00BF               	movwf	?___ftmul+4
  4394  05E9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4395  05EE  00C0               	movwf	?___ftmul+5
  4396  05EF  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4397  05F4  26F1  120A  118A   	fcall	PL27	;call to abstracted procedure
  4398  05F7  3003               	movlw	3
  4399  05F8  00A9               	movwf	?___bmul
  4400  05F9  300A               	movlw	10
  4401  05FA  00A0               	movwf	?___lbmod
  4402  05FB  085F               	movf	fround@prec,w
  4403  05FC  26C6               	fcall	___lbmod
  4404  05FD  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4405  0602  3E01               	addlw	low (__npowers_-__stringbase)
  4406  0603  0084               	movwf	4
  4407  0604  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4408  0609  00BB               	movwf	?___ftmul
  4409  060A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4410  060F  00BC               	movwf	?___ftmul+1
  4411  0610  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4412  0615  26E9               	fcall	PL23	;call to abstracted procedure
  4413  0616  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4414  061B  083B               	movf	?___ftmul,w
  4415  061C  00D9               	movwf	_fround$4120
  4416  061D  083C               	movf	?___ftmul+1,w
  4417  061E  00DA               	movwf	_fround$4120+1
  4418  061F  083D               	movf	?___ftmul+2,w
  4419  0620  00DB               	movwf	_fround$4120+2
  4420  0621  303F               	movlw	63
  4421  0622  01BB               	clrf	?___ftmul
  4422  0623  01BC               	clrf	?___ftmul+1
  4423  0624  00BD               	movwf	?___ftmul+2
  4424  0625  0859               	movf	_fround$4120,w
  4425  0626  00BE               	movwf	?___ftmul+3
  4426  0627  085A               	movf	_fround$4120+1,w
  4427  0628  00BF               	movwf	?___ftmul+4
  4428  0629  085B               	movf	_fround$4120+2,w
  4429  062A  00C0               	movwf	?___ftmul+5
  4430  062B  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4431  0630  2EE2               	ljmp	PL17	;call to abstracted procedure
  4432  0631                     l7690:	
  4433  0631  300B               	movlw	11
  4434  0632  025F               	subwf	fround@prec,w
  4435  0633  1C03               	skipc
  4436  0634  2E85               	goto	l7698
  4437  0635  3003               	movlw	3
  4438  0636  00A9               	movwf	?___bmul
  4439  0637  300A               	movlw	10
  4440  0638  00A0               	movwf	?___lbmod
  4441  0639  085F               	movf	fround@prec,w
  4442  063A  26C6               	fcall	___lbmod
  4443  063B  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4444  0640  3E01               	addlw	low (__npowers_-__stringbase)
  4445  0641  0084               	movwf	4
  4446  0642  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4447  0647  00BB               	movwf	?___ftmul
  4448  0648  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4449  064D  00BC               	movwf	?___ftmul+1
  4450  064E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4451  0653  00BD               	movwf	?___ftmul+2
  4452  0654  3003               	movlw	3
  4453  0655  00A9               	movwf	?___bmul
  4454  0656  300A               	movlw	10
  4455  0657  00A5               	movwf	?___lbdiv
  4456  0658  085F               	movf	fround@prec,w
  4457  0659  26AB               	fcall	___lbdiv
  4458  065A  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4459  065F  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4460  0660  0084               	movwf	4
  4461  0661  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4462  0666  00BE               	movwf	?___ftmul+3
  4463  0667  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4464  066C  00BF               	movwf	?___ftmul+4
  4465  066D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4466  0672  00C0               	movwf	?___ftmul+5
  4467  0673  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4468  0678  26F1  120A  118A   	fcall	PL27	;call to abstracted procedure
  4469  067B  303F               	movlw	63
  4470  067C  01BB               	clrf	?___ftmul
  4471  067D  01BC               	clrf	?___ftmul+1
  4472  067E  26E9               	fcall	PL23	;call to abstracted procedure
  4473  067F  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4474  0684  2EE2               	ljmp	PL17	;call to abstracted procedure
  4475  0685                     l7698:	
  4476  0685  303F               	movlw	63
  4477  0686  01BB               	clrf	?___ftmul
  4478  0687  01BC               	clrf	?___ftmul+1
  4479  0688  00BD               	movwf	?___ftmul+2
  4480  0689  3003               	movlw	3
  4481  068A  00A9               	movwf	?___bmul
  4482  068B  085F               	movf	fround@prec,w
  4483  068C  120A  118A  2329   	fcall	___bmul
      +       120A  118A         
  4484  0691  3E01               	addlw	low (__npowers_-__stringbase)
  4485  0692  0084               	movwf	4
  4486  0693  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4487  0698  00BE               	movwf	?___ftmul+3
  4488  0699  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4489  069E  00BF               	movwf	?___ftmul+4
  4490  069F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  4491  06A4  00C0               	movwf	?___ftmul+5
  4492  06A5  120A  118A  22BA   	fcall	___ftmul
      +       120A  118A         
  4493  06AA  2EE2               	ljmp	PL17	;call to abstracted procedure
  4494  06AB                     __end_of_fround:	
  4495  06AB                     __ptext781:	
  4496 ;; =============== function ___lbmod ends ============
  4497                           
  4498                           
  4499 ;; *************** function ___lbdiv *****************
  4500 ;; Defined at:
  4501 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  dividend        1    wreg     unsigned char 
  4504 ;;  divisor         1    5[BANK0 ] unsigned char 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  dividend        1    6[BANK0 ] unsigned char 
  4507 ;;  quotient        1    8[BANK0 ] unsigned char 
  4508 ;;  counter         1    7[BANK0 ] unsigned char 
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      unsigned char 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0
  4513 ;; Tracked objects:
  4514 ;;		On entry : 60/0
  4515 ;;		On exit  : 60/0
  4516 ;;		Unchanged: FFF9F/0
  4517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4518 ;;      Params:         0       1       0       0       0
  4519 ;;      Locals:         0       3       0       0       0
  4520 ;;      Temps:          0       0       0       0       0
  4521 ;;      Totals:         0       4       0       0       0
  4522 ;;Total ram usage:        4 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    2
  4525 ;; This function calls:
  4526 ;;		Nothing
  4527 ;; This function is called by:
  4528 ;;		_fround
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531  06AB                     ___lbdiv:	
  4532                           
  4533                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4534                           ;___lbdiv@dividend stored from wreg
  4535  06AB  00A6               	movwf	___lbdiv@dividend
  4536  06AC  01A8               	clrf	___lbdiv@quotient
  4537  06AD  0825               	movf	___lbdiv@divisor,w
  4538  06AE  1903               	btfsc	3,2
  4539  06AF  2EC4               	goto	l7484
  4540  06B0  01A7               	clrf	___lbdiv@counter
  4541  06B1                     l7470:	
  4542  06B1  0AA7               	incf	___lbdiv@counter,f
  4543  06B2  1BA5               	btfsc	___lbdiv@divisor,7
  4544  06B3  2EB7               	goto	l3340
  4545  06B4  1003               	clrc
  4546  06B5  0DA5               	rlf	___lbdiv@divisor,f
  4547  06B6  2EB1               	goto	l7470
  4548  06B7                     l3340:	
  4549  06B7  1003               	clrc
  4550  06B8  0DA8               	rlf	___lbdiv@quotient,f
  4551  06B9  0825               	movf	___lbdiv@divisor,w
  4552  06BA  0226               	subwf	___lbdiv@dividend,w
  4553  06BB  1C03               	skipc
  4554  06BC  2EC1               	goto	L19
  4555  06BD  0825               	movf	___lbdiv@divisor,w
  4556  06BE  02A6               	subwf	___lbdiv@dividend,f
  4557  06BF  1428               	bsf	___lbdiv@quotient,0
  4558  06C0  1003               	clrc
  4559  06C1                     L19:	
  4560  06C1  0CA5               	rrf	___lbdiv@divisor,f
  4561  06C2  0BA7               	decfsz	___lbdiv@counter,f
  4562  06C3  2EB7               	goto	l3340
  4563  06C4                     l7484:	
  4564  06C4  0828               	movf	___lbdiv@quotient,w
  4565  06C5  0008               	return
  4566  06C6                     __end_of___lbdiv:	
  4567  06C6                     __ptext780:	
  4568 ;; =============== function ___ftpack ends ============
  4569                           
  4570                           
  4571 ;; *************** function ___lbmod *****************
  4572 ;; Defined at:
  4573 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  dividend        1    wreg     unsigned char 
  4576 ;;  divisor         1    0[BANK0 ] unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  dividend        1    2[BANK0 ] unsigned char 
  4579 ;;  rem             1    4[BANK0 ] unsigned char 
  4580 ;;  counter         1    3[BANK0 ] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      unsigned char 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 60/0
  4587 ;;		On exit  : 60/0
  4588 ;;		Unchanged: FFF9F/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4590 ;;      Params:         0       1       0       0       0
  4591 ;;      Locals:         0       3       0       0       0
  4592 ;;      Temps:          0       1       0       0       0
  4593 ;;      Totals:         0       5       0       0       0
  4594 ;;Total ram usage:        5 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    2
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_fround
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603  06C6                     ___lbmod:	
  4604                           
  4605                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4606                           ;___lbmod@dividend stored from wreg
  4607  06C6  00A2               	movwf	___lbmod@dividend
  4608  06C7  3008               	movlw	8
  4609  06C8  00A3               	movwf	___lbmod@counter
  4610  06C9  01A4               	clrf	___lbmod@rem
  4611  06CA                     l6318:	
  4612  06CA  0822               	movf	___lbmod@dividend,w
  4613  06CB  00A1               	movwf	??___lbmod
  4614  06CC  3007               	movlw	7
  4615  06CD  1003               	clrc
  4616  06CE                     L18:	
  4617  06CE  0CA1               	rrf	??___lbmod,f
  4618  06CF  3EFF               	addlw	-1
  4619  06D0  1003               	clrc
  4620  06D1  1D03               	skipz
  4621  06D2  2ECE               	goto	L18
  4622  06D3  0D24               	rlf	___lbmod@rem,w
  4623  06D4  0421               	iorwf	??___lbmod,w
  4624  06D5  00A4               	movwf	___lbmod@rem
  4625  06D6  1003               	clrc
  4626  06D7  0DA2               	rlf	___lbmod@dividend,f
  4627  06D8  0820               	movf	___lbmod@divisor,w
  4628  06D9  0224               	subwf	___lbmod@rem,w
  4629  06DA  1C03               	skipc
  4630  06DB  2EDE               	goto	l6326
  4631  06DC  0820               	movf	___lbmod@divisor,w
  4632  06DD  02A4               	subwf	___lbmod@rem,f
  4633  06DE                     l6326:	
  4634  06DE  0BA3               	decfsz	___lbmod@counter,f
  4635  06DF  2ECA               	goto	l6318
  4636  06E0  0824               	movf	___lbmod@rem,w
  4637  06E1  0008               	return
  4638  06E2                     __end_of___lbmod:	
  4639  06E2                     PL17:	
  4640  06E2  083B               	movf	?___ftmul,w
  4641  06E3  00D6               	movwf	?_fround
  4642  06E4  083C               	movf	?___ftmul+1,w
  4643  06E5  00D7               	movwf	?_fround+1
  4644  06E6  083D               	movf	?___ftmul+2,w
  4645  06E7  00D8               	movwf	?_fround+2
  4646  06E8  0008               	return
  4647  06E9                     PL23:	
  4648  06E9  00BD               	movwf	?___ftmul+2
  4649  06EA  085C               	movf	_fround$4119,w
  4650  06EB  00BE               	movwf	?___ftmul+3
  4651  06EC  085D               	movf	_fround$4119+1,w
  4652  06ED  00BF               	movwf	?___ftmul+4
  4653  06EE  085E               	movf	_fround$4119+2,w
  4654  06EF  00C0               	movwf	?___ftmul+5
  4655  06F0  0008               	return
  4656  06F1                     PL27:	
  4657  06F1  083B               	movf	?___ftmul,w
  4658  06F2  00DC               	movwf	_fround$4119
  4659  06F3  083C               	movf	?___ftmul+1,w
  4660  06F4  00DD               	movwf	_fround$4119+1
  4661  06F5  083D               	movf	?___ftmul+2,w
  4662  06F6  00DE               	movwf	_fround$4119+2
  4663  06F7  0008               	return
  4664                           
  4665                           	psect	text763
  4666  03CE                     __ptext763:	
  4667 ;; =============== function _fround ends ============
  4668                           
  4669                           
  4670 ;; *************** function _lcd_gotoxy *****************
  4671 ;; Defined at:
  4672 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  col             1    wreg     unsigned char 
  4675 ;;  row             1    5[BANK0 ] unsigned char 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  col             1    6[BANK0 ] unsigned char 
  4678 ;;  address         1    7[BANK0 ] unsigned char 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;		None               void
  4681 ;; Registers used:
  4682 ;;		wreg, status,2, status,0, pclath, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 60/0
  4685 ;;		On exit  : 60/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4688 ;;      Params:         0       1       0       0       0
  4689 ;;      Locals:         0       2       0       0       0
  4690 ;;      Temps:          0       0       0       0       0
  4691 ;;      Totals:         0       3       0       0       0
  4692 ;;Total ram usage:        3 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    3
  4695 ;; This function calls:
  4696 ;;		_lcd_put_byte
  4697 ;;		_lcd_busy
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;;		_lcd_putc
  4701 ;; This function uses a non-reentrant model
  4702 ;;
  4703  03CE                     _lcd_gotoxy:	
  4704                           
  4705                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4706                           ;lcd_gotoxy@col stored from wreg
  4707  03CE  00A6               	movwf	lcd_gotoxy@col
  4708                           
  4709                           ;lcd(16).c: 163: unsigned char address;
  4710                           ;lcd(16).c: 165: if(row!=0)
  4711  03CF  0825               	movf	lcd_gotoxy@row,w
  4712  03D0  1903               	btfsc	3,2
  4713  03D1  2BD5               	goto	l7672
  4714                           
  4715                           ;lcd(16).c: 166: address=0x40;
  4716  03D2  3040               	movlw	64
  4717  03D3  00A7               	movwf	lcd_gotoxy@address
  4718  03D4  2BD6               	goto	l7674
  4719  03D5                     l7672:	
  4720                           
  4721                           ;lcd(16).c: 167: else
  4722                           ;lcd(16).c: 168: address=0;
  4723  03D5  01A7               	clrf	lcd_gotoxy@address
  4724  03D6                     l7674:	
  4725                           
  4726                           ;lcd(16).c: 170: address += col;
  4727  03D6  0826               	movf	lcd_gotoxy@col,w
  4728  03D7  07A7               	addwf	lcd_gotoxy@address,f
  4729                           
  4730                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4731  03D8  0827               	movf	lcd_gotoxy@address,w
  4732  03D9  3880               	iorlw	128
  4733  03DA  00A0               	movwf	?_lcd_put_byte
  4734  03DB  3000               	movlw	0
  4735  03DC  24D3  120A  118A   	fcall	_lcd_put_byte
  4736  03DF                     l7678:	
  4737                           ;lcd(16).c: 172: while(lcd_busy());
  4738                           
  4739  03DF  2562  120A  118A   	fcall	_lcd_busy
  4740  03E2  3800               	iorlw	0
  4741  03E3  1903               	btfsc	3,2
  4742  03E4  0008               	return
  4743  03E5  2BDF               	goto	l7678
  4744  03E6                     __end_of_lcd_gotoxy:	
  4745  03E6                     __ptext759:	
  4746 ;; =============== function _putch ends ============
  4747                           
  4748                           
  4749 ;; *************** function _lcd_putc *****************
  4750 ;; Defined at:
  4751 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4752 ;; Parameters:    Size  Location     Type
  4753 ;;  c               1    wreg     unsigned char 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  c               1    8[BANK0 ] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;		None               void
  4758 ;; Registers used:
  4759 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4760 ;; Tracked objects:
  4761 ;;		On entry : 60/0
  4762 ;;		On exit  : 60/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4765 ;;      Params:         0       0       0       0       0
  4766 ;;      Locals:         0       1       0       0       0
  4767 ;;      Temps:          0       0       0       0       0
  4768 ;;      Totals:         0       1       0       0       0
  4769 ;;Total ram usage:        1 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    4
  4772 ;; This function calls:
  4773 ;;		_lcd_put_byte
  4774 ;;		_lcd_busy
  4775 ;;		_lcd_gotoxy
  4776 ;;		_isprint
  4777 ;; This function is called by:
  4778 ;;		_putch
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781  03E6                     _lcd_putc:	
  4782                           
  4783                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4784                           ;lcd_putc@c stored from wreg
  4785  03E6  00A8               	movwf	lcd_putc@c
  4786                           
  4787                           ;lcd(16).c: 144: switch(c){
  4788  03E7  2C0C               	goto	l7764
  4789  03E8                     l7750:	
  4790  03E8  3000               	movlw	0
  4791                           
  4792                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4793  03E9  01A0               	clrf	?_lcd_put_byte
  4794  03EA  0AA0               	incf	?_lcd_put_byte,f
  4795  03EB  24D3  120A  118A   	fcall	_lcd_put_byte
  4796  03EE                     l7752:	
  4797                           ;lcd(16).c: 147: while(lcd_busy());
  4798                           
  4799  03EE  2562  120A  118A   	fcall	_lcd_busy
  4800  03F1  3800               	iorlw	0
  4801  03F2  1903               	btfsc	3,2
  4802  03F3  0008               	return
  4803  03F4  2BEE               	goto	l7752
  4804  03F5                     l7754:	
  4805  03F5  3000               	movlw	0
  4806                           
  4807                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4808  03F6  01A5               	clrf	?_lcd_gotoxy
  4809  03F7  0AA5               	incf	?_lcd_gotoxy,f
  4810  03F8  2BCE               	ljmp	_lcd_gotoxy
  4811  03F9                     l7756:	
  4812                           ;lcd(16).c: 151: break;
  4813                           
  4814                           
  4815                           ;lcd(16).c: 153: if(isprint(c)){
  4816  03F9  0828               	movf	lcd_putc@c,w
  4817  03FA  2589  120A  118A   	fcall	_isprint
  4818  03FD  1C03               	btfss	3,0
  4819  03FE  0008               	return
  4820                           
  4821                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4822  03FF  0828               	movf	lcd_putc@c,w
  4823  0400  00A0               	movwf	?_lcd_put_byte
  4824  0401  3001               	movlw	1
  4825  0402  24D3  120A  118A   	fcall	_lcd_put_byte
  4826  0405                     l7760:	
  4827                           ;lcd(16).c: 155: while(lcd_busy());
  4828                           
  4829  0405  2562  120A  118A   	fcall	_lcd_busy
  4830  0408  3800               	iorlw	0
  4831  0409  1903               	btfsc	3,2
  4832  040A  0008               	return
  4833  040B  2C05               	goto	l7760
  4834  040C                     l7764:	
  4835  040C  0828               	movf	lcd_putc@c,w
  4836                           
  4837                           ; Switch size 1, requested type "space"
  4838                           ; Number of cases is 2, Range of values is 10 to 12
  4839                           ; switch strategies available:
  4840                           ; Name         Instructions Cycles
  4841                           ; simple_byte            7     4 (average)
  4842                           ; direct_byte           20    11 (fixed)
  4843                           ; jumptable            263     9 (fixed)
  4844                           ;	Chosen strategy is simple_byte
  4845  040D  3A0A               	xorlw	10	; case 10
  4846  040E  1903               	skipnz
  4847  040F  2BF5               	goto	l7754
  4848  0410  3A06               	xorlw	6	; case 12
  4849  0411  1903               	skipnz
  4850  0412  2BE8               	goto	l7750
  4851  0413  2BF9               	goto	l7756
  4852  0414  0008               	return
  4853  0415                     __end_of_lcd_putc:	
  4854  0415                     __ptext764:	
  4855 ;; =============== function _lcd_gotoxy ends ============
  4856                           
  4857                           
  4858 ;; *************** function _lcd_init *****************
  4859 ;; Defined at:
  4860 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  i               1    0        unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;		None               void
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 17F/60
  4871 ;;		On exit  : 60/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4874 ;;      Params:         0       0       0       0       0
  4875 ;;      Locals:         0       0       0       0       0
  4876 ;;      Temps:          0       3       0       0       0
  4877 ;;      Totals:         0       3       0       0       0
  4878 ;;Total ram usage:        3 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    3
  4881 ;; This function calls:
  4882 ;;		_lcd_put_byte
  4883 ;;		_lcd_busy
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888  0415                     _lcd_init:	
  4889                           
  4890                           ;lcd(16).c: 6: unsigned char i;
  4891                           ;lcd(16).c: 7: TRISD3 = 0;
  4892                           
  4893                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4894  0415  1303               	bcf	3,6	;RP1=0, select bank1
  4895  0416  1188               	bcf	8,3
  4896                           
  4897                           ;lcd(16).c: 8: TRISD1 = 0;
  4898  0417  1088               	bcf	8,1
  4899                           
  4900                           ;lcd(16).c: 9: TRISD2 = 0;
  4901  0418  1108               	bcf	8,2
  4902                           
  4903                           ;lcd(16).c: 10: TRISD4 = 0;
  4904  0419  1208               	bcf	8,4
  4905                           
  4906                           ;lcd(16).c: 11: TRISD5 = 0;
  4907  041A  1288               	bcf	8,5
  4908                           
  4909                           ;lcd(16).c: 12: TRISD6 = 0;
  4910  041B  1308               	bcf	8,6
  4911                           
  4912                           ;lcd(16).c: 13: TRISD7 = 0;
  4913  041C  1388               	bcf	8,7
  4914                           
  4915                           ;lcd(16).c: 14: RD3 = 0;
  4916  041D  1283               	bcf	3,5	;RP0=0, select bank0
  4917  041E  3003               	movlw	3
  4918  041F  1188               	bcf	8,3
  4919                           
  4920                           ;lcd(16).c: 15: RD1 = 0;
  4921  0420  1088               	bcf	8,1
  4922                           
  4923                           ;lcd(16).c: 16: RD2 = 0;
  4924  0421  1108               	bcf	8,2
  4925                           
  4926                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4927  0422  00A7               	movwf	??_lcd_init+2
  4928  0423  308A               	movlw	138
  4929  0424  00A6               	movwf	??_lcd_init+1
  4930  0425  3056               	movlw	86
  4931  0426  00A5               	movwf	??_lcd_init
  4932  0427                     u5077:	
  4933  0427  0BA5               	decfsz	??_lcd_init,f
  4934  0428  2C27               	goto	u5077
  4935  0429  0BA6               	decfsz	??_lcd_init+1,f
  4936  042A  2C27               	goto	u5077
  4937  042B  0BA7               	decfsz	??_lcd_init+2,f
  4938  042C  2C27               	goto	u5077
  4939  042D  2C2E               	nop2
  4940                           
  4941                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4942  042E  259E  120A  118A   	fcall	PL32	;call to abstracted procedure
  4943  0431  24D3  120A  118A   	fcall	_lcd_put_byte
  4944                           
  4945                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4946  0434  3002               	movlw	2
  4947  0435  00A7               	movwf	??_lcd_init+2
  4948  0436  3045               	movlw	69
  4949  0437  00A6               	movwf	??_lcd_init+1
  4950  0438  30A9               	movlw	169
  4951  0439  00A5               	movwf	??_lcd_init
  4952  043A                     u5087:	
  4953  043A  0BA5               	decfsz	??_lcd_init,f
  4954  043B  2C3A               	goto	u5087
  4955  043C  0BA6               	decfsz	??_lcd_init+1,f
  4956  043D  2C3A               	goto	u5087
  4957  043E  0BA7               	decfsz	??_lcd_init+2,f
  4958  043F  2C3A               	goto	u5087
  4959  0440  2C41               	nop2
  4960                           
  4961                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4962  0441  259E  120A  118A   	fcall	PL32	;call to abstracted procedure
  4963  0444  24D3  120A  118A   	fcall	_lcd_put_byte
  4964                           
  4965                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4966  0447  3002               	movlw	2
  4967  0448  00A7               	movwf	??_lcd_init+2
  4968  0449  3045               	movlw	69
  4969  044A  00A6               	movwf	??_lcd_init+1
  4970  044B  30A9               	movlw	169
  4971  044C  00A5               	movwf	??_lcd_init
  4972  044D                     u5097:	
  4973  044D  0BA5               	decfsz	??_lcd_init,f
  4974  044E  2C4D               	goto	u5097
  4975  044F  0BA6               	decfsz	??_lcd_init+1,f
  4976  0450  2C4D               	goto	u5097
  4977  0451  0BA7               	decfsz	??_lcd_init+2,f
  4978  0452  2C4D               	goto	u5097
  4979  0453  2C54               	nop2
  4980                           
  4981                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4982  0454  3032               	movlw	50
  4983  0455  25A3               	call	PL35	;select bank 0
  4984  0456  00A0               	movwf	?_lcd_put_byte
  4985  0457  3000               	movlw	0
  4986  0458  24D3  120A  118A   	fcall	_lcd_put_byte
  4987                           
  4988                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4989  045B  3003               	movlw	3
  4990  045C  00A7               	movwf	??_lcd_init+2
  4991  045D  308A               	movlw	138
  4992  045E  00A6               	movwf	??_lcd_init+1
  4993  045F  3056               	movlw	86
  4994  0460  00A5               	movwf	??_lcd_init
  4995  0461                     u5107:	
  4996  0461  0BA5               	decfsz	??_lcd_init,f
  4997  0462  2C61               	goto	u5107
  4998  0463  0BA6               	decfsz	??_lcd_init+1,f
  4999  0464  2C61               	goto	u5107
  5000  0465  0BA7               	decfsz	??_lcd_init+2,f
  5001  0466  2C61               	goto	u5107
  5002  0467  2C68               	nop2
  5003                           
  5004                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  5005  0468  3003               	movlw	3
  5006  0469  25A3               	call	PL35	;select bank 0
  5007  046A  00A7               	movwf	??_lcd_init+2
  5008  046B  308A               	movlw	138
  5009  046C  00A6               	movwf	??_lcd_init+1
  5010  046D  3056               	movlw	86
  5011  046E  00A5               	movwf	??_lcd_init
  5012  046F                     u5117:	
  5013  046F  0BA5               	decfsz	??_lcd_init,f
  5014  0470  2C6F               	goto	u5117
  5015  0471  0BA6               	decfsz	??_lcd_init+1,f
  5016  0472  2C6F               	goto	u5117
  5017  0473  0BA7               	decfsz	??_lcd_init+2,f
  5018  0474  2C6F               	goto	u5117
  5019  0475  2C76               	nop2
  5020                           
  5021                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5022  0476  3003               	movlw	3
  5023  0477  25A3               	call	PL35	;select bank 0
  5024  0478  00A7               	movwf	??_lcd_init+2
  5025  0479  308A               	movlw	138
  5026  047A  00A6               	movwf	??_lcd_init+1
  5027  047B  3056               	movlw	86
  5028  047C  00A5               	movwf	??_lcd_init
  5029  047D                     u5127:	
  5030  047D  0BA5               	decfsz	??_lcd_init,f
  5031  047E  2C7D               	goto	u5127
  5032  047F  0BA6               	decfsz	??_lcd_init+1,f
  5033  0480  2C7D               	goto	u5127
  5034  0481  0BA7               	decfsz	??_lcd_init+2,f
  5035  0482  2C7D               	goto	u5127
  5036  0483  2C84               	nop2
  5037  0484                     l6818:	
  5038                           ;lcd(16).c: 30: while(lcd_busy());
  5039                           
  5040  0484  2562  120A  118A   	fcall	_lcd_busy
  5041  0487  3800               	iorlw	0
  5042  0488  1D03               	skipz
  5043  0489  2C84               	goto	l6818
  5044                           
  5045                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5046  048A  3028               	movlw	40
  5047  048B  00A0               	movwf	?_lcd_put_byte
  5048  048C  3000               	movlw	0
  5049  048D  24D3  120A  118A   	fcall	_lcd_put_byte
  5050  0490                     l6822:	
  5051                           ;lcd(16).c: 32: while(lcd_busy());
  5052                           
  5053  0490  2562  120A  118A   	fcall	_lcd_busy
  5054  0493  3800               	iorlw	0
  5055  0494  1D03               	skipz
  5056  0495  2C90               	goto	l6822
  5057                           
  5058                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5059  0496  3008               	movlw	8
  5060  0497  00A0               	movwf	?_lcd_put_byte
  5061  0498  3000               	movlw	0
  5062  0499  24D3  120A  118A   	fcall	_lcd_put_byte
  5063  049C                     l6826:	
  5064                           ;lcd(16).c: 35: while(lcd_busy());
  5065                           
  5066  049C  2562  120A  118A   	fcall	_lcd_busy
  5067  049F  3800               	iorlw	0
  5068  04A0  1D03               	skipz
  5069  04A1  2C9C               	goto	l6826
  5070                           
  5071                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5072  04A2  300C               	movlw	12
  5073  04A3  00A0               	movwf	?_lcd_put_byte
  5074  04A4  3000               	movlw	0
  5075  04A5  24D3  120A  118A   	fcall	_lcd_put_byte
  5076  04A8                     l6830:	
  5077                           ;lcd(16).c: 37: while(lcd_busy());
  5078                           
  5079  04A8  2562  120A  118A   	fcall	_lcd_busy
  5080  04AB  3800               	iorlw	0
  5081  04AC  1D03               	skipz
  5082  04AD  2CA8               	goto	l6830
  5083  04AE  3000               	movlw	0
  5084                           
  5085                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5086  04AF  01A0               	clrf	?_lcd_put_byte
  5087  04B0  0AA0               	incf	?_lcd_put_byte,f
  5088  04B1  24D3  120A  118A   	fcall	_lcd_put_byte
  5089  04B4                     l6834:	
  5090                           ;lcd(16).c: 40: while(lcd_busy());
  5091                           
  5092  04B4  2562  120A  118A   	fcall	_lcd_busy
  5093  04B7  3800               	iorlw	0
  5094  04B8  1D03               	skipz
  5095  04B9  2CB4               	goto	l6834
  5096                           
  5097                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5098  04BA  3004               	movlw	4
  5099  04BB  00A0               	movwf	?_lcd_put_byte
  5100  04BC  3000               	movlw	0
  5101  04BD  24D3  120A  118A   	fcall	_lcd_put_byte
  5102  04C0                     l6838:	
  5103                           ;lcd(16).c: 42: while(lcd_busy());
  5104                           
  5105  04C0  2562  120A  118A   	fcall	_lcd_busy
  5106  04C3  3800               	iorlw	0
  5107  04C4  1D03               	skipz
  5108  04C5  2CC0               	goto	l6838
  5109  04C6  3000               	movlw	0
  5110                           
  5111                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5112  04C7  01A0               	clrf	?_lcd_put_byte
  5113  04C8  0AA0               	incf	?_lcd_put_byte,f
  5114  04C9  24D3  120A  118A   	fcall	_lcd_put_byte
  5115  04CC                     l6842:	
  5116                           ;lcd(16).c: 44: while(lcd_busy());
  5117                           
  5118  04CC  2562  120A  118A   	fcall	_lcd_busy
  5119  04CF  3800               	iorlw	0
  5120  04D0  1903               	btfsc	3,2
  5121  04D1  0008               	return
  5122  04D2  2CCC               	goto	l6842
  5123  04D3                     __end_of_lcd_init:	
  5124  04D3                     __ptext771:	
  5125 ;; =============== function _lcd_busy ends ============
  5126                           
  5127                           
  5128 ;; *************** function _lcd_put_byte *****************
  5129 ;; Defined at:
  5130 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  rs              1    wreg     unsigned char 
  5133 ;;  b               1    0[BANK0 ] unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  rs              1    3[BANK0 ] unsigned char 
  5136 ;;  temp            1    4[BANK0 ] struct _BYTE_VAL
  5137 ;; Return value:  Size  Location     Type
  5138 ;;		None               void
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0
  5141 ;; Tracked objects:
  5142 ;;		On entry : 60/0
  5143 ;;		On exit  : 60/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5146 ;;      Params:         0       1       0       0       0
  5147 ;;      Locals:         0       2       0       0       0
  5148 ;;      Temps:          0       2       0       0       0
  5149 ;;      Totals:         0       5       0       0       0
  5150 ;;Total ram usage:        5 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    2
  5153 ;; This function calls:
  5154 ;;		Nothing
  5155 ;; This function is called by:
  5156 ;;		_lcd_init
  5157 ;;		_lcd_putc
  5158 ;;		_lcd_gotoxy
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161  04D3                     _lcd_put_byte:	
  5162                           
  5163                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5164                           ;lcd_put_byte@rs stored from wreg
  5165  04D3  00A3               	movwf	lcd_put_byte@rs
  5166                           
  5167                           ;lcd(16).c: 107: BYTE_VAL temp;
  5168                           ;lcd(16).c: 109: TRISD4 = 0;
  5169  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  5170  04D5  1208               	bcf	8,4
  5171                           
  5172                           ;lcd(16).c: 110: TRISD5 = 0;
  5173  04D6  1288               	bcf	8,5
  5174                           
  5175                           ;lcd(16).c: 111: TRISD6 = 0;
  5176  04D7  1308               	bcf	8,6
  5177                           
  5178                           ;lcd(16).c: 112: TRISD7 = 0;
  5179  04D8  1388               	bcf	8,7
  5180                           
  5181                           ;lcd(16).c: 114: RD1 = 0;
  5182  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  5183  04DA  1088               	bcf	8,1
  5184                           
  5185                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5186  04DB  0823               	movf	lcd_put_byte@rs,w
  5187  04DC  1D03               	skipz
  5188  04DD  1488               	bsf	8,1
  5189                           
  5190                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5191  04DE  3021               	movlw	33
  5192  04DF  00A1               	movwf	??_lcd_put_byte
  5193  04E0                     u5177:	
  5194  04E0  0BA1               	decfsz	??_lcd_put_byte,f
  5195  04E1  2CE0               	goto	u5177
  5196  04E2  25A3               	call	PL35	;select bank 0
  5197                           
  5198                           ;lcd(16).c: 118: RD2 = 0;
  5199  04E3  3021               	movlw	33
  5200  04E4  1108               	bcf	8,2
  5201                           
  5202                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5203  04E5  00A1               	movwf	??_lcd_put_byte
  5204  04E6                     u5187:	
  5205  04E6  0BA1               	decfsz	??_lcd_put_byte,f
  5206  04E7  2CE6               	goto	u5187
  5207  04E8  25A3               	call	PL35	;select bank 0
  5208                           
  5209                           ;lcd(16).c: 120: RD3 = 0;
  5210  04E9  1188               	bcf	8,3
  5211                           
  5212                           ;lcd(16).c: 122: temp.Val = b;
  5213  04EA  0820               	movf	lcd_put_byte@b,w
  5214  04EB  00A4               	movwf	lcd_put_byte@temp
  5215                           
  5216                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5217  04EC  0E24               	swapf	lcd_put_byte@temp,w
  5218  04ED  3901               	andlw	1
  5219  04EE  00A1               	movwf	??_lcd_put_byte
  5220  04EF  0C21               	rrf	??_lcd_put_byte,w
  5221  04F0  1C03               	btfss	3,0
  5222  04F1  2CF5               	goto	u2780
  5223  04F2  25A3               	call	PL35	;select bank 0
  5224  04F3  1608               	bsf	8,4
  5225  04F4  2CF7               	goto	l6566
  5226  04F5                     u2780:	
  5227  04F5  25A3               	call	PL35	;select bank 0
  5228  04F6  1208               	bcf	8,4
  5229  04F7                     l6566:	
  5230                           
  5231                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5232  04F7  0E24               	swapf	lcd_put_byte@temp,w
  5233  04F8  00A1               	movwf	??_lcd_put_byte
  5234  04F9  0C21               	rrf	??_lcd_put_byte,w
  5235  04FA  3901               	andlw	1
  5236  04FB  00A2               	movwf	??_lcd_put_byte+1
  5237  04FC  0C22               	rrf	??_lcd_put_byte+1,w
  5238  04FD  1C03               	btfss	3,0
  5239  04FE  2D02               	goto	u2800
  5240  04FF  25A3               	call	PL35	;select bank 0
  5241  0500  1688               	bsf	8,5
  5242  0501  2D04               	goto	l6568
  5243  0502                     u2800:	
  5244  0502  25A3               	call	PL35	;select bank 0
  5245  0503  1288               	bcf	8,5
  5246  0504                     l6568:	
  5247                           
  5248                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5249  0504  0E24               	swapf	lcd_put_byte@temp,w
  5250  0505  2597  120A  118A   	fcall	PL30	;call to abstracted procedure
  5251  0508  1C03               	btfss	3,0
  5252  0509  2D0D               	goto	u2820
  5253  050A  25A3               	call	PL35	;select bank 0
  5254  050B  1708               	bsf	8,6
  5255  050C  2D0F               	goto	l6570
  5256  050D                     u2820:	
  5257  050D  25A3               	call	PL35	;select bank 0
  5258  050E  1308               	bcf	8,6
  5259  050F                     l6570:	
  5260                           
  5261                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5262  050F  0D24               	rlf	lcd_put_byte@temp,w
  5263  0510  0D24               	rlf	lcd_put_byte@temp,w
  5264  0511  3901               	andlw	1
  5265  0512  00A1               	movwf	??_lcd_put_byte
  5266  0513  0C21               	rrf	??_lcd_put_byte,w
  5267  0514  1C03               	btfss	3,0
  5268  0515  2D19               	goto	u2840
  5269  0516  25A3               	call	PL35	;select bank 0
  5270  0517  1788               	bsf	8,7
  5271  0518  2D1B               	goto	u2854
  5272  0519                     u2840:	
  5273  0519  25A3               	call	PL35	;select bank 0
  5274  051A  1388               	bcf	8,7
  5275  051B                     u2854:	
  5276                           
  5277                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5278  051B  3021               	movlw	33
  5279  051C  00A1               	movwf	??_lcd_put_byte
  5280  051D                     u5197:	
  5281  051D  0BA1               	decfsz	??_lcd_put_byte,f
  5282  051E  2D1D               	goto	u5197
  5283  051F  25A3               	call	PL35	;select bank 0
  5284                           
  5285                           ;lcd(16).c: 130: RD3 = 1;
  5286  0520  3021               	movlw	33
  5287  0521  1588               	bsf	8,3
  5288                           
  5289                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5290  0522  00A1               	movwf	??_lcd_put_byte
  5291  0523                     u5207:	
  5292  0523  0BA1               	decfsz	??_lcd_put_byte,f
  5293  0524  2D23               	goto	u5207
  5294  0525  25A3               	call	PL35	;select bank 0
  5295                           
  5296                           ;lcd(16).c: 132: RD3 = 0;
  5297  0526  1188               	bcf	8,3
  5298                           
  5299                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5300  0527  0824               	movf	lcd_put_byte@temp,w
  5301  0528  3901               	andlw	1
  5302  0529  00A1               	movwf	??_lcd_put_byte
  5303  052A  0C21               	rrf	??_lcd_put_byte,w
  5304  052B  1C03               	btfss	3,0
  5305  052C  2D30               	goto	u2860
  5306  052D  25A3               	call	PL35	;select bank 0
  5307  052E  1608               	bsf	8,4
  5308  052F  2D32               	goto	l6578
  5309  0530                     u2860:	
  5310  0530  25A3               	call	PL35	;select bank 0
  5311  0531  1208               	bcf	8,4
  5312  0532                     l6578:	
  5313                           
  5314                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5315  0532  0C24               	rrf	lcd_put_byte@temp,w
  5316  0533  3901               	andlw	1
  5317  0534  00A1               	movwf	??_lcd_put_byte
  5318  0535  0C21               	rrf	??_lcd_put_byte,w
  5319  0536  1C03               	btfss	3,0
  5320  0537  2D3B               	goto	u2880
  5321  0538  25A3               	call	PL35	;select bank 0
  5322  0539  1688               	bsf	8,5
  5323  053A  2D3D               	goto	l6580
  5324  053B                     u2880:	
  5325  053B  25A3               	call	PL35	;select bank 0
  5326  053C  1288               	bcf	8,5
  5327  053D                     l6580:	
  5328                           
  5329                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5330  053D  0C24               	rrf	lcd_put_byte@temp,w
  5331  053E  00A1               	movwf	??_lcd_put_byte
  5332  053F  0C21               	rrf	??_lcd_put_byte,w
  5333  0540  3901               	andlw	1
  5334  0541  00A2               	movwf	??_lcd_put_byte+1
  5335  0542  0C22               	rrf	??_lcd_put_byte+1,w
  5336  0543  1C03               	btfss	3,0
  5337  0544  2D48               	goto	u2900
  5338  0545  25A3               	call	PL35	;select bank 0
  5339  0546  1708               	bsf	8,6
  5340  0547  2D4A               	goto	l6582
  5341  0548                     u2900:	
  5342  0548  25A3               	call	PL35	;select bank 0
  5343  0549  1308               	bcf	8,6
  5344  054A                     l6582:	
  5345                           
  5346                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5347  054A  0C24               	rrf	lcd_put_byte@temp,w
  5348  054B  2597  120A  118A   	fcall	PL30	;call to abstracted procedure
  5349  054E  1C03               	btfss	3,0
  5350  054F  2D53               	goto	u2920
  5351  0550  25A3               	call	PL35	;select bank 0
  5352  0551  1788               	bsf	8,7
  5353  0552  2D55               	goto	u2934
  5354  0553                     u2920:	
  5355  0553  25A3               	call	PL35	;select bank 0
  5356  0554  1388               	bcf	8,7
  5357  0555                     u2934:	
  5358                           
  5359                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5360  0555  3021               	movlw	33
  5361  0556  00A1               	movwf	??_lcd_put_byte
  5362  0557                     u5217:	
  5363  0557  0BA1               	decfsz	??_lcd_put_byte,f
  5364  0558  2D57               	goto	u5217
  5365  0559  25A3               	call	PL35	;select bank 0
  5366                           
  5367                           ;lcd(16).c: 139: RD3 = 1;
  5368  055A  3021               	movlw	33
  5369  055B  1588               	bsf	8,3
  5370                           
  5371                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5372  055C  00A1               	movwf	??_lcd_put_byte
  5373  055D                     u5227:	
  5374  055D  0BA1               	decfsz	??_lcd_put_byte,f
  5375  055E  2D5D               	goto	u5227
  5376  055F  25A3               	call	PL35	;select bank 0
  5377                           
  5378                           ;lcd(16).c: 141: RD3 = 0;
  5379  0560  1188               	bcf	8,3
  5380  0561  0008               	return
  5381  0562                     __end_of_lcd_put_byte:	
  5382  0562                     __ptext770:	
  5383 ;; =============== function ___ftadd ends ============
  5384                           
  5385                           
  5386 ;; *************** function _lcd_busy *****************
  5387 ;; Defined at:
  5388 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  busy            1    1[BANK0 ] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      unsigned char 
  5395 ;; Registers used:
  5396 ;;		wreg
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 60/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5402 ;;      Params:         0       0       0       0       0
  5403 ;;      Locals:         0       1       0       0       0
  5404 ;;      Temps:          0       1       0       0       0
  5405 ;;      Totals:         0       2       0       0       0
  5406 ;;Total ram usage:        2 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    2
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_lcd_init
  5413 ;;		_lcd_putc
  5414 ;;		_lcd_gotoxy
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417  0562                     _lcd_busy:	
  5418                           
  5419                           ;lcd(16).c: 48: unsigned char busy;
  5420                           ;lcd(16).c: 50: TRISD4 = 1;
  5421                           
  5422                           ; Regs used in _lcd_busy: [wreg]
  5423  0562  1683               	bsf	3,5	;RP0=1, select bank1
  5424  0563  1303               	bcf	3,6	;RP1=0, select bank1
  5425  0564  1608               	bsf	8,4
  5426                           
  5427                           ;lcd(16).c: 51: TRISD5 = 1;
  5428  0565  1688               	bsf	8,5
  5429                           
  5430                           ;lcd(16).c: 52: TRISD6 = 1;
  5431  0566  1708               	bsf	8,6
  5432                           
  5433                           ;lcd(16).c: 53: TRISD7 = 1;
  5434  0567  1788               	bsf	8,7
  5435                           
  5436                           ;lcd(16).c: 55: RD2 = 1;
  5437  0568  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0569  3021               	movlw	33
  5439  056A  1508               	bsf	8,2
  5440                           
  5441                           ;lcd(16).c: 56: RD1 = 0;
  5442  056B  1088               	bcf	8,1
  5443                           
  5444                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5445  056C  00A0               	movwf	??_lcd_busy
  5446  056D                     u5137:	
  5447  056D  0BA0               	decfsz	??_lcd_busy,f
  5448  056E  2D6D               	goto	u5137
  5449  056F  25A3               	call	PL35	;select bank 0
  5450                           
  5451                           ;lcd(16).c: 58: RD3 = 1;
  5452  0570  3021               	movlw	33
  5453  0571  1588               	bsf	8,3
  5454                           
  5455                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5456  0572  00A0               	movwf	??_lcd_busy
  5457  0573                     u5147:	
  5458  0573  0BA0               	decfsz	??_lcd_busy,f
  5459  0574  2D73               	goto	u5147
  5460                           
  5461                           ;lcd(16).c: 61: busy = RD7;
  5462  0575  3000               	movlw	0
  5463  0576  25A3               	call	PL35	;select bank 0
  5464  0577  1B88               	btfsc	8,7
  5465  0578  3001               	movlw	1
  5466  0579  00A1               	movwf	lcd_busy@busy
  5467  057A  3021               	movlw	33
  5468                           
  5469                           ;lcd(16).c: 63: RD3 = 0;
  5470  057B  1188               	bcf	8,3
  5471                           
  5472                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5473  057C  00A0               	movwf	??_lcd_busy
  5474  057D                     u5157:	
  5475  057D  0BA0               	decfsz	??_lcd_busy,f
  5476  057E  2D7D               	goto	u5157
  5477  057F  25A3               	call	PL35	;select bank 0
  5478                           
  5479                           ;lcd(16).c: 65: RD3 = 1;
  5480  0580  3021               	movlw	33
  5481  0581  1588               	bsf	8,3
  5482                           
  5483                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5484  0582  00A0               	movwf	??_lcd_busy
  5485  0583                     u5167:	
  5486  0583  0BA0               	decfsz	??_lcd_busy,f
  5487  0584  2D83               	goto	u5167
  5488  0585  25A3               	call	PL35	;select bank 0
  5489                           
  5490                           ;lcd(16).c: 67: RD3 = 0;
  5491  0586  1188               	bcf	8,3
  5492                           
  5493                           ;lcd(16).c: 70: return busy;
  5494  0587  0821               	movf	lcd_busy@busy,w
  5495  0588  0008               	return
  5496  0589                     __end_of_lcd_busy:	
  5497  0589                     __ptext787:	
  5498 ;; =============== function _isdigit ends ============
  5499                           
  5500                           
  5501 ;; *************** function _isprint *****************
  5502 ;; Defined at:
  5503 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  c               1    wreg     unsigned char 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  c               1    1[BANK0 ] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;		None               void
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0
  5512 ;; Tracked objects:
  5513 ;;		On entry : 60/0
  5514 ;;		On exit  : 60/0
  5515 ;;		Unchanged: FFF9F/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5517 ;;      Params:         0       0       0       0       0
  5518 ;;      Locals:         0       2       0       0       0
  5519 ;;      Temps:          0       0       0       0       0
  5520 ;;      Totals:         0       2       0       0       0
  5521 ;;Total ram usage:        2 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    2
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_lcd_putc
  5528 ;; This function uses a non-reentrant model
  5529 ;;
  5530  0589                     _isprint:	
  5531                           
  5532                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5533                           ;isprint@c stored from wreg
  5534  0589  00A1               	movwf	isprint@c
  5535  058A  307F               	movlw	127
  5536  058B  01A0               	clrf	_isprint$3686
  5537  058C  0221               	subwf	isprint@c,w
  5538  058D  1803               	skipnc
  5539  058E  2D95               	goto	l7416
  5540  058F  3020               	movlw	32
  5541  0590  0221               	subwf	isprint@c,w
  5542  0591  1C03               	skipc
  5543  0592  2D95               	goto	l7416
  5544  0593  01A0               	clrf	_isprint$3686
  5545  0594  0AA0               	incf	_isprint$3686,f
  5546  0595                     l7416:	
  5547  0595  0C20               	rrf	_isprint$3686,w
  5548  0596  0008               	return
  5549  0597                     __end_of_isprint:	
  5550  0597                     PL30:	
  5551  0597  00A1               	movwf	??_lcd_put_byte
  5552  0598  0CA1               	rrf	??_lcd_put_byte,f
  5553  0599  0C21               	rrf	??_lcd_put_byte,w
  5554  059A  3901               	andlw	1
  5555  059B  00A2               	movwf	??_lcd_put_byte+1
  5556  059C  0C22               	rrf	??_lcd_put_byte+1,w
  5557  059D  0008               	return
  5558  059E                     PL32:	
  5559  059E  3030               	movlw	48
  5560  059F  1283               	bcf	3,5	;RP0=0, select bank0
  5561  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  5562  05A1  00A0               	movwf	?_lcd_put_byte
  5563  05A2  3400               	retlw	0
  5564  05A3                     PL35:	
  5565  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  5566  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  5567  05A5  0008               	return
  5568                           
  5569                           	psect	text766
  5570  000F                     __ptext766:	
  5571 ;; =============== function ___lltoft ends ============
  5572                           
  5573                           
  5574 ;; *************** function ___altoft *****************
  5575 ;; Defined at:
  5576 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  c               4    8[BANK0 ] long 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  sign            1   13[BANK0 ] unsigned char 
  5581 ;;  exp             1   12[BANK0 ] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  3    8[BANK0 ] float 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0, pclath, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 60/0
  5588 ;;		On exit  : 60/0
  5589 ;;		Unchanged: FFF9F/0
  5590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5591 ;;      Params:         0       4       0       0       0
  5592 ;;      Locals:         0       2       0       0       0
  5593 ;;      Temps:          0       0       0       0       0
  5594 ;;      Totals:         0       6       0       0       0
  5595 ;;Total ram usage:        6 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; Hardware stack levels required when called:    3
  5598 ;; This function calls:
  5599 ;;		___ftpack
  5600 ;; This function is called by:
  5601 ;;		_main
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604  000F                     ___altoft:	
  5605  000F  308E               	movlw	142
  5606                           
  5607                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5608  0010  01AD               	clrf	___altoft@sign
  5609  0011  00AC               	movwf	___altoft@exp
  5610  0012  1FAB               	btfss	___altoft@c+3,7
  5611  0013  2821               	goto	l7652
  5612  0014  09A8               	comf	___altoft@c,f
  5613  0015  09A9               	comf	___altoft@c+1,f
  5614  0016  09AA               	comf	___altoft@c+2,f
  5615  0017  09AB               	comf	___altoft@c+3,f
  5616  0018  0AA8               	incf	___altoft@c,f
  5617  0019  1903               	skipnz
  5618  001A  0AA9               	incf	___altoft@c+1,f
  5619  001B  1903               	skipnz
  5620  001C  0AAA               	incf	___altoft@c+2,f
  5621  001D  1903               	skipnz
  5622  001E  0AAB               	incf	___altoft@c+3,f
  5623  001F  01AD               	clrf	___altoft@sign
  5624  0020  0AAD               	incf	___altoft@sign,f
  5625  0021                     l7652:	
  5626  0021  30FF               	movlw	255
  5627  0022  052B               	andwf	___altoft@c+3,w
  5628  0023  1903               	btfsc	3,2
  5629  0024  282C               	goto	l7654
  5630  0025  1003               	clrc
  5631  0026  0CAB               	rrf	___altoft@c+3,f
  5632  0027  0CAA               	rrf	___altoft@c+2,f
  5633  0028  0CA9               	rrf	___altoft@c+1,f
  5634  0029  0CA8               	rrf	___altoft@c,f
  5635  002A  0AAC               	incf	___altoft@exp,f
  5636  002B  2821               	goto	l7652
  5637  002C                     l7654:	
  5638  002C  0828               	movf	___altoft@c,w
  5639  002D  00A0               	movwf	?___ftpack
  5640  002E  0829               	movf	___altoft@c+1,w
  5641  002F  00A1               	movwf	?___ftpack+1
  5642  0030  082A               	movf	___altoft@c+2,w
  5643  0031  00A2               	movwf	?___ftpack+2
  5644  0032  082C               	movf	___altoft@exp,w
  5645  0033  00A3               	movwf	?___ftpack+3
  5646  0034  082D               	movf	___altoft@sign,w
  5647  0035  00A4               	movwf	?___ftpack+4
  5648  0036  2337               	fcall	___ftpack
  5649  0037  0820               	movf	?___ftpack,w
  5650  0038  00A8               	movwf	?___altoft
  5651  0039  0821               	movf	?___ftpack+1,w
  5652  003A  00A9               	movwf	?___altoft+1
  5653  003B  0822               	movf	?___ftpack+2,w
  5654  003C  00AA               	movwf	?___altoft+2
  5655  003D  0008               	return
  5656  003E                     __end_of___altoft:	
  5657  003E                     __ptext768:	
  5658 ;; =============== function ___ftmul ends ============
  5659                           
  5660                           
  5661 ;; *************** function ___ftdiv *****************
  5662 ;; Defined at:
  5663 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  f2              3    8[BANK0 ] float 
  5666 ;;  f1              3   11[BANK0 ] float 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  f3              3   18[BANK0 ] float 
  5669 ;;  sign            1   22[BANK0 ] unsigned char 
  5670 ;;  exp             1   21[BANK0 ] unsigned char 
  5671 ;;  cntr            1   17[BANK0 ] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  3    8[BANK0 ] float 
  5674 ;; Registers used:
  5675 ;;		wreg, status,2, status,0, pclath, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 60/0
  5678 ;;		On exit  : 60/0
  5679 ;;		Unchanged: FFF9F/0
  5680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5681 ;;      Params:         0       6       0       0       0
  5682 ;;      Locals:         0       6       0       0       0
  5683 ;;      Temps:          0       3       0       0       0
  5684 ;;      Totals:         0      15       0       0       0
  5685 ;;Total ram usage:       15 bytes
  5686 ;; Hardware stack levels used:    1
  5687 ;; Hardware stack levels required when called:    3
  5688 ;; This function calls:
  5689 ;;		___ftpack
  5690 ;; This function is called by:
  5691 ;;		_main
  5692 ;; This function uses a non-reentrant model
  5693 ;;
  5694  003E                     ___ftdiv:	
  5695                           
  5696                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5697  003E  082B               	movf	___ftdiv@f1,w
  5698  003F  00AE               	movwf	??___ftdiv
  5699  0040  082C               	movf	___ftdiv@f1+1,w
  5700  0041  00AF               	movwf	??___ftdiv+1
  5701  0042  082D               	movf	___ftdiv@f1+2,w
  5702  0043  00B0               	movwf	??___ftdiv+2
  5703  0044  1003               	clrc
  5704  0045  0D2F               	rlf	??___ftdiv+1,w
  5705  0046  0D30               	rlf	??___ftdiv+2,w
  5706  0047  00B5               	movwf	___ftdiv@exp
  5707  0048  08B5               	movf	___ftdiv@exp,f
  5708  0049  1D03               	skipz
  5709  004A  284F               	goto	l6686
  5710  004B  01A8               	clrf	?___ftdiv
  5711  004C  01A9               	clrf	?___ftdiv+1
  5712  004D  01AA               	clrf	?___ftdiv+2
  5713  004E  0008               	return
  5714  004F                     l6686:	
  5715  004F  0828               	movf	___ftdiv@f2,w
  5716  0050  00AE               	movwf	??___ftdiv
  5717  0051  0829               	movf	___ftdiv@f2+1,w
  5718  0052  00AF               	movwf	??___ftdiv+1
  5719  0053  082A               	movf	___ftdiv@f2+2,w
  5720  0054  00B0               	movwf	??___ftdiv+2
  5721  0055  1003               	clrc
  5722  0056  0D2F               	rlf	??___ftdiv+1,w
  5723  0057  0D30               	rlf	??___ftdiv+2,w
  5724  0058  00B6               	movwf	___ftdiv@sign
  5725  0059  08B6               	movf	___ftdiv@sign,f
  5726  005A  1D03               	skipz
  5727  005B  2860               	goto	l3400
  5728  005C  01A8               	clrf	?___ftdiv
  5729  005D  01A9               	clrf	?___ftdiv+1
  5730  005E  01AA               	clrf	?___ftdiv+2
  5731  005F  0008               	return
  5732  0060                     l3400:	
  5733  0060  3089               	movlw	137
  5734  0061  01B2               	clrf	___ftdiv@f3
  5735  0062  01B3               	clrf	___ftdiv@f3+1
  5736  0063  01B4               	clrf	___ftdiv@f3+2
  5737  0064  0736               	addwf	___ftdiv@sign,w
  5738  0065  00AE               	movwf	??___ftdiv
  5739  0066  02B5               	subwf	___ftdiv@exp,f
  5740  0067  082D               	movf	___ftdiv@f1+2,w
  5741  0068  00B6               	movwf	___ftdiv@sign
  5742  0069  082A               	movf	___ftdiv@f2+2,w
  5743  006A  06B6               	xorwf	___ftdiv@sign,f
  5744  006B  3080               	movlw	128
  5745  006C  05B6               	andwf	___ftdiv@sign,f
  5746  006D  3018               	movlw	24
  5747  006E  17AC               	bsf	___ftdiv@f1+1,7
  5748  006F  01AD               	clrf	___ftdiv@f1+2
  5749  0070  17A9               	bsf	___ftdiv@f2+1,7
  5750  0071  01AA               	clrf	___ftdiv@f2+2
  5751  0072  00B1               	movwf	___ftdiv@cntr
  5752  0073                     l6710:	
  5753  0073  1003               	clrc
  5754  0074  0DB2               	rlf	___ftdiv@f3,f
  5755  0075  0DB3               	rlf	___ftdiv@f3+1,f
  5756  0076  0DB4               	rlf	___ftdiv@f3+2,f
  5757  0077  082A               	movf	___ftdiv@f2+2,w
  5758  0078  022D               	subwf	___ftdiv@f1+2,w
  5759  0079  1D03               	skipz
  5760  007A  2881               	goto	u3165
  5761  007B  0829               	movf	___ftdiv@f2+1,w
  5762  007C  022C               	subwf	___ftdiv@f1+1,w
  5763  007D  1D03               	skipz
  5764  007E  2881               	goto	u3165
  5765  007F  0828               	movf	___ftdiv@f2,w
  5766  0080  022B               	subwf	___ftdiv@f1,w
  5767  0081                     u3165:	
  5768  0081  1C03               	skipc
  5769  0082  288F               	goto	L7
  5770  0083  0828               	movf	___ftdiv@f2,w
  5771  0084  02AB               	subwf	___ftdiv@f1,f
  5772  0085  0829               	movf	___ftdiv@f2+1,w
  5773  0086  1C03               	skipc
  5774  0087  0F29               	incfsz	___ftdiv@f2+1,w
  5775  0088  02AC               	subwf	___ftdiv@f1+1,f
  5776  0089  082A               	movf	___ftdiv@f2+2,w
  5777  008A  1C03               	skipc
  5778  008B  0A2A               	incf	___ftdiv@f2+2,w
  5779  008C  02AD               	subwf	___ftdiv@f1+2,f
  5780  008D  1432               	bsf	___ftdiv@f3,0
  5781  008E  1003               	clrc
  5782  008F                     L7:	
  5783  008F  0DAB               	rlf	___ftdiv@f1,f
  5784  0090  0DAC               	rlf	___ftdiv@f1+1,f
  5785  0091  0DAD               	rlf	___ftdiv@f1+2,f
  5786  0092  0BB1               	decfsz	___ftdiv@cntr,f
  5787  0093  2873               	goto	l6710
  5788  0094  0832               	movf	___ftdiv@f3,w
  5789  0095  00A0               	movwf	?___ftpack
  5790  0096  0833               	movf	___ftdiv@f3+1,w
  5791  0097  00A1               	movwf	?___ftpack+1
  5792  0098  0834               	movf	___ftdiv@f3+2,w
  5793  0099  00A2               	movwf	?___ftpack+2
  5794  009A  0835               	movf	___ftdiv@exp,w
  5795  009B  00A3               	movwf	?___ftpack+3
  5796  009C  0836               	movf	___ftdiv@sign,w
  5797  009D  00A4               	movwf	?___ftpack+4
  5798  009E  2337               	fcall	___ftpack
  5799  009F  0820               	movf	?___ftpack,w
  5800  00A0  00A8               	movwf	?___ftdiv
  5801  00A1  0821               	movf	?___ftpack+1,w
  5802  00A2  00A9               	movwf	?___ftdiv+1
  5803  00A3  0822               	movf	?___ftpack+2,w
  5804  00A4  00AA               	movwf	?___ftdiv+2
  5805  00A5  0008               	return
  5806  00A6                     __end_of___ftdiv:	
  5807  00A6                     __ptext761:	
  5808 ;; =============== function ___ftsub ends ============
  5809                           
  5810                           
  5811 ;; *************** function _scale *****************
  5812 ;; Defined at:
  5813 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  scl             1    wreg     char 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  scl             1   52[BANK0 ] char 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  3   42[BANK0 ] char 
  5820 ;; Registers used:
  5821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 60/20
  5824 ;;		On exit  : 60/0
  5825 ;;		Unchanged: FFF9F/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5827 ;;      Params:         0       3       0       0       0
  5828 ;;      Locals:         0       4       0       0       0
  5829 ;;      Temps:          0       4       0       0       0
  5830 ;;      Totals:         0      11       0       0       0
  5831 ;;Total ram usage:       11 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    4
  5834 ;; This function calls:
  5835 ;;		___awmod
  5836 ;;		___awdiv
  5837 ;;		___ftmul
  5838 ;;		___bmul
  5839 ;; This function is called by:
  5840 ;;		_printf
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843  00A6                     _scale:	
  5844                           
  5845                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5846                           ;scale@scl stored from wreg
  5847  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  5848  00A7  00D4               	movwf	scale@scl
  5849  00A8  1FD4               	btfss	scale@scl,7
  5850  00A9  2972               	goto	l7724
  5851  00AA  09D4               	comf	scale@scl,f
  5852  00AB  0AD4               	incf	scale@scl,f
  5853  00AC  0854               	movf	scale@scl,w
  5854  00AD  3A80               	xorlw	128
  5855  00AE  3E12               	addlw	-238
  5856  00AF  1C03               	skipc
  5857  00B0  2916               	goto	l7714
  5858  00B1  300A               	movlw	10
  5859  00B2  2399  120A  118A   	fcall	PL16	;call to abstracted procedure
  5860  00B5  227D  120A  118A   	fcall	___awmod
  5861  00B8  0821               	movf	?___awmod+1,w
  5862  00B9  00A9               	movwf	?___awdiv+3
  5863  00BA  0820               	movf	?___awmod,w
  5864  00BB  00A8               	movwf	?___awdiv+2
  5865  00BC  2238  120A  118A   	fcall	___awdiv
  5866  00BF  23AE               	fcall	PL22	;call to abstracted procedure
  5867  00C0  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5868  00C1  0084               	movwf	4
  5869  00C2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5870  00C7  00BB               	movwf	?___ftmul
  5871  00C8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5872  00CD  00BC               	movwf	?___ftmul+1
  5873  00CE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5874  00D3  23B6  120A  118A   	fcall	PL24	;call to abstracted procedure
  5875  00D6  1BA8               	btfsc	?___awdiv+2,7
  5876  00D7  03A9               	decf	?___awdiv+3,f
  5877  00D8  2238  120A  118A   	fcall	___awdiv
  5878  00DB  238A               	fcall	PL11	;call to abstracted procedure
  5879  00DC  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5880  00DD  0084               	movwf	4
  5881  00DE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5882  00E3  00BE               	movwf	?___ftmul+3
  5883  00E4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5884  00E9  00BF               	movwf	?___ftmul+4
  5885  00EA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5886  00EF  00C0               	movwf	?___ftmul+5
  5887  00F0  22BA  120A  118A   	fcall	___ftmul
  5888  00F3  2375  120A  118A   	fcall	PL9	;call to abstracted procedure
  5889  00F6  1BA2               	btfsc	?___awmod+2,7
  5890  00F7  03A3               	decf	?___awmod+3,f
  5891  00F8  227D  120A  118A   	fcall	___awmod
  5892  00FB  2382               	fcall	PL10	;call to abstracted procedure
  5893  00FC  3E01               	addlw	low (__npowers_-__stringbase)
  5894  00FD  0084               	movwf	4
  5895  00FE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5896  0103  00BB               	movwf	?___ftmul
  5897  0104  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5898  0109  00BC               	movwf	?___ftmul+1
  5899  010A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5900  010F  23BE  120A  118A   	fcall	PL25	;call to abstracted procedure
  5901  0112  22BA  120A  118A   	fcall	___ftmul
  5902  0115  2B92               	ljmp	PL12	;call to abstracted procedure
  5903  0116                     l7714:	
  5904  0116  0854               	movf	scale@scl,w
  5905  0117  3A80               	xorlw	128
  5906  0118  3E75               	addlw	-139
  5907  0119  1C03               	skipc
  5908  011A  295B               	goto	l7720
  5909  011B  300A               	movlw	10
  5910  011C  00A0               	movwf	?___awmod
  5911  011D  01A1               	clrf	?___awmod+1
  5912  011E  0854               	movf	scale@scl,w
  5913  011F  00A2               	movwf	?___awmod+2
  5914  0120  01A3               	clrf	?___awmod+3
  5915  0121  1BA2               	btfsc	?___awmod+2,7
  5916  0122  03A3               	decf	?___awmod+3,f
  5917  0123  227D  120A  118A   	fcall	___awmod
  5918  0126  2382               	fcall	PL10	;call to abstracted procedure
  5919  0127  3E01               	addlw	low (__npowers_-__stringbase)
  5920  0128  0084               	movwf	4
  5921  0129  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5922  012E  00BB               	movwf	?___ftmul
  5923  012F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5924  0134  00BC               	movwf	?___ftmul+1
  5925  0135  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5926  013A  23C6  120A  118A   	fcall	PL26	;call to abstracted procedure
  5927  013D  1BA8               	btfsc	?___awdiv+2,7
  5928  013E  03A9               	decf	?___awdiv+3,f
  5929  013F  2238  120A  118A   	fcall	___awdiv
  5930  0142  238A               	fcall	PL11	;call to abstracted procedure
  5931  0143  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5932  0144  0084               	movwf	4
  5933  0145  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5934  014A  00BE               	movwf	?___ftmul+3
  5935  014B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5936  0150  00BF               	movwf	?___ftmul+4
  5937  0151  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5938  0156  00C0               	movwf	?___ftmul+5
  5939  0157  22BA  120A  118A   	fcall	___ftmul
  5940  015A  2B92               	ljmp	PL12	;call to abstracted procedure
  5941  015B                     l7720:	
  5942  015B  3003               	movlw	3
  5943  015C  00A9               	movwf	?___bmul
  5944  015D  0854               	movf	scale@scl,w
  5945  015E  2329               	fcall	___bmul
  5946  015F  3E01               	addlw	low (__npowers_-__stringbase)
  5947  0160  0084               	movwf	4
  5948  0161  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5949  0166  00CA               	movwf	?_scale
  5950  0167  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5951  016C  00CB               	movwf	?_scale+1
  5952  016D  160A  118A  2000   	fcall	stringdir
  5953  0170  00CC               	movwf	?_scale+2
  5954  0171  0008               	return
  5955  0172                     l7724:	
  5956  0172  0854               	movf	scale@scl,w
  5957  0173  3A80               	xorlw	128
  5958  0174  3E12               	addlw	-238
  5959  0175  1C03               	skipc
  5960  0176  29DC               	goto	l7732
  5961  0177  300A               	movlw	10
  5962  0178  2399  120A  118A   	fcall	PL16	;call to abstracted procedure
  5963  017B  227D  120A  118A   	fcall	___awmod
  5964  017E  0821               	movf	?___awmod+1,w
  5965  017F  00A9               	movwf	?___awdiv+3
  5966  0180  0820               	movf	?___awmod,w
  5967  0181  00A8               	movwf	?___awdiv+2
  5968  0182  2238  120A  118A   	fcall	___awdiv
  5969  0185  23AE               	fcall	PL22	;call to abstracted procedure
  5970  0186  3E43               	addlw	low ((__powers_-__stringbase+27))
  5971  0187  0084               	movwf	4
  5972  0188  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5973  018D  00BB               	movwf	?___ftmul
  5974  018E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5975  0193  00BC               	movwf	?___ftmul+1
  5976  0194  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5977  0199  23B6  120A  118A   	fcall	PL24	;call to abstracted procedure
  5978  019C  1BA8               	btfsc	?___awdiv+2,7
  5979  019D  03A9               	decf	?___awdiv+3,f
  5980  019E  2238  120A  118A   	fcall	___awdiv
  5981  01A1  238A               	fcall	PL11	;call to abstracted procedure
  5982  01A2  3E5E               	addlw	low ((__powers_-__stringbase+54))
  5983  01A3  0084               	movwf	4
  5984  01A4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5985  01A9  00BE               	movwf	?___ftmul+3
  5986  01AA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5987  01AF  00BF               	movwf	?___ftmul+4
  5988  01B0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5989  01B5  00C0               	movwf	?___ftmul+5
  5990  01B6  22BA  120A  118A   	fcall	___ftmul
  5991  01B9  2375  120A  118A   	fcall	PL9	;call to abstracted procedure
  5992  01BC  1BA2               	btfsc	?___awmod+2,7
  5993  01BD  03A3               	decf	?___awmod+3,f
  5994  01BE  227D  120A  118A   	fcall	___awmod
  5995  01C1  2382               	fcall	PL10	;call to abstracted procedure
  5996  01C2  3E28               	addlw	low (__powers_-__stringbase)
  5997  01C3  0084               	movwf	4
  5998  01C4  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  5999  01C9  00BB               	movwf	?___ftmul
  6000  01CA  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6001  01CF  00BC               	movwf	?___ftmul+1
  6002  01D0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6003  01D5  23BE  120A  118A   	fcall	PL25	;call to abstracted procedure
  6004  01D8  22BA  120A  118A   	fcall	___ftmul
  6005  01DB  2B92               	ljmp	PL12	;call to abstracted procedure
  6006  01DC                     l7732:	
  6007  01DC  0854               	movf	scale@scl,w
  6008  01DD  3A80               	xorlw	128
  6009  01DE  3E75               	addlw	-139
  6010  01DF  1C03               	skipc
  6011  01E0  2A21               	goto	l7738
  6012  01E1  300A               	movlw	10
  6013  01E2  00A0               	movwf	?___awmod
  6014  01E3  01A1               	clrf	?___awmod+1
  6015  01E4  0854               	movf	scale@scl,w
  6016  01E5  00A2               	movwf	?___awmod+2
  6017  01E6  01A3               	clrf	?___awmod+3
  6018  01E7  1BA2               	btfsc	?___awmod+2,7
  6019  01E8  03A3               	decf	?___awmod+3,f
  6020  01E9  227D  120A  118A   	fcall	___awmod
  6021  01EC  2382               	fcall	PL10	;call to abstracted procedure
  6022  01ED  3E28               	addlw	low (__powers_-__stringbase)
  6023  01EE  0084               	movwf	4
  6024  01EF  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6025  01F4  00BB               	movwf	?___ftmul
  6026  01F5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6027  01FA  00BC               	movwf	?___ftmul+1
  6028  01FB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6029  0200  23C6  120A  118A   	fcall	PL26	;call to abstracted procedure
  6030  0203  1BA8               	btfsc	?___awdiv+2,7
  6031  0204  03A9               	decf	?___awdiv+3,f
  6032  0205  2238  120A  118A   	fcall	___awdiv
  6033  0208  238A               	fcall	PL11	;call to abstracted procedure
  6034  0209  3E43               	addlw	low ((__powers_-__stringbase+27))
  6035  020A  0084               	movwf	4
  6036  020B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6037  0210  00BE               	movwf	?___ftmul+3
  6038  0211  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6039  0216  00BF               	movwf	?___ftmul+4
  6040  0217  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6041  021C  00C0               	movwf	?___ftmul+5
  6042  021D  22BA  120A  118A   	fcall	___ftmul
  6043  0220  2B92               	ljmp	PL12	;call to abstracted procedure
  6044  0221                     l7738:	
  6045  0221  3003               	movlw	3
  6046  0222  00A9               	movwf	?___bmul
  6047  0223  0854               	movf	scale@scl,w
  6048  0224  2329               	fcall	___bmul
  6049  0225  3E28               	addlw	low (__powers_-__stringbase)
  6050  0226  0084               	movwf	4
  6051  0227  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6052  022C  00CA               	movwf	?_scale
  6053  022D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  6054  0232  00CB               	movwf	?_scale+1
  6055  0233  160A  118A  2000   	fcall	stringdir
  6056  0236  00CC               	movwf	?_scale+2
  6057  0237  0008               	return
  6058  0238                     __end_of_scale:	
  6059  0238                     __ptext777:	
  6060 ;; =============== function ___llmod ends ============
  6061                           
  6062                           
  6063 ;; *************** function ___awdiv *****************
  6064 ;; Defined at:
  6065 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  divisor         2    6[BANK0 ] int 
  6068 ;;  dividend        2    8[BANK0 ] int 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  quotient        2   12[BANK0 ] int 
  6071 ;;  sign            1   11[BANK0 ] unsigned char 
  6072 ;;  counter         1   10[BANK0 ] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  2    6[BANK0 ] int 
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, status,0
  6077 ;; Tracked objects:
  6078 ;;		On entry : 60/0
  6079 ;;		On exit  : 60/0
  6080 ;;		Unchanged: FFF9F/0
  6081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6082 ;;      Params:         0       4       0       0       0
  6083 ;;      Locals:         0       4       0       0       0
  6084 ;;      Temps:          0       0       0       0       0
  6085 ;;      Totals:         0       8       0       0       0
  6086 ;;Total ram usage:        8 bytes
  6087 ;; Hardware stack levels used:    1
  6088 ;; Hardware stack levels required when called:    2
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		_scale
  6093 ;;		_printf
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096  0238                     ___awdiv:	
  6097                           
  6098                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6099  0238  01AB               	clrf	___awdiv@sign
  6100  0239  1FA7               	btfss	___awdiv@divisor+1,7
  6101  023A  2A42               	goto	l7496
  6102  023B  09A6               	comf	___awdiv@divisor,f
  6103  023C  09A7               	comf	___awdiv@divisor+1,f
  6104  023D  0AA6               	incf	___awdiv@divisor,f
  6105  023E  1903               	skipnz
  6106  023F  0AA7               	incf	___awdiv@divisor+1,f
  6107  0240  01AB               	clrf	___awdiv@sign
  6108  0241  0AAB               	incf	___awdiv@sign,f
  6109  0242                     l7496:	
  6110  0242  1FA9               	btfss	___awdiv@dividend+1,7
  6111  0243  2A4B               	goto	l7502
  6112  0244  09A8               	comf	___awdiv@dividend,f
  6113  0245  09A9               	comf	___awdiv@dividend+1,f
  6114  0246  0AA8               	incf	___awdiv@dividend,f
  6115  0247  1903               	skipnz
  6116  0248  0AA9               	incf	___awdiv@dividend+1,f
  6117  0249  3001               	movlw	1
  6118  024A  06AB               	xorwf	___awdiv@sign,f
  6119  024B                     l7502:	
  6120  024B  01AC               	clrf	___awdiv@quotient
  6121  024C  01AD               	clrf	___awdiv@quotient+1
  6122  024D  0827               	movf	___awdiv@divisor+1,w
  6123  024E  0426               	iorwf	___awdiv@divisor,w
  6124  024F  1903               	skipnz
  6125  0250  2A70               	goto	l7524
  6126  0251  01AA               	clrf	___awdiv@counter
  6127  0252                     L16:	
  6128  0252  0AAA               	incf	___awdiv@counter,f
  6129  0253  1BA7               	btfsc	___awdiv@divisor+1,7
  6130  0254  2A59               	goto	l7512
  6131  0255  1003               	clrc
  6132  0256  0DA6               	rlf	___awdiv@divisor,f
  6133  0257  0DA7               	rlf	___awdiv@divisor+1,f
  6134  0258  2A52               	goto	L16
  6135  0259                     l7512:	
  6136  0259  1003               	clrc
  6137  025A  0DAC               	rlf	___awdiv@quotient,f
  6138  025B  0DAD               	rlf	___awdiv@quotient+1,f
  6139  025C  0827               	movf	___awdiv@divisor+1,w
  6140  025D  0229               	subwf	___awdiv@dividend+1,w
  6141  025E  1D03               	skipz
  6142  025F  2A62               	goto	u4175
  6143  0260  0826               	movf	___awdiv@divisor,w
  6144  0261  0228               	subwf	___awdiv@dividend,w
  6145  0262                     u4175:	
  6146  0262  1C03               	skipc
  6147  0263  2A6C               	goto	L17
  6148  0264  0826               	movf	___awdiv@divisor,w
  6149  0265  02A8               	subwf	___awdiv@dividend,f
  6150  0266  0827               	movf	___awdiv@divisor+1,w
  6151  0267  1C03               	skipc
  6152  0268  03A9               	decf	___awdiv@dividend+1,f
  6153  0269  02A9               	subwf	___awdiv@dividend+1,f
  6154  026A  142C               	bsf	___awdiv@quotient,0
  6155  026B  1003               	clrc
  6156  026C                     L17:	
  6157  026C  0CA7               	rrf	___awdiv@divisor+1,f
  6158  026D  0CA6               	rrf	___awdiv@divisor,f
  6159  026E  0BAA               	decfsz	___awdiv@counter,f
  6160  026F  2A59               	goto	l7512
  6161  0270                     l7524:	
  6162  0270  082B               	movf	___awdiv@sign,w
  6163  0271  1903               	btfsc	3,2
  6164  0272  2A78               	goto	l7528
  6165  0273  09AC               	comf	___awdiv@quotient,f
  6166  0274  09AD               	comf	___awdiv@quotient+1,f
  6167  0275  0AAC               	incf	___awdiv@quotient,f
  6168  0276  1903               	skipnz
  6169  0277  0AAD               	incf	___awdiv@quotient+1,f
  6170  0278                     l7528:	
  6171  0278  082D               	movf	___awdiv@quotient+1,w
  6172  0279  00A7               	movwf	?___awdiv+1
  6173  027A  082C               	movf	___awdiv@quotient,w
  6174  027B  00A6               	movwf	?___awdiv
  6175  027C  0008               	return
  6176  027D                     __end_of___awdiv:	
  6177  027D                     __ptext772:	
  6178 ;; =============== function _lcd_put_byte ends ============
  6179                           
  6180                           
  6181 ;; *************** function ___awmod *****************
  6182 ;; Defined at:
  6183 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  divisor         2    0[BANK0 ] int 
  6186 ;;  dividend        2    2[BANK0 ] int 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  sign            1    5[BANK0 ] unsigned char 
  6189 ;;  counter         1    4[BANK0 ] unsigned char 
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  2    0[BANK0 ] int 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0
  6194 ;; Tracked objects:
  6195 ;;		On entry : 60/0
  6196 ;;		On exit  : 60/0
  6197 ;;		Unchanged: FFF9F/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6199 ;;      Params:         0       4       0       0       0
  6200 ;;      Locals:         0       2       0       0       0
  6201 ;;      Temps:          0       0       0       0       0
  6202 ;;      Totals:         0       6       0       0       0
  6203 ;;Total ram usage:        6 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    2
  6206 ;; This function calls:
  6207 ;;		Nothing
  6208 ;; This function is called by:
  6209 ;;		_scale
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212  027D                     ___awmod:	
  6213                           
  6214                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6215  027D  01A5               	clrf	___awmod@sign
  6216  027E  1FA3               	btfss	___awmod@dividend+1,7
  6217  027F  2A87               	goto	l7614
  6218  0280  09A2               	comf	___awmod@dividend,f
  6219  0281  09A3               	comf	___awmod@dividend+1,f
  6220  0282  0AA2               	incf	___awmod@dividend,f
  6221  0283  1903               	skipnz
  6222  0284  0AA3               	incf	___awmod@dividend+1,f
  6223  0285  01A5               	clrf	___awmod@sign
  6224  0286  0AA5               	incf	___awmod@sign,f
  6225  0287                     l7614:	
  6226  0287  1FA1               	btfss	___awmod@divisor+1,7
  6227  0288  2A8E               	goto	l7618
  6228  0289  09A0               	comf	___awmod@divisor,f
  6229  028A  09A1               	comf	___awmod@divisor+1,f
  6230  028B  0AA0               	incf	___awmod@divisor,f
  6231  028C  1903               	skipnz
  6232  028D  0AA1               	incf	___awmod@divisor+1,f
  6233  028E                     l7618:	
  6234  028E  0821               	movf	___awmod@divisor+1,w
  6235  028F  0420               	iorwf	___awmod@divisor,w
  6236  0290  1903               	skipnz
  6237  0291  2AAD               	goto	l7634
  6238  0292  01A4               	clrf	___awmod@counter
  6239  0293                     L9:	
  6240  0293  0AA4               	incf	___awmod@counter,f
  6241  0294  1BA1               	btfsc	___awmod@divisor+1,7
  6242  0295  2A9A               	goto	l7626
  6243  0296  1003               	clrc
  6244  0297  0DA0               	rlf	___awmod@divisor,f
  6245  0298  0DA1               	rlf	___awmod@divisor+1,f
  6246  0299  2A93               	goto	L9
  6247  029A                     l7626:	
  6248  029A  0821               	movf	___awmod@divisor+1,w
  6249  029B  0223               	subwf	___awmod@dividend+1,w
  6250  029C  1D03               	skipz
  6251  029D  2AA0               	goto	u4365
  6252  029E  0820               	movf	___awmod@divisor,w
  6253  029F  0222               	subwf	___awmod@dividend,w
  6254  02A0                     u4365:	
  6255  02A0  1C03               	skipc
  6256  02A1  2AA9               	goto	L10
  6257  02A2  0820               	movf	___awmod@divisor,w
  6258  02A3  02A2               	subwf	___awmod@dividend,f
  6259  02A4  0821               	movf	___awmod@divisor+1,w
  6260  02A5  1C03               	skipc
  6261  02A6  03A3               	decf	___awmod@dividend+1,f
  6262  02A7  02A3               	subwf	___awmod@dividend+1,f
  6263  02A8  1003               	clrc
  6264  02A9                     L10:	
  6265  02A9  0CA1               	rrf	___awmod@divisor+1,f
  6266  02AA  0CA0               	rrf	___awmod@divisor,f
  6267  02AB  0BA4               	decfsz	___awmod@counter,f
  6268  02AC  2A9A               	goto	l7626
  6269  02AD                     l7634:	
  6270  02AD  0825               	movf	___awmod@sign,w
  6271  02AE  1903               	btfsc	3,2
  6272  02AF  2AB5               	goto	l7638
  6273  02B0  09A2               	comf	___awmod@dividend,f
  6274  02B1  09A3               	comf	___awmod@dividend+1,f
  6275  02B2  0AA2               	incf	___awmod@dividend,f
  6276  02B3  1903               	skipnz
  6277  02B4  0AA3               	incf	___awmod@dividend+1,f
  6278  02B5                     l7638:	
  6279  02B5  0823               	movf	___awmod@dividend+1,w
  6280  02B6  00A1               	movwf	?___awmod+1
  6281  02B7  0822               	movf	___awmod@dividend,w
  6282  02B8  00A0               	movwf	?___awmod
  6283  02B9  0008               	return
  6284  02BA                     __end_of___awmod:	
  6285  02BA                     __ptext767:	
  6286 ;; =============== function ___altoft ends ============
  6287                           
  6288                           
  6289 ;; *************** function ___ftmul *****************
  6290 ;; Defined at:
  6291 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  f1              3   27[BANK0 ] float 
  6294 ;;  f2              3   30[BANK0 ] float 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  f3_as_produc    3   37[BANK0 ] unsigned um
  6297 ;;  sign            1   41[BANK0 ] unsigned char 
  6298 ;;  cntr            1   40[BANK0 ] unsigned char 
  6299 ;;  exp             1   36[BANK0 ] unsigned char 
  6300 ;; Return value:  Size  Location     Type
  6301 ;;                  3   27[BANK0 ] float 
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0, pclath, cstack
  6304 ;; Tracked objects:
  6305 ;;		On entry : 60/0
  6306 ;;		On exit  : 60/0
  6307 ;;		Unchanged: FFF9F/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6309 ;;      Params:         0       6       0       0       0
  6310 ;;      Locals:         0       6       0       0       0
  6311 ;;      Temps:          0       3       0       0       0
  6312 ;;      Totals:         0      15       0       0       0
  6313 ;;Total ram usage:       15 bytes
  6314 ;; Hardware stack levels used:    1
  6315 ;; Hardware stack levels required when called:    3
  6316 ;; This function calls:
  6317 ;;		___ftpack
  6318 ;; This function is called by:
  6319 ;;		_main
  6320 ;;		_fround
  6321 ;;		_scale
  6322 ;;		_printf
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325  02BA                     ___ftmul:	
  6326                           
  6327                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6328  02BA  083B               	movf	___ftmul@f1,w
  6329  02BB  00C1               	movwf	??___ftmul
  6330  02BC  083C               	movf	___ftmul@f1+1,w
  6331  02BD  00C2               	movwf	??___ftmul+1
  6332  02BE  083D               	movf	___ftmul@f1+2,w
  6333  02BF  00C3               	movwf	??___ftmul+2
  6334  02C0  1003               	clrc
  6335  02C1  0D42               	rlf	??___ftmul+1,w
  6336  02C2  0D43               	rlf	??___ftmul+2,w
  6337  02C3  00C4               	movwf	___ftmul@exp
  6338  02C4  08C4               	movf	___ftmul@exp,f
  6339  02C5  1D03               	skipz
  6340  02C6  2ACB               	goto	l6730
  6341  02C7  01BB               	clrf	?___ftmul
  6342  02C8  01BC               	clrf	?___ftmul+1
  6343  02C9  01BD               	clrf	?___ftmul+2
  6344  02CA  0008               	return
  6345  02CB                     l6730:	
  6346  02CB  083E               	movf	___ftmul@f2,w
  6347  02CC  00C1               	movwf	??___ftmul
  6348  02CD  083F               	movf	___ftmul@f2+1,w
  6349  02CE  00C2               	movwf	??___ftmul+1
  6350  02CF  0840               	movf	___ftmul@f2+2,w
  6351  02D0  00C3               	movwf	??___ftmul+2
  6352  02D1  1003               	clrc
  6353  02D2  0D42               	rlf	??___ftmul+1,w
  6354  02D3  0D43               	rlf	??___ftmul+2,w
  6355  02D4  00C9               	movwf	___ftmul@sign
  6356  02D5  08C9               	movf	___ftmul@sign,f
  6357  02D6  1D03               	skipz
  6358  02D7  2ADC               	goto	l6736
  6359  02D8  01BB               	clrf	?___ftmul
  6360  02D9  01BC               	clrf	?___ftmul+1
  6361  02DA  01BD               	clrf	?___ftmul+2
  6362  02DB  0008               	return
  6363  02DC                     l6736:	
  6364  02DC  0849               	movf	___ftmul@sign,w
  6365  02DD  3E7B               	addlw	123
  6366  02DE  07C4               	addwf	___ftmul@exp,f
  6367  02DF  083D               	movf	___ftmul@f1+2,w
  6368  02E0  00C9               	movwf	___ftmul@sign
  6369  02E1  0840               	movf	___ftmul@f2+2,w
  6370  02E2  06C9               	xorwf	___ftmul@sign,f
  6371  02E3  3080               	movlw	128
  6372  02E4  05C9               	andwf	___ftmul@sign,f
  6373  02E5  3007               	movlw	7
  6374  02E6  17BC               	bsf	___ftmul@f1+1,7
  6375  02E7  17BF               	bsf	___ftmul@f2+1,7
  6376  02E8  01C0               	clrf	___ftmul@f2+2
  6377  02E9  01C5               	clrf	___ftmul@f3_as_product
  6378  02EA  01C6               	clrf	___ftmul@f3_as_product+1
  6379  02EB  01C7               	clrf	___ftmul@f3_as_product+2
  6380  02EC  00C8               	movwf	___ftmul@cntr
  6381  02ED                     l6754:	
  6382  02ED  1C3B               	btfss	___ftmul@f1,0
  6383  02EE  2AF7               	goto	l6758
  6384  02EF  083E               	movf	___ftmul@f2,w
  6385  02F0  23A4  120A  118A   	fcall	PL20	;call to abstracted procedure
  6386  02F3  1803               	skipnc
  6387  02F4  0A40               	incf	___ftmul@f2+2,w
  6388  02F5  1D03               	btfss	3,2
  6389  02F6  07C7               	addwf	___ftmul@f3_as_product+2,f
  6390  02F7                     l6758:	
  6391  02F7  1003               	clrc
  6392  02F8  0CBD               	rrf	___ftmul@f1+2,f
  6393  02F9  0CBC               	rrf	___ftmul@f1+1,f
  6394  02FA  0CBB               	rrf	___ftmul@f1,f
  6395  02FB  1003               	clrc
  6396  02FC  0DBE               	rlf	___ftmul@f2,f
  6397  02FD  0DBF               	rlf	___ftmul@f2+1,f
  6398  02FE  0DC0               	rlf	___ftmul@f2+2,f
  6399  02FF  0BC8               	decfsz	___ftmul@cntr,f
  6400  0300  2AED               	goto	l6754
  6401  0301  3009               	movlw	9
  6402  0302  00C8               	movwf	___ftmul@cntr
  6403  0303                     l6766:	
  6404  0303  1C3B               	btfss	___ftmul@f1,0
  6405  0304  2B0D               	goto	l6770
  6406  0305  083E               	movf	___ftmul@f2,w
  6407  0306  23A4  120A  118A   	fcall	PL20	;call to abstracted procedure
  6408  0309  1803               	skipnc
  6409  030A  0A40               	incf	___ftmul@f2+2,w
  6410  030B  1D03               	btfss	3,2
  6411  030C  07C7               	addwf	___ftmul@f3_as_product+2,f
  6412  030D                     l6770:	
  6413  030D  1003               	clrc
  6414  030E  0CBD               	rrf	___ftmul@f1+2,f
  6415  030F  0CBC               	rrf	___ftmul@f1+1,f
  6416  0310  0CBB               	rrf	___ftmul@f1,f
  6417  0311  1003               	clrc
  6418  0312  0CC7               	rrf	___ftmul@f3_as_product+2,f
  6419  0313  0CC6               	rrf	___ftmul@f3_as_product+1,f
  6420  0314  0CC5               	rrf	___ftmul@f3_as_product,f
  6421  0315  0BC8               	decfsz	___ftmul@cntr,f
  6422  0316  2B03               	goto	l6766
  6423  0317  0845               	movf	___ftmul@f3_as_product,w
  6424  0318  00A0               	movwf	?___ftpack
  6425  0319  0846               	movf	___ftmul@f3_as_product+1,w
  6426  031A  00A1               	movwf	?___ftpack+1
  6427  031B  0847               	movf	___ftmul@f3_as_product+2,w
  6428  031C  00A2               	movwf	?___ftpack+2
  6429  031D  0844               	movf	___ftmul@exp,w
  6430  031E  00A3               	movwf	?___ftpack+3
  6431  031F  0849               	movf	___ftmul@sign,w
  6432  0320  00A4               	movwf	?___ftpack+4
  6433  0321  2337               	fcall	___ftpack
  6434  0322  0820               	movf	?___ftpack,w
  6435  0323  00BB               	movwf	?___ftmul
  6436  0324  0821               	movf	?___ftpack+1,w
  6437  0325  00BC               	movwf	?___ftmul+1
  6438  0326  0822               	movf	?___ftpack+2,w
  6439  0327  00BD               	movwf	?___ftmul+2
  6440  0328  0008               	return
  6441  0329                     __end_of___ftmul:	
  6442  0329                     __ptext783:	
  6443 ;; =============== function ___wmul ends ============
  6444                           
  6445                           
  6446 ;; *************** function ___bmul *****************
  6447 ;; Defined at:
  6448 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  multiplier      1    wreg     unsigned char 
  6451 ;;  multiplicand    1    9[BANK0 ] unsigned char 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  multiplier      1   11[BANK0 ] unsigned char 
  6454 ;;  product         1   10[BANK0 ] unsigned char 
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      unsigned char 
  6457 ;; Registers used:
  6458 ;;		wreg, status,2, status,0
  6459 ;; Tracked objects:
  6460 ;;		On entry : 60/0
  6461 ;;		On exit  : 60/0
  6462 ;;		Unchanged: FFF9F/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6464 ;;      Params:         0       1       0       0       0
  6465 ;;      Locals:         0       2       0       0       0
  6466 ;;      Temps:          0       0       0       0       0
  6467 ;;      Totals:         0       3       0       0       0
  6468 ;;Total ram usage:        3 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; Hardware stack levels required when called:    2
  6471 ;; This function calls:
  6472 ;;		Nothing
  6473 ;; This function is called by:
  6474 ;;		_fround
  6475 ;;		_scale
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478  0329                     ___bmul:	
  6479                           
  6480                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6481                           ;___bmul@multiplier stored from wreg
  6482  0329  00AB               	movwf	___bmul@multiplier
  6483  032A  01AA               	clrf	___bmul@product
  6484  032B                     l7434:	
  6485  032B  0829               	movf	___bmul@multiplicand,w
  6486  032C  182B               	btfsc	___bmul@multiplier,0
  6487  032D  07AA               	addwf	___bmul@product,f
  6488  032E  1003               	clrc
  6489  032F  0DA9               	rlf	___bmul@multiplicand,f
  6490  0330  1003               	clrc
  6491  0331  0CAB               	rrf	___bmul@multiplier,f
  6492  0332  08AB               	movf	___bmul@multiplier,f
  6493  0333  1D03               	skipz
  6494  0334  2B2B               	goto	l7434
  6495  0335  082A               	movf	___bmul@product,w
  6496  0336  0008               	return
  6497  0337                     __end_of___bmul:	
  6498  0337                     __ptext779:	
  6499 ;; =============== function ___fttol ends ============
  6500                           
  6501                           
  6502 ;; *************** function ___ftpack *****************
  6503 ;; Defined at:
  6504 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;  arg             3    0[BANK0 ] unsigned um
  6507 ;;  exp             1    3[BANK0 ] unsigned char 
  6508 ;;  sign            1    4[BANK0 ] unsigned char 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  3    0[BANK0 ] float 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0
  6515 ;; Tracked objects:
  6516 ;;		On entry : 60/0
  6517 ;;		On exit  : 60/0
  6518 ;;		Unchanged: FFF9F/0
  6519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6520 ;;      Params:         0       5       0       0       0
  6521 ;;      Locals:         0       0       0       0       0
  6522 ;;      Temps:          0       3       0       0       0
  6523 ;;      Totals:         0       8       0       0       0
  6524 ;;Total ram usage:        8 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    2
  6527 ;; This function calls:
  6528 ;;		Nothing
  6529 ;; This function is called by:
  6530 ;;		___ftadd
  6531 ;;		___ftdiv
  6532 ;;		___ftmul
  6533 ;;		___altoft
  6534 ;;		___lltoft
  6535 ;; This function uses a non-reentrant model
  6536 ;;
  6537  0337                     ___ftpack:	
  6538                           
  6539                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6540  0337  0823               	movf	___ftpack@exp,w
  6541  0338  1903               	btfsc	3,2
  6542  0339  2B3F               	goto	l6336
  6543  033A  0822               	movf	___ftpack@arg+2,w
  6544  033B  0421               	iorwf	___ftpack@arg+1,w
  6545  033C  0420               	iorwf	___ftpack@arg,w
  6546  033D  1D03               	skipz
  6547  033E  2B48               	goto	l6342
  6548  033F                     l6336:	
  6549  033F  01A0               	clrf	?___ftpack
  6550  0340  01A1               	clrf	?___ftpack+1
  6551  0341  01A2               	clrf	?___ftpack+2
  6552  0342  0008               	return
  6553  0343                     l6340:	
  6554  0343  0AA3               	incf	___ftpack@exp,f
  6555  0344  1003               	clrc
  6556  0345  0CA2               	rrf	___ftpack@arg+2,f
  6557  0346  0CA1               	rrf	___ftpack@arg+1,f
  6558  0347  0CA0               	rrf	___ftpack@arg,f
  6559  0348                     l6342:	
  6560  0348  30FE               	movlw	254
  6561  0349  0522               	andwf	___ftpack@arg+2,w
  6562  034A  1903               	btfsc	3,2
  6563  034B  2B57               	goto	l6346
  6564  034C  2B43               	goto	l6340
  6565  034D                     l6344:	
  6566  034D  0AA3               	incf	___ftpack@exp,f
  6567  034E  0AA0               	incf	___ftpack@arg,f
  6568  034F  1903               	skipnz
  6569  0350  0AA1               	incf	___ftpack@arg+1,f
  6570  0351  1903               	skipnz
  6571  0352  0AA2               	incf	___ftpack@arg+2,f
  6572  0353  1003               	clrc
  6573  0354  0CA2               	rrf	___ftpack@arg+2,f
  6574  0355  0CA1               	rrf	___ftpack@arg+1,f
  6575  0356  0CA0               	rrf	___ftpack@arg,f
  6576  0357                     l6346:	
  6577  0357  30FF               	movlw	255
  6578  0358  0522               	andwf	___ftpack@arg+2,w
  6579  0359  1903               	btfsc	3,2
  6580  035A  2B61               	goto	l6350
  6581  035B  2B4D               	goto	l6344
  6582  035C                     l6348:	
  6583  035C  03A3               	decf	___ftpack@exp,f
  6584  035D  1003               	clrc
  6585  035E  0DA0               	rlf	___ftpack@arg,f
  6586  035F  0DA1               	rlf	___ftpack@arg+1,f
  6587  0360  0DA2               	rlf	___ftpack@arg+2,f
  6588  0361                     l6350:	
  6589  0361  1FA1               	btfss	___ftpack@arg+1,7
  6590  0362  2B5C               	goto	l6348
  6591  0363  1C23               	btfss	___ftpack@exp,0
  6592  0364  13A1               	bcf	___ftpack@arg+1,7
  6593  0365  1003               	clrc
  6594  0366  0CA3               	rrf	___ftpack@exp,f
  6595  0367  0823               	movf	___ftpack@exp,w
  6596  0368  00A7               	movwf	??___ftpack+2
  6597  0369  01A6               	clrf	??___ftpack+1
  6598  036A  01A5               	clrf	??___ftpack
  6599  036B  0825               	movf	??___ftpack,w
  6600  036C  04A0               	iorwf	___ftpack@arg,f
  6601  036D  0826               	movf	??___ftpack+1,w
  6602  036E  04A1               	iorwf	___ftpack@arg+1,f
  6603  036F  0827               	movf	??___ftpack+2,w
  6604  0370  04A2               	iorwf	___ftpack@arg+2,f
  6605  0371  0824               	movf	___ftpack@sign,w
  6606  0372  1D03               	skipz
  6607  0373  17A2               	bsf	___ftpack@arg+2,7
  6608  0374  0008               	return
  6609  0375                     __end_of___ftpack:	
  6610  0375                     PL9:	
  6611  0375  083B               	movf	?___ftmul,w
  6612  0376  00D1               	movwf	_scale$4121
  6613  0377  083C               	movf	?___ftmul+1,w
  6614  0378  00D2               	movwf	_scale$4121+1
  6615  0379  083D               	movf	?___ftmul+2,w
  6616  037A  00D3               	movwf	_scale$4121+2
  6617  037B  300A               	movlw	10
  6618  037C  00A0               	movwf	?___awmod
  6619  037D  01A1               	clrf	?___awmod+1
  6620  037E  0854               	movf	scale@scl,w
  6621  037F  00A2               	movwf	?___awmod+2
  6622  0380  01A3               	clrf	?___awmod+3
  6623  0381  0008               	return
  6624  0382                     PL10:	
  6625  0382  0820               	movf	?___awmod,w
  6626  0383  00CD               	movwf	??_scale
  6627  0384  0821               	movf	?___awmod+1,w
  6628  0385  00CE               	movwf	??_scale+1
  6629  0386  084D               	movf	??_scale,w
  6630  0387  074D               	addwf	??_scale,w
  6631  0388  074D               	addwf	??_scale,w
  6632  0389  0008               	return
  6633  038A                     PL11:	
  6634  038A  0826               	movf	?___awdiv,w
  6635  038B  00CF               	movwf	??_scale+2
  6636  038C  0827               	movf	?___awdiv+1,w
  6637  038D  00D0               	movwf	??_scale+3
  6638  038E  084F               	movf	??_scale+2,w
  6639  038F  074F               	addwf	??_scale+2,w
  6640  0390  074F               	addwf	??_scale+2,w
  6641  0391  0008               	return
  6642  0392                     PL12:	
  6643  0392  083B               	movf	?___ftmul,w
  6644  0393  00CA               	movwf	?_scale
  6645  0394  083C               	movf	?___ftmul+1,w
  6646  0395  00CB               	movwf	?_scale+1
  6647  0396  083D               	movf	?___ftmul+2,w
  6648  0397  00CC               	movwf	?_scale+2
  6649  0398  0008               	return
  6650  0399                     PL16:	
  6651  0399  00A6               	movwf	?___awdiv
  6652  039A  01A7               	clrf	?___awdiv+1
  6653  039B  0854               	movf	scale@scl,w
  6654  039C  00A2               	movwf	?___awmod+2
  6655  039D  01A3               	clrf	?___awmod+3
  6656  039E  1BA2               	btfsc	?___awmod+2,7
  6657  039F  03A3               	decf	?___awmod+3,f
  6658  03A0  3064               	movlw	100
  6659  03A1  00A0               	movwf	?___awmod
  6660  03A2  01A1               	clrf	?___awmod+1
  6661  03A3  0008               	return
  6662  03A4                     PL20:	
  6663  03A4  07C5               	addwf	___ftmul@f3_as_product,f
  6664  03A5  083F               	movf	___ftmul@f2+1,w
  6665  03A6  1103               	clrz
  6666  03A7  1803               	skipnc
  6667  03A8  0A3F               	incf	___ftmul@f2+1,w
  6668  03A9  1D03               	btfss	3,2
  6669  03AA  07C6               	addwf	___ftmul@f3_as_product+1,f
  6670  03AB  0840               	movf	___ftmul@f2+2,w
  6671  03AC  1103               	clrz
  6672  03AD  0008               	return
  6673  03AE                     PL22:	
  6674  03AE  0826               	movf	?___awdiv,w
  6675  03AF  00CD               	movwf	??_scale
  6676  03B0  0827               	movf	?___awdiv+1,w
  6677  03B1  00CE               	movwf	??_scale+1
  6678  03B2  084D               	movf	??_scale,w
  6679  03B3  074D               	addwf	??_scale,w
  6680  03B4  074D               	addwf	??_scale,w
  6681  03B5  0008               	return
  6682  03B6                     PL24:	
  6683  03B6  00BD               	movwf	?___ftmul+2
  6684  03B7  3064               	movlw	100
  6685  03B8  00A6               	movwf	?___awdiv
  6686  03B9  01A7               	clrf	?___awdiv+1
  6687  03BA  0854               	movf	scale@scl,w
  6688  03BB  00A8               	movwf	?___awdiv+2
  6689  03BC  01A9               	clrf	?___awdiv+3
  6690  03BD  0008               	return
  6691  03BE                     PL25:	
  6692  03BE  00BD               	movwf	?___ftmul+2
  6693  03BF  0851               	movf	_scale$4121,w
  6694  03C0  00BE               	movwf	?___ftmul+3
  6695  03C1  0852               	movf	_scale$4121+1,w
  6696  03C2  00BF               	movwf	?___ftmul+4
  6697  03C3  0853               	movf	_scale$4121+2,w
  6698  03C4  00C0               	movwf	?___ftmul+5
  6699  03C5  0008               	return
  6700  03C6                     PL26:	
  6701  03C6  00BD               	movwf	?___ftmul+2
  6702  03C7  300A               	movlw	10
  6703  03C8  00A6               	movwf	?___awdiv
  6704  03C9  01A7               	clrf	?___awdiv+1
  6705  03CA  0854               	movf	scale@scl,w
  6706  03CB  00A8               	movwf	?___awdiv+2
  6707  03CC  01A9               	clrf	?___awdiv+3
  6708  03CD  0008               	return
  6709                           
  6710                           	psect	text784
  6711  1734                     __ptext784:	
  6712 ;; =============== function ___bmul ends ============
  6713                           
  6714                           
  6715 ;; *************** function __div_to_l_ *****************
  6716 ;; Defined at:
  6717 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;  f1              3    0[BANK0 ] unsigned char 
  6720 ;;  f2              3    3[BANK0 ] unsigned char 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  quot            4   14[BANK0 ] unsigned long 
  6723 ;;  exp1            1   19[BANK0 ] unsigned char 
  6724 ;;  cntr            1   18[BANK0 ] unsigned char 
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  4    0[BANK0 ] unsigned long 
  6727 ;; Registers used:
  6728 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6729 ;; Tracked objects:
  6730 ;;		On entry : 0/0
  6731 ;;		On exit  : 60/0
  6732 ;;		Unchanged: FFE9F/0
  6733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6734 ;;      Params:         0       6       0       0       0
  6735 ;;      Locals:         0       6       0       0       0
  6736 ;;      Temps:          0       8       0       0       0
  6737 ;;      Totals:         0      20       0       0       0
  6738 ;;Total ram usage:       20 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:    2
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_printf
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747  1734                     __div_to_l_:	
  6748                           
  6749                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6750  1734  3020               	movlw	low __div_to_l_@f1
  6751  1735  0084               	movwf	4
  6752  1736  1383               	bcf	3,7	;select IRP bank0
  6753  1737  0800               	movf	0,w
  6754  1738  1283               	bcf	3,5	;RP0=0, select bank0
  6755  1739  1303               	bcf	3,6	;RP1=0, select bank0
  6756  173A  00A6               	movwf	??__div_to_l_
  6757  173B  0A84               	incf	4,f
  6758  173C  0800               	movf	0,w
  6759  173D  00A7               	movwf	??__div_to_l_+1
  6760  173E  0A84               	incf	4,f
  6761  173F  0800               	movf	0,w
  6762  1740  00A8               	movwf	??__div_to_l_+2
  6763  1741  0A84               	incf	4,f
  6764  1742  0800               	movf	0,w
  6765  1743  00A9               	movwf	??__div_to_l_+3
  6766  1744  1003               	clrc
  6767  1745  0D28               	rlf	??__div_to_l_+2,w
  6768  1746  0D29               	rlf	??__div_to_l_+3,w
  6769  1747  00B3               	movwf	__div_to_l_@exp1
  6770  1748  08B3               	movf	__div_to_l_@exp1,f
  6771  1749  1D03               	skipz
  6772  174A  2F50               	goto	l6216
  6773  174B                     l6214:	
  6774  174B  01A0               	clrf	?__div_to_l_
  6775  174C  01A1               	clrf	?__div_to_l_+1
  6776  174D  01A2               	clrf	?__div_to_l_+2
  6777  174E  01A3               	clrf	?__div_to_l_+3
  6778  174F  0008               	return
  6779  1750                     l6216:	
  6780  1750  3023               	movlw	low __div_to_l_@f2
  6781  1751  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  6782  1754  1003               	clrc
  6783  1755  0D28               	rlf	??__div_to_l_+2,w
  6784  1756  0D29               	rlf	??__div_to_l_+3,w
  6785  1757  00B2               	movwf	__div_to_l_@cntr
  6786  1758  08B2               	movf	__div_to_l_@cntr,f
  6787  1759  1903               	btfsc	3,2
  6788  175A  2F4B               	goto	l6214
  6789  175B  3020               	movlw	low __div_to_l_@f1
  6790  175C  0084               	movwf	4
  6791  175D  3080               	movlw	128
  6792  175E  0A84               	incf	4,f
  6793  175F  0A84               	incf	4,f
  6794  1760  0480               	iorwf	0,f
  6795  1761  3020               	movlw	low __div_to_l_@f1
  6796  1762  0A84               	incf	4,f
  6797  1763  0084               	movwf	4
  6798  1764  3023               	movlw	low __div_to_l_@f2
  6799  1765  0A84               	incf	4,f
  6800  1766  0A84               	incf	4,f
  6801  1767  0A84               	incf	4,f
  6802  1768  0180               	clrf	0
  6803  1769  0084               	movwf	4
  6804  176A  3080               	movlw	128
  6805  176B  0A84               	incf	4,f
  6806  176C  0A84               	incf	4,f
  6807  176D  0480               	iorwf	0,f
  6808  176E  3023               	movlw	low __div_to_l_@f2
  6809  176F  0A84               	incf	4,f
  6810  1770  0084               	movwf	4
  6811  1771  307F               	movlw	127
  6812  1772  0A84               	incf	4,f
  6813  1773  0A84               	incf	4,f
  6814  1774  0A84               	incf	4,f
  6815  1775  0180               	clrf	0
  6816  1776  01AE               	clrf	__div_to_l_@quot
  6817  1777  01AF               	clrf	__div_to_l_@quot+1
  6818  1778  01B0               	clrf	__div_to_l_@quot+2
  6819  1779  01B1               	clrf	__div_to_l_@quot+3
  6820  177A  02B3               	subwf	__div_to_l_@exp1,f
  6821  177B  30A0               	movlw	160
  6822  177C  0732               	addwf	__div_to_l_@cntr,w
  6823  177D  00A6               	movwf	??__div_to_l_
  6824  177E  02B3               	subwf	__div_to_l_@exp1,f
  6825  177F  3020               	movlw	32
  6826  1780  00B2               	movwf	__div_to_l_@cntr
  6827  1781                     l6230:	
  6828  1781  3023               	movlw	low __div_to_l_@f2
  6829  1782  1003               	clrc
  6830  1783  0DAE               	rlf	__div_to_l_@quot,f
  6831  1784  0DAF               	rlf	__div_to_l_@quot+1,f
  6832  1785  0DB0               	rlf	__div_to_l_@quot+2,f
  6833  1786  0DB1               	rlf	__div_to_l_@quot+3,f
  6834  1787  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  6835  178A  3020               	movlw	low __div_to_l_@f1
  6836  178B  0084               	movwf	4
  6837  178C  0800               	movf	0,w
  6838  178D  00AA               	movwf	??__div_to_l_+4
  6839  178E  0A84               	incf	4,f
  6840  178F  0800               	movf	0,w
  6841  1790  00AB               	movwf	??__div_to_l_+5
  6842  1791  0A84               	incf	4,f
  6843  1792  0800               	movf	0,w
  6844  1793  00AC               	movwf	??__div_to_l_+6
  6845  1794  0A84               	incf	4,f
  6846  1795  0800               	movf	0,w
  6847  1796  00AD               	movwf	??__div_to_l_+7
  6848  1797  0829               	movf	??__div_to_l_+3,w
  6849  1798  022D               	subwf	??__div_to_l_+7,w
  6850  1799  1D03               	skipz
  6851  179A  2FA5               	goto	u2185
  6852  179B  0828               	movf	??__div_to_l_+2,w
  6853  179C  022C               	subwf	??__div_to_l_+6,w
  6854  179D  1D03               	skipz
  6855  179E  2FA5               	goto	u2185
  6856  179F  0827               	movf	??__div_to_l_+1,w
  6857  17A0  022B               	subwf	??__div_to_l_+5,w
  6858  17A1  1D03               	skipz
  6859  17A2  2FA5               	goto	u2185
  6860  17A3  0826               	movf	??__div_to_l_,w
  6861  17A4  022A               	subwf	??__div_to_l_+4,w
  6862  17A5                     u2185:	
  6863  17A5  1C03               	skipc
  6864  17A6  2FC1               	goto	l3600
  6865  17A7  3023               	movlw	low __div_to_l_@f2
  6866  17A8  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  6867  17AB  3020               	movlw	low __div_to_l_@f1
  6868  17AC  0084               	movwf	4
  6869  17AD  0826               	movf	??__div_to_l_,w
  6870  17AE  0280               	subwf	0,f
  6871  17AF  0A84               	incf	4,f
  6872  17B0  0827               	movf	??__div_to_l_+1,w
  6873  17B1  1C03               	skipc
  6874  17B2  0F27               	incfsz	??__div_to_l_+1,w
  6875  17B3  0280               	subwf	0,f
  6876  17B4  0A84               	incf	4,f
  6877  17B5  0828               	movf	??__div_to_l_+2,w
  6878  17B6  1C03               	skipc
  6879  17B7  0F28               	incfsz	??__div_to_l_+2,w
  6880  17B8  0280               	subwf	0,f
  6881  17B9  0A84               	incf	4,f
  6882  17BA  0829               	movf	??__div_to_l_+3,w
  6883  17BB  1C03               	skipc
  6884  17BC  0A29               	incf	??__div_to_l_+3,w
  6885  17BD  0280               	subwf	0,f
  6886  17BE  3003               	movlw	3
  6887  17BF  0284               	subwf	4,f
  6888  17C0  142E               	bsf	__div_to_l_@quot,0
  6889  17C1                     l3600:	
  6890  17C1  3020               	movlw	low __div_to_l_@f1
  6891  17C2  0084               	movwf	4
  6892  17C3  1003               	clrc
  6893  17C4  0D80               	rlf	0,f
  6894  17C5  0A84               	incf	4,f
  6895  17C6  0D80               	rlf	0,f
  6896  17C7  0A84               	incf	4,f
  6897  17C8  0D80               	rlf	0,f
  6898  17C9  0A84               	incf	4,f
  6899  17CA  0D80               	rlf	0,f
  6900  17CB  0BB2               	decfsz	__div_to_l_@cntr,f
  6901  17CC  2F81               	goto	l6230
  6902  17CD  1FB3               	btfss	__div_to_l_@exp1,7
  6903  17CE  2FDC               	goto	l6248
  6904  17CF  0833               	movf	__div_to_l_@exp1,w
  6905  17D0  3A80               	xorlw	128
  6906  17D1  3E9F               	addlw	159
  6907  17D2  1C03               	btfss	3,0
  6908  17D3  2F4B               	goto	l6214
  6909  17D4                     l6244:	
  6910  17D4  1003               	clrc
  6911  17D5  0CB1               	rrf	__div_to_l_@quot+3,f
  6912  17D6  0CB0               	rrf	__div_to_l_@quot+2,f
  6913  17D7  0CAF               	rrf	__div_to_l_@quot+1,f
  6914  17D8  0CAE               	rrf	__div_to_l_@quot,f
  6915  17D9  0FB3               	incfsz	__div_to_l_@exp1,f
  6916  17DA  2FD4               	goto	l6244
  6917  17DB  2FEA               	goto	l6254
  6918  17DC                     l6248:	
  6919  17DC  3020               	movlw	32
  6920  17DD  0233               	subwf	__div_to_l_@exp1,w
  6921  17DE  1803               	btfsc	3,0
  6922  17DF  2F4B               	goto	l6214
  6923  17E0                     l3608:	
  6924  17E0  08B3               	movf	__div_to_l_@exp1,f
  6925  17E1  1903               	btfsc	3,2
  6926  17E2  2FEA               	goto	l6254
  6927  17E3  1003               	clrc
  6928  17E4  0DAE               	rlf	__div_to_l_@quot,f
  6929  17E5  0DAF               	rlf	__div_to_l_@quot+1,f
  6930  17E6  0DB0               	rlf	__div_to_l_@quot+2,f
  6931  17E7  0DB1               	rlf	__div_to_l_@quot+3,f
  6932  17E8  03B3               	decf	__div_to_l_@exp1,f
  6933  17E9  2FE0               	goto	l3608
  6934  17EA                     l6254:	
  6935  17EA  0831               	movf	__div_to_l_@quot+3,w
  6936  17EB  00A3               	movwf	?__div_to_l_+3
  6937  17EC  0830               	movf	__div_to_l_@quot+2,w
  6938  17ED  00A2               	movwf	?__div_to_l_+2
  6939  17EE  082F               	movf	__div_to_l_@quot+1,w
  6940  17EF  00A1               	movwf	?__div_to_l_+1
  6941  17F0  082E               	movf	__div_to_l_@quot,w
  6942  17F1  00A0               	movwf	?__div_to_l_
  6943  17F2  0008               	return
  6944  17F3                     __end_of__div_to_l_:	
  6945  17F3                     PL4:	
  6946  17F3  0084               	movwf	4
  6947  17F4  0800               	movf	0,w
  6948  17F5  00A6               	movwf	??__div_to_l_
  6949  17F6  0A84               	incf	4,f
  6950  17F7  0800               	movf	0,w
  6951  17F8  00A7               	movwf	??__div_to_l_+1
  6952  17F9  0A84               	incf	4,f
  6953  17FA  0800               	movf	0,w
  6954  17FB  00A8               	movwf	??__div_to_l_+2
  6955  17FC  0A84               	incf	4,f
  6956  17FD  0800               	movf	0,w
  6957  17FE  00A9               	movwf	??__div_to_l_+3
  6958  17FF  0008               	return
  6959                           
  6960                           	psect	text788
  6961  1671                     __ptext788:	
  6962 ;; =============== function _isprint ends ============
  6963                           
  6964                           
  6965 ;; *************** function _ngat *****************
  6966 ;; Defined at:
  6967 ;;		line 68 in file "D:\TTVXL\Project TTVXL\BT04week12ttvxl\BT04week12ttvxl.c"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;		None
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;		None
  6972 ;; Return value:  Size  Location     Type
  6973 ;;		None               void
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0, pclath, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 60/0
  6979 ;;		Unchanged: FFF9F/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6981 ;;      Params:         0       0       0       0       0
  6982 ;;      Locals:         0       0       0       0       0
  6983 ;;      Temps:          2       0       0       0       0
  6984 ;;      Totals:         2       0       0       0       0
  6985 ;;Total ram usage:        2 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    1
  6988 ;; This function calls:
  6989 ;;		_abs
  6990 ;; This function is called by:
  6991 ;;		Interrupt level 1
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994  1671                     _ngat:	
  6995                           
  6996                           ;BT04week12ttvxl.c: 69: if(CCP1IF)
  6997  1671  1283               	bcf	3,5	;RP0=0, select bank0
  6998  1672  1303               	bcf	3,6	;RP1=0, select bank0
  6999  1673  1D0C               	btfss	12,2
  7000  1674  2E8E               	goto	L21
  7001                           
  7002                           ;BT04week12ttvxl.c: 70: {
  7003                           ;BT04week12ttvxl.c: 71: xung = abs(CCPR1-count_old);
  7004  1675  0816               	movf	22,w	;volatile
  7005  1676  00F1               	movwf	?_abs+1
  7006  1677  0815               	movf	21,w	;volatile
  7007  1678  00F0               	movwf	?_abs
  7008  1679  0876               	movf	_count_old,w
  7009  167A  02F0               	subwf	?_abs,f
  7010  167B  0877               	movf	_count_old+1,w
  7011  167C  1C03               	skipc
  7012  167D  03F1               	decf	?_abs+1,f
  7013  167E  02F1               	subwf	?_abs+1,f
  7014  167F  2695               	fcall	_abs
  7015  1680  0870               	movf	?_abs,w
  7016  1681  00E9               	movwf	_xung
  7017  1682  0871               	movf	?_abs+1,w
  7018  1683  00EA               	movwf	_xung+1
  7019  1684  3000               	movlw	0
  7020  1685  1BEA               	btfsc	_xung+1,7
  7021  1686  30FF               	movlw	255
  7022  1687  00EB               	movwf	_xung+2
  7023  1688  00EC               	movwf	_xung+3
  7024                           
  7025                           ;BT04week12ttvxl.c: 72: count_old = CCPR1;
  7026  1689  0816               	movf	22,w	;volatile
  7027  168A  00F7               	movwf	_count_old+1	;volatile
  7028  168B  0815               	movf	21,w	;volatile
  7029  168C  00F6               	movwf	_count_old	;volatile
  7030                           
  7031                           ;BT04week12ttvxl.c: 73: }
  7032                           ;BT04week12ttvxl.c: 74: CCP1IF = 0;
  7033  168D  110C               	bcf	12,2
  7034  168E                     L21:	
  7035  168E  0875               	movf	??_ngat+1,w
  7036  168F  008A               	movwf	10
  7037  1690  0E74               	swapf	??_ngat^(0+-128),w
  7038  1691  0083               	movwf	3
  7039  1692  0EFE               	swapf	126,f
  7040  1693  0E7E               	swapf	126,w
  7041  1694  0009               	retfie
  7042  1695                     __end_of_ngat:	
  7043  1695                     __ptext789:	
  7044 ;; =============== function _ngat ends ============
  7045                           
  7046                           
  7047 ;; *************** function _abs *****************
  7048 ;; Defined at:
  7049 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\abs.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  a               2    0[COMMON] int 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  2    0[COMMON] int 
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0
  7058 ;; Tracked objects:
  7059 ;;		On entry : 60/0
  7060 ;;		On exit  : 60/0
  7061 ;;		Unchanged: FFF9F/0
  7062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7063 ;;      Params:         2       0       0       0       0
  7064 ;;      Locals:         0       0       0       0       0
  7065 ;;      Temps:          2       0       0       0       0
  7066 ;;      Totals:         4       0       0       0       0
  7067 ;;Total ram usage:        4 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_ngat
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075  1695                     _abs:	
  7076                           
  7077                           ; Regs used in _abs: [wreg+status,2+status,0]
  7078  1695  1FF1               	btfss	abs@a+1,7
  7079  1696  0008               	return
  7080  1697  0970               	comf	abs@a,w
  7081  1698  00F2               	movwf	??_abs
  7082  1699  0971               	comf	abs@a+1,w
  7083  169A  00F3               	movwf	??_abs+1
  7084  169B  0AF2               	incf	??_abs,f
  7085  169C  1903               	skipnz
  7086  169D  0AF3               	incf	??_abs+1,f
  7087  169E  0872               	movf	??_abs,w
  7088  169F  00F0               	movwf	?_abs
  7089  16A0  0873               	movf	??_abs+1,w
  7090  16A1  00F1               	movwf	?_abs+1
  7091  16A2  0008               	return
  7092  16A3                     __end_of_abs:	
  7093                           
  7094                           	psect	intentry
  7095  0004                     __pintentry:	
  7096                           ; Regs used in _ngat: [wreg+status,2+status,0+pclath+cstack]
  7097                           
  7098  0004                     interrupt_function:	
  7099  007E                     saved_w	set	btemp
  7100  0004  00FE               	movwf	btemp
  7101  0005  0E03               	swapf	3,w
  7102  0006  00F4               	movwf	??_ngat
  7103  0007  080A               	movf	10,w
  7104  0008  00F5               	movwf	??_ngat+1
  7105  0009  160A  118A  2E71   	ljmp	_ngat
  7106                           
  7107                           	psect	text790
  7108  0000                     __ptext790:	
  7109 ;; =============== function _abs ends ============
  7110                           
  7111  007E                     btemp	set	126	;btemp
  7112  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 25 11:33:46 2022

         ___altoft@exp 002C                      _f 006D                      _t 00B9                      pc 0002  
       ___bmul@product 002A          ___altoft@sign 002D           ___awdiv@sign 002B                     fsr 0004  
  ___wmul@multiplicand 0022           ___ftadd@exp1 0055           ___ftadd@exp2 0054          ?_lcd_put_byte 0020  
         ___ftadd@sign 0053                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RD3 0043                    _RD4 0044                    _RD5 0045                    _RD6 0046  
                  _RD7 0047                    _abs 1695                    fsr0 0004                    indf 0000  
         ___awmod@sign 0025           ___ftdiv@cntr 0031           ___ftdiv@sign 0036                   ?_abs 0070  
                 l2130 0000                   l1067 0000                   l2127 0000                   l2303 0D7E  
                 l2224 08A0                   l2161 0000                   l2209 0824                   l2138 0000  
                 l3400 0060                   l3313 0000                   l3307 0000                   l3340 06B7  
                 l2269 0BA5                   l3343 0000                   l3600 17C1                   l3601 0000  
                 l3427 0E51                   l3371 078A                   l3292 0000                   l3460 0000  
                 l3349 0000                   l3470 0000                   l3542 0000                   l3550 0000  
                 l6200 0000                   l3608 17E0                   l3528 0000                   l3297 0000  
                 l3393 0000                   l6202 0FE9                   l3474 0000                   l6212 0000  
                 l3565 0FED                   l3558 0000                   l6230 1781                   l6222 0000  
                 l6214 174B                   l6208 0FF7                   l6232 0000                   l6224 0000  
                 l6216 1750                   l6320 0000                   l8000 0CC1                   l3489 0000  
                 l6226 0000                   l6322 0000                   l6314 0000                   l6180 0000  
                 l6172 0000                   l6164 0000                   l6244 17D4                   l6236 0000  
                 l6228 0000                   l6316 0000                   l6340 0343                   l6332 0000  
                 l8020 0D0A                   l8012 0CE8                   l6182 0FB8                   l6174 0000  
                 l6166 0F96                   l6254 17EA                   l6246 0000                   l6238 0000  
                 l6326 06DE                   l6318 06CA                   l6350 0361                   l6342 0348  
                 l6334 0000                   l8030 0000                   l8014 0CEB                   l8006 0CCE  
                 l6192 0000                   l6184 0000                   l6176 0000                   l6168 0F9B  
                 l6248 17DC                   l6328 0000                   l6344 034D                   l6336 033F  
                 l6360 0000                   l8032 0D23                   l7410 0000                   l6178 0000  
                 l6354 0000                   l6346 0357                   l6370 0000                   l6362 0E21  
                 l6610 0731                   l6602 0000                   l8034 0D27                   l8026 0D14  
                 l8018 0D07                   l8050 0000                   l7420 0000                   l6188 0000  
                 l6356 0000                   l6348 035C                   l6380 0E45                   l6372 0000  
                 l6364 0E26                   l7500 0000                   l6620 0747                   l6604 0000  
                 l6700 0000                   l8036 0000                   l8044 0D3C                   l8060 0000  
                 l8052 0000                   l7422 0000                   l6198 0FE1                   l6358 0000  
                 l6390 0E5B                   l6382 0000                   l6374 0000                   l6366 0000  
                 l7502 024B                   l6630 0000                   l6622 0000                   l6614 0738  
                 l6606 0000                   l6710 0073                   l6702 0000                   l8038 0D34  
                 l8046 080A                   l8070 0000                   l8062 0000                   l8054 0000  
                 l7416 0595                   l7408 0000                   l7440 0000                   l7432 0000  
                 l6392 0000                   l6384 0E4D                   l6368 0000                   l7512 0259  
                 l7504 0000                   l7600 0000                   l6560 0000                   l6552 0000  
                 l6640 0769                   l6632 0755                   l6616 0000                   l6720 0000  
                 l6704 0000                   l8080 0000                   l8072 0000                   l8064 0000  
                 l8056 0000                   l8048 0000                   l7442 0000                   l7434 032B  
                 l7450 0E00                   l6394 0E69                   l7522 0000                   l7514 0000  
                 l7602 0EB1                   l6570 050F                   l6562 0000                   l6554 0000  
                 l6650 0781                   l6634 0000                   l6642 076E                   l6714 0000  
                 l6706 0000                   l6730 02CB                   l6810 0000                   l8090 0000  
                 l8082 0000                   l8074 0000                   l8066 0000                   l8058 0000  
                 l7428 0DFC                   l7524 0270                   l7540 0D95                   l7532 0000  
                 l7612 0000                   l6580 053D                   l6572 0000                   l6564 0000  
                 l6556 0000                   l6652 0786                   l6644 0772                   l6628 0000  
                 l6708 0000                   l6740 0000                   l6724 0000                   l6812 0000  
                 l8092 0000                   l8084 0000                   l8076 0000                   l8068 0000  
                 l7454 0E08                   l7470 06B1                   l7526 0000                   l7518 0000  
                 l7614 0287                   l7606 0000                   l6582 054A                   l6574 0000  
                 l6566 04F7                   l6590 0000                   l6662 0000                   l6646 0000  
                 l6638 0764                   l6718 0000                   l6750 0000                   l6742 0000  
                 l6830 04A8                   l6822 0490                   l6814 0000                   l6806 0000  
                 l7702 0000                   l8094 0000                   l8086 16C4                   l8078 0000  
                 l7456 0000                   l7448 0000                   l7464 0000                   l7528 0278  
                 l7552 0000                   l7560 0000                   l7632 0000                   l7608 0000  
                 l6584 0000                   l6576 0000                   l6568 0504                   l6592 0000  
                 l6672 0000                   l6664 07A0                   l6656 0000                   l6680 0000  
                 l6760 0000                   l6752 0000                   l6744 0000                   l6736 02DC  
                 l6816 0000                   l6808 0000                   l7720 015B                   l8096 0000  
                 l8088 0000                   l7458 0000                   l7482 0000                   l7474 0000  
                 l7466 0000                   l7490 0000                   l7546 0000                   l7570 0000  
                 l7626 029A                   l7634 02AD                   l7618 028E                   l6586 0000  
                 l6578 0532                   l6594 0000                   l6674 0000                   l6666 0000  
                 l6658 0795                   l6770 030D                   l6762 0000                   l6754 02ED  
                 l6746 0000                   l6738 0000                   l7642 0000                   l6842 04CC  
                 l6834 04B4                   l6826 049C                   l6818 0484                   l7714 0116  
                 l7706 0000                   l7810 08A2                   l7802 0000                   l7468 0000  
                 l7484 06C4                   l7548 0DBA                   l7572 0000                   l7564 0DD2  
                 l7580 0000                   l7636 0000                   l6596 0000                   l6588 0000  
                 l6676 07BC                   l6668 0000                   l6692 0000                   l6772 0000  
                 l6764 0000                   l6748 0000                   l7652 0021                   l7644 0000  
                 l7732 01DC                   l7724 0172                   l7804 0874                   l7478 0000  
                 l7494 0000                   l7590 0E86                   l7582 0000                   l7638 02B5  
                 l6598 0000                   l6694 0000                   l6686 004F                   l6774 0000  
                 l6766 0303                   l6758 02F7                   l7654 002C                   l7646 0000  
                 l7662 0EC4                   l6838 04C0                   l7670 0000                   l7742 0000  
                 l7750 03E8                   l7910 0AD8                   l7902 0AA4                   l7830 0000  
                 l7822 08C9                   l7814 08A5                   l7806 089C                   l7496 0242  
                 l7488 0000                   l7568 0DE1                   l7592 0000                   l6696 0000  
                 l6776 0000                   l7664 0ECF                   l7672 03D5                   l7680 0000  
                 l7744 0000                   l7760 0405                   l7752 03EE                   l7920 0B09  
                 l7912 0000                   l7840 0000                   l7832 0905                   l7824 0000  
                 l7816 08B9                   l7808 0000                   l6698 0000                   l7658 0000  
                 l7674 03D6                   l7690 0631                   l7738 0221                   l7754 03F5  
                 l7930 0B21                   l7842 0000                   l7834 0000                   l7826 0000  
                 l7596 0000                   l7676 0000                   l7668 0000                   l7684 0000  
                 l7756 03F9                   l7764 040C                   l7748 0000                   l7940 0B3C  
                 l7932 0000                   l7924 0B0C                   l7916 0B01                   l7908 0000  
                 l7860 099D                   l7852 0963                   l7844 0000                   l7780 0826  
                 l7678 03DF                   l7694 0000                   l7766 0000                   l7950 0B81  
                 l7942 0B68                   l7926 0000                   l7934 0B2A                   l7854 0000  
                 l7846 0000                   l7838 0000                   l7790 0000                   l7782 0831  
                 l7774 081F                   l7928 0B15                   l7880 0A20                   l7856 0000  
                 l7848 0000                   l7864 09AF                   l7792 0865                   l7776 0000  
                 l7768 0000                   l7698 0685                   l7970 0000                   l7954 0B90  
                 l7946 0000                   l7890 0000                   l7786 0840                   l7972 0000  
                 l7964 0000                   l7956 0000                   l7948 0B6C                   l7892 0A61  
                 l7876 0A0F                   l7868 09E4                   l7796 0000                   l7788 0000  
                 l7990 0000                   l7966 0C33                   l7958 0BC8                   l7894 0000  
                 l7886 0000                   l7798 0000                   l7992 0C95                   l7984 0C61  
                 l7896 0AA2                   l7888 0000                   l7968 0C41                   l7978 0C5F  
                 l7996 0CA9                   STR_1 107C                   STR_2 1087                   u2095 0FC7  
                 u2440 0000                   u2185 17A5                   u2445 0E2A                   u3165 0081  
                 u2800 0502                   u4225 0DA3                   u4305 0E99                   u5107 0461  
                 u2900 0548                   u2820 050D                   u5117 046F                   u4175 0262  
                 u5207 0523                   u5127 047D                   u2920 0553                   u2840 0519  
                 u5217 0557                   u5137 056D                   u5227 055D                   u5147 0573  
                 _PEIE 005E                   u2860 0530                   u2780 04F5                   u4365 02A0  
                 u5157 057D                   u5077 0427                   u2934 0555                   u2854 051B  
                 u4630 0000                   u5167 0583                   u5087 043A                   u2880 053B  
                 u5177 04E0                   u5097 044D                   u5187 04E6                   u4715 0A0D  
                 u4635 0919                   u5197 051D                   u4735 0AD1                   u4825 0B75  
                 u4915 0CA3                   u4835 0B8B                   u4675 09B9                   u4925 0CB9  
                 u4685 09EE                   u4785 0B1E                   u4795 0B33                   u4965 0CDE  
                 u4975 0CF9                   u4895 0C8E                   abs@a 0070                   _main 16A3  
                 _ngat 1671           ___ftpack@arg 0020           ___ftpack@exp 0023           lcd_busy@busy 0021  
                 btemp 007E                   _xung 0069                   start 000C      ___bmul@multiplier 002B  
         ___ftmul@cntr 0048           ___ftmul@sign 0049           ___fttol@exp1 003A                  ??_abs 0072  
         ___fttol@lval 0036         ??_lcd_put_byte 0021                  ?_main 0070                  ?_ngat 0070  
      __end_of___awdiv 027D        __end_of___lbdiv 06C6        __end_of___ftadd 07D0                  _CCPR1 0015  
      __end_of___awmod 02BA        __end_of___lbmod 06E2        __end_of___ftdiv 00A6        __end_of___ftneg 0EC2  
                _ANSEL 0188        __end_of___lldiv 0EBA        __end_of___ftmul 0329        ___awdiv@divisor 0026  
      __end_of___llmod 0DC3        __end_of___ftsub 070E        __end_of___fttol 0E72        ___awdiv@counter 002A  
                _TMR1H 000F                  _TMR1L 000E                  _TRISD 0088           ___lltoft@exp 002C  
                _scale 00A6        __end_of_isdigit 0DFE          ___ftpack@sign 0024                  _putch 0D7F  
      __end_of_isprint 0597                  pclath 000A                  status 0003                  wtemp0 007E  
      ___lbdiv@divisor 0025        ___lbdiv@counter 0027           __end_of_main 1734           __end_of_ngat 1695  
        lcd_gotoxy@col 0026          lcd_gotoxy@row 0025                 ??_main 0076          ___fttol@sign1 0035  
               ??_ngat 0074   __size_of__tdiv_to_l_ 0077                 _CCP1IE 0462                 _CCP1IF 0062  
     __end_of___altoft 003E       ___llmod@dividend 0031                 ?_scale 004A       ___awdiv@dividend 0028  
               ?_putch 0070       __end_of___ftpack 0375                 _ANSELH 0189       __end_of___lltoft 0EE2  
               i1l1071 0000                 i1l6130 0000                 _T1SYNC 0082                 i1l6134 0000  
               i1l6126 0000                 _TMR1GE 0086                 _TMR1CS 0081                 _TMR1ON 0080  
               _TRISA4 042C                 _TRISC2 043A                 _TRISD1 0441                 _TRISE0 0448  
               _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445  
               _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0589       __end_of_lcd_init 04D3  
     __end_of_lcd_putc 0415                 ___bmul 0329                 ___ftge 0DC3                 ___wmul 0DFE  
            ??___awdiv 0076              ??___lbdiv 0076              ??___ftadd 0050              ??___awmod 0076  
            ??___lbmod 0021              ??___ftdiv 002E              ??___ftneg 0076              ??___lldiv 0076  
            ??___ftmul 0041              ??___llmod 0076              ??___ftsub 0076              ??___fttol 0032  
               _fround 05A6       ___awdiv@quotient 002C        ___awmod@divisor 0020        ___awmod@counter 0024  
               _printf 0806          lcd_put_byte@b 0020  ___ftmul@f3_as_product 0045              ??_isdigit 0076  
               saved_w 007E              ??_isprint 0076                 putch@c 0029       ___lbdiv@dividend 0026  
      ___lbmod@divisor 0020             ___altoft@c 0028        ___lbmod@counter 0023   __end_of_lcd_put_byte 0562  
           ___ftadd@f1 004A             ___ftadd@f2 004D             ___ftge@ff1 0020             ___ftge@ff2 0023  
           ___ftdiv@f1 002B             ___ftdiv@f2 0028             ___ftdiv@f3 0032             ___ftneg@f1 0020  
  ___bmul@multiplicand 0029             ___ftmul@f1 003B             ___ftmul@f2 003E             ___ftsub@f1 0059  
           ___ftsub@f2 0056             ___fttol@f1 002E         __pcstackCOMMON 0070             ___lltoft@c 0028  
        __end_of_scale 0238          __end_of_putch 0D85       ___lbdiv@quotient 0028             __div_to_l_ 1734  
    lcd_gotoxy@address 0027        __div_to_l_@exp1 0033        __div_to_l_@cntr 0032                ??_scale 004D  
      __div_to_l_@quot 002E                ??_putch 0076             __pbssBANK0 0069             __pbssBANK1 00B9  
        __div_to_l_@f1 0020          __div_to_l_@f2 0023             __pmaintext 16A3                ?___bmul 0029  
              ?___ftge 0020                ?___wmul 0020             __pintentry 0004                _CCP1CON 0017  
            ?___altoft 0028                ?_fround 0056              ?___ftpack 0020                ?_printf 0060  
            ?___lltoft 0028                _T1CKPS0 0084                _T1CKPS1 0085             _lcd_gotoxy 03CE  
            ?_lcd_busy 0070              ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4121 0051  
      __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0238                ___lbdiv 06AB  
              ___ftadd 070E                ___awmod 027D                ___lbmod 06C6                ___ftdiv 003E  
              ___ftneg 0EBA                ___lldiv 0E72        __size_of___wmul 0019                ___ftmul 02BA  
              ___llmod 0D85                ___ftsub 06F8                ___fttol 0E17             ??___altoft 0076  
           ??___ftpack 0025        __size_of_fround 0105             ??___lltoft 0076        __size_of_printf 0579  
          ?__div_to_l_ 0020                _dpowers 1054           __size_of_abs 000E                _isdigit 0DEF  
     ___awmod@dividend 0022                _isprint 0589  __size_of_lcd_put_byte 008F             ??_lcd_busy 0020  
           ??_lcd_init 0025             ??_lcd_putc 0076   end_of_initialization 07DD         lcd_put_byte@rs 0023  
      ___lldiv@divisor 0020        ___lldiv@counter 002C                printf@c 00B8                printf@f 00AC  
       __tdiv_to_l_@f1 0020         __tdiv_to_l_@f2 0023          ??__tdiv_to_l_ 0026           _lcd_put_byte 04D3  
     ___lbmod@dividend 0022            ?_lcd_gotoxy 0025            ___lbmod@rem 0024            printf@integ 00A5  
          ___ftdiv@exp 0035            printf@width 00B1    __size_of__div_to_l_ 00BF            ___ftmul@exp 0044  
       __end_of___bmul 0337         __end_of___ftge 0DEF         __end_of___wmul 0E17         __end_of_fround 06AB  
       __end_of_printf 0D7F    start_initialization 07D0    __end_of__tdiv_to_l_ 1000            __end_of_abs 16A3  
      ___llmod@divisor 002D        ___llmod@counter 0035               ??___bmul 0076               ??___ftge 0076  
  __size_of_lcd_gotoxy 0018               ??___wmul 0076               ??_fround 0076               ??_printf 0064  
    __size_of___altoft 002F             fround@prec 005F      __size_of___ftpack 003E      __size_of___lltoft 0020  
          __pbssCOMMON 0076          __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3683 0020  
    __size_of_lcd_busy 0027      __size_of_lcd_init 00BE      __size_of_lcd_putc 002F               ?___awdiv 0026  
             ?___lbdiv 0025               ?___ftadd 004A               ?___awmod 0020               ?___lbmod 0020  
            __ptext760 06F8              __ptext761 00A6              __ptext770 0562              __ptext762 05A6  
            __ptext771 04D3              __ptext763 03CE              __ptext780 06C6              __ptext772 027D  
            __ptext764 0415              __ptext781 06AB              __ptext773 0E72              __ptext765 0EC2  
            __ptext757 0806              __ptext790 0000              __ptext782 0DFE              __ptext774 0DC3  
            __ptext766 000F              __ptext758 0D7F              __ptext783 0329              __ptext775 0EBA  
            __ptext767 02BA              __ptext759 03E6              __ptext784 1734              __ptext776 0D85  
            __ptext768 003E              __ptext785 0F89              __ptext777 0238              __ptext769 070E  
            __ptext786 0DEF              __ptext778 0E17              __ptext787 0589              __ptext779 0337  
            __ptext788 1671              __ptext789 1695               ?___ftdiv 0028               ?___ftneg 0020  
             ?___lldiv 0020               ?___ftmul 003B               ?___llmod 002D               ?___ftsub 0056  
            __npowers_ 1006               ?___fttol 002E              __pstrings 1000            __tdiv_to_l_ 0F89  
         ??__div_to_l_ 0026               ?_isdigit 0070              _count_old 0076               ?_isprint 0070  
       __size_of_scale 0192         __size_of_putch 0006      interrupt_function 0004         ___wmul@product 0024  
   __end_of__div_to_l_ 17F3            __stringbase 1005      ___wmul@multiplier 0020             printf@_val 00A8  
           printf@flag 00AD             printf@fval 00B3             printf@prec 00B6              lcd_putc@c 0028  
         ??_lcd_gotoxy 0076       lcd_put_byte@temp 0024           _isprint$3686 0020     __end_of_lcd_gotoxy 03E6  
     __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftdiv 0068       __size_of___ftneg 0008       __size_of___lldiv 0048  
             ___altoft 000F       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016  
     __size_of___fttol 005B               ___ftpack 0337            _fround$4120 0059            _fround$4119 005C  
             ___lltoft 0EC2       __size_of_isdigit 000F       __size_of_isprint 000E               __powers_ 102D  
             _lcd_busy 0562               _lcd_init 0415               _lcd_putc 03E6          __size_of_main 0091  
        __size_of_ngat 0024              printf@exp 00AF               isdigit@c 0021               scale@scl 0054  
             intlevel1 0000       __tdiv_to_l_@exp1 002E       __tdiv_to_l_@cntr 002D       __tdiv_to_l_@quot 0029  
     ___lldiv@dividend 0024               isprint@c 0021              stringcode 1000               printf@ap 00A4  
         ?__tdiv_to_l_ 0020            _printf$3173 00A0       ___lldiv@quotient 0028               stringdir 1000  
             stringtab 1000  
