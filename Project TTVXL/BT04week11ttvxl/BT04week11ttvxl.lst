

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Nov 06 01:55:35 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text554,local,class=CODE,delta=2
    13                           	psect	text559,local,class=CODE,delta=2
    14                           	psect	text560,local,class=CODE,delta=2
    15                           	psect	text564,local,class=CODE,delta=2
    16                           	psect	text567,local,class=CODE,delta=2
    17                           	psect	text582,local,class=CODE,delta=2
    18                           	psect	text586,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text589,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  000A                     	;#
    24                           
    25                           	psect	config
    26  2007  E3C2               	dw	58306	;#
    27                           
    28                           	psect	strings
    29  1000                     __pstrings:	
    30  1000                     stringtab:	
    31                           ;	global	stringdir,stringtab,__stringbase
    32                           
    33  1000                     stringcode:	
    34                           ;	String table - string pointers are 1 byte each
    35                           
    36  1000                     stringdir:	
    37  1000  3010               	movlw	high stringdir
    38  1001  008A               	movwf	10
    39  1002  0804               	movf	4,w
    40  1003  0A84               	incf	4,f
    41  1004  0782               	addwf	2,f
    42  1005                     __stringbase:	
    43  1005  3400               	retlw	0
    44  1006                     __npowers_:	
    45  1006  3400               	retlw	0
    46  1007  3480               	retlw	128
    47  1008  343F               	retlw	63
    48  1009  34CD               	retlw	205
    49  100A  34CC               	retlw	204
    50  100B  343D               	retlw	61
    51  100C  34D7               	retlw	215
    52  100D  3423               	retlw	35
    53  100E  343C               	retlw	60
    54  100F  3412               	retlw	18
    55  1010  3483               	retlw	131
    56  1011  343A               	retlw	58
    57  1012  34B7               	retlw	183
    58  1013  34D1               	retlw	209
    59  1014  3438               	retlw	56
    60  1015  34C6               	retlw	198
    61  1016  3427               	retlw	39
    62  1017  3437               	retlw	55
    63  1018  3438               	retlw	56
    64  1019  3486               	retlw	134
    65  101A  3435               	retlw	53
    66  101B  34C0               	retlw	192
    67  101C  34D6               	retlw	214
    68  101D  3433               	retlw	51
    69  101E  34CC               	retlw	204
    70  101F  342B               	retlw	43
    71  1020  3432               	retlw	50
    72  1021  3470               	retlw	112
    73  1022  3489               	retlw	137
    74  1023  3430               	retlw	48
    75  1024  34E7               	retlw	231
    76  1025  34DB               	retlw	219
    77  1026  342E               	retlw	46
    78  1027  34E5               	retlw	229
    79  1028  343C               	retlw	60
    80  1029  341E               	retlw	30
    81  102A  3442               	retlw	66
    82  102B  34A2               	retlw	162
    83  102C  340D               	retlw	13
    84  102D                     __powers_:	
    85  102D  3400               	retlw	0
    86  102E  3480               	retlw	128
    87  102F  343F               	retlw	63
    88  1030  3400               	retlw	0
    89  1031  3420               	retlw	32
    90  1032  3441               	retlw	65
    91  1033  3400               	retlw	0
    92  1034  34C8               	retlw	200
    93  1035  3442               	retlw	66
    94  1036  3400               	retlw	0
    95  1037  347A               	retlw	122
    96  1038  3444               	retlw	68
    97  1039  3440               	retlw	64
    98  103A  341C               	retlw	28
    99  103B  3446               	retlw	70
   100  103C  3450               	retlw	80
   101  103D  34C3               	retlw	195
   102  103E  3447               	retlw	71
   103  103F  3424               	retlw	36
   104  1040  3474               	retlw	116
   105  1041  3449               	retlw	73
   106  1042  3497               	retlw	151
   107  1043  3418               	retlw	24
   108  1044  344B               	retlw	75
   109  1045  34BC               	retlw	188
   110  1046  34BE               	retlw	190
   111  1047  344C               	retlw	76
   112  1048  346B               	retlw	107
   113  1049  346E               	retlw	110
   114  104A  344E               	retlw	78
   115  104B  3403               	retlw	3
   116  104C  3415               	retlw	21
   117  104D  3450               	retlw	80
   118  104E  3479               	retlw	121
   119  104F  34AD               	retlw	173
   120  1050  3460               	retlw	96
   121  1051  34F3               	retlw	243
   122  1052  3449               	retlw	73
   123  1053  3471               	retlw	113
   124  1054                     _dpowers:	
   125  1054  3401               	retlw	1
   126  1055  3400               	retlw	0
   127  1056  3400               	retlw	0
   128  1057  3400               	retlw	0
   129  1058  340A               	retlw	10
   130  1059  3400               	retlw	0
   131  105A  3400               	retlw	0
   132  105B  3400               	retlw	0
   133  105C  3464               	retlw	100
   134  105D  3400               	retlw	0
   135  105E  3400               	retlw	0
   136  105F  3400               	retlw	0
   137  1060  34E8               	retlw	232
   138  1061  3403               	retlw	3
   139  1062  3400               	retlw	0
   140  1063  3400               	retlw	0
   141  1064  3410               	retlw	16
   142  1065  3427               	retlw	39
   143  1066  3400               	retlw	0
   144  1067  3400               	retlw	0
   145  1068  34A0               	retlw	160
   146  1069  3486               	retlw	134
   147  106A  3401               	retlw	1
   148  106B  3400               	retlw	0
   149  106C  3440               	retlw	64
   150  106D  3442               	retlw	66
   151  106E  340F               	retlw	15
   152  106F  3400               	retlw	0
   153  1070  3480               	retlw	128
   154  1071  3496               	retlw	150
   155  1072  3498               	retlw	152
   156  1073  3400               	retlw	0
   157  1074  3400               	retlw	0
   158  1075  34E1               	retlw	225
   159  1076  34F5               	retlw	245
   160  1077  3405               	retlw	5
   161  1078  3400               	retlw	0
   162  1079  34CA               	retlw	202
   163  107A  349A               	retlw	154
   164  107B  343B               	retlw	59
   165  0001                     _TMR0	set	1
   166  005F                     _GIE	set	95
   167  0041                     _RD1	set	65
   168  0042                     _RD2	set	66
   169  0043                     _RD3	set	67
   170  0044                     _RD4	set	68
   171  0045                     _RD5	set	69
   172  0046                     _RD6	set	70
   173  0047                     _RD7	set	71
   174  005D                     _T0IE	set	93
   175  005A                     _T0IF	set	90
   176  0088                     _TRISD	set	136
   177  040B                     _PSA	set	1035
   178  040D                     _T0CS	set	1037
   179  042C                     _TRISA4	set	1068
   180  0441                     _TRISD1	set	1089
   181  0442                     _TRISD2	set	1090
   182  0443                     _TRISD3	set	1091
   183  0444                     _TRISD4	set	1092
   184  0445                     _TRISD5	set	1093
   185  0446                     _TRISD6	set	1094
   186  0447                     _TRISD7	set	1095
   187  0448                     _TRISE0	set	1096
   188  0188                     _ANSEL	set	392
   189  0189                     _ANSELH	set	393
   190  107C                     STR_2:	
   191  107C  3478               	retlw	120	;'x'
   192  107D  3475               	retlw	117	;'u'
   193  107E  346E               	retlw	110	;'n'
   194  107F  3467               	retlw	103	;'g'
   195  1080  342F               	retlw	47	;'/'
   196  1081  3473               	retlw	115	;'s'
   197  1082  343A               	retlw	58	;':'
   198  1083  3420               	retlw	32	;' '
   199  1084  3425               	retlw	37	;'%'
   200  1085  3430               	retlw	48	;'0'
   201  1086  3434               	retlw	52	;'4'
   202  1087  3464               	retlw	100	;'d'
   203  1088  3400               	retlw	0
   204  1089                     STR_1:	
   205  1089  3476               	retlw	118	;'v'
   206  108A  343A               	retlw	58	;':'
   207  108B  3420               	retlw	32	;' '
   208  108C  3425               	retlw	37	;'%'
   209  108D  3433               	retlw	51	;'3'
   210  108E  342E               	retlw	46	;'.'
   211  108F  3432               	retlw	50	;'2'
   212  1090  3466               	retlw	102	;'f'
   213  1091  3400               	retlw	0
   214                           
   215                           	psect	cinit
   216  0826                     start_initialization:	
   217                           
   218                           ; Clear objects allocated to BANK1
   219  0826  1683               	bsf	3,5	;RP0=1, select bank1
   220  0827  01C4               	clrf	__pbssBANK1& (0+127)
   221  0828  01C5               	clrf	(__pbssBANK1+1)& (0+127)
   222  0829  01C6               	clrf	(__pbssBANK1+2)& (0+127)
   223  082A  01C7               	clrf	(__pbssBANK1+3)& (0+127)
   224  082B  01C8               	clrf	(__pbssBANK1+4)& (0+127)
   225  082C  01C9               	clrf	(__pbssBANK1+5)& (0+127)
   226  082D  01CA               	clrf	(__pbssBANK1+6)& (0+127)
   227  082E  01CB               	clrf	(__pbssBANK1+7)& (0+127)
   228  082F  01CC               	clrf	(__pbssBANK1+8)& (0+127)
   229  0830  01CD               	clrf	(__pbssBANK1+9)& (0+127)
   230  0831  01CE               	clrf	(__pbssBANK1+10)& (0+127)
   231  0832  01CF               	clrf	(__pbssBANK1+11)& (0+127)
   232  0833                     end_of_initialization:	
   233                           ;End of C runtime variable initialization code
   234                           
   235  0833  0183               	clrf	3
   236  0834  160A  118A  2DCF   	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssBANK1
   239  00C4                     __pbssBANK1:	
   240  00C4                     _dem:	
   241  00C4                     	ds	3
   242  00C7                     _v:	
   243  00C7                     	ds	3
   244  00CA                     _count1:	
   245  00CA                     	ds	2
   246  00CC                     _count2:	
   247  00CC                     	ds	2
   248  00CE                     _count:	
   249  00CE                     	ds	2
   250                           
   251                           	psect	cstackBANK1
   252  00A0                     __pcstackBANK1:	
   253  00A0                     ?_printf:	
   254                           
   255                           ; 2 bytes @ 0x0
   256  00A0                     	ds	3
   257  00A3                     ??_printf:	
   258                           
   259                           ; 0 bytes @ 0x3
   260  00A3                     	ds	5
   261  00A8                     _printf$3165:	
   262                           
   263                           ; 4 bytes @ 0x8
   264  00A8                     	ds	4
   265  00AC                     printf@ap:	
   266                           
   267                           ; 1 bytes @ 0xC
   268  00AC                     	ds	1
   269  00AD                     printf@integ:	
   270                           
   271                           ; 3 bytes @ 0xD
   272  00AD                     	ds	3
   273  00B0                     printf@f:	
   274                           
   275                           ; 1 bytes @ 0x10
   276  00B0                     	ds	1
   277  00B1                     printf@_val:	
   278                           
   279                           ; 4 bytes @ 0x11
   280  00B1                     	ds	4
   281  00B5                     printf@flag:	
   282                           
   283                           ; 2 bytes @ 0x15
   284  00B5                     	ds	2
   285  00B7                     printf@exp:	
   286                           
   287                           ; 2 bytes @ 0x17
   288  00B7                     	ds	2
   289  00B9                     printf@width:	
   290                           
   291                           ; 2 bytes @ 0x19
   292  00B9                     	ds	2
   293  00BB                     printf@fval:	
   294                           
   295                           ; 3 bytes @ 0x1B
   296  00BB                     	ds	3
   297  00BE                     printf@prec:	
   298                           
   299                           ; 2 bytes @ 0x1E
   300  00BE                     	ds	2
   301  00C0                     printf@c:	
   302                           
   303                           ; 1 bytes @ 0x20
   304  00C0                     	ds	1
   305  00C1                     ??_main:	
   306                           
   307                           ; 0 bytes @ 0x21
   308  00C1                     	ds	3
   309                           
   310                           	psect	cstackCOMMON
   311  0070                     __pcstackCOMMON:	
   312  0070                     ?_lcd_init:	
   313  0070                     ?_lcd_putc:	
   314                           ; 0 bytes @ 0x0
   315                           
   316  0070                     ?_isprint:	
   317                           ; 0 bytes @ 0x0
   318                           
   319  0070                     ?_isdigit:	
   320                           ; 1 bit 
   321                           
   322  0070                     ?_main:	
   323                           ; 1 bit 
   324                           
   325  0070                     ?_putch:	
   326                           ; 0 bytes @ 0x0
   327                           
   328  0070                     ?_ngat:	
   329                           ; 0 bytes @ 0x0
   330                           
   331  0070                     ?_lcd_busy:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?i1___ftpack:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     i1___ftpack@arg:	
   338                           ; 3 bytes @ 0x0
   339                           
   340                           
   341                           ; 3 bytes @ 0x0
   342  0070                     	ds	3
   343  0073                     i1___ftpack@exp:	
   344                           
   345                           ; 1 bytes @ 0x3
   346  0073                     	ds	1
   347  0074                     i1___ftpack@sign:	
   348                           
   349                           ; 1 bytes @ 0x4
   350  0074                     	ds	1
   351  0075                     ??i1___ftpack:	
   352                           
   353                           ; 0 bytes @ 0x5
   354  0075                     	ds	3
   355  0078                     ?i1___ftadd:	
   356  0078                     i1___ftadd@f1:	
   357                           ; 3 bytes @ 0x8
   358                           
   359                           
   360                           ; 3 bytes @ 0x8
   361  0078                     	ds	3
   362  007B                     i1___ftadd@f2:	
   363                           
   364                           ; 3 bytes @ 0xB
   365  007B                     	ds	3
   366                           
   367                           	psect	cstackBANK0
   368  0020                     __pcstackBANK0:	
   369  0020                     ??i1___ftadd:	
   370                           
   371                           ; 0 bytes @ 0x0
   372  0020                     	ds	3
   373  0023                     i1___ftadd@sign:	
   374                           
   375                           ; 1 bytes @ 0x3
   376  0023                     	ds	1
   377  0024                     i1___ftadd@exp2:	
   378                           
   379                           ; 1 bytes @ 0x4
   380  0024                     	ds	1
   381  0025                     i1___ftadd@exp1:	
   382                           
   383                           ; 1 bytes @ 0x5
   384  0025                     	ds	1
   385  0026                     ??_ngat:	
   386                           
   387                           ; 0 bytes @ 0x6
   388  0026                     	ds	2
   389  0028                     ?_lcd_put_byte:	
   390  0028                     ??_lcd_busy:	
   391                           ; 0 bytes @ 0x8
   392                           
   393  0028                     ??_isprint:	
   394                           ; 0 bytes @ 0x8
   395                           
   396  0028                     ??_isdigit:	
   397                           ; 0 bytes @ 0x8
   398                           
   399  0028                     ?___ftge:	
   400                           ; 0 bytes @ 0x8
   401                           
   402  0028                     ?___lbmod:	
   403                           ; 1 bit 
   404                           
   405  0028                     ?___wmul:	
   406                           ; 1 bytes @ 0x8
   407                           
   408  0028                     ?___awmod:	
   409                           ; 2 bytes @ 0x8
   410                           
   411  0028                     ?___ftpack:	
   412                           ; 2 bytes @ 0x8
   413                           
   414  0028                     ?___ftneg:	
   415                           ; 3 bytes @ 0x8
   416                           
   417  0028                     ?__tdiv_to_l_:	
   418                           ; 3 bytes @ 0x8
   419                           
   420  0028                     ?__div_to_l_:	
   421                           ; 4 bytes @ 0x8
   422                           
   423  0028                     ?___lldiv:	
   424                           ; 4 bytes @ 0x8
   425                           
   426  0028                     lcd_put_byte@b:	
   427                           ; 4 bytes @ 0x8
   428                           
   429  0028                     _isdigit$3673:	
   430                           ; 1 bytes @ 0x8
   431                           
   432  0028                     _isprint$3676:	
   433                           ; 1 bytes @ 0x8
   434                           
   435  0028                     ___lbmod@divisor:	
   436                           ; 1 bytes @ 0x8
   437                           
   438  0028                     ___wmul@multiplier:	
   439                           ; 1 bytes @ 0x8
   440                           
   441  0028                     ___awmod@divisor:	
   442                           ; 2 bytes @ 0x8
   443                           
   444  0028                     ___ftneg@f1:	
   445                           ; 2 bytes @ 0x8
   446                           
   447  0028                     ___ftge@ff1:	
   448                           ; 3 bytes @ 0x8
   449                           
   450  0028                     __tdiv_to_l_@f1:	
   451                           ; 3 bytes @ 0x8
   452                           
   453  0028                     __div_to_l_@f1:	
   454                           ; 3 bytes @ 0x8
   455                           
   456  0028                     ___ftpack@arg:	
   457                           ; 3 bytes @ 0x8
   458                           
   459  0028                     ___lldiv@divisor:	
   460                           ; 3 bytes @ 0x8
   461                           
   462                           
   463                           ; 4 bytes @ 0x8
   464  0028                     	ds	1
   465  0029                     ??_lcd_put_byte:	
   466  0029                     ??___lbmod:	
   467                           ; 0 bytes @ 0x9
   468                           
   469  0029                     lcd_busy@busy:	
   470                           ; 0 bytes @ 0x9
   471                           
   472  0029                     isdigit@c:	
   473                           ; 1 bytes @ 0x9
   474                           
   475  0029                     isprint@c:	
   476                           ; 1 bytes @ 0x9
   477                           
   478                           
   479                           ; 1 bytes @ 0x9
   480  0029                     	ds	1
   481  002A                     ___lbmod@dividend:	
   482  002A                     ___wmul@multiplicand:	
   483                           ; 1 bytes @ 0xA
   484                           
   485  002A                     ___awmod@dividend:	
   486                           ; 2 bytes @ 0xA
   487                           
   488                           
   489                           ; 2 bytes @ 0xA
   490  002A                     	ds	1
   491  002B                     ??___ftneg:	
   492  002B                     lcd_put_byte@rs:	
   493                           ; 0 bytes @ 0xB
   494                           
   495  002B                     ___lbmod@counter:	
   496                           ; 1 bytes @ 0xB
   497                           
   498  002B                     ___ftpack@exp:	
   499                           ; 1 bytes @ 0xB
   500                           
   501  002B                     ___ftge@ff2:	
   502                           ; 1 bytes @ 0xB
   503                           
   504  002B                     __tdiv_to_l_@f2:	
   505                           ; 3 bytes @ 0xB
   506                           
   507  002B                     __div_to_l_@f2:	
   508                           ; 3 bytes @ 0xB
   509                           
   510                           
   511                           ; 3 bytes @ 0xB
   512  002B                     	ds	1
   513  002C                     ??___wmul:	
   514  002C                     ??___awmod:	
   515                           ; 0 bytes @ 0xC
   516                           
   517  002C                     lcd_put_byte@temp:	
   518                           ; 0 bytes @ 0xC
   519                           
   520  002C                     ___lbmod@rem:	
   521                           ; 1 bytes @ 0xC
   522                           
   523  002C                     ___awmod@counter:	
   524                           ; 1 bytes @ 0xC
   525                           
   526  002C                     ___ftpack@sign:	
   527                           ; 1 bytes @ 0xC
   528                           
   529  002C                     ___wmul@product:	
   530                           ; 1 bytes @ 0xC
   531                           
   532  002C                     ___lldiv@dividend:	
   533                           ; 2 bytes @ 0xC
   534                           
   535                           
   536                           ; 4 bytes @ 0xC
   537  002C                     	ds	1
   538  002D                     ??_lcd_init:	
   539  002D                     ?_lcd_gotoxy:	
   540                           ; 0 bytes @ 0xD
   541                           
   542  002D                     ??___ftpack:	
   543                           ; 0 bytes @ 0xD
   544                           
   545  002D                     ?___lbdiv:	
   546                           ; 0 bytes @ 0xD
   547                           
   548  002D                     lcd_gotoxy@row:	
   549                           ; 1 bytes @ 0xD
   550                           
   551  002D                     ___lbdiv@divisor:	
   552                           ; 1 bytes @ 0xD
   553                           
   554  002D                     ___awmod@sign:	
   555                           ; 1 bytes @ 0xD
   556                           
   557                           
   558                           ; 1 bytes @ 0xD
   559  002D                     	ds	1
   560  002E                     ??_lcd_gotoxy:	
   561  002E                     ??__tdiv_to_l_:	
   562                           ; 0 bytes @ 0xE
   563                           
   564  002E                     ??__div_to_l_:	
   565                           ; 0 bytes @ 0xE
   566                           
   567  002E                     ??___lbdiv:	
   568                           ; 0 bytes @ 0xE
   569                           
   570  002E                     ??___ftge:	
   571                           ; 0 bytes @ 0xE
   572                           
   573  002E                     ?___awdiv:	
   574                           ; 0 bytes @ 0xE
   575                           
   576  002E                     lcd_gotoxy@col:	
   577                           ; 2 bytes @ 0xE
   578                           
   579  002E                     ___lbdiv@dividend:	
   580                           ; 1 bytes @ 0xE
   581                           
   582  002E                     ___awdiv@divisor:	
   583                           ; 1 bytes @ 0xE
   584                           
   585                           
   586                           ; 2 bytes @ 0xE
   587  002E                     	ds	1
   588  002F                     lcd_gotoxy@address:	
   589  002F                     ___lbdiv@counter:	
   590                           ; 1 bytes @ 0xF
   591                           
   592                           
   593                           ; 1 bytes @ 0xF
   594  002F                     	ds	1
   595  0030                     ??_lcd_putc:	
   596  0030                     ??___lldiv:	
   597                           ; 0 bytes @ 0x10
   598                           
   599  0030                     ?___awtoft:	
   600                           ; 0 bytes @ 0x10
   601                           
   602  0030                     ?___lltoft:	
   603                           ; 3 bytes @ 0x10
   604                           
   605  0030                     lcd_putc@c:	
   606                           ; 3 bytes @ 0x10
   607                           
   608  0030                     ___lbdiv@quotient:	
   609                           ; 1 bytes @ 0x10
   610                           
   611  0030                     ___awtoft@c:	
   612                           ; 1 bytes @ 0x10
   613                           
   614  0030                     ___awdiv@dividend:	
   615                           ; 2 bytes @ 0x10
   616                           
   617  0030                     ___lldiv@quotient:	
   618                           ; 2 bytes @ 0x10
   619                           
   620  0030                     ___lltoft@c:	
   621                           ; 4 bytes @ 0x10
   622                           
   623                           
   624                           ; 4 bytes @ 0x10
   625  0030                     	ds	1
   626  0031                     ??_putch:	
   627  0031                     ?___bmul:	
   628                           ; 0 bytes @ 0x11
   629                           
   630  0031                     putch@c:	
   631                           ; 1 bytes @ 0x11
   632                           
   633  0031                     ___bmul@multiplicand:	
   634                           ; 1 bytes @ 0x11
   635                           
   636  0031                     __tdiv_to_l_@quot:	
   637                           ; 1 bytes @ 0x11
   638                           
   639                           
   640                           ; 4 bytes @ 0x11
   641  0031                     	ds	1
   642  0032                     ??___bmul:	
   643  0032                     ??___awdiv:	
   644                           ; 0 bytes @ 0x12
   645                           
   646  0032                     ___bmul@product:	
   647                           ; 0 bytes @ 0x12
   648                           
   649  0032                     ___awdiv@counter:	
   650                           ; 1 bytes @ 0x12
   651                           
   652                           
   653                           ; 1 bytes @ 0x12
   654  0032                     	ds	1
   655  0033                     ??___awtoft:	
   656  0033                     ___bmul@multiplier:	
   657                           ; 0 bytes @ 0x13
   658                           
   659  0033                     ___awtoft@sign:	
   660                           ; 1 bytes @ 0x13
   661                           
   662  0033                     ___awdiv@sign:	
   663                           ; 1 bytes @ 0x13
   664                           
   665                           
   666                           ; 1 bytes @ 0x13
   667  0033                     	ds	1
   668  0034                     ??___lltoft:	
   669  0034                     ?___ftdiv:	
   670                           ; 0 bytes @ 0x14
   671                           
   672  0034                     ___lldiv@counter:	
   673                           ; 3 bytes @ 0x14
   674                           
   675  0034                     ___lltoft@exp:	
   676                           ; 1 bytes @ 0x14
   677                           
   678  0034                     ___awdiv@quotient:	
   679                           ; 1 bytes @ 0x14
   680                           
   681  0034                     ___ftdiv@f2:	
   682                           ; 2 bytes @ 0x14
   683                           
   684                           
   685                           ; 3 bytes @ 0x14
   686  0034                     	ds	1
   687  0035                     ?___llmod:	
   688  0035                     __tdiv_to_l_@cntr:	
   689                           ; 4 bytes @ 0x15
   690                           
   691  0035                     ___llmod@divisor:	
   692                           ; 1 bytes @ 0x15
   693                           
   694                           
   695                           ; 4 bytes @ 0x15
   696  0035                     	ds	1
   697  0036                     ?___fttol:	
   698  0036                     __tdiv_to_l_@exp1:	
   699                           ; 4 bytes @ 0x16
   700                           
   701  0036                     ___fttol@f1:	
   702                           ; 1 bytes @ 0x16
   703                           
   704  0036                     __div_to_l_@quot:	
   705                           ; 3 bytes @ 0x16
   706                           
   707                           
   708                           ; 4 bytes @ 0x16
   709  0036                     	ds	1
   710  0037                     ___ftdiv@f1:	
   711                           
   712                           ; 3 bytes @ 0x17
   713  0037                     	ds	2
   714  0039                     ___llmod@dividend:	
   715                           
   716                           ; 4 bytes @ 0x19
   717  0039                     	ds	1
   718  003A                     ??___ftdiv:	
   719  003A                     ??___fttol:	
   720                           ; 0 bytes @ 0x1A
   721                           
   722  003A                     __div_to_l_@cntr:	
   723                           ; 0 bytes @ 0x1A
   724                           
   725                           
   726                           ; 1 bytes @ 0x1A
   727  003A                     	ds	1
   728  003B                     __div_to_l_@exp1:	
   729                           
   730                           ; 1 bytes @ 0x1B
   731  003B                     	ds	2
   732  003D                     ??___llmod:	
   733  003D                     ___ftdiv@cntr:	
   734                           ; 0 bytes @ 0x1D
   735                           
   736  003D                     ___fttol@sign1:	
   737                           ; 1 bytes @ 0x1D
   738                           
   739  003D                     ___llmod@counter:	
   740                           ; 1 bytes @ 0x1D
   741                           
   742                           
   743                           ; 1 bytes @ 0x1D
   744  003D                     	ds	1
   745  003E                     ___ftdiv@f3:	
   746  003E                     ___fttol@lval:	
   747                           ; 3 bytes @ 0x1E
   748                           
   749                           
   750                           ; 4 bytes @ 0x1E
   751  003E                     	ds	3
   752  0041                     ___ftdiv@exp:	
   753                           
   754                           ; 1 bytes @ 0x21
   755  0041                     	ds	1
   756  0042                     ___ftdiv@sign:	
   757  0042                     ___fttol@exp1:	
   758                           ; 1 bytes @ 0x22
   759                           
   760                           
   761                           ; 1 bytes @ 0x22
   762  0042                     	ds	1
   763  0043                     ?___ftmul:	
   764  0043                     ?___lbtoft:	
   765                           ; 3 bytes @ 0x23
   766                           
   767  0043                     ___ftmul@f1:	
   768                           ; 3 bytes @ 0x23
   769                           
   770                           
   771                           ; 3 bytes @ 0x23
   772  0043                     	ds	3
   773  0046                     ??___lbtoft:	
   774  0046                     ___lbtoft@c:	
   775                           ; 0 bytes @ 0x26
   776                           
   777  0046                     ___ftmul@f2:	
   778                           ; 1 bytes @ 0x26
   779                           
   780                           
   781                           ; 3 bytes @ 0x26
   782  0046                     	ds	3
   783  0049                     ??___ftmul:	
   784                           
   785                           ; 0 bytes @ 0x29
   786  0049                     	ds	3
   787  004C                     ___ftmul@exp:	
   788                           
   789                           ; 1 bytes @ 0x2C
   790  004C                     	ds	1
   791  004D                     ___ftmul@f3_as_product:	
   792                           
   793                           ; 3 bytes @ 0x2D
   794  004D                     	ds	3
   795  0050                     ___ftmul@cntr:	
   796                           
   797                           ; 1 bytes @ 0x30
   798  0050                     	ds	1
   799  0051                     ___ftmul@sign:	
   800                           
   801                           ; 1 bytes @ 0x31
   802  0051                     	ds	1
   803  0052                     ?_scale:	
   804  0052                     ?___ftadd:	
   805                           ; 3 bytes @ 0x32
   806                           
   807  0052                     ___ftadd@f1:	
   808                           ; 3 bytes @ 0x32
   809                           
   810                           
   811                           ; 3 bytes @ 0x32
   812  0052                     	ds	3
   813  0055                     ??_scale:	
   814  0055                     ___ftadd@f2:	
   815                           ; 0 bytes @ 0x35
   816                           
   817                           
   818                           ; 3 bytes @ 0x35
   819  0055                     	ds	3
   820  0058                     ??___ftadd:	
   821                           
   822                           ; 0 bytes @ 0x38
   823  0058                     	ds	1
   824  0059                     _scale$4120:	
   825                           
   826                           ; 3 bytes @ 0x39
   827  0059                     	ds	2
   828  005B                     ___ftadd@sign:	
   829                           
   830                           ; 1 bytes @ 0x3B
   831  005B                     	ds	1
   832  005C                     scale@scl:	
   833  005C                     ___ftadd@exp2:	
   834                           ; 1 bytes @ 0x3C
   835                           
   836                           
   837                           ; 1 bytes @ 0x3C
   838  005C                     	ds	1
   839  005D                     ___ftadd@exp1:	
   840                           
   841                           ; 1 bytes @ 0x3D
   842  005D                     	ds	1
   843  005E                     ?_fround:	
   844  005E                     ?___ftsub:	
   845                           ; 3 bytes @ 0x3E
   846                           
   847  005E                     ___ftsub@f2:	
   848                           ; 3 bytes @ 0x3E
   849                           
   850                           
   851                           ; 3 bytes @ 0x3E
   852  005E                     	ds	3
   853  0061                     ??_fround:	
   854  0061                     ___ftsub@f1:	
   855                           ; 0 bytes @ 0x41
   856                           
   857  0061                     _fround$4119:	
   858                           ; 3 bytes @ 0x41
   859                           
   860                           
   861                           ; 3 bytes @ 0x41
   862  0061                     	ds	3
   863  0064                     ??___ftsub:	
   864  0064                     _fround$4118:	
   865                           ; 0 bytes @ 0x44
   866                           
   867                           
   868                           ; 3 bytes @ 0x44
   869  0064                     	ds	3
   870  0067                     fround@prec:	
   871                           
   872                           ; 1 bytes @ 0x47
   873  0067                     	ds	1
   874                           
   875                           	psect	maintext
   876  15CF                     __pmaintext:	
   877 ;;Data sizes: Strings 22, constant 118, data 0, bss 12, persistent 0 stack 0
   878 ;;Auto spaces:   Size  Autos    Used
   879 ;; COMMON          14     14      14
   880 ;; BANK0           80     72      72
   881 ;; BANK1           80     36      48
   882 ;; BANK3           96      0       0
   883 ;; BANK2           96      0       0
   884 ;;
   885 ;; Pointer list with targets:
   886 ;; ?i1___ftpack	float  size(1) Largest target is 0
   887 ;;
   888 ;; ?i1___ftadd	float  size(1) Largest target is 0
   889 ;;
   890 ;; ?___lbtoft	float  size(1) Largest target is 0
   891 ;;
   892 ;; ?___ftpack	float  size(1) Largest target is 0
   893 ;;
   894 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   895 ;;
   896 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   897 ;;
   898 ;; ?___ftsub	float  size(1) Largest target is 0
   899 ;;
   900 ;; ?___lltoft	float  size(1) Largest target is 0
   901 ;;
   902 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   903 ;;
   904 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   905 ;;
   906 ;; ?___ftneg	float  size(1) Largest target is 0
   907 ;;
   908 ;; ?___awmod	int  size(1) Largest target is 40
   909 ;;		 -> dpowers(CODE[40]), 
   910 ;;
   911 ;; ?___awdiv	int  size(1) Largest target is 0
   912 ;;
   913 ;; ?_scale	int  size(1) Largest target is 0
   914 ;;
   915 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   916 ;;
   917 ;; ?_fround	unsigned int  size(1) Largest target is 0
   918 ;;
   919 ;; ?___ftdiv	float  size(1) Largest target is 0
   920 ;;
   921 ;; ?___awtoft	float  size(1) Largest target is 0
   922 ;;
   923 ;; ?___fttol	long  size(1) Largest target is 0
   924 ;;
   925 ;; ?___ftadd	float  size(1) Largest target is 0
   926 ;;
   927 ;; ?___ftmul	float  size(1) Largest target is 0
   928 ;;
   929 ;; printf@f	PTR const unsigned char  size(1) Largest target is 13
   930 ;;		 -> STR_2(CODE[13]), STR_1(CODE[9]), 
   931 ;;
   932 ;; ?_printf	int  size(1) Largest target is 0
   933 ;;
   934 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   935 ;;		 -> ?_printf(BANK1[2]), 
   936 ;;
   937 ;; S3154$_cp	PTR const unsigned char  size(1) Largest target is 0
   938 ;;
   939 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   940 ;;
   941 ;;
   942 ;; Critical Paths under _main in COMMON
   943 ;;
   944 ;;   None.
   945 ;;
   946 ;; Critical Paths under _ngat in COMMON
   947 ;;
   948 ;;   _ngat->i1___ftadd
   949 ;;   i1___ftadd->i1___ftpack
   950 ;;
   951 ;; Critical Paths under _main in BANK0
   952 ;;
   953 ;;   _printf->_fround
   954 ;;   _putch->_lcd_putc
   955 ;;   _lcd_putc->_lcd_gotoxy
   956 ;;   ___ftsub->___ftadd
   957 ;;   _scale->___ftmul
   958 ;;   _fround->___ftadd
   959 ;;   _lcd_gotoxy->_lcd_put_byte
   960 ;;   _lcd_init->_lcd_put_byte
   961 ;;   ___lltoft->___ftpack
   962 ;;   ___awtoft->___ftpack
   963 ;;   ___lbtoft->___fttol
   964 ;;   ___ftmul->___fttol
   965 ;;   ___ftmul->___ftdiv
   966 ;;   ___ftdiv->___awtoft
   967 ;;   ___ftadd->___ftmul
   968 ;;   ___llmod->___lldiv
   969 ;;   ___awdiv->___awmod
   970 ;;   ___fttol->___awdiv
   971 ;;   ___lbdiv->___lbmod
   972 ;;   ___bmul->___lbdiv
   973 ;;
   974 ;; Critical Paths under _ngat in BANK0
   975 ;;
   976 ;;   _ngat->i1___ftadd
   977 ;;
   978 ;; Critical Paths under _main in BANK1
   979 ;;
   980 ;;   _main->_printf
   981 ;;
   982 ;; Critical Paths under _ngat in BANK1
   983 ;;
   984 ;;   None.
   985 ;;
   986 ;; Critical Paths under _main in BANK3
   987 ;;
   988 ;;   None.
   989 ;;
   990 ;; Critical Paths under _ngat in BANK3
   991 ;;
   992 ;;   None.
   993 ;;
   994 ;; Critical Paths under _main in BANK2
   995 ;;
   996 ;;   None.
   997 ;;
   998 ;; Critical Paths under _ngat in BANK2
   999 ;;
  1000 ;;   None.
  1001 ;;
  1002 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1003 ;;
  1004 ;;
  1005 ;;Call Graph Tables:
  1006 ;;
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (0) _main                                                 3     3      0   14422
  1011 ;;                                             33 BANK1      3     3      0
  1012 ;;                           _lcd_init
  1013 ;;                           ___lbtoft
  1014 ;;                            ___ftmul
  1015 ;;                            ___ftadd
  1016 ;;                            ___fttol
  1017 ;;                           ___awtoft
  1018 ;;                            ___ftdiv
  1019 ;;                         _lcd_gotoxy
  1020 ;;                             _printf
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (1) _printf                                              37    34      3   11009
  1023 ;;                                              0 BANK1     33    30      3
  1024 ;;                              _putch
  1025 ;;                            _isdigit
  1026 ;;                             ___wmul
  1027 ;;                             ___ftge
  1028 ;;                            ___ftneg
  1029 ;;                            ___awdiv
  1030 ;;                              _scale
  1031 ;;                            ___ftmul
  1032 ;;                             _fround
  1033 ;;                            ___ftadd
  1034 ;;                            ___fttol
  1035 ;;                         __div_to_l_
  1036 ;;                        __tdiv_to_l_
  1037 ;;                           ___lltoft
  1038 ;;                            ___ftsub
  1039 ;;                            ___lldiv
  1040 ;;                            ___llmod
  1041 ;; ---------------------------------------------------------------------------------
  1042 ;; (2) _putch                                                1     1      0     713
  1043 ;;                                             17 BANK0      1     1      0
  1044 ;;                           _lcd_putc
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (3) _lcd_putc                                             1     1      0     691
  1047 ;;                                             16 BANK0      1     1      0
  1048 ;;                       _lcd_put_byte
  1049 ;;                           _lcd_busy
  1050 ;;                         _lcd_gotoxy
  1051 ;;                            _isprint
  1052 ;; ---------------------------------------------------------------------------------
  1053 ;; (2) ___ftsub                                              6     0      6    1094
  1054 ;;                                             62 BANK0      6     0      6
  1055 ;;                            ___ftadd
  1056 ;;                           ___lltoft (ARG)
  1057 ;; ---------------------------------------------------------------------------------
  1058 ;; (2) _scale                                               14    11      3    1688
  1059 ;;                                             50 BANK0     11     8      3
  1060 ;;                            ___awmod
  1061 ;;                            ___awdiv
  1062 ;;                            ___ftmul
  1063 ;;                             ___bmul
  1064 ;;                            ___fttol (ARG)
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (2) _fround                                              13    10      3    1215
  1067 ;;                                             62 BANK0     10     7      3
  1068 ;;                            ___lbmod
  1069 ;;                             ___bmul
  1070 ;;                            ___lbdiv
  1071 ;;                            ___ftmul
  1072 ;;                            ___ftadd (ARG)
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (4) _lcd_gotoxy                                           3     2      1     313
  1075 ;;                                             13 BANK0      3     2      1
  1076 ;;                       _lcd_put_byte
  1077 ;;                           _lcd_busy
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (1) _lcd_init                                             4     4      0     244
  1080 ;;                                             13 BANK0      3     3      0
  1081 ;;                       _lcd_put_byte
  1082 ;;                           _lcd_busy
  1083 ;; ---------------------------------------------------------------------------------
  1084 ;; (2) ___lltoft                                             5     1      4     278
  1085 ;;                                             16 BANK0      5     1      4
  1086 ;;                           ___ftpack
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (1) ___awtoft                                             4     1      3     300
  1089 ;;                                             16 BANK0      4     1      3
  1090 ;;                           ___ftpack
  1091 ;; ---------------------------------------------------------------------------------
  1092 ;; (1) ___lbtoft                                             4     1      3     231
  1093 ;;                                             35 BANK0      4     1      3
  1094 ;;                           ___ftpack
  1095 ;;                            ___fttol (ARG)
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (3) ___ftmul                                             15     9      6     535
  1098 ;;                                             35 BANK0     15     9      6
  1099 ;;                           ___ftpack
  1100 ;;                            ___fttol (ARG)
  1101 ;;                            ___ftdiv (ARG)
  1102 ;;                           ___awtoft (ARG)
  1103 ;;                            ___awdiv (ARG)
  1104 ;;                            ___awmod (ARG)
  1105 ;;                             ___bmul (ARG)
  1106 ;;                            ___lbdiv (ARG)
  1107 ;;                            ___lbmod (ARG)
  1108 ;; ---------------------------------------------------------------------------------
  1109 ;; (1) ___ftdiv                                             15     9      6     489
  1110 ;;                                             20 BANK0     15     9      6
  1111 ;;                           ___ftpack
  1112 ;;                           ___awtoft (ARG)
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (3) ___ftadd                                             12     6      6    1049
  1115 ;;                                             50 BANK0     12     6      6
  1116 ;;                           ___ftpack
  1117 ;;                           ___lbtoft (ARG)
  1118 ;;                            ___ftmul (ARG)
  1119 ;;                            ___fttol (ARG)
  1120 ;;                            ___lbmod (ARG)
  1121 ;;                             ___bmul (ARG)
  1122 ;;                            ___lbdiv (ARG)
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (5) _lcd_busy                                             2     2      0      23
  1125 ;;                                              8 BANK0      2     2      0
  1126 ;; ---------------------------------------------------------------------------------
  1127 ;; (5) _lcd_put_byte                                         5     4      1     221
  1128 ;;                                              8 BANK0      5     4      1
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (3) ___awmod                                              6     2      4     296
  1131 ;;                                              8 BANK0      6     2      4
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (2) ___lldiv                                             13     5      8     162
  1134 ;;                                              8 BANK0     13     5      8
  1135 ;; ---------------------------------------------------------------------------------
  1136 ;; (2) ___ftge                                               6     0      6     136
  1137 ;;                                              8 BANK0      6     0      6
  1138 ;; ---------------------------------------------------------------------------------
  1139 ;; (2) ___ftneg                                              3     0      3      45
  1140 ;;                                              8 BANK0      3     0      3
  1141 ;; ---------------------------------------------------------------------------------
  1142 ;; (2) ___llmod                                              9     1      8     159
  1143 ;;                                             21 BANK0      9     1      8
  1144 ;;                            ___lldiv (ARG)
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (3) ___awdiv                                              8     4      4     300
  1147 ;;                                             14 BANK0      8     4      4
  1148 ;;                            ___awmod (ARG)
  1149 ;; ---------------------------------------------------------------------------------
  1150 ;; (2) ___fttol                                             13     9      4     252
  1151 ;;                                             22 BANK0     13     9      4
  1152 ;;                           ___ftpack (ARG)
  1153 ;;                            ___awmod (ARG)
  1154 ;;                            ___awdiv (ARG)
  1155 ;;                             ___bmul (ARG)
  1156 ;; ---------------------------------------------------------------------------------
  1157 ;; (4) ___ftpack                                             8     3      5     209
  1158 ;;                                              8 BANK0      8     3      5
  1159 ;; ---------------------------------------------------------------------------------
  1160 ;; (3) ___lbmod                                              5     4      1     159
  1161 ;;                                              8 BANK0      5     4      1
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; (3) ___lbdiv                                              4     3      1     162
  1164 ;;                                             13 BANK0      4     3      1
  1165 ;;                            ___lbmod (ARG)
  1166 ;; ---------------------------------------------------------------------------------
  1167 ;; (2) ___wmul                                               6     2      4      92
  1168 ;;                                              8 BANK0      6     2      4
  1169 ;; ---------------------------------------------------------------------------------
  1170 ;; (3) ___bmul                                               3     2      1      68
  1171 ;;                                             17 BANK0      3     2      1
  1172 ;;                            ___lbmod (ARG)
  1173 ;;                            ___lbdiv (ARG)
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; (2) __div_to_l_                                          20    14      6     446
  1176 ;;                                              8 BANK0     20    14      6
  1177 ;; ---------------------------------------------------------------------------------
  1178 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1179 ;;                                              8 BANK0     15     9      6
  1180 ;; ---------------------------------------------------------------------------------
  1181 ;; (2) _isdigit                                              2     2      0      68
  1182 ;;                                              8 BANK0      2     2      0
  1183 ;; ---------------------------------------------------------------------------------
  1184 ;; (4) _isprint                                              2     2      0      68
  1185 ;;                                              8 BANK0      2     2      0
  1186 ;; ---------------------------------------------------------------------------------
  1187 ;; Estimated maximum stack depth 5
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1190 ;; ---------------------------------------------------------------------------------
  1191 ;; (6) _ngat                                                 2     2      0    3432
  1192 ;;                                              6 BANK0      2     2      0
  1193 ;;                          i1___ftadd
  1194 ;; ---------------------------------------------------------------------------------
  1195 ;; (7) i1___ftadd                                           12     6      6    3432
  1196 ;;                                              8 COMMON     6     0      6
  1197 ;;                                              0 BANK0      6     6      0
  1198 ;;                         i1___ftpack
  1199 ;; ---------------------------------------------------------------------------------
  1200 ;; (8) i1___ftpack                                           8     3      5     679
  1201 ;;                                              0 COMMON     8     3      5
  1202 ;; ---------------------------------------------------------------------------------
  1203 ;; Estimated maximum stack depth 8
  1204 ;; ---------------------------------------------------------------------------------
  1205 ;; Call Graph Graphs:
  1206 ;; _main (ROOT)
  1207 ;;   _lcd_init
  1208 ;;     _lcd_put_byte
  1209 ;;     _lcd_busy
  1210 ;;   ___lbtoft
  1211 ;;     ___ftpack
  1212 ;;     ___fttol (ARG)
  1213 ;;       ___ftpack (ARG)
  1214 ;;       ___awmod (ARG)
  1215 ;;       ___awdiv (ARG)
  1216 ;;         ___awmod (ARG)
  1217 ;;       ___bmul (ARG)
  1218 ;;         ___lbmod (ARG)
  1219 ;;         ___lbdiv (ARG)
  1220 ;;           ___lbmod (ARG)
  1221 ;;   ___ftmul
  1222 ;;     ___ftpack
  1223 ;;     ___fttol (ARG)
  1224 ;;       ___ftpack (ARG)
  1225 ;;       ___awmod (ARG)
  1226 ;;       ___awdiv (ARG)
  1227 ;;         ___awmod (ARG)
  1228 ;;       ___bmul (ARG)
  1229 ;;         ___lbmod (ARG)
  1230 ;;         ___lbdiv (ARG)
  1231 ;;           ___lbmod (ARG)
  1232 ;;     ___ftdiv (ARG)
  1233 ;;       ___ftpack
  1234 ;;       ___awtoft (ARG)
  1235 ;;         ___ftpack
  1236 ;;     ___awtoft (ARG)
  1237 ;;       ___ftpack
  1238 ;;     ___awdiv (ARG)
  1239 ;;       ___awmod (ARG)
  1240 ;;     ___awmod (ARG)
  1241 ;;     ___bmul (ARG)
  1242 ;;       ___lbmod (ARG)
  1243 ;;       ___lbdiv (ARG)
  1244 ;;         ___lbmod (ARG)
  1245 ;;     ___lbdiv (ARG)
  1246 ;;       ___lbmod (ARG)
  1247 ;;     ___lbmod (ARG)
  1248 ;;   ___ftadd
  1249 ;;     ___ftpack
  1250 ;;     ___lbtoft (ARG)
  1251 ;;       ___ftpack
  1252 ;;       ___fttol (ARG)
  1253 ;;         ___ftpack (ARG)
  1254 ;;         ___awmod (ARG)
  1255 ;;         ___awdiv (ARG)
  1256 ;;           ___awmod (ARG)
  1257 ;;         ___bmul (ARG)
  1258 ;;           ___lbmod (ARG)
  1259 ;;           ___lbdiv (ARG)
  1260 ;;             ___lbmod (ARG)
  1261 ;;     ___ftmul (ARG)
  1262 ;;       ___ftpack
  1263 ;;       ___fttol (ARG)
  1264 ;;         ___ftpack (ARG)
  1265 ;;         ___awmod (ARG)
  1266 ;;         ___awdiv (ARG)
  1267 ;;           ___awmod (ARG)
  1268 ;;         ___bmul (ARG)
  1269 ;;           ___lbmod (ARG)
  1270 ;;           ___lbdiv (ARG)
  1271 ;;             ___lbmod (ARG)
  1272 ;;       ___ftdiv (ARG)
  1273 ;;         ___ftpack
  1274 ;;         ___awtoft (ARG)
  1275 ;;           ___ftpack
  1276 ;;       ___awtoft (ARG)
  1277 ;;         ___ftpack
  1278 ;;       ___awdiv (ARG)
  1279 ;;         ___awmod (ARG)
  1280 ;;       ___awmod (ARG)
  1281 ;;       ___bmul (ARG)
  1282 ;;         ___lbmod (ARG)
  1283 ;;         ___lbdiv (ARG)
  1284 ;;           ___lbmod (ARG)
  1285 ;;       ___lbdiv (ARG)
  1286 ;;         ___lbmod (ARG)
  1287 ;;       ___lbmod (ARG)
  1288 ;;     ___fttol (ARG)
  1289 ;;       ___ftpack (ARG)
  1290 ;;       ___awmod (ARG)
  1291 ;;       ___awdiv (ARG)
  1292 ;;         ___awmod (ARG)
  1293 ;;       ___bmul (ARG)
  1294 ;;         ___lbmod (ARG)
  1295 ;;         ___lbdiv (ARG)
  1296 ;;           ___lbmod (ARG)
  1297 ;;     ___lbmod (ARG)
  1298 ;;     ___bmul (ARG)
  1299 ;;       ___lbmod (ARG)
  1300 ;;       ___lbdiv (ARG)
  1301 ;;         ___lbmod (ARG)
  1302 ;;     ___lbdiv (ARG)
  1303 ;;       ___lbmod (ARG)
  1304 ;;   ___fttol
  1305 ;;     ___ftpack (ARG)
  1306 ;;     ___awmod (ARG)
  1307 ;;     ___awdiv (ARG)
  1308 ;;       ___awmod (ARG)
  1309 ;;     ___bmul (ARG)
  1310 ;;       ___lbmod (ARG)
  1311 ;;       ___lbdiv (ARG)
  1312 ;;         ___lbmod (ARG)
  1313 ;;   ___awtoft
  1314 ;;     ___ftpack
  1315 ;;   ___ftdiv
  1316 ;;     ___ftpack
  1317 ;;     ___awtoft (ARG)
  1318 ;;       ___ftpack
  1319 ;;   _lcd_gotoxy
  1320 ;;     _lcd_put_byte
  1321 ;;     _lcd_busy
  1322 ;;   _printf
  1323 ;;     _putch
  1324 ;;       _lcd_putc
  1325 ;;         _lcd_put_byte
  1326 ;;         _lcd_busy
  1327 ;;         _lcd_gotoxy
  1328 ;;           _lcd_put_byte
  1329 ;;           _lcd_busy
  1330 ;;         _isprint
  1331 ;;     _isdigit
  1332 ;;     ___wmul
  1333 ;;     ___ftge
  1334 ;;     ___ftneg
  1335 ;;     ___awdiv
  1336 ;;       ___awmod (ARG)
  1337 ;;     _scale
  1338 ;;       ___awmod
  1339 ;;       ___awdiv
  1340 ;;         ___awmod (ARG)
  1341 ;;       ___ftmul
  1342 ;;         ___ftpack
  1343 ;;         ___fttol (ARG)
  1344 ;;           ___ftpack (ARG)
  1345 ;;           ___awmod (ARG)
  1346 ;;           ___awdiv (ARG)
  1347 ;;             ___awmod (ARG)
  1348 ;;           ___bmul (ARG)
  1349 ;;             ___lbmod (ARG)
  1350 ;;             ___lbdiv (ARG)
  1351 ;;               ___lbmod (ARG)
  1352 ;;         ___ftdiv (ARG)
  1353 ;;           ___ftpack
  1354 ;;           ___awtoft (ARG)
  1355 ;;             ___ftpack
  1356 ;;         ___awtoft (ARG)
  1357 ;;           ___ftpack
  1358 ;;         ___awdiv (ARG)
  1359 ;;           ___awmod (ARG)
  1360 ;;         ___awmod (ARG)
  1361 ;;         ___bmul (ARG)
  1362 ;;           ___lbmod (ARG)
  1363 ;;           ___lbdiv (ARG)
  1364 ;;             ___lbmod (ARG)
  1365 ;;         ___lbdiv (ARG)
  1366 ;;           ___lbmod (ARG)
  1367 ;;         ___lbmod (ARG)
  1368 ;;       ___bmul
  1369 ;;         ___lbmod (ARG)
  1370 ;;         ___lbdiv (ARG)
  1371 ;;           ___lbmod (ARG)
  1372 ;;       ___fttol (ARG)
  1373 ;;         ___ftpack (ARG)
  1374 ;;         ___awmod (ARG)
  1375 ;;         ___awdiv (ARG)
  1376 ;;           ___awmod (ARG)
  1377 ;;         ___bmul (ARG)
  1378 ;;           ___lbmod (ARG)
  1379 ;;           ___lbdiv (ARG)
  1380 ;;             ___lbmod (ARG)
  1381 ;;     ___ftmul
  1382 ;;       ___ftpack
  1383 ;;       ___fttol (ARG)
  1384 ;;         ___ftpack (ARG)
  1385 ;;         ___awmod (ARG)
  1386 ;;         ___awdiv (ARG)
  1387 ;;           ___awmod (ARG)
  1388 ;;         ___bmul (ARG)
  1389 ;;           ___lbmod (ARG)
  1390 ;;           ___lbdiv (ARG)
  1391 ;;             ___lbmod (ARG)
  1392 ;;       ___ftdiv (ARG)
  1393 ;;         ___ftpack
  1394 ;;         ___awtoft (ARG)
  1395 ;;           ___ftpack
  1396 ;;       ___awtoft (ARG)
  1397 ;;         ___ftpack
  1398 ;;       ___awdiv (ARG)
  1399 ;;         ___awmod (ARG)
  1400 ;;       ___awmod (ARG)
  1401 ;;       ___bmul (ARG)
  1402 ;;         ___lbmod (ARG)
  1403 ;;         ___lbdiv (ARG)
  1404 ;;           ___lbmod (ARG)
  1405 ;;       ___lbdiv (ARG)
  1406 ;;         ___lbmod (ARG)
  1407 ;;       ___lbmod (ARG)
  1408 ;;     _fround
  1409 ;;       ___lbmod
  1410 ;;       ___bmul
  1411 ;;         ___lbmod (ARG)
  1412 ;;         ___lbdiv (ARG)
  1413 ;;           ___lbmod (ARG)
  1414 ;;       ___lbdiv
  1415 ;;         ___lbmod (ARG)
  1416 ;;       ___ftmul
  1417 ;;         ___ftpack
  1418 ;;         ___fttol (ARG)
  1419 ;;           ___ftpack (ARG)
  1420 ;;           ___awmod (ARG)
  1421 ;;           ___awdiv (ARG)
  1422 ;;             ___awmod (ARG)
  1423 ;;           ___bmul (ARG)
  1424 ;;             ___lbmod (ARG)
  1425 ;;             ___lbdiv (ARG)
  1426 ;;               ___lbmod (ARG)
  1427 ;;         ___ftdiv (ARG)
  1428 ;;           ___ftpack
  1429 ;;           ___awtoft (ARG)
  1430 ;;             ___ftpack
  1431 ;;         ___awtoft (ARG)
  1432 ;;           ___ftpack
  1433 ;;         ___awdiv (ARG)
  1434 ;;           ___awmod (ARG)
  1435 ;;         ___awmod (ARG)
  1436 ;;         ___bmul (ARG)
  1437 ;;           ___lbmod (ARG)
  1438 ;;           ___lbdiv (ARG)
  1439 ;;             ___lbmod (ARG)
  1440 ;;         ___lbdiv (ARG)
  1441 ;;           ___lbmod (ARG)
  1442 ;;         ___lbmod (ARG)
  1443 ;;       ___ftadd (ARG)
  1444 ;;         ___ftpack
  1445 ;;         ___lbtoft (ARG)
  1446 ;;           ___ftpack
  1447 ;;           ___fttol (ARG)
  1448 ;;             ___ftpack (ARG)
  1449 ;;             ___awmod (ARG)
  1450 ;;             ___awdiv (ARG)
  1451 ;;               ___awmod (ARG)
  1452 ;;             ___bmul (ARG)
  1453 ;;               ___lbmod (ARG)
  1454 ;;               ___lbdiv (ARG)
  1455 ;;                 ___lbmod (ARG)
  1456 ;;         ___ftmul (ARG)
  1457 ;;           ___ftpack
  1458 ;;           ___fttol (ARG)
  1459 ;;             ___ftpack (ARG)
  1460 ;;             ___awmod (ARG)
  1461 ;;             ___awdiv (ARG)
  1462 ;;               ___awmod (ARG)
  1463 ;;             ___bmul (ARG)
  1464 ;;               ___lbmod (ARG)
  1465 ;;               ___lbdiv (ARG)
  1466 ;;                 ___lbmod (ARG)
  1467 ;;           ___ftdiv (ARG)
  1468 ;;             ___ftpack
  1469 ;;             ___awtoft (ARG)
  1470 ;;               ___ftpack
  1471 ;;           ___awtoft (ARG)
  1472 ;;             ___ftpack
  1473 ;;           ___awdiv (ARG)
  1474 ;;             ___awmod (ARG)
  1475 ;;           ___awmod (ARG)
  1476 ;;           ___bmul (ARG)
  1477 ;;             ___lbmod (ARG)
  1478 ;;             ___lbdiv (ARG)
  1479 ;;               ___lbmod (ARG)
  1480 ;;           ___lbdiv (ARG)
  1481 ;;             ___lbmod (ARG)
  1482 ;;           ___lbmod (ARG)
  1483 ;;         ___fttol (ARG)
  1484 ;;           ___ftpack (ARG)
  1485 ;;           ___awmod (ARG)
  1486 ;;           ___awdiv (ARG)
  1487 ;;             ___awmod (ARG)
  1488 ;;           ___bmul (ARG)
  1489 ;;             ___lbmod (ARG)
  1490 ;;             ___lbdiv (ARG)
  1491 ;;               ___lbmod (ARG)
  1492 ;;         ___lbmod (ARG)
  1493 ;;         ___bmul (ARG)
  1494 ;;           ___lbmod (ARG)
  1495 ;;           ___lbdiv (ARG)
  1496 ;;             ___lbmod (ARG)
  1497 ;;         ___lbdiv (ARG)
  1498 ;;           ___lbmod (ARG)
  1499 ;;     ___ftadd
  1500 ;;       ___ftpack
  1501 ;;       ___lbtoft (ARG)
  1502 ;;         ___ftpack
  1503 ;;         ___fttol (ARG)
  1504 ;;           ___ftpack (ARG)
  1505 ;;           ___awmod (ARG)
  1506 ;;           ___awdiv (ARG)
  1507 ;;             ___awmod (ARG)
  1508 ;;           ___bmul (ARG)
  1509 ;;             ___lbmod (ARG)
  1510 ;;             ___lbdiv (ARG)
  1511 ;;               ___lbmod (ARG)
  1512 ;;       ___ftmul (ARG)
  1513 ;;         ___ftpack
  1514 ;;         ___fttol (ARG)
  1515 ;;           ___ftpack (ARG)
  1516 ;;           ___awmod (ARG)
  1517 ;;           ___awdiv (ARG)
  1518 ;;             ___awmod (ARG)
  1519 ;;           ___bmul (ARG)
  1520 ;;             ___lbmod (ARG)
  1521 ;;             ___lbdiv (ARG)
  1522 ;;               ___lbmod (ARG)
  1523 ;;         ___ftdiv (ARG)
  1524 ;;           ___ftpack
  1525 ;;           ___awtoft (ARG)
  1526 ;;             ___ftpack
  1527 ;;         ___awtoft (ARG)
  1528 ;;           ___ftpack
  1529 ;;         ___awdiv (ARG)
  1530 ;;           ___awmod (ARG)
  1531 ;;         ___awmod (ARG)
  1532 ;;         ___bmul (ARG)
  1533 ;;           ___lbmod (ARG)
  1534 ;;           ___lbdiv (ARG)
  1535 ;;             ___lbmod (ARG)
  1536 ;;         ___lbdiv (ARG)
  1537 ;;           ___lbmod (ARG)
  1538 ;;         ___lbmod (ARG)
  1539 ;;       ___fttol (ARG)
  1540 ;;         ___ftpack (ARG)
  1541 ;;         ___awmod (ARG)
  1542 ;;         ___awdiv (ARG)
  1543 ;;           ___awmod (ARG)
  1544 ;;         ___bmul (ARG)
  1545 ;;           ___lbmod (ARG)
  1546 ;;           ___lbdiv (ARG)
  1547 ;;             ___lbmod (ARG)
  1548 ;;       ___lbmod (ARG)
  1549 ;;       ___bmul (ARG)
  1550 ;;         ___lbmod (ARG)
  1551 ;;         ___lbdiv (ARG)
  1552 ;;           ___lbmod (ARG)
  1553 ;;       ___lbdiv (ARG)
  1554 ;;         ___lbmod (ARG)
  1555 ;;     ___fttol
  1556 ;;       ___ftpack (ARG)
  1557 ;;       ___awmod (ARG)
  1558 ;;       ___awdiv (ARG)
  1559 ;;         ___awmod (ARG)
  1560 ;;       ___bmul (ARG)
  1561 ;;         ___lbmod (ARG)
  1562 ;;         ___lbdiv (ARG)
  1563 ;;           ___lbmod (ARG)
  1564 ;;     __div_to_l_
  1565 ;;     __tdiv_to_l_
  1566 ;;     ___lltoft
  1567 ;;       ___ftpack
  1568 ;;     ___ftsub
  1569 ;;       ___ftadd
  1570 ;;         ___ftpack
  1571 ;;         ___lbtoft (ARG)
  1572 ;;           ___ftpack
  1573 ;;           ___fttol (ARG)
  1574 ;;             ___ftpack (ARG)
  1575 ;;             ___awmod (ARG)
  1576 ;;             ___awdiv (ARG)
  1577 ;;               ___awmod (ARG)
  1578 ;;             ___bmul (ARG)
  1579 ;;               ___lbmod (ARG)
  1580 ;;               ___lbdiv (ARG)
  1581 ;;                 ___lbmod (ARG)
  1582 ;;         ___ftmul (ARG)
  1583 ;;           ___ftpack
  1584 ;;           ___fttol (ARG)
  1585 ;;             ___ftpack (ARG)
  1586 ;;             ___awmod (ARG)
  1587 ;;             ___awdiv (ARG)
  1588 ;;               ___awmod (ARG)
  1589 ;;             ___bmul (ARG)
  1590 ;;               ___lbmod (ARG)
  1591 ;;               ___lbdiv (ARG)
  1592 ;;                 ___lbmod (ARG)
  1593 ;;           ___ftdiv (ARG)
  1594 ;;             ___ftpack
  1595 ;;             ___awtoft (ARG)
  1596 ;;               ___ftpack
  1597 ;;           ___awtoft (ARG)
  1598 ;;             ___ftpack
  1599 ;;           ___awdiv (ARG)
  1600 ;;             ___awmod (ARG)
  1601 ;;           ___awmod (ARG)
  1602 ;;           ___bmul (ARG)
  1603 ;;             ___lbmod (ARG)
  1604 ;;             ___lbdiv (ARG)
  1605 ;;               ___lbmod (ARG)
  1606 ;;           ___lbdiv (ARG)
  1607 ;;             ___lbmod (ARG)
  1608 ;;           ___lbmod (ARG)
  1609 ;;         ___fttol (ARG)
  1610 ;;           ___ftpack (ARG)
  1611 ;;           ___awmod (ARG)
  1612 ;;           ___awdiv (ARG)
  1613 ;;             ___awmod (ARG)
  1614 ;;           ___bmul (ARG)
  1615 ;;             ___lbmod (ARG)
  1616 ;;             ___lbdiv (ARG)
  1617 ;;               ___lbmod (ARG)
  1618 ;;         ___lbmod (ARG)
  1619 ;;         ___bmul (ARG)
  1620 ;;           ___lbmod (ARG)
  1621 ;;           ___lbdiv (ARG)
  1622 ;;             ___lbmod (ARG)
  1623 ;;         ___lbdiv (ARG)
  1624 ;;           ___lbmod (ARG)
  1625 ;;       ___lltoft (ARG)
  1626 ;;         ___ftpack
  1627 ;;     ___lldiv
  1628 ;;     ___llmod
  1629 ;;       ___lldiv (ARG)
  1630 ;;
  1631 ;; _ngat (ROOT)
  1632 ;;   i1___ftadd
  1633 ;;     i1___ftpack
  1634 ;;
  1635 ;; Address spaces:
  1636 ;;Name               Size   Autos  Total    Cost      Usage
  1637 ;;BITCOMMON            E      0       0       0        0.0%
  1638 ;;EEDATA             100      0       0       0        0.0%
  1639 ;;NULL                 0      0       0       0        0.0%
  1640 ;;CODE                 0      0       0       0        0.0%
  1641 ;;COMMON               E      E       E       1      100.0%
  1642 ;;BITSFR0              0      0       0       1        0.0%
  1643 ;;SFR0                 0      0       0       1        0.0%
  1644 ;;BITSFR1              0      0       0       2        0.0%
  1645 ;;SFR1                 0      0       0       2        0.0%
  1646 ;;STACK                0      0       B       2        0.0%
  1647 ;;ABS                  0      0      86       3        0.0%
  1648 ;;BITBANK0            50      0       0       4        0.0%
  1649 ;;BITSFR3              0      0       0       4        0.0%
  1650 ;;SFR3                 0      0       0       4        0.0%
  1651 ;;BANK0               50     48      48       5       90.0%
  1652 ;;BITSFR2              0      0       0       5        0.0%
  1653 ;;SFR2                 0      0       0       5        0.0%
  1654 ;;BITBANK1            50      0       0       6        0.0%
  1655 ;;BANK1               50     24      30       7       60.0%
  1656 ;;BITBANK3            60      0       0       8        0.0%
  1657 ;;BANK3               60      0       0       9        0.0%
  1658 ;;BITBANK2            60      0       0      10        0.0%
  1659 ;;BANK2               60      0       0      11        0.0%
  1660 ;;DATA                 0      0      91      12        0.0%
  1661                           
  1662                           
  1663 ;; *************** function _main *****************
  1664 ;; Defined at:
  1665 ;;		line 17 in file "D:\TTVXL\Project TTVXL\BT04week11ttvxl\BT04week11ttvxl.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 17F/0
  1676 ;;		On exit  : 60/20
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       0       3       0       0
  1682 ;;      Totals:         0       0       3       0       0
  1683 ;;Total ram usage:        3 bytes
  1684 ;; Hardware stack levels required when called:    8
  1685 ;; This function calls:
  1686 ;;		_lcd_init
  1687 ;;		___lbtoft
  1688 ;;		___ftmul
  1689 ;;		___ftadd
  1690 ;;		___fttol
  1691 ;;		___awtoft
  1692 ;;		___ftdiv
  1693 ;;		_lcd_gotoxy
  1694 ;;		_printf
  1695 ;; This function is called by:
  1696 ;;		Startup code after reset
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699  15CF                     _main:	
  1700                           
  1701                           ;BT04week11ttvxl.c: 18: ANSEL = ANSELH = 0;
  1702                           
  1703                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1704  15CF  1683               	bsf	3,5	;RP0=1, select bank3
  1705  15D0  1703               	bsf	3,6	;RP1=1, select bank3
  1706  15D1  0189               	clrf	9	;volatile
  1707  15D2  0188               	clrf	8	;volatile
  1708                           
  1709                           ;BT04week11ttvxl.c: 19: lcd_init();
  1710  15D3  120A  158A  229C   	fcall	_lcd_init
      +       160A  118A         
  1711                           
  1712                           ;BT04week11ttvxl.c: 20: TRISA4 = 1;
  1713  15D8  1683               	bsf	3,5	;RP0=1, select bank1
  1714  15D9  1605               	bsf	5,4
  1715                           
  1716                           ;BT04week11ttvxl.c: 21: TRISD = 0x00;
  1717  15DA  0188               	clrf	8	;volatile
  1718                           
  1719                           ;BT04week11ttvxl.c: 22: TRISE0 = 0;
  1720  15DB  1009               	bcf	9,0
  1721                           
  1722                           ;BT04week11ttvxl.c: 23: T0CS = 1;
  1723  15DC  1681               	bsf	1,5
  1724                           
  1725                           ;BT04week11ttvxl.c: 24: PSA = 1;
  1726  15DD  1581               	bsf	1,3
  1727                           
  1728                           ;BT04week11ttvxl.c: 26: TMR0 = 0;
  1729  15DE  1283               	bcf	3,5	;RP0=0, select bank0
  1730  15DF  0181               	clrf	1	;volatile
  1731                           
  1732                           ;BT04week11ttvxl.c: 29: T0IE = 1;
  1733  15E0  168B               	bsf	11,5
  1734                           
  1735                           ;BT04week11ttvxl.c: 30: T0IF = 0;
  1736  15E1  110B               	bcf	11,2
  1737                           
  1738                           ;BT04week11ttvxl.c: 31: GIE = 1;
  1739  15E2  178B               	bsf	11,7
  1740  15E3                     l7704:	
  1741                           
  1742                           ;BT04week11ttvxl.c: 34: {
  1743                           ;BT04week11ttvxl.c: 36: count1 = TMR0+dem*256;
  1744  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  1745  15E4  0801               	movf	1,w	;volatile
  1746  15E5  120A  158A  2446   	fcall	___lbtoft
      +       160A  118A         
  1747  15EA  0843               	movf	?___lbtoft,w
  1748  15EB  00D5               	movwf	?___ftadd+3
  1749  15EC  0844               	movf	?___lbtoft+1,w
  1750  15ED  00D6               	movwf	?___ftadd+4
  1751  15EE  0845               	movf	?___lbtoft+2,w
  1752  15EF  00D7               	movwf	?___ftadd+5
  1753  15F0  1683               	bsf	3,5	;RP0=1, select bank1
  1754  15F1  0844               	movf	_dem^(0+128),w
  1755  15F2  1283               	bcf	3,5	;RP0=0, select bank0
  1756  15F3  00C6               	movwf	?___ftmul+3
  1757  15F4  1683               	bsf	3,5	;RP0=1, select bank1
  1758  15F5  0845               	movf	(_dem+1)^(0+128),w
  1759  15F6  1283               	bcf	3,5	;RP0=0, select bank0
  1760  15F7  00C7               	movwf	?___ftmul+4
  1761  15F8  1683               	bsf	3,5	;RP0=1, select bank1
  1762  15F9  0846               	movf	(_dem+2)^(0+128),w
  1763  15FA  1283               	bcf	3,5	;RP0=0, select bank0
  1764  15FB  00C8               	movwf	?___ftmul+5
  1765  15FC  3080               	movlw	128
  1766  15FD  01C3               	clrf	?___ftmul
  1767  15FE  00C4               	movwf	?___ftmul+1
  1768  15FF  3043               	movlw	67
  1769  1600  00C5               	movwf	?___ftmul+2
  1770  1601  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1771  1606  0843               	movf	?___ftmul,w
  1772  1607  00D2               	movwf	?___ftadd
  1773  1608  0844               	movf	?___ftmul+1,w
  1774  1609  00D3               	movwf	?___ftadd+1
  1775  160A  0845               	movf	?___ftmul+2,w
  1776  160B  00D4               	movwf	?___ftadd+2
  1777  160C  160A  118A  250D   	fcall	___ftadd
      +       160A  118A         
  1778  1611  0852               	movf	?___ftadd,w
  1779  1612  00B6               	movwf	?___fttol
  1780  1613  0853               	movf	?___ftadd+1,w
  1781  1614  00B7               	movwf	?___fttol+1
  1782  1615  0854               	movf	?___ftadd+2,w
  1783  1616  00B8               	movwf	?___fttol+2
  1784  1617  120A  118A  260D   	fcall	___fttol
      +       160A  118A         
  1785  161C  0837               	movf	?___fttol+1,w
  1786  161D  1683               	bsf	3,5	;RP0=1, select bank1
  1787  161E  00CB               	movwf	(_count1+1)^(0+128)
  1788  161F  1283               	bcf	3,5	;RP0=0, select bank0
  1789  1620  0836               	movf	?___fttol,w
  1790  1621  1683               	bsf	3,5	;RP0=1, select bank1
  1791  1622  00CA               	movwf	_count1^(0+128)
  1792                           
  1793                           ;BT04week11ttvxl.c: 37: _delay((unsigned long)((500)*(20000000/4000.0)));
  1794  1623  300D               	movlw	13
  1795  1624  00C3               	movwf	(??_main^(0+128)+2)
  1796  1625  30AF               	movlw	175
  1797  1626  00C2               	movwf	(??_main^(0+128)+1)
  1798  1627  30C1               	movlw	193
  1799  1628  00C1               	movwf	??_main^(0+128)
  1800  1629                     u4807:	
  1801  1629  0BC1               	decfsz	??_main^(0+128),f
  1802  162A  2E29               	goto	u4807
  1803  162B  0BC2               	decfsz	(??_main^(0+128)+1),f
  1804  162C  2E29               	goto	u4807
  1805  162D  0BC3               	decfsz	(??_main^(0+128)+2),f
  1806  162E  2E29               	goto	u4807
  1807  162F  0064               	clrwdt
  1808                           
  1809                           ;BT04week11ttvxl.c: 38: count2 = TMR0+dem*256;
  1810  1630  1283               	bcf	3,5	;RP0=0, select bank0
  1811  1631  1303               	bcf	3,6	;RP1=0, select bank0
  1812  1632  0801               	movf	1,w	;volatile
  1813  1633  120A  158A  2446   	fcall	___lbtoft
      +       160A  118A         
  1814  1638  0843               	movf	?___lbtoft,w
  1815  1639  00D5               	movwf	?___ftadd+3
  1816  163A  0844               	movf	?___lbtoft+1,w
  1817  163B  00D6               	movwf	?___ftadd+4
  1818  163C  0845               	movf	?___lbtoft+2,w
  1819  163D  00D7               	movwf	?___ftadd+5
  1820  163E  1683               	bsf	3,5	;RP0=1, select bank1
  1821  163F  0844               	movf	_dem^(0+128),w
  1822  1640  1283               	bcf	3,5	;RP0=0, select bank0
  1823  1641  00C6               	movwf	?___ftmul+3
  1824  1642  1683               	bsf	3,5	;RP0=1, select bank1
  1825  1643  0845               	movf	(_dem+1)^(0+128),w
  1826  1644  1283               	bcf	3,5	;RP0=0, select bank0
  1827  1645  00C7               	movwf	?___ftmul+4
  1828  1646  1683               	bsf	3,5	;RP0=1, select bank1
  1829  1647  0846               	movf	(_dem+2)^(0+128),w
  1830  1648  1283               	bcf	3,5	;RP0=0, select bank0
  1831  1649  00C8               	movwf	?___ftmul+5
  1832  164A  3080               	movlw	128
  1833  164B  01C3               	clrf	?___ftmul
  1834  164C  00C4               	movwf	?___ftmul+1
  1835  164D  3043               	movlw	67
  1836  164E  00C5               	movwf	?___ftmul+2
  1837  164F  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1838  1654  0843               	movf	?___ftmul,w
  1839  1655  00D2               	movwf	?___ftadd
  1840  1656  0844               	movf	?___ftmul+1,w
  1841  1657  00D3               	movwf	?___ftadd+1
  1842  1658  0845               	movf	?___ftmul+2,w
  1843  1659  00D4               	movwf	?___ftadd+2
  1844  165A  160A  118A  250D   	fcall	___ftadd
      +       160A  118A         
  1845  165F  0852               	movf	?___ftadd,w
  1846  1660  00B6               	movwf	?___fttol
  1847  1661  0853               	movf	?___ftadd+1,w
  1848  1662  00B7               	movwf	?___fttol+1
  1849  1663  0854               	movf	?___ftadd+2,w
  1850  1664  00B8               	movwf	?___fttol+2
  1851  1665  120A  118A  260D   	fcall	___fttol
      +       160A  118A         
  1852  166A  0837               	movf	?___fttol+1,w
  1853  166B  1683               	bsf	3,5	;RP0=1, select bank1
  1854  166C  00CD               	movwf	(_count2+1)^(0+128)
  1855  166D  1283               	bcf	3,5	;RP0=0, select bank0
  1856  166E  0836               	movf	?___fttol,w
  1857  166F  1683               	bsf	3,5	;RP0=1, select bank1
  1858  1670  00CC               	movwf	_count2^(0+128)
  1859                           
  1860                           ;BT04week11ttvxl.c: 39: count = count2 - count1;
  1861  1671  084D               	movf	(_count2+1)^(0+128),w
  1862  1672  00CF               	movwf	(_count+1)^(0+128)
  1863  1673  084C               	movf	_count2^(0+128),w
  1864  1674  00CE               	movwf	_count^(0+128)
  1865  1675  084A               	movf	_count1^(0+128),w
  1866  1676  02CE               	subwf	_count^(0+128),f
  1867  1677  084B               	movf	(_count1+1)^(0+128),w
  1868  1678  1C03               	skipc
  1869  1679  03CF               	decf	(_count+1)^(0+128),f
  1870  167A  02CF               	subwf	(_count+1)^(0+128),f
  1871                           
  1872                           ;BT04week11ttvxl.c: 41: v=(count/360.0)*60.0*2.0;
  1873  167B  1283               	bcf	3,5	;RP0=0, select bank0
  1874  167C  30F0               	movlw	240
  1875  167D  01C3               	clrf	?___ftmul
  1876  167E  00C4               	movwf	?___ftmul+1
  1877  167F  3042               	movlw	66
  1878  1680  00C5               	movwf	?___ftmul+2
  1879  1681  30B4               	movlw	180
  1880  1682  01B4               	clrf	?___ftdiv
  1881  1683  00B5               	movwf	?___ftdiv+1
  1882  1684  3043               	movlw	67
  1883  1685  00B6               	movwf	?___ftdiv+2
  1884  1686  1683               	bsf	3,5	;RP0=1, select bank1
  1885  1687  084F               	movf	(_count+1)^(0+128),w
  1886  1688  1283               	bcf	3,5	;RP0=0, select bank0
  1887  1689  00B1               	movwf	?___awtoft+1
  1888  168A  1683               	bsf	3,5	;RP0=1, select bank1
  1889  168B  084E               	movf	_count^(0+128),w
  1890  168C  1283               	bcf	3,5	;RP0=0, select bank0
  1891  168D  00B0               	movwf	?___awtoft
  1892  168E  120A  158A  2455   	fcall	___awtoft
      +       160A  118A         
  1893  1693  0830               	movf	?___awtoft,w
  1894  1694  00B7               	movwf	?___ftdiv+3
  1895  1695  0831               	movf	?___awtoft+1,w
  1896  1696  00B8               	movwf	?___ftdiv+4
  1897  1697  0832               	movf	?___awtoft+2,w
  1898  1698  00B9               	movwf	?___ftdiv+5
  1899  1699  120A  158A  2470   	fcall	___ftdiv
      +       160A  118A         
  1900  169E  0834               	movf	?___ftdiv,w
  1901  169F  00C6               	movwf	?___ftmul+3
  1902  16A0  0835               	movf	?___ftdiv+1,w
  1903  16A1  00C7               	movwf	?___ftmul+4
  1904  16A2  0836               	movf	?___ftdiv+2,w
  1905  16A3  00C8               	movwf	?___ftmul+5
  1906  16A4  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1907  16A9  0843               	movf	?___ftmul,w
  1908  16AA  1683               	bsf	3,5	;RP0=1, select bank1
  1909  16AB  00C7               	movwf	_v^(0+128)
  1910  16AC  1283               	bcf	3,5	;RP0=0, select bank0
  1911  16AD  0844               	movf	?___ftmul+1,w
  1912  16AE  1683               	bsf	3,5	;RP0=1, select bank1
  1913  16AF  00C8               	movwf	(_v+1)^(0+128)
  1914  16B0  1283               	bcf	3,5	;RP0=0, select bank0
  1915  16B1  0845               	movf	?___ftmul+2,w
  1916  16B2  1683               	bsf	3,5	;RP0=1, select bank1
  1917  16B3  00C9               	movwf	(_v+2)^(0+128)
  1918                           
  1919                           ;BT04week11ttvxl.c: 42: lcd_gotoxy(0,0);
  1920  16B4  1283               	bcf	3,5	;RP0=0, select bank0
  1921  16B5  3000               	movlw	0
  1922  16B6  01AD               	clrf	?_lcd_gotoxy
  1923  16B7  120A  158A  2255   	fcall	_lcd_gotoxy
      +       160A  118A         
  1924                           
  1925                           ;BT04week11ttvxl.c: 43: printf("v: %3.2f",v);
  1926  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  1927  16BD  0847               	movf	_v^(0+128),w
  1928  16BE  00A0               	movwf	?_printf^(0+128)
  1929  16BF  0848               	movf	(_v+1)^(0+128),w
  1930  16C0  00A1               	movwf	(?_printf+1)^(0+128)
  1931  16C1  0849               	movf	(_v+2)^(0+128),w
  1932  16C2  00A2               	movwf	(?_printf+2)^(0+128)
  1933  16C3  3084               	movlw	(STR_1-__stringbase)& (0+255)
  1934  16C4  120A  118A  2011   	fcall	_printf
      +       160A  118A         
  1935                           
  1936                           ;BT04week11ttvxl.c: 44: lcd_gotoxy(0,1);
  1937  16C9  1283               	bcf	3,5	;RP0=0, select bank0
  1938  16CA  3000               	movlw	0
  1939  16CB  01AD               	clrf	?_lcd_gotoxy
  1940  16CC  0AAD               	incf	?_lcd_gotoxy,f
  1941  16CD  120A  158A  2255   	fcall	_lcd_gotoxy
      +       160A  118A         
  1942                           
  1943                           ;BT04week11ttvxl.c: 45: printf("xung/s: %04d",count*2);
  1944  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  1945  16D3  084F               	movf	(_count+1)^(0+128),w
  1946  16D4  00A1               	movwf	(?_printf+1)^(0+128)
  1947  16D5  084E               	movf	_count^(0+128),w
  1948  16D6  00A0               	movwf	?_printf^(0+128)
  1949  16D7  3077               	movlw	(STR_2-__stringbase)& (0+255)
  1950  16D8  1003               	clrc
  1951  16D9  0DA0               	rlf	?_printf^(0+128),f
  1952  16DA  0DA1               	rlf	(?_printf+1)^(0+128),f
  1953  16DB  120A  118A  2011   	fcall	_printf
      +       160A  118A         
  1954  16E0  2DE3               	goto	l7704
  1955  16E1                     __end_of_main:	
  1956                           
  1957                           	psect	text554
  1958  0011                     __ptext554:	
  1959 ;; =============== function _main ends ============
  1960                           
  1961                           
  1962 ;; *************** function _printf *****************
  1963 ;; Defined at:
  1964 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  f               1    wreg     PTR const unsigned char 
  1967 ;;		 -> STR_2(13), STR_1(9), 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  f               1   16[BANK1 ] PTR const unsigned char 
  1970 ;;		 -> STR_2(13), STR_1(9), 
  1971 ;;  _val            4   17[BANK1 ] struct .
  1972 ;;  fval            3   27[BANK1 ] struct .
  1973 ;;  integ           3   13[BANK1 ] struct .
  1974 ;;  ival            3    0        struct .
  1975 ;;  prec            2   30[BANK1 ] int 
  1976 ;;  width           2   25[BANK1 ] int 
  1977 ;;  exp             2   23[BANK1 ] int 
  1978 ;;  flag            2   21[BANK1 ] unsigned short 
  1979 ;;  c               1   32[BANK1 ] char 
  1980 ;;  ap              1   12[BANK1 ] PTR void [1]
  1981 ;;		 -> ?_printf(2), 
  1982 ;;  d               1    0        unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2    0[BANK1 ] int 
  1985 ;; Registers used:
  1986 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 60/20
  1989 ;;		On exit  : 60/20
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1992 ;;      Params:         0       0       3       0       0
  1993 ;;      Locals:         0       0      25       0       0
  1994 ;;      Temps:          0       0       5       0       0
  1995 ;;      Totals:         0       0      33       0       0
  1996 ;;Total ram usage:       33 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    7
  1999 ;; This function calls:
  2000 ;;		_putch
  2001 ;;		_isdigit
  2002 ;;		___wmul
  2003 ;;		___ftge
  2004 ;;		___ftneg
  2005 ;;		___awdiv
  2006 ;;		_scale
  2007 ;;		___ftmul
  2008 ;;		_fround
  2009 ;;		___ftadd
  2010 ;;		___fttol
  2011 ;;		__div_to_l_
  2012 ;;		__tdiv_to_l_
  2013 ;;		___lltoft
  2014 ;;		___ftsub
  2015 ;;		___lldiv
  2016 ;;		___llmod
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021  0011                     _printf:	
  2022                           
  2023 ;; using string table level
  2024                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2025                           ;printf@f stored from wreg
  2026  0011  00B0               	movwf	printf@f^(0+128)
  2027  0012  30A0               	movlw	?_printf& (0+255)
  2028  0013  00AC               	movwf	printf@ap^(0+128)
  2029  0014                     l7680:	
  2030  0014  1683               	bsf	3,5	;RP0=1, select bank1
  2031  0015  0830               	movf	printf@f^(0+128),w
  2032  0016  0AB0               	incf	printf@f^(0+128),f
  2033  0017  0084               	movwf	4
  2034  0018  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2035  001D  00C0               	movwf	printf@c^(0+128)
  2036  001E  08C0               	movf	printf@c^(0+128),f
  2037  001F  1903               	btfsc	3,2
  2038  0020  0008               	return
  2039  0021  3A25               	xorlw	37
  2040  0022  1903               	skipnz
  2041  0023  2829               	goto	l7404
  2042  0024  0840               	movf	printf@c^(0+128),w
  2043  0025  2575  120A  118A   	fcall	_putch
  2044  0028  2814               	goto	l7680
  2045  0029                     l7404:	
  2046  0029  01B9               	clrf	printf@width^(0+128)
  2047  002A  01BA               	clrf	(printf@width+1)^(0+128)
  2048  002B  01B5               	clrf	printf@flag^(0+128)
  2049  002C  01B6               	clrf	(printf@flag+1)^(0+128)
  2050  002D  2830               	goto	l7410
  2051  002E                     l2201:	
  2052  002E  1535               	bsf	printf@flag^(0+128),2
  2053  002F  0AB0               	incf	printf@f^(0+128),f
  2054  0030                     l7410:	
  2055  0030  0830               	movf	printf@f^(0+128),w
  2056  0031  0084               	movwf	4
  2057  0032  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2058                           
  2059                           ; Switch size 1, requested type "space"
  2060                           ; Number of cases is 1, Range of values is 48 to 48
  2061                           ; switch strategies available:
  2062                           ; Name         Instructions Cycles
  2063                           ; simple_byte            4     3 (average)
  2064                           ; direct_byte           14    11 (fixed)
  2065                           ; jumptable            263     9 (fixed)
  2066                           ;	Chosen strategy is simple_byte
  2067  0037  3A30               	xorlw	48	; case 48
  2068  0038  1903               	skipnz
  2069  0039  282E               	goto	l2201
  2070  003A  283B               	goto	l7412
  2071  003B                     l7412:	
  2072  003B  0830               	movf	printf@f^(0+128),w
  2073  003C  0084               	movwf	4
  2074  003D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2075  0042  25E5  120A  118A   	fcall	_isdigit
  2076  0045  1C03               	btfss	3,0
  2077  0046  2870               	goto	l7422
  2078  0047  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0048  01B9               	clrf	printf@width^(0+128)
  2080  0049  01BA               	clrf	(printf@width+1)^(0+128)
  2081  004A                     l7416:	
  2082  004A  1683               	bsf	3,5	;RP0=1, select bank1
  2083  004B  083A               	movf	(printf@width+1)^(0+128),w
  2084  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2085  004D  00A9               	movwf	?___wmul+1
  2086  004E  1683               	bsf	3,5	;RP0=1, select bank1
  2087  004F  0839               	movf	printf@width^(0+128),w
  2088  0050  2776  120A  118A   	fcall	PL29	;call to abstracted procedure
  2089  0053  25F4               	fcall	___wmul
  2090  0054  1683               	bsf	3,5	;RP0=1, select bank1
  2091  0055  0830               	movf	printf@f^(0+128),w
  2092  0056  0084               	movwf	4
  2093  0057  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2094  005C  271F               	fcall	PL7	;call to abstracted procedure
  2095  005D  00B9               	movwf	printf@width^(0+128)
  2096  005E  0824               	movf	(??_printf+1)^(0+128),w
  2097  005F  1803               	skipnc
  2098  0060  3E01               	addlw	1
  2099  0061  3EFF               	addlw	255
  2100  0062  00BA               	movwf	(printf@width+1)^(0+128)
  2101  0063  0AB0               	incf	printf@f^(0+128),f
  2102  0064  0830               	movf	printf@f^(0+128),w
  2103  0065  0084               	movwf	4
  2104  0066  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2105  006B  25E5  120A  118A   	fcall	_isdigit
  2106  006E  1803               	btfsc	3,0
  2107  006F  284A               	goto	l7416
  2108  0070                     l7422:	
  2109  0070  1683               	bsf	3,5	;RP0=1, select bank1
  2110  0071  0830               	movf	printf@f^(0+128),w
  2111  0072  0084               	movwf	4
  2112  0073  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2113  0078  3A2E               	xorlw	46
  2114  0079  1D03               	skipz
  2115  007A  28A8               	goto	l7436
  2116  007B  1736               	bsf	(printf@flag^(0+128)+1),6
  2117  007C  0AB0               	incf	printf@f^(0+128),f
  2118  007D  01BE               	clrf	printf@prec^(0+128)
  2119  007E  01BF               	clrf	(printf@prec+1)^(0+128)
  2120  007F                     l7434:	
  2121  007F  0830               	movf	printf@f^(0+128),w
  2122  0080  0084               	movwf	4
  2123  0081  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2124  0086  25E5  120A  118A   	fcall	_isdigit
  2125  0089  1C03               	btfss	3,0
  2126  008A  28AE               	goto	l7442
  2127  008B  1683               	bsf	3,5	;RP0=1, select bank1
  2128  008C  083F               	movf	(printf@prec+1)^(0+128),w
  2129  008D  1283               	bcf	3,5	;RP0=0, select bank0
  2130  008E  00A9               	movwf	?___wmul+1
  2131  008F  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0090  083E               	movf	printf@prec^(0+128),w
  2133  0091  2776  120A  118A   	fcall	PL29	;call to abstracted procedure
  2134  0094  25F4               	fcall	___wmul
  2135  0095  1683               	bsf	3,5	;RP0=1, select bank1
  2136  0096  0830               	movf	printf@f^(0+128),w
  2137  0097  0084               	movwf	4
  2138  0098  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2139  009D  271F  120A  118A   	fcall	PL7	;call to abstracted procedure
  2140  00A0  00BE               	movwf	printf@prec^(0+128)
  2141  00A1  0824               	movf	(??_printf+1)^(0+128),w
  2142  00A2  1803               	skipnc
  2143  00A3  3E01               	addlw	1
  2144  00A4  3EFF               	addlw	255
  2145  00A5  00BF               	movwf	(printf@prec+1)^(0+128)
  2146  00A6  0AB0               	incf	printf@f^(0+128),f
  2147  00A7  287F               	goto	l7434
  2148  00A8                     l7436:	
  2149  00A8  01BE               	clrf	printf@prec^(0+128)
  2150  00A9  01BF               	clrf	(printf@prec+1)^(0+128)
  2151  00AA  1636               	bsf	(printf@flag^(0+128)+1),4
  2152  00AB  28AE               	goto	l7442
  2153  00AC                     l2216:	
  2154  00AC  1536               	bsf	(printf@flag^(0+128)+1),2
  2155  00AD  28C5               	goto	l7444
  2156  00AE                     l7442:	
  2157  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  2158  00AF  0830               	movf	printf@f^(0+128),w
  2159  00B0  0AB0               	incf	printf@f^(0+128),f
  2160  00B1  0084               	movwf	4
  2161  00B2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2162  00B7  00C0               	movwf	printf@c^(0+128)
  2163                           
  2164                           ; Switch size 1, requested type "space"
  2165                           ; Number of cases is 4, Range of values is 0 to 105
  2166                           ; switch strategies available:
  2167                           ; Name         Instructions Cycles
  2168                           ; simple_byte           13     7 (average)
  2169                           ; jumptable            260     6 (fixed)
  2170                           ; rangetable           110     6 (fixed)
  2171                           ; spacedrange          218     9 (fixed)
  2172                           ; locatedrange         106     3 (fixed)
  2173                           ;	Chosen strategy is simple_byte
  2174  00B8  3A00               	xorlw	0	; case 0
  2175  00B9  1903               	skipnz
  2176  00BA  2D74               	goto	l2297
  2177  00BB  3A64               	xorlw	100	; case 100
  2178  00BC  1903               	skipnz
  2179  00BD  28C5               	goto	l7444
  2180  00BE  3A02               	xorlw	2	; case 102
  2181  00BF  1903               	skipnz
  2182  00C0  28AC               	goto	l2216
  2183  00C1  3A0F               	xorlw	15	; case 105
  2184  00C2  1903               	skipnz
  2185  00C3  28C5               	goto	l7444
  2186  00C4  2814               	goto	l7680
  2187  00C5                     l7444:	
  2188  00C5  3007               	movlw	7
  2189  00C6  01A3               	clrf	??_printf^(0+128)
  2190  00C7  0536               	andwf	(printf@flag+1)^(0+128),w
  2191  00C8  00A4               	movwf	(??_printf+1)^(0+128)
  2192  00C9  0423               	iorwf	??_printf^(0+128),w
  2193  00CA  1903               	skipnz
  2194  00CB  2C37               	goto	l7596
  2195  00CC  1E36               	btfss	(printf@flag+1)^(0+128),4
  2196  00CD  28D1               	goto	l7450
  2197  00CE  3006               	movlw	6
  2198  00CF  00BE               	movwf	printf@prec^(0+128)
  2199  00D0  01BF               	clrf	(printf@prec+1)^(0+128)
  2200  00D1                     l7450:	
  2201  00D1  082C               	movf	printf@ap^(0+128),w
  2202  00D2  0084               	movwf	4
  2203  00D3  1383               	bcf	3,7	;select IRP bank0
  2204  00D4  0800               	movf	0,w
  2205  00D5  00BB               	movwf	printf@fval^(0+128)
  2206  00D6  0A84               	incf	4,f
  2207  00D7  0800               	movf	0,w
  2208  00D8  00BC               	movwf	(printf@fval+1)^(0+128)
  2209  00D9  0A84               	incf	4,f
  2210  00DA  0800               	movf	0,w
  2211  00DB  00BD               	movwf	(printf@fval+2)^(0+128)
  2212  00DC  3003               	movlw	3
  2213  00DD  07AC               	addwf	printf@ap^(0+128),f
  2214  00DE  083B               	movf	printf@fval^(0+128),w
  2215  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  2216  00E0  00A8               	movwf	?___ftge
  2217  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  2218  00E2  083C               	movf	(printf@fval+1)^(0+128),w
  2219  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2220  00E4  00A9               	movwf	?___ftge+1
  2221  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  2222  00E6  083D               	movf	(printf@fval+2)^(0+128),w
  2223  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  2224  00E8  00AA               	movwf	?___ftge+2
  2225  00E9  01AB               	clrf	?___ftge+3
  2226  00EA  01AC               	clrf	?___ftge+4
  2227  00EB  01AD               	clrf	?___ftge+5
  2228  00EC  25B9  120A  118A   	fcall	___ftge
  2229  00EF  1803               	btfsc	3,0
  2230  00F0  290D               	goto	l7460
  2231  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  2232  00F2  083B               	movf	printf@fval^(0+128),w
  2233  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  2234  00F4  00A8               	movwf	?___ftneg
  2235  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  2236  00F6  083C               	movf	(printf@fval+1)^(0+128),w
  2237  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2238  00F8  00A9               	movwf	?___ftneg+1
  2239  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  2240  00FA  083D               	movf	(printf@fval+2)^(0+128),w
  2241  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2242  00FC  00AA               	movwf	?___ftneg+2
  2243  00FD  26B0  120A  118A   	fcall	___ftneg
  2244  0100  0828               	movf	?___ftneg,w
  2245  0101  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0102  00BB               	movwf	printf@fval^(0+128)
  2247  0103  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0104  0829               	movf	?___ftneg+1,w
  2249  0105  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0106  00BC               	movwf	(printf@fval+1)^(0+128)
  2251  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0108  082A               	movf	?___ftneg+2,w
  2253  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2254  010A  00BD               	movwf	(printf@fval+2)^(0+128)
  2255  010B  3003               	movlw	3
  2256  010C  04B5               	iorwf	printf@flag^(0+128),f
  2257  010D                     l7460:	
  2258  010D  1683               	bsf	3,5	;RP0=1, select bank1
  2259  010E  01B7               	clrf	printf@exp^(0+128)
  2260  010F  01B8               	clrf	(printf@exp+1)^(0+128)
  2261  0110  083D               	movf	(printf@fval+2)^(0+128),w
  2262  0111  043C               	iorwf	(printf@fval+1)^(0+128),w
  2263  0112  043B               	iorwf	printf@fval^(0+128),w
  2264  0113  1903               	skipnz
  2265  0114  29B6               	goto	l7492
  2266  0115  30BB               	movlw	low printf@fval
  2267  0116  0084               	movwf	4
  2268  0117  0800               	movf	0,w
  2269  0118  00A3               	movwf	??_printf^(0+128)
  2270  0119  0A84               	incf	4,f
  2271  011A  0800               	movf	0,w
  2272  011B  00A4               	movwf	(??_printf^(0+128)+1)
  2273  011C  0A84               	incf	4,f
  2274  011D  0800               	movf	0,w
  2275  011E  00A5               	movwf	(??_printf^(0+128)+2)
  2276  011F  0A84               	incf	4,f
  2277  0120  0800               	movf	0,w
  2278  0121  00A6               	movwf	(??_printf^(0+128)+3)
  2279  0122  300F               	movlw	15
  2280  0123                     u4355:	
  2281  0123  1003               	clrc
  2282  0124  0CA6               	rrf	(??_printf^(0+128)+3),f
  2283  0125  0CA5               	rrf	(??_printf^(0+128)+2),f
  2284  0126  0CA4               	rrf	(??_printf^(0+128)+1),f
  2285  0127  0CA3               	rrf	??_printf^(0+128),f
  2286  0128  3EFF               	addlw	-1
  2287  0129  1D03               	skipz
  2288  012A  2923               	goto	u4355
  2289  012B  0824               	movf	(??_printf+1)^(0+128),w
  2290  012C  00B8               	movwf	(printf@exp+1)^(0+128)
  2291  012D  0823               	movf	??_printf^(0+128),w
  2292  012E  00B7               	movwf	printf@exp^(0+128)
  2293  012F  3082               	movlw	-126
  2294  0130  01B8               	clrf	(printf@exp+1)^(0+128)
  2295  0131  07B7               	addwf	printf@exp^(0+128),f
  2296  0132  1C03               	skipc
  2297  0133  03B8               	decf	(printf@exp+1)^(0+128),f
  2298  0134  30FF               	movlw	-1
  2299  0135  07B7               	addwf	printf@exp^(0+128),f
  2300  0136  1C03               	skipc
  2301  0137  03B8               	decf	(printf@exp+1)^(0+128),f
  2302  0138  3003               	movlw	3
  2303  0139  1283               	bcf	3,5	;RP0=0, select bank0
  2304  013A  00A8               	movwf	?___wmul
  2305  013B  01A9               	clrf	?___wmul+1
  2306  013C  1683               	bsf	3,5	;RP0=1, select bank1
  2307  013D  0838               	movf	(printf@exp+1)^(0+128),w
  2308  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2309  013F  00AB               	movwf	?___wmul+3
  2310  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2311  0141  0837               	movf	printf@exp^(0+128),w
  2312  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0143  00AA               	movwf	?___wmul+2
  2314  0144  25F4               	fcall	___wmul
  2315  0145  0829               	movf	?___wmul+1,w
  2316  0146  1683               	bsf	3,5	;RP0=1, select bank1
  2317  0147  00B8               	movwf	(printf@exp+1)^(0+128)
  2318  0148  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0149  0828               	movf	?___wmul,w
  2320  014A  1683               	bsf	3,5	;RP0=1, select bank1
  2321  014B  00B7               	movwf	printf@exp^(0+128)
  2322  014C  300A               	movlw	10
  2323  014D  1283               	bcf	3,5	;RP0=0, select bank0
  2324  014E  00AE               	movwf	?___awdiv
  2325  014F  01AF               	clrf	?___awdiv+1
  2326  0150  1683               	bsf	3,5	;RP0=1, select bank1
  2327  0151  0838               	movf	(printf@exp+1)^(0+128),w
  2328  0152  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0153  00B1               	movwf	?___awdiv+3
  2330  0154  1683               	bsf	3,5	;RP0=1, select bank1
  2331  0155  0837               	movf	printf@exp^(0+128),w
  2332  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0157  00B0               	movwf	?___awdiv+2
  2334  0158  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2335  015D  082F               	movf	?___awdiv+1,w
  2336  015E  1683               	bsf	3,5	;RP0=1, select bank1
  2337  015F  00B8               	movwf	(printf@exp+1)^(0+128)
  2338  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0161  082E               	movf	?___awdiv,w
  2340  0162  1683               	bsf	3,5	;RP0=1, select bank1
  2341  0163  00B7               	movwf	printf@exp^(0+128)
  2342  0164  1FB8               	btfss	(printf@exp+1)^(0+128),7
  2343  0165  296A               	goto	l7480
  2344  0166  30FF               	movlw	-1
  2345  0167  07B7               	addwf	printf@exp^(0+128),f
  2346  0168  1C03               	skipc
  2347  0169  03B8               	decf	(printf@exp+1)^(0+128),f
  2348  016A                     l7480:	
  2349  016A  0337               	decf	printf@exp^(0+128),w
  2350  016B  3AFF               	xorlw	255
  2351  016C  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2352  0171  272D  120A  118A   	fcall	PL8	;call to abstracted procedure
  2353  0174  275D               	fcall	PL19	;call to abstracted procedure
  2354  0175  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0176  082D               	movf	printf@integ^(0+128),w
  2356  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0178  00C6               	movwf	?___ftmul+3
  2358  0179  1683               	bsf	3,5	;RP0=1, select bank1
  2359  017A  082E               	movf	(printf@integ+1)^(0+128),w
  2360  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2361  017C  00C7               	movwf	?___ftmul+4
  2362  017D  1683               	bsf	3,5	;RP0=1, select bank1
  2363  017E  082F               	movf	(printf@integ+2)^(0+128),w
  2364  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2365  0180  00C8               	movwf	?___ftmul+5
  2366  0181  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2367  0186  0843               	movf	?___ftmul,w
  2368  0187  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0188  00AD               	movwf	printf@integ^(0+128)
  2370  0189  1283               	bcf	3,5	;RP0=0, select bank0
  2371  018A  0844               	movf	?___ftmul+1,w
  2372  018B  1683               	bsf	3,5	;RP0=1, select bank1
  2373  018C  00AE               	movwf	(printf@integ+1)^(0+128)
  2374  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2375  018E  0845               	movf	?___ftmul+2,w
  2376  018F  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0190  00AF               	movwf	(printf@integ+2)^(0+128)
  2378  0191  270B  120A  118A   	fcall	PL5	;call to abstracted procedure
  2379  0194  3080               	movlw	128
  2380  0195  01AB               	clrf	?___ftge+3
  2381  0196  00AC               	movwf	?___ftge+4
  2382  0197  303F               	movlw	63
  2383  0198  00AD               	movwf	?___ftge+5
  2384  0199  25B9  120A  118A   	fcall	___ftge
  2385  019C  1803               	btfsc	3,0
  2386  019D  29A4               	goto	l7488
  2387  019E  30FF               	movlw	-1
  2388  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2389  01A0  07B7               	addwf	printf@exp^(0+128),f
  2390  01A1  1C03               	skipc
  2391  01A2  03B8               	decf	(printf@exp+1)^(0+128),f
  2392  01A3  29B6               	goto	l7492
  2393  01A4                     l7488:	
  2394  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  2395  01A5  270B  120A  118A   	fcall	PL5	;call to abstracted procedure
  2396  01A8  3020               	movlw	32
  2397  01A9  01AB               	clrf	?___ftge+3
  2398  01AA  00AC               	movwf	?___ftge+4
  2399  01AB  3041               	movlw	65
  2400  01AC  00AD               	movwf	?___ftge+5
  2401  01AD  25B9  120A  118A   	fcall	___ftge
  2402  01B0  1C03               	btfss	3,0
  2403  01B1  29B6               	goto	l7492
  2404  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  2405  01B3  0AB7               	incf	printf@exp^(0+128),f
  2406  01B4  1903               	skipnz
  2407  01B5  0AB8               	incf	(printf@exp+1)^(0+128),f
  2408  01B6                     l7492:	
  2409  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  2410  01B7  083F               	movf	(printf@prec+1)^(0+128),w
  2411  01B8  3A80               	xorlw	128
  2412  01B9  00FF               	movwf	127
  2413  01BA  3080               	movlw	128
  2414  01BB  027F               	subwf	127,w
  2415  01BC  1D03               	skipz
  2416  01BD  29C0               	goto	u4395
  2417  01BE  300D               	movlw	13
  2418  01BF  023E               	subwf	printf@prec^(0+128),w
  2419  01C0                     u4395:	
  2420  01C0  1803               	skipnc
  2421  01C1  29EB               	goto	l7496
  2422  01C2  277C               	call	PL30	;select bank 1
  2423  01C3  083E               	movf	printf@prec^(0+128),w
  2424  01C4  120A  158A  2103   	fcall	_fround
      +       120A  118A         
  2425  01C9  085E               	movf	?_fround,w
  2426  01CA  00D2               	movwf	?___ftadd
  2427  01CB  085F               	movf	?_fround+1,w
  2428  01CC  00D3               	movwf	?___ftadd+1
  2429  01CD  0860               	movf	?_fround+2,w
  2430  01CE  00D4               	movwf	?___ftadd+2
  2431  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  2432  01D0  083B               	movf	printf@fval^(0+128),w
  2433  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  2434  01D2  00D5               	movwf	?___ftadd+3
  2435  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2436  01D4  083C               	movf	(printf@fval+1)^(0+128),w
  2437  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2438  01D6  00D6               	movwf	?___ftadd+4
  2439  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  2440  01D8  083D               	movf	(printf@fval+2)^(0+128),w
  2441  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  2442  01DA  00D7               	movwf	?___ftadd+5
  2443  01DB  160A  118A  250D   	fcall	___ftadd
      +       120A  118A         
  2444  01E0  0852               	movf	?___ftadd,w
  2445  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  2446  01E2  00BB               	movwf	printf@fval^(0+128)
  2447  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2448  01E4  0853               	movf	?___ftadd+1,w
  2449  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2450  01E6  00BC               	movwf	(printf@fval+1)^(0+128)
  2451  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2452  01E8  0854               	movf	?___ftadd+2,w
  2453  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  2454  01EA  00BD               	movwf	(printf@fval+2)^(0+128)
  2455  01EB                     l7496:	
  2456  01EB  277C               	call	PL30	;select bank 1
  2457  01EC  0838               	movf	(printf@exp+1)^(0+128),w
  2458  01ED  3A80               	xorlw	128
  2459  01EE  00FF               	movwf	127
  2460  01EF  3080               	movlw	128
  2461  01F0  027F               	subwf	127,w
  2462  01F1  1D03               	skipz
  2463  01F2  29F5               	goto	u4405
  2464  01F3  300A               	movlw	10
  2465  01F4  0237               	subwf	printf@exp^(0+128),w
  2466  01F5                     u4405:	
  2467  01F5  1803               	skipnc
  2468  01F6  2A16               	goto	l7504
  2469  01F7  277C               	call	PL30	;select bank 1
  2470  01F8  083D               	movf	(printf@fval+2)^(0+128),w
  2471  01F9  043C               	iorwf	(printf@fval+1)^(0+128),w
  2472  01FA  043B               	iorwf	printf@fval^(0+128),w
  2473  01FB  1903               	skipnz
  2474  01FC  2A68               	goto	l7520
  2475  01FD  083B               	movf	printf@fval^(0+128),w
  2476  01FE  2752  120A  118A   	fcall	PL15	;call to abstracted procedure
  2477  0201  260D  120A  118A   	fcall	___fttol
  2478  0204  0839               	movf	?___fttol+3,w
  2479  0205  0438               	iorwf	?___fttol+2,w
  2480  0206  0437               	iorwf	?___fttol+1,w
  2481  0207  0436               	iorwf	?___fttol,w
  2482  0208  1D03               	skipz
  2483  0209  2A68               	goto	l7520
  2484  020A  1683               	bsf	3,5	;RP0=1, select bank1
  2485  020B  0838               	movf	(printf@exp+1)^(0+128),w
  2486  020C  3A80               	xorlw	128
  2487  020D  00FF               	movwf	127
  2488  020E  3080               	movlw	128
  2489  020F  027F               	subwf	127,w
  2490  0210  1D03               	skipz
  2491  0211  2A14               	goto	u4435
  2492  0212  3002               	movlw	2
  2493  0213  0237               	subwf	printf@exp^(0+128),w
  2494  0214                     u4435:	
  2495  0214  1C03               	skipc
  2496  0215  2A68               	goto	l7520
  2497  0216                     l7504:	
  2498  0216  277C               	call	PL30	;select bank 1
  2499  0217  270B  120A  118A   	fcall	PL5	;call to abstracted procedure
  2500  021A  3070               	movlw	112
  2501  021B  00AB               	movwf	?___ftge+3
  2502  021C  3089               	movlw	137
  2503  021D  00AC               	movwf	?___ftge+4
  2504  021E  3040               	movlw	64
  2505  021F  00AD               	movwf	?___ftge+5
  2506  0220  25B9  120A  118A   	fcall	___ftge
  2507  0223  1803               	btfsc	3,0
  2508  0224  2A27               	goto	l7508
  2509  0225  30F7               	movlw	-9
  2510  0226  2A28               	goto	L1
  2511  0227                     l7508:	
  2512  0227  30F8               	movlw	-8
  2513  0228                     L1:	
  2514  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2515  0229  07B7               	addwf	printf@exp^(0+128),f
  2516  022A  1C03               	skipc
  2517  022B  03B8               	decf	(printf@exp+1)^(0+128),f
  2518  022C  0837               	movf	printf@exp^(0+128),w
  2519  022D  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2520  0232  272D  120A  118A   	fcall	PL8	;call to abstracted procedure
  2521  0235  00A8               	movwf	?__tdiv_to_l_
  2522  0236  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0237  083C               	movf	(printf@fval+1)^(0+128),w
  2524  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0239  00A9               	movwf	?__tdiv_to_l_+1
  2526  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2527  023B  083D               	movf	(printf@fval+2)^(0+128),w
  2528  023C  1283               	bcf	3,5	;RP0=0, select bank0
  2529  023D  00AA               	movwf	?__tdiv_to_l_+2
  2530  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2531  023F  082D               	movf	printf@integ^(0+128),w
  2532  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0241  00AB               	movwf	?__tdiv_to_l_+3
  2534  0242  1683               	bsf	3,5	;RP0=1, select bank1
  2535  0243  082E               	movf	(printf@integ+1)^(0+128),w
  2536  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0245  00AC               	movwf	?__tdiv_to_l_+4
  2538  0246  1683               	bsf	3,5	;RP0=1, select bank1
  2539  0247  082F               	movf	(printf@integ+2)^(0+128),w
  2540  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2541  0249  00AD               	movwf	?__tdiv_to_l_+5
  2542  024A  277F  120A  118A   	fcall	__tdiv_to_l_
  2543  024D  082B               	movf	?__tdiv_to_l_+3,w
  2544  024E  1683               	bsf	3,5	;RP0=1, select bank1
  2545  024F  00AB               	movwf	(_printf$3165+3)^(0+128)
  2546  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0251  082A               	movf	?__tdiv_to_l_+2,w
  2548  0252  1683               	bsf	3,5	;RP0=1, select bank1
  2549  0253  00AA               	movwf	(_printf$3165+2)^(0+128)
  2550  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0255  0829               	movf	?__tdiv_to_l_+1,w
  2552  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2553  0257  00A9               	movwf	(_printf$3165+1)^(0+128)
  2554  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2555  0259  0828               	movf	?__tdiv_to_l_,w
  2556  025A  1683               	bsf	3,5	;RP0=1, select bank1
  2557  025B  00A8               	movwf	_printf$3165^(0+128)
  2558  025C  082B               	movf	(_printf$3165+3)^(0+128),w
  2559  025D  00B4               	movwf	(printf@_val+3)^(0+128)
  2560  025E  082A               	movf	(_printf$3165+2)^(0+128),w
  2561  025F  00B3               	movwf	(printf@_val+2)^(0+128)
  2562  0260  0829               	movf	(_printf$3165+1)^(0+128),w
  2563  0261  00B2               	movwf	(printf@_val+1)^(0+128)
  2564  0262  0828               	movf	_printf$3165^(0+128),w
  2565  0263  00B1               	movwf	printf@_val^(0+128)
  2566  0264  01BB               	clrf	printf@fval^(0+128)
  2567  0265  01BC               	clrf	(printf@fval+1)^(0+128)
  2568  0266  01BD               	clrf	(printf@fval+2)^(0+128)
  2569  0267  2AA9               	goto	l7524
  2570  0268                     l7520:	
  2571  0268  277C               	call	PL30	;select bank 1
  2572  0269  083B               	movf	printf@fval^(0+128),w
  2573  026A  2752  120A  118A   	fcall	PL15	;call to abstracted procedure
  2574  026D  260D  120A  118A   	fcall	___fttol
  2575  0270  273B  120A  118A   	fcall	PL9	;call to abstracted procedure
  2576  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2577  0274  00B1               	movwf	printf@_val^(0+128)
  2578  0275  0834               	movf	(printf@_val+3)^(0+128),w
  2579  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2580  0277  00B3               	movwf	?___lltoft+3
  2581  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2582  0279  0833               	movf	(printf@_val+2)^(0+128),w
  2583  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2584  027B  00B2               	movwf	?___lltoft+2
  2585  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2586  027D  0832               	movf	(printf@_val+1)^(0+128),w
  2587  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2588  027F  00B1               	movwf	?___lltoft+1
  2589  0280  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0281  0831               	movf	printf@_val^(0+128),w
  2591  0282  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0283  00B0               	movwf	?___lltoft
  2593  0284  26B8  120A  118A   	fcall	___lltoft
  2594  0287  0830               	movf	?___lltoft,w
  2595  0288  00DE               	movwf	?___ftsub
  2596  0289  0831               	movf	?___lltoft+1,w
  2597  028A  00DF               	movwf	?___ftsub+1
  2598  028B  0832               	movf	?___lltoft+2,w
  2599  028C  00E0               	movwf	?___ftsub+2
  2600  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2601  028E  083B               	movf	printf@fval^(0+128),w
  2602  028F  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0290  00E1               	movwf	?___ftsub+3
  2604  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0292  083C               	movf	(printf@fval+1)^(0+128),w
  2606  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0294  00E2               	movwf	?___ftsub+4
  2608  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2609  0296  083D               	movf	(printf@fval+2)^(0+128),w
  2610  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0298  00E3               	movwf	?___ftsub+5
  2612  0299  26D8  120A  118A   	fcall	___ftsub
  2613  029C  085E               	movf	?___ftsub,w
  2614  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2615  029E  00BB               	movwf	printf@fval^(0+128)
  2616  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2617  02A0  085F               	movf	?___ftsub+1,w
  2618  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2619  02A2  00BC               	movwf	(printf@fval+1)^(0+128)
  2620  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2621  02A4  0860               	movf	?___ftsub+2,w
  2622  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  2623  02A6  00BD               	movwf	(printf@fval+2)^(0+128)
  2624  02A7  01B7               	clrf	printf@exp^(0+128)
  2625  02A8  01B8               	clrf	(printf@exp+1)^(0+128)
  2626  02A9                     l7524:	
  2627  02A9  01C0               	clrf	printf@c^(0+128)
  2628  02AA  0AC0               	incf	printf@c^(0+128),f
  2629  02AB                     l7530:	
  2630  02AB  2702               	fcall	PL4	;call to abstracted procedure
  2631  02AC  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2632  02B1  00A4               	movwf	(??_printf+1)^(0+128)
  2633  02B2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2634  02B7  00A5               	movwf	((??_printf+1)^(0+128)+1)
  2635  02B8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2636  02BD  00A6               	movwf	((??_printf+1)^(0+128)+2)
  2637  02BE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2638  02C3  00A7               	movwf	((??_printf+1)^(0+128)+3)
  2639  02C4  0827               	movf	(??_printf+4)^(0+128),w
  2640  02C5  0234               	subwf	(printf@_val+3)^(0+128),w
  2641  02C6  1D03               	skipz
  2642  02C7  2AD2               	goto	u4455
  2643  02C8  0826               	movf	(??_printf+3)^(0+128),w
  2644  02C9  0233               	subwf	(printf@_val+2)^(0+128),w
  2645  02CA  1D03               	skipz
  2646  02CB  2AD2               	goto	u4455
  2647  02CC  0825               	movf	(??_printf+2)^(0+128),w
  2648  02CD  0232               	subwf	(printf@_val+1)^(0+128),w
  2649  02CE  1D03               	skipz
  2650  02CF  2AD2               	goto	u4455
  2651  02D0  0824               	movf	(??_printf+1)^(0+128),w
  2652  02D1  0231               	subwf	printf@_val^(0+128),w
  2653  02D2                     u4455:	
  2654  02D2  1C03               	btfss	3,0
  2655  02D3  2AD9               	goto	l7538
  2656  02D4  0AC0               	incf	printf@c^(0+128),f
  2657  02D5  0840               	movf	printf@c^(0+128),w
  2658  02D6  3A0A               	xorlw	10
  2659  02D7  1D03               	skipz
  2660  02D8  2AAB               	goto	l7530
  2661  02D9                     l7538:	
  2662  02D9  083E               	movf	printf@prec^(0+128),w
  2663  02DA  0740               	addwf	printf@c^(0+128),w
  2664  02DB  00A3               	movwf	??_printf^(0+128)
  2665  02DC  083F               	movf	(printf@prec+1)^(0+128),w
  2666  02DD  1803               	skipnc
  2667  02DE  0A3F               	incf	(printf@prec+1)^(0+128),w
  2668  02DF  1BC0               	btfsc	printf@c^(0+128),7
  2669  02E0  3EFF               	addlw	255
  2670  02E1  00A4               	movwf	(??_printf^(0+128)+1)
  2671  02E2  0837               	movf	printf@exp^(0+128),w
  2672  02E3  0723               	addwf	??_printf^(0+128),w
  2673  02E4  00A5               	movwf	(??_printf+2)^(0+128)
  2674  02E5  0838               	movf	(printf@exp+1)^(0+128),w
  2675  02E6  1803               	skipnc
  2676  02E7  0A38               	incf	(printf@exp+1)^(0+128),w
  2677  02E8  0724               	addwf	(??_printf+1)^(0+128),w
  2678  02E9  00A6               	movwf	(??_printf+3)^(0+128)
  2679  02EA  0825               	movf	(??_printf+2)^(0+128),w
  2680  02EB  02B9               	subwf	printf@width^(0+128),f
  2681  02EC  0826               	movf	(??_printf+3)^(0+128),w
  2682  02ED  1C03               	skipc
  2683  02EE  03BA               	decf	(printf@width+1)^(0+128),f
  2684  02EF  02BA               	subwf	(printf@width+1)^(0+128),f
  2685  02F0  083F               	movf	(printf@prec+1)^(0+128),w
  2686  02F1  043E               	iorwf	printf@prec^(0+128),w
  2687  02F2  1903               	skipnz
  2688  02F3  2AF8               	goto	l7544
  2689  02F4  30FF               	movlw	-1
  2690  02F5  07B9               	addwf	printf@width^(0+128),f
  2691  02F6  1C03               	skipc
  2692  02F7  03BA               	decf	(printf@width+1)^(0+128),f
  2693  02F8                     l7544:	
  2694  02F8  0835               	movf	printf@flag^(0+128),w
  2695  02F9  3903               	andlw	3
  2696  02FA  1903               	btfsc	3,2
  2697  02FB  2B00               	goto	l7548
  2698  02FC  30FF               	movlw	-1
  2699  02FD  07B9               	addwf	printf@width^(0+128),f
  2700  02FE  1C03               	skipc
  2701  02FF  03BA               	decf	(printf@width+1)^(0+128),f
  2702  0300                     l7548:	
  2703  0300  1935               	btfsc	printf@flag^(0+128),2
  2704  0301  2B0C               	goto	l7556
  2705  0302  2B21               	goto	l7562
  2706  0303                     l7552:	
  2707  0303  3030               	movlw	48
  2708  0304  2575  120A  118A   	fcall	_putch
  2709  0307  30FF               	movlw	-1
  2710  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0309  07B9               	addwf	printf@width^(0+128),f
  2712  030A  1C03               	skipc
  2713  030B  03BA               	decf	(printf@width+1)^(0+128),f
  2714  030C                     l7556:	
  2715  030C  083A               	movf	(printf@width+1)^(0+128),w
  2716  030D  3A80               	xorlw	128
  2717  030E  00FF               	movwf	127
  2718  030F  3080               	movlw	128
  2719  0310  027F               	subwf	127,w
  2720  0311  1D03               	skipz
  2721  0312  2B15               	goto	u4505
  2722  0313  3001               	movlw	1
  2723  0314  0239               	subwf	printf@width^(0+128),w
  2724  0315                     u4505:	
  2725  0315  1C03               	btfss	3,0
  2726  0316  2B60               	goto	l7570
  2727  0317  2B03               	goto	l7552
  2728  0318                     l7558:	
  2729  0318  3020               	movlw	32
  2730  0319  2575  120A  118A   	fcall	_putch
  2731  031C  30FF               	movlw	-1
  2732  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2733  031E  07B9               	addwf	printf@width^(0+128),f
  2734  031F  1C03               	skipc
  2735  0320  03BA               	decf	(printf@width+1)^(0+128),f
  2736  0321                     l7562:	
  2737  0321  083A               	movf	(printf@width+1)^(0+128),w
  2738  0322  3A80               	xorlw	128
  2739  0323  00FF               	movwf	127
  2740  0324  3080               	movlw	128
  2741  0325  027F               	subwf	127,w
  2742  0326  1D03               	skipz
  2743  0327  2B2A               	goto	u4515
  2744  0328  3001               	movlw	1
  2745  0329  0239               	subwf	printf@width^(0+128),w
  2746  032A                     u4515:	
  2747  032A  1803               	skipnc
  2748  032B  2B18               	goto	l7558
  2749  032C  277C               	call	PL30	;select bank 1
  2750  032D  0835               	movf	printf@flag^(0+128),w
  2751  032E  3903               	andlw	3
  2752  032F  1903               	btfsc	3,2
  2753  0330  2B60               	goto	l7570
  2754  0331  302D               	movlw	45
  2755  0332  2B5D               	goto	L2
  2756  0333                     l7568:	
  2757  0333  2717  120A  118A   	fcall	PL6	;call to abstracted procedure
  2758  0336  2702               	fcall	PL4	;call to abstracted procedure
  2759  0337  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2760  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2761  033D  00A8               	movwf	?___lldiv
  2762  033E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2763  0343  00A9               	movwf	?___lldiv+1
  2764  0344  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2765  0349  00AA               	movwf	?___lldiv+2
  2766  034A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2767  034F  26F0  120A  118A   	fcall	PL2	;call to abstracted procedure
  2768  0352  2668  120A  118A   	fcall	___lldiv
  2769  0355  2749  120A  118A   	fcall	PL14	;call to abstracted procedure
  2770  0358  257B  120A  118A   	fcall	___llmod
  2771  035B  0835               	movf	?___llmod,w
  2772  035C  3E30               	addlw	48
  2773  035D                     L2:	
  2774  035D  2575  120A  118A   	fcall	_putch
  2775  0360                     l7570:	
  2776  0360  277C               	call	PL30	;select bank 1
  2777  0361  03C0               	decf	printf@c^(0+128),f
  2778  0362  0F40               	incfsz	printf@c^(0+128),w
  2779  0363  2B33               	goto	l7568
  2780  0364                     l7576:	
  2781  0364  0838               	movf	(printf@exp+1)^(0+128),w
  2782  0365  3A80               	xorlw	128
  2783  0366  00FF               	movwf	127
  2784  0367  3080               	movlw	128
  2785  0368  027F               	subwf	127,w
  2786  0369  1D03               	skipz
  2787  036A  2B6D               	goto	u4545
  2788  036B  3001               	movlw	1
  2789  036C  0237               	subwf	printf@exp^(0+128),w
  2790  036D                     u4545:	
  2791  036D  1C03               	btfss	3,0
  2792  036E  2B79               	goto	l7578
  2793  036F  3030               	movlw	48
  2794  0370  2575  120A  118A   	fcall	_putch
  2795  0373  30FF               	movlw	-1
  2796  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2797  0375  07B7               	addwf	printf@exp^(0+128),f
  2798  0376  1C03               	skipc
  2799  0377  03B8               	decf	(printf@exp+1)^(0+128),f
  2800  0378  2B64               	goto	l7576
  2801  0379                     l7578:	
  2802  0379  277C               	call	PL30	;select bank 1
  2803  037A  083F               	movf	(printf@prec+1)^(0+128),w
  2804  037B  3A80               	xorlw	128
  2805  037C  00FF               	movwf	127
  2806  037D  3080               	movlw	128
  2807  037E  027F               	subwf	127,w
  2808  037F  1D03               	skipz
  2809  0380  2B83               	goto	u4555
  2810  0381  3009               	movlw	9
  2811  0382  023E               	subwf	printf@prec^(0+128),w
  2812  0383                     u4555:	
  2813  0383  1C03               	skipc
  2814  0384  2B88               	goto	l7582
  2815  0385  3008               	movlw	8
  2816  0386  277C               	call	PL30	;select bank 1
  2817  0387  2B8A               	goto	L3
  2818  0388                     l7582:	
  2819  0388  277C               	call	PL30	;select bank 1
  2820  0389  083E               	movf	printf@prec^(0+128),w
  2821  038A                     L3:	
  2822  038A  00C0               	movwf	printf@c^(0+128)
  2823  038B  00A3               	movwf	??_printf^(0+128)
  2824  038C  01A4               	clrf	(??_printf^(0+128)+1)
  2825  038D  1BA3               	btfsc	??_printf^(0+128),7
  2826  038E  03A4               	decf	(??_printf^(0+128)+1),f
  2827  038F  02BE               	subwf	printf@prec^(0+128),f
  2828  0390  0824               	movf	(??_printf+1)^(0+128),w
  2829  0391  1C03               	skipc
  2830  0392  03BF               	decf	(printf@prec+1)^(0+128),f
  2831  0393  02BF               	subwf	(printf@prec+1)^(0+128),f
  2832  0394  0840               	movf	printf@c^(0+128),w
  2833  0395  1903               	btfsc	3,2
  2834  0396  2B99               	goto	l2262
  2835  0397  302E               	movlw	46
  2836  0398  2575               	fcall	_putch
  2837  0399                     l2262:	
  2838  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2839  039A  0840               	movf	printf@c^(0+128),w
  2840  039B  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2841  03A0  0852               	movf	?_scale,w
  2842  03A1  00C6               	movwf	?___ftmul+3
  2843  03A2  0853               	movf	?_scale+1,w
  2844  03A3  00C7               	movwf	?___ftmul+4
  2845  03A4  0854               	movf	?_scale+2,w
  2846  03A5  00C8               	movwf	?___ftmul+5
  2847  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2848  03A7  083B               	movf	printf@fval^(0+128),w
  2849  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2850  03A9  275D               	fcall	PL19	;call to abstracted procedure
  2851  03AA  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2852  03AF  0843               	movf	?___ftmul,w
  2853  03B0  00B6               	movwf	?___fttol
  2854  03B1  0844               	movf	?___ftmul+1,w
  2855  03B2  00B7               	movwf	?___fttol+1
  2856  03B3  0845               	movf	?___ftmul+2,w
  2857  03B4  00B8               	movwf	?___fttol+2
  2858  03B5  260D  120A  118A   	fcall	___fttol
  2859  03B8  273B  120A  118A   	fcall	PL9	;call to abstracted procedure
  2860  03BB  2C24               	goto	L4
  2861  03BC                     l7586:	
  2862  03BC  2717  120A  118A   	fcall	PL6	;call to abstracted procedure
  2863  03BF  2702               	fcall	PL4	;call to abstracted procedure
  2864  03C0  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2865  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2866  03C6  00A8               	movwf	?___lldiv
  2867  03C7  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2868  03CC  00A9               	movwf	?___lldiv+1
  2869  03CD  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2870  03D2  00AA               	movwf	?___lldiv+2
  2871  03D3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2872  03D8  26F0  120A  118A   	fcall	PL2	;call to abstracted procedure
  2873  03DB  2668  120A  118A   	fcall	___lldiv
  2874  03DE  2749  120A  118A   	fcall	PL14	;call to abstracted procedure
  2875  03E1  257B  120A  118A   	fcall	___llmod
  2876  03E4  0835               	movf	?___llmod,w
  2877  03E5  3E30               	addlw	48
  2878  03E6  2575  120A  118A   	fcall	_putch
  2879  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2880  03EA  2702               	fcall	PL4	;call to abstracted procedure
  2881  03EB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2882  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2883  03F1  00B5               	movwf	?___llmod
  2884  03F2  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2885  03F7  00B6               	movwf	?___llmod+1
  2886  03F8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2887  03FD  00B7               	movwf	?___llmod+2
  2888  03FE  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2889  0403  00B8               	movwf	?___llmod+3
  2890  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2891  0405  0834               	movf	(printf@_val+3)^(0+128),w
  2892  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2893  0407  00BC               	movwf	?___llmod+7
  2894  0408  1683               	bsf	3,5	;RP0=1, select bank1
  2895  0409  0833               	movf	(printf@_val+2)^(0+128),w
  2896  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2897  040B  00BB               	movwf	?___llmod+6
  2898  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2899  040D  0832               	movf	(printf@_val+1)^(0+128),w
  2900  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2901  040F  00BA               	movwf	?___llmod+5
  2902  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2903  0411  0831               	movf	printf@_val^(0+128),w
  2904  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0413  00B9               	movwf	?___llmod+4
  2906  0414  257B  120A  118A   	fcall	___llmod
  2907  0417  0838               	movf	?___llmod+3,w
  2908  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2909  0419  00B4               	movwf	(printf@_val+3)^(0+128)
  2910  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2911  041B  0837               	movf	?___llmod+2,w
  2912  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2913  041D  00B3               	movwf	(printf@_val+2)^(0+128)
  2914  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2915  041F  0836               	movf	?___llmod+1,w
  2916  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2917  0421  00B2               	movwf	(printf@_val+1)^(0+128)
  2918  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0423  0835               	movf	?___llmod,w
  2920  0424                     L4:	
  2921  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0425  00B1               	movwf	printf@_val^(0+128)
  2923  0426  03C0               	decf	printf@c^(0+128),f
  2924  0427  0F40               	incfsz	printf@c^(0+128),w
  2925  0428  2BBC               	goto	l7586
  2926  0429                     l7594:	
  2927  0429  083F               	movf	(printf@prec+1)^(0+128),w
  2928  042A  043E               	iorwf	printf@prec^(0+128),w
  2929  042B  1903               	btfsc	3,2
  2930  042C  2814               	goto	l7680
  2931  042D  3030               	movlw	48
  2932  042E  2575  120A  118A   	fcall	_putch
  2933  0431  30FF               	movlw	-1
  2934  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2935  0433  07BE               	addwf	printf@prec^(0+128),f
  2936  0434  1C03               	skipc
  2937  0435  03BF               	decf	(printf@prec+1)^(0+128),f
  2938  0436  2C29               	goto	l7594
  2939  0437                     l7596:	
  2940  0437  082C               	movf	printf@ap^(0+128),w
  2941  0438  0084               	movwf	4
  2942  0439  1383               	bcf	3,7	;select IRP bank0
  2943  043A  0800               	movf	0,w
  2944  043B  00A3               	movwf	??_printf^(0+128)
  2945  043C  0A84               	incf	4,f
  2946  043D  0800               	movf	0,w
  2947  043E  00A4               	movwf	(??_printf^(0+128)+1)
  2948  043F  0823               	movf	??_printf^(0+128),w
  2949  0440  00B1               	movwf	printf@_val^(0+128)
  2950  0441  0824               	movf	(??_printf+1)^(0+128),w
  2951  0442  00B2               	movwf	(printf@_val+1)^(0+128)
  2952  0443  3000               	movlw	0
  2953  0444  1BB2               	btfsc	(printf@_val+1)^(0+128),7
  2954  0445  30FF               	movlw	255
  2955  0446  00B3               	movwf	(printf@_val+2)^(0+128)
  2956  0447  00B4               	movwf	(printf@_val+3)^(0+128)
  2957  0448  0AAC               	incf	printf@ap^(0+128),f
  2958  0449  0AAC               	incf	printf@ap^(0+128),f
  2959  044A  1FB4               	btfss	(printf@_val+3)^(0+128),7
  2960  044B  2C59               	goto	l7606
  2961  044C  3003               	movlw	3
  2962  044D  04B5               	iorwf	printf@flag^(0+128),f
  2963  044E  09B1               	comf	printf@_val^(0+128),f
  2964  044F  09B2               	comf	(printf@_val+1)^(0+128),f
  2965  0450  09B3               	comf	(printf@_val+2)^(0+128),f
  2966  0451  09B4               	comf	(printf@_val+3)^(0+128),f
  2967  0452  0AB1               	incf	printf@_val^(0+128),f
  2968  0453  1903               	skipnz
  2969  0454  0AB2               	incf	(printf@_val+1)^(0+128),f
  2970  0455  1903               	skipnz
  2971  0456  0AB3               	incf	(printf@_val+2)^(0+128),f
  2972  0457  1903               	skipnz
  2973  0458  0AB4               	incf	(printf@_val+3)^(0+128),f
  2974  0459                     l7606:	
  2975  0459  083F               	movf	(printf@prec+1)^(0+128),w
  2976  045A  043E               	iorwf	printf@prec^(0+128),w
  2977  045B  1D03               	skipz
  2978  045C  2C65               	goto	l7612
  2979  045D  0834               	movf	(printf@_val+3)^(0+128),w
  2980  045E  0433               	iorwf	(printf@_val+2)^(0+128),w
  2981  045F  0432               	iorwf	(printf@_val+1)^(0+128),w
  2982  0460  0431               	iorwf	printf@_val^(0+128),w
  2983  0461  1903               	btfsc	3,2
  2984  0462  0ABE               	incf	printf@prec^(0+128),f
  2985  0463  1903               	skipnz
  2986  0464  0ABF               	incf	(printf@prec+1)^(0+128),f
  2987  0465                     l7612:	
  2988  0465  01C0               	clrf	printf@c^(0+128)
  2989  0466  0AC0               	incf	printf@c^(0+128),f
  2990  0467                     l7618:	
  2991  0467  2702               	fcall	PL4	;call to abstracted procedure
  2992  0468  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2993  046D  00A4               	movwf	(??_printf+1)^(0+128)
  2994  046E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2995  0473  00A5               	movwf	((??_printf+1)^(0+128)+1)
  2996  0474  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2997  0479  00A6               	movwf	((??_printf+1)^(0+128)+2)
  2998  047A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2999  047F  00A7               	movwf	((??_printf+1)^(0+128)+3)
  3000  0480  0827               	movf	(??_printf+4)^(0+128),w
  3001  0481  0234               	subwf	(printf@_val+3)^(0+128),w
  3002  0482  1D03               	skipz
  3003  0483  2C8E               	goto	u4625
  3004  0484  0826               	movf	(??_printf+3)^(0+128),w
  3005  0485  0233               	subwf	(printf@_val+2)^(0+128),w
  3006  0486  1D03               	skipz
  3007  0487  2C8E               	goto	u4625
  3008  0488  0825               	movf	(??_printf+2)^(0+128),w
  3009  0489  0232               	subwf	(printf@_val+1)^(0+128),w
  3010  048A  1D03               	skipz
  3011  048B  2C8E               	goto	u4625
  3012  048C  0824               	movf	(??_printf+1)^(0+128),w
  3013  048D  0231               	subwf	printf@_val^(0+128),w
  3014  048E                     u4625:	
  3015  048E  1C03               	btfss	3,0
  3016  048F  2C95               	goto	l7626
  3017  0490  0AC0               	incf	printf@c^(0+128),f
  3018  0491  0840               	movf	printf@c^(0+128),w
  3019  0492  3A0A               	xorlw	10
  3020  0493  1D03               	skipz
  3021  0494  2C67               	goto	l7618
  3022  0495                     l7626:	
  3023  0495  0840               	movf	printf@c^(0+128),w
  3024  0496  2767  120A  118A   	fcall	PL21	;call to abstracted procedure
  3025  0499  083F               	movf	(printf@prec+1)^(0+128),w
  3026  049A  3A80               	xorlw	128
  3027  049B  0225               	subwf	(??_printf+2)^(0+128),w
  3028  049C  1D03               	skipz
  3029  049D  2CA0               	goto	u4645
  3030  049E  083E               	movf	printf@prec^(0+128),w
  3031  049F  0223               	subwf	??_printf^(0+128),w
  3032  04A0                     u4645:	
  3033  04A0  1803               	skipnc
  3034  04A1  2CA6               	goto	l7630
  3035  04A2  277C               	call	PL30	;select bank 1
  3036  04A3  083E               	movf	printf@prec^(0+128),w
  3037  04A4  00C0               	movwf	printf@c^(0+128)
  3038  04A5  2CBE               	goto	l7634
  3039  04A6                     l7630:	
  3040  04A6  277C               	call	PL30	;select bank 1
  3041  04A7  0840               	movf	printf@c^(0+128),w
  3042  04A8  00A3               	movwf	??_printf^(0+128)
  3043  04A9  01A4               	clrf	(??_printf^(0+128)+1)
  3044  04AA  1BA3               	btfsc	??_printf^(0+128),7
  3045  04AB  03A4               	decf	(??_printf^(0+128)+1),f
  3046  04AC  083F               	movf	(printf@prec+1)^(0+128),w
  3047  04AD  3A80               	xorlw	128
  3048  04AE  00A5               	movwf	(??_printf+2)^(0+128)
  3049  04AF  0824               	movf	(??_printf+1)^(0+128),w
  3050  04B0  3A80               	xorlw	128
  3051  04B1  0225               	subwf	(??_printf+2)^(0+128),w
  3052  04B2  1D03               	skipz
  3053  04B3  2CB6               	goto	u4655
  3054  04B4  0823               	movf	??_printf^(0+128),w
  3055  04B5  023E               	subwf	printf@prec^(0+128),w
  3056  04B6                     u4655:	
  3057  04B6  1803               	skipnc
  3058  04B7  2CBE               	goto	l7634
  3059  04B8  277C               	call	PL30	;select bank 1
  3060  04B9  0840               	movf	printf@c^(0+128),w
  3061  04BA  00BE               	movwf	printf@prec^(0+128)
  3062  04BB  01BF               	clrf	(printf@prec+1)^(0+128)
  3063  04BC  1BBE               	btfsc	printf@prec^(0+128),7
  3064  04BD  03BF               	decf	(printf@prec+1)^(0+128),f
  3065  04BE                     l7634:	
  3066  04BE  277C               	call	PL30	;select bank 1
  3067  04BF  083A               	movf	(printf@width+1)^(0+128),w
  3068  04C0  0439               	iorwf	printf@width^(0+128),w
  3069  04C1  1903               	skipnz
  3070  04C2  2CCB               	goto	l7640
  3071  04C3  0835               	movf	printf@flag^(0+128),w
  3072  04C4  3903               	andlw	3
  3073  04C5  1903               	btfsc	3,2
  3074  04C6  2CCB               	goto	l7640
  3075  04C7  30FF               	movlw	-1
  3076  04C8  07B9               	addwf	printf@width^(0+128),f
  3077  04C9  1C03               	skipc
  3078  04CA  03BA               	decf	(printf@width+1)^(0+128),f
  3079  04CB                     l7640:	
  3080  04CB  1F36               	btfss	(printf@flag+1)^(0+128),6
  3081  04CC  2CE4               	goto	l7648
  3082  04CD  083F               	movf	(printf@prec+1)^(0+128),w
  3083  04CE  3A80               	xorlw	128
  3084  04CF  00A3               	movwf	??_printf^(0+128)
  3085  04D0  083A               	movf	(printf@width+1)^(0+128),w
  3086  04D1  3A80               	xorlw	128
  3087  04D2  0223               	subwf	??_printf^(0+128),w
  3088  04D3  1D03               	skipz
  3089  04D4  2CD7               	goto	u4695
  3090  04D5  0839               	movf	printf@width^(0+128),w
  3091  04D6  023E               	subwf	printf@prec^(0+128),w
  3092  04D7                     u4695:	
  3093  04D7  1803               	skipnc
  3094  04D8  2CE1               	goto	l7646
  3095  04D9  277C               	call	PL30	;select bank 1
  3096  04DA  083E               	movf	printf@prec^(0+128),w
  3097  04DB  02B9               	subwf	printf@width^(0+128),f
  3098  04DC  083F               	movf	(printf@prec+1)^(0+128),w
  3099  04DD  1C03               	skipc
  3100  04DE  03BA               	decf	(printf@width+1)^(0+128),f
  3101  04DF  02BA               	subwf	(printf@width+1)^(0+128),f
  3102  04E0  2CE4               	goto	l7648
  3103  04E1                     l7646:	
  3104  04E1  277C               	call	PL30	;select bank 1
  3105  04E2  01B9               	clrf	printf@width^(0+128)
  3106  04E3  01BA               	clrf	(printf@width+1)^(0+128)
  3107  04E4                     l7648:	
  3108  04E4  0840               	movf	printf@c^(0+128),w
  3109  04E5  2767  120A  118A   	fcall	PL21	;call to abstracted procedure
  3110  04E8  083A               	movf	(printf@width+1)^(0+128),w
  3111  04E9  3A80               	xorlw	128
  3112  04EA  0225               	subwf	(??_printf+2)^(0+128),w
  3113  04EB  1D03               	skipz
  3114  04EC  2CEF               	goto	u4705
  3115  04ED  0839               	movf	printf@width^(0+128),w
  3116  04EE  0223               	subwf	??_printf^(0+128),w
  3117  04EF                     u4705:	
  3118  04EF  1803               	skipnc
  3119  04F0  2CFD               	goto	l7652
  3120  04F1  277C               	call	PL30	;select bank 1
  3121  04F2  0840               	movf	printf@c^(0+128),w
  3122  04F3  00A3               	movwf	??_printf^(0+128)
  3123  04F4  01A4               	clrf	(??_printf^(0+128)+1)
  3124  04F5  1BA3               	btfsc	??_printf^(0+128),7
  3125  04F6  03A4               	decf	(??_printf^(0+128)+1),f
  3126  04F7  02B9               	subwf	printf@width^(0+128),f
  3127  04F8  0824               	movf	(??_printf+1)^(0+128),w
  3128  04F9  1C03               	skipc
  3129  04FA  03BA               	decf	(printf@width+1)^(0+128),f
  3130  04FB  02BA               	subwf	(printf@width+1)^(0+128),f
  3131  04FC  2D00               	goto	l7654
  3132  04FD                     l7652:	
  3133  04FD  277C               	call	PL30	;select bank 1
  3134  04FE  01B9               	clrf	printf@width^(0+128)
  3135  04FF  01BA               	clrf	(printf@width+1)^(0+128)
  3136  0500                     l7654:	
  3137  0500  1D35               	btfss	printf@flag^(0+128),2
  3138  0501  2D19               	goto	l7666
  3139  0502  0835               	movf	printf@flag^(0+128),w
  3140  0503  3903               	andlw	3
  3141  0504  1903               	btfsc	3,2
  3142  0505  2D0A               	goto	l7660
  3143  0506  302D               	movlw	45
  3144  0507  2575  120A  118A   	fcall	_putch
  3145  050A                     l7660:	
  3146  050A  1683               	bsf	3,5	;RP0=1, select bank1
  3147  050B                     L6:	
  3148  050B  083A               	movf	(printf@width+1)^(0+128),w
  3149  050C  0439               	iorwf	printf@width^(0+128),w
  3150  050D  1903               	skipnz
  3151  050E  2D32               	goto	l7678
  3152  050F  3030               	movlw	48
  3153  0510  2575  120A  118A   	fcall	_putch
  3154  0513  30FF               	movlw	-1
  3155  0514  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0515  07B9               	addwf	printf@width^(0+128),f
  3157  0516  1C03               	skipc
  3158  0517  03BA               	decf	(printf@width+1)^(0+128),f
  3159  0518  2D0B               	goto	L6
  3160  0519                     l7666:	
  3161  0519  083A               	movf	(printf@width+1)^(0+128),w
  3162  051A  0439               	iorwf	printf@width^(0+128),w
  3163  051B  1903               	skipnz
  3164  051C  2D2A               	goto	l7672
  3165  051D                     l7668:	
  3166  051D  3020               	movlw	32
  3167  051E  2575  120A  118A   	fcall	_putch
  3168  0521  30FF               	movlw	-1
  3169  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0523  07B9               	addwf	printf@width^(0+128),f
  3171  0524  1C03               	skipc
  3172  0525  03BA               	decf	(printf@width+1)^(0+128),f
  3173  0526  083A               	movf	(printf@width+1)^(0+128),w
  3174  0527  0439               	iorwf	printf@width^(0+128),w
  3175  0528  1D03               	skipz
  3176  0529  2D1D               	goto	l7668
  3177  052A                     l7672:	
  3178  052A  0835               	movf	printf@flag^(0+128),w
  3179  052B  3903               	andlw	3
  3180  052C  1903               	btfsc	3,2
  3181  052D  2D32               	goto	l7678
  3182  052E  302D               	movlw	45
  3183  052F                     L5:	
  3184  052F  2575  120A  118A   	fcall	_putch
  3185  0532                     l7678:	
  3186  0532  30FF               	movlw	-1
  3187  0533  1683               	bsf	3,5	;RP0=1, select bank1
  3188  0534  07BE               	addwf	printf@prec^(0+128),f
  3189  0535  1C03               	skipc
  3190  0536  03BF               	decf	(printf@prec+1)^(0+128),f
  3191  0537  0A3E               	incf	printf@prec^(0+128),w
  3192  0538  1903               	skipnz
  3193  0539  0A3F               	incf	(printf@prec+1)^(0+128),w
  3194  053A  1903               	btfsc	3,2
  3195  053B  2814               	goto	l7680
  3196  053C  300A               	movlw	10
  3197  053D  1283               	bcf	3,5	;RP0=0, select bank0
  3198  053E  00B5               	movwf	?___llmod
  3199  053F  01B6               	clrf	?___llmod+1
  3200  0540  01B7               	clrf	?___llmod+2
  3201  0541  01B8               	clrf	?___llmod+3
  3202  0542  1683               	bsf	3,5	;RP0=1, select bank1
  3203  0543  083E               	movf	printf@prec^(0+128),w
  3204  0544  00A3               	movwf	??_printf^(0+128)
  3205  0545  1003               	clrc
  3206  0546  0DA3               	rlf	??_printf^(0+128),f
  3207  0547  1003               	clrc
  3208  0548  0D23               	rlf	??_printf^(0+128),w
  3209  0549  3E4F               	addlw	low (_dpowers-__stringbase)
  3210  054A  0084               	movwf	4
  3211  054B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3212  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0551  00A8               	movwf	?___lldiv
  3214  0552  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3215  0557  00A9               	movwf	?___lldiv+1
  3216  0558  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3217  055D  00AA               	movwf	?___lldiv+2
  3218  055E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3219  0563  26F0  120A  118A   	fcall	PL2	;call to abstracted procedure
  3220  0566  2668  120A  118A   	fcall	___lldiv
  3221  0569  2749  120A  118A   	fcall	PL14	;call to abstracted procedure
  3222  056C  257B  120A  118A   	fcall	___llmod
  3223  056F  0835               	movf	?___llmod,w
  3224  0570  3E30               	addlw	48
  3225  0571  1683               	bsf	3,5	;RP0=1, select bank1
  3226  0572  00C0               	movwf	printf@c^(0+128)
  3227  0573  2D2F               	goto	L5
  3228  0574                     l2297:	
  3229  0574  0008               	return
  3230  0575                     __end_of_printf:	
  3231  0575                     __ptext555:	
  3232 ;; =============== function _printf ends ============
  3233                           
  3234                           
  3235 ;; *************** function _putch *****************
  3236 ;; Defined at:
  3237 ;;		line 51 in file "D:\TTVXL\Project TTVXL\BT04week11ttvxl\BT04week11ttvxl.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  c               1    wreg     unsigned char 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  c               1   17[BANK0 ] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;		None               void
  3244 ;; Registers used:
  3245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/20
  3248 ;;		On exit  : 60/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3251 ;;      Params:         0       0       0       0       0
  3252 ;;      Locals:         0       1       0       0       0
  3253 ;;      Temps:          0       0       0       0       0
  3254 ;;      Totals:         0       1       0       0       0
  3255 ;;Total ram usage:        1 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    6
  3258 ;; This function calls:
  3259 ;;		_lcd_putc
  3260 ;; This function is called by:
  3261 ;;		_printf
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264  0575                     _putch:	
  3265                           
  3266                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3267                           ;putch@c stored from wreg
  3268  0575  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0576  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0577  00B1               	movwf	putch@c
  3271                           
  3272                           ;BT04week11ttvxl.c: 52: lcd_putc(c);
  3273  0578  120A  158A  2A6D   	ljmp	_lcd_putc
  3274  057B                     __end_of_putch:	
  3275  057B                     __ptext574:	
  3276 ;; =============== function ___ftneg ends ============
  3277                           
  3278                           
  3279 ;; *************** function ___llmod *****************
  3280 ;; Defined at:
  3281 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  divisor         4   21[BANK0 ] unsigned long 
  3284 ;;  dividend        4   25[BANK0 ] unsigned long 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  counter         1   29[BANK0 ] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  4   21[BANK0 ] unsigned long 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 60/0
  3293 ;;		On exit  : 60/0
  3294 ;;		Unchanged: FFF9F/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3296 ;;      Params:         0       8       0       0       0
  3297 ;;      Locals:         0       1       0       0       0
  3298 ;;      Temps:          0       0       0       0       0
  3299 ;;      Totals:         0       9       0       0       0
  3300 ;;Total ram usage:        9 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    3
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_printf
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309  057B                     ___llmod:	
  3310                           
  3311                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3312  057B  0838               	movf	___llmod@divisor+3,w
  3313  057C  0437               	iorwf	___llmod@divisor+2,w
  3314  057D  0436               	iorwf	___llmod@divisor+1,w
  3315  057E  0435               	iorwf	___llmod@divisor,w
  3316  057F  1903               	skipnz
  3317  0580  2DB0               	goto	l6806
  3318  0581  01BD               	clrf	___llmod@counter
  3319  0582                     L14:	
  3320  0582  0ABD               	incf	___llmod@counter,f
  3321  0583  1BB8               	btfsc	___llmod@divisor+3,7
  3322  0584  2D8B               	goto	l6798
  3323  0585  1003               	clrc
  3324  0586  0DB5               	rlf	___llmod@divisor,f
  3325  0587  0DB6               	rlf	___llmod@divisor+1,f
  3326  0588  0DB7               	rlf	___llmod@divisor+2,f
  3327  0589  0DB8               	rlf	___llmod@divisor+3,f
  3328  058A  2D82               	goto	L14
  3329  058B                     l6798:	
  3330  058B  0838               	movf	___llmod@divisor+3,w
  3331  058C  023C               	subwf	___llmod@dividend+3,w
  3332  058D  1D03               	skipz
  3333  058E  2D99               	goto	u3125
  3334  058F  0837               	movf	___llmod@divisor+2,w
  3335  0590  023B               	subwf	___llmod@dividend+2,w
  3336  0591  1D03               	skipz
  3337  0592  2D99               	goto	u3125
  3338  0593  0836               	movf	___llmod@divisor+1,w
  3339  0594  023A               	subwf	___llmod@dividend+1,w
  3340  0595  1D03               	skipz
  3341  0596  2D99               	goto	u3125
  3342  0597  0835               	movf	___llmod@divisor,w
  3343  0598  0239               	subwf	___llmod@dividend,w
  3344  0599                     u3125:	
  3345  0599  1C03               	skipc
  3346  059A  2DAA               	goto	L15
  3347  059B  0835               	movf	___llmod@divisor,w
  3348  059C  02B9               	subwf	___llmod@dividend,f
  3349  059D  0836               	movf	___llmod@divisor+1,w
  3350  059E  1C03               	skipc
  3351  059F  0F36               	incfsz	___llmod@divisor+1,w
  3352  05A0  02BA               	subwf	___llmod@dividend+1,f
  3353  05A1  0837               	movf	___llmod@divisor+2,w
  3354  05A2  1C03               	skipc
  3355  05A3  0F37               	incfsz	___llmod@divisor+2,w
  3356  05A4  02BB               	subwf	___llmod@dividend+2,f
  3357  05A5  0838               	movf	___llmod@divisor+3,w
  3358  05A6  1C03               	skipc
  3359  05A7  0F38               	incfsz	___llmod@divisor+3,w
  3360  05A8  02BC               	subwf	___llmod@dividend+3,f
  3361  05A9  1003               	clrc
  3362  05AA                     L15:	
  3363  05AA  0CB8               	rrf	___llmod@divisor+3,f
  3364  05AB  0CB7               	rrf	___llmod@divisor+2,f
  3365  05AC  0CB6               	rrf	___llmod@divisor+1,f
  3366  05AD  0CB5               	rrf	___llmod@divisor,f
  3367  05AE  0BBD               	decfsz	___llmod@counter,f
  3368  05AF  2D8B               	goto	l6798
  3369  05B0                     l6806:	
  3370  05B0  083C               	movf	___llmod@dividend+3,w
  3371  05B1  00B8               	movwf	?___llmod+3
  3372  05B2  083B               	movf	___llmod@dividend+2,w
  3373  05B3  00B7               	movwf	?___llmod+2
  3374  05B4  083A               	movf	___llmod@dividend+1,w
  3375  05B5  00B6               	movwf	?___llmod+1
  3376  05B6  0839               	movf	___llmod@dividend,w
  3377  05B7  00B5               	movwf	?___llmod
  3378  05B8  0008               	return
  3379  05B9                     __end_of___llmod:	
  3380  05B9                     __ptext572:	
  3381 ;; =============== function ___lldiv ends ============
  3382                           
  3383                           
  3384 ;; *************** function ___ftge *****************
  3385 ;; Defined at:
  3386 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  ff1             3    8[BANK0 ] float 
  3389 ;;  ff2             3   11[BANK0 ] float 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;		None
  3392 ;; Return value:  Size  Location     Type
  3393 ;;		None               void
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0
  3396 ;; Tracked objects:
  3397 ;;		On entry : 60/0
  3398 ;;		On exit  : 60/0
  3399 ;;		Unchanged: FFF9F/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       6       0       0       0
  3402 ;;      Locals:         0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0
  3404 ;;      Totals:         0       6       0       0       0
  3405 ;;Total ram usage:        6 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; Hardware stack levels required when called:    3
  3408 ;; This function calls:
  3409 ;;		Nothing
  3410 ;; This function is called by:
  3411 ;;		_printf
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414  05B9                     ___ftge:	
  3415                           
  3416                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3417  05B9  1FAA               	btfss	___ftge@ff1+2,7
  3418  05BA  2DC8               	goto	l6822
  3419  05BB  0828               	movf	___ftge@ff1,w
  3420  05BC  3C00               	sublw	0
  3421  05BD  00A8               	movwf	___ftge@ff1
  3422  05BE  0829               	movf	___ftge@ff1+1,w
  3423  05BF  1C03               	skipc
  3424  05C0  0F29               	incfsz	___ftge@ff1+1,w
  3425  05C1  3C00               	sublw	0
  3426  05C2  00A9               	movwf	___ftge@ff1+1
  3427  05C3  082A               	movf	___ftge@ff1+2,w
  3428  05C4  1C03               	skipc
  3429  05C5  0F2A               	incfsz	___ftge@ff1+2,w
  3430  05C6  3C80               	sublw	128
  3431  05C7  00AA               	movwf	___ftge@ff1+2
  3432  05C8                     l6822:	
  3433  05C8  1FAD               	btfss	___ftge@ff2+2,7
  3434  05C9  2DD7               	goto	l6826
  3435  05CA  082B               	movf	___ftge@ff2,w
  3436  05CB  3C00               	sublw	0
  3437  05CC  00AB               	movwf	___ftge@ff2
  3438  05CD  082C               	movf	___ftge@ff2+1,w
  3439  05CE  1C03               	skipc
  3440  05CF  0F2C               	incfsz	___ftge@ff2+1,w
  3441  05D0  3C00               	sublw	0
  3442  05D1  00AC               	movwf	___ftge@ff2+1
  3443  05D2  082D               	movf	___ftge@ff2+2,w
  3444  05D3  1C03               	skipc
  3445  05D4  0F2D               	incfsz	___ftge@ff2+2,w
  3446  05D5  3C80               	sublw	128
  3447  05D6  00AD               	movwf	___ftge@ff2+2
  3448  05D7                     l6826:	
  3449  05D7  3080               	movlw	128
  3450  05D8  06AA               	xorwf	___ftge@ff1+2,f
  3451  05D9  06AD               	xorwf	___ftge@ff2+2,f
  3452  05DA  082D               	movf	___ftge@ff2+2,w
  3453  05DB  022A               	subwf	___ftge@ff1+2,w
  3454  05DC  1D03               	skipz
  3455  05DD  0008               	return
  3456  05DE  082C               	movf	___ftge@ff2+1,w
  3457  05DF  0229               	subwf	___ftge@ff1+1,w
  3458  05E0  1D03               	skipz
  3459  05E1  0008               	return
  3460  05E2  082B               	movf	___ftge@ff2,w
  3461  05E3  0228               	subwf	___ftge@ff1,w
  3462  05E4  0008               	return
  3463  05E5                     __end_of___ftge:	
  3464  05E5                     __ptext584:	
  3465 ;; =============== function __tdiv_to_l_ ends ============
  3466                           
  3467                           
  3468 ;; *************** function _isdigit *****************
  3469 ;; Defined at:
  3470 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  c               1    wreg     unsigned char 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;  c               1    9[BANK0 ] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;		None               void
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 60/20
  3481 ;;		On exit  : 60/0
  3482 ;;		Unchanged: FFF9F/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       0       0       0       0
  3485 ;;      Locals:         0       2       0       0       0
  3486 ;;      Temps:          0       0       0       0       0
  3487 ;;      Totals:         0       2       0       0       0
  3488 ;;Total ram usage:        2 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    3
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_printf
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497  05E5                     _isdigit:	
  3498                           
  3499                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3500                           ;isdigit@c stored from wreg
  3501  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3502  05E6  00A9               	movwf	isdigit@c
  3503  05E7  303A               	movlw	58
  3504  05E8  01A8               	clrf	_isdigit$3673
  3505  05E9  0229               	subwf	isdigit@c,w
  3506  05EA  1803               	skipnc
  3507  05EB  2DF2               	goto	l6508
  3508  05EC  3030               	movlw	48
  3509  05ED  0229               	subwf	isdigit@c,w
  3510  05EE  1C03               	skipc
  3511  05EF  2DF2               	goto	l6508
  3512  05F0  01A8               	clrf	_isdigit$3673
  3513  05F1  0AA8               	incf	_isdigit$3673,f
  3514  05F2                     l6508:	
  3515  05F2  0C28               	rrf	_isdigit$3673,w
  3516  05F3  0008               	return
  3517  05F4                     __end_of_isdigit:	
  3518  05F4                     __ptext580:	
  3519 ;; =============== function ___lbdiv ends ============
  3520                           
  3521                           
  3522 ;; *************** function ___wmul *****************
  3523 ;; Defined at:
  3524 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  multiplier      2    8[BANK0 ] unsigned int 
  3527 ;;  multiplicand    2   10[BANK0 ] unsigned int 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  product         2   12[BANK0 ] unsigned int 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  2    8[BANK0 ] unsigned int 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0
  3534 ;; Tracked objects:
  3535 ;;		On entry : 60/0
  3536 ;;		On exit  : 60/0
  3537 ;;		Unchanged: FFF9F/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       4       0       0       0
  3540 ;;      Locals:         0       2       0       0       0
  3541 ;;      Temps:          0       0       0       0       0
  3542 ;;      Totals:         0       6       0       0       0
  3543 ;;Total ram usage:        6 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    3
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_fround
  3550 ;;		_scale
  3551 ;;		_printf
  3552 ;; This function uses a non-reentrant model
  3553 ;;
  3554  05F4                     ___wmul:	
  3555                           
  3556                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3557  05F4  01AC               	clrf	___wmul@product
  3558  05F5  01AD               	clrf	___wmul@product+1
  3559  05F6                     l6624:	
  3560  05F6  1C28               	btfss	___wmul@multiplier,0
  3561  05F7  2DFE               	goto	l6628
  3562  05F8  082A               	movf	___wmul@multiplicand,w
  3563  05F9  07AC               	addwf	___wmul@product,f
  3564  05FA  1803               	skipnc
  3565  05FB  0AAD               	incf	___wmul@product+1,f
  3566  05FC  082B               	movf	___wmul@multiplicand+1,w
  3567  05FD  07AD               	addwf	___wmul@product+1,f
  3568  05FE                     l6628:	
  3569  05FE  1003               	clrc
  3570  05FF  0DAA               	rlf	___wmul@multiplicand,f
  3571  0600  0DAB               	rlf	___wmul@multiplicand+1,f
  3572  0601  1003               	clrc
  3573  0602  0CA9               	rrf	___wmul@multiplier+1,f
  3574  0603  0CA8               	rrf	___wmul@multiplier,f
  3575  0604  0829               	movf	___wmul@multiplier+1,w
  3576  0605  0428               	iorwf	___wmul@multiplier,w
  3577  0606  1D03               	skipz
  3578  0607  2DF6               	goto	l6624
  3579  0608  082D               	movf	___wmul@product+1,w
  3580  0609  00A9               	movwf	?___wmul+1
  3581  060A  082C               	movf	___wmul@product,w
  3582  060B  00A8               	movwf	?___wmul
  3583  060C  0008               	return
  3584  060D                     __end_of___wmul:	
  3585  060D                     __ptext576:	
  3586 ;; =============== function ___awdiv ends ============
  3587                           
  3588                           
  3589 ;; *************** function ___fttol *****************
  3590 ;; Defined at:
  3591 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  f1              3   22[BANK0 ] float 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  lval            4   30[BANK0 ] unsigned long 
  3596 ;;  exp1            1   34[BANK0 ] unsigned char 
  3597 ;;  sign1           1   29[BANK0 ] unsigned char 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  4   22[BANK0 ] long 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 60/0
  3604 ;;		On exit  : 60/0
  3605 ;;		Unchanged: FFF9F/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3607 ;;      Params:         0       4       0       0       0
  3608 ;;      Locals:         0       6       0       0       0
  3609 ;;      Temps:          0       3       0       0       0
  3610 ;;      Totals:         0      13       0       0       0
  3611 ;;Total ram usage:       13 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    3
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;;		_printf
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621  060D                     ___fttol:	
  3622                           
  3623                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3624  060D  276F  120A  118A   	fcall	PL27	;call to abstracted procedure
  3625  0610  1003               	clrc
  3626  0611  0D3B               	rlf	??___fttol+1,w
  3627  0612  0D3C               	rlf	??___fttol+2,w
  3628  0613  00C2               	movwf	___fttol@exp1
  3629  0614  08C2               	movf	___fttol@exp1,f
  3630  0615  1D03               	skipz
  3631  0616  2E1C               	goto	l6712
  3632  0617                     l6710:	
  3633  0617  01B6               	clrf	?___fttol
  3634  0618  01B7               	clrf	?___fttol+1
  3635  0619  01B8               	clrf	?___fttol+2
  3636  061A  01B9               	clrf	?___fttol+3
  3637  061B  0008               	return
  3638  061C                     l6712:	
  3639  061C  276F  120A  118A   	fcall	PL27	;call to abstracted procedure
  3640  061F  3017               	movlw	23
  3641  0620                     u2965:	
  3642  0620  1003               	clrc
  3643  0621  0CBC               	rrf	??___fttol+2,f
  3644  0622  0CBB               	rrf	??___fttol+1,f
  3645  0623  0CBA               	rrf	??___fttol,f
  3646  0624  3EFF               	addlw	-1
  3647  0625  1D03               	skipz
  3648  0626  2E20               	goto	u2965
  3649  0627  083A               	movf	??___fttol,w
  3650  0628  00BD               	movwf	___fttol@sign1
  3651  0629  17B7               	bsf	___fttol@f1+1,7
  3652  062A  01B8               	clrf	___fttol@f1+2
  3653  062B  0836               	movf	___fttol@f1,w
  3654  062C  00BE               	movwf	___fttol@lval
  3655  062D  0837               	movf	___fttol@f1+1,w
  3656  062E  00BF               	movwf	___fttol@lval+1
  3657  062F  0838               	movf	___fttol@f1+2,w
  3658  0630  00C0               	movwf	___fttol@lval+2
  3659  0631  308E               	movlw	142
  3660  0632  01C1               	clrf	___fttol@lval+3
  3661  0633  02C2               	subwf	___fttol@exp1,f
  3662  0634  1FC2               	btfss	___fttol@exp1,7
  3663  0635  2E43               	goto	l6732
  3664  0636  0842               	movf	___fttol@exp1,w
  3665  0637  3A80               	xorlw	128
  3666  0638  3E8F               	addlw	143
  3667  0639  1C03               	btfss	3,0
  3668  063A  2E17               	goto	l6710
  3669  063B                     l6728:	
  3670  063B  1003               	clrc
  3671  063C  0CC1               	rrf	___fttol@lval+3,f
  3672  063D  0CC0               	rrf	___fttol@lval+2,f
  3673  063E  0CBF               	rrf	___fttol@lval+1,f
  3674  063F  0CBE               	rrf	___fttol@lval,f
  3675  0640  0FC2               	incfsz	___fttol@exp1,f
  3676  0641  2E3B               	goto	l6728
  3677  0642  2E51               	goto	l6738
  3678  0643                     l6732:	
  3679  0643  3018               	movlw	24
  3680  0644  0242               	subwf	___fttol@exp1,w
  3681  0645  1803               	btfsc	3,0
  3682  0646  2E17               	goto	l6710
  3683  0647                     l3417:	
  3684  0647  08C2               	movf	___fttol@exp1,f
  3685  0648  1903               	btfsc	3,2
  3686  0649  2E51               	goto	l6738
  3687  064A  1003               	clrc
  3688  064B  0DBE               	rlf	___fttol@lval,f
  3689  064C  0DBF               	rlf	___fttol@lval+1,f
  3690  064D  0DC0               	rlf	___fttol@lval+2,f
  3691  064E  0DC1               	rlf	___fttol@lval+3,f
  3692  064F  03C2               	decf	___fttol@exp1,f
  3693  0650  2E47               	goto	l3417
  3694  0651                     l6738:	
  3695  0651  083D               	movf	___fttol@sign1,w
  3696  0652  1903               	btfsc	3,2
  3697  0653  2E5F               	goto	l6742
  3698  0654  09BE               	comf	___fttol@lval,f
  3699  0655  09BF               	comf	___fttol@lval+1,f
  3700  0656  09C0               	comf	___fttol@lval+2,f
  3701  0657  09C1               	comf	___fttol@lval+3,f
  3702  0658  0ABE               	incf	___fttol@lval,f
  3703  0659  1903               	skipnz
  3704  065A  0ABF               	incf	___fttol@lval+1,f
  3705  065B  1903               	skipnz
  3706  065C  0AC0               	incf	___fttol@lval+2,f
  3707  065D  1903               	skipnz
  3708  065E  0AC1               	incf	___fttol@lval+3,f
  3709  065F                     l6742:	
  3710  065F  0841               	movf	___fttol@lval+3,w
  3711  0660  00B9               	movwf	?___fttol+3
  3712  0661  0840               	movf	___fttol@lval+2,w
  3713  0662  00B8               	movwf	?___fttol+2
  3714  0663  083F               	movf	___fttol@lval+1,w
  3715  0664  00B7               	movwf	?___fttol+1
  3716  0665  083E               	movf	___fttol@lval,w
  3717  0666  00B6               	movwf	?___fttol
  3718  0667  0008               	return
  3719  0668                     __end_of___fttol:	
  3720  0668                     __ptext571:	
  3721 ;; =============== function ___awmod ends ============
  3722                           
  3723                           
  3724 ;; *************** function ___lldiv *****************
  3725 ;; Defined at:
  3726 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  divisor         4    8[BANK0 ] unsigned long 
  3729 ;;  dividend        4   12[BANK0 ] unsigned long 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  quotient        4   16[BANK0 ] unsigned long 
  3732 ;;  counter         1   20[BANK0 ] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  4    8[BANK0 ] unsigned long 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 60/0
  3739 ;;		On exit  : 60/0
  3740 ;;		Unchanged: FFF9F/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       8       0       0       0
  3743 ;;      Locals:         0       5       0       0       0
  3744 ;;      Temps:          0       0       0       0       0
  3745 ;;      Totals:         0      13       0       0       0
  3746 ;;Total ram usage:       13 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    3
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_printf
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755  0668                     ___lldiv:	
  3756                           
  3757                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3758  0668  01B0               	clrf	___lldiv@quotient
  3759  0669  01B1               	clrf	___lldiv@quotient+1
  3760  066A  01B2               	clrf	___lldiv@quotient+2
  3761  066B  01B3               	clrf	___lldiv@quotient+3
  3762  066C  082B               	movf	___lldiv@divisor+3,w
  3763  066D  042A               	iorwf	___lldiv@divisor+2,w
  3764  066E  0429               	iorwf	___lldiv@divisor+1,w
  3765  066F  0428               	iorwf	___lldiv@divisor,w
  3766  0670  1903               	skipnz
  3767  0671  2EA7               	goto	l6860
  3768  0672  01B4               	clrf	___lldiv@counter
  3769  0673                     L11:	
  3770  0673  0AB4               	incf	___lldiv@counter,f
  3771  0674  1BAB               	btfsc	___lldiv@divisor+3,7
  3772  0675  2E7C               	goto	l6848
  3773  0676  1003               	clrc
  3774  0677  0DA8               	rlf	___lldiv@divisor,f
  3775  0678  0DA9               	rlf	___lldiv@divisor+1,f
  3776  0679  0DAA               	rlf	___lldiv@divisor+2,f
  3777  067A  0DAB               	rlf	___lldiv@divisor+3,f
  3778  067B  2E73               	goto	L11
  3779  067C                     l6848:	
  3780  067C  1003               	clrc
  3781  067D  0DB0               	rlf	___lldiv@quotient,f
  3782  067E  0DB1               	rlf	___lldiv@quotient+1,f
  3783  067F  0DB2               	rlf	___lldiv@quotient+2,f
  3784  0680  0DB3               	rlf	___lldiv@quotient+3,f
  3785  0681  082B               	movf	___lldiv@divisor+3,w
  3786  0682  022F               	subwf	___lldiv@dividend+3,w
  3787  0683  1D03               	skipz
  3788  0684  2E8F               	goto	u3205
  3789  0685  082A               	movf	___lldiv@divisor+2,w
  3790  0686  022E               	subwf	___lldiv@dividend+2,w
  3791  0687  1D03               	skipz
  3792  0688  2E8F               	goto	u3205
  3793  0689  0829               	movf	___lldiv@divisor+1,w
  3794  068A  022D               	subwf	___lldiv@dividend+1,w
  3795  068B  1D03               	skipz
  3796  068C  2E8F               	goto	u3205
  3797  068D  0828               	movf	___lldiv@divisor,w
  3798  068E  022C               	subwf	___lldiv@dividend,w
  3799  068F                     u3205:	
  3800  068F  1C03               	skipc
  3801  0690  2EA1               	goto	L12
  3802  0691  0828               	movf	___lldiv@divisor,w
  3803  0692  02AC               	subwf	___lldiv@dividend,f
  3804  0693  0829               	movf	___lldiv@divisor+1,w
  3805  0694  1C03               	skipc
  3806  0695  0F29               	incfsz	___lldiv@divisor+1,w
  3807  0696  02AD               	subwf	___lldiv@dividend+1,f
  3808  0697  082A               	movf	___lldiv@divisor+2,w
  3809  0698  1C03               	skipc
  3810  0699  0F2A               	incfsz	___lldiv@divisor+2,w
  3811  069A  02AE               	subwf	___lldiv@dividend+2,f
  3812  069B  082B               	movf	___lldiv@divisor+3,w
  3813  069C  1C03               	skipc
  3814  069D  0F2B               	incfsz	___lldiv@divisor+3,w
  3815  069E  02AF               	subwf	___lldiv@dividend+3,f
  3816  069F  1430               	bsf	___lldiv@quotient,0
  3817  06A0  1003               	clrc
  3818  06A1                     L12:	
  3819  06A1  0CAB               	rrf	___lldiv@divisor+3,f
  3820  06A2  0CAA               	rrf	___lldiv@divisor+2,f
  3821  06A3  0CA9               	rrf	___lldiv@divisor+1,f
  3822  06A4  0CA8               	rrf	___lldiv@divisor,f
  3823  06A5  0BB4               	decfsz	___lldiv@counter,f
  3824  06A6  2E7C               	goto	l6848
  3825  06A7                     l6860:	
  3826  06A7  0833               	movf	___lldiv@quotient+3,w
  3827  06A8  00AB               	movwf	?___lldiv+3
  3828  06A9  0832               	movf	___lldiv@quotient+2,w
  3829  06AA  00AA               	movwf	?___lldiv+2
  3830  06AB  0831               	movf	___lldiv@quotient+1,w
  3831  06AC  00A9               	movwf	?___lldiv+1
  3832  06AD  0830               	movf	___lldiv@quotient,w
  3833  06AE  00A8               	movwf	?___lldiv
  3834  06AF  0008               	return
  3835  06B0                     __end_of___lldiv:	
  3836  06B0                     __ptext573:	
  3837 ;; =============== function ___ftge ends ============
  3838                           
  3839                           
  3840 ;; *************** function ___ftneg *****************
  3841 ;; Defined at:
  3842 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;  f1              3    8[BANK0 ] float 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  3    8[BANK0 ] float 
  3849 ;; Registers used:
  3850 ;;		wreg
  3851 ;; Tracked objects:
  3852 ;;		On entry : 160/0
  3853 ;;		On exit  : 160/0
  3854 ;;		Unchanged: FFE9F/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3856 ;;      Params:         0       3       0       0       0
  3857 ;;      Locals:         0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0
  3859 ;;      Totals:         0       3       0       0       0
  3860 ;;Total ram usage:        3 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    3
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_printf
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869  06B0                     ___ftneg:	
  3870                           
  3871                           ; Regs used in ___ftneg: [wreg]
  3872  06B0  082A               	movf	___ftneg@f1+2,w
  3873  06B1  0429               	iorwf	___ftneg@f1+1,w
  3874  06B2  0428               	iorwf	___ftneg@f1,w
  3875  06B3  1903               	skipnz
  3876  06B4  0008               	return
  3877  06B5  3080               	movlw	128
  3878  06B6  06AA               	xorwf	___ftneg@f1+2,f
  3879  06B7  0008               	return
  3880  06B8                     __end_of___ftneg:	
  3881  06B8                     __ptext562:	
  3882 ;; =============== function _lcd_init ends ============
  3883                           
  3884                           
  3885 ;; *************** function ___lltoft *****************
  3886 ;; Defined at:
  3887 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  c               4   16[BANK0 ] unsigned long 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  exp             1   20[BANK0 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  3   16[BANK0 ] float 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, pclath, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 60/0
  3898 ;;		On exit  : 60/0
  3899 ;;		Unchanged: FFF9F/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3901 ;;      Params:         0       4       0       0       0
  3902 ;;      Locals:         0       1       0       0       0
  3903 ;;      Temps:          0       0       0       0       0
  3904 ;;      Totals:         0       5       0       0       0
  3905 ;;Total ram usage:        5 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    4
  3908 ;; This function calls:
  3909 ;;		___ftpack
  3910 ;; This function is called by:
  3911 ;;		_printf
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914  06B8                     ___lltoft:	
  3915                           
  3916                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3917  06B8  308E               	movlw	142
  3918  06B9  00B4               	movwf	___lltoft@exp
  3919  06BA                     l7254:	
  3920  06BA  30FF               	movlw	255
  3921  06BB  0533               	andwf	___lltoft@c+3,w
  3922  06BC  1903               	btfsc	3,2
  3923  06BD  2EC5               	goto	l7256
  3924  06BE  1003               	clrc
  3925  06BF  0CB3               	rrf	___lltoft@c+3,f
  3926  06C0  0CB2               	rrf	___lltoft@c+2,f
  3927  06C1  0CB1               	rrf	___lltoft@c+1,f
  3928  06C2  0CB0               	rrf	___lltoft@c,f
  3929  06C3  0AB4               	incf	___lltoft@exp,f
  3930  06C4  2EBA               	goto	l7254
  3931  06C5                     l7256:	
  3932  06C5  0830               	movf	___lltoft@c,w
  3933  06C6  00A8               	movwf	?___ftpack
  3934  06C7  0831               	movf	___lltoft@c+1,w
  3935  06C8  00A9               	movwf	?___ftpack+1
  3936  06C9  0832               	movf	___lltoft@c+2,w
  3937  06CA  00AA               	movwf	?___ftpack+2
  3938  06CB  0834               	movf	___lltoft@exp,w
  3939  06CC  00AB               	movwf	?___ftpack+3
  3940  06CD  01AC               	clrf	?___ftpack+4
  3941  06CE  120A  158A  2769   	fcall	___ftpack
  3942  06D1  0828               	movf	?___ftpack,w
  3943  06D2  00B0               	movwf	?___lltoft
  3944  06D3  0829               	movf	?___ftpack+1,w
  3945  06D4  00B1               	movwf	?___lltoft+1
  3946  06D5  082A               	movf	?___ftpack+2,w
  3947  06D6  00B2               	movwf	?___lltoft+2
  3948  06D7  0008               	return
  3949  06D8                     __end_of___lltoft:	
  3950  06D8                     __ptext557:	
  3951 ;; =============== function _lcd_putc ends ============
  3952                           
  3953                           
  3954 ;; *************** function ___ftsub *****************
  3955 ;; Defined at:
  3956 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  f2              3   62[BANK0 ] float 
  3959 ;;  f1              3   65[BANK0 ] float 
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  3   62[BANK0 ] float 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0, pclath, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 60/0
  3968 ;;		On exit  : 60/0
  3969 ;;		Unchanged: FFF9F/0
  3970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3971 ;;      Params:         0       6       0       0       0
  3972 ;;      Locals:         0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0
  3974 ;;      Totals:         0       6       0       0       0
  3975 ;;Total ram usage:        6 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    5
  3978 ;; This function calls:
  3979 ;;		___ftadd
  3980 ;; This function is called by:
  3981 ;;		_printf
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984  06D8                     ___ftsub:	
  3985                           
  3986                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3987  06D8  3080               	movlw	128
  3988  06D9  06E0               	xorwf	___ftsub@f2+2,f
  3989  06DA  0861               	movf	___ftsub@f1,w
  3990  06DB  00D2               	movwf	?___ftadd
  3991  06DC  0862               	movf	___ftsub@f1+1,w
  3992  06DD  00D3               	movwf	?___ftadd+1
  3993  06DE  0863               	movf	___ftsub@f1+2,w
  3994  06DF  00D4               	movwf	?___ftadd+2
  3995  06E0  085E               	movf	___ftsub@f2,w
  3996  06E1  00D5               	movwf	?___ftadd+3
  3997  06E2  085F               	movf	___ftsub@f2+1,w
  3998  06E3  00D6               	movwf	?___ftadd+4
  3999  06E4  0860               	movf	___ftsub@f2+2,w
  4000  06E5  00D7               	movwf	?___ftadd+5
  4001  06E6  160A  118A  250D   	fcall	___ftadd
  4002  06E9  0852               	movf	?___ftadd,w
  4003  06EA  00DE               	movwf	?___ftsub
  4004  06EB  0853               	movf	?___ftadd+1,w
  4005  06EC  00DF               	movwf	?___ftsub+1
  4006  06ED  0854               	movf	?___ftadd+2,w
  4007  06EE  00E0               	movwf	?___ftsub+2
  4008  06EF  0008               	return
  4009  06F0                     __end_of___ftsub:	
  4010  06F0                     PL2:	
  4011  06F0  00AB               	movwf	?___lldiv+3
  4012  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  4013  06F2  0834               	movf	(printf@_val+3)^(0+128),w
  4014  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  4015  06F4  00AF               	movwf	?___lldiv+7
  4016  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  4017  06F6  0833               	movf	(printf@_val+2)^(0+128),w
  4018  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  4019  06F8  00AE               	movwf	?___lldiv+6
  4020  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  4021  06FA  0832               	movf	(printf@_val+1)^(0+128),w
  4022  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  4023  06FC  00AD               	movwf	?___lldiv+5
  4024  06FD  1683               	bsf	3,5	;RP0=1, select bank1
  4025  06FE  0831               	movf	printf@_val^(0+128),w
  4026  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  4027  0700  00AC               	movwf	?___lldiv+4
  4028  0701  0008               	return
  4029  0702                     PL4:	
  4030  0702  0840               	movf	printf@c^(0+128),w
  4031  0703  00A3               	movwf	??_printf^(0+128)
  4032  0704  1003               	clrc
  4033  0705  0DA3               	rlf	??_printf^(0+128),f
  4034  0706  1003               	clrc
  4035  0707  0D23               	rlf	??_printf^(0+128),w
  4036  0708  3E4F               	addlw	low (_dpowers-__stringbase)
  4037  0709  0084               	movwf	4
  4038  070A  0008               	return
  4039  070B                     PL5:	
  4040  070B  082D               	movf	printf@integ^(0+128),w
  4041  070C  1283               	bcf	3,5	;RP0=0, select bank0
  4042  070D  00A8               	movwf	?___ftge
  4043  070E  1683               	bsf	3,5	;RP0=1, select bank1
  4044  070F  082E               	movf	(printf@integ+1)^(0+128),w
  4045  0710  1283               	bcf	3,5	;RP0=0, select bank0
  4046  0711  00A9               	movwf	?___ftge+1
  4047  0712  1683               	bsf	3,5	;RP0=1, select bank1
  4048  0713  082F               	movf	(printf@integ+2)^(0+128),w
  4049  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4050  0715  00AA               	movwf	?___ftge+2
  4051  0716  0008               	return
  4052  0717                     PL6:	
  4053  0717  300A               	movlw	10
  4054  0718  1283               	bcf	3,5	;RP0=0, select bank0
  4055  0719  00B5               	movwf	?___llmod
  4056  071A  01B6               	clrf	?___llmod+1
  4057  071B  01B7               	clrf	?___llmod+2
  4058  071C  01B8               	clrf	?___llmod+3
  4059  071D  1683               	bsf	3,5	;RP0=1, select bank1
  4060  071E  0008               	return
  4061  071F                     PL7:	
  4062  071F  1283               	bcf	3,5	;RP0=0, select bank0
  4063  0720  0728               	addwf	?___wmul,w
  4064  0721  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0722  00A3               	movwf	??_printf^(0+128)
  4066  0723  3000               	movlw	0
  4067  0724  1803               	skipnc
  4068  0725  3001               	movlw	1
  4069  0726  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0727  0729               	addwf	?___wmul+1,w
  4071  0728  1683               	bsf	3,5	;RP0=1, select bank1
  4072  0729  00A4               	movwf	(??_printf+1)^(0+128)
  4073  072A  0823               	movf	??_printf^(0+128),w
  4074  072B  3ED0               	addlw	208
  4075  072C  0008               	return
  4076  072D                     PL8:	
  4077  072D  0852               	movf	?_scale,w
  4078  072E  1683               	bsf	3,5	;RP0=1, select bank1
  4079  072F  00AD               	movwf	printf@integ^(0+128)
  4080  0730  1283               	bcf	3,5	;RP0=0, select bank0
  4081  0731  0853               	movf	?_scale+1,w
  4082  0732  1683               	bsf	3,5	;RP0=1, select bank1
  4083  0733  00AE               	movwf	(printf@integ+1)^(0+128)
  4084  0734  1283               	bcf	3,5	;RP0=0, select bank0
  4085  0735  0854               	movf	?_scale+2,w
  4086  0736  1683               	bsf	3,5	;RP0=1, select bank1
  4087  0737  00AF               	movwf	(printf@integ+2)^(0+128)
  4088  0738  083B               	movf	printf@fval^(0+128),w
  4089  0739  1283               	bcf	3,5	;RP0=0, select bank0
  4090  073A  0008               	return
  4091  073B                     PL9:	
  4092  073B  0839               	movf	?___fttol+3,w
  4093  073C  1683               	bsf	3,5	;RP0=1, select bank1
  4094  073D  00B4               	movwf	(printf@_val+3)^(0+128)
  4095  073E  1283               	bcf	3,5	;RP0=0, select bank0
  4096  073F  0838               	movf	?___fttol+2,w
  4097  0740  1683               	bsf	3,5	;RP0=1, select bank1
  4098  0741  00B3               	movwf	(printf@_val+2)^(0+128)
  4099  0742  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0743  0837               	movf	?___fttol+1,w
  4101  0744  1683               	bsf	3,5	;RP0=1, select bank1
  4102  0745  00B2               	movwf	(printf@_val+1)^(0+128)
  4103  0746  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0747  0836               	movf	?___fttol,w
  4105  0748  0008               	return
  4106  0749                     PL14:	
  4107  0749  082B               	movf	?___lldiv+3,w
  4108  074A  00BC               	movwf	?___llmod+7
  4109  074B  082A               	movf	?___lldiv+2,w
  4110  074C  00BB               	movwf	?___llmod+6
  4111  074D  0829               	movf	?___lldiv+1,w
  4112  074E  00BA               	movwf	?___llmod+5
  4113  074F  0828               	movf	?___lldiv,w
  4114  0750  00B9               	movwf	?___llmod+4
  4115  0751  0008               	return
  4116  0752                     PL15:	
  4117  0752  1283               	bcf	3,5	;RP0=0, select bank0
  4118  0753  00B6               	movwf	?___fttol
  4119  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4120  0755  083C               	movf	(printf@fval+1)^(0+128),w
  4121  0756  1283               	bcf	3,5	;RP0=0, select bank0
  4122  0757  00B7               	movwf	?___fttol+1
  4123  0758  1683               	bsf	3,5	;RP0=1, select bank1
  4124  0759  083D               	movf	(printf@fval+2)^(0+128),w
  4125  075A  1283               	bcf	3,5	;RP0=0, select bank0
  4126  075B  00B8               	movwf	?___fttol+2
  4127  075C  0008               	return
  4128  075D                     PL19:	
  4129  075D  00C3               	movwf	?___ftmul
  4130  075E  1683               	bsf	3,5	;RP0=1, select bank1
  4131  075F  083C               	movf	(printf@fval+1)^(0+128),w
  4132  0760  1283               	bcf	3,5	;RP0=0, select bank0
  4133  0761  00C4               	movwf	?___ftmul+1
  4134  0762  1683               	bsf	3,5	;RP0=1, select bank1
  4135  0763  083D               	movf	(printf@fval+2)^(0+128),w
  4136  0764  1283               	bcf	3,5	;RP0=0, select bank0
  4137  0765  00C5               	movwf	?___ftmul+2
  4138  0766  0008               	return
  4139  0767                     PL21:	
  4140  0767  00A3               	movwf	??_printf^(0+128)
  4141  0768  01A4               	clrf	(??_printf^(0+128)+1)
  4142  0769  1BA3               	btfsc	??_printf^(0+128),7
  4143  076A  03A4               	decf	(??_printf^(0+128)+1),f
  4144  076B  0824               	movf	(??_printf+1)^(0+128),w
  4145  076C  3A80               	xorlw	128
  4146  076D  00A5               	movwf	(??_printf+2)^(0+128)
  4147  076E  0008               	return
  4148  076F                     PL27:	
  4149  076F  0836               	movf	___fttol@f1,w
  4150  0770  00BA               	movwf	??___fttol
  4151  0771  0837               	movf	___fttol@f1+1,w
  4152  0772  00BB               	movwf	??___fttol+1
  4153  0773  0838               	movf	___fttol@f1+2,w
  4154  0774  00BC               	movwf	??___fttol+2
  4155  0775  0008               	return
  4156  0776                     PL29:	
  4157  0776  1283               	bcf	3,5	;RP0=0, select bank0
  4158  0777  00A8               	movwf	?___wmul
  4159  0778  300A               	movlw	10
  4160  0779  00AA               	movwf	?___wmul+2
  4161  077A  01AB               	clrf	?___wmul+3
  4162  077B  0008               	return
  4163  077C                     PL30:	
  4164  077C  1683               	bsf	3,5	;RP0=1, select bank1
  4165  077D  1303               	bcf	3,6	;RP1=0, select bank1
  4166  077E  0008               	return
  4167  077F                     __ptext583:	
  4168 ;; =============== function __div_to_l_ ends ============
  4169                           
  4170                           
  4171 ;; *************** function __tdiv_to_l_ *****************
  4172 ;; Defined at:
  4173 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  f1              3    8[BANK0 ] float 
  4176 ;;  f2              3   11[BANK0 ] float 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  quot            4   17[BANK0 ] unsigned long 
  4179 ;;  exp1            1   22[BANK0 ] unsigned char 
  4180 ;;  cntr            1   21[BANK0 ] unsigned char 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  4    8[BANK0 ] unsigned long 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0
  4185 ;; Tracked objects:
  4186 ;;		On entry : 60/0
  4187 ;;		On exit  : 60/0
  4188 ;;		Unchanged: FFF9F/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4190 ;;      Params:         0       6       0       0       0
  4191 ;;      Locals:         0       6       0       0       0
  4192 ;;      Temps:          0       3       0       0       0
  4193 ;;      Totals:         0      15       0       0       0
  4194 ;;Total ram usage:       15 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    3
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_printf
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203  077F                     __tdiv_to_l_:	
  4204                           
  4205                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4206  077F  0828               	movf	__tdiv_to_l_@f1,w
  4207  0780  00AE               	movwf	??__tdiv_to_l_
  4208  0781  0829               	movf	__tdiv_to_l_@f1+1,w
  4209  0782  00AF               	movwf	??__tdiv_to_l_+1
  4210  0783  082A               	movf	__tdiv_to_l_@f1+2,w
  4211  0784  00B0               	movwf	??__tdiv_to_l_+2
  4212  0785  1003               	clrc
  4213  0786  0D2F               	rlf	??__tdiv_to_l_+1,w
  4214  0787  0D30               	rlf	??__tdiv_to_l_+2,w
  4215  0788  00B6               	movwf	__tdiv_to_l_@exp1
  4216  0789  08B6               	movf	__tdiv_to_l_@exp1,f
  4217  078A  1D03               	skipz
  4218  078B  2F91               	goto	l6516
  4219  078C                     l6514:	
  4220  078C  01A8               	clrf	?__tdiv_to_l_
  4221  078D  01A9               	clrf	?__tdiv_to_l_+1
  4222  078E  01AA               	clrf	?__tdiv_to_l_+2
  4223  078F  01AB               	clrf	?__tdiv_to_l_+3
  4224  0790  0008               	return
  4225  0791                     l6516:	
  4226  0791  082B               	movf	__tdiv_to_l_@f2,w
  4227  0792  00AE               	movwf	??__tdiv_to_l_
  4228  0793  082C               	movf	__tdiv_to_l_@f2+1,w
  4229  0794  00AF               	movwf	??__tdiv_to_l_+1
  4230  0795  082D               	movf	__tdiv_to_l_@f2+2,w
  4231  0796  00B0               	movwf	??__tdiv_to_l_+2
  4232  0797  1003               	clrc
  4233  0798  0D2F               	rlf	??__tdiv_to_l_+1,w
  4234  0799  0D30               	rlf	??__tdiv_to_l_+2,w
  4235  079A  00B5               	movwf	__tdiv_to_l_@cntr
  4236  079B  08B5               	movf	__tdiv_to_l_@cntr,f
  4237  079C  1903               	btfsc	3,2
  4238  079D  2F8C               	goto	l6514
  4239  079E  307F               	movlw	127
  4240  079F  17A9               	bsf	__tdiv_to_l_@f1+1,7
  4241  07A0  01AA               	clrf	__tdiv_to_l_@f1+2
  4242  07A1  17AC               	bsf	__tdiv_to_l_@f2+1,7
  4243  07A2  01AD               	clrf	__tdiv_to_l_@f2+2
  4244  07A3  01B1               	clrf	__tdiv_to_l_@quot
  4245  07A4  01B2               	clrf	__tdiv_to_l_@quot+1
  4246  07A5  01B3               	clrf	__tdiv_to_l_@quot+2
  4247  07A6  01B4               	clrf	__tdiv_to_l_@quot+3
  4248  07A7  02B6               	subwf	__tdiv_to_l_@exp1,f
  4249  07A8  3098               	movlw	152
  4250  07A9  0735               	addwf	__tdiv_to_l_@cntr,w
  4251  07AA  00AE               	movwf	??__tdiv_to_l_
  4252  07AB  02B6               	subwf	__tdiv_to_l_@exp1,f
  4253  07AC  3018               	movlw	24
  4254  07AD  00B5               	movwf	__tdiv_to_l_@cntr
  4255  07AE                     l6530:	
  4256  07AE  1003               	clrc
  4257  07AF  0DB1               	rlf	__tdiv_to_l_@quot,f
  4258  07B0  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  4259  07B1  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  4260  07B2  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  4261  07B3  082D               	movf	__tdiv_to_l_@f2+2,w
  4262  07B4  022A               	subwf	__tdiv_to_l_@f1+2,w
  4263  07B5  1D03               	skipz
  4264  07B6  2FBD               	goto	u2615
  4265  07B7  082C               	movf	__tdiv_to_l_@f2+1,w
  4266  07B8  0229               	subwf	__tdiv_to_l_@f1+1,w
  4267  07B9  1D03               	skipz
  4268  07BA  2FBD               	goto	u2615
  4269  07BB  082B               	movf	__tdiv_to_l_@f2,w
  4270  07BC  0228               	subwf	__tdiv_to_l_@f1,w
  4271  07BD                     u2615:	
  4272  07BD  1C03               	skipc
  4273  07BE  2FCB               	goto	L20
  4274  07BF  082B               	movf	__tdiv_to_l_@f2,w
  4275  07C0  02A8               	subwf	__tdiv_to_l_@f1,f
  4276  07C1  082C               	movf	__tdiv_to_l_@f2+1,w
  4277  07C2  1C03               	skipc
  4278  07C3  0F2C               	incfsz	__tdiv_to_l_@f2+1,w
  4279  07C4  02A9               	subwf	__tdiv_to_l_@f1+1,f
  4280  07C5  082D               	movf	__tdiv_to_l_@f2+2,w
  4281  07C6  1C03               	skipc
  4282  07C7  0A2D               	incf	__tdiv_to_l_@f2+2,w
  4283  07C8  02AA               	subwf	__tdiv_to_l_@f1+2,f
  4284  07C9  1431               	bsf	__tdiv_to_l_@quot,0
  4285  07CA  1003               	clrc
  4286  07CB                     L20:	
  4287  07CB  0DA8               	rlf	__tdiv_to_l_@f1,f
  4288  07CC  0DA9               	rlf	__tdiv_to_l_@f1+1,f
  4289  07CD  0DAA               	rlf	__tdiv_to_l_@f1+2,f
  4290  07CE  0BB5               	decfsz	__tdiv_to_l_@cntr,f
  4291  07CF  2FAE               	goto	l6530
  4292  07D0  1FB6               	btfss	__tdiv_to_l_@exp1,7
  4293  07D1  2FDF               	goto	l6550
  4294  07D2  0836               	movf	__tdiv_to_l_@exp1,w
  4295  07D3  3A80               	xorlw	128
  4296  07D4  3E97               	addlw	151
  4297  07D5  1C03               	btfss	3,0
  4298  07D6  2F8C               	goto	l6514
  4299  07D7                     l6546:	
  4300  07D7  1003               	clrc
  4301  07D8  0CB4               	rrf	__tdiv_to_l_@quot+3,f
  4302  07D9  0CB3               	rrf	__tdiv_to_l_@quot+2,f
  4303  07DA  0CB2               	rrf	__tdiv_to_l_@quot+1,f
  4304  07DB  0CB1               	rrf	__tdiv_to_l_@quot,f
  4305  07DC  0FB6               	incfsz	__tdiv_to_l_@exp1,f
  4306  07DD  2FD7               	goto	l6546
  4307  07DE  2FED               	goto	l6556
  4308  07DF                     l6550:	
  4309  07DF  3018               	movlw	24
  4310  07E0  0236               	subwf	__tdiv_to_l_@exp1,w
  4311  07E1  1803               	btfsc	3,0
  4312  07E2  2F8C               	goto	l6514
  4313  07E3                     l3555:	
  4314  07E3  08B6               	movf	__tdiv_to_l_@exp1,f
  4315  07E4  1903               	btfsc	3,2
  4316  07E5  2FED               	goto	l6556
  4317  07E6  1003               	clrc
  4318  07E7  0DB1               	rlf	__tdiv_to_l_@quot,f
  4319  07E8  0DB2               	rlf	__tdiv_to_l_@quot+1,f
  4320  07E9  0DB3               	rlf	__tdiv_to_l_@quot+2,f
  4321  07EA  0DB4               	rlf	__tdiv_to_l_@quot+3,f
  4322  07EB  03B6               	decf	__tdiv_to_l_@exp1,f
  4323  07EC  2FE3               	goto	l3555
  4324  07ED                     l6556:	
  4325  07ED  0834               	movf	__tdiv_to_l_@quot+3,w
  4326  07EE  00AB               	movwf	?__tdiv_to_l_+3
  4327  07EF  0833               	movf	__tdiv_to_l_@quot+2,w
  4328  07F0  00AA               	movwf	?__tdiv_to_l_+2
  4329  07F1  0832               	movf	__tdiv_to_l_@quot+1,w
  4330  07F2  00A9               	movwf	?__tdiv_to_l_+1
  4331  07F3  0831               	movf	__tdiv_to_l_@quot,w
  4332  07F4  00A8               	movwf	?__tdiv_to_l_
  4333  07F5  0008               	return
  4334  07F6                     __end_of__tdiv_to_l_:	
  4335                           
  4336                           	psect	text559
  4337  0903                     __ptext559:	
  4338 ;; =============== function _scale ends ============
  4339                           
  4340                           
  4341 ;; *************** function _fround *****************
  4342 ;; Defined at:
  4343 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  prec            1    wreg     unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  prec            1   71[BANK0 ] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  3   62[BANK0 ] unsigned char 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 60/20
  4354 ;;		On exit  : 60/0
  4355 ;;		Unchanged: FFF9F/0
  4356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4357 ;;      Params:         0       3       0       0       0
  4358 ;;      Locals:         0       7       0       0       0
  4359 ;;      Temps:          0       0       0       0       0
  4360 ;;      Totals:         0      10       0       0       0
  4361 ;;Total ram usage:       10 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    5
  4364 ;; This function calls:
  4365 ;;		___lbmod
  4366 ;;		___bmul
  4367 ;;		___lbdiv
  4368 ;;		___ftmul
  4369 ;; This function is called by:
  4370 ;;		_printf
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373  0903                     _fround:	
  4374                           
  4375                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4376                           ;fround@prec stored from wreg
  4377  0903  1283               	bcf	3,5	;RP0=0, select bank0
  4378  0904  00E7               	movwf	fround@prec
  4379  0905  306E               	movlw	110
  4380  0906  0267               	subwf	fround@prec,w
  4381  0907  1C03               	skipc
  4382  0908  298E               	goto	l7320
  4383  0909  3003               	movlw	3
  4384  090A  00B1               	movwf	?___bmul
  4385  090B  300A               	movlw	10
  4386  090C  00AD               	movwf	?___lbdiv
  4387  090D  3064               	movlw	100
  4388  090E  00A8               	movwf	?___lbmod
  4389  090F  0867               	movf	fround@prec,w
  4390  0910  2223  120A  158A   	fcall	___lbmod
  4391  0913  2208               	fcall	___lbdiv
  4392  0914  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4393  0919  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4394  091A  0084               	movwf	4
  4395  091B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4396  0920  00C3               	movwf	?___ftmul
  4397  0921  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4398  0926  00C4               	movwf	?___ftmul+1
  4399  0927  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4400  092C  00C5               	movwf	?___ftmul+2
  4401  092D  3003               	movlw	3
  4402  092E  00B1               	movwf	?___bmul
  4403  092F  3064               	movlw	100
  4404  0930  00AD               	movwf	?___lbdiv
  4405  0931  0867               	movf	fround@prec,w
  4406  0932  2208               	fcall	___lbdiv
  4407  0933  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4408  0938  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4409  0939  0084               	movwf	4
  4410  093A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4411  093F  00C6               	movwf	?___ftmul+3
  4412  0940  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4413  0945  00C7               	movwf	?___ftmul+4
  4414  0946  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4415  094B  00C8               	movwf	?___ftmul+5
  4416  094C  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4417  0951  224E  120A  158A   	fcall	PL26	;call to abstracted procedure
  4418  0954  3003               	movlw	3
  4419  0955  00B1               	movwf	?___bmul
  4420  0956  300A               	movlw	10
  4421  0957  00A8               	movwf	?___lbmod
  4422  0958  0867               	movf	fround@prec,w
  4423  0959  2223               	fcall	___lbmod
  4424  095A  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4425  095F  3E01               	addlw	low (__npowers_-__stringbase)
  4426  0960  0084               	movwf	4
  4427  0961  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4428  0966  00C3               	movwf	?___ftmul
  4429  0967  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4430  096C  00C4               	movwf	?___ftmul+1
  4431  096D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4432  0972  2246               	fcall	PL23	;call to abstracted procedure
  4433  0973  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4434  0978  0843               	movf	?___ftmul,w
  4435  0979  00E1               	movwf	_fround$4119
  4436  097A  0844               	movf	?___ftmul+1,w
  4437  097B  00E2               	movwf	_fround$4119+1
  4438  097C  0845               	movf	?___ftmul+2,w
  4439  097D  00E3               	movwf	_fround$4119+2
  4440  097E  303F               	movlw	63
  4441  097F  01C3               	clrf	?___ftmul
  4442  0980  01C4               	clrf	?___ftmul+1
  4443  0981  00C5               	movwf	?___ftmul+2
  4444  0982  0861               	movf	_fround$4119,w
  4445  0983  00C6               	movwf	?___ftmul+3
  4446  0984  0862               	movf	_fround$4119+1,w
  4447  0985  00C7               	movwf	?___ftmul+4
  4448  0986  0863               	movf	_fround$4119+2,w
  4449  0987  00C8               	movwf	?___ftmul+5
  4450  0988  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4451  098D  2A3F               	ljmp	PL17	;call to abstracted procedure
  4452  098E                     l7320:	
  4453  098E  300B               	movlw	11
  4454  098F  0267               	subwf	fround@prec,w
  4455  0990  1C03               	skipc
  4456  0991  29E2               	goto	l7328
  4457  0992  3003               	movlw	3
  4458  0993  00B1               	movwf	?___bmul
  4459  0994  300A               	movlw	10
  4460  0995  00A8               	movwf	?___lbmod
  4461  0996  0867               	movf	fround@prec,w
  4462  0997  2223               	fcall	___lbmod
  4463  0998  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4464  099D  3E01               	addlw	low (__npowers_-__stringbase)
  4465  099E  0084               	movwf	4
  4466  099F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4467  09A4  00C3               	movwf	?___ftmul
  4468  09A5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4469  09AA  00C4               	movwf	?___ftmul+1
  4470  09AB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4471  09B0  00C5               	movwf	?___ftmul+2
  4472  09B1  3003               	movlw	3
  4473  09B2  00B1               	movwf	?___bmul
  4474  09B3  300A               	movlw	10
  4475  09B4  00AD               	movwf	?___lbdiv
  4476  09B5  0867               	movf	fround@prec,w
  4477  09B6  2208               	fcall	___lbdiv
  4478  09B7  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4479  09BC  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4480  09BD  0084               	movwf	4
  4481  09BE  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4482  09C3  00C6               	movwf	?___ftmul+3
  4483  09C4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4484  09C9  00C7               	movwf	?___ftmul+4
  4485  09CA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4486  09CF  00C8               	movwf	?___ftmul+5
  4487  09D0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4488  09D5  224E  120A  158A   	fcall	PL26	;call to abstracted procedure
  4489  09D8  303F               	movlw	63
  4490  09D9  01C3               	clrf	?___ftmul
  4491  09DA  01C4               	clrf	?___ftmul+1
  4492  09DB  2246               	fcall	PL23	;call to abstracted procedure
  4493  09DC  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4494  09E1  2A3F               	ljmp	PL17	;call to abstracted procedure
  4495  09E2                     l7328:	
  4496  09E2  303F               	movlw	63
  4497  09E3  01C3               	clrf	?___ftmul
  4498  09E4  01C4               	clrf	?___ftmul+1
  4499  09E5  00C5               	movwf	?___ftmul+2
  4500  09E6  3003               	movlw	3
  4501  09E7  00B1               	movwf	?___bmul
  4502  09E8  0867               	movf	fround@prec,w
  4503  09E9  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4504  09EE  3E01               	addlw	low (__npowers_-__stringbase)
  4505  09EF  0084               	movwf	4
  4506  09F0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4507  09F5  00C6               	movwf	?___ftmul+3
  4508  09F6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4509  09FB  00C7               	movwf	?___ftmul+4
  4510  09FC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4511  0A01  00C8               	movwf	?___ftmul+5
  4512  0A02  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4513  0A07  2A3F               	ljmp	PL17	;call to abstracted procedure
  4514  0A08                     __end_of_fround:	
  4515  0A08                     __ptext579:	
  4516 ;; =============== function ___lbmod ends ============
  4517                           
  4518                           
  4519 ;; *************** function ___lbdiv *****************
  4520 ;; Defined at:
  4521 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4522 ;; Parameters:    Size  Location     Type
  4523 ;;  dividend        1    wreg     unsigned char 
  4524 ;;  divisor         1   13[BANK0 ] unsigned char 
  4525 ;; Auto vars:     Size  Location     Type
  4526 ;;  dividend        1   14[BANK0 ] unsigned char 
  4527 ;;  quotient        1   16[BANK0 ] unsigned char 
  4528 ;;  counter         1   15[BANK0 ] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      unsigned char 
  4531 ;; Registers used:
  4532 ;;		wreg, status,2, status,0
  4533 ;; Tracked objects:
  4534 ;;		On entry : 60/0
  4535 ;;		On exit  : 60/0
  4536 ;;		Unchanged: FFF9F/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4538 ;;      Params:         0       1       0       0       0
  4539 ;;      Locals:         0       3       0       0       0
  4540 ;;      Temps:          0       0       0       0       0
  4541 ;;      Totals:         0       4       0       0       0
  4542 ;;Total ram usage:        4 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    3
  4545 ;; This function calls:
  4546 ;;		Nothing
  4547 ;; This function is called by:
  4548 ;;		_fround
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551  0A08                     ___lbdiv:	
  4552                           
  4553                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4554                           ;___lbdiv@dividend stored from wreg
  4555  0A08  00AE               	movwf	___lbdiv@dividend
  4556  0A09  01B0               	clrf	___lbdiv@quotient
  4557  0A0A  082D               	movf	___lbdiv@divisor,w
  4558  0A0B  1903               	btfsc	3,2
  4559  0A0C  2A21               	goto	l6658
  4560  0A0D  01AF               	clrf	___lbdiv@counter
  4561  0A0E                     l6644:	
  4562  0A0E  0AAF               	incf	___lbdiv@counter,f
  4563  0A0F  1BAD               	btfsc	___lbdiv@divisor,7
  4564  0A10  2A14               	goto	l3330
  4565  0A11  1003               	clrc
  4566  0A12  0DAD               	rlf	___lbdiv@divisor,f
  4567  0A13  2A0E               	goto	l6644
  4568  0A14                     l3330:	
  4569  0A14  1003               	clrc
  4570  0A15  0DB0               	rlf	___lbdiv@quotient,f
  4571  0A16  082D               	movf	___lbdiv@divisor,w
  4572  0A17  022E               	subwf	___lbdiv@dividend,w
  4573  0A18  1C03               	skipc
  4574  0A19  2A1E               	goto	L19
  4575  0A1A  082D               	movf	___lbdiv@divisor,w
  4576  0A1B  02AE               	subwf	___lbdiv@dividend,f
  4577  0A1C  1430               	bsf	___lbdiv@quotient,0
  4578  0A1D  1003               	clrc
  4579  0A1E                     L19:	
  4580  0A1E  0CAD               	rrf	___lbdiv@divisor,f
  4581  0A1F  0BAF               	decfsz	___lbdiv@counter,f
  4582  0A20  2A14               	goto	l3330
  4583  0A21                     l6658:	
  4584  0A21  0830               	movf	___lbdiv@quotient,w
  4585  0A22  0008               	return
  4586  0A23                     __end_of___lbdiv:	
  4587  0A23                     __ptext578:	
  4588 ;; =============== function ___ftpack ends ============
  4589                           
  4590                           
  4591 ;; *************** function ___lbmod *****************
  4592 ;; Defined at:
  4593 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  dividend        1    wreg     unsigned char 
  4596 ;;  divisor         1    8[BANK0 ] unsigned char 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  dividend        1   10[BANK0 ] unsigned char 
  4599 ;;  rem             1   12[BANK0 ] unsigned char 
  4600 ;;  counter         1   11[BANK0 ] unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      unsigned char 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0
  4605 ;; Tracked objects:
  4606 ;;		On entry : 60/0
  4607 ;;		On exit  : 60/0
  4608 ;;		Unchanged: FFF9F/0
  4609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4610 ;;      Params:         0       1       0       0       0
  4611 ;;      Locals:         0       3       0       0       0
  4612 ;;      Temps:          0       1       0       0       0
  4613 ;;      Totals:         0       5       0       0       0
  4614 ;;Total ram usage:        5 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    3
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_fround
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623  0A23                     ___lbmod:	
  4624                           
  4625                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4626                           ;___lbmod@dividend stored from wreg
  4627  0A23  00AA               	movwf	___lbmod@dividend
  4628  0A24  3008               	movlw	8
  4629  0A25  00AB               	movwf	___lbmod@counter
  4630  0A26  01AC               	clrf	___lbmod@rem
  4631  0A27                     l6666:	
  4632  0A27  082A               	movf	___lbmod@dividend,w
  4633  0A28  00A9               	movwf	??___lbmod
  4634  0A29  3007               	movlw	7
  4635  0A2A  1003               	clrc
  4636  0A2B                     L18:	
  4637  0A2B  0CA9               	rrf	??___lbmod,f
  4638  0A2C  3EFF               	addlw	-1
  4639  0A2D  1003               	clrc
  4640  0A2E  1D03               	skipz
  4641  0A2F  2A2B               	goto	L18
  4642  0A30  0D2C               	rlf	___lbmod@rem,w
  4643  0A31  0429               	iorwf	??___lbmod,w
  4644  0A32  00AC               	movwf	___lbmod@rem
  4645  0A33  1003               	clrc
  4646  0A34  0DAA               	rlf	___lbmod@dividend,f
  4647  0A35  0828               	movf	___lbmod@divisor,w
  4648  0A36  022C               	subwf	___lbmod@rem,w
  4649  0A37  1C03               	skipc
  4650  0A38  2A3B               	goto	l6674
  4651  0A39  0828               	movf	___lbmod@divisor,w
  4652  0A3A  02AC               	subwf	___lbmod@rem,f
  4653  0A3B                     l6674:	
  4654  0A3B  0BAB               	decfsz	___lbmod@counter,f
  4655  0A3C  2A27               	goto	l6666
  4656  0A3D  082C               	movf	___lbmod@rem,w
  4657  0A3E  0008               	return
  4658  0A3F                     __end_of___lbmod:	
  4659  0A3F                     PL17:	
  4660  0A3F  0843               	movf	?___ftmul,w
  4661  0A40  00DE               	movwf	?_fround
  4662  0A41  0844               	movf	?___ftmul+1,w
  4663  0A42  00DF               	movwf	?_fround+1
  4664  0A43  0845               	movf	?___ftmul+2,w
  4665  0A44  00E0               	movwf	?_fround+2
  4666  0A45  0008               	return
  4667  0A46                     PL23:	
  4668  0A46  00C5               	movwf	?___ftmul+2
  4669  0A47  0864               	movf	_fround$4118,w
  4670  0A48  00C6               	movwf	?___ftmul+3
  4671  0A49  0865               	movf	_fround$4118+1,w
  4672  0A4A  00C7               	movwf	?___ftmul+4
  4673  0A4B  0866               	movf	_fround$4118+2,w
  4674  0A4C  00C8               	movwf	?___ftmul+5
  4675  0A4D  0008               	return
  4676  0A4E                     PL26:	
  4677  0A4E  0843               	movf	?___ftmul,w
  4678  0A4F  00E4               	movwf	_fround$4118
  4679  0A50  0844               	movf	?___ftmul+1,w
  4680  0A51  00E5               	movwf	_fround$4118+1
  4681  0A52  0845               	movf	?___ftmul+2,w
  4682  0A53  00E6               	movwf	_fround$4118+2
  4683  0A54  0008               	return
  4684                           
  4685                           	psect	text560
  4686  0A55                     __ptext560:	
  4687 ;; =============== function _fround ends ============
  4688                           
  4689                           
  4690 ;; *************** function _lcd_gotoxy *****************
  4691 ;; Defined at:
  4692 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  col             1    wreg     unsigned char 
  4695 ;;  row             1   13[BANK0 ] unsigned char 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  col             1   14[BANK0 ] unsigned char 
  4698 ;;  address         1   15[BANK0 ] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;		None               void
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0, pclath, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 60/0
  4705 ;;		On exit  : 60/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4708 ;;      Params:         0       1       0       0       0
  4709 ;;      Locals:         0       2       0       0       0
  4710 ;;      Temps:          0       0       0       0       0
  4711 ;;      Totals:         0       3       0       0       0
  4712 ;;Total ram usage:        3 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    4
  4715 ;; This function calls:
  4716 ;;		_lcd_put_byte
  4717 ;;		_lcd_busy
  4718 ;; This function is called by:
  4719 ;;		_main
  4720 ;;		_lcd_putc
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723  0A55                     _lcd_gotoxy:	
  4724                           
  4725                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4726                           ;lcd_gotoxy@col stored from wreg
  4727  0A55  00AE               	movwf	lcd_gotoxy@col
  4728                           
  4729                           ;lcd(16).c: 163: unsigned char address;
  4730                           ;lcd(16).c: 165: if(row!=0)
  4731  0A56  082D               	movf	lcd_gotoxy@row,w
  4732  0A57  1903               	btfsc	3,2
  4733  0A58  2A5C               	goto	l7302
  4734                           
  4735                           ;lcd(16).c: 166: address=0x40;
  4736  0A59  3040               	movlw	64
  4737  0A5A  00AF               	movwf	lcd_gotoxy@address
  4738  0A5B  2A5D               	goto	l7304
  4739  0A5C                     l7302:	
  4740                           
  4741                           ;lcd(16).c: 167: else
  4742                           ;lcd(16).c: 168: address=0;
  4743  0A5C  01AF               	clrf	lcd_gotoxy@address
  4744  0A5D                     l7304:	
  4745                           
  4746                           ;lcd(16).c: 170: address += col;
  4747  0A5D  082E               	movf	lcd_gotoxy@col,w
  4748  0A5E  07AF               	addwf	lcd_gotoxy@address,f
  4749                           
  4750                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4751  0A5F  082F               	movf	lcd_gotoxy@address,w
  4752  0A60  3880               	iorlw	128
  4753  0A61  00A8               	movwf	?_lcd_put_byte
  4754  0A62  3000               	movlw	0
  4755  0A63  235D  120A  158A   	fcall	_lcd_put_byte
  4756  0A66                     l7308:	
  4757                           ;lcd(16).c: 172: while(lcd_busy());
  4758                           
  4759  0A66  2408  120A  158A   	fcall	_lcd_busy
  4760  0A69  3800               	iorlw	0
  4761  0A6A  1903               	btfsc	3,2
  4762  0A6B  0008               	return
  4763  0A6C  2A66               	goto	l7308
  4764  0A6D                     __end_of_lcd_gotoxy:	
  4765  0A6D                     __ptext556:	
  4766 ;; =============== function _putch ends ============
  4767                           
  4768                           
  4769 ;; *************** function _lcd_putc *****************
  4770 ;; Defined at:
  4771 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  c               1    wreg     unsigned char 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  c               1   16[BANK0 ] unsigned char 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;		None               void
  4778 ;; Registers used:
  4779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 60/0
  4782 ;;		On exit  : 60/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4785 ;;      Params:         0       0       0       0       0
  4786 ;;      Locals:         0       1       0       0       0
  4787 ;;      Temps:          0       0       0       0       0
  4788 ;;      Totals:         0       1       0       0       0
  4789 ;;Total ram usage:        1 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:    5
  4792 ;; This function calls:
  4793 ;;		_lcd_put_byte
  4794 ;;		_lcd_busy
  4795 ;;		_lcd_gotoxy
  4796 ;;		_isprint
  4797 ;; This function is called by:
  4798 ;;		_putch
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801  0A6D                     _lcd_putc:	
  4802                           
  4803                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4804                           ;lcd_putc@c stored from wreg
  4805  0A6D  00B0               	movwf	lcd_putc@c
  4806                           
  4807                           ;lcd(16).c: 144: switch(c){
  4808  0A6E  2A93               	goto	l7394
  4809  0A6F                     l7380:	
  4810  0A6F  3000               	movlw	0
  4811                           
  4812                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4813  0A70  01A8               	clrf	?_lcd_put_byte
  4814  0A71  0AA8               	incf	?_lcd_put_byte,f
  4815  0A72  235D  120A  158A   	fcall	_lcd_put_byte
  4816  0A75                     l7382:	
  4817                           ;lcd(16).c: 147: while(lcd_busy());
  4818                           
  4819  0A75  2408  120A  158A   	fcall	_lcd_busy
  4820  0A78  3800               	iorlw	0
  4821  0A79  1903               	btfsc	3,2
  4822  0A7A  0008               	return
  4823  0A7B  2A75               	goto	l7382
  4824  0A7C                     l7384:	
  4825  0A7C  3000               	movlw	0
  4826                           
  4827                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4828  0A7D  01AD               	clrf	?_lcd_gotoxy
  4829  0A7E  0AAD               	incf	?_lcd_gotoxy,f
  4830  0A7F  2A55               	ljmp	_lcd_gotoxy
  4831  0A80                     l7386:	
  4832                           ;lcd(16).c: 151: break;
  4833                           
  4834                           
  4835                           ;lcd(16).c: 153: if(isprint(c)){
  4836  0A80  0830               	movf	lcd_putc@c,w
  4837  0A81  2433  120A  158A   	fcall	_isprint
  4838  0A84  1C03               	btfss	3,0
  4839  0A85  0008               	return
  4840                           
  4841                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4842  0A86  0830               	movf	lcd_putc@c,w
  4843  0A87  00A8               	movwf	?_lcd_put_byte
  4844  0A88  3001               	movlw	1
  4845  0A89  235D  120A  158A   	fcall	_lcd_put_byte
  4846  0A8C                     l7390:	
  4847                           ;lcd(16).c: 155: while(lcd_busy());
  4848                           
  4849  0A8C  2408  120A  158A   	fcall	_lcd_busy
  4850  0A8F  3800               	iorlw	0
  4851  0A90  1903               	btfsc	3,2
  4852  0A91  0008               	return
  4853  0A92  2A8C               	goto	l7390
  4854  0A93                     l7394:	
  4855  0A93  0830               	movf	lcd_putc@c,w
  4856                           
  4857                           ; Switch size 1, requested type "space"
  4858                           ; Number of cases is 2, Range of values is 10 to 12
  4859                           ; switch strategies available:
  4860                           ; Name         Instructions Cycles
  4861                           ; simple_byte            7     4 (average)
  4862                           ; direct_byte           20    11 (fixed)
  4863                           ; jumptable            263     9 (fixed)
  4864                           ;	Chosen strategy is simple_byte
  4865  0A94  3A0A               	xorlw	10	; case 10
  4866  0A95  1903               	skipnz
  4867  0A96  2A7C               	goto	l7384
  4868  0A97  3A06               	xorlw	6	; case 12
  4869  0A98  1903               	skipnz
  4870  0A99  2A6F               	goto	l7380
  4871  0A9A  2A80               	goto	l7386
  4872  0A9B  0008               	return
  4873  0A9C                     __end_of_lcd_putc:	
  4874  0A9C                     __ptext561:	
  4875 ;; =============== function _lcd_gotoxy ends ============
  4876                           
  4877                           
  4878 ;; *************** function _lcd_init *****************
  4879 ;; Defined at:
  4880 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  i               1    0        unsigned char 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;		None               void
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0, pclath, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 17F/60
  4891 ;;		On exit  : 60/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4894 ;;      Params:         0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0
  4896 ;;      Temps:          0       3       0       0       0
  4897 ;;      Totals:         0       3       0       0       0
  4898 ;;Total ram usage:        3 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    4
  4901 ;; This function calls:
  4902 ;;		_lcd_put_byte
  4903 ;;		_lcd_busy
  4904 ;; This function is called by:
  4905 ;;		_main
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908  0A9C                     _lcd_init:	
  4909                           
  4910                           ;lcd(16).c: 6: unsigned char i;
  4911                           ;lcd(16).c: 7: TRISD3 = 0;
  4912                           
  4913                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4914  0A9C  1303               	bcf	3,6	;RP1=0, select bank1
  4915  0A9D  1188               	bcf	8,3
  4916                           
  4917                           ;lcd(16).c: 8: TRISD1 = 0;
  4918  0A9E  1088               	bcf	8,1
  4919                           
  4920                           ;lcd(16).c: 9: TRISD2 = 0;
  4921  0A9F  1108               	bcf	8,2
  4922                           
  4923                           ;lcd(16).c: 10: TRISD4 = 0;
  4924  0AA0  1208               	bcf	8,4
  4925                           
  4926                           ;lcd(16).c: 11: TRISD5 = 0;
  4927  0AA1  1288               	bcf	8,5
  4928                           
  4929                           ;lcd(16).c: 12: TRISD6 = 0;
  4930  0AA2  1308               	bcf	8,6
  4931                           
  4932                           ;lcd(16).c: 13: TRISD7 = 0;
  4933  0AA3  1388               	bcf	8,7
  4934                           
  4935                           ;lcd(16).c: 14: RD3 = 0;
  4936  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4937  0AA5  3003               	movlw	3
  4938  0AA6  1188               	bcf	8,3
  4939                           
  4940                           ;lcd(16).c: 15: RD1 = 0;
  4941  0AA7  1088               	bcf	8,1
  4942                           
  4943                           ;lcd(16).c: 16: RD2 = 0;
  4944  0AA8  1108               	bcf	8,2
  4945                           
  4946                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4947  0AA9  00AF               	movwf	??_lcd_init+2
  4948  0AAA  308A               	movlw	138
  4949  0AAB  00AE               	movwf	??_lcd_init+1
  4950  0AAC  3056               	movlw	86
  4951  0AAD  00AD               	movwf	??_lcd_init
  4952  0AAE                     u4817:	
  4953  0AAE  0BAD               	decfsz	??_lcd_init,f
  4954  0AAF  2AAE               	goto	u4817
  4955  0AB0  0BAE               	decfsz	??_lcd_init+1,f
  4956  0AB1  2AAE               	goto	u4817
  4957  0AB2  0BAF               	decfsz	??_lcd_init+2,f
  4958  0AB3  2AAE               	goto	u4817
  4959  0AB4  2AB5               	nop2
  4960                           
  4961                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4962  0AB5  2441  120A  158A   	fcall	PL28	;call to abstracted procedure
  4963  0AB8  235D  120A  158A   	fcall	_lcd_put_byte
  4964                           
  4965                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4966  0ABB  3002               	movlw	2
  4967  0ABC  00AF               	movwf	??_lcd_init+2
  4968  0ABD  3045               	movlw	69
  4969  0ABE  00AE               	movwf	??_lcd_init+1
  4970  0ABF  30A9               	movlw	169
  4971  0AC0  00AD               	movwf	??_lcd_init
  4972  0AC1                     u4827:	
  4973  0AC1  0BAD               	decfsz	??_lcd_init,f
  4974  0AC2  2AC1               	goto	u4827
  4975  0AC3  0BAE               	decfsz	??_lcd_init+1,f
  4976  0AC4  2AC1               	goto	u4827
  4977  0AC5  0BAF               	decfsz	??_lcd_init+2,f
  4978  0AC6  2AC1               	goto	u4827
  4979  0AC7  2AC8               	nop2
  4980                           
  4981                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4982  0AC8  2441  120A  158A   	fcall	PL28	;call to abstracted procedure
  4983  0ACB  235D  120A  158A   	fcall	_lcd_put_byte
  4984                           
  4985                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4986  0ACE  3002               	movlw	2
  4987  0ACF  00AF               	movwf	??_lcd_init+2
  4988  0AD0  3045               	movlw	69
  4989  0AD1  00AE               	movwf	??_lcd_init+1
  4990  0AD2  30A9               	movlw	169
  4991  0AD3  00AD               	movwf	??_lcd_init
  4992  0AD4                     u4837:	
  4993  0AD4  0BAD               	decfsz	??_lcd_init,f
  4994  0AD5  2AD4               	goto	u4837
  4995  0AD6  0BAE               	decfsz	??_lcd_init+1,f
  4996  0AD7  2AD4               	goto	u4837
  4997  0AD8  0BAF               	decfsz	??_lcd_init+2,f
  4998  0AD9  2AD4               	goto	u4837
  4999  0ADA  2ADB               	nop2
  5000                           
  5001                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  5002  0ADB  3032               	movlw	50
  5003  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  5004  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  5005  0ADE  00A8               	movwf	?_lcd_put_byte
  5006  0ADF  3000               	movlw	0
  5007  0AE0  235D  120A  158A   	fcall	_lcd_put_byte
  5008                           
  5009                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  5010  0AE3  3003               	movlw	3
  5011  0AE4  00AF               	movwf	??_lcd_init+2
  5012  0AE5  308A               	movlw	138
  5013  0AE6  00AE               	movwf	??_lcd_init+1
  5014  0AE7  3056               	movlw	86
  5015  0AE8  00AD               	movwf	??_lcd_init
  5016  0AE9                     u4847:	
  5017  0AE9  0BAD               	decfsz	??_lcd_init,f
  5018  0AEA  2AE9               	goto	u4847
  5019  0AEB  0BAE               	decfsz	??_lcd_init+1,f
  5020  0AEC  2AE9               	goto	u4847
  5021  0AED  0BAF               	decfsz	??_lcd_init+2,f
  5022  0AEE  2AE9               	goto	u4847
  5023  0AEF  2AF0               	nop2
  5024                           
  5025                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  5026  0AF0  3003               	movlw	3
  5027  0AF1  1283               	bcf	3,5	;RP0=0, select bank0
  5028  0AF2  1303               	bcf	3,6	;RP1=0, select bank0
  5029  0AF3  00AF               	movwf	??_lcd_init+2
  5030  0AF4  308A               	movlw	138
  5031  0AF5  00AE               	movwf	??_lcd_init+1
  5032  0AF6  3056               	movlw	86
  5033  0AF7  00AD               	movwf	??_lcd_init
  5034  0AF8                     u4857:	
  5035  0AF8  0BAD               	decfsz	??_lcd_init,f
  5036  0AF9  2AF8               	goto	u4857
  5037  0AFA  0BAE               	decfsz	??_lcd_init+1,f
  5038  0AFB  2AF8               	goto	u4857
  5039  0AFC  0BAF               	decfsz	??_lcd_init+2,f
  5040  0AFD  2AF8               	goto	u4857
  5041  0AFE  2AFF               	nop2
  5042                           
  5043                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5044  0AFF  3003               	movlw	3
  5045  0B00  1283               	bcf	3,5	;RP0=0, select bank0
  5046  0B01  1303               	bcf	3,6	;RP1=0, select bank0
  5047  0B02  00AF               	movwf	??_lcd_init+2
  5048  0B03  308A               	movlw	138
  5049  0B04  00AE               	movwf	??_lcd_init+1
  5050  0B05  3056               	movlw	86
  5051  0B06  00AD               	movwf	??_lcd_init
  5052  0B07                     u4867:	
  5053  0B07  0BAD               	decfsz	??_lcd_init,f
  5054  0B08  2B07               	goto	u4867
  5055  0B09  0BAE               	decfsz	??_lcd_init+1,f
  5056  0B0A  2B07               	goto	u4867
  5057  0B0B  0BAF               	decfsz	??_lcd_init+2,f
  5058  0B0C  2B07               	goto	u4867
  5059  0B0D  2B0E               	nop2
  5060  0B0E                     l7272:	
  5061                           ;lcd(16).c: 30: while(lcd_busy());
  5062                           
  5063  0B0E  2408  120A  158A   	fcall	_lcd_busy
  5064  0B11  3800               	iorlw	0
  5065  0B12  1D03               	skipz
  5066  0B13  2B0E               	goto	l7272
  5067                           
  5068                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5069  0B14  3028               	movlw	40
  5070  0B15  00A8               	movwf	?_lcd_put_byte
  5071  0B16  3000               	movlw	0
  5072  0B17  235D  120A  158A   	fcall	_lcd_put_byte
  5073  0B1A                     l7276:	
  5074                           ;lcd(16).c: 32: while(lcd_busy());
  5075                           
  5076  0B1A  2408  120A  158A   	fcall	_lcd_busy
  5077  0B1D  3800               	iorlw	0
  5078  0B1E  1D03               	skipz
  5079  0B1F  2B1A               	goto	l7276
  5080                           
  5081                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5082  0B20  3008               	movlw	8
  5083  0B21  00A8               	movwf	?_lcd_put_byte
  5084  0B22  3000               	movlw	0
  5085  0B23  235D  120A  158A   	fcall	_lcd_put_byte
  5086  0B26                     l7280:	
  5087                           ;lcd(16).c: 35: while(lcd_busy());
  5088                           
  5089  0B26  2408  120A  158A   	fcall	_lcd_busy
  5090  0B29  3800               	iorlw	0
  5091  0B2A  1D03               	skipz
  5092  0B2B  2B26               	goto	l7280
  5093                           
  5094                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5095  0B2C  300C               	movlw	12
  5096  0B2D  00A8               	movwf	?_lcd_put_byte
  5097  0B2E  3000               	movlw	0
  5098  0B2F  235D  120A  158A   	fcall	_lcd_put_byte
  5099  0B32                     l7284:	
  5100                           ;lcd(16).c: 37: while(lcd_busy());
  5101                           
  5102  0B32  2408  120A  158A   	fcall	_lcd_busy
  5103  0B35  3800               	iorlw	0
  5104  0B36  1D03               	skipz
  5105  0B37  2B32               	goto	l7284
  5106  0B38  3000               	movlw	0
  5107                           
  5108                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5109  0B39  01A8               	clrf	?_lcd_put_byte
  5110  0B3A  0AA8               	incf	?_lcd_put_byte,f
  5111  0B3B  235D  120A  158A   	fcall	_lcd_put_byte
  5112  0B3E                     l7288:	
  5113                           ;lcd(16).c: 40: while(lcd_busy());
  5114                           
  5115  0B3E  2408  120A  158A   	fcall	_lcd_busy
  5116  0B41  3800               	iorlw	0
  5117  0B42  1D03               	skipz
  5118  0B43  2B3E               	goto	l7288
  5119                           
  5120                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5121  0B44  3004               	movlw	4
  5122  0B45  00A8               	movwf	?_lcd_put_byte
  5123  0B46  3000               	movlw	0
  5124  0B47  235D  120A  158A   	fcall	_lcd_put_byte
  5125  0B4A                     l7292:	
  5126                           ;lcd(16).c: 42: while(lcd_busy());
  5127                           
  5128  0B4A  2408  120A  158A   	fcall	_lcd_busy
  5129  0B4D  3800               	iorlw	0
  5130  0B4E  1D03               	skipz
  5131  0B4F  2B4A               	goto	l7292
  5132  0B50  3000               	movlw	0
  5133                           
  5134                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5135  0B51  01A8               	clrf	?_lcd_put_byte
  5136  0B52  0AA8               	incf	?_lcd_put_byte,f
  5137  0B53  235D  120A  158A   	fcall	_lcd_put_byte
  5138  0B56                     l7296:	
  5139                           ;lcd(16).c: 44: while(lcd_busy());
  5140                           
  5141  0B56  2408  120A  158A   	fcall	_lcd_busy
  5142  0B59  3800               	iorlw	0
  5143  0B5A  1903               	btfsc	3,2
  5144  0B5B  0008               	return
  5145  0B5C  2B56               	goto	l7296
  5146  0B5D                     __end_of_lcd_init:	
  5147  0B5D                     __ptext569:	
  5148 ;; =============== function _lcd_busy ends ============
  5149                           
  5150                           
  5151 ;; *************** function _lcd_put_byte *****************
  5152 ;; Defined at:
  5153 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  rs              1    wreg     unsigned char 
  5156 ;;  b               1    8[BANK0 ] unsigned char 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  rs              1   11[BANK0 ] unsigned char 
  5159 ;;  temp            1   12[BANK0 ] struct _BYTE_VAL
  5160 ;; Return value:  Size  Location     Type
  5161 ;;		None               void
  5162 ;; Registers used:
  5163 ;;		wreg, status,2, status,0
  5164 ;; Tracked objects:
  5165 ;;		On entry : 60/0
  5166 ;;		On exit  : 60/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5169 ;;      Params:         0       1       0       0       0
  5170 ;;      Locals:         0       2       0       0       0
  5171 ;;      Temps:          0       2       0       0       0
  5172 ;;      Totals:         0       5       0       0       0
  5173 ;;Total ram usage:        5 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; Hardware stack levels required when called:    3
  5176 ;; This function calls:
  5177 ;;		Nothing
  5178 ;; This function is called by:
  5179 ;;		_lcd_init
  5180 ;;		_lcd_putc
  5181 ;;		_lcd_gotoxy
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184  0B5D                     _lcd_put_byte:	
  5185                           
  5186                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5187                           ;lcd_put_byte@rs stored from wreg
  5188  0B5D  00AB               	movwf	lcd_put_byte@rs
  5189                           
  5190                           ;lcd(16).c: 107: BYTE_VAL temp;
  5191                           ;lcd(16).c: 109: TRISD4 = 0;
  5192  0B5E  1683               	bsf	3,5	;RP0=1, select bank1
  5193  0B5F  1208               	bcf	8,4
  5194                           
  5195                           ;lcd(16).c: 110: TRISD5 = 0;
  5196  0B60  1288               	bcf	8,5
  5197                           
  5198                           ;lcd(16).c: 111: TRISD6 = 0;
  5199  0B61  1308               	bcf	8,6
  5200                           
  5201                           ;lcd(16).c: 112: TRISD7 = 0;
  5202  0B62  1388               	bcf	8,7
  5203                           
  5204                           ;lcd(16).c: 114: RD1 = 0;
  5205  0B63  1283               	bcf	3,5	;RP0=0, select bank0
  5206  0B64  1088               	bcf	8,1
  5207                           
  5208                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5209  0B65  082B               	movf	lcd_put_byte@rs,w
  5210  0B66  1D03               	skipz
  5211  0B67  1488               	bsf	8,1
  5212                           
  5213                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5214  0B68  3021               	movlw	33
  5215  0B69  00A9               	movwf	??_lcd_put_byte
  5216  0B6A                     u4917:	
  5217  0B6A  0BA9               	decfsz	??_lcd_put_byte,f
  5218  0B6B  2B6A               	goto	u4917
  5219                           
  5220                           ;lcd(16).c: 118: RD2 = 0;
  5221  0B6C  1283               	bcf	3,5	;RP0=0, select bank0
  5222  0B6D  1303               	bcf	3,6	;RP1=0, select bank0
  5223  0B6E  3021               	movlw	33
  5224  0B6F  1108               	bcf	8,2
  5225                           
  5226                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5227  0B70  00A9               	movwf	??_lcd_put_byte
  5228  0B71                     u4927:	
  5229  0B71  0BA9               	decfsz	??_lcd_put_byte,f
  5230  0B72  2B71               	goto	u4927
  5231                           
  5232                           ;lcd(16).c: 120: RD3 = 0;
  5233  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  5234  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  5235  0B75  1188               	bcf	8,3
  5236                           
  5237                           ;lcd(16).c: 122: temp.Val = b;
  5238  0B76  0828               	movf	lcd_put_byte@b,w
  5239  0B77  00AC               	movwf	lcd_put_byte@temp
  5240                           
  5241                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5242  0B78  0E2C               	swapf	lcd_put_byte@temp,w
  5243  0B79  3901               	andlw	1
  5244  0B7A  00A9               	movwf	??_lcd_put_byte
  5245  0B7B  0C29               	rrf	??_lcd_put_byte,w
  5246  0B7C  1C03               	btfss	3,0
  5247  0B7D  2B82               	goto	u3570
  5248  0B7E  1283               	bcf	3,5	;RP0=0, select bank0
  5249  0B7F  1303               	bcf	3,6	;RP1=0, select bank0
  5250  0B80  1608               	bsf	8,4
  5251  0B81  2B85               	goto	l7020
  5252  0B82                     u3570:	
  5253  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  5254  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  5255  0B84  1208               	bcf	8,4
  5256  0B85                     l7020:	
  5257                           
  5258                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5259  0B85  0E2C               	swapf	lcd_put_byte@temp,w
  5260  0B86  00A9               	movwf	??_lcd_put_byte
  5261  0B87  0C29               	rrf	??_lcd_put_byte,w
  5262  0B88  3901               	andlw	1
  5263  0B89  00AA               	movwf	??_lcd_put_byte+1
  5264  0B8A  0C2A               	rrf	??_lcd_put_byte+1,w
  5265  0B8B  1C03               	btfss	3,0
  5266  0B8C  2B91               	goto	u3590
  5267  0B8D  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0B8E  1303               	bcf	3,6	;RP1=0, select bank0
  5269  0B8F  1688               	bsf	8,5
  5270  0B90  2B94               	goto	l7022
  5271  0B91                     u3590:	
  5272  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  5273  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  5274  0B93  1288               	bcf	8,5
  5275  0B94                     l7022:	
  5276                           
  5277                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5278  0B94  0E2C               	swapf	lcd_put_byte@temp,w
  5279  0B95  00A9               	movwf	??_lcd_put_byte
  5280  0B96  0CA9               	rrf	??_lcd_put_byte,f
  5281  0B97  0C29               	rrf	??_lcd_put_byte,w
  5282  0B98  3901               	andlw	1
  5283  0B99  00AA               	movwf	??_lcd_put_byte+1
  5284  0B9A  0C2A               	rrf	??_lcd_put_byte+1,w
  5285  0B9B  1C03               	btfss	3,0
  5286  0B9C  2BA1               	goto	u3610
  5287  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  5288  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  5289  0B9F  1708               	bsf	8,6
  5290  0BA0  2BA4               	goto	l7024
  5291  0BA1                     u3610:	
  5292  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  5293  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  5294  0BA3  1308               	bcf	8,6
  5295  0BA4                     l7024:	
  5296                           
  5297                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5298  0BA4  0D2C               	rlf	lcd_put_byte@temp,w
  5299  0BA5  0D2C               	rlf	lcd_put_byte@temp,w
  5300  0BA6  3901               	andlw	1
  5301  0BA7  00A9               	movwf	??_lcd_put_byte
  5302  0BA8  0C29               	rrf	??_lcd_put_byte,w
  5303  0BA9  1C03               	btfss	3,0
  5304  0BAA  2BAF               	goto	u3630
  5305  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  5306  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  5307  0BAD  1788               	bsf	8,7
  5308  0BAE  2BB2               	goto	u3644
  5309  0BAF                     u3630:	
  5310  0BAF  1283               	bcf	3,5	;RP0=0, select bank0
  5311  0BB0  1303               	bcf	3,6	;RP1=0, select bank0
  5312  0BB1  1388               	bcf	8,7
  5313  0BB2                     u3644:	
  5314                           
  5315                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5316  0BB2  3021               	movlw	33
  5317  0BB3  00A9               	movwf	??_lcd_put_byte
  5318  0BB4                     u4937:	
  5319  0BB4  0BA9               	decfsz	??_lcd_put_byte,f
  5320  0BB5  2BB4               	goto	u4937
  5321                           
  5322                           ;lcd(16).c: 130: RD3 = 1;
  5323  0BB6  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0BB7  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0BB8  3021               	movlw	33
  5326  0BB9  1588               	bsf	8,3
  5327                           
  5328                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5329  0BBA  00A9               	movwf	??_lcd_put_byte
  5330  0BBB                     u4947:	
  5331  0BBB  0BA9               	decfsz	??_lcd_put_byte,f
  5332  0BBC  2BBB               	goto	u4947
  5333                           
  5334                           ;lcd(16).c: 132: RD3 = 0;
  5335  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  5336  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  5337  0BBF  1188               	bcf	8,3
  5338                           
  5339                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5340  0BC0  082C               	movf	lcd_put_byte@temp,w
  5341  0BC1  3901               	andlw	1
  5342  0BC2  00A9               	movwf	??_lcd_put_byte
  5343  0BC3  0C29               	rrf	??_lcd_put_byte,w
  5344  0BC4  1C03               	btfss	3,0
  5345  0BC5  2BCA               	goto	u3650
  5346  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0BC8  1608               	bsf	8,4
  5349  0BC9  2BCD               	goto	l7032
  5350  0BCA                     u3650:	
  5351  0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0BCC  1208               	bcf	8,4
  5354  0BCD                     l7032:	
  5355                           
  5356                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5357  0BCD  0C2C               	rrf	lcd_put_byte@temp,w
  5358  0BCE  3901               	andlw	1
  5359  0BCF  00A9               	movwf	??_lcd_put_byte
  5360  0BD0  0C29               	rrf	??_lcd_put_byte,w
  5361  0BD1  1C03               	btfss	3,0
  5362  0BD2  2BD7               	goto	u3670
  5363  0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  5364  0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  5365  0BD5  1688               	bsf	8,5
  5366  0BD6  2BDA               	goto	l7034
  5367  0BD7                     u3670:	
  5368  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  5369  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  5370  0BD9  1288               	bcf	8,5
  5371  0BDA                     l7034:	
  5372                           
  5373                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5374  0BDA  0C2C               	rrf	lcd_put_byte@temp,w
  5375  0BDB  00A9               	movwf	??_lcd_put_byte
  5376  0BDC  0C29               	rrf	??_lcd_put_byte,w
  5377  0BDD  3901               	andlw	1
  5378  0BDE  00AA               	movwf	??_lcd_put_byte+1
  5379  0BDF  0C2A               	rrf	??_lcd_put_byte+1,w
  5380  0BE0  1C03               	btfss	3,0
  5381  0BE1  2BE6               	goto	u3690
  5382  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  5383  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  5384  0BE4  1708               	bsf	8,6
  5385  0BE5  2BE9               	goto	l7036
  5386  0BE6                     u3690:	
  5387  0BE6  1283               	bcf	3,5	;RP0=0, select bank0
  5388  0BE7  1303               	bcf	3,6	;RP1=0, select bank0
  5389  0BE8  1308               	bcf	8,6
  5390  0BE9                     l7036:	
  5391                           
  5392                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5393  0BE9  0C2C               	rrf	lcd_put_byte@temp,w
  5394  0BEA  00A9               	movwf	??_lcd_put_byte
  5395  0BEB  0CA9               	rrf	??_lcd_put_byte,f
  5396  0BEC  0C29               	rrf	??_lcd_put_byte,w
  5397  0BED  3901               	andlw	1
  5398  0BEE  00AA               	movwf	??_lcd_put_byte+1
  5399  0BEF  0C2A               	rrf	??_lcd_put_byte+1,w
  5400  0BF0  1C03               	btfss	3,0
  5401  0BF1  2BF6               	goto	u3710
  5402  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  5403  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  5404  0BF4  1788               	bsf	8,7
  5405  0BF5  2BF9               	goto	u3724
  5406  0BF6                     u3710:	
  5407  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0BF8  1388               	bcf	8,7
  5410  0BF9                     u3724:	
  5411                           
  5412                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5413  0BF9  3021               	movlw	33
  5414  0BFA  00A9               	movwf	??_lcd_put_byte
  5415  0BFB                     u4957:	
  5416  0BFB  0BA9               	decfsz	??_lcd_put_byte,f
  5417  0BFC  2BFB               	goto	u4957
  5418                           
  5419                           ;lcd(16).c: 139: RD3 = 1;
  5420  0BFD  1283               	bcf	3,5	;RP0=0, select bank0
  5421  0BFE  1303               	bcf	3,6	;RP1=0, select bank0
  5422  0BFF  3021               	movlw	33
  5423  0C00  1588               	bsf	8,3
  5424                           
  5425                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5426  0C01  00A9               	movwf	??_lcd_put_byte
  5427  0C02                     u4967:	
  5428  0C02  0BA9               	decfsz	??_lcd_put_byte,f
  5429  0C03  2C02               	goto	u4967
  5430                           
  5431                           ;lcd(16).c: 141: RD3 = 0;
  5432  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  5433  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  5434  0C06  1188               	bcf	8,3
  5435  0C07  0008               	return
  5436  0C08                     __end_of_lcd_put_byte:	
  5437  0C08                     __ptext568:	
  5438 ;; =============== function ___ftadd ends ============
  5439                           
  5440                           
  5441 ;; *************** function _lcd_busy *****************
  5442 ;; Defined at:
  5443 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  busy            1    9[BANK0 ] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      unsigned char 
  5450 ;; Registers used:
  5451 ;;		wreg
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 60/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5457 ;;      Params:         0       0       0       0       0
  5458 ;;      Locals:         0       1       0       0       0
  5459 ;;      Temps:          0       1       0       0       0
  5460 ;;      Totals:         0       2       0       0       0
  5461 ;;Total ram usage:        2 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    3
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_lcd_init
  5468 ;;		_lcd_putc
  5469 ;;		_lcd_gotoxy
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472  0C08                     _lcd_busy:	
  5473                           
  5474                           ;lcd(16).c: 48: unsigned char busy;
  5475                           ;lcd(16).c: 50: TRISD4 = 1;
  5476                           
  5477                           ; Regs used in _lcd_busy: [wreg]
  5478  0C08  1683               	bsf	3,5	;RP0=1, select bank1
  5479  0C09  1303               	bcf	3,6	;RP1=0, select bank1
  5480  0C0A  1608               	bsf	8,4
  5481                           
  5482                           ;lcd(16).c: 51: TRISD5 = 1;
  5483  0C0B  1688               	bsf	8,5
  5484                           
  5485                           ;lcd(16).c: 52: TRISD6 = 1;
  5486  0C0C  1708               	bsf	8,6
  5487                           
  5488                           ;lcd(16).c: 53: TRISD7 = 1;
  5489  0C0D  1788               	bsf	8,7
  5490                           
  5491                           ;lcd(16).c: 55: RD2 = 1;
  5492  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0C0F  3021               	movlw	33
  5494  0C10  1508               	bsf	8,2
  5495                           
  5496                           ;lcd(16).c: 56: RD1 = 0;
  5497  0C11  1088               	bcf	8,1
  5498                           
  5499                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5500  0C12  00A8               	movwf	??_lcd_busy
  5501  0C13                     u4877:	
  5502  0C13  0BA8               	decfsz	??_lcd_busy,f
  5503  0C14  2C13               	goto	u4877
  5504                           
  5505                           ;lcd(16).c: 58: RD3 = 1;
  5506  0C15  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0C16  1303               	bcf	3,6	;RP1=0, select bank0
  5508  0C17  3021               	movlw	33
  5509  0C18  1588               	bsf	8,3
  5510                           
  5511                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5512  0C19  00A8               	movwf	??_lcd_busy
  5513  0C1A                     u4887:	
  5514  0C1A  0BA8               	decfsz	??_lcd_busy,f
  5515  0C1B  2C1A               	goto	u4887
  5516                           
  5517                           ;lcd(16).c: 61: busy = RD7;
  5518  0C1C  3000               	movlw	0
  5519  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0C1F  1B88               	btfsc	8,7
  5522  0C20  3001               	movlw	1
  5523  0C21  00A9               	movwf	lcd_busy@busy
  5524  0C22  3021               	movlw	33
  5525                           
  5526                           ;lcd(16).c: 63: RD3 = 0;
  5527  0C23  1188               	bcf	8,3
  5528                           
  5529                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5530  0C24  00A8               	movwf	??_lcd_busy
  5531  0C25                     u4897:	
  5532  0C25  0BA8               	decfsz	??_lcd_busy,f
  5533  0C26  2C25               	goto	u4897
  5534                           
  5535                           ;lcd(16).c: 65: RD3 = 1;
  5536  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  5537  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  5538  0C29  3021               	movlw	33
  5539  0C2A  1588               	bsf	8,3
  5540                           
  5541                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5542  0C2B  00A8               	movwf	??_lcd_busy
  5543  0C2C                     u4907:	
  5544  0C2C  0BA8               	decfsz	??_lcd_busy,f
  5545  0C2D  2C2C               	goto	u4907
  5546                           
  5547                           ;lcd(16).c: 67: RD3 = 0;
  5548  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  5549  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  5550  0C30  1188               	bcf	8,3
  5551                           
  5552                           ;lcd(16).c: 70: return busy;
  5553  0C31  0829               	movf	lcd_busy@busy,w
  5554  0C32  0008               	return
  5555  0C33                     __end_of_lcd_busy:	
  5556  0C33                     __ptext585:	
  5557 ;; =============== function _isdigit ends ============
  5558                           
  5559                           
  5560 ;; *************** function _isprint *****************
  5561 ;; Defined at:
  5562 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  c               1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  c               1    9[BANK0 ] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;		None               void
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0
  5571 ;; Tracked objects:
  5572 ;;		On entry : 60/0
  5573 ;;		On exit  : 60/0
  5574 ;;		Unchanged: FFF9F/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5576 ;;      Params:         0       0       0       0       0
  5577 ;;      Locals:         0       2       0       0       0
  5578 ;;      Temps:          0       0       0       0       0
  5579 ;;      Totals:         0       2       0       0       0
  5580 ;;Total ram usage:        2 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    3
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_lcd_putc
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589  0C33                     _isprint:	
  5590                           
  5591                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5592                           ;isprint@c stored from wreg
  5593  0C33  00A9               	movwf	isprint@c
  5594  0C34  307F               	movlw	127
  5595  0C35  01A8               	clrf	_isprint$3676
  5596  0C36  0229               	subwf	isprint@c,w
  5597  0C37  1803               	skipnc
  5598  0C38  2C3F               	goto	l6496
  5599  0C39  3020               	movlw	32
  5600  0C3A  0229               	subwf	isprint@c,w
  5601  0C3B  1C03               	skipc
  5602  0C3C  2C3F               	goto	l6496
  5603  0C3D  01A8               	clrf	_isprint$3676
  5604  0C3E  0AA8               	incf	_isprint$3676,f
  5605  0C3F                     l6496:	
  5606  0C3F  0C28               	rrf	_isprint$3676,w
  5607  0C40  0008               	return
  5608  0C41                     __end_of_isprint:	
  5609  0C41                     PL28:	
  5610  0C41  3030               	movlw	48
  5611  0C42  1283               	bcf	3,5	;RP0=0, select bank0
  5612  0C43  1303               	bcf	3,6	;RP1=0, select bank0
  5613  0C44  00A8               	movwf	?_lcd_put_byte
  5614  0C45  3400               	retlw	0
  5615                           
  5616                           	psect	text564
  5617  0C46                     __ptext564:	
  5618 ;; =============== function ___awtoft ends ============
  5619                           
  5620                           
  5621 ;; *************** function ___lbtoft *****************
  5622 ;; Defined at:
  5623 ;;		line 28 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbtoft.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  c               1    wreg     unsigned char 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;  c               1   38[BANK0 ] unsigned char 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  3   35[BANK0 ] float 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0, pclath, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 60/0
  5634 ;;		On exit  : 60/0
  5635 ;;		Unchanged: FFF9F/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5637 ;;      Params:         0       3       0       0       0
  5638 ;;      Locals:         0       1       0       0       0
  5639 ;;      Temps:          0       0       0       0       0
  5640 ;;      Totals:         0       4       0       0       0
  5641 ;;Total ram usage:        4 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    4
  5644 ;; This function calls:
  5645 ;;		___ftpack
  5646 ;; This function is called by:
  5647 ;;		_main
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650  0C46                     ___lbtoft:	
  5651                           
  5652                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  5653                           ;___lbtoft@c stored from wreg
  5654  0C46  00C6               	movwf	___lbtoft@c
  5655  0C47  00A8               	movwf	?___ftpack
  5656  0C48  308E               	movlw	142
  5657  0C49  01A9               	clrf	?___ftpack+1
  5658  0C4A  01AA               	clrf	?___ftpack+2
  5659  0C4B  00AB               	movwf	?___ftpack+3
  5660  0C4C  01AC               	clrf	?___ftpack+4
  5661  0C4D  2769               	fcall	___ftpack
  5662  0C4E  0828               	movf	?___ftpack,w
  5663  0C4F  00C3               	movwf	?___lbtoft
  5664  0C50  0829               	movf	?___ftpack+1,w
  5665  0C51  00C4               	movwf	?___lbtoft+1
  5666  0C52  082A               	movf	?___ftpack+2,w
  5667  0C53  00C5               	movwf	?___lbtoft+2
  5668  0C54  0008               	return
  5669  0C55                     __end_of___lbtoft:	
  5670  0C55                     __ptext563:	
  5671 ;; =============== function ___lltoft ends ============
  5672                           
  5673                           
  5674 ;; *************** function ___awtoft *****************
  5675 ;; Defined at:
  5676 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  c               2   16[BANK0 ] int 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  sign            1   19[BANK0 ] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  3   16[BANK0 ] float 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0, pclath, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 60/0
  5687 ;;		On exit  : 60/0
  5688 ;;		Unchanged: FFF9F/0
  5689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5690 ;;      Params:         0       3       0       0       0
  5691 ;;      Locals:         0       1       0       0       0
  5692 ;;      Temps:          0       0       0       0       0
  5693 ;;      Totals:         0       4       0       0       0
  5694 ;;Total ram usage:        4 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    4
  5697 ;; This function calls:
  5698 ;;		___ftpack
  5699 ;; This function is called by:
  5700 ;;		_main
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703  0C55                     ___awtoft:	
  5704                           
  5705                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5706  0C55  01B3               	clrf	___awtoft@sign
  5707  0C56  1FB1               	btfss	___awtoft@c+1,7
  5708  0C57  2C5F               	goto	l7246
  5709  0C58  09B0               	comf	___awtoft@c,f
  5710  0C59  09B1               	comf	___awtoft@c+1,f
  5711  0C5A  0AB0               	incf	___awtoft@c,f
  5712  0C5B  1903               	skipnz
  5713  0C5C  0AB1               	incf	___awtoft@c+1,f
  5714  0C5D  01B3               	clrf	___awtoft@sign
  5715  0C5E  0AB3               	incf	___awtoft@sign,f
  5716  0C5F                     l7246:	
  5717  0C5F  0830               	movf	___awtoft@c,w
  5718  0C60  00A8               	movwf	?___ftpack
  5719  0C61  0831               	movf	___awtoft@c+1,w
  5720  0C62  00A9               	movwf	?___ftpack+1
  5721  0C63  308E               	movlw	142
  5722  0C64  01AA               	clrf	?___ftpack+2
  5723  0C65  00AB               	movwf	?___ftpack+3
  5724  0C66  0833               	movf	___awtoft@sign,w
  5725  0C67  00AC               	movwf	?___ftpack+4
  5726  0C68  2769               	fcall	___ftpack
  5727  0C69  0828               	movf	?___ftpack,w
  5728  0C6A  00B0               	movwf	?___awtoft
  5729  0C6B  0829               	movf	?___ftpack+1,w
  5730  0C6C  00B1               	movwf	?___awtoft+1
  5731  0C6D  082A               	movf	?___ftpack+2,w
  5732  0C6E  00B2               	movwf	?___awtoft+2
  5733  0C6F  0008               	return
  5734  0C70                     __end_of___awtoft:	
  5735  0C70                     __ptext566:	
  5736 ;; =============== function ___ftmul ends ============
  5737                           
  5738                           
  5739 ;; *************** function ___ftdiv *****************
  5740 ;; Defined at:
  5741 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;  f2              3   20[BANK0 ] float 
  5744 ;;  f1              3   23[BANK0 ] float 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  f3              3   30[BANK0 ] float 
  5747 ;;  sign            1   34[BANK0 ] unsigned char 
  5748 ;;  exp             1   33[BANK0 ] unsigned char 
  5749 ;;  cntr            1   29[BANK0 ] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  3   20[BANK0 ] float 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0, pclath, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 60/0
  5756 ;;		On exit  : 60/0
  5757 ;;		Unchanged: FFF9F/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5759 ;;      Params:         0       6       0       0       0
  5760 ;;      Locals:         0       6       0       0       0
  5761 ;;      Temps:          0       3       0       0       0
  5762 ;;      Totals:         0      15       0       0       0
  5763 ;;Total ram usage:       15 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:    4
  5766 ;; This function calls:
  5767 ;;		___ftpack
  5768 ;; This function is called by:
  5769 ;;		_main
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772  0C70                     ___ftdiv:	
  5773                           
  5774                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5775  0C70  0837               	movf	___ftdiv@f1,w
  5776  0C71  00BA               	movwf	??___ftdiv
  5777  0C72  0838               	movf	___ftdiv@f1+1,w
  5778  0C73  00BB               	movwf	??___ftdiv+1
  5779  0C74  0839               	movf	___ftdiv@f1+2,w
  5780  0C75  00BC               	movwf	??___ftdiv+2
  5781  0C76  1003               	clrc
  5782  0C77  0D3B               	rlf	??___ftdiv+1,w
  5783  0C78  0D3C               	rlf	??___ftdiv+2,w
  5784  0C79  00C1               	movwf	___ftdiv@exp
  5785  0C7A  08C1               	movf	___ftdiv@exp,f
  5786  0C7B  1D03               	skipz
  5787  0C7C  2C81               	goto	l7140
  5788  0C7D  01B4               	clrf	?___ftdiv
  5789  0C7E  01B5               	clrf	?___ftdiv+1
  5790  0C7F  01B6               	clrf	?___ftdiv+2
  5791  0C80  0008               	return
  5792  0C81                     l7140:	
  5793  0C81  0834               	movf	___ftdiv@f2,w
  5794  0C82  00BA               	movwf	??___ftdiv
  5795  0C83  0835               	movf	___ftdiv@f2+1,w
  5796  0C84  00BB               	movwf	??___ftdiv+1
  5797  0C85  0836               	movf	___ftdiv@f2+2,w
  5798  0C86  00BC               	movwf	??___ftdiv+2
  5799  0C87  1003               	clrc
  5800  0C88  0D3B               	rlf	??___ftdiv+1,w
  5801  0C89  0D3C               	rlf	??___ftdiv+2,w
  5802  0C8A  00C2               	movwf	___ftdiv@sign
  5803  0C8B  08C2               	movf	___ftdiv@sign,f
  5804  0C8C  1D03               	skipz
  5805  0C8D  2C92               	goto	l3390
  5806  0C8E  01B4               	clrf	?___ftdiv
  5807  0C8F  01B5               	clrf	?___ftdiv+1
  5808  0C90  01B6               	clrf	?___ftdiv+2
  5809  0C91  0008               	return
  5810  0C92                     l3390:	
  5811  0C92  3089               	movlw	137
  5812  0C93  01BE               	clrf	___ftdiv@f3
  5813  0C94  01BF               	clrf	___ftdiv@f3+1
  5814  0C95  01C0               	clrf	___ftdiv@f3+2
  5815  0C96  0742               	addwf	___ftdiv@sign,w
  5816  0C97  00BA               	movwf	??___ftdiv
  5817  0C98  02C1               	subwf	___ftdiv@exp,f
  5818  0C99  0839               	movf	___ftdiv@f1+2,w
  5819  0C9A  00C2               	movwf	___ftdiv@sign
  5820  0C9B  0836               	movf	___ftdiv@f2+2,w
  5821  0C9C  06C2               	xorwf	___ftdiv@sign,f
  5822  0C9D  3080               	movlw	128
  5823  0C9E  05C2               	andwf	___ftdiv@sign,f
  5824  0C9F  3018               	movlw	24
  5825  0CA0  17B8               	bsf	___ftdiv@f1+1,7
  5826  0CA1  01B9               	clrf	___ftdiv@f1+2
  5827  0CA2  17B5               	bsf	___ftdiv@f2+1,7
  5828  0CA3  01B6               	clrf	___ftdiv@f2+2
  5829  0CA4  00BD               	movwf	___ftdiv@cntr
  5830  0CA5                     l7164:	
  5831  0CA5  1003               	clrc
  5832  0CA6  0DBE               	rlf	___ftdiv@f3,f
  5833  0CA7  0DBF               	rlf	___ftdiv@f3+1,f
  5834  0CA8  0DC0               	rlf	___ftdiv@f3+2,f
  5835  0CA9  0836               	movf	___ftdiv@f2+2,w
  5836  0CAA  0239               	subwf	___ftdiv@f1+2,w
  5837  0CAB  1D03               	skipz
  5838  0CAC  2CB3               	goto	u3955
  5839  0CAD  0835               	movf	___ftdiv@f2+1,w
  5840  0CAE  0238               	subwf	___ftdiv@f1+1,w
  5841  0CAF  1D03               	skipz
  5842  0CB0  2CB3               	goto	u3955
  5843  0CB1  0834               	movf	___ftdiv@f2,w
  5844  0CB2  0237               	subwf	___ftdiv@f1,w
  5845  0CB3                     u3955:	
  5846  0CB3  1C03               	skipc
  5847  0CB4  2CC1               	goto	L7
  5848  0CB5  0834               	movf	___ftdiv@f2,w
  5849  0CB6  02B7               	subwf	___ftdiv@f1,f
  5850  0CB7  0835               	movf	___ftdiv@f2+1,w
  5851  0CB8  1C03               	skipc
  5852  0CB9  0F35               	incfsz	___ftdiv@f2+1,w
  5853  0CBA  02B8               	subwf	___ftdiv@f1+1,f
  5854  0CBB  0836               	movf	___ftdiv@f2+2,w
  5855  0CBC  1C03               	skipc
  5856  0CBD  0A36               	incf	___ftdiv@f2+2,w
  5857  0CBE  02B9               	subwf	___ftdiv@f1+2,f
  5858  0CBF  143E               	bsf	___ftdiv@f3,0
  5859  0CC0  1003               	clrc
  5860  0CC1                     L7:	
  5861  0CC1  0DB7               	rlf	___ftdiv@f1,f
  5862  0CC2  0DB8               	rlf	___ftdiv@f1+1,f
  5863  0CC3  0DB9               	rlf	___ftdiv@f1+2,f
  5864  0CC4  0BBD               	decfsz	___ftdiv@cntr,f
  5865  0CC5  2CA5               	goto	l7164
  5866  0CC6  083E               	movf	___ftdiv@f3,w
  5867  0CC7  00A8               	movwf	?___ftpack
  5868  0CC8  083F               	movf	___ftdiv@f3+1,w
  5869  0CC9  00A9               	movwf	?___ftpack+1
  5870  0CCA  0840               	movf	___ftdiv@f3+2,w
  5871  0CCB  00AA               	movwf	?___ftpack+2
  5872  0CCC  0841               	movf	___ftdiv@exp,w
  5873  0CCD  00AB               	movwf	?___ftpack+3
  5874  0CCE  0842               	movf	___ftdiv@sign,w
  5875  0CCF  00AC               	movwf	?___ftpack+4
  5876  0CD0  2769               	fcall	___ftpack
  5877  0CD1  0828               	movf	?___ftpack,w
  5878  0CD2  00B4               	movwf	?___ftdiv
  5879  0CD3  0829               	movf	?___ftpack+1,w
  5880  0CD4  00B5               	movwf	?___ftdiv+1
  5881  0CD5  082A               	movf	?___ftpack+2,w
  5882  0CD6  00B6               	movwf	?___ftdiv+2
  5883  0CD7  0008               	return
  5884  0CD8                     __end_of___ftdiv:	
  5885  0CD8                     __ptext558:	
  5886 ;; =============== function ___ftsub ends ============
  5887                           
  5888                           
  5889 ;; *************** function _scale *****************
  5890 ;; Defined at:
  5891 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5892 ;; Parameters:    Size  Location     Type
  5893 ;;  scl             1    wreg     char 
  5894 ;; Auto vars:     Size  Location     Type
  5895 ;;  scl             1   60[BANK0 ] char 
  5896 ;; Return value:  Size  Location     Type
  5897 ;;                  3   50[BANK0 ] char 
  5898 ;; Registers used:
  5899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5900 ;; Tracked objects:
  5901 ;;		On entry : 60/20
  5902 ;;		On exit  : 60/0
  5903 ;;		Unchanged: FFF9F/0
  5904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5905 ;;      Params:         0       3       0       0       0
  5906 ;;      Locals:         0       4       0       0       0
  5907 ;;      Temps:          0       4       0       0       0
  5908 ;;      Totals:         0      11       0       0       0
  5909 ;;Total ram usage:       11 bytes
  5910 ;; Hardware stack levels used:    1
  5911 ;; Hardware stack levels required when called:    5
  5912 ;; This function calls:
  5913 ;;		___awmod
  5914 ;;		___awdiv
  5915 ;;		___ftmul
  5916 ;;		___bmul
  5917 ;; This function is called by:
  5918 ;;		_printf
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921  0CD8                     _scale:	
  5922                           
  5923                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5924                           ;scale@scl stored from wreg
  5925  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  5926  0CD9  00DC               	movwf	scale@scl
  5927  0CDA  1FDC               	btfss	scale@scl,7
  5928  0CDB  2DA4               	goto	l7354
  5929  0CDC  09DC               	comf	scale@scl,f
  5930  0CDD  0ADC               	incf	scale@scl,f
  5931  0CDE  085C               	movf	scale@scl,w
  5932  0CDF  3A80               	xorlw	128
  5933  0CE0  3E12               	addlw	-238
  5934  0CE1  1C03               	skipc
  5935  0CE2  2D48               	goto	l7344
  5936  0CE3  300A               	movlw	10
  5937  0CE4  27CB  120A  158A   	fcall	PL16	;call to abstracted procedure
  5938  0CE7  26AF  120A  158A   	fcall	___awmod
  5939  0CEA  0829               	movf	?___awmod+1,w
  5940  0CEB  00B1               	movwf	?___awdiv+3
  5941  0CEC  0828               	movf	?___awmod,w
  5942  0CED  00B0               	movwf	?___awdiv+2
  5943  0CEE  266A  120A  158A   	fcall	___awdiv
  5944  0CF1  27F0               	fcall	PL24	;call to abstracted procedure
  5945  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5946  0CF3  0084               	movwf	4
  5947  0CF4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5948  0CF9  00C3               	movwf	?___ftmul
  5949  0CFA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5950  0CFF  00C4               	movwf	?___ftmul+1
  5951  0D00  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5952  0D05  27F8  120A  158A   	fcall	PL25	;call to abstracted procedure
  5953  0D08  1BB0               	btfsc	?___awdiv+2,7
  5954  0D09  03B1               	decf	?___awdiv+3,f
  5955  0D0A  266A  120A  158A   	fcall	___awdiv
  5956  0D0D  27C3               	fcall	PL13	;call to abstracted procedure
  5957  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5958  0D0F  0084               	movwf	4
  5959  0D10  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5960  0D15  00C6               	movwf	?___ftmul+3
  5961  0D16  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5962  0D1B  00C7               	movwf	?___ftmul+4
  5963  0D1C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5964  0D21  00C8               	movwf	?___ftmul+5
  5965  0D22  26EC  120A  158A   	fcall	___ftmul
  5966  0D25  27AE  120A  158A   	fcall	PL11	;call to abstracted procedure
  5967  0D28  1BAA               	btfsc	?___awmod+2,7
  5968  0D29  03AB               	decf	?___awmod+3,f
  5969  0D2A  26AF  120A  158A   	fcall	___awmod
  5970  0D2D  27BB               	fcall	PL12	;call to abstracted procedure
  5971  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  5972  0D2F  0084               	movwf	4
  5973  0D30  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5974  0D35  00C3               	movwf	?___ftmul
  5975  0D36  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5976  0D3B  00C4               	movwf	?___ftmul+1
  5977  0D3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5978  0D41  27E0  120A  158A   	fcall	PL20	;call to abstracted procedure
  5979  0D44  26EC  120A  158A   	fcall	___ftmul
  5980  0D47  2FA7               	ljmp	PL10	;call to abstracted procedure
  5981  0D48                     l7344:	
  5982  0D48  085C               	movf	scale@scl,w
  5983  0D49  3A80               	xorlw	128
  5984  0D4A  3E75               	addlw	-139
  5985  0D4B  1C03               	skipc
  5986  0D4C  2D8D               	goto	l7350
  5987  0D4D  300A               	movlw	10
  5988  0D4E  00A8               	movwf	?___awmod
  5989  0D4F  01A9               	clrf	?___awmod+1
  5990  0D50  085C               	movf	scale@scl,w
  5991  0D51  00AA               	movwf	?___awmod+2
  5992  0D52  01AB               	clrf	?___awmod+3
  5993  0D53  1BAA               	btfsc	?___awmod+2,7
  5994  0D54  03AB               	decf	?___awmod+3,f
  5995  0D55  26AF  120A  158A   	fcall	___awmod
  5996  0D58  27BB               	fcall	PL12	;call to abstracted procedure
  5997  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  5998  0D5A  0084               	movwf	4
  5999  0D5B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6000  0D60  00C3               	movwf	?___ftmul
  6001  0D61  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6002  0D66  00C4               	movwf	?___ftmul+1
  6003  0D67  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6004  0D6C  27E8  120A  158A   	fcall	PL22	;call to abstracted procedure
  6005  0D6F  1BB0               	btfsc	?___awdiv+2,7
  6006  0D70  03B1               	decf	?___awdiv+3,f
  6007  0D71  266A  120A  158A   	fcall	___awdiv
  6008  0D74  27C3               	fcall	PL13	;call to abstracted procedure
  6009  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6010  0D76  0084               	movwf	4
  6011  0D77  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6012  0D7C  00C6               	movwf	?___ftmul+3
  6013  0D7D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6014  0D82  00C7               	movwf	?___ftmul+4
  6015  0D83  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6016  0D88  00C8               	movwf	?___ftmul+5
  6017  0D89  26EC  120A  158A   	fcall	___ftmul
  6018  0D8C  2FA7               	ljmp	PL10	;call to abstracted procedure
  6019  0D8D                     l7350:	
  6020  0D8D  3003               	movlw	3
  6021  0D8E  00B1               	movwf	?___bmul
  6022  0D8F  085C               	movf	scale@scl,w
  6023  0D90  275B               	fcall	___bmul
  6024  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  6025  0D92  0084               	movwf	4
  6026  0D93  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6027  0D98  00D2               	movwf	?_scale
  6028  0D99  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6029  0D9E  00D3               	movwf	?_scale+1
  6030  0D9F  160A  118A  2000   	fcall	stringdir
  6031  0DA2  00D4               	movwf	?_scale+2
  6032  0DA3  0008               	return
  6033  0DA4                     l7354:	
  6034  0DA4  085C               	movf	scale@scl,w
  6035  0DA5  3A80               	xorlw	128
  6036  0DA6  3E12               	addlw	-238
  6037  0DA7  1C03               	skipc
  6038  0DA8  2E0E               	goto	l7362
  6039  0DA9  300A               	movlw	10
  6040  0DAA  27CB  120A  158A   	fcall	PL16	;call to abstracted procedure
  6041  0DAD  26AF  120A  158A   	fcall	___awmod
  6042  0DB0  0829               	movf	?___awmod+1,w
  6043  0DB1  00B1               	movwf	?___awdiv+3
  6044  0DB2  0828               	movf	?___awmod,w
  6045  0DB3  00B0               	movwf	?___awdiv+2
  6046  0DB4  266A  120A  158A   	fcall	___awdiv
  6047  0DB7  27F0               	fcall	PL24	;call to abstracted procedure
  6048  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  6049  0DB9  0084               	movwf	4
  6050  0DBA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6051  0DBF  00C3               	movwf	?___ftmul
  6052  0DC0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6053  0DC5  00C4               	movwf	?___ftmul+1
  6054  0DC6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6055  0DCB  27F8  120A  158A   	fcall	PL25	;call to abstracted procedure
  6056  0DCE  1BB0               	btfsc	?___awdiv+2,7
  6057  0DCF  03B1               	decf	?___awdiv+3,f
  6058  0DD0  266A  120A  158A   	fcall	___awdiv
  6059  0DD3  27C3               	fcall	PL13	;call to abstracted procedure
  6060  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6061  0DD5  0084               	movwf	4
  6062  0DD6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6063  0DDB  00C6               	movwf	?___ftmul+3
  6064  0DDC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6065  0DE1  00C7               	movwf	?___ftmul+4
  6066  0DE2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6067  0DE7  00C8               	movwf	?___ftmul+5
  6068  0DE8  26EC  120A  158A   	fcall	___ftmul
  6069  0DEB  27AE  120A  158A   	fcall	PL11	;call to abstracted procedure
  6070  0DEE  1BAA               	btfsc	?___awmod+2,7
  6071  0DEF  03AB               	decf	?___awmod+3,f
  6072  0DF0  26AF  120A  158A   	fcall	___awmod
  6073  0DF3  27BB               	fcall	PL12	;call to abstracted procedure
  6074  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  6075  0DF5  0084               	movwf	4
  6076  0DF6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6077  0DFB  00C3               	movwf	?___ftmul
  6078  0DFC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6079  0E01  00C4               	movwf	?___ftmul+1
  6080  0E02  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6081  0E07  27E0  120A  158A   	fcall	PL20	;call to abstracted procedure
  6082  0E0A  26EC  120A  158A   	fcall	___ftmul
  6083  0E0D  2FA7               	ljmp	PL10	;call to abstracted procedure
  6084  0E0E                     l7362:	
  6085  0E0E  085C               	movf	scale@scl,w
  6086  0E0F  3A80               	xorlw	128
  6087  0E10  3E75               	addlw	-139
  6088  0E11  1C03               	skipc
  6089  0E12  2E53               	goto	l7368
  6090  0E13  300A               	movlw	10
  6091  0E14  00A8               	movwf	?___awmod
  6092  0E15  01A9               	clrf	?___awmod+1
  6093  0E16  085C               	movf	scale@scl,w
  6094  0E17  00AA               	movwf	?___awmod+2
  6095  0E18  01AB               	clrf	?___awmod+3
  6096  0E19  1BAA               	btfsc	?___awmod+2,7
  6097  0E1A  03AB               	decf	?___awmod+3,f
  6098  0E1B  26AF  120A  158A   	fcall	___awmod
  6099  0E1E  27BB               	fcall	PL12	;call to abstracted procedure
  6100  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  6101  0E20  0084               	movwf	4
  6102  0E21  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6103  0E26  00C3               	movwf	?___ftmul
  6104  0E27  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6105  0E2C  00C4               	movwf	?___ftmul+1
  6106  0E2D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6107  0E32  27E8  120A  158A   	fcall	PL22	;call to abstracted procedure
  6108  0E35  1BB0               	btfsc	?___awdiv+2,7
  6109  0E36  03B1               	decf	?___awdiv+3,f
  6110  0E37  266A  120A  158A   	fcall	___awdiv
  6111  0E3A  27C3               	fcall	PL13	;call to abstracted procedure
  6112  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  6113  0E3C  0084               	movwf	4
  6114  0E3D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6115  0E42  00C6               	movwf	?___ftmul+3
  6116  0E43  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6117  0E48  00C7               	movwf	?___ftmul+4
  6118  0E49  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6119  0E4E  00C8               	movwf	?___ftmul+5
  6120  0E4F  26EC  120A  158A   	fcall	___ftmul
  6121  0E52  2FA7               	ljmp	PL10	;call to abstracted procedure
  6122  0E53                     l7368:	
  6123  0E53  3003               	movlw	3
  6124  0E54  00B1               	movwf	?___bmul
  6125  0E55  085C               	movf	scale@scl,w
  6126  0E56  275B               	fcall	___bmul
  6127  0E57  3E28               	addlw	low (__powers_-__stringbase)
  6128  0E58  0084               	movwf	4
  6129  0E59  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6130  0E5E  00D2               	movwf	?_scale
  6131  0E5F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6132  0E64  00D3               	movwf	?_scale+1
  6133  0E65  160A  118A  2000   	fcall	stringdir
  6134  0E68  00D4               	movwf	?_scale+2
  6135  0E69  0008               	return
  6136  0E6A                     __end_of_scale:	
  6137  0E6A                     __ptext575:	
  6138 ;; =============== function ___llmod ends ============
  6139                           
  6140                           
  6141 ;; *************** function ___awdiv *****************
  6142 ;; Defined at:
  6143 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  divisor         2   14[BANK0 ] int 
  6146 ;;  dividend        2   16[BANK0 ] int 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  quotient        2   20[BANK0 ] int 
  6149 ;;  sign            1   19[BANK0 ] unsigned char 
  6150 ;;  counter         1   18[BANK0 ] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  2   14[BANK0 ] int 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0
  6155 ;; Tracked objects:
  6156 ;;		On entry : 60/0
  6157 ;;		On exit  : 60/0
  6158 ;;		Unchanged: FFF9F/0
  6159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6160 ;;      Params:         0       4       0       0       0
  6161 ;;      Locals:         0       4       0       0       0
  6162 ;;      Temps:          0       0       0       0       0
  6163 ;;      Totals:         0       8       0       0       0
  6164 ;;Total ram usage:        8 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; Hardware stack levels required when called:    3
  6167 ;; This function calls:
  6168 ;;		Nothing
  6169 ;; This function is called by:
  6170 ;;		_scale
  6171 ;;		_printf
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174  0E6A                     ___awdiv:	
  6175                           
  6176                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6177  0E6A  01B3               	clrf	___awdiv@sign
  6178  0E6B  1FAF               	btfss	___awdiv@divisor+1,7
  6179  0E6C  2E74               	goto	l6754
  6180  0E6D  09AE               	comf	___awdiv@divisor,f
  6181  0E6E  09AF               	comf	___awdiv@divisor+1,f
  6182  0E6F  0AAE               	incf	___awdiv@divisor,f
  6183  0E70  1903               	skipnz
  6184  0E71  0AAF               	incf	___awdiv@divisor+1,f
  6185  0E72  01B3               	clrf	___awdiv@sign
  6186  0E73  0AB3               	incf	___awdiv@sign,f
  6187  0E74                     l6754:	
  6188  0E74  1FB1               	btfss	___awdiv@dividend+1,7
  6189  0E75  2E7D               	goto	l6760
  6190  0E76  09B0               	comf	___awdiv@dividend,f
  6191  0E77  09B1               	comf	___awdiv@dividend+1,f
  6192  0E78  0AB0               	incf	___awdiv@dividend,f
  6193  0E79  1903               	skipnz
  6194  0E7A  0AB1               	incf	___awdiv@dividend+1,f
  6195  0E7B  3001               	movlw	1
  6196  0E7C  06B3               	xorwf	___awdiv@sign,f
  6197  0E7D                     l6760:	
  6198  0E7D  01B4               	clrf	___awdiv@quotient
  6199  0E7E  01B5               	clrf	___awdiv@quotient+1
  6200  0E7F  082F               	movf	___awdiv@divisor+1,w
  6201  0E80  042E               	iorwf	___awdiv@divisor,w
  6202  0E81  1903               	skipnz
  6203  0E82  2EA2               	goto	l6782
  6204  0E83  01B2               	clrf	___awdiv@counter
  6205  0E84                     L16:	
  6206  0E84  0AB2               	incf	___awdiv@counter,f
  6207  0E85  1BAF               	btfsc	___awdiv@divisor+1,7
  6208  0E86  2E8B               	goto	l6770
  6209  0E87  1003               	clrc
  6210  0E88  0DAE               	rlf	___awdiv@divisor,f
  6211  0E89  0DAF               	rlf	___awdiv@divisor+1,f
  6212  0E8A  2E84               	goto	L16
  6213  0E8B                     l6770:	
  6214  0E8B  1003               	clrc
  6215  0E8C  0DB4               	rlf	___awdiv@quotient,f
  6216  0E8D  0DB5               	rlf	___awdiv@quotient+1,f
  6217  0E8E  082F               	movf	___awdiv@divisor+1,w
  6218  0E8F  0231               	subwf	___awdiv@dividend+1,w
  6219  0E90  1D03               	skipz
  6220  0E91  2E94               	goto	u3075
  6221  0E92  082E               	movf	___awdiv@divisor,w
  6222  0E93  0230               	subwf	___awdiv@dividend,w
  6223  0E94                     u3075:	
  6224  0E94  1C03               	skipc
  6225  0E95  2E9E               	goto	L17
  6226  0E96  082E               	movf	___awdiv@divisor,w
  6227  0E97  02B0               	subwf	___awdiv@dividend,f
  6228  0E98  082F               	movf	___awdiv@divisor+1,w
  6229  0E99  1C03               	skipc
  6230  0E9A  03B1               	decf	___awdiv@dividend+1,f
  6231  0E9B  02B1               	subwf	___awdiv@dividend+1,f
  6232  0E9C  1434               	bsf	___awdiv@quotient,0
  6233  0E9D  1003               	clrc
  6234  0E9E                     L17:	
  6235  0E9E  0CAF               	rrf	___awdiv@divisor+1,f
  6236  0E9F  0CAE               	rrf	___awdiv@divisor,f
  6237  0EA0  0BB2               	decfsz	___awdiv@counter,f
  6238  0EA1  2E8B               	goto	l6770
  6239  0EA2                     l6782:	
  6240  0EA2  0833               	movf	___awdiv@sign,w
  6241  0EA3  1903               	btfsc	3,2
  6242  0EA4  2EAA               	goto	l6786
  6243  0EA5  09B4               	comf	___awdiv@quotient,f
  6244  0EA6  09B5               	comf	___awdiv@quotient+1,f
  6245  0EA7  0AB4               	incf	___awdiv@quotient,f
  6246  0EA8  1903               	skipnz
  6247  0EA9  0AB5               	incf	___awdiv@quotient+1,f
  6248  0EAA                     l6786:	
  6249  0EAA  0835               	movf	___awdiv@quotient+1,w
  6250  0EAB  00AF               	movwf	?___awdiv+1
  6251  0EAC  0834               	movf	___awdiv@quotient,w
  6252  0EAD  00AE               	movwf	?___awdiv
  6253  0EAE  0008               	return
  6254  0EAF                     __end_of___awdiv:	
  6255  0EAF                     __ptext570:	
  6256 ;; =============== function _lcd_put_byte ends ============
  6257                           
  6258                           
  6259 ;; *************** function ___awmod *****************
  6260 ;; Defined at:
  6261 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  divisor         2    8[BANK0 ] int 
  6264 ;;  dividend        2   10[BANK0 ] int 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  sign            1   13[BANK0 ] unsigned char 
  6267 ;;  counter         1   12[BANK0 ] unsigned char 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  2    8[BANK0 ] int 
  6270 ;; Registers used:
  6271 ;;		wreg, status,2, status,0
  6272 ;; Tracked objects:
  6273 ;;		On entry : 60/0
  6274 ;;		On exit  : 60/0
  6275 ;;		Unchanged: FFF9F/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6277 ;;      Params:         0       4       0       0       0
  6278 ;;      Locals:         0       2       0       0       0
  6279 ;;      Temps:          0       0       0       0       0
  6280 ;;      Totals:         0       6       0       0       0
  6281 ;;Total ram usage:        6 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    3
  6284 ;; This function calls:
  6285 ;;		Nothing
  6286 ;; This function is called by:
  6287 ;;		_scale
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290  0EAF                     ___awmod:	
  6291                           
  6292                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6293  0EAF  01AD               	clrf	___awmod@sign
  6294  0EB0  1FAB               	btfss	___awmod@dividend+1,7
  6295  0EB1  2EB9               	goto	l6872
  6296  0EB2  09AA               	comf	___awmod@dividend,f
  6297  0EB3  09AB               	comf	___awmod@dividend+1,f
  6298  0EB4  0AAA               	incf	___awmod@dividend,f
  6299  0EB5  1903               	skipnz
  6300  0EB6  0AAB               	incf	___awmod@dividend+1,f
  6301  0EB7  01AD               	clrf	___awmod@sign
  6302  0EB8  0AAD               	incf	___awmod@sign,f
  6303  0EB9                     l6872:	
  6304  0EB9  1FA9               	btfss	___awmod@divisor+1,7
  6305  0EBA  2EC0               	goto	l6876
  6306  0EBB  09A8               	comf	___awmod@divisor,f
  6307  0EBC  09A9               	comf	___awmod@divisor+1,f
  6308  0EBD  0AA8               	incf	___awmod@divisor,f
  6309  0EBE  1903               	skipnz
  6310  0EBF  0AA9               	incf	___awmod@divisor+1,f
  6311  0EC0                     l6876:	
  6312  0EC0  0829               	movf	___awmod@divisor+1,w
  6313  0EC1  0428               	iorwf	___awmod@divisor,w
  6314  0EC2  1903               	skipnz
  6315  0EC3  2EDF               	goto	l6892
  6316  0EC4  01AC               	clrf	___awmod@counter
  6317  0EC5                     L9:	
  6318  0EC5  0AAC               	incf	___awmod@counter,f
  6319  0EC6  1BA9               	btfsc	___awmod@divisor+1,7
  6320  0EC7  2ECC               	goto	l6884
  6321  0EC8  1003               	clrc
  6322  0EC9  0DA8               	rlf	___awmod@divisor,f
  6323  0ECA  0DA9               	rlf	___awmod@divisor+1,f
  6324  0ECB  2EC5               	goto	L9
  6325  0ECC                     l6884:	
  6326  0ECC  0829               	movf	___awmod@divisor+1,w
  6327  0ECD  022B               	subwf	___awmod@dividend+1,w
  6328  0ECE  1D03               	skipz
  6329  0ECF  2ED2               	goto	u3265
  6330  0ED0  0828               	movf	___awmod@divisor,w
  6331  0ED1  022A               	subwf	___awmod@dividend,w
  6332  0ED2                     u3265:	
  6333  0ED2  1C03               	skipc
  6334  0ED3  2EDB               	goto	L10
  6335  0ED4  0828               	movf	___awmod@divisor,w
  6336  0ED5  02AA               	subwf	___awmod@dividend,f
  6337  0ED6  0829               	movf	___awmod@divisor+1,w
  6338  0ED7  1C03               	skipc
  6339  0ED8  03AB               	decf	___awmod@dividend+1,f
  6340  0ED9  02AB               	subwf	___awmod@dividend+1,f
  6341  0EDA  1003               	clrc
  6342  0EDB                     L10:	
  6343  0EDB  0CA9               	rrf	___awmod@divisor+1,f
  6344  0EDC  0CA8               	rrf	___awmod@divisor,f
  6345  0EDD  0BAC               	decfsz	___awmod@counter,f
  6346  0EDE  2ECC               	goto	l6884
  6347  0EDF                     l6892:	
  6348  0EDF  082D               	movf	___awmod@sign,w
  6349  0EE0  1903               	btfsc	3,2
  6350  0EE1  2EE7               	goto	l6896
  6351  0EE2  09AA               	comf	___awmod@dividend,f
  6352  0EE3  09AB               	comf	___awmod@dividend+1,f
  6353  0EE4  0AAA               	incf	___awmod@dividend,f
  6354  0EE5  1903               	skipnz
  6355  0EE6  0AAB               	incf	___awmod@dividend+1,f
  6356  0EE7                     l6896:	
  6357  0EE7  082B               	movf	___awmod@dividend+1,w
  6358  0EE8  00A9               	movwf	?___awmod+1
  6359  0EE9  082A               	movf	___awmod@dividend,w
  6360  0EEA  00A8               	movwf	?___awmod
  6361  0EEB  0008               	return
  6362  0EEC                     __end_of___awmod:	
  6363  0EEC                     __ptext565:	
  6364 ;; =============== function ___lbtoft ends ============
  6365                           
  6366                           
  6367 ;; *************** function ___ftmul *****************
  6368 ;; Defined at:
  6369 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  f1              3   35[BANK0 ] float 
  6372 ;;  f2              3   38[BANK0 ] float 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  f3_as_produc    3   45[BANK0 ] unsigned um
  6375 ;;  sign            1   49[BANK0 ] unsigned char 
  6376 ;;  cntr            1   48[BANK0 ] unsigned char 
  6377 ;;  exp             1   44[BANK0 ] unsigned char 
  6378 ;; Return value:  Size  Location     Type
  6379 ;;                  3   35[BANK0 ] float 
  6380 ;; Registers used:
  6381 ;;		wreg, status,2, status,0, pclath, cstack
  6382 ;; Tracked objects:
  6383 ;;		On entry : 60/0
  6384 ;;		On exit  : 60/0
  6385 ;;		Unchanged: FFF9F/0
  6386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6387 ;;      Params:         0       6       0       0       0
  6388 ;;      Locals:         0       6       0       0       0
  6389 ;;      Temps:          0       3       0       0       0
  6390 ;;      Totals:         0      15       0       0       0
  6391 ;;Total ram usage:       15 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    4
  6394 ;; This function calls:
  6395 ;;		___ftpack
  6396 ;; This function is called by:
  6397 ;;		_main
  6398 ;;		_fround
  6399 ;;		_scale
  6400 ;;		_printf
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403  0EEC                     ___ftmul:	
  6404                           
  6405                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6406  0EEC  0843               	movf	___ftmul@f1,w
  6407  0EED  00C9               	movwf	??___ftmul
  6408  0EEE  0844               	movf	___ftmul@f1+1,w
  6409  0EEF  00CA               	movwf	??___ftmul+1
  6410  0EF0  0845               	movf	___ftmul@f1+2,w
  6411  0EF1  00CB               	movwf	??___ftmul+2
  6412  0EF2  1003               	clrc
  6413  0EF3  0D4A               	rlf	??___ftmul+1,w
  6414  0EF4  0D4B               	rlf	??___ftmul+2,w
  6415  0EF5  00CC               	movwf	___ftmul@exp
  6416  0EF6  08CC               	movf	___ftmul@exp,f
  6417  0EF7  1D03               	skipz
  6418  0EF8  2EFD               	goto	l7184
  6419  0EF9  01C3               	clrf	?___ftmul
  6420  0EFA  01C4               	clrf	?___ftmul+1
  6421  0EFB  01C5               	clrf	?___ftmul+2
  6422  0EFC  0008               	return
  6423  0EFD                     l7184:	
  6424  0EFD  0846               	movf	___ftmul@f2,w
  6425  0EFE  00C9               	movwf	??___ftmul
  6426  0EFF  0847               	movf	___ftmul@f2+1,w
  6427  0F00  00CA               	movwf	??___ftmul+1
  6428  0F01  0848               	movf	___ftmul@f2+2,w
  6429  0F02  00CB               	movwf	??___ftmul+2
  6430  0F03  1003               	clrc
  6431  0F04  0D4A               	rlf	??___ftmul+1,w
  6432  0F05  0D4B               	rlf	??___ftmul+2,w
  6433  0F06  00D1               	movwf	___ftmul@sign
  6434  0F07  08D1               	movf	___ftmul@sign,f
  6435  0F08  1D03               	skipz
  6436  0F09  2F0E               	goto	l7190
  6437  0F0A  01C3               	clrf	?___ftmul
  6438  0F0B  01C4               	clrf	?___ftmul+1
  6439  0F0C  01C5               	clrf	?___ftmul+2
  6440  0F0D  0008               	return
  6441  0F0E                     l7190:	
  6442  0F0E  0851               	movf	___ftmul@sign,w
  6443  0F0F  3E7B               	addlw	123
  6444  0F10  07CC               	addwf	___ftmul@exp,f
  6445  0F11  0845               	movf	___ftmul@f1+2,w
  6446  0F12  00D1               	movwf	___ftmul@sign
  6447  0F13  0848               	movf	___ftmul@f2+2,w
  6448  0F14  06D1               	xorwf	___ftmul@sign,f
  6449  0F15  3080               	movlw	128
  6450  0F16  05D1               	andwf	___ftmul@sign,f
  6451  0F17  3007               	movlw	7
  6452  0F18  17C4               	bsf	___ftmul@f1+1,7
  6453  0F19  17C7               	bsf	___ftmul@f2+1,7
  6454  0F1A  01C8               	clrf	___ftmul@f2+2
  6455  0F1B  01CD               	clrf	___ftmul@f3_as_product
  6456  0F1C  01CE               	clrf	___ftmul@f3_as_product+1
  6457  0F1D  01CF               	clrf	___ftmul@f3_as_product+2
  6458  0F1E  00D0               	movwf	___ftmul@cntr
  6459  0F1F                     l7208:	
  6460  0F1F  1C43               	btfss	___ftmul@f1,0
  6461  0F20  2F29               	goto	l7212
  6462  0F21  0846               	movf	___ftmul@f2,w
  6463  0F22  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6464  0F25  1803               	skipnc
  6465  0F26  0A48               	incf	___ftmul@f2+2,w
  6466  0F27  1D03               	btfss	3,2
  6467  0F28  07CF               	addwf	___ftmul@f3_as_product+2,f
  6468  0F29                     l7212:	
  6469  0F29  1003               	clrc
  6470  0F2A  0CC5               	rrf	___ftmul@f1+2,f
  6471  0F2B  0CC4               	rrf	___ftmul@f1+1,f
  6472  0F2C  0CC3               	rrf	___ftmul@f1,f
  6473  0F2D  1003               	clrc
  6474  0F2E  0DC6               	rlf	___ftmul@f2,f
  6475  0F2F  0DC7               	rlf	___ftmul@f2+1,f
  6476  0F30  0DC8               	rlf	___ftmul@f2+2,f
  6477  0F31  0BD0               	decfsz	___ftmul@cntr,f
  6478  0F32  2F1F               	goto	l7208
  6479  0F33  3009               	movlw	9
  6480  0F34  00D0               	movwf	___ftmul@cntr
  6481  0F35                     l7220:	
  6482  0F35  1C43               	btfss	___ftmul@f1,0
  6483  0F36  2F3F               	goto	l7224
  6484  0F37  0846               	movf	___ftmul@f2,w
  6485  0F38  27D6  120A  158A   	fcall	PL18	;call to abstracted procedure
  6486  0F3B  1803               	skipnc
  6487  0F3C  0A48               	incf	___ftmul@f2+2,w
  6488  0F3D  1D03               	btfss	3,2
  6489  0F3E  07CF               	addwf	___ftmul@f3_as_product+2,f
  6490  0F3F                     l7224:	
  6491  0F3F  1003               	clrc
  6492  0F40  0CC5               	rrf	___ftmul@f1+2,f
  6493  0F41  0CC4               	rrf	___ftmul@f1+1,f
  6494  0F42  0CC3               	rrf	___ftmul@f1,f
  6495  0F43  1003               	clrc
  6496  0F44  0CCF               	rrf	___ftmul@f3_as_product+2,f
  6497  0F45  0CCE               	rrf	___ftmul@f3_as_product+1,f
  6498  0F46  0CCD               	rrf	___ftmul@f3_as_product,f
  6499  0F47  0BD0               	decfsz	___ftmul@cntr,f
  6500  0F48  2F35               	goto	l7220
  6501  0F49  084D               	movf	___ftmul@f3_as_product,w
  6502  0F4A  00A8               	movwf	?___ftpack
  6503  0F4B  084E               	movf	___ftmul@f3_as_product+1,w
  6504  0F4C  00A9               	movwf	?___ftpack+1
  6505  0F4D  084F               	movf	___ftmul@f3_as_product+2,w
  6506  0F4E  00AA               	movwf	?___ftpack+2
  6507  0F4F  084C               	movf	___ftmul@exp,w
  6508  0F50  00AB               	movwf	?___ftpack+3
  6509  0F51  0851               	movf	___ftmul@sign,w
  6510  0F52  00AC               	movwf	?___ftpack+4
  6511  0F53  2769               	fcall	___ftpack
  6512  0F54  0828               	movf	?___ftpack,w
  6513  0F55  00C3               	movwf	?___ftmul
  6514  0F56  0829               	movf	?___ftpack+1,w
  6515  0F57  00C4               	movwf	?___ftmul+1
  6516  0F58  082A               	movf	?___ftpack+2,w
  6517  0F59  00C5               	movwf	?___ftmul+2
  6518  0F5A  0008               	return
  6519  0F5B                     __end_of___ftmul:	
  6520  0F5B                     __ptext581:	
  6521 ;; =============== function ___wmul ends ============
  6522                           
  6523                           
  6524 ;; *************** function ___bmul *****************
  6525 ;; Defined at:
  6526 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  multiplier      1    wreg     unsigned char 
  6529 ;;  multiplicand    1   17[BANK0 ] unsigned char 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  multiplier      1   19[BANK0 ] unsigned char 
  6532 ;;  product         1   18[BANK0 ] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  1    wreg      unsigned char 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0
  6537 ;; Tracked objects:
  6538 ;;		On entry : 60/0
  6539 ;;		On exit  : 60/0
  6540 ;;		Unchanged: FFF9F/0
  6541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6542 ;;      Params:         0       1       0       0       0
  6543 ;;      Locals:         0       2       0       0       0
  6544 ;;      Temps:          0       0       0       0       0
  6545 ;;      Totals:         0       3       0       0       0
  6546 ;;Total ram usage:        3 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; Hardware stack levels required when called:    3
  6549 ;; This function calls:
  6550 ;;		Nothing
  6551 ;; This function is called by:
  6552 ;;		_fround
  6553 ;;		_scale
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556  0F5B                     ___bmul:	
  6557                           
  6558                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6559                           ;___bmul@multiplier stored from wreg
  6560  0F5B  00B3               	movwf	___bmul@multiplier
  6561  0F5C  01B2               	clrf	___bmul@product
  6562  0F5D                     l6608:	
  6563  0F5D  0831               	movf	___bmul@multiplicand,w
  6564  0F5E  1833               	btfsc	___bmul@multiplier,0
  6565  0F5F  07B2               	addwf	___bmul@product,f
  6566  0F60  1003               	clrc
  6567  0F61  0DB1               	rlf	___bmul@multiplicand,f
  6568  0F62  1003               	clrc
  6569  0F63  0CB3               	rrf	___bmul@multiplier,f
  6570  0F64  08B3               	movf	___bmul@multiplier,f
  6571  0F65  1D03               	skipz
  6572  0F66  2F5D               	goto	l6608
  6573  0F67  0832               	movf	___bmul@product,w
  6574  0F68  0008               	return
  6575  0F69                     __end_of___bmul:	
  6576  0F69                     __ptext577:	
  6577 ;; =============== function ___fttol ends ============
  6578                           
  6579                           
  6580 ;; *************** function ___ftpack *****************
  6581 ;; Defined at:
  6582 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  arg             3    8[BANK0 ] unsigned um
  6585 ;;  exp             1   11[BANK0 ] unsigned char 
  6586 ;;  sign            1   12[BANK0 ] unsigned char 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;		None
  6589 ;; Return value:  Size  Location     Type
  6590 ;;                  3    8[BANK0 ] float 
  6591 ;; Registers used:
  6592 ;;		wreg, status,2, status,0
  6593 ;; Tracked objects:
  6594 ;;		On entry : 60/0
  6595 ;;		On exit  : 60/0
  6596 ;;		Unchanged: FFF9F/0
  6597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6598 ;;      Params:         0       5       0       0       0
  6599 ;;      Locals:         0       0       0       0       0
  6600 ;;      Temps:          0       3       0       0       0
  6601 ;;      Totals:         0       8       0       0       0
  6602 ;;Total ram usage:        8 bytes
  6603 ;; Hardware stack levels used:    1
  6604 ;; Hardware stack levels required when called:    3
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		___ftadd
  6609 ;;		___ftdiv
  6610 ;;		___ftmul
  6611 ;;		___lbtoft
  6612 ;;		___awtoft
  6613 ;;		___lltoft
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616  0F69                     ___ftpack:	
  6617                           
  6618                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6619  0F69  082B               	movf	___ftpack@exp,w
  6620  0F6A  1903               	btfsc	3,2
  6621  0F6B  2F71               	goto	l6684
  6622  0F6C  082A               	movf	___ftpack@arg+2,w
  6623  0F6D  0429               	iorwf	___ftpack@arg+1,w
  6624  0F6E  0428               	iorwf	___ftpack@arg,w
  6625  0F6F  1D03               	skipz
  6626  0F70  2F7A               	goto	l6690
  6627  0F71                     l6684:	
  6628  0F71  01A8               	clrf	?___ftpack
  6629  0F72  01A9               	clrf	?___ftpack+1
  6630  0F73  01AA               	clrf	?___ftpack+2
  6631  0F74  0008               	return
  6632  0F75                     l6688:	
  6633  0F75  0AAB               	incf	___ftpack@exp,f
  6634  0F76  1003               	clrc
  6635  0F77  0CAA               	rrf	___ftpack@arg+2,f
  6636  0F78  0CA9               	rrf	___ftpack@arg+1,f
  6637  0F79  0CA8               	rrf	___ftpack@arg,f
  6638  0F7A                     l6690:	
  6639  0F7A  30FE               	movlw	254
  6640  0F7B  052A               	andwf	___ftpack@arg+2,w
  6641  0F7C  1903               	btfsc	3,2
  6642  0F7D  2F89               	goto	l6694
  6643  0F7E  2F75               	goto	l6688
  6644  0F7F                     l6692:	
  6645  0F7F  0AAB               	incf	___ftpack@exp,f
  6646  0F80  0AA8               	incf	___ftpack@arg,f
  6647  0F81  1903               	skipnz
  6648  0F82  0AA9               	incf	___ftpack@arg+1,f
  6649  0F83  1903               	skipnz
  6650  0F84  0AAA               	incf	___ftpack@arg+2,f
  6651  0F85  1003               	clrc
  6652  0F86  0CAA               	rrf	___ftpack@arg+2,f
  6653  0F87  0CA9               	rrf	___ftpack@arg+1,f
  6654  0F88  0CA8               	rrf	___ftpack@arg,f
  6655  0F89                     l6694:	
  6656  0F89  30FF               	movlw	255
  6657  0F8A  052A               	andwf	___ftpack@arg+2,w
  6658  0F8B  1903               	btfsc	3,2
  6659  0F8C  2F93               	goto	l6698
  6660  0F8D  2F7F               	goto	l6692
  6661  0F8E                     l6696:	
  6662  0F8E  03AB               	decf	___ftpack@exp,f
  6663  0F8F  1003               	clrc
  6664  0F90  0DA8               	rlf	___ftpack@arg,f
  6665  0F91  0DA9               	rlf	___ftpack@arg+1,f
  6666  0F92  0DAA               	rlf	___ftpack@arg+2,f
  6667  0F93                     l6698:	
  6668  0F93  1FA9               	btfss	___ftpack@arg+1,7
  6669  0F94  2F8E               	goto	l6696
  6670  0F95  1C2B               	btfss	___ftpack@exp,0
  6671  0F96  13A9               	bcf	___ftpack@arg+1,7
  6672  0F97  1003               	clrc
  6673  0F98  0CAB               	rrf	___ftpack@exp,f
  6674  0F99  082B               	movf	___ftpack@exp,w
  6675  0F9A  00AF               	movwf	??___ftpack+2
  6676  0F9B  01AE               	clrf	??___ftpack+1
  6677  0F9C  01AD               	clrf	??___ftpack
  6678  0F9D  082D               	movf	??___ftpack,w
  6679  0F9E  04A8               	iorwf	___ftpack@arg,f
  6680  0F9F  082E               	movf	??___ftpack+1,w
  6681  0FA0  04A9               	iorwf	___ftpack@arg+1,f
  6682  0FA1  082F               	movf	??___ftpack+2,w
  6683  0FA2  04AA               	iorwf	___ftpack@arg+2,f
  6684  0FA3  082C               	movf	___ftpack@sign,w
  6685  0FA4  1D03               	skipz
  6686  0FA5  17AA               	bsf	___ftpack@arg+2,7
  6687  0FA6  0008               	return
  6688  0FA7                     __end_of___ftpack:	
  6689  0FA7                     PL10:	
  6690  0FA7  0843               	movf	?___ftmul,w
  6691  0FA8  00D2               	movwf	?_scale
  6692  0FA9  0844               	movf	?___ftmul+1,w
  6693  0FAA  00D3               	movwf	?_scale+1
  6694  0FAB  0845               	movf	?___ftmul+2,w
  6695  0FAC  00D4               	movwf	?_scale+2
  6696  0FAD  0008               	return
  6697  0FAE                     PL11:	
  6698  0FAE  0843               	movf	?___ftmul,w
  6699  0FAF  00D9               	movwf	_scale$4120
  6700  0FB0  0844               	movf	?___ftmul+1,w
  6701  0FB1  00DA               	movwf	_scale$4120+1
  6702  0FB2  0845               	movf	?___ftmul+2,w
  6703  0FB3  00DB               	movwf	_scale$4120+2
  6704  0FB4  300A               	movlw	10
  6705  0FB5  00A8               	movwf	?___awmod
  6706  0FB6  01A9               	clrf	?___awmod+1
  6707  0FB7  085C               	movf	scale@scl,w
  6708  0FB8  00AA               	movwf	?___awmod+2
  6709  0FB9  01AB               	clrf	?___awmod+3
  6710  0FBA  0008               	return
  6711  0FBB                     PL12:	
  6712  0FBB  0828               	movf	?___awmod,w
  6713  0FBC  00D5               	movwf	??_scale
  6714  0FBD  0829               	movf	?___awmod+1,w
  6715  0FBE  00D6               	movwf	??_scale+1
  6716  0FBF  0855               	movf	??_scale,w
  6717  0FC0  0755               	addwf	??_scale,w
  6718  0FC1  0755               	addwf	??_scale,w
  6719  0FC2  0008               	return
  6720  0FC3                     PL13:	
  6721  0FC3  082E               	movf	?___awdiv,w
  6722  0FC4  00D7               	movwf	??_scale+2
  6723  0FC5  082F               	movf	?___awdiv+1,w
  6724  0FC6  00D8               	movwf	??_scale+3
  6725  0FC7  0857               	movf	??_scale+2,w
  6726  0FC8  0757               	addwf	??_scale+2,w
  6727  0FC9  0757               	addwf	??_scale+2,w
  6728  0FCA  0008               	return
  6729  0FCB                     PL16:	
  6730  0FCB  00AE               	movwf	?___awdiv
  6731  0FCC  01AF               	clrf	?___awdiv+1
  6732  0FCD  085C               	movf	scale@scl,w
  6733  0FCE  00AA               	movwf	?___awmod+2
  6734  0FCF  01AB               	clrf	?___awmod+3
  6735  0FD0  1BAA               	btfsc	?___awmod+2,7
  6736  0FD1  03AB               	decf	?___awmod+3,f
  6737  0FD2  3064               	movlw	100
  6738  0FD3  00A8               	movwf	?___awmod
  6739  0FD4  01A9               	clrf	?___awmod+1
  6740  0FD5  0008               	return
  6741  0FD6                     PL18:	
  6742  0FD6  07CD               	addwf	___ftmul@f3_as_product,f
  6743  0FD7  0847               	movf	___ftmul@f2+1,w
  6744  0FD8  1103               	clrz
  6745  0FD9  1803               	skipnc
  6746  0FDA  0A47               	incf	___ftmul@f2+1,w
  6747  0FDB  1D03               	btfss	3,2
  6748  0FDC  07CE               	addwf	___ftmul@f3_as_product+1,f
  6749  0FDD  0848               	movf	___ftmul@f2+2,w
  6750  0FDE  1103               	clrz
  6751  0FDF  0008               	return
  6752  0FE0                     PL20:	
  6753  0FE0  00C5               	movwf	?___ftmul+2
  6754  0FE1  0859               	movf	_scale$4120,w
  6755  0FE2  00C6               	movwf	?___ftmul+3
  6756  0FE3  085A               	movf	_scale$4120+1,w
  6757  0FE4  00C7               	movwf	?___ftmul+4
  6758  0FE5  085B               	movf	_scale$4120+2,w
  6759  0FE6  00C8               	movwf	?___ftmul+5
  6760  0FE7  0008               	return
  6761  0FE8                     PL22:	
  6762  0FE8  00C5               	movwf	?___ftmul+2
  6763  0FE9  300A               	movlw	10
  6764  0FEA  00AE               	movwf	?___awdiv
  6765  0FEB  01AF               	clrf	?___awdiv+1
  6766  0FEC  085C               	movf	scale@scl,w
  6767  0FED  00B0               	movwf	?___awdiv+2
  6768  0FEE  01B1               	clrf	?___awdiv+3
  6769  0FEF  0008               	return
  6770  0FF0                     PL24:	
  6771  0FF0  082E               	movf	?___awdiv,w
  6772  0FF1  00D5               	movwf	??_scale
  6773  0FF2  082F               	movf	?___awdiv+1,w
  6774  0FF3  00D6               	movwf	??_scale+1
  6775  0FF4  0855               	movf	??_scale,w
  6776  0FF5  0755               	addwf	??_scale,w
  6777  0FF6  0755               	addwf	??_scale,w
  6778  0FF7  0008               	return
  6779  0FF8                     PL25:	
  6780  0FF8  00C5               	movwf	?___ftmul+2
  6781  0FF9  3064               	movlw	100
  6782  0FFA  00AE               	movwf	?___awdiv
  6783  0FFB  01AF               	clrf	?___awdiv+1
  6784  0FFC  085C               	movf	scale@scl,w
  6785  0FFD  00B0               	movwf	?___awdiv+2
  6786  0FFE  01B1               	clrf	?___awdiv+3
  6787  0FFF  0008               	return
  6788                           
  6789                           	psect	text567
  6790  150D                     __ptext567:	
  6791 ;; =============== function ___ftdiv ends ============
  6792                           
  6793                           
  6794 ;; *************** function ___ftadd *****************
  6795 ;; Defined at:
  6796 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  6797 ;; Parameters:    Size  Location     Type
  6798 ;;  f1              3   50[BANK0 ] float 
  6799 ;;  f2              3   53[BANK0 ] float 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;  exp1            1   61[BANK0 ] unsigned char 
  6802 ;;  exp2            1   60[BANK0 ] unsigned char 
  6803 ;;  sign            1   59[BANK0 ] unsigned char 
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  3   50[BANK0 ] float 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0, pclath, cstack
  6808 ;; Tracked objects:
  6809 ;;		On entry : 60/0
  6810 ;;		On exit  : 60/0
  6811 ;;		Unchanged: FFF9F/0
  6812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6813 ;;      Params:         0       6       0       0       0
  6814 ;;      Locals:         0       3       0       0       0
  6815 ;;      Temps:          0       3       0       0       0
  6816 ;;      Totals:         0      12       0       0       0
  6817 ;;Total ram usage:       12 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; Hardware stack levels required when called:    4
  6820 ;; This function calls:
  6821 ;;		___ftpack
  6822 ;; This function is called by:
  6823 ;;		_main
  6824 ;;		_printf
  6825 ;;		___ftsub
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828  150D                     ___ftadd:	
  6829                           
  6830                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6831  150D  0852               	movf	___ftadd@f1,w
  6832  150E  00D8               	movwf	??___ftadd
  6833  150F  0853               	movf	___ftadd@f1+1,w
  6834  1510  00D9               	movwf	??___ftadd+1
  6835  1511  0854               	movf	___ftadd@f1+2,w
  6836  1512  00DA               	movwf	??___ftadd+2
  6837  1513  1003               	clrc
  6838  1514  0D59               	rlf	??___ftadd+1,w
  6839  1515  0D5A               	rlf	??___ftadd+2,w
  6840  1516  00DD               	movwf	___ftadd@exp1
  6841  1517  0855               	movf	___ftadd@f2,w
  6842  1518  00D8               	movwf	??___ftadd
  6843  1519  0856               	movf	___ftadd@f2+1,w
  6844  151A  00D9               	movwf	??___ftadd+1
  6845  151B  0857               	movf	___ftadd@f2+2,w
  6846  151C  00DA               	movwf	??___ftadd+2
  6847  151D  1003               	clrc
  6848  151E  0D59               	rlf	??___ftadd+1,w
  6849  151F  0D5A               	rlf	??___ftadd+2,w
  6850  1520  00DC               	movwf	___ftadd@exp2
  6851  1521  085D               	movf	___ftadd@exp1,w
  6852  1522  1903               	btfsc	3,2
  6853  1523  2D30               	goto	l7064
  6854  1524  085C               	movf	___ftadd@exp2,w
  6855  1525  025D               	subwf	___ftadd@exp1,w
  6856  1526  085C               	movf	___ftadd@exp2,w
  6857  1527  1803               	skipnc
  6858  1528  2D38               	goto	L8
  6859  1529  00D8               	movwf	??___ftadd
  6860  152A  085D               	movf	___ftadd@exp1,w
  6861  152B  02D8               	subwf	??___ftadd,f
  6862  152C  3019               	movlw	25
  6863  152D  0258               	subwf	??___ftadd,w
  6864  152E  1C03               	skipc
  6865  152F  2D37               	goto	l7068
  6866  1530                     l7064:	
  6867  1530  0855               	movf	___ftadd@f2,w
  6868  1531  00D2               	movwf	?___ftadd
  6869  1532  0856               	movf	___ftadd@f2+1,w
  6870  1533  00D3               	movwf	?___ftadd+1
  6871  1534  0857               	movf	___ftadd@f2+2,w
  6872  1535  00D4               	movwf	?___ftadd+2
  6873  1536  0008               	return
  6874  1537                     l7068:	
  6875  1537  085C               	movf	___ftadd@exp2,w
  6876  1538                     L8:	
  6877  1538  1903               	btfsc	3,2
  6878  1539  0008               	return
  6879  153A  085D               	movf	___ftadd@exp1,w
  6880  153B  025C               	subwf	___ftadd@exp2,w
  6881  153C  1803               	skipnc
  6882  153D  2D46               	goto	l7074
  6883  153E  085D               	movf	___ftadd@exp1,w
  6884  153F  00D8               	movwf	??___ftadd
  6885  1540  085C               	movf	___ftadd@exp2,w
  6886  1541  02D8               	subwf	??___ftadd,f
  6887  1542  3019               	movlw	25
  6888  1543  0258               	subwf	??___ftadd,w
  6889  1544  1803               	btfsc	3,0
  6890  1545  0008               	return
  6891  1546                     l7074:	
  6892  1546  3006               	movlw	6
  6893  1547  00DB               	movwf	___ftadd@sign
  6894  1548  1BD4               	btfsc	___ftadd@f1+2,7
  6895  1549  17DB               	bsf	___ftadd@sign,7
  6896  154A  1BD7               	btfsc	___ftadd@f2+2,7
  6897  154B  175B               	bsf	___ftadd@sign,6
  6898  154C  17D3               	bsf	___ftadd@f1+1,7
  6899  154D  01D4               	clrf	___ftadd@f1+2
  6900  154E  17D6               	bsf	___ftadd@f2+1,7
  6901  154F  01D7               	clrf	___ftadd@f2+2
  6902  1550  085C               	movf	___ftadd@exp2,w
  6903  1551  025D               	subwf	___ftadd@exp1,w
  6904  1552  1803               	skipnc
  6905  1553  2D6D               	goto	l7096
  6906  1554                     l7086:	
  6907  1554  1003               	clrc
  6908  1555  0DD5               	rlf	___ftadd@f2,f
  6909  1556  0DD6               	rlf	___ftadd@f2+1,f
  6910  1557  0DD7               	rlf	___ftadd@f2+2,f
  6911  1558  03DC               	decf	___ftadd@exp2,f
  6912  1559  085C               	movf	___ftadd@exp2,w
  6913  155A  065D               	xorwf	___ftadd@exp1,w
  6914  155B  1903               	skipnz
  6915  155C  2D68               	goto	l7094
  6916  155D  03DB               	decf	___ftadd@sign,f
  6917  155E  085B               	movf	___ftadd@sign,w
  6918  155F  3907               	andlw	7
  6919  1560  1903               	btfsc	3,2
  6920  1561  2D68               	goto	l7094
  6921  1562  2D54               	goto	l7086
  6922  1563                     l7092:	
  6923  1563  1003               	clrc
  6924  1564  0CD4               	rrf	___ftadd@f1+2,f
  6925  1565  0CD3               	rrf	___ftadd@f1+1,f
  6926  1566  0CD2               	rrf	___ftadd@f1,f
  6927  1567  0ADD               	incf	___ftadd@exp1,f
  6928  1568                     l7094:	
  6929  1568  085D               	movf	___ftadd@exp1,w
  6930  1569  065C               	xorwf	___ftadd@exp2,w
  6931  156A  1903               	btfsc	3,2
  6932  156B  2D89               	goto	l3361
  6933  156C  2D63               	goto	l7092
  6934  156D                     l7096:	
  6935  156D  085D               	movf	___ftadd@exp1,w
  6936  156E  025C               	subwf	___ftadd@exp2,w
  6937  156F  1803               	skipnc
  6938  1570  2D89               	goto	l3361
  6939  1571                     l7098:	
  6940  1571  1003               	clrc
  6941  1572  0DD2               	rlf	___ftadd@f1,f
  6942  1573  0DD3               	rlf	___ftadd@f1+1,f
  6943  1574  0DD4               	rlf	___ftadd@f1+2,f
  6944  1575  03DD               	decf	___ftadd@exp1,f
  6945  1576  085C               	movf	___ftadd@exp2,w
  6946  1577  065D               	xorwf	___ftadd@exp1,w
  6947  1578  1903               	skipnz
  6948  1579  2D85               	goto	l7106
  6949  157A  03DB               	decf	___ftadd@sign,f
  6950  157B  085B               	movf	___ftadd@sign,w
  6951  157C  3907               	andlw	7
  6952  157D  1903               	btfsc	3,2
  6953  157E  2D85               	goto	l7106
  6954  157F  2D71               	goto	l7098
  6955  1580                     l7104:	
  6956  1580  1003               	clrc
  6957  1581  0CD7               	rrf	___ftadd@f2+2,f
  6958  1582  0CD6               	rrf	___ftadd@f2+1,f
  6959  1583  0CD5               	rrf	___ftadd@f2,f
  6960  1584  0ADC               	incf	___ftadd@exp2,f
  6961  1585                     l7106:	
  6962  1585  085D               	movf	___ftadd@exp1,w
  6963  1586  065C               	xorwf	___ftadd@exp2,w
  6964  1587  1D03               	skipz
  6965  1588  2D80               	goto	l7104
  6966  1589                     l3361:	
  6967  1589  1FDB               	btfss	___ftadd@sign,7
  6968  158A  2D94               	goto	l7112
  6969  158B  30FF               	movlw	255
  6970  158C  06D2               	xorwf	___ftadd@f1,f
  6971  158D  06D3               	xorwf	___ftadd@f1+1,f
  6972  158E  06D4               	xorwf	___ftadd@f1+2,f
  6973  158F  0AD2               	incf	___ftadd@f1,f
  6974  1590  1903               	skipnz
  6975  1591  0AD3               	incf	___ftadd@f1+1,f
  6976  1592  1903               	skipnz
  6977  1593  0AD4               	incf	___ftadd@f1+2,f
  6978  1594                     l7112:	
  6979  1594  1F5B               	btfss	___ftadd@sign,6
  6980  1595  2D9F               	goto	l7118
  6981  1596  30FF               	movlw	255
  6982  1597  06D5               	xorwf	___ftadd@f2,f
  6983  1598  06D6               	xorwf	___ftadd@f2+1,f
  6984  1599  06D7               	xorwf	___ftadd@f2+2,f
  6985  159A  0AD5               	incf	___ftadd@f2,f
  6986  159B  1903               	skipnz
  6987  159C  0AD6               	incf	___ftadd@f2+1,f
  6988  159D  1903               	skipnz
  6989  159E  0AD7               	incf	___ftadd@f2+2,f
  6990  159F                     l7118:	
  6991  159F  01DB               	clrf	___ftadd@sign
  6992  15A0  0852               	movf	___ftadd@f1,w
  6993  15A1  07D5               	addwf	___ftadd@f2,f
  6994  15A2  0853               	movf	___ftadd@f1+1,w
  6995  15A3  1103               	clrz
  6996  15A4  1803               	skipnc
  6997  15A5  0A53               	incf	___ftadd@f1+1,w
  6998  15A6  1D03               	btfss	3,2
  6999  15A7  07D6               	addwf	___ftadd@f2+1,f
  7000  15A8  0854               	movf	___ftadd@f1+2,w
  7001  15A9  1103               	clrz
  7002  15AA  1803               	skipnc
  7003  15AB  0A54               	incf	___ftadd@f1+2,w
  7004  15AC  1D03               	btfss	3,2
  7005  15AD  07D7               	addwf	___ftadd@f2+2,f
  7006  15AE  1FD7               	btfss	___ftadd@f2+2,7
  7007  15AF  2DBB               	goto	l7130
  7008  15B0  30FF               	movlw	255
  7009  15B1  06D5               	xorwf	___ftadd@f2,f
  7010  15B2  06D6               	xorwf	___ftadd@f2+1,f
  7011  15B3  06D7               	xorwf	___ftadd@f2+2,f
  7012  15B4  0AD5               	incf	___ftadd@f2,f
  7013  15B5  1903               	skipnz
  7014  15B6  0AD6               	incf	___ftadd@f2+1,f
  7015  15B7  1903               	skipnz
  7016  15B8  0AD7               	incf	___ftadd@f2+2,f
  7017  15B9  01DB               	clrf	___ftadd@sign
  7018  15BA  0ADB               	incf	___ftadd@sign,f
  7019  15BB                     l7130:	
  7020  15BB  0855               	movf	___ftadd@f2,w
  7021  15BC  00A8               	movwf	?___ftpack
  7022  15BD  0856               	movf	___ftadd@f2+1,w
  7023  15BE  00A9               	movwf	?___ftpack+1
  7024  15BF  0857               	movf	___ftadd@f2+2,w
  7025  15C0  00AA               	movwf	?___ftpack+2
  7026  15C1  085D               	movf	___ftadd@exp1,w
  7027  15C2  00AB               	movwf	?___ftpack+3
  7028  15C3  085B               	movf	___ftadd@sign,w
  7029  15C4  00AC               	movwf	?___ftpack+4
  7030  15C5  120A  158A  2769   	fcall	___ftpack
  7031  15C8  0828               	movf	?___ftpack,w
  7032  15C9  00D2               	movwf	?___ftadd
  7033  15CA  0829               	movf	?___ftpack+1,w
  7034  15CB  00D3               	movwf	?___ftadd+1
  7035  15CC  082A               	movf	?___ftpack+2,w
  7036  15CD  00D4               	movwf	?___ftadd+2
  7037  15CE  0008               	return
  7038  15CF                     __end_of___ftadd:	
  7039                           
  7040                           	psect	text582
  7041  0837                     __ptext582:	
  7042 ;; =============== function ___bmul ends ============
  7043                           
  7044                           
  7045 ;; *************** function __div_to_l_ *****************
  7046 ;; Defined at:
  7047 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  f1              3    8[BANK0 ] unsigned char 
  7050 ;;  f2              3   11[BANK0 ] unsigned char 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  quot            4   22[BANK0 ] unsigned long 
  7053 ;;  exp1            1   27[BANK0 ] unsigned char 
  7054 ;;  cntr            1   26[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  4    8[BANK0 ] unsigned long 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 60/0
  7062 ;;		Unchanged: FFE9F/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7064 ;;      Params:         0       6       0       0       0
  7065 ;;      Locals:         0       6       0       0       0
  7066 ;;      Temps:          0       8       0       0       0
  7067 ;;      Totals:         0      20       0       0       0
  7068 ;;Total ram usage:       20 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    3
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_printf
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077  0837                     __div_to_l_:	
  7078                           
  7079                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  7080  0837  3028               	movlw	low __div_to_l_@f1
  7081  0838  0084               	movwf	4
  7082  0839  1383               	bcf	3,7	;select IRP bank0
  7083  083A  0800               	movf	0,w
  7084  083B  1283               	bcf	3,5	;RP0=0, select bank0
  7085  083C  1303               	bcf	3,6	;RP1=0, select bank0
  7086  083D  00AE               	movwf	??__div_to_l_
  7087  083E  0A84               	incf	4,f
  7088  083F  0800               	movf	0,w
  7089  0840  00AF               	movwf	??__div_to_l_+1
  7090  0841  0A84               	incf	4,f
  7091  0842  0800               	movf	0,w
  7092  0843  00B0               	movwf	??__div_to_l_+2
  7093  0844  0A84               	incf	4,f
  7094  0845  0800               	movf	0,w
  7095  0846  00B1               	movwf	??__div_to_l_+3
  7096  0847  1003               	clrc
  7097  0848  0D30               	rlf	??__div_to_l_+2,w
  7098  0849  0D31               	rlf	??__div_to_l_+3,w
  7099  084A  00BB               	movwf	__div_to_l_@exp1
  7100  084B  08BB               	movf	__div_to_l_@exp1,f
  7101  084C  1D03               	skipz
  7102  084D  2853               	goto	l6564
  7103  084E                     l6562:	
  7104  084E  01A8               	clrf	?__div_to_l_
  7105  084F  01A9               	clrf	?__div_to_l_+1
  7106  0850  01AA               	clrf	?__div_to_l_+2
  7107  0851  01AB               	clrf	?__div_to_l_+3
  7108  0852  0008               	return
  7109  0853                     l6564:	
  7110  0853  302B               	movlw	low __div_to_l_@f2
  7111  0854  20F6  120A  158A   	fcall	PL3	;call to abstracted procedure
  7112  0857  1003               	clrc
  7113  0858  0D30               	rlf	??__div_to_l_+2,w
  7114  0859  0D31               	rlf	??__div_to_l_+3,w
  7115  085A  00BA               	movwf	__div_to_l_@cntr
  7116  085B  08BA               	movf	__div_to_l_@cntr,f
  7117  085C  1903               	btfsc	3,2
  7118  085D  284E               	goto	l6562
  7119  085E  3028               	movlw	low __div_to_l_@f1
  7120  085F  0084               	movwf	4
  7121  0860  3080               	movlw	128
  7122  0861  0A84               	incf	4,f
  7123  0862  0A84               	incf	4,f
  7124  0863  0480               	iorwf	0,f
  7125  0864  3028               	movlw	low __div_to_l_@f1
  7126  0865  0A84               	incf	4,f
  7127  0866  0084               	movwf	4
  7128  0867  302B               	movlw	low __div_to_l_@f2
  7129  0868  0A84               	incf	4,f
  7130  0869  0A84               	incf	4,f
  7131  086A  0A84               	incf	4,f
  7132  086B  0180               	clrf	0
  7133  086C  0084               	movwf	4
  7134  086D  3080               	movlw	128
  7135  086E  0A84               	incf	4,f
  7136  086F  0A84               	incf	4,f
  7137  0870  0480               	iorwf	0,f
  7138  0871  302B               	movlw	low __div_to_l_@f2
  7139  0872  0A84               	incf	4,f
  7140  0873  0084               	movwf	4
  7141  0874  307F               	movlw	127
  7142  0875  0A84               	incf	4,f
  7143  0876  0A84               	incf	4,f
  7144  0877  0A84               	incf	4,f
  7145  0878  0180               	clrf	0
  7146  0879  01B6               	clrf	__div_to_l_@quot
  7147  087A  01B7               	clrf	__div_to_l_@quot+1
  7148  087B  01B8               	clrf	__div_to_l_@quot+2
  7149  087C  01B9               	clrf	__div_to_l_@quot+3
  7150  087D  02BB               	subwf	__div_to_l_@exp1,f
  7151  087E  30A0               	movlw	160
  7152  087F  073A               	addwf	__div_to_l_@cntr,w
  7153  0880  00AE               	movwf	??__div_to_l_
  7154  0881  02BB               	subwf	__div_to_l_@exp1,f
  7155  0882  3020               	movlw	32
  7156  0883  00BA               	movwf	__div_to_l_@cntr
  7157  0884                     l6578:	
  7158  0884  302B               	movlw	low __div_to_l_@f2
  7159  0885  1003               	clrc
  7160  0886  0DB6               	rlf	__div_to_l_@quot,f
  7161  0887  0DB7               	rlf	__div_to_l_@quot+1,f
  7162  0888  0DB8               	rlf	__div_to_l_@quot+2,f
  7163  0889  0DB9               	rlf	__div_to_l_@quot+3,f
  7164  088A  20F6  120A  158A   	fcall	PL3	;call to abstracted procedure
  7165  088D  3028               	movlw	low __div_to_l_@f1
  7166  088E  0084               	movwf	4
  7167  088F  0800               	movf	0,w
  7168  0890  00B2               	movwf	??__div_to_l_+4
  7169  0891  0A84               	incf	4,f
  7170  0892  0800               	movf	0,w
  7171  0893  00B3               	movwf	??__div_to_l_+5
  7172  0894  0A84               	incf	4,f
  7173  0895  0800               	movf	0,w
  7174  0896  00B4               	movwf	??__div_to_l_+6
  7175  0897  0A84               	incf	4,f
  7176  0898  0800               	movf	0,w
  7177  0899  00B5               	movwf	??__div_to_l_+7
  7178  089A  0831               	movf	??__div_to_l_+3,w
  7179  089B  0235               	subwf	??__div_to_l_+7,w
  7180  089C  1D03               	skipz
  7181  089D  28A8               	goto	u2705
  7182  089E  0830               	movf	??__div_to_l_+2,w
  7183  089F  0234               	subwf	??__div_to_l_+6,w
  7184  08A0  1D03               	skipz
  7185  08A1  28A8               	goto	u2705
  7186  08A2  082F               	movf	??__div_to_l_+1,w
  7187  08A3  0233               	subwf	??__div_to_l_+5,w
  7188  08A4  1D03               	skipz
  7189  08A5  28A8               	goto	u2705
  7190  08A6  082E               	movf	??__div_to_l_,w
  7191  08A7  0232               	subwf	??__div_to_l_+4,w
  7192  08A8                     u2705:	
  7193  08A8  1C03               	skipc
  7194  08A9  28C4               	goto	l3590
  7195  08AA  302B               	movlw	low __div_to_l_@f2
  7196  08AB  20F6  120A  158A   	fcall	PL3	;call to abstracted procedure
  7197  08AE  3028               	movlw	low __div_to_l_@f1
  7198  08AF  0084               	movwf	4
  7199  08B0  082E               	movf	??__div_to_l_,w
  7200  08B1  0280               	subwf	0,f
  7201  08B2  0A84               	incf	4,f
  7202  08B3  082F               	movf	??__div_to_l_+1,w
  7203  08B4  1C03               	skipc
  7204  08B5  0F2F               	incfsz	??__div_to_l_+1,w
  7205  08B6  0280               	subwf	0,f
  7206  08B7  0A84               	incf	4,f
  7207  08B8  0830               	movf	??__div_to_l_+2,w
  7208  08B9  1C03               	skipc
  7209  08BA  0F30               	incfsz	??__div_to_l_+2,w
  7210  08BB  0280               	subwf	0,f
  7211  08BC  0A84               	incf	4,f
  7212  08BD  0831               	movf	??__div_to_l_+3,w
  7213  08BE  1C03               	skipc
  7214  08BF  0A31               	incf	??__div_to_l_+3,w
  7215  08C0  0280               	subwf	0,f
  7216  08C1  3003               	movlw	3
  7217  08C2  0284               	subwf	4,f
  7218  08C3  1436               	bsf	__div_to_l_@quot,0
  7219  08C4                     l3590:	
  7220  08C4  3028               	movlw	low __div_to_l_@f1
  7221  08C5  0084               	movwf	4
  7222  08C6  1003               	clrc
  7223  08C7  0D80               	rlf	0,f
  7224  08C8  0A84               	incf	4,f
  7225  08C9  0D80               	rlf	0,f
  7226  08CA  0A84               	incf	4,f
  7227  08CB  0D80               	rlf	0,f
  7228  08CC  0A84               	incf	4,f
  7229  08CD  0D80               	rlf	0,f
  7230  08CE  0BBA               	decfsz	__div_to_l_@cntr,f
  7231  08CF  2884               	goto	l6578
  7232  08D0  1FBB               	btfss	__div_to_l_@exp1,7
  7233  08D1  28DF               	goto	l6596
  7234  08D2  083B               	movf	__div_to_l_@exp1,w
  7235  08D3  3A80               	xorlw	128
  7236  08D4  3E9F               	addlw	159
  7237  08D5  1C03               	btfss	3,0
  7238  08D6  284E               	goto	l6562
  7239  08D7                     l6592:	
  7240  08D7  1003               	clrc
  7241  08D8  0CB9               	rrf	__div_to_l_@quot+3,f
  7242  08D9  0CB8               	rrf	__div_to_l_@quot+2,f
  7243  08DA  0CB7               	rrf	__div_to_l_@quot+1,f
  7244  08DB  0CB6               	rrf	__div_to_l_@quot,f
  7245  08DC  0FBB               	incfsz	__div_to_l_@exp1,f
  7246  08DD  28D7               	goto	l6592
  7247  08DE  28ED               	goto	l6602
  7248  08DF                     l6596:	
  7249  08DF  3020               	movlw	32
  7250  08E0  023B               	subwf	__div_to_l_@exp1,w
  7251  08E1  1803               	btfsc	3,0
  7252  08E2  284E               	goto	l6562
  7253  08E3                     l3598:	
  7254  08E3  08BB               	movf	__div_to_l_@exp1,f
  7255  08E4  1903               	btfsc	3,2
  7256  08E5  28ED               	goto	l6602
  7257  08E6  1003               	clrc
  7258  08E7  0DB6               	rlf	__div_to_l_@quot,f
  7259  08E8  0DB7               	rlf	__div_to_l_@quot+1,f
  7260  08E9  0DB8               	rlf	__div_to_l_@quot+2,f
  7261  08EA  0DB9               	rlf	__div_to_l_@quot+3,f
  7262  08EB  03BB               	decf	__div_to_l_@exp1,f
  7263  08EC  28E3               	goto	l3598
  7264  08ED                     l6602:	
  7265  08ED  0839               	movf	__div_to_l_@quot+3,w
  7266  08EE  00AB               	movwf	?__div_to_l_+3
  7267  08EF  0838               	movf	__div_to_l_@quot+2,w
  7268  08F0  00AA               	movwf	?__div_to_l_+2
  7269  08F1  0837               	movf	__div_to_l_@quot+1,w
  7270  08F2  00A9               	movwf	?__div_to_l_+1
  7271  08F3  0836               	movf	__div_to_l_@quot,w
  7272  08F4  00A8               	movwf	?__div_to_l_
  7273  08F5  0008               	return
  7274  08F6                     __end_of__div_to_l_:	
  7275  08F6                     PL3:	
  7276  08F6  0084               	movwf	4
  7277  08F7  0800               	movf	0,w
  7278  08F8  00AE               	movwf	??__div_to_l_
  7279  08F9  0A84               	incf	4,f
  7280  08FA  0800               	movf	0,w
  7281  08FB  00AF               	movwf	??__div_to_l_+1
  7282  08FC  0A84               	incf	4,f
  7283  08FD  0800               	movf	0,w
  7284  08FE  00B0               	movwf	??__div_to_l_+2
  7285  08FF  0A84               	incf	4,f
  7286  0900  0800               	movf	0,w
  7287  0901  00B1               	movwf	??__div_to_l_+3
  7288  0902  0008               	return
  7289                           
  7290                           	psect	text586
  7291  16E1                     __ptext586:	
  7292 ;; =============== function _isprint ends ============
  7293                           
  7294                           
  7295 ;; *************** function _ngat *****************
  7296 ;; Defined at:
  7297 ;;		line 55 in file "D:\TTVXL\Project TTVXL\BT04week11ttvxl\BT04week11ttvxl.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;		None               void
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0, pclath, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 60/0
  7309 ;;		Unchanged: FFF9F/0
  7310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7311 ;;      Params:         0       0       0       0       0
  7312 ;;      Locals:         0       0       0       0       0
  7313 ;;      Temps:          0       2       0       0       0
  7314 ;;      Totals:         0       2       0       0       0
  7315 ;;Total ram usage:        2 bytes
  7316 ;; Hardware stack levels used:    1
  7317 ;; Hardware stack levels required when called:    2
  7318 ;; This function calls:
  7319 ;;		i1___ftadd
  7320 ;; This function is called by:
  7321 ;;		Interrupt level 1
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324  16E1                     _ngat:	
  7325                           
  7326                           ;BT04week11ttvxl.c: 56: if(T0IF)
  7327  16E1  1D0B               	btfss	11,2
  7328  16E2  2EF7               	goto	i1l6484
  7329                           
  7330                           ;BT04week11ttvxl.c: 57: {
  7331                           ;BT04week11ttvxl.c: 58: dem++;
  7332  16E3  3080               	movlw	128
  7333  16E4  01F8               	clrf	?i1___ftadd
  7334  16E5  00F9               	movwf	?i1___ftadd+1
  7335  16E6  303F               	movlw	63
  7336  16E7  00FA               	movwf	?i1___ftadd+2
  7337  16E8  1683               	bsf	3,5	;RP0=1, select bank1
  7338  16E9  0844               	movf	_dem^(0+128),w
  7339  16EA  00FB               	movwf	?i1___ftadd+3
  7340  16EB  0845               	movf	(_dem+1)^(0+128),w
  7341  16EC  00FC               	movwf	?i1___ftadd+4
  7342  16ED  0846               	movf	(_dem+2)^(0+128),w
  7343  16EE  00FD               	movwf	?i1___ftadd+5
  7344  16EF  2701               	fcall	i1___ftadd
  7345  16F0  0878               	movf	?i1___ftadd,w
  7346  16F1  1683               	bsf	3,5	;RP0=1, select bank1
  7347  16F2  00C4               	movwf	_dem^(0+128)
  7348  16F3  0879               	movf	?i1___ftadd+1,w
  7349  16F4  00C5               	movwf	(_dem+1)^(0+128)
  7350  16F5  087A               	movf	?i1___ftadd+2,w
  7351  16F6  00C6               	movwf	(_dem+2)^(0+128)
  7352  16F7                     i1l6484:	
  7353                           
  7354                           ;BT04week11ttvxl.c: 62: }
  7355                           ;BT04week11ttvxl.c: 63: TMR0 = 0;
  7356  16F7  1283               	bcf	3,5	;RP0=0, select bank0
  7357  16F8  0181               	clrf	1	;volatile
  7358                           
  7359                           ;BT04week11ttvxl.c: 64: T0IF = 0;
  7360  16F9  110B               	bcf	11,2
  7361  16FA  0827               	movf	??_ngat+1,w
  7362  16FB  008A               	movwf	10
  7363  16FC  0E26               	swapf	??_ngat^0,w
  7364  16FD  0083               	movwf	3
  7365  16FE  0EFE               	swapf	126,f
  7366  16FF  0E7E               	swapf	126,w
  7367  1700  0009               	retfie
  7368  1701                     __end_of_ngat:	
  7369  1701                     __ptext587:	
  7370 ;; =============== function _ngat ends ============
  7371                           
  7372                           
  7373 ;; *************** function i1___ftadd *****************
  7374 ;; Defined at:
  7375 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  __ftadd         3    8[COMMON] float 
  7378 ;;  __ftadd         3   11[COMMON] float 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  __ftadd         1    5[BANK0 ] unsigned char 
  7381 ;;  __ftadd         1    4[BANK0 ] unsigned char 
  7382 ;;  __ftadd         1    3[BANK0 ] unsigned char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  3    8[COMMON] float 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, pclath, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 60/20
  7389 ;;		On exit  : 60/0
  7390 ;;		Unchanged: FFF9F/0
  7391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7392 ;;      Params:         6       0       0       0       0
  7393 ;;      Locals:         0       3       0       0       0
  7394 ;;      Temps:          0       3       0       0       0
  7395 ;;      Totals:         6       6       0       0       0
  7396 ;;Total ram usage:       12 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    1
  7399 ;; This function calls:
  7400 ;;		i1___ftpack
  7401 ;; This function is called by:
  7402 ;;		_ngat
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405  1701                     i1___ftadd:	
  7406                           
  7407                           ; Regs used in i1___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7408  1701  0878               	movf	i1___ftadd@f1,w
  7409  1702  1283               	bcf	3,5	;RP0=0, select bank0
  7410  1703  00A0               	movwf	??i1___ftadd
  7411  1704  0879               	movf	i1___ftadd@f1+1,w
  7412  1705  00A1               	movwf	??i1___ftadd+1
  7413  1706  087A               	movf	i1___ftadd@f1+2,w
  7414  1707  00A2               	movwf	??i1___ftadd+2
  7415  1708  1003               	clrc
  7416  1709  0D21               	rlf	??i1___ftadd+1,w
  7417  170A  0D22               	rlf	??i1___ftadd+2,w
  7418  170B  00A5               	movwf	i1___ftadd@exp1
  7419  170C  087B               	movf	i1___ftadd@f2,w
  7420  170D  00A0               	movwf	??i1___ftadd
  7421  170E  087C               	movf	i1___ftadd@f2+1,w
  7422  170F  00A1               	movwf	??i1___ftadd+1
  7423  1710  087D               	movf	i1___ftadd@f2+2,w
  7424  1711  00A2               	movwf	??i1___ftadd+2
  7425  1712  1003               	clrc
  7426  1713  0D21               	rlf	??i1___ftadd+1,w
  7427  1714  0D22               	rlf	??i1___ftadd+2,w
  7428  1715  00A4               	movwf	i1___ftadd@exp2
  7429  1716  0825               	movf	i1___ftadd@exp1,w
  7430  1717  1903               	btfsc	3,2
  7431  1718  2F25               	goto	i1l6908
  7432  1719  0824               	movf	i1___ftadd@exp2,w
  7433  171A  0225               	subwf	i1___ftadd@exp1,w
  7434  171B  0824               	movf	i1___ftadd@exp2,w
  7435  171C  1803               	skipnc
  7436  171D  2F2D               	goto	L21
  7437  171E  00A0               	movwf	??i1___ftadd
  7438  171F  0825               	movf	i1___ftadd@exp1,w
  7439  1720  02A0               	subwf	??i1___ftadd,f
  7440  1721  3019               	movlw	25
  7441  1722  0220               	subwf	??i1___ftadd,w
  7442  1723  1C03               	skipc
  7443  1724  2F2C               	goto	i1l6912
  7444  1725                     i1l6908:	
  7445  1725  087B               	movf	i1___ftadd@f2,w
  7446  1726  00F8               	movwf	?i1___ftadd
  7447  1727  087C               	movf	i1___ftadd@f2+1,w
  7448  1728  00F9               	movwf	?i1___ftadd+1
  7449  1729  087D               	movf	i1___ftadd@f2+2,w
  7450  172A  00FA               	movwf	?i1___ftadd+2
  7451  172B  0008               	return
  7452  172C                     i1l6912:	
  7453  172C  0824               	movf	i1___ftadd@exp2,w
  7454  172D                     L21:	
  7455  172D  1903               	btfsc	3,2
  7456  172E  0008               	return
  7457  172F  0825               	movf	i1___ftadd@exp1,w
  7458  1730  0224               	subwf	i1___ftadd@exp2,w
  7459  1731  1803               	skipnc
  7460  1732  2F3B               	goto	i1l6918
  7461  1733  0825               	movf	i1___ftadd@exp1,w
  7462  1734  00A0               	movwf	??i1___ftadd
  7463  1735  0824               	movf	i1___ftadd@exp2,w
  7464  1736  02A0               	subwf	??i1___ftadd,f
  7465  1737  3019               	movlw	25
  7466  1738  0220               	subwf	??i1___ftadd,w
  7467  1739  1803               	btfsc	3,0
  7468  173A  0008               	return
  7469  173B                     i1l6918:	
  7470  173B  3006               	movlw	6
  7471  173C  00A3               	movwf	i1___ftadd@sign
  7472  173D  1BFA               	btfsc	i1___ftadd@f1+2,7
  7473  173E  17A3               	bsf	i1___ftadd@sign,7
  7474  173F  1BFD               	btfsc	i1___ftadd@f2+2,7
  7475  1740  1723               	bsf	i1___ftadd@sign,6
  7476  1741  17F9               	bsf	i1___ftadd@f1+1,7
  7477  1742  01FA               	clrf	i1___ftadd@f1+2
  7478  1743  17FC               	bsf	i1___ftadd@f2+1,7
  7479  1744  01FD               	clrf	i1___ftadd@f2+2
  7480  1745  0824               	movf	i1___ftadd@exp2,w
  7481  1746  0225               	subwf	i1___ftadd@exp1,w
  7482  1747  1803               	skipnc
  7483  1748  2F62               	goto	i1l6940
  7484  1749                     i1l6930:	
  7485  1749  1003               	clrc
  7486  174A  0DFB               	rlf	i1___ftadd@f2,f
  7487  174B  0DFC               	rlf	i1___ftadd@f2+1,f
  7488  174C  0DFD               	rlf	i1___ftadd@f2+2,f
  7489  174D  03A4               	decf	i1___ftadd@exp2,f
  7490  174E  0824               	movf	i1___ftadd@exp2,w
  7491  174F  0625               	xorwf	i1___ftadd@exp1,w
  7492  1750  1903               	skipnz
  7493  1751  2F5D               	goto	i1l6938
  7494  1752  03A3               	decf	i1___ftadd@sign,f
  7495  1753  0823               	movf	i1___ftadd@sign,w
  7496  1754  3907               	andlw	7
  7497  1755  1903               	btfsc	3,2
  7498  1756  2F5D               	goto	i1l6938
  7499  1757  2F49               	goto	i1l6930
  7500  1758                     i1l6936:	
  7501  1758  1003               	clrc
  7502  1759  0CFA               	rrf	i1___ftadd@f1+2,f
  7503  175A  0CF9               	rrf	i1___ftadd@f1+1,f
  7504  175B  0CF8               	rrf	i1___ftadd@f1,f
  7505  175C  0AA5               	incf	i1___ftadd@exp1,f
  7506  175D                     i1l6938:	
  7507  175D  0825               	movf	i1___ftadd@exp1,w
  7508  175E  0624               	xorwf	i1___ftadd@exp2,w
  7509  175F  1903               	btfsc	3,2
  7510  1760  2F7E               	goto	i1l3361
  7511  1761  2F58               	goto	i1l6936
  7512  1762                     i1l6940:	
  7513  1762  0825               	movf	i1___ftadd@exp1,w
  7514  1763  0224               	subwf	i1___ftadd@exp2,w
  7515  1764  1803               	skipnc
  7516  1765  2F7E               	goto	i1l3361
  7517  1766                     i1l6942:	
  7518  1766  1003               	clrc
  7519  1767  0DF8               	rlf	i1___ftadd@f1,f
  7520  1768  0DF9               	rlf	i1___ftadd@f1+1,f
  7521  1769  0DFA               	rlf	i1___ftadd@f1+2,f
  7522  176A  03A5               	decf	i1___ftadd@exp1,f
  7523  176B  0824               	movf	i1___ftadd@exp2,w
  7524  176C  0625               	xorwf	i1___ftadd@exp1,w
  7525  176D  1903               	skipnz
  7526  176E  2F7A               	goto	i1l6950
  7527  176F  03A3               	decf	i1___ftadd@sign,f
  7528  1770  0823               	movf	i1___ftadd@sign,w
  7529  1771  3907               	andlw	7
  7530  1772  1903               	btfsc	3,2
  7531  1773  2F7A               	goto	i1l6950
  7532  1774  2F66               	goto	i1l6942
  7533  1775                     i1l6948:	
  7534  1775  1003               	clrc
  7535  1776  0CFD               	rrf	i1___ftadd@f2+2,f
  7536  1777  0CFC               	rrf	i1___ftadd@f2+1,f
  7537  1778  0CFB               	rrf	i1___ftadd@f2,f
  7538  1779  0AA4               	incf	i1___ftadd@exp2,f
  7539  177A                     i1l6950:	
  7540  177A  0825               	movf	i1___ftadd@exp1,w
  7541  177B  0624               	xorwf	i1___ftadd@exp2,w
  7542  177C  1D03               	skipz
  7543  177D  2F75               	goto	i1l6948
  7544  177E                     i1l3361:	
  7545  177E  1FA3               	btfss	i1___ftadd@sign,7
  7546  177F  2F89               	goto	i1l6956
  7547  1780  30FF               	movlw	255
  7548  1781  06F8               	xorwf	i1___ftadd@f1,f
  7549  1782  06F9               	xorwf	i1___ftadd@f1+1,f
  7550  1783  06FA               	xorwf	i1___ftadd@f1+2,f
  7551  1784  0AF8               	incf	i1___ftadd@f1,f
  7552  1785  1903               	skipnz
  7553  1786  0AF9               	incf	i1___ftadd@f1+1,f
  7554  1787  1903               	skipnz
  7555  1788  0AFA               	incf	i1___ftadd@f1+2,f
  7556  1789                     i1l6956:	
  7557  1789  1F23               	btfss	i1___ftadd@sign,6
  7558  178A  2F94               	goto	i1l6962
  7559  178B  30FF               	movlw	255
  7560  178C  06FB               	xorwf	i1___ftadd@f2,f
  7561  178D  06FC               	xorwf	i1___ftadd@f2+1,f
  7562  178E  06FD               	xorwf	i1___ftadd@f2+2,f
  7563  178F  0AFB               	incf	i1___ftadd@f2,f
  7564  1790  1903               	skipnz
  7565  1791  0AFC               	incf	i1___ftadd@f2+1,f
  7566  1792  1903               	skipnz
  7567  1793  0AFD               	incf	i1___ftadd@f2+2,f
  7568  1794                     i1l6962:	
  7569  1794  01A3               	clrf	i1___ftadd@sign
  7570  1795  0878               	movf	i1___ftadd@f1,w
  7571  1796  07FB               	addwf	i1___ftadd@f2,f
  7572  1797  0879               	movf	i1___ftadd@f1+1,w
  7573  1798  1103               	clrz
  7574  1799  1803               	skipnc
  7575  179A  0A79               	incf	i1___ftadd@f1+1,w
  7576  179B  1D03               	btfss	3,2
  7577  179C  07FC               	addwf	i1___ftadd@f2+1,f
  7578  179D  087A               	movf	i1___ftadd@f1+2,w
  7579  179E  1103               	clrz
  7580  179F  1803               	skipnc
  7581  17A0  0A7A               	incf	i1___ftadd@f1+2,w
  7582  17A1  1D03               	btfss	3,2
  7583  17A2  07FD               	addwf	i1___ftadd@f2+2,f
  7584  17A3  1FFD               	btfss	i1___ftadd@f2+2,7
  7585  17A4  2FB0               	goto	i1l6974
  7586  17A5  30FF               	movlw	255
  7587  17A6  06FB               	xorwf	i1___ftadd@f2,f
  7588  17A7  06FC               	xorwf	i1___ftadd@f2+1,f
  7589  17A8  06FD               	xorwf	i1___ftadd@f2+2,f
  7590  17A9  0AFB               	incf	i1___ftadd@f2,f
  7591  17AA  1903               	skipnz
  7592  17AB  0AFC               	incf	i1___ftadd@f2+1,f
  7593  17AC  1903               	skipnz
  7594  17AD  0AFD               	incf	i1___ftadd@f2+2,f
  7595  17AE  01A3               	clrf	i1___ftadd@sign
  7596  17AF  0AA3               	incf	i1___ftadd@sign,f
  7597  17B0                     i1l6974:	
  7598  17B0  087B               	movf	i1___ftadd@f2,w
  7599  17B1  00F0               	movwf	?i1___ftpack
  7600  17B2  087C               	movf	i1___ftadd@f2+1,w
  7601  17B3  00F1               	movwf	?i1___ftpack+1
  7602  17B4  087D               	movf	i1___ftadd@f2+2,w
  7603  17B5  00F2               	movwf	?i1___ftpack+2
  7604  17B6  0825               	movf	i1___ftadd@exp1,w
  7605  17B7  00F3               	movwf	?i1___ftpack+3
  7606  17B8  0823               	movf	i1___ftadd@sign,w
  7607  17B9  00F4               	movwf	?i1___ftpack+4
  7608  17BA  27C2               	fcall	i1___ftpack
  7609  17BB  0870               	movf	?i1___ftpack,w
  7610  17BC  00F8               	movwf	?i1___ftadd
  7611  17BD  0871               	movf	?i1___ftpack+1,w
  7612  17BE  00F9               	movwf	?i1___ftadd+1
  7613  17BF  0872               	movf	?i1___ftpack+2,w
  7614  17C0  00FA               	movwf	?i1___ftadd+2
  7615  17C1  0008               	return
  7616  17C2                     __end_ofi1___ftadd:	
  7617  17C2                     __ptext588:	
  7618 ;; =============== function i1___ftadd ends ============
  7619                           
  7620                           
  7621 ;; *************** function i1___ftpack *****************
  7622 ;; Defined at:
  7623 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  __ftpack        3    0[COMMON] unsigned um
  7626 ;;  __ftpack        1    3[COMMON] unsigned char 
  7627 ;;  __ftpack        1    4[COMMON] unsigned char 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  3    0[COMMON] float 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0
  7634 ;; Tracked objects:
  7635 ;;		On entry : 60/0
  7636 ;;		On exit  : 60/0
  7637 ;;		Unchanged: FFF9F/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7639 ;;      Params:         5       0       0       0       0
  7640 ;;      Locals:         0       0       0       0       0
  7641 ;;      Temps:          3       0       0       0       0
  7642 ;;      Totals:         8       0       0       0       0
  7643 ;;Total ram usage:        8 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		i1___ftadd
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651  17C2                     i1___ftpack:	
  7652                           
  7653                           ; Regs used in i1___ftpack: [wreg+status,2+status,0]
  7654  17C2  0873               	movf	i1___ftpack@exp,w
  7655  17C3  1903               	btfsc	3,2
  7656  17C4  2FCA               	goto	i1l6982
  7657  17C5  0872               	movf	i1___ftpack@arg+2,w
  7658  17C6  0471               	iorwf	i1___ftpack@arg+1,w
  7659  17C7  0470               	iorwf	i1___ftpack@arg,w
  7660  17C8  1D03               	skipz
  7661  17C9  2FD3               	goto	i1l6988
  7662  17CA                     i1l6982:	
  7663  17CA  01F0               	clrf	?i1___ftpack
  7664  17CB  01F1               	clrf	?i1___ftpack+1
  7665  17CC  01F2               	clrf	?i1___ftpack+2
  7666  17CD  0008               	return
  7667  17CE                     i1l6986:	
  7668  17CE  0AF3               	incf	i1___ftpack@exp,f
  7669  17CF  1003               	clrc
  7670  17D0  0CF2               	rrf	i1___ftpack@arg+2,f
  7671  17D1  0CF1               	rrf	i1___ftpack@arg+1,f
  7672  17D2  0CF0               	rrf	i1___ftpack@arg,f
  7673  17D3                     i1l6988:	
  7674  17D3  30FE               	movlw	254
  7675  17D4  0572               	andwf	i1___ftpack@arg+2,w
  7676  17D5  1903               	btfsc	3,2
  7677  17D6  2FE2               	goto	i1l6992
  7678  17D7  2FCE               	goto	i1l6986
  7679  17D8                     i1l6990:	
  7680  17D8  0AF3               	incf	i1___ftpack@exp,f
  7681  17D9  0AF0               	incf	i1___ftpack@arg,f
  7682  17DA  1903               	skipnz
  7683  17DB  0AF1               	incf	i1___ftpack@arg+1,f
  7684  17DC  1903               	skipnz
  7685  17DD  0AF2               	incf	i1___ftpack@arg+2,f
  7686  17DE  1003               	clrc
  7687  17DF  0CF2               	rrf	i1___ftpack@arg+2,f
  7688  17E0  0CF1               	rrf	i1___ftpack@arg+1,f
  7689  17E1  0CF0               	rrf	i1___ftpack@arg,f
  7690  17E2                     i1l6992:	
  7691  17E2  30FF               	movlw	255
  7692  17E3  0572               	andwf	i1___ftpack@arg+2,w
  7693  17E4  1903               	btfsc	3,2
  7694  17E5  2FEC               	goto	i1l6996
  7695  17E6  2FD8               	goto	i1l6990
  7696  17E7                     i1l6994:	
  7697  17E7  03F3               	decf	i1___ftpack@exp,f
  7698  17E8  1003               	clrc
  7699  17E9  0DF0               	rlf	i1___ftpack@arg,f
  7700  17EA  0DF1               	rlf	i1___ftpack@arg+1,f
  7701  17EB  0DF2               	rlf	i1___ftpack@arg+2,f
  7702  17EC                     i1l6996:	
  7703  17EC  1FF1               	btfss	i1___ftpack@arg+1,7
  7704  17ED  2FE7               	goto	i1l6994
  7705  17EE  1C73               	btfss	i1___ftpack@exp,0
  7706  17EF  13F1               	bcf	i1___ftpack@arg+1,7
  7707  17F0  1003               	clrc
  7708  17F1  0CF3               	rrf	i1___ftpack@exp,f
  7709  17F2  0873               	movf	i1___ftpack@exp,w
  7710  17F3  00F7               	movwf	??i1___ftpack+2
  7711  17F4  01F6               	clrf	??i1___ftpack+1
  7712  17F5  01F5               	clrf	??i1___ftpack
  7713  17F6  0875               	movf	??i1___ftpack,w
  7714  17F7  04F0               	iorwf	i1___ftpack@arg,f
  7715  17F8  0876               	movf	??i1___ftpack+1,w
  7716  17F9  04F1               	iorwf	i1___ftpack@arg+1,f
  7717  17FA  0877               	movf	??i1___ftpack+2,w
  7718  17FB  04F2               	iorwf	i1___ftpack@arg+2,f
  7719  17FC  0874               	movf	i1___ftpack@sign,w
  7720  17FD  1D03               	skipz
  7721  17FE  17F2               	bsf	i1___ftpack@arg+2,7
  7722  17FF  0008               	return
  7723  1800                     __end_ofi1___ftpack:	
  7724                           
  7725                           	psect	intentry
  7726  0004                     __pintentry:	
  7727                           ; Regs used in _ngat: [wreg+status,2+status,0+pclath+cstack]
  7728                           
  7729  0004                     interrupt_function:	
  7730  007E                     saved_w	set	btemp
  7731  0004  00FE               	movwf	btemp
  7732  0005  0E03               	swapf	3,w
  7733  0006  1283               	bcf	3,5	;RP0=0, select bank0
  7734  0007  1303               	bcf	3,6	;RP1=0, select bank0
  7735  0008  00A6               	movwf	??_ngat
  7736  0009  080A               	movf	10,w
  7737  000A  00A7               	movwf	??_ngat+1
  7738  000B  160A  118A  2EE1   	ljmp	_ngat
  7739                           
  7740                           	psect	text589
  7741  0000                     __ptext589:	
  7742 ;; =============== function i1___ftpack ends ============
  7743                           
  7744  007E                     btemp	set	126	;btemp
  7745  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Nov 06 01:55:35 2022

                    _v 00C7                      pc 0002             i1___ftpack 17C2         ___bmul@product 0032  
         ___awdiv@sign 0033                     fsr 0004    ___wmul@multiplicand 002A           ___ftadd@exp1 005D  
         ___ftadd@exp2 005C          ?_lcd_put_byte 0028           ___ftadd@sign 005B           i1___ftadd@f1 0078  
         i1___ftadd@f2 007B                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RD3 0043                    _RD4 0044                    _RD5 0045                    _RD6 0046  
                  _RD7 0047                    _PSA 040B                    _dem 00C4                    fsr0 0004  
                  indf 0000           ___awmod@sign 002D           ___ftdiv@cntr 003D           ___ftdiv@sign 0042  
                 l2201 002E                   l2130 0000                   l2122 0000                   l1059 0000  
                 l2119 0000                   l2216 00AC                   l2153 0000                   l2262 0399  
                 l3303 0000                   l3330 0A14                   l3333 0000                   l3417 0647  
                 l3361 1589                   l3425 0000                   l2297 0574                   l3282 0000  
                 l3450 0000                   l3339 0000                   l3460 0000                   l3540 0000  
                 l3437 0000                   l3518 0000                   l3390 0C92                   l3287 0000  
                 l3383 0000                   l3464 0000                   l3297 0000                   l7010 0000  
                 l3555 07E3                   l3548 0000                   l7020 0B85                   l7100 0000  
                 l3590 08C4                   l7030 0000                   l7022 0B94                   l7014 0000  
                 l7006 0000                   l7110 0000                   l3591 0000                   l3479 0000  
                 l7040 0000                   l7032 0BCD                   l7024 0BA4                   l7016 0000  
                 l7008 0000                   l7120 0000                   l7112 1594                   l7104 1580  
                 l7200 0000                   l7034 0BDA                   l7026 0000                   l7018 0000  
                 l7050 0000                   l7042 0000                   l7130 15BB                   l7122 0000  
                 l7106 1585                   l7202 0000                   l6500 0000                   l7036 0BE9  
                 l7028 0000                   l7052 0000                   l7044 0000                   l7116 0000  
                 l7060 0000                   l7140 0C81                   l7220 0F35                   l7212 0F29  
                 l7204 0000                   l7300 0000                   l6502 0000                   l3598 08E3  
                 l7038 0000                   l7046 0000                   l7126 0000                   l7118 159F  
                 l7070 0000                   l7150 0000                   l7134 0000                   l7230 0000  
                 l7214 0000                   l7206 0000                   l7302 0A5C                   l7310 0000  
                 l6520 0000                   l6512 0000                   l7048 0000                   l7128 0000  
                 l7064 1530                   l7056 0000                   l7160 0000                   l7152 0000  
                 l7224 0F3F                   l7216 0000                   l7208 0F1F                   l7240 0000  
                 l7304 0A5D                   l7320 098E                   l6530 07AE                   l6522 0000  
                 l6514 078C                   l6602 08ED                   l7082 0000                   l7074 1546  
                 l7058 0000                   l7162 0000                   l7154 0000                   l7146 0000  
                 l7226 0000                   l7218 0000                   l7234 0000                   l7250 0000  
                 l7306 0000                   l7314 0000                   l7410 0030                   l6508 05F2  
                 l6540 0000                   l6532 0000                   l6524 0000                   l6516 0791  
                 l7092 1563                   l7084 0000                   l7076 0000                   l7068 1537  
                 l7172 0000                   l7164 0CA5                   l7156 0000                   l7148 0000  
                 l7228 0000                   l7244 0000                   l7260 0000                   l7308 0A66  
                 l7324 0000                   l7332 0000                   l7420 0000                   l7412 003B  
                 l7404 0029                   l6550 07DF                   l6526 0000                   l6614 0000  
                 l6606 0000                   l6630 0000                   l6622 0000                   l6702 0000  
                 l6710 0617                   l7094 1568                   l7086 1554                   l7174 0000  
                 l7158 0000                   l7190 0F0E                   l7246 0C5F                   l7238 0000  
                 l7254 06BA                   l7270 0000                   l7262 0000                   l7350 0D8D  
                 l7422 0070                   l7406 0000                   l6536 0000                   l6528 0000  
                 l6560 0000                   l6616 0000                   l6608 0F5D                   l6632 0000  
                 l6624 05F6                   l6640 0000                   l6704 0000                   l6720 0000  
                 l6712 061C                   l7088 0000                   l7096 156D                   l7168 0000  
                 l7192 0000                   l7184 0EFD                   l7256 06C5                   l7280 0B26  
                 l7272 0B0E                   l7264 0000                   l7328 09E2                   l7344 0D48  
                 l7336 0000                   l7600 0000                   l7520 0268                   l7504 0216  
                 l7432 0000                   l7416 004A                   l6490 0000                   l6546 07D7  
                 l6570 0000                   l6562 084E                   l6642 0000                   l6706 0000  
                 l6730 0000                   l6722 0000                   l6714 0000                   l6810 0000  
                 l7098 1571                   l7194 0000                   l7178 0000                   l7266 0000  
                 l7362 0E0E                   l7354 0DA4                   l7530 02AB                   l7522 0000  
                 l7514 0000                   l7450 00D1                   l7442 00AE                   l7434 007F  
                 l7426 0000                   l7418 0000                   l6556 07ED                   l6548 0000  
                 l6580 0000                   l6572 0000                   l6564 0853                   l6628 05FE  
                 l6652 0000                   l6644 0A0E                   l6740 0000                   l6732 0643  
                 l6716 0000                   l6708 0000                   l6804 0000                   l7196 0000  
                 l7292 0B4A                   l7284 0B32                   l7276 0B1A                   l7268 0000  
                 l7372 0000                   l7380 0A6F                   l7612 0465                   l7604 0000  
                 l7540 0000                   l7524 02A9                   l7516 0000                   l7508 0227  
                 l7460 010D                   l7452 0000                   l7444 00C5                   l7428 0000  
                 l7436 00A8                   l7700 0000                   l6574 0000                   l6638 0000  
                 l6670 0000                   l6662 0000                   l6742 065F                   l6718 0000  
                 l6806 05B0                   l6830 0000                   l6822 05C8                   l7198 0000  
                 l7374 0000                   l7390 0A8C                   l7382 0A75                   l7630 04A6  
                 l7606 0459                   l7518 0000                   l7470 0000                   l7462 0000  
                 l7454 0000                   l7438 0000                   l7710 0000                   l7702 0000  
                 l6496 0C3F                   l6488 0000                   l6592 08D7                   l6584 0000  
                 l6576 0000                   l6656 0000                   l6648 0000                   l6664 0000  
                 l6680 0000                   l6728 063B                   l6760 0E7D                   l6752 0000  
                 l6840 0000                   l7296 0B56                   l7288 0B3E                   l7368 0E53  
                 l7384 0A7C                   l7640 04CB                   l7624 0000                   l7560 0000  
                 l7552 0303                   l7544 02F8                   l7536 0000                   l7480 016A  
                 l7472 0000                   l7720 0000                   l7712 0000                   l7704 15E3  
                 l6594 0000                   l6586 0000                   l6578 0884                   l6658 0A21  
                 l6674 0A3B                   l6666 0A27                   l6690 0F7A                   l6682 0000  
                 l6738 0651                   l6770 0E8B                   l6762 0000                   l6754 0E74  
                 l6746 0000                   l6826 05D7                   l6818 0000                   l6850 0000  
                 l7298 0000                   l7386 0A80                   l7394 0A93                   l7378 0000  
                 l7634 04BE                   l7626 0495                   l7618 0467                   l7570 0360  
                 l7554 0000                   l7562 0321                   l7538 02D9                   l7482 0000  
                 l7474 0000                   l7466 0000                   l7458 0000                   l7722 0000  
                 l7714 0000                   l7706 0000                   l6596 08DF                   l6676 0000  
                 l6668 0000                   l6692 0F7F                   l6684 0F71                   l6780 0000  
                 l6772 0000                   l6748 0000                   l6828 0000                   l6860 06A7  
                 l7396 0000                   l7660 050A                   l7652 04FD                   l7556 030C  
                 l7548 0300                   l7484 0000                   l7476 0000                   l7468 0000  
                 l7492 01B6                   l7716 0000                   l7708 0000                   l6694 0F89  
                 l6782 0EA2                   l6758 0000                   l6790 0000                   l6854 0000  
                 l6838 0000                   l6870 0000                   l7670 0000                   l7654 0500  
                 l7646 04E1                   l7582 0388                   l7574 0000                   l7558 0318  
                 l7398 0000                   l7718 0000                   l6696 0F8E                   l6688 0F75  
                 l6784 0000                   l6776 0000                   l6848 067C                   l6872 0EB9  
                 l6864 0000                   l7672 052A                   l7664 0000                   l7648 04E4  
                 l7592 0000                   l7584 0000                   l7576 0364                   l7568 0333  
                 l7496 01EB                   l7488 01A4                   l7680 0014                   l6698 0F93  
                 l6786 0EAA                   l6858 0000                   l6890 0000                   l6866 0000  
                 l7666 0519                   l7594 0429                   l7586 03BC                   l7578 0379  
                 l7690 0000                   l7682 0000                   l6884 0ECC                   l6892 0EDF  
                 l6876 0EC0                   l7668 051D                   l7596 0437                   l7692 0000  
                 l7684 0000                   l6798 058B                   l6894 0000                   l7678 0532  
                 l7598 0000                   l7694 0000                   l7686 0000                   l6896 0EE7  
                 l7696 0000                   l7688 0000                   l7698 0000                   STR_1 1089  
                 STR_2 107C                   _T0IE 005D                   _T0IF 005A                   _T0CS 040D  
                 u3125 0599                   u3205 068F                   u3075 0E94                   u2615 07BD  
                 u2705 08A8                   u3265 0ED2                   u3610 0BA1                   u4405 01F5  
                 u3710 0BF6                   u3630 0BAF                   u4350 0000                   u4505 0315  
                 u3650 0BCA                   u3570 0B82                   u4515 032A                   u4435 0214  
                 u4355 0123                   u3724 0BF9                   u3644 0BB2                   u3670 0BD7  
                 u3590 0B91                   u4455 02D2                   u2960 0000                   u4705 04EF  
                 u4625 048E                   u4545 036D                   u3690 0BE6                   u4555 0383  
                 u4395 01C0                   u2965 0620                   u4645 04A0                   u4655 04B6  
                 u4807 1629                   u4817 0AAE                   u4907 0C2C                   u3955 0CB3  
                 u4827 0AC1                   u4917 0B6A                   u4837 0AD4                   u4927 0B71  
                 u4847 0AE9                   u4695 04D7                   u4937 0BB4                   u4857 0AF8  
                 u4947 0BBB                   u4867 0B07                   u4957 0BFB                   u4877 0C13  
                 u4967 0C02                   u4887 0C1A                   u4897 0C25                   _TMR0 0001  
                 _main 15CF                   _ngat 16E1           ___ftpack@arg 0028           ___ftpack@exp 002B  
         lcd_busy@busy 0029                   btemp 007E                   start 000E      ___bmul@multiplier 0033  
         ___ftmul@cntr 0050           ___ftmul@sign 0051           ___fttol@exp1 0042           ___fttol@lval 003E  
       ??_lcd_put_byte 0029                  ?_main 0070                  ?_ngat 0070        __end_of___awdiv 0EAF  
      __end_of___lbdiv 0A23        __end_of___ftadd 15CF        __end_of___awmod 0EEC        __end_of___lbmod 0A3F  
      __end_of___ftdiv 0CD8        __end_of___ftneg 06B8                  _ANSEL 0188        __end_of___lldiv 06B0  
      __end_of___ftmul 0F5B        ___awdiv@divisor 002E        __end_of___llmod 05B9        __end_of___ftsub 06F0  
      __end_of___fttol 0668        ___awdiv@counter 0032         i1___ftadd@exp1 0025         i1___ftadd@exp2 0024  
                _TRISD 0088         i1___ftadd@sign 0023           ___lltoft@exp 0034          ___awtoft@sign 0033  
                _count 00CE                  _scale 0CD8        __end_of_isdigit 05F4          ___ftpack@sign 002C  
                _putch 0575        __end_of_isprint 0C41                  pclath 000A                  status 0003  
                wtemp0 007E     __size_ofi1___ftadd 00C1        ___lbdiv@divisor 002D        ___lbdiv@counter 002F  
       i1___ftpack@arg 0070         i1___ftpack@exp 0073           __end_of_main 16E1           __end_of_ngat 1701  
          ?i1___ftpack 0070          lcd_gotoxy@col 002E          lcd_gotoxy@row 002D                 ??_main 00C1  
        ___fttol@sign1 003D                 ??_ngat 0026   __size_of__tdiv_to_l_ 0077       ___llmod@dividend 0039  
               ?_scale 0052       ___awdiv@dividend 0030       __end_of___awtoft 0C70                 ?_putch 0070  
     __end_of___ftpack 0FA7                 _ANSELH 0189       __end_of___lbtoft 0C55       __end_of___lltoft 06D8  
               i1l1063 0000                 i1l3361 177E                 i1l7000 0000                 i1l7002 0000  
               i1l7004 0000                 i1l6480 0000                 i1l6900 0000                 i1l6484 16F7  
               i1l6902 0000                 i1l6486 0000                 i1l6920 0000                 i1l6912 172C  
               i1l6904 0000                 i1l6930 1749                 i1l6914 0000                 i1l6932 0000  
               i1l6940 1762                 i1l6908 1725                 i1l6950 177A                 i1l6942 1766  
               i1l6926 0000                 i1l6918 173B                 i1l6960 0000                 i1l6944 0000  
               i1l6936 1758                 i1l6928 0000                 i1l6970 0000                 i1l6962 1794  
               i1l6954 0000                 i1l6938 175D                 i1l6980 0000                 i1l6972 0000  
               i1l6964 0000                 i1l6956 1789                 i1l6948 1775                 i1l6990 17D8  
               i1l6982 17CA                 i1l6974 17B0                 i1l6966 0000                 i1l6992 17E2  
               i1l6994 17E7                 i1l6986 17CE                 i1l6978 0000                 i1l6996 17EC  
               i1l6988 17D3                 _TRISA4 042C                 _TRISD1 0441                 _TRISE0 0448  
               _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445  
               _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 0C33       __end_of_lcd_init 0B5D  
     __end_of_lcd_putc 0A9C                 ___bmul 0F5B                 ___ftge 05B9                 ___wmul 05F4  
            ??___awdiv 0032              ??___lbdiv 002E              ??___ftadd 0058              ??___awmod 002C  
            ??___lbmod 0029              ??___ftdiv 003A              ??___ftneg 002B              ??___lldiv 0030  
            ??___ftmul 0049              ??___llmod 003D              ??___ftsub 0064              ??___fttol 003A  
               _count1 00CA                 _count2 00CC                 _fround 0903       ___awdiv@quotient 0034  
      ___awmod@divisor 0028        ___awmod@counter 002C                 _printf 0011          lcd_put_byte@b 0028  
___ftmul@f3_as_product 004D      __end_ofi1___ftadd 17C2              ??_isdigit 0028                 saved_w 007E  
            ??_isprint 0028                 putch@c 0031       ___lbdiv@dividend 002E    __size_ofi1___ftpack 003E  
      ___lbmod@divisor 0028        ___lbmod@counter 002B   __end_of_lcd_put_byte 0C08             ___ftadd@f1 0052  
           ___ftadd@f2 0055             ___ftge@ff1 0028             ___ftge@ff2 002B        i1___ftpack@sign 0074  
           ___ftdiv@f1 0037             ___ftdiv@f2 0034             ___ftdiv@f3 003E             ___ftneg@f1 0028  
           ___awtoft@c 0030             ___lbtoft@c 0046    ___bmul@multiplicand 0031             ___ftmul@f1 0043  
           ___ftmul@f2 0046             ___ftsub@f1 0061             ___ftsub@f2 005E             ___fttol@f1 0036  
       __pcstackCOMMON 0070             ___lltoft@c 0030          __end_of_scale 0E6A          __end_of_putch 057B  
     ___lbdiv@quotient 0030             __div_to_l_ 0837      lcd_gotoxy@address 002F        __div_to_l_@exp1 003B  
      __div_to_l_@cntr 003A                ??_scale 0055        __div_to_l_@quot 0036                ??_putch 0031  
           __pbssBANK1 00C4          __div_to_l_@f1 0028          __div_to_l_@f2 002B             __pmaintext 15CF  
              ?___bmul 0031                ?___ftge 0028                ?___wmul 0028             __pintentry 0004  
              ?_fround 005E              ?___awtoft 0030              ?___ftpack 0028              ?___lbtoft 0043  
              ?_printf 00A0              ?___lltoft 0030             _lcd_gotoxy 0A55              ?_lcd_busy 0070  
            ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4120 0059        __size_of___bmul 000E  
      __size_of___ftge 002C           ??i1___ftpack 0075                ___awdiv 0E6A                ___lbdiv 0A08  
              ___ftadd 150D                ___awmod 0EAF                ___lbmod 0A23                ___ftdiv 0C70  
              ___ftneg 06B0                ___lldiv 0668        __size_of___wmul 0019                ___ftmul 0EEC  
              ___llmod 057B                ___ftsub 06D8                ___fttol 060D             ??___awtoft 0033  
           ??___ftpack 002D             ??___lbtoft 0046        __size_of_fround 0105             ??___lltoft 0034  
      __size_of_printf 0564            ?__div_to_l_ 0028                _dpowers 1054                _isdigit 05E5  
     ___awmod@dividend 002A                _isprint 0C33  __size_of_lcd_put_byte 00AB             ??_lcd_busy 0028  
           ??_lcd_init 002D             ??_lcd_putc 0030   end_of_initialization 0833         lcd_put_byte@rs 002B  
   __end_ofi1___ftpack 1800        ___lldiv@divisor 0028        ___lldiv@counter 0034                printf@c 00C0  
              printf@f 00B0         __tdiv_to_l_@f1 0028         __tdiv_to_l_@f2 002B          ??__tdiv_to_l_ 002E  
         _lcd_put_byte 0B5D       ___lbmod@dividend 002A            ?_lcd_gotoxy 002D              i1___ftadd 1701  
          ___lbmod@rem 002C            printf@integ 00AD            ___ftdiv@exp 0041            printf@width 00B9  
  __size_of__div_to_l_ 00BF            ___ftmul@exp 004C         __end_of___bmul 0F69         __end_of___ftge 05E5  
       __end_of___wmul 060D         __end_of_fround 0A08         __end_of_printf 0575    start_initialization 0826  
  __end_of__tdiv_to_l_ 07F6             ?i1___ftadd 0078        ___llmod@divisor 0035        ___llmod@counter 003D  
             ??___bmul 0032               ??___ftge 002E    __size_of_lcd_gotoxy 0018               ??___wmul 002C  
             ??_fround 0061               ??_printf 00A3             fround@prec 0067      __size_of___awtoft 001B  
    __size_of___ftpack 003E      __size_of___lbtoft 000F      __size_of___lltoft 0020          __pcstackBANK0 0020  
        __pcstackBANK1 00A0           _isdigit$3673 0028      __size_of_lcd_busy 002B      __size_of_lcd_init 00C1  
    __size_of_lcd_putc 002F               ?___awdiv 002E               ?___lbdiv 002D               ?___ftadd 0052  
             ?___awmod 0028              __ptext560 0A55              __ptext561 0A9C              __ptext570 0EAF  
            __ptext562 06B8              __ptext554 0011              __ptext571 0668              __ptext563 0C55  
            __ptext555 0575               ?___lbmod 0028              __ptext580 05F4              __ptext572 05B9  
            __ptext564 0C46              __ptext556 0A6D              __ptext581 0F5B              __ptext573 06B0  
            __ptext565 0EEC              __ptext557 06D8              __ptext582 0837              __ptext574 057B  
            __ptext566 0C70              __ptext558 0CD8              __ptext583 077F              __ptext575 0E6A  
            __ptext567 150D              __ptext559 0903              __ptext584 05E5              __ptext576 060D  
            __ptext568 0C08              __ptext585 0C33              __ptext577 0F69              __ptext569 0B5D  
            __ptext586 16E1              __ptext578 0A23              __ptext587 1701              __ptext579 0A08  
            __ptext588 17C2              __ptext589 0000               ?___ftdiv 0034               ?___ftneg 0028  
             ?___lldiv 0028               ?___ftmul 0043               ?___llmod 0035               ?___ftsub 005E  
            __npowers_ 1006               ?___fttol 0036              __pstrings 1000            __tdiv_to_l_ 077F  
         ??__div_to_l_ 002E               ?_isdigit 0070               ?_isprint 0070            ??i1___ftadd 0020  
       __size_of_scale 0192         __size_of_putch 0006      interrupt_function 0004         ___wmul@product 002C  
   __end_of__div_to_l_ 08F6            __stringbase 1005      ___wmul@multiplier 0028             printf@_val 00B1  
           printf@flag 00B5             printf@fval 00BB             printf@prec 00BE              lcd_putc@c 0030  
         ??_lcd_gotoxy 002E       lcd_put_byte@temp 002C           _isprint$3676 0028     __end_of_lcd_gotoxy 0A6D  
     __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftdiv 0068       __size_of___ftneg 0008       __size_of___lldiv 0048  
     __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0018       __size_of___fttol 005B  
             ___awtoft 0C55               ___ftpack 0F69               ___lbtoft 0C46            _fround$4118 0064  
          _fround$4119 0061               ___lltoft 06B8       __size_of_isdigit 000F       __size_of_isprint 000E  
             __powers_ 102D               _lcd_busy 0C08               _lcd_init 0A9C               _lcd_putc 0A6D  
        __size_of_main 0112          __size_of_ngat 0020              printf@exp 00B7               isdigit@c 0029  
             scale@scl 005C               intlevel1 0000       __tdiv_to_l_@exp1 0036       __tdiv_to_l_@cntr 0035  
     __tdiv_to_l_@quot 0031       ___lldiv@dividend 002C               isprint@c 0029              stringcode 1000  
             printf@ap 00AC           ?__tdiv_to_l_ 0028            _printf$3165 00A8       ___lldiv@quotient 0030  
             stringdir 1000               stringtab 1000  
