

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 18 11:11:57 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text807,local,class=CODE,delta=2
    14                           	psect	text810,local,class=CODE,delta=2
    15                           	psect	text812,local,class=CODE,delta=2
    16                           	psect	text813,local,class=CODE,delta=2
    17                           	psect	text822,local,class=CODE,delta=2
    18                           	psect	text835,local,class=CODE,delta=2
    19                           	psect	text839,local,class=CODE,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text840,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E3C2               	dw	58306	;#
    28                           
    29                           	psect	strings
    30  1000                     __pstrings:	
    31  1000                     stringtab:	
    32                           ;	global	stringdir,stringtab,__stringbase
    33                           
    34  1000                     stringcode:	
    35                           ;	String table - string pointers are 1 byte each
    36                           
    37  1000                     stringdir:	
    38  1000  3010               	movlw	high stringdir
    39  1001  008A               	movwf	10
    40  1002  0804               	movf	4,w
    41  1003  0A84               	incf	4,f
    42  1004  0782               	addwf	2,f
    43  1005                     __stringbase:	
    44  1005  3400               	retlw	0
    45  1006                     __npowers_:	
    46  1006  3400               	retlw	0
    47  1007  3480               	retlw	128
    48  1008  343F               	retlw	63
    49  1009  34CD               	retlw	205
    50  100A  34CC               	retlw	204
    51  100B  343D               	retlw	61
    52  100C  34D7               	retlw	215
    53  100D  3423               	retlw	35
    54  100E  343C               	retlw	60
    55  100F  3412               	retlw	18
    56  1010  3483               	retlw	131
    57  1011  343A               	retlw	58
    58  1012  34B7               	retlw	183
    59  1013  34D1               	retlw	209
    60  1014  3438               	retlw	56
    61  1015  34C6               	retlw	198
    62  1016  3427               	retlw	39
    63  1017  3437               	retlw	55
    64  1018  3438               	retlw	56
    65  1019  3486               	retlw	134
    66  101A  3435               	retlw	53
    67  101B  34C0               	retlw	192
    68  101C  34D6               	retlw	214
    69  101D  3433               	retlw	51
    70  101E  34CC               	retlw	204
    71  101F  342B               	retlw	43
    72  1020  3432               	retlw	50
    73  1021  3470               	retlw	112
    74  1022  3489               	retlw	137
    75  1023  3430               	retlw	48
    76  1024  34E7               	retlw	231
    77  1025  34DB               	retlw	219
    78  1026  342E               	retlw	46
    79  1027  34E5               	retlw	229
    80  1028  343C               	retlw	60
    81  1029  341E               	retlw	30
    82  102A  3442               	retlw	66
    83  102B  34A2               	retlw	162
    84  102C  340D               	retlw	13
    85  102D                     __powers_:	
    86  102D  3400               	retlw	0
    87  102E  3480               	retlw	128
    88  102F  343F               	retlw	63
    89  1030  3400               	retlw	0
    90  1031  3420               	retlw	32
    91  1032  3441               	retlw	65
    92  1033  3400               	retlw	0
    93  1034  34C8               	retlw	200
    94  1035  3442               	retlw	66
    95  1036  3400               	retlw	0
    96  1037  347A               	retlw	122
    97  1038  3444               	retlw	68
    98  1039  3440               	retlw	64
    99  103A  341C               	retlw	28
   100  103B  3446               	retlw	70
   101  103C  3450               	retlw	80
   102  103D  34C3               	retlw	195
   103  103E  3447               	retlw	71
   104  103F  3424               	retlw	36
   105  1040  3474               	retlw	116
   106  1041  3449               	retlw	73
   107  1042  3497               	retlw	151
   108  1043  3418               	retlw	24
   109  1044  344B               	retlw	75
   110  1045  34BC               	retlw	188
   111  1046  34BE               	retlw	190
   112  1047  344C               	retlw	76
   113  1048  346B               	retlw	107
   114  1049  346E               	retlw	110
   115  104A  344E               	retlw	78
   116  104B  3403               	retlw	3
   117  104C  3415               	retlw	21
   118  104D  3450               	retlw	80
   119  104E  3479               	retlw	121
   120  104F  34AD               	retlw	173
   121  1050  3460               	retlw	96
   122  1051  34F3               	retlw	243
   123  1052  3449               	retlw	73
   124  1053  3471               	retlw	113
   125  1054                     _dpowers:	
   126  1054  3401               	retlw	1
   127  1055  3400               	retlw	0
   128  1056  3400               	retlw	0
   129  1057  3400               	retlw	0
   130  1058  340A               	retlw	10
   131  1059  3400               	retlw	0
   132  105A  3400               	retlw	0
   133  105B  3400               	retlw	0
   134  105C  3464               	retlw	100
   135  105D  3400               	retlw	0
   136  105E  3400               	retlw	0
   137  105F  3400               	retlw	0
   138  1060  34E8               	retlw	232
   139  1061  3403               	retlw	3
   140  1062  3400               	retlw	0
   141  1063  3400               	retlw	0
   142  1064  3410               	retlw	16
   143  1065  3427               	retlw	39
   144  1066  3400               	retlw	0
   145  1067  3400               	retlw	0
   146  1068  34A0               	retlw	160
   147  1069  3486               	retlw	134
   148  106A  3401               	retlw	1
   149  106B  3400               	retlw	0
   150  106C  3440               	retlw	64
   151  106D  3442               	retlw	66
   152  106E  340F               	retlw	15
   153  106F  3400               	retlw	0
   154  1070  3480               	retlw	128
   155  1071  3496               	retlw	150
   156  1072  3498               	retlw	152
   157  1073  3400               	retlw	0
   158  1074  3400               	retlw	0
   159  1075  34E1               	retlw	225
   160  1076  34F5               	retlw	245
   161  1077  3405               	retlw	5
   162  1078  3400               	retlw	0
   163  1079  34CA               	retlw	202
   164  107A  349A               	retlw	154
   165  107B  343B               	retlw	59
   166  000E                     _TMR1	set	14
   167  0017                     _CCP1CON	set	23
   168  0015                     _CCPR1L	set	21
   169  0001                     _TMR0	set	1
   170  0011                     _TMR2	set	17
   171  00BC                     _DC1B0	set	188
   172  00BD                     _DC1B1	set	189
   173  005F                     _GIE	set	95
   174  005E                     _PEIE	set	94
   175  0041                     _RD1	set	65
   176  0042                     _RD2	set	66
   177  0043                     _RD3	set	67
   178  0044                     _RD4	set	68
   179  0045                     _RD5	set	69
   180  0046                     _RD6	set	70
   181  0047                     _RD7	set	71
   182  0049                     _RE1	set	73
   183  005D                     _T0IE	set	93
   184  005A                     _T0IF	set	90
   185  0084                     _T1CKPS0	set	132
   186  0085                     _T1CKPS1	set	133
   187  0082                     _T1SYNC	set	130
   188  0090                     _T2CKPS0	set	144
   189  0091                     _T2CKPS1	set	145
   190  0081                     _TMR1CS	set	129
   191  0086                     _TMR1GE	set	134
   192  0080                     _TMR1ON	set	128
   193  0092                     _TMR2ON	set	146
   194  0092                     _PR2	set	146
   195  0408                     _PS0	set	1032
   196  0409                     _PS1	set	1033
   197  040A                     _PS2	set	1034
   198  040B                     _PSA	set	1035
   199  040D                     _T0CS	set	1037
   200  043A                     _TRISC2	set	1082
   201  0441                     _TRISD1	set	1089
   202  0442                     _TRISD2	set	1090
   203  0443                     _TRISD3	set	1091
   204  0444                     _TRISD4	set	1092
   205  0445                     _TRISD5	set	1093
   206  0446                     _TRISD6	set	1094
   207  0447                     _TRISD7	set	1095
   208  0448                     _TRISE0	set	1096
   209  0449                     _TRISE1	set	1097
   210  044A                     _TRISE2	set	1098
   211  0188                     _ANSEL	set	392
   212  0189                     _ANSELH	set	393
   213  107C                     STR_2:	
   214  107C  3478               	retlw	120	;'x'
   215  107D  3475               	retlw	117	;'u'
   216  107E  346E               	retlw	110	;'n'
   217  107F  3467               	retlw	103	;'g'
   218  1080  343A               	retlw	58	;':'
   219  1081  3420               	retlw	32	;' '
   220  1082  3425               	retlw	37	;'%'
   221  1083  3430               	retlw	48	;'0'
   222  1084  3435               	retlw	53	;'5'
   223  1085  3464               	retlw	100	;'d'
   224  1086  3400               	retlw	0
   225  1087                     STR_1:	
   226  1087  3476               	retlw	118	;'v'
   227  1088  343A               	retlw	58	;':'
   228  1089  3420               	retlw	32	;' '
   229  108A  3425               	retlw	37	;'%'
   230  108B  3433               	retlw	51	;'3'
   231  108C  342E               	retlw	46	;'.'
   232  108D  3432               	retlw	50	;'2'
   233  108E  3466               	retlw	102	;'f'
   234  108F  3400               	retlw	0
   235                           
   236                           	psect	cinit
   237  07D2                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  07D2  01FA               	clrf	__pbssCOMMON& (0+127)
   241  07D3  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   242                           
   243                           ; Clear objects allocated to BANK0
   244  07D4  01E2               	clrf	__pbssBANK0& (0+127)
   245  07D5  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   246  07D6  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   247  07D7  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   248  07D8  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   249  07D9  01E7               	clrf	(__pbssBANK0+5)& (0+127)
   250  07DA  01E8               	clrf	(__pbssBANK0+6)& (0+127)
   251  07DB                     end_of_initialization:	
   252                           ;End of C runtime variable initialization code
   253                           
   254  07DB  0183               	clrf	3
   255  07DC  120A  158A  281F   	ljmp	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMMON
   258  007A                     __pbssCOMMON:	
   259  007A                     _dem:	
   260  007A                     	ds	2
   261                           
   262                           	psect	bssBANK0
   263  0062                     __pbssBANK0:	
   264  0062                     _v:	
   265  0062                     	ds	3
   266  0065                     _pwm_t:	
   267  0065                     	ds	2
   268  0067                     _xung:	
   269  0067                     	ds	2
   270                           
   271                           	psect	cstackBANK1
   272  00A0                     __pcstackBANK1:	
   273  00A0                     _printf$3168:	
   274                           
   275                           ; 4 bytes @ 0x0
   276  00A0                     	ds	4
   277  00A4                     printf@ap:	
   278                           
   279                           ; 1 bytes @ 0x4
   280  00A4                     	ds	1
   281  00A5                     printf@integ:	
   282                           
   283                           ; 3 bytes @ 0x5
   284  00A5                     	ds	3
   285  00A8                     printf@f:	
   286                           
   287                           ; 1 bytes @ 0x8
   288  00A8                     	ds	1
   289  00A9                     printf@_val:	
   290                           
   291                           ; 4 bytes @ 0x9
   292  00A9                     	ds	4
   293  00AD                     printf@flag:	
   294                           
   295                           ; 2 bytes @ 0xD
   296  00AD                     	ds	2
   297  00AF                     printf@exp:	
   298                           
   299                           ; 2 bytes @ 0xF
   300  00AF                     	ds	2
   301  00B1                     printf@width:	
   302                           
   303                           ; 2 bytes @ 0x11
   304  00B1                     	ds	2
   305  00B3                     printf@fval:	
   306                           
   307                           ; 3 bytes @ 0x13
   308  00B3                     	ds	3
   309  00B6                     printf@prec:	
   310                           
   311                           ; 2 bytes @ 0x16
   312  00B6                     	ds	2
   313  00B8                     printf@c:	
   314                           
   315                           ; 1 bytes @ 0x18
   316  00B8                     	ds	1
   317                           
   318                           	psect	cstackCOMMON
   319  0070                     __pcstackCOMMON:	
   320  0070                     ?_lcd_init:	
   321  0070                     ?_lcd_putc:	
   322                           ; 0 bytes @ 0x0
   323                           
   324  0070                     ?_isprint:	
   325                           ; 0 bytes @ 0x0
   326                           
   327  0070                     ?_isdigit:	
   328                           ; 1 bit 
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bit 
   332                           
   333  0070                     ?_ngat:	
   334                           ; 0 bytes @ 0x0
   335                           
   336  0070                     ??_ngat:	
   337                           ; 0 bytes @ 0x0
   338                           
   339  0070                     ?_putch:	
   340                           ; 0 bytes @ 0x0
   341                           
   342  0070                     ?_lcd_busy:	
   343                           ; 0 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	2
   348  0072                     ?_lcd_put_byte:	
   349  0072                     ??_lcd_busy:	
   350                           ; 0 bytes @ 0x2
   351                           
   352  0072                     ??_isprint:	
   353                           ; 0 bytes @ 0x2
   354                           
   355  0072                     ??_isdigit:	
   356                           ; 0 bytes @ 0x2
   357                           
   358  0072                     ?___ftge:	
   359                           ; 0 bytes @ 0x2
   360                           
   361  0072                     ?___lbmod:	
   362                           ; 1 bit 
   363                           
   364  0072                     ?___wmul:	
   365                           ; 1 bytes @ 0x2
   366                           
   367  0072                     ?___awmod:	
   368                           ; 2 bytes @ 0x2
   369                           
   370  0072                     ?___ftpack:	
   371                           ; 2 bytes @ 0x2
   372                           
   373  0072                     ?___ftneg:	
   374                           ; 3 bytes @ 0x2
   375                           
   376  0072                     ?__tdiv_to_l_:	
   377                           ; 3 bytes @ 0x2
   378                           
   379  0072                     ?__div_to_l_:	
   380                           ; 4 bytes @ 0x2
   381                           
   382  0072                     ?___lldiv:	
   383                           ; 4 bytes @ 0x2
   384                           
   385  0072                     lcd_put_byte@b:	
   386                           ; 4 bytes @ 0x2
   387                           
   388  0072                     _isdigit$3676:	
   389                           ; 1 bytes @ 0x2
   390                           
   391  0072                     _isprint$3679:	
   392                           ; 1 bytes @ 0x2
   393                           
   394  0072                     ___lbmod@divisor:	
   395                           ; 1 bytes @ 0x2
   396                           
   397  0072                     ___wmul@multiplier:	
   398                           ; 1 bytes @ 0x2
   399                           
   400  0072                     ___awmod@divisor:	
   401                           ; 2 bytes @ 0x2
   402                           
   403  0072                     ___ftneg@f1:	
   404                           ; 2 bytes @ 0x2
   405                           
   406  0072                     ___ftge@ff1:	
   407                           ; 3 bytes @ 0x2
   408                           
   409  0072                     __tdiv_to_l_@f1:	
   410                           ; 3 bytes @ 0x2
   411                           
   412  0072                     __div_to_l_@f1:	
   413                           ; 3 bytes @ 0x2
   414                           
   415  0072                     ___ftpack@arg:	
   416                           ; 3 bytes @ 0x2
   417                           
   418  0072                     ___lldiv@divisor:	
   419                           ; 3 bytes @ 0x2
   420                           
   421                           
   422                           ; 4 bytes @ 0x2
   423  0072                     	ds	1
   424  0073                     ??_lcd_put_byte:	
   425  0073                     ??___lbmod:	
   426                           ; 0 bytes @ 0x3
   427                           
   428  0073                     lcd_busy@busy:	
   429                           ; 0 bytes @ 0x3
   430                           
   431  0073                     isdigit@c:	
   432                           ; 1 bytes @ 0x3
   433                           
   434  0073                     isprint@c:	
   435                           ; 1 bytes @ 0x3
   436                           
   437                           
   438                           ; 1 bytes @ 0x3
   439  0073                     	ds	1
   440  0074                     ___lbmod@dividend:	
   441  0074                     ___wmul@multiplicand:	
   442                           ; 1 bytes @ 0x4
   443                           
   444  0074                     ___awmod@dividend:	
   445                           ; 2 bytes @ 0x4
   446                           
   447                           
   448                           ; 2 bytes @ 0x4
   449  0074                     	ds	1
   450  0075                     ??___ftneg:	
   451  0075                     lcd_put_byte@rs:	
   452                           ; 0 bytes @ 0x5
   453                           
   454  0075                     ___lbmod@counter:	
   455                           ; 1 bytes @ 0x5
   456                           
   457  0075                     ___ftpack@exp:	
   458                           ; 1 bytes @ 0x5
   459                           
   460  0075                     ___ftge@ff2:	
   461                           ; 1 bytes @ 0x5
   462                           
   463  0075                     __tdiv_to_l_@f2:	
   464                           ; 3 bytes @ 0x5
   465                           
   466  0075                     __div_to_l_@f2:	
   467                           ; 3 bytes @ 0x5
   468                           
   469                           
   470                           ; 3 bytes @ 0x5
   471  0075                     	ds	1
   472  0076                     ??___wmul:	
   473  0076                     ??___awmod:	
   474                           ; 0 bytes @ 0x6
   475                           
   476  0076                     lcd_put_byte@temp:	
   477                           ; 0 bytes @ 0x6
   478                           
   479  0076                     ___lbmod@rem:	
   480                           ; 1 bytes @ 0x6
   481                           
   482  0076                     ___awmod@counter:	
   483                           ; 1 bytes @ 0x6
   484                           
   485  0076                     ___ftpack@sign:	
   486                           ; 1 bytes @ 0x6
   487                           
   488  0076                     ___wmul@product:	
   489                           ; 1 bytes @ 0x6
   490                           
   491  0076                     ___lldiv@dividend:	
   492                           ; 2 bytes @ 0x6
   493                           
   494                           
   495                           ; 4 bytes @ 0x6
   496  0076                     	ds	1
   497  0077                     ??_lcd_init:	
   498  0077                     ?_lcd_gotoxy:	
   499                           ; 0 bytes @ 0x7
   500                           
   501  0077                     ??___ftpack:	
   502                           ; 0 bytes @ 0x7
   503                           
   504  0077                     ?___lbdiv:	
   505                           ; 0 bytes @ 0x7
   506                           
   507  0077                     lcd_gotoxy@row:	
   508                           ; 1 bytes @ 0x7
   509                           
   510  0077                     ___lbdiv@divisor:	
   511                           ; 1 bytes @ 0x7
   512                           
   513  0077                     ___awmod@sign:	
   514                           ; 1 bytes @ 0x7
   515                           
   516                           
   517                           ; 1 bytes @ 0x7
   518  0077                     	ds	1
   519  0078                     ??_pwm_10bit:	
   520  0078                     ??_lcd_gotoxy:	
   521                           ; 0 bytes @ 0x8
   522                           
   523  0078                     ??___lbdiv:	
   524                           ; 0 bytes @ 0x8
   525                           
   526  0078                     ??___awdiv:	
   527                           ; 0 bytes @ 0x8
   528                           
   529  0078                     ??___ftge:	
   530                           ; 0 bytes @ 0x8
   531                           
   532  0078                     ?___bmul:	
   533                           ; 0 bytes @ 0x8
   534                           
   535  0078                     lcd_gotoxy@col:	
   536                           ; 1 bytes @ 0x8
   537                           
   538  0078                     ___bmul@multiplicand:	
   539                           ; 1 bytes @ 0x8
   540                           
   541                           
   542                           ; 1 bytes @ 0x8
   543  0078                     	ds	1
   544  0079                     ??___bmul:	
   545  0079                     lcd_gotoxy@address:	
   546                           ; 0 bytes @ 0x9
   547                           
   548                           
   549                           ; 1 bytes @ 0x9
   550  0079                     	ds	1
   551  007A                     ??_lcd_putc:	
   552  007A                     ??_main:	
   553                           ; 0 bytes @ 0xA
   554                           
   555  007A                     ??_putch:	
   556                           ; 0 bytes @ 0xA
   557                           
   558  007A                     ??_fround:	
   559                           ; 0 bytes @ 0xA
   560                           
   561  007A                     ??___ftsub:	
   562                           ; 0 bytes @ 0xA
   563                           
   564  007A                     ??___awtoft:	
   565                           ; 0 bytes @ 0xA
   566                           
   567  007A                     ??___llmod:	
   568                           ; 0 bytes @ 0xA
   569                           
   570  007A                     ??___lldiv:	
   571                           ; 0 bytes @ 0xA
   572                           
   573  007A                     ??___lltoft:	
   574                           ; 0 bytes @ 0xA
   575                           
   576                           
   577                           	psect	cstackBANK0
   578  0020                     __pcstackBANK0:	
   579                           ; 0 bytes @ 0xA
   580                           
   581  0020                     ??__tdiv_to_l_:	
   582  0020                     ??__div_to_l_:	
   583                           ; 0 bytes @ 0x0
   584                           
   585  0020                     ?___awdiv:	
   586                           ; 0 bytes @ 0x0
   587                           
   588  0020                     ?___awtoft:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  0020                     ?___lltoft:	
   592                           ; 3 bytes @ 0x0
   593                           
   594  0020                     lcd_putc@c:	
   595                           ; 3 bytes @ 0x0
   596                           
   597  0020                     ___lbdiv@dividend:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0020                     ___awtoft@c:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0020                     ___awdiv@divisor:	
   604                           ; 2 bytes @ 0x0
   605                           
   606  0020                     ___lldiv@quotient:	
   607                           ; 2 bytes @ 0x0
   608                           
   609  0020                     ___lltoft@c:	
   610                           ; 4 bytes @ 0x0
   611                           
   612                           
   613                           ; 4 bytes @ 0x0
   614  0020                     	ds	1
   615  0021                     putch@c:	
   616  0021                     ___lbdiv@counter:	
   617                           ; 1 bytes @ 0x1
   618                           
   619                           
   620                           ; 1 bytes @ 0x1
   621  0021                     	ds	1
   622  0022                     ___lbdiv@quotient:	
   623  0022                     ___awdiv@dividend:	
   624                           ; 1 bytes @ 0x2
   625                           
   626                           
   627                           ; 2 bytes @ 0x2
   628  0022                     	ds	1
   629  0023                     ___bmul@product:	
   630  0023                     ___awtoft@sign:	
   631                           ; 1 bytes @ 0x3
   632                           
   633  0023                     __tdiv_to_l_@quot:	
   634                           ; 1 bytes @ 0x3
   635                           
   636                           
   637                           ; 4 bytes @ 0x3
   638  0023                     	ds	1
   639  0024                     ?___ftdiv:	
   640  0024                     ___bmul@multiplier:	
   641                           ; 3 bytes @ 0x4
   642                           
   643  0024                     ___awdiv@counter:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0024                     ___lldiv@counter:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0024                     ___lltoft@exp:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0024                     ___ftdiv@f2:	
   653                           ; 1 bytes @ 0x4
   654                           
   655                           
   656                           ; 3 bytes @ 0x4
   657  0024                     	ds	1
   658  0025                     ?___llmod:	
   659  0025                     ___awdiv@sign:	
   660                           ; 4 bytes @ 0x5
   661                           
   662  0025                     ___llmod@divisor:	
   663                           ; 1 bytes @ 0x5
   664                           
   665                           
   666                           ; 4 bytes @ 0x5
   667  0025                     	ds	1
   668  0026                     ___awdiv@quotient:	
   669                           
   670                           ; 2 bytes @ 0x6
   671  0026                     	ds	1
   672  0027                     __tdiv_to_l_@cntr:	
   673  0027                     ___ftdiv@f1:	
   674                           ; 1 bytes @ 0x7
   675                           
   676                           
   677                           ; 3 bytes @ 0x7
   678  0027                     	ds	1
   679  0028                     ?_pwm_10bit:	
   680  0028                     ?___fttol:	
   681                           ; 0 bytes @ 0x8
   682                           
   683  0028                     __tdiv_to_l_@exp1:	
   684                           ; 4 bytes @ 0x8
   685                           
   686  0028                     pwm_10bit@pwm:	
   687                           ; 1 bytes @ 0x8
   688                           
   689  0028                     ___fttol@f1:	
   690                           ; 2 bytes @ 0x8
   691                           
   692  0028                     __div_to_l_@quot:	
   693                           ; 3 bytes @ 0x8
   694                           
   695                           
   696                           ; 4 bytes @ 0x8
   697  0028                     	ds	1
   698  0029                     ___llmod@dividend:	
   699                           
   700                           ; 4 bytes @ 0x9
   701  0029                     	ds	1
   702  002A                     ??___ftdiv:	
   703                           
   704                           ; 0 bytes @ 0xA
   705  002A                     	ds	2
   706  002C                     ??___fttol:	
   707  002C                     __div_to_l_@cntr:	
   708                           ; 0 bytes @ 0xC
   709                           
   710                           
   711                           ; 1 bytes @ 0xC
   712  002C                     	ds	1
   713  002D                     ___ftdiv@cntr:	
   714  002D                     ___llmod@counter:	
   715                           ; 1 bytes @ 0xD
   716                           
   717  002D                     __div_to_l_@exp1:	
   718                           ; 1 bytes @ 0xD
   719                           
   720                           
   721                           ; 1 bytes @ 0xD
   722  002D                     	ds	1
   723  002E                     ___ftdiv@f3:	
   724                           
   725                           ; 3 bytes @ 0xE
   726  002E                     	ds	1
   727  002F                     ___fttol@sign1:	
   728                           
   729                           ; 1 bytes @ 0xF
   730  002F                     	ds	1
   731  0030                     ___fttol@lval:	
   732                           
   733                           ; 4 bytes @ 0x10
   734  0030                     	ds	1
   735  0031                     ___ftdiv@exp:	
   736                           
   737                           ; 1 bytes @ 0x11
   738  0031                     	ds	1
   739  0032                     ___ftdiv@sign:	
   740                           
   741                           ; 1 bytes @ 0x12
   742  0032                     	ds	2
   743  0034                     ___fttol@exp1:	
   744                           
   745                           ; 1 bytes @ 0x14
   746  0034                     	ds	1
   747  0035                     ?___ftmul:	
   748  0035                     ___ftmul@f1:	
   749                           ; 3 bytes @ 0x15
   750                           
   751                           
   752                           ; 3 bytes @ 0x15
   753  0035                     	ds	3
   754  0038                     ___ftmul@f2:	
   755                           
   756                           ; 3 bytes @ 0x18
   757  0038                     	ds	3
   758  003B                     ??___ftmul:	
   759                           
   760                           ; 0 bytes @ 0x1B
   761  003B                     	ds	3
   762  003E                     ___ftmul@exp:	
   763                           
   764                           ; 1 bytes @ 0x1E
   765  003E                     	ds	1
   766  003F                     ___ftmul@f3_as_product:	
   767                           
   768                           ; 3 bytes @ 0x1F
   769  003F                     	ds	3
   770  0042                     ___ftmul@cntr:	
   771                           
   772                           ; 1 bytes @ 0x22
   773  0042                     	ds	1
   774  0043                     ___ftmul@sign:	
   775                           
   776                           ; 1 bytes @ 0x23
   777  0043                     	ds	1
   778  0044                     ?_scale:	
   779  0044                     ?___ftadd:	
   780                           ; 3 bytes @ 0x24
   781                           
   782  0044                     ___ftadd@f1:	
   783                           ; 3 bytes @ 0x24
   784                           
   785                           
   786                           ; 3 bytes @ 0x24
   787  0044                     	ds	3
   788  0047                     ??_scale:	
   789  0047                     ___ftadd@f2:	
   790                           ; 0 bytes @ 0x27
   791                           
   792                           
   793                           ; 3 bytes @ 0x27
   794  0047                     	ds	3
   795  004A                     ??___ftadd:	
   796                           
   797                           ; 0 bytes @ 0x2A
   798  004A                     	ds	1
   799  004B                     _scale$4118:	
   800                           
   801                           ; 3 bytes @ 0x2B
   802  004B                     	ds	2
   803  004D                     ___ftadd@sign:	
   804                           
   805                           ; 1 bytes @ 0x2D
   806  004D                     	ds	1
   807  004E                     scale@scl:	
   808  004E                     ___ftadd@exp2:	
   809                           ; 1 bytes @ 0x2E
   810                           
   811                           
   812                           ; 1 bytes @ 0x2E
   813  004E                     	ds	1
   814  004F                     ___ftadd@exp1:	
   815                           
   816                           ; 1 bytes @ 0x2F
   817  004F                     	ds	1
   818  0050                     ?_fround:	
   819  0050                     ?___ftsub:	
   820                           ; 3 bytes @ 0x30
   821                           
   822  0050                     ___ftsub@f2:	
   823                           ; 3 bytes @ 0x30
   824                           
   825                           
   826                           ; 3 bytes @ 0x30
   827  0050                     	ds	3
   828  0053                     ___ftsub@f1:	
   829  0053                     _fround$4117:	
   830                           ; 3 bytes @ 0x33
   831                           
   832                           
   833                           ; 3 bytes @ 0x33
   834  0053                     	ds	3
   835  0056                     _fround$4116:	
   836                           
   837                           ; 3 bytes @ 0x36
   838  0056                     	ds	3
   839  0059                     fround@prec:	
   840                           
   841                           ; 1 bytes @ 0x39
   842  0059                     	ds	1
   843  005A                     ?_printf:	
   844                           
   845                           ; 2 bytes @ 0x3A
   846  005A                     	ds	3
   847  005D                     ??_printf:	
   848                           
   849                           ; 0 bytes @ 0x3D
   850  005D                     	ds	5
   851                           
   852                           	psect	maintext
   853  081F                     __pmaintext:	
   854 ;;Data sizes: Strings 20, constant 118, data 0, bss 9, persistent 0 stack 0
   855 ;;Auto spaces:   Size  Autos    Used
   856 ;; COMMON          14     10      12
   857 ;; BANK0           80     66      73
   858 ;; BANK1           80     25      25
   859 ;; BANK3           96      0       0
   860 ;; BANK2           96      0       0
   861 ;;
   862 ;; Pointer list with targets:
   863 ;; ?___ftpack	float  size(1) Largest target is 0
   864 ;;
   865 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   866 ;;
   867 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   868 ;;
   869 ;; ?___ftsub	float  size(1) Largest target is 0
   870 ;;
   871 ;; ?___lltoft	float  size(1) Largest target is 0
   872 ;;
   873 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   874 ;;
   875 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   876 ;;
   877 ;; ?___fttol	long  size(1) Largest target is 0
   878 ;;
   879 ;; ?___ftadd	float  size(1) Largest target is 0
   880 ;;
   881 ;; ?___ftneg	float  size(1) Largest target is 0
   882 ;;
   883 ;; ?___awmod	int  size(1) Largest target is 40
   884 ;;		 -> dpowers(CODE[40]), 
   885 ;;
   886 ;; ?_scale	int  size(1) Largest target is 0
   887 ;;
   888 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   889 ;;
   890 ;; ?_fround	unsigned int  size(1) Largest target is 0
   891 ;;
   892 ;; ?___awdiv	int  size(1) Largest target is 0
   893 ;;
   894 ;; ?___ftdiv	float  size(1) Largest target is 0
   895 ;;
   896 ;; ?___awtoft	float  size(1) Largest target is 0
   897 ;;
   898 ;; ?___ftmul	float  size(1) Largest target is 0
   899 ;;
   900 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   901 ;;		 -> STR_2(CODE[11]), STR_1(CODE[9]), 
   902 ;;
   903 ;; ?_printf	int  size(1) Largest target is 0
   904 ;;
   905 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   906 ;;		 -> ?_printf(BANK0[2]), 
   907 ;;
   908 ;; S3157$_cp	PTR const unsigned char  size(1) Largest target is 0
   909 ;;
   910 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   911 ;;
   912 ;;
   913 ;; Critical Paths under _main in COMMON
   914 ;;
   915 ;;   _main->_lcd_init
   916 ;;   _main->_lcd_gotoxy
   917 ;;   _printf->___lldiv
   918 ;;   _lcd_putc->_lcd_gotoxy
   919 ;;   _lcd_gotoxy->_lcd_put_byte
   920 ;;   _lcd_init->_lcd_put_byte
   921 ;;   ___lltoft->___ftpack
   922 ;;   ___awtoft->___ftpack
   923 ;;   ___ftmul->___ftpack
   924 ;;   ___ftdiv->___ftpack
   925 ;;   ___ftadd->___ftpack
   926 ;;   ___llmod->___lldiv
   927 ;;   ___awdiv->___awmod
   928 ;;   ___fttol->___ftpack
   929 ;;   ___lbdiv->___lbmod
   930 ;;   ___bmul->___lbdiv
   931 ;;
   932 ;; Critical Paths under _ngat in COMMON
   933 ;;
   934 ;;   None.
   935 ;;
   936 ;; Critical Paths under _main in BANK0
   937 ;;
   938 ;;   _main->_printf
   939 ;;   _printf->_fround
   940 ;;   _putch->_lcd_putc
   941 ;;   ___ftsub->___ftadd
   942 ;;   _scale->___ftmul
   943 ;;   _fround->___ftadd
   944 ;;   ___ftmul->___fttol
   945 ;;   ___ftdiv->___awtoft
   946 ;;   ___ftadd->___ftmul
   947 ;;   _pwm_10bit->___awdiv
   948 ;;   ___llmod->___lldiv
   949 ;;   ___fttol->___awdiv
   950 ;;   ___bmul->___lbdiv
   951 ;;
   952 ;; Critical Paths under _ngat in BANK0
   953 ;;
   954 ;;   None.
   955 ;;
   956 ;; Critical Paths under _main in BANK1
   957 ;;
   958 ;;   _main->_printf
   959 ;;
   960 ;; Critical Paths under _ngat in BANK1
   961 ;;
   962 ;;   None.
   963 ;;
   964 ;; Critical Paths under _main in BANK3
   965 ;;
   966 ;;   None.
   967 ;;
   968 ;; Critical Paths under _ngat in BANK3
   969 ;;
   970 ;;   None.
   971 ;;
   972 ;; Critical Paths under _main in BANK2
   973 ;;
   974 ;;   None.
   975 ;;
   976 ;; Critical Paths under _ngat in BANK2
   977 ;;
   978 ;;   None.
   979 ;;
   980 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   981 ;;
   982 ;;
   983 ;;Call Graph Tables:
   984 ;;
   985 ;; ---------------------------------------------------------------------------------
   986 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (0) _main                                                 0     0      0   18750
   989 ;;                           _lcd_init
   990 ;;                          _pwm_10bit
   991 ;;                           ___awtoft
   992 ;;                            ___ftdiv
   993 ;;                            ___ftmul
   994 ;;                             ___ftge
   995 ;;                         _lcd_gotoxy
   996 ;;                             _printf
   997 ;; ---------------------------------------------------------------------------------
   998 ;; (1) _printf                                              37    34      3   15303
   999 ;;                                             58 BANK0      8     5      3
  1000 ;;                                              0 BANK1     25    25      0
  1001 ;;                              _putch
  1002 ;;                            _isdigit
  1003 ;;                             ___wmul
  1004 ;;                             ___ftge
  1005 ;;                            ___ftneg
  1006 ;;                            ___awdiv
  1007 ;;                              _scale
  1008 ;;                            ___ftmul
  1009 ;;                             _fround
  1010 ;;                            ___ftadd
  1011 ;;                            ___fttol
  1012 ;;                         __div_to_l_
  1013 ;;                        __tdiv_to_l_
  1014 ;;                           ___lltoft
  1015 ;;                            ___ftsub
  1016 ;;                            ___lldiv
  1017 ;;                            ___llmod
  1018 ;; ---------------------------------------------------------------------------------
  1019 ;; (2) _putch                                                1     1      0    1019
  1020 ;;                                              1 BANK0      1     1      0
  1021 ;;                           _lcd_putc
  1022 ;; ---------------------------------------------------------------------------------
  1023 ;; (3) _lcd_putc                                             1     1      0     988
  1024 ;;                                              0 BANK0      1     1      0
  1025 ;;                       _lcd_put_byte
  1026 ;;                           _lcd_busy
  1027 ;;                         _lcd_gotoxy
  1028 ;;                            _isprint
  1029 ;; ---------------------------------------------------------------------------------
  1030 ;; (2) ___ftsub                                              6     0      6    1602
  1031 ;;                                             48 BANK0      6     0      6
  1032 ;;                            ___ftadd
  1033 ;;                           ___lltoft (ARG)
  1034 ;; ---------------------------------------------------------------------------------
  1035 ;; (2) _scale                                               14    11      3    2306
  1036 ;;                                             36 BANK0     11     8      3
  1037 ;;                            ___awmod
  1038 ;;                            ___awdiv
  1039 ;;                            ___ftmul
  1040 ;;                             ___bmul
  1041 ;;                            ___fttol (ARG)
  1042 ;; ---------------------------------------------------------------------------------
  1043 ;; (2) _fround                                              13    10      3    1686
  1044 ;;                                             48 BANK0     10     7      3
  1045 ;;                            ___lbmod
  1046 ;;                             ___bmul
  1047 ;;                            ___lbdiv
  1048 ;;                            ___ftmul
  1049 ;;                            ___ftadd (ARG)
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (4) _lcd_gotoxy                                           3     2      1     449
  1052 ;;                                              7 COMMON     3     2      1
  1053 ;;                       _lcd_put_byte
  1054 ;;                           _lcd_busy
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (1) _lcd_init                                             4     4      0     347
  1057 ;;                                              7 COMMON     3     3      0
  1058 ;;                       _lcd_put_byte
  1059 ;;                           _lcd_busy
  1060 ;; ---------------------------------------------------------------------------------
  1061 ;; (2) ___lltoft                                             5     1      4     414
  1062 ;;                                              0 BANK0      5     1      4
  1063 ;;                           ___ftpack
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (1) ___awtoft                                             4     1      3     445
  1066 ;;                                              0 BANK0      4     1      3
  1067 ;;                           ___ftpack
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (3) ___ftmul                                             15     9      6     800
  1070 ;;                                             21 BANK0     15     9      6
  1071 ;;                           ___ftpack
  1072 ;;                            ___ftdiv (ARG)
  1073 ;;                           ___awtoft (ARG)
  1074 ;;                            ___fttol (ARG)
  1075 ;;                            ___awdiv (ARG)
  1076 ;;                            ___awmod (ARG)
  1077 ;;                             ___bmul (ARG)
  1078 ;;                            ___lbdiv (ARG)
  1079 ;;                            ___lbmod (ARG)
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (1) ___ftdiv                                             15     9      6     732
  1082 ;;                                              4 BANK0     15     9      6
  1083 ;;                           ___ftpack
  1084 ;;                           ___awtoft (ARG)
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (3) ___ftadd                                             12     6      6    1537
  1087 ;;                                             36 BANK0     12     6      6
  1088 ;;                           ___ftpack
  1089 ;;                            ___lbmod (ARG)
  1090 ;;                             ___bmul (ARG)
  1091 ;;                            ___lbdiv (ARG)
  1092 ;;                            ___ftmul (ARG)
  1093 ;; ---------------------------------------------------------------------------------
  1094 ;; (5) _lcd_busy                                             2     2      0      34
  1095 ;;                                              2 COMMON     2     2      0
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (5) _lcd_put_byte                                         5     4      1     313
  1098 ;;                                              2 COMMON     5     4      1
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (1) _pwm_10bit                                            2     0      2     538
  1101 ;;                                              8 BANK0      2     0      2
  1102 ;;                            ___awdiv
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (3) ___awmod                                              6     2      4     296
  1105 ;;                                              2 COMMON     6     2      4
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (2) ___lldiv                                             13     5      8     162
  1108 ;;                                              2 COMMON     8     0      8
  1109 ;;                                              0 BANK0      5     5      0
  1110 ;; ---------------------------------------------------------------------------------
  1111 ;; (2) ___ftge                                               6     0      6     136
  1112 ;;                                              2 COMMON     6     0      6
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (2) ___ftneg                                              3     0      3      45
  1115 ;;                                              2 COMMON     3     0      3
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; (2) ___llmod                                              9     1      8     232
  1118 ;;                                              5 BANK0      9     1      8
  1119 ;;                            ___lldiv (ARG)
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (3) ___awdiv                                              8     4      4     445
  1122 ;;                                              0 BANK0      8     4      4
  1123 ;;                            ___awmod (ARG)
  1124 ;; ---------------------------------------------------------------------------------
  1125 ;; (2) ___fttol                                             13     9      4     252
  1126 ;;                                              8 BANK0     13     9      4
  1127 ;;                           ___ftpack (ARG)
  1128 ;;                            ___awmod (ARG)
  1129 ;;                            ___awdiv (ARG)
  1130 ;;                             ___bmul (ARG)
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (4) ___ftpack                                             8     3      5     312
  1133 ;;                                              2 COMMON     8     3      5
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (3) ___lbmod                                              5     4      1     159
  1136 ;;                                              2 COMMON     5     4      1
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (3) ___lbdiv                                              4     3      1     241
  1139 ;;                                              7 COMMON     1     0      1
  1140 ;;                                              0 BANK0      3     3      0
  1141 ;;                            ___lbmod (ARG)
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) ___wmul                                               6     2      4      92
  1144 ;;                                              2 COMMON     6     2      4
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (3) ___bmul                                               3     2      1      68
  1147 ;;                                              8 COMMON     1     0      1
  1148 ;;                                              3 BANK0      2     2      0
  1149 ;;                            ___lbmod (ARG)
  1150 ;;                            ___lbdiv (ARG)
  1151 ;; ---------------------------------------------------------------------------------
  1152 ;; (2) __div_to_l_                                          20    14      6     446
  1153 ;;                                              2 COMMON     6     0      6
  1154 ;;                                              0 BANK0     14    14      0
  1155 ;; ---------------------------------------------------------------------------------
  1156 ;; (2) __tdiv_to_l_                                         15     9      6     454
  1157 ;;                                              2 COMMON     6     0      6
  1158 ;;                                              0 BANK0      9     9      0
  1159 ;; ---------------------------------------------------------------------------------
  1160 ;; (2) _isdigit                                              2     2      0      68
  1161 ;;                                              2 COMMON     2     2      0
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; (4) _isprint                                              2     2      0      99
  1164 ;;                                              2 COMMON     2     2      0
  1165 ;; ---------------------------------------------------------------------------------
  1166 ;; Estimated maximum stack depth 5
  1167 ;; ---------------------------------------------------------------------------------
  1168 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1169 ;; ---------------------------------------------------------------------------------
  1170 ;; (6) _ngat                                                 2     2      0       0
  1171 ;;                                              0 COMMON     2     2      0
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; Estimated maximum stack depth 6
  1174 ;; ---------------------------------------------------------------------------------
  1175 ;; Call Graph Graphs:
  1176 ;; _main (ROOT)
  1177 ;;   _lcd_init
  1178 ;;     _lcd_put_byte
  1179 ;;     _lcd_busy
  1180 ;;   _pwm_10bit
  1181 ;;     ___awdiv
  1182 ;;       ___awmod (ARG)
  1183 ;;   ___awtoft
  1184 ;;     ___ftpack
  1185 ;;   ___ftdiv
  1186 ;;     ___ftpack
  1187 ;;     ___awtoft (ARG)
  1188 ;;       ___ftpack
  1189 ;;   ___ftmul
  1190 ;;     ___ftpack
  1191 ;;     ___ftdiv (ARG)
  1192 ;;       ___ftpack
  1193 ;;       ___awtoft (ARG)
  1194 ;;         ___ftpack
  1195 ;;     ___awtoft (ARG)
  1196 ;;       ___ftpack
  1197 ;;     ___fttol (ARG)
  1198 ;;       ___ftpack (ARG)
  1199 ;;       ___awmod (ARG)
  1200 ;;       ___awdiv (ARG)
  1201 ;;         ___awmod (ARG)
  1202 ;;       ___bmul (ARG)
  1203 ;;         ___lbmod (ARG)
  1204 ;;         ___lbdiv (ARG)
  1205 ;;           ___lbmod (ARG)
  1206 ;;     ___awdiv (ARG)
  1207 ;;       ___awmod (ARG)
  1208 ;;     ___awmod (ARG)
  1209 ;;     ___bmul (ARG)
  1210 ;;       ___lbmod (ARG)
  1211 ;;       ___lbdiv (ARG)
  1212 ;;         ___lbmod (ARG)
  1213 ;;     ___lbdiv (ARG)
  1214 ;;       ___lbmod (ARG)
  1215 ;;     ___lbmod (ARG)
  1216 ;;   ___ftge
  1217 ;;   _lcd_gotoxy
  1218 ;;     _lcd_put_byte
  1219 ;;     _lcd_busy
  1220 ;;   _printf
  1221 ;;     _putch
  1222 ;;       _lcd_putc
  1223 ;;         _lcd_put_byte
  1224 ;;         _lcd_busy
  1225 ;;         _lcd_gotoxy
  1226 ;;           _lcd_put_byte
  1227 ;;           _lcd_busy
  1228 ;;         _isprint
  1229 ;;     _isdigit
  1230 ;;     ___wmul
  1231 ;;     ___ftge
  1232 ;;     ___ftneg
  1233 ;;     ___awdiv
  1234 ;;       ___awmod (ARG)
  1235 ;;     _scale
  1236 ;;       ___awmod
  1237 ;;       ___awdiv
  1238 ;;         ___awmod (ARG)
  1239 ;;       ___ftmul
  1240 ;;         ___ftpack
  1241 ;;         ___ftdiv (ARG)
  1242 ;;           ___ftpack
  1243 ;;           ___awtoft (ARG)
  1244 ;;             ___ftpack
  1245 ;;         ___awtoft (ARG)
  1246 ;;           ___ftpack
  1247 ;;         ___fttol (ARG)
  1248 ;;           ___ftpack (ARG)
  1249 ;;           ___awmod (ARG)
  1250 ;;           ___awdiv (ARG)
  1251 ;;             ___awmod (ARG)
  1252 ;;           ___bmul (ARG)
  1253 ;;             ___lbmod (ARG)
  1254 ;;             ___lbdiv (ARG)
  1255 ;;               ___lbmod (ARG)
  1256 ;;         ___awdiv (ARG)
  1257 ;;           ___awmod (ARG)
  1258 ;;         ___awmod (ARG)
  1259 ;;         ___bmul (ARG)
  1260 ;;           ___lbmod (ARG)
  1261 ;;           ___lbdiv (ARG)
  1262 ;;             ___lbmod (ARG)
  1263 ;;         ___lbdiv (ARG)
  1264 ;;           ___lbmod (ARG)
  1265 ;;         ___lbmod (ARG)
  1266 ;;       ___bmul
  1267 ;;         ___lbmod (ARG)
  1268 ;;         ___lbdiv (ARG)
  1269 ;;           ___lbmod (ARG)
  1270 ;;       ___fttol (ARG)
  1271 ;;         ___ftpack (ARG)
  1272 ;;         ___awmod (ARG)
  1273 ;;         ___awdiv (ARG)
  1274 ;;           ___awmod (ARG)
  1275 ;;         ___bmul (ARG)
  1276 ;;           ___lbmod (ARG)
  1277 ;;           ___lbdiv (ARG)
  1278 ;;             ___lbmod (ARG)
  1279 ;;     ___ftmul
  1280 ;;       ___ftpack
  1281 ;;       ___ftdiv (ARG)
  1282 ;;         ___ftpack
  1283 ;;         ___awtoft (ARG)
  1284 ;;           ___ftpack
  1285 ;;       ___awtoft (ARG)
  1286 ;;         ___ftpack
  1287 ;;       ___fttol (ARG)
  1288 ;;         ___ftpack (ARG)
  1289 ;;         ___awmod (ARG)
  1290 ;;         ___awdiv (ARG)
  1291 ;;           ___awmod (ARG)
  1292 ;;         ___bmul (ARG)
  1293 ;;           ___lbmod (ARG)
  1294 ;;           ___lbdiv (ARG)
  1295 ;;             ___lbmod (ARG)
  1296 ;;       ___awdiv (ARG)
  1297 ;;         ___awmod (ARG)
  1298 ;;       ___awmod (ARG)
  1299 ;;       ___bmul (ARG)
  1300 ;;         ___lbmod (ARG)
  1301 ;;         ___lbdiv (ARG)
  1302 ;;           ___lbmod (ARG)
  1303 ;;       ___lbdiv (ARG)
  1304 ;;         ___lbmod (ARG)
  1305 ;;       ___lbmod (ARG)
  1306 ;;     _fround
  1307 ;;       ___lbmod
  1308 ;;       ___bmul
  1309 ;;         ___lbmod (ARG)
  1310 ;;         ___lbdiv (ARG)
  1311 ;;           ___lbmod (ARG)
  1312 ;;       ___lbdiv
  1313 ;;         ___lbmod (ARG)
  1314 ;;       ___ftmul
  1315 ;;         ___ftpack
  1316 ;;         ___ftdiv (ARG)
  1317 ;;           ___ftpack
  1318 ;;           ___awtoft (ARG)
  1319 ;;             ___ftpack
  1320 ;;         ___awtoft (ARG)
  1321 ;;           ___ftpack
  1322 ;;         ___fttol (ARG)
  1323 ;;           ___ftpack (ARG)
  1324 ;;           ___awmod (ARG)
  1325 ;;           ___awdiv (ARG)
  1326 ;;             ___awmod (ARG)
  1327 ;;           ___bmul (ARG)
  1328 ;;             ___lbmod (ARG)
  1329 ;;             ___lbdiv (ARG)
  1330 ;;               ___lbmod (ARG)
  1331 ;;         ___awdiv (ARG)
  1332 ;;           ___awmod (ARG)
  1333 ;;         ___awmod (ARG)
  1334 ;;         ___bmul (ARG)
  1335 ;;           ___lbmod (ARG)
  1336 ;;           ___lbdiv (ARG)
  1337 ;;             ___lbmod (ARG)
  1338 ;;         ___lbdiv (ARG)
  1339 ;;           ___lbmod (ARG)
  1340 ;;         ___lbmod (ARG)
  1341 ;;       ___ftadd (ARG)
  1342 ;;         ___ftpack
  1343 ;;         ___lbmod (ARG)
  1344 ;;         ___bmul (ARG)
  1345 ;;           ___lbmod (ARG)
  1346 ;;           ___lbdiv (ARG)
  1347 ;;             ___lbmod (ARG)
  1348 ;;         ___lbdiv (ARG)
  1349 ;;           ___lbmod (ARG)
  1350 ;;         ___ftmul (ARG)
  1351 ;;           ___ftpack
  1352 ;;           ___ftdiv (ARG)
  1353 ;;             ___ftpack
  1354 ;;             ___awtoft (ARG)
  1355 ;;               ___ftpack
  1356 ;;           ___awtoft (ARG)
  1357 ;;             ___ftpack
  1358 ;;           ___fttol (ARG)
  1359 ;;             ___ftpack (ARG)
  1360 ;;             ___awmod (ARG)
  1361 ;;             ___awdiv (ARG)
  1362 ;;               ___awmod (ARG)
  1363 ;;             ___bmul (ARG)
  1364 ;;               ___lbmod (ARG)
  1365 ;;               ___lbdiv (ARG)
  1366 ;;                 ___lbmod (ARG)
  1367 ;;           ___awdiv (ARG)
  1368 ;;             ___awmod (ARG)
  1369 ;;           ___awmod (ARG)
  1370 ;;           ___bmul (ARG)
  1371 ;;             ___lbmod (ARG)
  1372 ;;             ___lbdiv (ARG)
  1373 ;;               ___lbmod (ARG)
  1374 ;;           ___lbdiv (ARG)
  1375 ;;             ___lbmod (ARG)
  1376 ;;           ___lbmod (ARG)
  1377 ;;     ___ftadd
  1378 ;;       ___ftpack
  1379 ;;       ___lbmod (ARG)
  1380 ;;       ___bmul (ARG)
  1381 ;;         ___lbmod (ARG)
  1382 ;;         ___lbdiv (ARG)
  1383 ;;           ___lbmod (ARG)
  1384 ;;       ___lbdiv (ARG)
  1385 ;;         ___lbmod (ARG)
  1386 ;;       ___ftmul (ARG)
  1387 ;;         ___ftpack
  1388 ;;         ___ftdiv (ARG)
  1389 ;;           ___ftpack
  1390 ;;           ___awtoft (ARG)
  1391 ;;             ___ftpack
  1392 ;;         ___awtoft (ARG)
  1393 ;;           ___ftpack
  1394 ;;         ___fttol (ARG)
  1395 ;;           ___ftpack (ARG)
  1396 ;;           ___awmod (ARG)
  1397 ;;           ___awdiv (ARG)
  1398 ;;             ___awmod (ARG)
  1399 ;;           ___bmul (ARG)
  1400 ;;             ___lbmod (ARG)
  1401 ;;             ___lbdiv (ARG)
  1402 ;;               ___lbmod (ARG)
  1403 ;;         ___awdiv (ARG)
  1404 ;;           ___awmod (ARG)
  1405 ;;         ___awmod (ARG)
  1406 ;;         ___bmul (ARG)
  1407 ;;           ___lbmod (ARG)
  1408 ;;           ___lbdiv (ARG)
  1409 ;;             ___lbmod (ARG)
  1410 ;;         ___lbdiv (ARG)
  1411 ;;           ___lbmod (ARG)
  1412 ;;         ___lbmod (ARG)
  1413 ;;     ___fttol
  1414 ;;       ___ftpack (ARG)
  1415 ;;       ___awmod (ARG)
  1416 ;;       ___awdiv (ARG)
  1417 ;;         ___awmod (ARG)
  1418 ;;       ___bmul (ARG)
  1419 ;;         ___lbmod (ARG)
  1420 ;;         ___lbdiv (ARG)
  1421 ;;           ___lbmod (ARG)
  1422 ;;     __div_to_l_
  1423 ;;     __tdiv_to_l_
  1424 ;;     ___lltoft
  1425 ;;       ___ftpack
  1426 ;;     ___ftsub
  1427 ;;       ___ftadd
  1428 ;;         ___ftpack
  1429 ;;         ___lbmod (ARG)
  1430 ;;         ___bmul (ARG)
  1431 ;;           ___lbmod (ARG)
  1432 ;;           ___lbdiv (ARG)
  1433 ;;             ___lbmod (ARG)
  1434 ;;         ___lbdiv (ARG)
  1435 ;;           ___lbmod (ARG)
  1436 ;;         ___ftmul (ARG)
  1437 ;;           ___ftpack
  1438 ;;           ___ftdiv (ARG)
  1439 ;;             ___ftpack
  1440 ;;             ___awtoft (ARG)
  1441 ;;               ___ftpack
  1442 ;;           ___awtoft (ARG)
  1443 ;;             ___ftpack
  1444 ;;           ___fttol (ARG)
  1445 ;;             ___ftpack (ARG)
  1446 ;;             ___awmod (ARG)
  1447 ;;             ___awdiv (ARG)
  1448 ;;               ___awmod (ARG)
  1449 ;;             ___bmul (ARG)
  1450 ;;               ___lbmod (ARG)
  1451 ;;               ___lbdiv (ARG)
  1452 ;;                 ___lbmod (ARG)
  1453 ;;           ___awdiv (ARG)
  1454 ;;             ___awmod (ARG)
  1455 ;;           ___awmod (ARG)
  1456 ;;           ___bmul (ARG)
  1457 ;;             ___lbmod (ARG)
  1458 ;;             ___lbdiv (ARG)
  1459 ;;               ___lbmod (ARG)
  1460 ;;           ___lbdiv (ARG)
  1461 ;;             ___lbmod (ARG)
  1462 ;;           ___lbmod (ARG)
  1463 ;;       ___lltoft (ARG)
  1464 ;;         ___ftpack
  1465 ;;     ___lldiv
  1466 ;;     ___llmod
  1467 ;;       ___lldiv (ARG)
  1468 ;;
  1469 ;; _ngat (ROOT)
  1470 ;;
  1471 ;; Address spaces:
  1472 ;;Name               Size   Autos  Total    Cost      Usage
  1473 ;;BITCOMMON            E      0       0       0        0.0%
  1474 ;;EEDATA             100      0       0       0        0.0%
  1475 ;;NULL                 0      0       0       0        0.0%
  1476 ;;CODE                 0      0       0       0        0.0%
  1477 ;;COMMON               E      A       C       1       85.7%
  1478 ;;BITSFR0              0      0       0       1        0.0%
  1479 ;;SFR0                 0      0       0       1        0.0%
  1480 ;;BITSFR1              0      0       0       2        0.0%
  1481 ;;SFR1                 0      0       0       2        0.0%
  1482 ;;STACK                0      0       5       2        0.0%
  1483 ;;ABS                  0      0      6E       3        0.0%
  1484 ;;BITBANK0            50      0       0       4        0.0%
  1485 ;;BITSFR3              0      0       0       4        0.0%
  1486 ;;SFR3                 0      0       0       4        0.0%
  1487 ;;BANK0               50     42      49       5       91.3%
  1488 ;;BITSFR2              0      0       0       5        0.0%
  1489 ;;SFR2                 0      0       0       5        0.0%
  1490 ;;BITBANK1            50      0       0       6        0.0%
  1491 ;;BANK1               50     19      19       7       31.3%
  1492 ;;BITBANK3            60      0       0       8        0.0%
  1493 ;;BANK3               60      0       0       9        0.0%
  1494 ;;BITBANK2            60      0       0      10        0.0%
  1495 ;;BANK2               60      0       0      11        0.0%
  1496 ;;DATA                 0      0      73      12        0.0%
  1497                           
  1498                           
  1499 ;; *************** function _main *****************
  1500 ;; Defined at:
  1501 ;;		line 22 in file "D:\TTVXL\Project TTVXL\BT02week15ttvxl\BT02week15ttvxl.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;		None               void
  1508 ;; Registers used:
  1509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 17F/0
  1512 ;;		On exit  : 60/20
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1515 ;;      Params:         0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0
  1517 ;;      Temps:          0       0       0       0       0
  1518 ;;      Totals:         0       0       0       0       0
  1519 ;;Total ram usage:        0 bytes
  1520 ;; Hardware stack levels required when called:    6
  1521 ;; This function calls:
  1522 ;;		_lcd_init
  1523 ;;		_pwm_10bit
  1524 ;;		___awtoft
  1525 ;;		___ftdiv
  1526 ;;		___ftmul
  1527 ;;		___ftge
  1528 ;;		_lcd_gotoxy
  1529 ;;		_printf
  1530 ;; This function is called by:
  1531 ;;		Startup code after reset
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534  081F                     _main:	
  1535                           
  1536                           ;BT02week15ttvxl.c: 23: ANSEL = ANSELH = 0;
  1537                           
  1538                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1539  081F  1683               	bsf	3,5	;RP0=1, select bank3
  1540  0820  1703               	bsf	3,6	;RP1=1, select bank3
  1541  0821  0189               	clrf	9	;volatile
  1542  0822  0188               	clrf	8	;volatile
  1543                           
  1544                           ;BT02week15ttvxl.c: 24: lcd_init();
  1545  0823  120A  158A  2299   	fcall	_lcd_init
      +       120A  158A         
  1546                           
  1547                           ;BT02week15ttvxl.c: 25: TRISE0 = 0;
  1548  0828  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0829  1009               	bcf	9,0
  1550                           
  1551                           ;BT02week15ttvxl.c: 26: TRISE1 = 0; RE1=0;
  1552  082A  1089               	bcf	9,1
  1553  082B  1283               	bcf	3,5	;RP0=0, select bank0
  1554  082C  1089               	bcf	9,1
  1555                           
  1556                           ;BT02week15ttvxl.c: 27: TRISE2 = 0;
  1557  082D  1683               	bsf	3,5	;RP0=1, select bank1
  1558  082E  1109               	bcf	9,2
  1559                           
  1560                           ;BT02week15ttvxl.c: 29: TRISC2 = 0;
  1561  082F  1107               	bcf	7,2
  1562                           
  1563                           ;BT02week15ttvxl.c: 31: T2CKPS1 = 0; T2CKPS0 = 1;
  1564  0830  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0831  307C               	movlw	124
  1566  0832  1092               	bcf	18,1
  1567  0833  1412               	bsf	18,0
  1568                           
  1569                           ;BT02week15ttvxl.c: 32: PR2 = 124; TMR2 = 0;
  1570  0834  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0835  0092               	movwf	18	;volatile
  1572  0836  1283               	bcf	3,5	;RP0=0, select bank0
  1573  0837  0191               	clrf	17	;volatile
  1574  0838  300C               	movlw	12
  1575                           
  1576                           ;BT02week15ttvxl.c: 33: TMR2ON = 1;
  1577  0839  1512               	bsf	18,2
  1578                           
  1579                           ;BT02week15ttvxl.c: 35: CCP1CON = 0b00001100;
  1580  083A  0097               	movwf	23	;volatile
  1581                           
  1582                           ;BT02week15ttvxl.c: 37: TMR1CS = 1;
  1583  083B  1490               	bsf	16,1
  1584                           
  1585                           ;BT02week15ttvxl.c: 38: T1CKPS1 = 0;T1CKPS0 = 0;
  1586  083C  1290               	bcf	16,5
  1587  083D  1210               	bcf	16,4
  1588                           
  1589                           ;BT02week15ttvxl.c: 39: T1SYNC = 1;
  1590  083E  1510               	bsf	16,2
  1591                           
  1592                           ;BT02week15ttvxl.c: 40: TMR1 = 0;
  1593  083F  018E               	clrf	14	;volatile
  1594  0840  018F               	clrf	15	;volatile
  1595                           
  1596                           ;BT02week15ttvxl.c: 41: TMR1GE = 0; TMR1ON = 1;
  1597  0841  1310               	bcf	16,6
  1598  0842  1410               	bsf	16,0
  1599                           
  1600                           ;BT02week15ttvxl.c: 44: T0CS = 0;
  1601  0843  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0844  3006               	movlw	6
  1603  0845  1281               	bcf	1,5
  1604                           
  1605                           ;BT02week15ttvxl.c: 45: PSA = 0;
  1606  0846  1181               	bcf	1,3
  1607                           
  1608                           ;BT02week15ttvxl.c: 46: PS2 = 0; PS1 = 1;PS0 = 0;
  1609  0847  1101               	bcf	1,2
  1610  0848  1481               	bsf	1,1
  1611  0849  1001               	bcf	1,0
  1612                           
  1613                           ;BT02week15ttvxl.c: 47: TMR0 = 6;
  1614  084A  1283               	bcf	3,5	;RP0=0, select bank0
  1615  084B  0081               	movwf	1	;volatile
  1616  084C  302C               	movlw	44
  1617                           
  1618                           ;BT02week15ttvxl.c: 48: T0IE = 1; T0IF = 0; GIE = 1; PEIE =1;
  1619  084D  168B               	bsf	11,5
  1620  084E  110B               	bcf	11,2
  1621  084F  178B               	bsf	11,7
  1622  0850  170B               	bsf	11,6
  1623                           
  1624                           ;BT02week15ttvxl.c: 50: pwm_t = 300;
  1625  0851  00E5               	movwf	_pwm_t
  1626  0852  3001               	movlw	1
  1627  0853  00E6               	movwf	_pwm_t+1
  1628                           
  1629                           ;BT02week15ttvxl.c: 51: pwm_10bit(pwm_t);
  1630  0854  302C               	movlw	44
  1631  0855  00A8               	movwf	?_pwm_10bit
  1632  0856  3001               	movlw	1
  1633  0857  00A9               	movwf	?_pwm_10bit+1
  1634  0858  120A  158A  2423   	fcall	_pwm_10bit
      +       120A  158A         
  1635  085D                     l8507:	
  1636                           
  1637                           ;BT02week15ttvxl.c: 54: {
  1638                           ;BT02week15ttvxl.c: 55: v = (xung/360.0)*10.0*60.0;
  1639  085D  1283               	bcf	3,5	;RP0=0, select bank0
  1640  085E  3016               	movlw	22
  1641  085F  01B5               	clrf	?___ftmul
  1642  0860  00B6               	movwf	?___ftmul+1
  1643  0861  3044               	movlw	68
  1644  0862  00B7               	movwf	?___ftmul+2
  1645  0863  30B4               	movlw	180
  1646  0864  01A4               	clrf	?___ftdiv
  1647  0865  00A5               	movwf	?___ftdiv+1
  1648  0866  3043               	movlw	67
  1649  0867  00A6               	movwf	?___ftdiv+2
  1650  0868  0868               	movf	_xung+1,w
  1651  0869  00A1               	movwf	?___awtoft+1
  1652  086A  0867               	movf	_xung,w
  1653  086B  00A0               	movwf	?___awtoft
  1654  086C  120A  158A  2437   	fcall	___awtoft
      +       120A  158A         
  1655  0871  0820               	movf	?___awtoft,w
  1656  0872  00A7               	movwf	?___ftdiv+3
  1657  0873  0821               	movf	?___awtoft+1,w
  1658  0874  00A8               	movwf	?___ftdiv+4
  1659  0875  0822               	movf	?___awtoft+2,w
  1660  0876  00A9               	movwf	?___ftdiv+5
  1661  0877  120A  158A  2470   	fcall	___ftdiv
      +       120A  158A         
  1662  087C  0824               	movf	?___ftdiv,w
  1663  087D  00B8               	movwf	?___ftmul+3
  1664  087E  0825               	movf	?___ftdiv+1,w
  1665  087F  00B9               	movwf	?___ftmul+4
  1666  0880  0826               	movf	?___ftdiv+2,w
  1667  0881  00BA               	movwf	?___ftmul+5
  1668  0882  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  1669  0887  0835               	movf	?___ftmul,w
  1670  0888  00E2               	movwf	_v
  1671  0889  0836               	movf	?___ftmul+1,w
  1672  088A  00E3               	movwf	_v+1
  1673  088B  0837               	movf	?___ftmul+2,w
  1674  088C  00E4               	movwf	_v+2
  1675                           
  1676                           ;BT02week15ttvxl.c: 56: if(v < 30.7)pwm_t = pwm_t++;
  1677  088D  0862               	movf	_v,w
  1678  088E  00F2               	movwf	?___ftge
  1679  088F  0863               	movf	_v+1,w
  1680  0890  00F3               	movwf	?___ftge+1
  1681  0891  0864               	movf	_v+2,w
  1682  0892  00F4               	movwf	?___ftge+2
  1683  0893  309A               	movlw	154
  1684  0894  00F5               	movwf	?___ftge+3
  1685  0895  30F5               	movlw	245
  1686  0896  00F6               	movwf	?___ftge+4
  1687  0897  3041               	movlw	65
  1688  0898  00F7               	movwf	?___ftge+5
  1689  0899  120A  118A  25A8   	fcall	___ftge
      +       120A  158A         
  1690  089E  1803               	btfsc	3,0
  1691  089F  28A4               	goto	l8513
  1692  08A0  0AE5               	incf	_pwm_t,f
  1693  08A1  1903               	skipnz
  1694  08A2  0AE6               	incf	_pwm_t+1,f
  1695  08A3  28D1               	goto	l8521
  1696  08A4                     l8513:	
  1697                           
  1698                           ;BT02week15ttvxl.c: 57: else if(v > 30.7)pwm_t = pwm_t--;
  1699  08A4  309A               	movlw	154
  1700  08A5  00F2               	movwf	?___ftge
  1701  08A6  30F5               	movlw	245
  1702  08A7  00F3               	movwf	?___ftge+1
  1703  08A8  3041               	movlw	65
  1704  08A9  00F4               	movwf	?___ftge+2
  1705  08AA  0862               	movf	_v,w
  1706  08AB  00F5               	movwf	?___ftge+3
  1707  08AC  0863               	movf	_v+1,w
  1708  08AD  00F6               	movwf	?___ftge+4
  1709  08AE  0864               	movf	_v+2,w
  1710  08AF  00F7               	movwf	?___ftge+5
  1711  08B0  120A  118A  25A8   	fcall	___ftge
      +       120A  158A         
  1712  08B5  1803               	btfsc	3,0
  1713  08B6  28BC               	goto	l8517
  1714  08B7  30FF               	movlw	-1
  1715  08B8  07E5               	addwf	_pwm_t,f
  1716  08B9  1C03               	skipc
  1717  08BA  03E6               	decf	_pwm_t+1,f
  1718  08BB  28D1               	goto	l8521
  1719  08BC                     l8517:	
  1720                           
  1721                           ;BT02week15ttvxl.c: 58: else if(v < 1.0)pwm_t =20;
  1722  08BC  0862               	movf	_v,w
  1723  08BD  00F2               	movwf	?___ftge
  1724  08BE  0863               	movf	_v+1,w
  1725  08BF  00F3               	movwf	?___ftge+1
  1726  08C0  0864               	movf	_v+2,w
  1727  08C1  00F4               	movwf	?___ftge+2
  1728  08C2  3080               	movlw	128
  1729  08C3  01F5               	clrf	?___ftge+3
  1730  08C4  00F6               	movwf	?___ftge+4
  1731  08C5  303F               	movlw	63
  1732  08C6  00F7               	movwf	?___ftge+5
  1733  08C7  120A  118A  25A8   	fcall	___ftge
      +       120A  158A         
  1734  08CC  1803               	btfsc	3,0
  1735  08CD  28D1               	goto	l8521
  1736  08CE  3014               	movlw	20
  1737  08CF  00E5               	movwf	_pwm_t
  1738  08D0  01E6               	clrf	_pwm_t+1
  1739  08D1                     l8521:	
  1740                           
  1741                           ;BT02week15ttvxl.c: 60: pwm_10bit(pwm_t);
  1742  08D1  0866               	movf	_pwm_t+1,w
  1743  08D2  00A9               	movwf	?_pwm_10bit+1
  1744  08D3  0865               	movf	_pwm_t,w
  1745  08D4  00A8               	movwf	?_pwm_10bit
  1746  08D5  120A  158A  2423   	fcall	_pwm_10bit
      +       120A  158A         
  1747  08DA  3000               	movlw	0
  1748                           
  1749                           ;BT02week15ttvxl.c: 61: lcd_gotoxy(0,0);
  1750  08DB  01F7               	clrf	?_lcd_gotoxy
  1751  08DC  120A  158A  2252   	fcall	_lcd_gotoxy
      +       120A  158A         
  1752                           
  1753                           ;BT02week15ttvxl.c: 62: printf("v: %3.2f",v);
  1754  08E1  0862               	movf	_v,w
  1755  08E2  00DA               	movwf	?_printf
  1756  08E3  0863               	movf	_v+1,w
  1757  08E4  00DB               	movwf	?_printf+1
  1758  08E5  0864               	movf	_v+2,w
  1759  08E6  00DC               	movwf	?_printf+2
  1760  08E7  3082               	movlw	(STR_1-__stringbase)& (0+255)
  1761  08E8  120A  118A  200F   	fcall	_printf
      +       120A  158A         
  1762  08ED  3000               	movlw	0
  1763                           
  1764                           ;BT02week15ttvxl.c: 63: lcd_gotoxy(0,1);
  1765  08EE  01F7               	clrf	?_lcd_gotoxy
  1766  08EF  0AF7               	incf	?_lcd_gotoxy,f
  1767  08F0  120A  158A  2252   	fcall	_lcd_gotoxy
      +       120A  158A         
  1768                           
  1769                           ;BT02week15ttvxl.c: 64: printf("xung: %05d",xung);
  1770  08F5  0868               	movf	_xung+1,w
  1771  08F6  00DB               	movwf	?_printf+1
  1772  08F7  0867               	movf	_xung,w
  1773  08F8  00DA               	movwf	?_printf
  1774  08F9  3077               	movlw	(STR_2-__stringbase)& (0+255)
  1775  08FA  120A  118A  200F   	fcall	_printf
      +       120A  158A         
  1776  08FF  285D               	goto	l8507
  1777  0900                     __end_of_main:	
  1778                           
  1779                           	psect	text807
  1780  000F                     __ptext807:	
  1781 ;; =============== function _main ends ============
  1782                           
  1783                           
  1784 ;; *************** function _printf *****************
  1785 ;; Defined at:
  1786 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  f               1    wreg     PTR const unsigned char 
  1789 ;;		 -> STR_2(11), STR_1(9), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1792 ;;		 -> STR_2(11), STR_1(9), 
  1793 ;;  _val            4    9[BANK1 ] struct .
  1794 ;;  fval            3   19[BANK1 ] struct .
  1795 ;;  integ           3    5[BANK1 ] struct .
  1796 ;;  ival            3    0        struct .
  1797 ;;  prec            2   22[BANK1 ] int 
  1798 ;;  width           2   17[BANK1 ] int 
  1799 ;;  exp             2   15[BANK1 ] int 
  1800 ;;  flag            2   13[BANK1 ] unsigned short 
  1801 ;;  c               1   24[BANK1 ] char 
  1802 ;;  ap              1    4[BANK1 ] PTR void [1]
  1803 ;;		 -> ?_printf(2), 
  1804 ;;  d               1    0        unsigned char 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  2   58[BANK0 ] int 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 60/0
  1811 ;;		On exit  : 60/20
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       3       0       0       0
  1815 ;;      Locals:         0       0      25       0       0
  1816 ;;      Temps:          0       5       0       0       0
  1817 ;;      Totals:         0       8      25       0       0
  1818 ;;Total ram usage:       33 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    5
  1821 ;; This function calls:
  1822 ;;		_putch
  1823 ;;		_isdigit
  1824 ;;		___wmul
  1825 ;;		___ftge
  1826 ;;		___ftneg
  1827 ;;		___awdiv
  1828 ;;		_scale
  1829 ;;		___ftmul
  1830 ;;		_fround
  1831 ;;		___ftadd
  1832 ;;		___fttol
  1833 ;;		__div_to_l_
  1834 ;;		__tdiv_to_l_
  1835 ;;		___lltoft
  1836 ;;		___ftsub
  1837 ;;		___lldiv
  1838 ;;		___llmod
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843  000F                     _printf:	
  1844                           
  1845                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1846                           ;printf@f stored from wreg
  1847  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0010  00A8               	movwf	printf@f^(0+128)
  1849  0011  305A               	movlw	?_printf& (0+255)
  1850  0012  00A4               	movwf	printf@ap^(0+128)
  1851  0013                     l8441:	
  1852  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1853  0014  0828               	movf	printf@f^(0+128),w
  1854  0015  0AA8               	incf	printf@f^(0+128),f
  1855  0016  0084               	movwf	4
  1856  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1857  001C  00B8               	movwf	printf@c^(0+128)
  1858  001D  08B8               	movf	printf@c^(0+128),f
  1859  001E  1903               	btfsc	3,2
  1860  001F  0008               	return
  1861  0020  3A25               	xorlw	37
  1862  0021  1903               	skipnz
  1863  0022  2828               	goto	l8165
  1864  0023  0838               	movf	printf@c^(0+128),w
  1865  0024  2564  120A  118A   	fcall	_putch
  1866  0027  2813               	goto	l8441
  1867  0028                     l8165:	
  1868  0028  01B1               	clrf	printf@width^(0+128)
  1869  0029  01B2               	clrf	(printf@width+1)^(0+128)
  1870  002A  01AD               	clrf	printf@flag^(0+128)
  1871  002B  01AE               	clrf	(printf@flag+1)^(0+128)
  1872  002C  282F               	goto	l8171
  1873  002D                     l2206:	
  1874  002D  152D               	bsf	printf@flag^(0+128),2
  1875  002E  0AA8               	incf	printf@f^(0+128),f
  1876  002F                     l8171:	
  1877  002F  0828               	movf	printf@f^(0+128),w
  1878  0030  0084               	movwf	4
  1879  0031  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1880                           
  1881                           ; Switch size 1, requested type "space"
  1882                           ; Number of cases is 1, Range of values is 48 to 48
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte            4     3 (average)
  1886                           ; direct_byte           14    11 (fixed)
  1887                           ; jumptable            263     9 (fixed)
  1888                           ;	Chosen strategy is simple_byte
  1889  0036  3A30               	xorlw	48	; case 48
  1890  0037  1903               	skipnz
  1891  0038  282D               	goto	l2206
  1892  0039  283A               	goto	l8173
  1893  003A                     l8173:	
  1894  003A  0828               	movf	printf@f^(0+128),w
  1895  003B  0084               	movwf	4
  1896  003C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1897  0041  25D4  120A  118A   	fcall	_isdigit
  1898  0044  1C03               	btfss	3,0
  1899  0045  286A               	goto	l8183
  1900  0046  01B1               	clrf	printf@width^(0+128)
  1901  0047  01B2               	clrf	(printf@width+1)^(0+128)
  1902  0048                     l8177:	
  1903  0048  0832               	movf	(printf@width+1)^(0+128),w
  1904  0049  00F3               	movwf	?___wmul+1
  1905  004A  0831               	movf	printf@width^(0+128),w
  1906  004B  00F2               	movwf	?___wmul
  1907  004C  300A               	movlw	10
  1908  004D  00F4               	movwf	?___wmul+2
  1909  004E  01F5               	clrf	?___wmul+3
  1910  004F  25E2               	fcall	___wmul
  1911  0050  0828               	movf	printf@f^(0+128),w
  1912  0051  0084               	movwf	4
  1913  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1914  0057  2760  120A  118A   	fcall	PL13	;call to abstracted procedure
  1915  005A  00B1               	movwf	printf@width^(0+128)
  1916  005B  279C               	fcall	PL27	;call to abstracted procedure
  1917  005C  00B2               	movwf	(printf@width+1)^(0+128)
  1918  005D  0AA8               	incf	printf@f^(0+128),f
  1919  005E  0828               	movf	printf@f^(0+128),w
  1920  005F  0084               	movwf	4
  1921  0060  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1922  0065  25D4  120A  118A   	fcall	_isdigit
  1923  0068  1803               	btfsc	3,0
  1924  0069  2848               	goto	l8177
  1925  006A                     l8183:	
  1926  006A  0828               	movf	printf@f^(0+128),w
  1927  006B  0084               	movwf	4
  1928  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1929  0071  3A2E               	xorlw	46
  1930  0072  1D03               	skipz
  1931  0073  289D               	goto	l8197
  1932  0074  172E               	bsf	(printf@flag^(0+128)+1),6
  1933  0075  0AA8               	incf	printf@f^(0+128),f
  1934  0076  01B6               	clrf	printf@prec^(0+128)
  1935  0077  01B7               	clrf	(printf@prec+1)^(0+128)
  1936  0078                     l8195:	
  1937  0078  0828               	movf	printf@f^(0+128),w
  1938  0079  0084               	movwf	4
  1939  007A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1940  007F  25D4  120A  118A   	fcall	_isdigit
  1941  0082  1C03               	btfss	3,0
  1942  0083  28A3               	goto	l8203
  1943  0084  0837               	movf	(printf@prec+1)^(0+128),w
  1944  0085  00F3               	movwf	?___wmul+1
  1945  0086  0836               	movf	printf@prec^(0+128),w
  1946  0087  00F2               	movwf	?___wmul
  1947  0088  300A               	movlw	10
  1948  0089  00F4               	movwf	?___wmul+2
  1949  008A  01F5               	clrf	?___wmul+3
  1950  008B  25E2               	fcall	___wmul
  1951  008C  0828               	movf	printf@f^(0+128),w
  1952  008D  0084               	movwf	4
  1953  008E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1954  0093  2760  120A  118A   	fcall	PL13	;call to abstracted procedure
  1955  0096  00B6               	movwf	printf@prec^(0+128)
  1956  0097  279C  120A  118A   	fcall	PL27	;call to abstracted procedure
  1957  009A  00B7               	movwf	(printf@prec+1)^(0+128)
  1958  009B  0AA8               	incf	printf@f^(0+128),f
  1959  009C  2878               	goto	l8195
  1960  009D                     l8197:	
  1961  009D  01B6               	clrf	printf@prec^(0+128)
  1962  009E  01B7               	clrf	(printf@prec+1)^(0+128)
  1963  009F  162E               	bsf	(printf@flag^(0+128)+1),4
  1964  00A0  28A3               	goto	l8203
  1965  00A1                     l2221:	
  1966  00A1  152E               	bsf	(printf@flag^(0+128)+1),2
  1967  00A2  28B9               	goto	l8205
  1968  00A3                     l8203:	
  1969  00A3  0828               	movf	printf@f^(0+128),w
  1970  00A4  0AA8               	incf	printf@f^(0+128),f
  1971  00A5  0084               	movwf	4
  1972  00A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1973  00AB  00B8               	movwf	printf@c^(0+128)
  1974                           
  1975                           ; Switch size 1, requested type "space"
  1976                           ; Number of cases is 4, Range of values is 0 to 105
  1977                           ; switch strategies available:
  1978                           ; Name         Instructions Cycles
  1979                           ; simple_byte           13     7 (average)
  1980                           ; jumptable            260     6 (fixed)
  1981                           ; rangetable           110     6 (fixed)
  1982                           ; spacedrange          218     9 (fixed)
  1983                           ; locatedrange         106     3 (fixed)
  1984                           ;	Chosen strategy is simple_byte
  1985  00AC  3A00               	xorlw	0	; case 0
  1986  00AD  1903               	skipnz
  1987  00AE  2D63               	goto	l2302
  1988  00AF  3A64               	xorlw	100	; case 100
  1989  00B0  1903               	skipnz
  1990  00B1  28B9               	goto	l8205
  1991  00B2  3A02               	xorlw	2	; case 102
  1992  00B3  1903               	skipnz
  1993  00B4  28A1               	goto	l2221
  1994  00B5  3A0F               	xorlw	15	; case 105
  1995  00B6  1903               	skipnz
  1996  00B7  28B9               	goto	l8205
  1997  00B8  2813               	goto	l8441
  1998  00B9                     l8205:	
  1999  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  2000  00BA  3007               	movlw	7
  2001  00BB  01DD               	clrf	??_printf
  2002  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  2003  00BD  052E               	andwf	(printf@flag+1)^(0+128),w
  2004  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  2005  00BF  00DE               	movwf	??_printf+1
  2006  00C0  045D               	iorwf	??_printf,w
  2007  00C1  1903               	skipnz
  2008  00C2  2C14               	goto	l8357
  2009  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  2010  00C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  2011  00C5  28C9               	goto	l8211
  2012  00C6  3006               	movlw	6
  2013  00C7  00B6               	movwf	printf@prec^(0+128)
  2014  00C8  01B7               	clrf	(printf@prec+1)^(0+128)
  2015  00C9                     l8211:	
  2016  00C9  0824               	movf	printf@ap^(0+128),w
  2017  00CA  0084               	movwf	4
  2018  00CB  1383               	bcf	3,7	;select IRP bank0
  2019  00CC  0800               	movf	0,w
  2020  00CD  00B3               	movwf	printf@fval^(0+128)
  2021  00CE  0A84               	incf	4,f
  2022  00CF  0800               	movf	0,w
  2023  00D0  00B4               	movwf	(printf@fval+1)^(0+128)
  2024  00D1  0A84               	incf	4,f
  2025  00D2  0800               	movf	0,w
  2026  00D3  00B5               	movwf	(printf@fval+2)^(0+128)
  2027  00D4  3003               	movlw	3
  2028  00D5  07A4               	addwf	printf@ap^(0+128),f
  2029  00D6  0833               	movf	printf@fval^(0+128),w
  2030  00D7  00F2               	movwf	?___ftge
  2031  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  2032  00D9  00F3               	movwf	?___ftge+1
  2033  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  2034  00DB  00F4               	movwf	?___ftge+2
  2035  00DC  01F5               	clrf	?___ftge+3
  2036  00DD  01F6               	clrf	?___ftge+4
  2037  00DE  01F7               	clrf	?___ftge+5
  2038  00DF  25A8  120A  118A   	fcall	___ftge
  2039  00E2  1803               	btfsc	3,0
  2040  00E3  28F5               	goto	l8221
  2041  00E4  0833               	movf	printf@fval^(0+128),w
  2042  00E5  00F2               	movwf	?___ftneg
  2043  00E6  0834               	movf	(printf@fval+1)^(0+128),w
  2044  00E7  00F3               	movwf	?___ftneg+1
  2045  00E8  0835               	movf	(printf@fval+2)^(0+128),w
  2046  00E9  00F4               	movwf	?___ftneg+2
  2047  00EA  2717  120A  118A   	fcall	___ftneg
  2048  00ED  0872               	movf	?___ftneg,w
  2049  00EE  00B3               	movwf	printf@fval^(0+128)
  2050  00EF  0873               	movf	?___ftneg+1,w
  2051  00F0  00B4               	movwf	(printf@fval+1)^(0+128)
  2052  00F1  0874               	movf	?___ftneg+2,w
  2053  00F2  00B5               	movwf	(printf@fval+2)^(0+128)
  2054  00F3  3003               	movlw	3
  2055  00F4  04AD               	iorwf	printf@flag^(0+128),f
  2056  00F5                     l8221:	
  2057  00F5  01AF               	clrf	printf@exp^(0+128)
  2058  00F6  01B0               	clrf	(printf@exp+1)^(0+128)
  2059  00F7  0835               	movf	(printf@fval+2)^(0+128),w
  2060  00F8  0434               	iorwf	(printf@fval+1)^(0+128),w
  2061  00F9  0433               	iorwf	printf@fval^(0+128),w
  2062  00FA  1903               	skipnz
  2063  00FB  2993               	goto	l8253
  2064  00FC  30B3               	movlw	low printf@fval
  2065  00FD  0084               	movwf	4
  2066  00FE  27AA  120A  118A   	fcall	PL30	;call to abstracted procedure
  2067  0101  0A84               	incf	4,f
  2068  0102  0800               	movf	0,w
  2069  0103  00DF               	movwf	??_printf+2
  2070  0104  0A84               	incf	4,f
  2071  0105  0800               	movf	0,w
  2072  0106  00E0               	movwf	??_printf+3
  2073  0107  300F               	movlw	15
  2074  0108                     u5255:	
  2075  0108  1003               	clrc
  2076  0109  0CE0               	rrf	??_printf+3,f
  2077  010A  0CDF               	rrf	??_printf+2,f
  2078  010B  0CDE               	rrf	??_printf+1,f
  2079  010C  0CDD               	rrf	??_printf,f
  2080  010D  3EFF               	addlw	-1
  2081  010E  1D03               	skipz
  2082  010F  2908               	goto	u5255
  2083  0110  085E               	movf	??_printf+1,w
  2084  0111  1683               	bsf	3,5	;RP0=1, select bank1
  2085  0112  00B0               	movwf	(printf@exp+1)^(0+128)
  2086  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0114  085D               	movf	??_printf,w
  2088  0115  1683               	bsf	3,5	;RP0=1, select bank1
  2089  0116  00AF               	movwf	printf@exp^(0+128)
  2090  0117  3082               	movlw	-126
  2091  0118  01B0               	clrf	(printf@exp+1)^(0+128)
  2092  0119  07AF               	addwf	printf@exp^(0+128),f
  2093  011A  1C03               	skipc
  2094  011B  03B0               	decf	(printf@exp+1)^(0+128),f
  2095  011C  30FF               	movlw	-1
  2096  011D  07AF               	addwf	printf@exp^(0+128),f
  2097  011E  1C03               	skipc
  2098  011F  03B0               	decf	(printf@exp+1)^(0+128),f
  2099  0120  3003               	movlw	3
  2100  0121  00F2               	movwf	?___wmul
  2101  0122  01F3               	clrf	?___wmul+1
  2102  0123  0830               	movf	(printf@exp+1)^(0+128),w
  2103  0124  00F5               	movwf	?___wmul+3
  2104  0125  082F               	movf	printf@exp^(0+128),w
  2105  0126  00F4               	movwf	?___wmul+2
  2106  0127  25E2               	fcall	___wmul
  2107  0128  0873               	movf	?___wmul+1,w
  2108  0129  00B0               	movwf	(printf@exp+1)^(0+128)
  2109  012A  0872               	movf	?___wmul,w
  2110  012B  00AF               	movwf	printf@exp^(0+128)
  2111  012C  300A               	movlw	10
  2112  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2113  012E  00A0               	movwf	?___awdiv
  2114  012F  01A1               	clrf	?___awdiv+1
  2115  0130  1683               	bsf	3,5	;RP0=1, select bank1
  2116  0131  0830               	movf	(printf@exp+1)^(0+128),w
  2117  0132  1283               	bcf	3,5	;RP0=0, select bank0
  2118  0133  00A3               	movwf	?___awdiv+3
  2119  0134  1683               	bsf	3,5	;RP0=1, select bank1
  2120  0135  082F               	movf	printf@exp^(0+128),w
  2121  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0137  00A2               	movwf	?___awdiv+2
  2123  0138  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2124  013D  0821               	movf	?___awdiv+1,w
  2125  013E  1683               	bsf	3,5	;RP0=1, select bank1
  2126  013F  00B0               	movwf	(printf@exp+1)^(0+128)
  2127  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0141  0820               	movf	?___awdiv,w
  2129  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0143  00AF               	movwf	printf@exp^(0+128)
  2131  0144  1FB0               	btfss	(printf@exp+1)^(0+128),7
  2132  0145  294A               	goto	l8241
  2133  0146  30FF               	movlw	-1
  2134  0147  07AF               	addwf	printf@exp^(0+128),f
  2135  0148  1C03               	skipc
  2136  0149  03B0               	decf	(printf@exp+1)^(0+128),f
  2137  014A                     l8241:	
  2138  014A  032F               	decf	printf@exp^(0+128),w
  2139  014B  3AFF               	xorlw	255
  2140  014C  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2141  0151  274A  120A  118A   	fcall	PL7	;call to abstracted procedure
  2142  0154  2777               	fcall	PL16	;call to abstracted procedure
  2143  0155  1683               	bsf	3,5	;RP0=1, select bank1
  2144  0156  0825               	movf	printf@integ^(0+128),w
  2145  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0158  00B8               	movwf	?___ftmul+3
  2147  0159  1683               	bsf	3,5	;RP0=1, select bank1
  2148  015A  0826               	movf	(printf@integ+1)^(0+128),w
  2149  015B  1283               	bcf	3,5	;RP0=0, select bank0
  2150  015C  00B9               	movwf	?___ftmul+4
  2151  015D  1683               	bsf	3,5	;RP0=1, select bank1
  2152  015E  0827               	movf	(printf@integ+2)^(0+128),w
  2153  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0160  00BA               	movwf	?___ftmul+5
  2155  0161  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2156  0166  0835               	movf	?___ftmul,w
  2157  0167  1683               	bsf	3,5	;RP0=1, select bank1
  2158  0168  00A5               	movwf	printf@integ^(0+128)
  2159  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2160  016A  0836               	movf	?___ftmul+1,w
  2161  016B  1683               	bsf	3,5	;RP0=1, select bank1
  2162  016C  00A6               	movwf	(printf@integ+1)^(0+128)
  2163  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2164  016E  0837               	movf	?___ftmul+2,w
  2165  016F  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0170  00A7               	movwf	(printf@integ+2)^(0+128)
  2167  0171  2795  120A  118A   	fcall	PL21	;call to abstracted procedure
  2168  0174  3080               	movlw	128
  2169  0175  01F5               	clrf	?___ftge+3
  2170  0176  00F6               	movwf	?___ftge+4
  2171  0177  303F               	movlw	63
  2172  0178  00F7               	movwf	?___ftge+5
  2173  0179  25A8  120A  118A   	fcall	___ftge
  2174  017C  1803               	btfsc	3,0
  2175  017D  2983               	goto	l8249
  2176  017E  30FF               	movlw	-1
  2177  017F  07AF               	addwf	printf@exp^(0+128),f
  2178  0180  1C03               	skipc
  2179  0181  03B0               	decf	(printf@exp+1)^(0+128),f
  2180  0182  2993               	goto	l8253
  2181  0183                     l8249:	
  2182  0183  2795  120A  118A   	fcall	PL21	;call to abstracted procedure
  2183  0186  3020               	movlw	32
  2184  0187  01F5               	clrf	?___ftge+3
  2185  0188  00F6               	movwf	?___ftge+4
  2186  0189  3041               	movlw	65
  2187  018A  00F7               	movwf	?___ftge+5
  2188  018B  25A8  120A  118A   	fcall	___ftge
  2189  018E  1C03               	btfss	3,0
  2190  018F  2993               	goto	l8253
  2191  0190  0AAF               	incf	printf@exp^(0+128),f
  2192  0191  1903               	skipnz
  2193  0192  0AB0               	incf	(printf@exp+1)^(0+128),f
  2194  0193                     l8253:	
  2195  0193  0837               	movf	(printf@prec+1)^(0+128),w
  2196  0194  3A80               	xorlw	128
  2197  0195  00FF               	movwf	127
  2198  0196  3080               	movlw	128
  2199  0197  027F               	subwf	127,w
  2200  0198  1D03               	skipz
  2201  0199  299C               	goto	u5295
  2202  019A  300D               	movlw	13
  2203  019B  0236               	subwf	printf@prec^(0+128),w
  2204  019C                     u5295:	
  2205  019C  1803               	skipnc
  2206  019D  29C7               	goto	l8257
  2207  019E  27B1               	call	PL32	;select bank 1
  2208  019F  0836               	movf	printf@prec^(0+128),w
  2209  01A0  120A  158A  2100   	fcall	_fround
      +       120A  118A         
  2210  01A5  0850               	movf	?_fround,w
  2211  01A6  00C4               	movwf	?___ftadd
  2212  01A7  0851               	movf	?_fround+1,w
  2213  01A8  00C5               	movwf	?___ftadd+1
  2214  01A9  0852               	movf	?_fround+2,w
  2215  01AA  00C6               	movwf	?___ftadd+2
  2216  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2217  01AC  0833               	movf	printf@fval^(0+128),w
  2218  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2219  01AE  00C7               	movwf	?___ftadd+3
  2220  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  2221  01B0  0834               	movf	(printf@fval+1)^(0+128),w
  2222  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2223  01B2  00C8               	movwf	?___ftadd+4
  2224  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2225  01B4  0835               	movf	(printf@fval+2)^(0+128),w
  2226  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2227  01B6  00C9               	movwf	?___ftadd+5
  2228  01B7  160A  118A  273E   	fcall	___ftadd
      +       120A  118A         
  2229  01BC  0844               	movf	?___ftadd,w
  2230  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2231  01BE  00B3               	movwf	printf@fval^(0+128)
  2232  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2233  01C0  0845               	movf	?___ftadd+1,w
  2234  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2235  01C2  00B4               	movwf	(printf@fval+1)^(0+128)
  2236  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2237  01C4  0846               	movf	?___ftadd+2,w
  2238  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2239  01C6  00B5               	movwf	(printf@fval+2)^(0+128)
  2240  01C7                     l8257:	
  2241  01C7  27B1               	call	PL32	;select bank 1
  2242  01C8  0830               	movf	(printf@exp+1)^(0+128),w
  2243  01C9  3A80               	xorlw	128
  2244  01CA  00FF               	movwf	127
  2245  01CB  3080               	movlw	128
  2246  01CC  027F               	subwf	127,w
  2247  01CD  1D03               	skipz
  2248  01CE  29D1               	goto	u5305
  2249  01CF  300A               	movlw	10
  2250  01D0  022F               	subwf	printf@exp^(0+128),w
  2251  01D1                     u5305:	
  2252  01D1  1803               	skipnc
  2253  01D2  29F2               	goto	l8265
  2254  01D3  27B1               	call	PL32	;select bank 1
  2255  01D4  0835               	movf	(printf@fval+2)^(0+128),w
  2256  01D5  0434               	iorwf	(printf@fval+1)^(0+128),w
  2257  01D6  0433               	iorwf	printf@fval^(0+128),w
  2258  01D7  1903               	skipnz
  2259  01D8  2A33               	goto	l8281
  2260  01D9  0833               	movf	printf@fval^(0+128),w
  2261  01DA  276C  120A  118A   	fcall	PL14	;call to abstracted procedure
  2262  01DD  25FB  120A  118A   	fcall	___fttol
  2263  01E0  082B               	movf	?___fttol+3,w
  2264  01E1  042A               	iorwf	?___fttol+2,w
  2265  01E2  0429               	iorwf	?___fttol+1,w
  2266  01E3  0428               	iorwf	?___fttol,w
  2267  01E4  1D03               	skipz
  2268  01E5  2A33               	goto	l8281
  2269  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2270  01E7  0830               	movf	(printf@exp+1)^(0+128),w
  2271  01E8  3A80               	xorlw	128
  2272  01E9  00FF               	movwf	127
  2273  01EA  3080               	movlw	128
  2274  01EB  027F               	subwf	127,w
  2275  01EC  1D03               	skipz
  2276  01ED  29F0               	goto	u5335
  2277  01EE  3002               	movlw	2
  2278  01EF  022F               	subwf	printf@exp^(0+128),w
  2279  01F0                     u5335:	
  2280  01F0  1C03               	skipc
  2281  01F1  2A33               	goto	l8281
  2282  01F2                     l8265:	
  2283  01F2  27B1               	call	PL32	;select bank 1
  2284  01F3  2795  120A  118A   	fcall	PL21	;call to abstracted procedure
  2285  01F6  3070               	movlw	112
  2286  01F7  00F5               	movwf	?___ftge+3
  2287  01F8  3089               	movlw	137
  2288  01F9  00F6               	movwf	?___ftge+4
  2289  01FA  3040               	movlw	64
  2290  01FB  00F7               	movwf	?___ftge+5
  2291  01FC  25A8  120A  118A   	fcall	___ftge
  2292  01FF  1803               	btfsc	3,0
  2293  0200  2A03               	goto	l8269
  2294  0201  30F7               	movlw	-9
  2295  0202  2A04               	goto	L1
  2296  0203                     l8269:	
  2297  0203  30F8               	movlw	-8
  2298  0204                     L1:	
  2299  0204  07AF               	addwf	printf@exp^(0+128),f
  2300  0205  1C03               	skipc
  2301  0206  03B0               	decf	(printf@exp+1)^(0+128),f
  2302  0207  082F               	movf	printf@exp^(0+128),w
  2303  0208  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2304  020D  274A  120A  118A   	fcall	PL7	;call to abstracted procedure
  2305  0210  00F2               	movwf	?__tdiv_to_l_
  2306  0211  0834               	movf	(printf@fval+1)^(0+128),w
  2307  0212  00F3               	movwf	?__tdiv_to_l_+1
  2308  0213  0835               	movf	(printf@fval+2)^(0+128),w
  2309  0214  00F4               	movwf	?__tdiv_to_l_+2
  2310  0215  0825               	movf	printf@integ^(0+128),w
  2311  0216  00F5               	movwf	?__tdiv_to_l_+3
  2312  0217  0826               	movf	(printf@integ+1)^(0+128),w
  2313  0218  00F6               	movwf	?__tdiv_to_l_+4
  2314  0219  0827               	movf	(printf@integ+2)^(0+128),w
  2315  021A  00F7               	movwf	?__tdiv_to_l_+5
  2316  021B  269F  120A  118A   	fcall	__tdiv_to_l_
  2317  021E  0875               	movf	?__tdiv_to_l_+3,w
  2318  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2319  0220  00A3               	movwf	(_printf$3168+3)^(0+128)
  2320  0221  0874               	movf	?__tdiv_to_l_+2,w
  2321  0222  00A2               	movwf	(_printf$3168+2)^(0+128)
  2322  0223  0873               	movf	?__tdiv_to_l_+1,w
  2323  0224  00A1               	movwf	(_printf$3168+1)^(0+128)
  2324  0225  0872               	movf	?__tdiv_to_l_,w
  2325  0226  00A0               	movwf	_printf$3168^(0+128)
  2326  0227  0823               	movf	(_printf$3168+3)^(0+128),w
  2327  0228  00AC               	movwf	(printf@_val+3)^(0+128)
  2328  0229  0822               	movf	(_printf$3168+2)^(0+128),w
  2329  022A  00AB               	movwf	(printf@_val+2)^(0+128)
  2330  022B  0821               	movf	(_printf$3168+1)^(0+128),w
  2331  022C  00AA               	movwf	(printf@_val+1)^(0+128)
  2332  022D  0820               	movf	_printf$3168^(0+128),w
  2333  022E  00A9               	movwf	printf@_val^(0+128)
  2334  022F  01B3               	clrf	printf@fval^(0+128)
  2335  0230  01B4               	clrf	(printf@fval+1)^(0+128)
  2336  0231  01B5               	clrf	(printf@fval+2)^(0+128)
  2337  0232  2A76               	goto	l8285
  2338  0233                     l8281:	
  2339  0233  27B1               	call	PL32	;select bank 1
  2340  0234  0833               	movf	printf@fval^(0+128),w
  2341  0235  276C  120A  118A   	fcall	PL14	;call to abstracted procedure
  2342  0238  25FB  120A  118A   	fcall	___fttol
  2343  023B  273C               	fcall	PL6	;call to abstracted procedure
  2344  023C  1683               	bsf	3,5	;RP0=1, select bank1
  2345  023D  00A9               	movwf	printf@_val^(0+128)
  2346  023E  082C               	movf	(printf@_val+3)^(0+128),w
  2347  023F  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0240  00A3               	movwf	?___lltoft+3
  2349  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2350  0242  082B               	movf	(printf@_val+2)^(0+128),w
  2351  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0244  00A2               	movwf	?___lltoft+2
  2353  0245  1683               	bsf	3,5	;RP0=1, select bank1
  2354  0246  082A               	movf	(printf@_val+1)^(0+128),w
  2355  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0248  00A1               	movwf	?___lltoft+1
  2357  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2358  024A  0829               	movf	printf@_val^(0+128),w
  2359  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2360  024C  00A0               	movwf	?___lltoft
  2361  024D  120A  158A  2452   	fcall	___lltoft
      +       120A  118A         
  2362  0252  0820               	movf	?___lltoft,w
  2363  0253  00D0               	movwf	?___ftsub
  2364  0254  0821               	movf	?___lltoft+1,w
  2365  0255  00D1               	movwf	?___ftsub+1
  2366  0256  0822               	movf	?___lltoft+2,w
  2367  0257  00D2               	movwf	?___ftsub+2
  2368  0258  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0259  0833               	movf	printf@fval^(0+128),w
  2370  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2371  025B  00D3               	movwf	?___ftsub+3
  2372  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2373  025D  0834               	movf	(printf@fval+1)^(0+128),w
  2374  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2375  025F  00D4               	movwf	?___ftsub+4
  2376  0260  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0261  0835               	movf	(printf@fval+2)^(0+128),w
  2378  0262  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0263  00D5               	movwf	?___ftsub+5
  2380  0264  160A  118A  2728   	fcall	___ftsub
      +       120A  118A         
  2381  0269  0850               	movf	?___ftsub,w
  2382  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2383  026B  00B3               	movwf	printf@fval^(0+128)
  2384  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2385  026D  0851               	movf	?___ftsub+1,w
  2386  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2387  026F  00B4               	movwf	(printf@fval+1)^(0+128)
  2388  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2389  0271  0852               	movf	?___ftsub+2,w
  2390  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2391  0273  00B5               	movwf	(printf@fval+2)^(0+128)
  2392  0274  01AF               	clrf	printf@exp^(0+128)
  2393  0275  01B0               	clrf	(printf@exp+1)^(0+128)
  2394  0276                     l8285:	
  2395  0276  01B8               	clrf	printf@c^(0+128)
  2396  0277  0AB8               	incf	printf@c^(0+128),f
  2397  0278                     l8291:	
  2398  0278  271F               	fcall	PL2	;call to abstracted procedure
  2399  0279  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2400  027E  00DE               	movwf	??_printf+1
  2401  027F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2402  0284  00DF               	movwf	??_printf+2
  2403  0285  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2404  028A  00E0               	movwf	??_printf+3
  2405  028B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2406  0290  00E1               	movwf	??_printf+4
  2407  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2408  0292  022C               	subwf	(printf@_val+3)^(0+128),w
  2409  0293  1D03               	skipz
  2410  0294  2AA5               	goto	u5355
  2411  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0296  0860               	movf	??_printf+3,w
  2413  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2414  0298  022B               	subwf	(printf@_val+2)^(0+128),w
  2415  0299  1D03               	skipz
  2416  029A  2AA5               	goto	u5355
  2417  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2418  029C  085F               	movf	??_printf+2,w
  2419  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2420  029E  022A               	subwf	(printf@_val+1)^(0+128),w
  2421  029F  1D03               	skipz
  2422  02A0  2AA5               	goto	u5355
  2423  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2424  02A2  085E               	movf	??_printf+1,w
  2425  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2426  02A4  0229               	subwf	printf@_val^(0+128),w
  2427  02A5                     u5355:	
  2428  02A5  1C03               	btfss	3,0
  2429  02A6  2AAC               	goto	l8299
  2430  02A7  0AB8               	incf	printf@c^(0+128),f
  2431  02A8  0838               	movf	printf@c^(0+128),w
  2432  02A9  3A0A               	xorlw	10
  2433  02AA  1D03               	skipz
  2434  02AB  2A78               	goto	l8291
  2435  02AC                     l8299:	
  2436  02AC  0836               	movf	printf@prec^(0+128),w
  2437  02AD  0738               	addwf	printf@c^(0+128),w
  2438  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2439  02AF  00DD               	movwf	??_printf
  2440  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2441  02B1  0837               	movf	(printf@prec+1)^(0+128),w
  2442  02B2  1803               	skipnc
  2443  02B3  0A37               	incf	(printf@prec+1)^(0+128),w
  2444  02B4  1BB8               	btfsc	printf@c^(0+128),7
  2445  02B5  3EFF               	addlw	255
  2446  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2447  02B7  00DE               	movwf	??_printf+1
  2448  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2449  02B9  082F               	movf	printf@exp^(0+128),w
  2450  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2451  02BB  075D               	addwf	??_printf,w
  2452  02BC  00DF               	movwf	??_printf+2
  2453  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2454  02BE  0830               	movf	(printf@exp+1)^(0+128),w
  2455  02BF  1803               	skipnc
  2456  02C0  0A30               	incf	(printf@exp+1)^(0+128),w
  2457  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2458  02C2  075E               	addwf	??_printf+1,w
  2459  02C3  00E0               	movwf	??_printf+3
  2460  02C4  085F               	movf	??_printf+2,w
  2461  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2462  02C6  02B1               	subwf	printf@width^(0+128),f
  2463  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2464  02C8  0860               	movf	??_printf+3,w
  2465  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2466  02CA  1C03               	skipc
  2467  02CB  03B2               	decf	(printf@width+1)^(0+128),f
  2468  02CC  02B2               	subwf	(printf@width+1)^(0+128),f
  2469  02CD  0837               	movf	(printf@prec+1)^(0+128),w
  2470  02CE  0436               	iorwf	printf@prec^(0+128),w
  2471  02CF  1903               	skipnz
  2472  02D0  2AD5               	goto	l8305
  2473  02D1  30FF               	movlw	-1
  2474  02D2  07B1               	addwf	printf@width^(0+128),f
  2475  02D3  1C03               	skipc
  2476  02D4  03B2               	decf	(printf@width+1)^(0+128),f
  2477  02D5                     l8305:	
  2478  02D5  082D               	movf	printf@flag^(0+128),w
  2479  02D6  3903               	andlw	3
  2480  02D7  1903               	btfsc	3,2
  2481  02D8  2ADD               	goto	l8309
  2482  02D9  30FF               	movlw	-1
  2483  02DA  07B1               	addwf	printf@width^(0+128),f
  2484  02DB  1C03               	skipc
  2485  02DC  03B2               	decf	(printf@width+1)^(0+128),f
  2486  02DD                     l8309:	
  2487  02DD  192D               	btfsc	printf@flag^(0+128),2
  2488  02DE  2AE9               	goto	l8317
  2489  02DF  2AFE               	goto	l8323
  2490  02E0                     l8313:	
  2491  02E0  3030               	movlw	48
  2492  02E1  2564  120A  118A   	fcall	_putch
  2493  02E4  30FF               	movlw	-1
  2494  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2495  02E6  07B1               	addwf	printf@width^(0+128),f
  2496  02E7  1C03               	skipc
  2497  02E8  03B2               	decf	(printf@width+1)^(0+128),f
  2498  02E9                     l8317:	
  2499  02E9  0832               	movf	(printf@width+1)^(0+128),w
  2500  02EA  3A80               	xorlw	128
  2501  02EB  00FF               	movwf	127
  2502  02EC  3080               	movlw	128
  2503  02ED  027F               	subwf	127,w
  2504  02EE  1D03               	skipz
  2505  02EF  2AF2               	goto	u5405
  2506  02F0  3001               	movlw	1
  2507  02F1  0231               	subwf	printf@width^(0+128),w
  2508  02F2                     u5405:	
  2509  02F2  1C03               	btfss	3,0
  2510  02F3  2B3C               	goto	l8331
  2511  02F4  2AE0               	goto	l8313
  2512  02F5                     l8319:	
  2513  02F5  3020               	movlw	32
  2514  02F6  2564  120A  118A   	fcall	_putch
  2515  02F9  30FF               	movlw	-1
  2516  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2517  02FB  07B1               	addwf	printf@width^(0+128),f
  2518  02FC  1C03               	skipc
  2519  02FD  03B2               	decf	(printf@width+1)^(0+128),f
  2520  02FE                     l8323:	
  2521  02FE  0832               	movf	(printf@width+1)^(0+128),w
  2522  02FF  3A80               	xorlw	128
  2523  0300  00FF               	movwf	127
  2524  0301  3080               	movlw	128
  2525  0302  027F               	subwf	127,w
  2526  0303  1D03               	skipz
  2527  0304  2B07               	goto	u5415
  2528  0305  3001               	movlw	1
  2529  0306  0231               	subwf	printf@width^(0+128),w
  2530  0307                     u5415:	
  2531  0307  1803               	skipnc
  2532  0308  2AF5               	goto	l8319
  2533  0309  27B1               	call	PL32	;select bank 1
  2534  030A  082D               	movf	printf@flag^(0+128),w
  2535  030B  3903               	andlw	3
  2536  030C  1903               	btfsc	3,2
  2537  030D  2B3C               	goto	l8331
  2538  030E  302D               	movlw	45
  2539  030F  2B39               	goto	L2
  2540  0310                     l8329:	
  2541  0310  2729  120A  118A   	fcall	PL4	;call to abstracted procedure
  2542  0313  271F               	fcall	PL2	;call to abstracted procedure
  2543  0314  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2544  0319  00F2               	movwf	?___lldiv
  2545  031A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2546  031F  00F3               	movwf	?___lldiv+1
  2547  0320  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2548  0325  00F4               	movwf	?___lldiv+2
  2549  0326  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2550  032B  2731  120A  118A   	fcall	PL5	;call to abstracted procedure
  2551  032E  2656  120A  118A   	fcall	___lldiv
  2552  0331  2757  120A  118A   	fcall	PL12	;call to abstracted procedure
  2553  0334  256A  120A  118A   	fcall	___llmod
  2554  0337  0825               	movf	?___llmod,w
  2555  0338  3E30               	addlw	48
  2556  0339                     L2:	
  2557  0339  2564  120A  118A   	fcall	_putch
  2558  033C                     l8331:	
  2559  033C  27B1               	call	PL32	;select bank 1
  2560  033D  03B8               	decf	printf@c^(0+128),f
  2561  033E  0F38               	incfsz	printf@c^(0+128),w
  2562  033F  2B10               	goto	l8329
  2563  0340                     l8337:	
  2564  0340  0830               	movf	(printf@exp+1)^(0+128),w
  2565  0341  3A80               	xorlw	128
  2566  0342  00FF               	movwf	127
  2567  0343  3080               	movlw	128
  2568  0344  027F               	subwf	127,w
  2569  0345  1D03               	skipz
  2570  0346  2B49               	goto	u5445
  2571  0347  3001               	movlw	1
  2572  0348  022F               	subwf	printf@exp^(0+128),w
  2573  0349                     u5445:	
  2574  0349  1C03               	btfss	3,0
  2575  034A  2B55               	goto	l8339
  2576  034B  3030               	movlw	48
  2577  034C  2564  120A  118A   	fcall	_putch
  2578  034F  30FF               	movlw	-1
  2579  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2580  0351  07AF               	addwf	printf@exp^(0+128),f
  2581  0352  1C03               	skipc
  2582  0353  03B0               	decf	(printf@exp+1)^(0+128),f
  2583  0354  2B40               	goto	l8337
  2584  0355                     l8339:	
  2585  0355  27B1               	call	PL32	;select bank 1
  2586  0356  0837               	movf	(printf@prec+1)^(0+128),w
  2587  0357  3A80               	xorlw	128
  2588  0358  00FF               	movwf	127
  2589  0359  3080               	movlw	128
  2590  035A  027F               	subwf	127,w
  2591  035B  1D03               	skipz
  2592  035C  2B5F               	goto	u5455
  2593  035D  3009               	movlw	9
  2594  035E  0236               	subwf	printf@prec^(0+128),w
  2595  035F                     u5455:	
  2596  035F  1C03               	skipc
  2597  0360  2B64               	goto	l8343
  2598  0361  3008               	movlw	8
  2599  0362  27B1               	call	PL32	;select bank 1
  2600  0363  2B66               	goto	L3
  2601  0364                     l8343:	
  2602  0364  27B1               	call	PL32	;select bank 1
  2603  0365  0836               	movf	printf@prec^(0+128),w
  2604  0366                     L3:	
  2605  0366  00B8               	movwf	printf@c^(0+128)
  2606  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0368  00DD               	movwf	??_printf
  2608  0369  01DE               	clrf	??_printf+1
  2609  036A  1BDD               	btfsc	??_printf,7
  2610  036B  03DE               	decf	??_printf+1,f
  2611  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2612  036D  02B6               	subwf	printf@prec^(0+128),f
  2613  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2614  036F  085E               	movf	??_printf+1,w
  2615  0370  1683               	bsf	3,5	;RP0=1, select bank1
  2616  0371  1C03               	skipc
  2617  0372  03B7               	decf	(printf@prec+1)^(0+128),f
  2618  0373  02B7               	subwf	(printf@prec+1)^(0+128),f
  2619  0374  0838               	movf	printf@c^(0+128),w
  2620  0375  1903               	btfsc	3,2
  2621  0376  2B79               	goto	l2267
  2622  0377  302E               	movlw	46
  2623  0378  2564               	fcall	_putch
  2624  0379                     l2267:	
  2625  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2626  037A  0838               	movf	printf@c^(0+128),w
  2627  037B  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2628  0380  0844               	movf	?_scale,w
  2629  0381  00B8               	movwf	?___ftmul+3
  2630  0382  0845               	movf	?_scale+1,w
  2631  0383  00B9               	movwf	?___ftmul+4
  2632  0384  0846               	movf	?_scale+2,w
  2633  0385  00BA               	movwf	?___ftmul+5
  2634  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2635  0387  0833               	movf	printf@fval^(0+128),w
  2636  0388  2777               	fcall	PL16	;call to abstracted procedure
  2637  0389  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2638  038E  0835               	movf	?___ftmul,w
  2639  038F  00A8               	movwf	?___fttol
  2640  0390  0836               	movf	?___ftmul+1,w
  2641  0391  00A9               	movwf	?___fttol+1
  2642  0392  0837               	movf	?___ftmul+2,w
  2643  0393  00AA               	movwf	?___fttol+2
  2644  0394  25FB  120A  118A   	fcall	___fttol
  2645  0397  273C  120A  118A   	fcall	PL6	;call to abstracted procedure
  2646  039A  2C01               	goto	L4
  2647  039B                     l8347:	
  2648  039B  2729  120A  118A   	fcall	PL4	;call to abstracted procedure
  2649  039E  271F               	fcall	PL2	;call to abstracted procedure
  2650  039F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2651  03A4  00F2               	movwf	?___lldiv
  2652  03A5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2653  03AA  00F3               	movwf	?___lldiv+1
  2654  03AB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2655  03B0  00F4               	movwf	?___lldiv+2
  2656  03B1  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2657  03B6  2731  120A  118A   	fcall	PL5	;call to abstracted procedure
  2658  03B9  2656  120A  118A   	fcall	___lldiv
  2659  03BC  2757  120A  118A   	fcall	PL12	;call to abstracted procedure
  2660  03BF  256A  120A  118A   	fcall	___llmod
  2661  03C2  0825               	movf	?___llmod,w
  2662  03C3  3E30               	addlw	48
  2663  03C4  2564  120A  118A   	fcall	_putch
  2664  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2665  03C8  271F               	fcall	PL2	;call to abstracted procedure
  2666  03C9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2667  03CE  00A5               	movwf	?___llmod
  2668  03CF  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2669  03D4  00A6               	movwf	?___llmod+1
  2670  03D5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2671  03DA  00A7               	movwf	?___llmod+2
  2672  03DB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2673  03E0  00A8               	movwf	?___llmod+3
  2674  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2675  03E2  082C               	movf	(printf@_val+3)^(0+128),w
  2676  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2677  03E4  00AC               	movwf	?___llmod+7
  2678  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2679  03E6  082B               	movf	(printf@_val+2)^(0+128),w
  2680  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2681  03E8  00AB               	movwf	?___llmod+6
  2682  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2683  03EA  082A               	movf	(printf@_val+1)^(0+128),w
  2684  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2685  03EC  00AA               	movwf	?___llmod+5
  2686  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2687  03EE  0829               	movf	printf@_val^(0+128),w
  2688  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2689  03F0  00A9               	movwf	?___llmod+4
  2690  03F1  256A  120A  118A   	fcall	___llmod
  2691  03F4  0828               	movf	?___llmod+3,w
  2692  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2693  03F6  00AC               	movwf	(printf@_val+3)^(0+128)
  2694  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2695  03F8  0827               	movf	?___llmod+2,w
  2696  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2697  03FA  00AB               	movwf	(printf@_val+2)^(0+128)
  2698  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2699  03FC  0826               	movf	?___llmod+1,w
  2700  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2701  03FE  00AA               	movwf	(printf@_val+1)^(0+128)
  2702  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0400  0825               	movf	?___llmod,w
  2704  0401                     L4:	
  2705  0401  1683               	bsf	3,5	;RP0=1, select bank1
  2706  0402  00A9               	movwf	printf@_val^(0+128)
  2707  0403  03B8               	decf	printf@c^(0+128),f
  2708  0404  0F38               	incfsz	printf@c^(0+128),w
  2709  0405  2B9B               	goto	l8347
  2710  0406                     l8355:	
  2711  0406  0837               	movf	(printf@prec+1)^(0+128),w
  2712  0407  0436               	iorwf	printf@prec^(0+128),w
  2713  0408  1903               	btfsc	3,2
  2714  0409  2813               	goto	l8441
  2715  040A  3030               	movlw	48
  2716  040B  2564  120A  118A   	fcall	_putch
  2717  040E  30FF               	movlw	-1
  2718  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2719  0410  07B6               	addwf	printf@prec^(0+128),f
  2720  0411  1C03               	skipc
  2721  0412  03B7               	decf	(printf@prec+1)^(0+128),f
  2722  0413  2C06               	goto	l8355
  2723  0414                     l8357:	
  2724  0414  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0415  0824               	movf	printf@ap^(0+128),w
  2726  0416  0084               	movwf	4
  2727  0417  1383               	bcf	3,7	;select IRP bank0
  2728  0418  27AA  120A  118A   	fcall	PL30	;call to abstracted procedure
  2729  041B  085D               	movf	??_printf,w
  2730  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2731  041D  00A9               	movwf	printf@_val^(0+128)
  2732  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2733  041F  085E               	movf	??_printf+1,w
  2734  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0421  00AA               	movwf	(printf@_val+1)^(0+128)
  2736  0422  3000               	movlw	0
  2737  0423  1BAA               	btfsc	(printf@_val+1)^(0+128),7
  2738  0424  30FF               	movlw	255
  2739  0425  00AB               	movwf	(printf@_val+2)^(0+128)
  2740  0426  00AC               	movwf	(printf@_val+3)^(0+128)
  2741  0427  0AA4               	incf	printf@ap^(0+128),f
  2742  0428  0AA4               	incf	printf@ap^(0+128),f
  2743  0429  1FAC               	btfss	(printf@_val+3)^(0+128),7
  2744  042A  2C38               	goto	l8367
  2745  042B  3003               	movlw	3
  2746  042C  04AD               	iorwf	printf@flag^(0+128),f
  2747  042D  09A9               	comf	printf@_val^(0+128),f
  2748  042E  09AA               	comf	(printf@_val+1)^(0+128),f
  2749  042F  09AB               	comf	(printf@_val+2)^(0+128),f
  2750  0430  09AC               	comf	(printf@_val+3)^(0+128),f
  2751  0431  0AA9               	incf	printf@_val^(0+128),f
  2752  0432  1903               	skipnz
  2753  0433  0AAA               	incf	(printf@_val+1)^(0+128),f
  2754  0434  1903               	skipnz
  2755  0435  0AAB               	incf	(printf@_val+2)^(0+128),f
  2756  0436  1903               	skipnz
  2757  0437  0AAC               	incf	(printf@_val+3)^(0+128),f
  2758  0438                     l8367:	
  2759  0438  0837               	movf	(printf@prec+1)^(0+128),w
  2760  0439  0436               	iorwf	printf@prec^(0+128),w
  2761  043A  1D03               	skipz
  2762  043B  2C44               	goto	l8373
  2763  043C  082C               	movf	(printf@_val+3)^(0+128),w
  2764  043D  042B               	iorwf	(printf@_val+2)^(0+128),w
  2765  043E  042A               	iorwf	(printf@_val+1)^(0+128),w
  2766  043F  0429               	iorwf	printf@_val^(0+128),w
  2767  0440  1903               	btfsc	3,2
  2768  0441  0AB6               	incf	printf@prec^(0+128),f
  2769  0442  1903               	skipnz
  2770  0443  0AB7               	incf	(printf@prec+1)^(0+128),f
  2771  0444                     l8373:	
  2772  0444  01B8               	clrf	printf@c^(0+128)
  2773  0445  0AB8               	incf	printf@c^(0+128),f
  2774  0446                     l8379:	
  2775  0446  271F               	fcall	PL2	;call to abstracted procedure
  2776  0447  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2777  044C  00DE               	movwf	??_printf+1
  2778  044D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2779  0452  00DF               	movwf	??_printf+2
  2780  0453  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2781  0458  00E0               	movwf	??_printf+3
  2782  0459  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2783  045E  00E1               	movwf	??_printf+4
  2784  045F  1683               	bsf	3,5	;RP0=1, select bank1
  2785  0460  022C               	subwf	(printf@_val+3)^(0+128),w
  2786  0461  1D03               	skipz
  2787  0462  2C73               	goto	u5525
  2788  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0464  0860               	movf	??_printf+3,w
  2790  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2791  0466  022B               	subwf	(printf@_val+2)^(0+128),w
  2792  0467  1D03               	skipz
  2793  0468  2C73               	goto	u5525
  2794  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2795  046A  085F               	movf	??_printf+2,w
  2796  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2797  046C  022A               	subwf	(printf@_val+1)^(0+128),w
  2798  046D  1D03               	skipz
  2799  046E  2C73               	goto	u5525
  2800  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0470  085E               	movf	??_printf+1,w
  2802  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2803  0472  0229               	subwf	printf@_val^(0+128),w
  2804  0473                     u5525:	
  2805  0473  1C03               	btfss	3,0
  2806  0474  2C7A               	goto	l8387
  2807  0475  0AB8               	incf	printf@c^(0+128),f
  2808  0476  0838               	movf	printf@c^(0+128),w
  2809  0477  3A0A               	xorlw	10
  2810  0478  1D03               	skipz
  2811  0479  2C46               	goto	l8379
  2812  047A                     l8387:	
  2813  047A  0838               	movf	printf@c^(0+128),w
  2814  047B  2782  120A  118A   	fcall	PL18	;call to abstracted procedure
  2815  047E  0837               	movf	(printf@prec+1)^(0+128),w
  2816  047F  3A80               	xorlw	128
  2817  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2818  0481  025F               	subwf	??_printf+2,w
  2819  0482  1D03               	skipz
  2820  0483  2C88               	goto	u5545
  2821  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2822  0485  0836               	movf	printf@prec^(0+128),w
  2823  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2824  0487  025D               	subwf	??_printf,w
  2825  0488                     u5545:	
  2826  0488  1803               	skipnc
  2827  0489  2C8E               	goto	l8391
  2828  048A  27B1               	call	PL32	;select bank 1
  2829  048B  0836               	movf	printf@prec^(0+128),w
  2830  048C  00B8               	movwf	printf@c^(0+128)
  2831  048D  2CA6               	goto	l8395
  2832  048E                     l8391:	
  2833  048E  1683               	bsf	3,5	;RP0=1, select bank1
  2834  048F  278C  120A  118A   	fcall	PL20	;call to abstracted procedure
  2835  0492  0837               	movf	(printf@prec+1)^(0+128),w
  2836  0493  3A80               	xorlw	128
  2837  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0495  00DF               	movwf	??_printf+2
  2839  0496  085E               	movf	??_printf+1,w
  2840  0497  3A80               	xorlw	128
  2841  0498  025F               	subwf	??_printf+2,w
  2842  0499  1D03               	skipz
  2843  049A  2C9E               	goto	u5555
  2844  049B  085D               	movf	??_printf,w
  2845  049C  1683               	bsf	3,5	;RP0=1, select bank1
  2846  049D  0236               	subwf	printf@prec^(0+128),w
  2847  049E                     u5555:	
  2848  049E  1803               	skipnc
  2849  049F  2CA6               	goto	l8395
  2850  04A0  27B1               	call	PL32	;select bank 1
  2851  04A1  0838               	movf	printf@c^(0+128),w
  2852  04A2  00B6               	movwf	printf@prec^(0+128)
  2853  04A3  01B7               	clrf	(printf@prec+1)^(0+128)
  2854  04A4  1BB6               	btfsc	printf@prec^(0+128),7
  2855  04A5  03B7               	decf	(printf@prec+1)^(0+128),f
  2856  04A6                     l8395:	
  2857  04A6  27B1               	call	PL32	;select bank 1
  2858  04A7  0832               	movf	(printf@width+1)^(0+128),w
  2859  04A8  0431               	iorwf	printf@width^(0+128),w
  2860  04A9  1903               	skipnz
  2861  04AA  2CB3               	goto	l8401
  2862  04AB  082D               	movf	printf@flag^(0+128),w
  2863  04AC  3903               	andlw	3
  2864  04AD  1903               	btfsc	3,2
  2865  04AE  2CB3               	goto	l8401
  2866  04AF  30FF               	movlw	-1
  2867  04B0  07B1               	addwf	printf@width^(0+128),f
  2868  04B1  1C03               	skipc
  2869  04B2  03B2               	decf	(printf@width+1)^(0+128),f
  2870  04B3                     l8401:	
  2871  04B3  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2872  04B4  2CD0               	goto	l8409
  2873  04B5  0837               	movf	(printf@prec+1)^(0+128),w
  2874  04B6  3A80               	xorlw	128
  2875  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2876  04B8  00DD               	movwf	??_printf
  2877  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  2878  04BA  0832               	movf	(printf@width+1)^(0+128),w
  2879  04BB  3A80               	xorlw	128
  2880  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2881  04BD  025D               	subwf	??_printf,w
  2882  04BE  1D03               	skipz
  2883  04BF  2CC3               	goto	u5595
  2884  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  2885  04C1  0831               	movf	printf@width^(0+128),w
  2886  04C2  0236               	subwf	printf@prec^(0+128),w
  2887  04C3                     u5595:	
  2888  04C3  1803               	skipnc
  2889  04C4  2CCD               	goto	l8407
  2890  04C5  27B1               	call	PL32	;select bank 1
  2891  04C6  0836               	movf	printf@prec^(0+128),w
  2892  04C7  02B1               	subwf	printf@width^(0+128),f
  2893  04C8  0837               	movf	(printf@prec+1)^(0+128),w
  2894  04C9  1C03               	skipc
  2895  04CA  03B2               	decf	(printf@width+1)^(0+128),f
  2896  04CB  02B2               	subwf	(printf@width+1)^(0+128),f
  2897  04CC  2CD0               	goto	l8409
  2898  04CD                     l8407:	
  2899  04CD  27B1               	call	PL32	;select bank 1
  2900  04CE  01B1               	clrf	printf@width^(0+128)
  2901  04CF  01B2               	clrf	(printf@width+1)^(0+128)
  2902  04D0                     l8409:	
  2903  04D0  0838               	movf	printf@c^(0+128),w
  2904  04D1  2782  120A  118A   	fcall	PL18	;call to abstracted procedure
  2905  04D4  0832               	movf	(printf@width+1)^(0+128),w
  2906  04D5  3A80               	xorlw	128
  2907  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2908  04D7  025F               	subwf	??_printf+2,w
  2909  04D8  1D03               	skipz
  2910  04D9  2CDE               	goto	u5605
  2911  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2912  04DB  0831               	movf	printf@width^(0+128),w
  2913  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  2914  04DD  025D               	subwf	??_printf,w
  2915  04DE                     u5605:	
  2916  04DE  1803               	skipnc
  2917  04DF  2CEC               	goto	l8413
  2918  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  2919  04E1  278C  120A  118A   	fcall	PL20	;call to abstracted procedure
  2920  04E4  02B1               	subwf	printf@width^(0+128),f
  2921  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2922  04E6  085E               	movf	??_printf+1,w
  2923  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  2924  04E8  1C03               	skipc
  2925  04E9  03B2               	decf	(printf@width+1)^(0+128),f
  2926  04EA  02B2               	subwf	(printf@width+1)^(0+128),f
  2927  04EB  2CEF               	goto	l8415
  2928  04EC                     l8413:	
  2929  04EC  27B1               	call	PL32	;select bank 1
  2930  04ED  01B1               	clrf	printf@width^(0+128)
  2931  04EE  01B2               	clrf	(printf@width+1)^(0+128)
  2932  04EF                     l8415:	
  2933  04EF  1D2D               	btfss	printf@flag^(0+128),2
  2934  04F0  2D08               	goto	l8427
  2935  04F1  082D               	movf	printf@flag^(0+128),w
  2936  04F2  3903               	andlw	3
  2937  04F3  1903               	btfsc	3,2
  2938  04F4  2CF9               	goto	l8421
  2939  04F5  302D               	movlw	45
  2940  04F6  2564  120A  118A   	fcall	_putch
  2941  04F9                     l8421:	
  2942  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  2943  04FA                     L6:	
  2944  04FA  0832               	movf	(printf@width+1)^(0+128),w
  2945  04FB  0431               	iorwf	printf@width^(0+128),w
  2946  04FC  1903               	skipnz
  2947  04FD  2D21               	goto	l8439
  2948  04FE  3030               	movlw	48
  2949  04FF  2564  120A  118A   	fcall	_putch
  2950  0502  30FF               	movlw	-1
  2951  0503  1683               	bsf	3,5	;RP0=1, select bank1
  2952  0504  07B1               	addwf	printf@width^(0+128),f
  2953  0505  1C03               	skipc
  2954  0506  03B2               	decf	(printf@width+1)^(0+128),f
  2955  0507  2CFA               	goto	L6
  2956  0508                     l8427:	
  2957  0508  0832               	movf	(printf@width+1)^(0+128),w
  2958  0509  0431               	iorwf	printf@width^(0+128),w
  2959  050A  1903               	skipnz
  2960  050B  2D19               	goto	l8433
  2961  050C                     l8429:	
  2962  050C  3020               	movlw	32
  2963  050D  2564  120A  118A   	fcall	_putch
  2964  0510  30FF               	movlw	-1
  2965  0511  1683               	bsf	3,5	;RP0=1, select bank1
  2966  0512  07B1               	addwf	printf@width^(0+128),f
  2967  0513  1C03               	skipc
  2968  0514  03B2               	decf	(printf@width+1)^(0+128),f
  2969  0515  0832               	movf	(printf@width+1)^(0+128),w
  2970  0516  0431               	iorwf	printf@width^(0+128),w
  2971  0517  1D03               	skipz
  2972  0518  2D0C               	goto	l8429
  2973  0519                     l8433:	
  2974  0519  082D               	movf	printf@flag^(0+128),w
  2975  051A  3903               	andlw	3
  2976  051B  1903               	btfsc	3,2
  2977  051C  2D21               	goto	l8439
  2978  051D  302D               	movlw	45
  2979  051E                     L5:	
  2980  051E  2564  120A  118A   	fcall	_putch
  2981  0521                     l8439:	
  2982  0521  30FF               	movlw	-1
  2983  0522  1683               	bsf	3,5	;RP0=1, select bank1
  2984  0523  07B6               	addwf	printf@prec^(0+128),f
  2985  0524  1C03               	skipc
  2986  0525  03B7               	decf	(printf@prec+1)^(0+128),f
  2987  0526  0A36               	incf	printf@prec^(0+128),w
  2988  0527  1903               	skipnz
  2989  0528  0A37               	incf	(printf@prec+1)^(0+128),w
  2990  0529  1903               	btfsc	3,2
  2991  052A  2813               	goto	l8441
  2992  052B  300A               	movlw	10
  2993  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2994  052D  00A5               	movwf	?___llmod
  2995  052E  01A6               	clrf	?___llmod+1
  2996  052F  01A7               	clrf	?___llmod+2
  2997  0530  01A8               	clrf	?___llmod+3
  2998  0531  1683               	bsf	3,5	;RP0=1, select bank1
  2999  0532  0836               	movf	printf@prec^(0+128),w
  3000  0533  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0534  00DD               	movwf	??_printf
  3002  0535  1003               	clrc
  3003  0536  0DDD               	rlf	??_printf,f
  3004  0537  1003               	clrc
  3005  0538  0D5D               	rlf	??_printf,w
  3006  0539  3E4F               	addlw	low (_dpowers-__stringbase)
  3007  053A  0084               	movwf	4
  3008  053B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3009  0540  00F2               	movwf	?___lldiv
  3010  0541  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3011  0546  00F3               	movwf	?___lldiv+1
  3012  0547  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3013  054C  00F4               	movwf	?___lldiv+2
  3014  054D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3015  0552  2731  120A  118A   	fcall	PL5	;call to abstracted procedure
  3016  0555  2656  120A  118A   	fcall	___lldiv
  3017  0558  2757  120A  118A   	fcall	PL12	;call to abstracted procedure
  3018  055B  256A  120A  118A   	fcall	___llmod
  3019  055E  0825               	movf	?___llmod,w
  3020  055F  3E30               	addlw	48
  3021  0560  1683               	bsf	3,5	;RP0=1, select bank1
  3022  0561  00B8               	movwf	printf@c^(0+128)
  3023  0562  2D1E               	goto	L5
  3024  0563                     l2302:	
  3025  0563  0008               	return
  3026  0564                     __end_of_printf:	
  3027  0564                     __ptext808:	
  3028 ;; =============== function _printf ends ============
  3029                           
  3030                           
  3031 ;; *************** function _putch *****************
  3032 ;; Defined at:
  3033 ;;		line 83 in file "D:\TTVXL\Project TTVXL\BT02week15ttvxl\BT02week15ttvxl.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;  c               1    wreg     unsigned char 
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  c               1    1[BANK0 ] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;		None               void
  3040 ;; Registers used:
  3041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/20
  3044 ;;		On exit  : 60/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       1       0       0       0
  3049 ;;      Temps:          0       0       0       0       0
  3050 ;;      Totals:         0       1       0       0       0
  3051 ;;Total ram usage:        1 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    4
  3054 ;; This function calls:
  3055 ;;		_lcd_putc
  3056 ;; This function is called by:
  3057 ;;		_printf
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060  0564                     _putch:	
  3061                           
  3062                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3063                           ;putch@c stored from wreg
  3064  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3065  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3066  0566  00A1               	movwf	putch@c
  3067                           
  3068                           ;BT02week15ttvxl.c: 84: lcd_putc(c);
  3069  0567  120A  158A  2A6A   	ljmp	_lcd_putc
  3070  056A                     __end_of_putch:	
  3071  056A                     __ptext827:	
  3072 ;; =============== function ___ftneg ends ============
  3073                           
  3074                           
  3075 ;; *************** function ___llmod *****************
  3076 ;; Defined at:
  3077 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  divisor         4    5[BANK0 ] unsigned long 
  3080 ;;  dividend        4    9[BANK0 ] unsigned long 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  counter         1   13[BANK0 ] unsigned char 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  4    5[BANK0 ] unsigned long 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0
  3087 ;; Tracked objects:
  3088 ;;		On entry : 60/0
  3089 ;;		On exit  : 60/0
  3090 ;;		Unchanged: FFF9F/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3092 ;;      Params:         0       8       0       0       0
  3093 ;;      Locals:         0       1       0       0       0
  3094 ;;      Temps:          0       0       0       0       0
  3095 ;;      Totals:         0       9       0       0       0
  3096 ;;Total ram usage:        9 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:    1
  3099 ;; This function calls:
  3100 ;;		Nothing
  3101 ;; This function is called by:
  3102 ;;		_printf
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105  056A                     ___llmod:	
  3106                           
  3107                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3108  056A  0828               	movf	___llmod@divisor+3,w
  3109  056B  0427               	iorwf	___llmod@divisor+2,w
  3110  056C  0426               	iorwf	___llmod@divisor+1,w
  3111  056D  0425               	iorwf	___llmod@divisor,w
  3112  056E  1903               	skipnz
  3113  056F  2D9F               	goto	l7755
  3114  0570  01AD               	clrf	___llmod@counter
  3115  0571                     L14:	
  3116  0571  0AAD               	incf	___llmod@counter,f
  3117  0572  1BA8               	btfsc	___llmod@divisor+3,7
  3118  0573  2D7A               	goto	l7747
  3119  0574  1003               	clrc
  3120  0575  0DA5               	rlf	___llmod@divisor,f
  3121  0576  0DA6               	rlf	___llmod@divisor+1,f
  3122  0577  0DA7               	rlf	___llmod@divisor+2,f
  3123  0578  0DA8               	rlf	___llmod@divisor+3,f
  3124  0579  2D71               	goto	L14
  3125  057A                     l7747:	
  3126  057A  0828               	movf	___llmod@divisor+3,w
  3127  057B  022C               	subwf	___llmod@dividend+3,w
  3128  057C  1D03               	skipz
  3129  057D  2D88               	goto	u4425
  3130  057E  0827               	movf	___llmod@divisor+2,w
  3131  057F  022B               	subwf	___llmod@dividend+2,w
  3132  0580  1D03               	skipz
  3133  0581  2D88               	goto	u4425
  3134  0582  0826               	movf	___llmod@divisor+1,w
  3135  0583  022A               	subwf	___llmod@dividend+1,w
  3136  0584  1D03               	skipz
  3137  0585  2D88               	goto	u4425
  3138  0586  0825               	movf	___llmod@divisor,w
  3139  0587  0229               	subwf	___llmod@dividend,w
  3140  0588                     u4425:	
  3141  0588  1C03               	skipc
  3142  0589  2D99               	goto	L15
  3143  058A  0825               	movf	___llmod@divisor,w
  3144  058B  02A9               	subwf	___llmod@dividend,f
  3145  058C  0826               	movf	___llmod@divisor+1,w
  3146  058D  1C03               	skipc
  3147  058E  0F26               	incfsz	___llmod@divisor+1,w
  3148  058F  02AA               	subwf	___llmod@dividend+1,f
  3149  0590  0827               	movf	___llmod@divisor+2,w
  3150  0591  1C03               	skipc
  3151  0592  0F27               	incfsz	___llmod@divisor+2,w
  3152  0593  02AB               	subwf	___llmod@dividend+2,f
  3153  0594  0828               	movf	___llmod@divisor+3,w
  3154  0595  1C03               	skipc
  3155  0596  0F28               	incfsz	___llmod@divisor+3,w
  3156  0597  02AC               	subwf	___llmod@dividend+3,f
  3157  0598  1003               	clrc
  3158  0599                     L15:	
  3159  0599  0CA8               	rrf	___llmod@divisor+3,f
  3160  059A  0CA7               	rrf	___llmod@divisor+2,f
  3161  059B  0CA6               	rrf	___llmod@divisor+1,f
  3162  059C  0CA5               	rrf	___llmod@divisor,f
  3163  059D  0BAD               	decfsz	___llmod@counter,f
  3164  059E  2D7A               	goto	l7747
  3165  059F                     l7755:	
  3166  059F  082C               	movf	___llmod@dividend+3,w
  3167  05A0  00A8               	movwf	?___llmod+3
  3168  05A1  082B               	movf	___llmod@dividend+2,w
  3169  05A2  00A7               	movwf	?___llmod+2
  3170  05A3  082A               	movf	___llmod@dividend+1,w
  3171  05A4  00A6               	movwf	?___llmod+1
  3172  05A5  0829               	movf	___llmod@dividend,w
  3173  05A6  00A5               	movwf	?___llmod
  3174  05A7  0008               	return
  3175  05A8                     __end_of___llmod:	
  3176  05A8                     __ptext825:	
  3177 ;; =============== function ___lldiv ends ============
  3178                           
  3179                           
  3180 ;; *************** function ___ftge *****************
  3181 ;; Defined at:
  3182 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  ff1             3    2[COMMON] float 
  3185 ;;  ff2             3    5[COMMON] float 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;		None               void
  3190 ;; Registers used:
  3191 ;;		wreg, status,2, status,0
  3192 ;; Tracked objects:
  3193 ;;		On entry : 40/0
  3194 ;;		On exit  : 40/0
  3195 ;;		Unchanged: FFFBF/0
  3196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3197 ;;      Params:         6       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0
  3200 ;;      Totals:         6       0       0       0       0
  3201 ;;Total ram usage:        6 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    1
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;;		_printf
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211  05A8                     ___ftge:	
  3212                           
  3213                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3214  05A8  1FF4               	btfss	___ftge@ff1+2,7
  3215  05A9  2DB7               	goto	l6595
  3216  05AA  0872               	movf	___ftge@ff1,w
  3217  05AB  3C00               	sublw	0
  3218  05AC  00F2               	movwf	___ftge@ff1
  3219  05AD  0873               	movf	___ftge@ff1+1,w
  3220  05AE  1C03               	skipc
  3221  05AF  0F73               	incfsz	___ftge@ff1+1,w
  3222  05B0  3C00               	sublw	0
  3223  05B1  00F3               	movwf	___ftge@ff1+1
  3224  05B2  0874               	movf	___ftge@ff1+2,w
  3225  05B3  1C03               	skipc
  3226  05B4  0F74               	incfsz	___ftge@ff1+2,w
  3227  05B5  3C80               	sublw	128
  3228  05B6  00F4               	movwf	___ftge@ff1+2
  3229  05B7                     l6595:	
  3230  05B7  1FF7               	btfss	___ftge@ff2+2,7
  3231  05B8  2DC6               	goto	l6599
  3232  05B9  0875               	movf	___ftge@ff2,w
  3233  05BA  3C00               	sublw	0
  3234  05BB  00F5               	movwf	___ftge@ff2
  3235  05BC  0876               	movf	___ftge@ff2+1,w
  3236  05BD  1C03               	skipc
  3237  05BE  0F76               	incfsz	___ftge@ff2+1,w
  3238  05BF  3C00               	sublw	0
  3239  05C0  00F6               	movwf	___ftge@ff2+1
  3240  05C1  0877               	movf	___ftge@ff2+2,w
  3241  05C2  1C03               	skipc
  3242  05C3  0F77               	incfsz	___ftge@ff2+2,w
  3243  05C4  3C80               	sublw	128
  3244  05C5  00F7               	movwf	___ftge@ff2+2
  3245  05C6                     l6599:	
  3246  05C6  3080               	movlw	128
  3247  05C7  06F4               	xorwf	___ftge@ff1+2,f
  3248  05C8  06F7               	xorwf	___ftge@ff2+2,f
  3249  05C9  0877               	movf	___ftge@ff2+2,w
  3250  05CA  0274               	subwf	___ftge@ff1+2,w
  3251  05CB  1D03               	skipz
  3252  05CC  0008               	return
  3253  05CD  0876               	movf	___ftge@ff2+1,w
  3254  05CE  0273               	subwf	___ftge@ff1+1,w
  3255  05CF  1D03               	skipz
  3256  05D0  0008               	return
  3257  05D1  0875               	movf	___ftge@ff2,w
  3258  05D2  0272               	subwf	___ftge@ff1,w
  3259  05D3  0008               	return
  3260  05D4                     __end_of___ftge:	
  3261  05D4                     __ptext837:	
  3262 ;; =============== function __tdiv_to_l_ ends ============
  3263                           
  3264                           
  3265 ;; *************** function _isdigit *****************
  3266 ;; Defined at:
  3267 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  c               1    wreg     unsigned char 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  c               1    3[COMMON] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 60/20
  3278 ;;		On exit  : 60/20
  3279 ;;		Unchanged: FFF9F/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       0       0       0       0
  3282 ;;      Locals:         2       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0
  3284 ;;      Totals:         2       0       0       0       0
  3285 ;;Total ram usage:        2 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    1
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_printf
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294  05D4                     _isdigit:	
  3295                           
  3296                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3297                           ;isdigit@c stored from wreg
  3298  05D4  00F3               	movwf	isdigit@c
  3299  05D5  303A               	movlw	58
  3300  05D6  01F2               	clrf	_isdigit$3676
  3301  05D7  0273               	subwf	isdigit@c,w
  3302  05D8  1803               	skipnc
  3303  05D9  2DE0               	goto	l6281
  3304  05DA  3030               	movlw	48
  3305  05DB  0273               	subwf	isdigit@c,w
  3306  05DC  1C03               	skipc
  3307  05DD  2DE0               	goto	l6281
  3308  05DE  01F2               	clrf	_isdigit$3676
  3309  05DF  0AF2               	incf	_isdigit$3676,f
  3310  05E0                     l6281:	
  3311  05E0  0C72               	rrf	_isdigit$3676,w
  3312  05E1  0008               	return
  3313  05E2                     __end_of_isdigit:	
  3314  05E2                     __ptext833:	
  3315 ;; =============== function ___lbdiv ends ============
  3316                           
  3317                           
  3318 ;; *************** function ___wmul *****************
  3319 ;; Defined at:
  3320 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  multiplier      2    2[COMMON] unsigned int 
  3323 ;;  multiplicand    2    4[COMMON] unsigned int 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  product         2    6[COMMON] unsigned int 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2    2[COMMON] unsigned int 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 60/20
  3332 ;;		On exit  : 60/20
  3333 ;;		Unchanged: FFF9F/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         4       0       0       0       0
  3336 ;;      Locals:         2       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0
  3338 ;;      Totals:         6       0       0       0       0
  3339 ;;Total ram usage:        6 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_fround
  3346 ;;		_scale
  3347 ;;		_printf
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350  05E2                     ___wmul:	
  3351                           
  3352                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3353  05E2  01F6               	clrf	___wmul@product
  3354  05E3  01F7               	clrf	___wmul@product+1
  3355  05E4                     l6397:	
  3356  05E4  1C72               	btfss	___wmul@multiplier,0
  3357  05E5  2DEC               	goto	l6401
  3358  05E6  0874               	movf	___wmul@multiplicand,w
  3359  05E7  07F6               	addwf	___wmul@product,f
  3360  05E8  1803               	skipnc
  3361  05E9  0AF7               	incf	___wmul@product+1,f
  3362  05EA  0875               	movf	___wmul@multiplicand+1,w
  3363  05EB  07F7               	addwf	___wmul@product+1,f
  3364  05EC                     l6401:	
  3365  05EC  1003               	clrc
  3366  05ED  0DF4               	rlf	___wmul@multiplicand,f
  3367  05EE  0DF5               	rlf	___wmul@multiplicand+1,f
  3368  05EF  1003               	clrc
  3369  05F0  0CF3               	rrf	___wmul@multiplier+1,f
  3370  05F1  0CF2               	rrf	___wmul@multiplier,f
  3371  05F2  0873               	movf	___wmul@multiplier+1,w
  3372  05F3  0472               	iorwf	___wmul@multiplier,w
  3373  05F4  1D03               	skipz
  3374  05F5  2DE4               	goto	l6397
  3375  05F6  0877               	movf	___wmul@product+1,w
  3376  05F7  00F3               	movwf	?___wmul+1
  3377  05F8  0876               	movf	___wmul@product,w
  3378  05F9  00F2               	movwf	?___wmul
  3379  05FA  0008               	return
  3380  05FB                     __end_of___wmul:	
  3381  05FB                     __ptext829:	
  3382 ;; =============== function ___awdiv ends ============
  3383                           
  3384                           
  3385 ;; *************** function ___fttol *****************
  3386 ;; Defined at:
  3387 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  f1              3    8[BANK0 ] float 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  lval            4   16[BANK0 ] unsigned long 
  3392 ;;  exp1            1   20[BANK0 ] unsigned char 
  3393 ;;  sign1           1   15[BANK0 ] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  4    8[BANK0 ] long 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 60/0
  3400 ;;		On exit  : 60/0
  3401 ;;		Unchanged: FFF9F/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       4       0       0       0
  3404 ;;      Locals:         0       6       0       0       0
  3405 ;;      Temps:          0       3       0       0       0
  3406 ;;      Totals:         0      13       0       0       0
  3407 ;;Total ram usage:       13 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    1
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_printf
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416  05FB                     ___fttol:	
  3417                           
  3418                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3419  05FB  27A3  120A  118A   	fcall	PL28	;call to abstracted procedure
  3420  05FE  1003               	clrc
  3421  05FF  0D2D               	rlf	??___fttol+1,w
  3422  0600  0D2E               	rlf	??___fttol+2,w
  3423  0601  00B4               	movwf	___fttol@exp1
  3424  0602  08B4               	movf	___fttol@exp1,f
  3425  0603  1D03               	skipz
  3426  0604  2E0A               	goto	l6485
  3427  0605                     l6483:	
  3428  0605  01A8               	clrf	?___fttol
  3429  0606  01A9               	clrf	?___fttol+1
  3430  0607  01AA               	clrf	?___fttol+2
  3431  0608  01AB               	clrf	?___fttol+3
  3432  0609  0008               	return
  3433  060A                     l6485:	
  3434  060A  27A3  120A  118A   	fcall	PL28	;call to abstracted procedure
  3435  060D  3017               	movlw	23
  3436  060E                     u2495:	
  3437  060E  1003               	clrc
  3438  060F  0CAE               	rrf	??___fttol+2,f
  3439  0610  0CAD               	rrf	??___fttol+1,f
  3440  0611  0CAC               	rrf	??___fttol,f
  3441  0612  3EFF               	addlw	-1
  3442  0613  1D03               	skipz
  3443  0614  2E0E               	goto	u2495
  3444  0615  082C               	movf	??___fttol,w
  3445  0616  00AF               	movwf	___fttol@sign1
  3446  0617  17A9               	bsf	___fttol@f1+1,7
  3447  0618  01AA               	clrf	___fttol@f1+2
  3448  0619  0828               	movf	___fttol@f1,w
  3449  061A  00B0               	movwf	___fttol@lval
  3450  061B  0829               	movf	___fttol@f1+1,w
  3451  061C  00B1               	movwf	___fttol@lval+1
  3452  061D  082A               	movf	___fttol@f1+2,w
  3453  061E  00B2               	movwf	___fttol@lval+2
  3454  061F  308E               	movlw	142
  3455  0620  01B3               	clrf	___fttol@lval+3
  3456  0621  02B4               	subwf	___fttol@exp1,f
  3457  0622  1FB4               	btfss	___fttol@exp1,7
  3458  0623  2E31               	goto	l6505
  3459  0624  0834               	movf	___fttol@exp1,w
  3460  0625  3A80               	xorlw	128
  3461  0626  3E8F               	addlw	143
  3462  0627  1C03               	btfss	3,0
  3463  0628  2E05               	goto	l6483
  3464  0629                     l6501:	
  3465  0629  1003               	clrc
  3466  062A  0CB3               	rrf	___fttol@lval+3,f
  3467  062B  0CB2               	rrf	___fttol@lval+2,f
  3468  062C  0CB1               	rrf	___fttol@lval+1,f
  3469  062D  0CB0               	rrf	___fttol@lval,f
  3470  062E  0FB4               	incfsz	___fttol@exp1,f
  3471  062F  2E29               	goto	l6501
  3472  0630  2E3F               	goto	l6511
  3473  0631                     l6505:	
  3474  0631  3018               	movlw	24
  3475  0632  0234               	subwf	___fttol@exp1,w
  3476  0633  1803               	btfsc	3,0
  3477  0634  2E05               	goto	l6483
  3478  0635                     l3422:	
  3479  0635  08B4               	movf	___fttol@exp1,f
  3480  0636  1903               	btfsc	3,2
  3481  0637  2E3F               	goto	l6511
  3482  0638  1003               	clrc
  3483  0639  0DB0               	rlf	___fttol@lval,f
  3484  063A  0DB1               	rlf	___fttol@lval+1,f
  3485  063B  0DB2               	rlf	___fttol@lval+2,f
  3486  063C  0DB3               	rlf	___fttol@lval+3,f
  3487  063D  03B4               	decf	___fttol@exp1,f
  3488  063E  2E35               	goto	l3422
  3489  063F                     l6511:	
  3490  063F  082F               	movf	___fttol@sign1,w
  3491  0640  1903               	btfsc	3,2
  3492  0641  2E4D               	goto	l6515
  3493  0642  09B0               	comf	___fttol@lval,f
  3494  0643  09B1               	comf	___fttol@lval+1,f
  3495  0644  09B2               	comf	___fttol@lval+2,f
  3496  0645  09B3               	comf	___fttol@lval+3,f
  3497  0646  0AB0               	incf	___fttol@lval,f
  3498  0647  1903               	skipnz
  3499  0648  0AB1               	incf	___fttol@lval+1,f
  3500  0649  1903               	skipnz
  3501  064A  0AB2               	incf	___fttol@lval+2,f
  3502  064B  1903               	skipnz
  3503  064C  0AB3               	incf	___fttol@lval+3,f
  3504  064D                     l6515:	
  3505  064D  0833               	movf	___fttol@lval+3,w
  3506  064E  00AB               	movwf	?___fttol+3
  3507  064F  0832               	movf	___fttol@lval+2,w
  3508  0650  00AA               	movwf	?___fttol+2
  3509  0651  0831               	movf	___fttol@lval+1,w
  3510  0652  00A9               	movwf	?___fttol+1
  3511  0653  0830               	movf	___fttol@lval,w
  3512  0654  00A8               	movwf	?___fttol
  3513  0655  0008               	return
  3514  0656                     __end_of___fttol:	
  3515  0656                     __ptext824:	
  3516 ;; =============== function ___awmod ends ============
  3517                           
  3518                           
  3519 ;; *************** function ___lldiv *****************
  3520 ;; Defined at:
  3521 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  divisor         4    2[COMMON] unsigned long 
  3524 ;;  dividend        4    6[COMMON] unsigned long 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  quotient        4    0[BANK0 ] unsigned long 
  3527 ;;  counter         1    4[BANK0 ] unsigned char 
  3528 ;; Return value:  Size  Location     Type
  3529 ;;                  4    2[COMMON] unsigned long 
  3530 ;; Registers used:
  3531 ;;		wreg, status,2, status,0
  3532 ;; Tracked objects:
  3533 ;;		On entry : 60/20
  3534 ;;		On exit  : 60/0
  3535 ;;		Unchanged: FFF9F/0
  3536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3537 ;;      Params:         8       0       0       0       0
  3538 ;;      Locals:         0       5       0       0       0
  3539 ;;      Temps:          0       0       0       0       0
  3540 ;;      Totals:         8       5       0       0       0
  3541 ;;Total ram usage:       13 bytes
  3542 ;; Hardware stack levels used:    1
  3543 ;; Hardware stack levels required when called:    1
  3544 ;; This function calls:
  3545 ;;		Nothing
  3546 ;; This function is called by:
  3547 ;;		_printf
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550  0656                     ___lldiv:	
  3551                           
  3552                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3553  0656  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0657  01A0               	clrf	___lldiv@quotient
  3555  0658  01A1               	clrf	___lldiv@quotient+1
  3556  0659  01A2               	clrf	___lldiv@quotient+2
  3557  065A  01A3               	clrf	___lldiv@quotient+3
  3558  065B  0875               	movf	___lldiv@divisor+3,w
  3559  065C  0474               	iorwf	___lldiv@divisor+2,w
  3560  065D  0473               	iorwf	___lldiv@divisor+1,w
  3561  065E  0472               	iorwf	___lldiv@divisor,w
  3562  065F  1903               	skipnz
  3563  0660  2E96               	goto	l6633
  3564  0661  01A4               	clrf	___lldiv@counter
  3565  0662                     L11:	
  3566  0662  0AA4               	incf	___lldiv@counter,f
  3567  0663  1BF5               	btfsc	___lldiv@divisor+3,7
  3568  0664  2E6B               	goto	l6621
  3569  0665  1003               	clrc
  3570  0666  0DF2               	rlf	___lldiv@divisor,f
  3571  0667  0DF3               	rlf	___lldiv@divisor+1,f
  3572  0668  0DF4               	rlf	___lldiv@divisor+2,f
  3573  0669  0DF5               	rlf	___lldiv@divisor+3,f
  3574  066A  2E62               	goto	L11
  3575  066B                     l6621:	
  3576  066B  1003               	clrc
  3577  066C  0DA0               	rlf	___lldiv@quotient,f
  3578  066D  0DA1               	rlf	___lldiv@quotient+1,f
  3579  066E  0DA2               	rlf	___lldiv@quotient+2,f
  3580  066F  0DA3               	rlf	___lldiv@quotient+3,f
  3581  0670  0875               	movf	___lldiv@divisor+3,w
  3582  0671  0279               	subwf	___lldiv@dividend+3,w
  3583  0672  1D03               	skipz
  3584  0673  2E7E               	goto	u2735
  3585  0674  0874               	movf	___lldiv@divisor+2,w
  3586  0675  0278               	subwf	___lldiv@dividend+2,w
  3587  0676  1D03               	skipz
  3588  0677  2E7E               	goto	u2735
  3589  0678  0873               	movf	___lldiv@divisor+1,w
  3590  0679  0277               	subwf	___lldiv@dividend+1,w
  3591  067A  1D03               	skipz
  3592  067B  2E7E               	goto	u2735
  3593  067C  0872               	movf	___lldiv@divisor,w
  3594  067D  0276               	subwf	___lldiv@dividend,w
  3595  067E                     u2735:	
  3596  067E  1C03               	skipc
  3597  067F  2E90               	goto	L12
  3598  0680  0872               	movf	___lldiv@divisor,w
  3599  0681  02F6               	subwf	___lldiv@dividend,f
  3600  0682  0873               	movf	___lldiv@divisor+1,w
  3601  0683  1C03               	skipc
  3602  0684  0F73               	incfsz	___lldiv@divisor+1,w
  3603  0685  02F7               	subwf	___lldiv@dividend+1,f
  3604  0686  0874               	movf	___lldiv@divisor+2,w
  3605  0687  1C03               	skipc
  3606  0688  0F74               	incfsz	___lldiv@divisor+2,w
  3607  0689  02F8               	subwf	___lldiv@dividend+2,f
  3608  068A  0875               	movf	___lldiv@divisor+3,w
  3609  068B  1C03               	skipc
  3610  068C  0F75               	incfsz	___lldiv@divisor+3,w
  3611  068D  02F9               	subwf	___lldiv@dividend+3,f
  3612  068E  1420               	bsf	___lldiv@quotient,0
  3613  068F  1003               	clrc
  3614  0690                     L12:	
  3615  0690  0CF5               	rrf	___lldiv@divisor+3,f
  3616  0691  0CF4               	rrf	___lldiv@divisor+2,f
  3617  0692  0CF3               	rrf	___lldiv@divisor+1,f
  3618  0693  0CF2               	rrf	___lldiv@divisor,f
  3619  0694  0BA4               	decfsz	___lldiv@counter,f
  3620  0695  2E6B               	goto	l6621
  3621  0696                     l6633:	
  3622  0696  0823               	movf	___lldiv@quotient+3,w
  3623  0697  00F5               	movwf	?___lldiv+3
  3624  0698  0822               	movf	___lldiv@quotient+2,w
  3625  0699  00F4               	movwf	?___lldiv+2
  3626  069A  0821               	movf	___lldiv@quotient+1,w
  3627  069B  00F3               	movwf	?___lldiv+1
  3628  069C  0820               	movf	___lldiv@quotient,w
  3629  069D  00F2               	movwf	?___lldiv
  3630  069E  0008               	return
  3631  069F                     __end_of___lldiv:	
  3632  069F                     __ptext836:	
  3633 ;; =============== function __div_to_l_ ends ============
  3634                           
  3635                           
  3636 ;; *************** function __tdiv_to_l_ *****************
  3637 ;; Defined at:
  3638 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  f1              3    2[COMMON] float 
  3641 ;;  f2              3    5[COMMON] float 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  quot            4    3[BANK0 ] unsigned long 
  3644 ;;  exp1            1    8[BANK0 ] unsigned char 
  3645 ;;  cntr            1    7[BANK0 ] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  4    2[COMMON] unsigned long 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 60/20
  3652 ;;		On exit  : 60/0
  3653 ;;		Unchanged: FFF9F/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3655 ;;      Params:         6       0       0       0       0
  3656 ;;      Locals:         0       6       0       0       0
  3657 ;;      Temps:          0       3       0       0       0
  3658 ;;      Totals:         6       9       0       0       0
  3659 ;;Total ram usage:       15 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    1
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_printf
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668  069F                     __tdiv_to_l_:	
  3669                           
  3670                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3671  069F  0872               	movf	__tdiv_to_l_@f1,w
  3672  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3673  06A1  00A0               	movwf	??__tdiv_to_l_
  3674  06A2  0873               	movf	__tdiv_to_l_@f1+1,w
  3675  06A3  00A1               	movwf	??__tdiv_to_l_+1
  3676  06A4  0874               	movf	__tdiv_to_l_@f1+2,w
  3677  06A5  00A2               	movwf	??__tdiv_to_l_+2
  3678  06A6  1003               	clrc
  3679  06A7  0D21               	rlf	??__tdiv_to_l_+1,w
  3680  06A8  0D22               	rlf	??__tdiv_to_l_+2,w
  3681  06A9  00A8               	movwf	__tdiv_to_l_@exp1
  3682  06AA  08A8               	movf	__tdiv_to_l_@exp1,f
  3683  06AB  1D03               	skipz
  3684  06AC  2EB2               	goto	l7599
  3685  06AD                     l7597:	
  3686  06AD  01F2               	clrf	?__tdiv_to_l_
  3687  06AE  01F3               	clrf	?__tdiv_to_l_+1
  3688  06AF  01F4               	clrf	?__tdiv_to_l_+2
  3689  06B0  01F5               	clrf	?__tdiv_to_l_+3
  3690  06B1  0008               	return
  3691  06B2                     l7599:	
  3692  06B2  0875               	movf	__tdiv_to_l_@f2,w
  3693  06B3  00A0               	movwf	??__tdiv_to_l_
  3694  06B4  0876               	movf	__tdiv_to_l_@f2+1,w
  3695  06B5  00A1               	movwf	??__tdiv_to_l_+1
  3696  06B6  0877               	movf	__tdiv_to_l_@f2+2,w
  3697  06B7  00A2               	movwf	??__tdiv_to_l_+2
  3698  06B8  1003               	clrc
  3699  06B9  0D21               	rlf	??__tdiv_to_l_+1,w
  3700  06BA  0D22               	rlf	??__tdiv_to_l_+2,w
  3701  06BB  00A7               	movwf	__tdiv_to_l_@cntr
  3702  06BC  08A7               	movf	__tdiv_to_l_@cntr,f
  3703  06BD  1903               	btfsc	3,2
  3704  06BE  2EAD               	goto	l7597
  3705  06BF  307F               	movlw	127
  3706  06C0  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3707  06C1  01F4               	clrf	__tdiv_to_l_@f1+2
  3708  06C2  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3709  06C3  01F7               	clrf	__tdiv_to_l_@f2+2
  3710  06C4  01A3               	clrf	__tdiv_to_l_@quot
  3711  06C5  01A4               	clrf	__tdiv_to_l_@quot+1
  3712  06C6  01A5               	clrf	__tdiv_to_l_@quot+2
  3713  06C7  01A6               	clrf	__tdiv_to_l_@quot+3
  3714  06C8  02A8               	subwf	__tdiv_to_l_@exp1,f
  3715  06C9  3098               	movlw	152
  3716  06CA  0727               	addwf	__tdiv_to_l_@cntr,w
  3717  06CB  00A0               	movwf	??__tdiv_to_l_
  3718  06CC  02A8               	subwf	__tdiv_to_l_@exp1,f
  3719  06CD  3018               	movlw	24
  3720  06CE  00A7               	movwf	__tdiv_to_l_@cntr
  3721  06CF                     l7613:	
  3722  06CF  1003               	clrc
  3723  06D0  0DA3               	rlf	__tdiv_to_l_@quot,f
  3724  06D1  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  3725  06D2  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  3726  06D3  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  3727  06D4  0877               	movf	__tdiv_to_l_@f2+2,w
  3728  06D5  0274               	subwf	__tdiv_to_l_@f1+2,w
  3729  06D6  1D03               	skipz
  3730  06D7  2EDE               	goto	u4155
  3731  06D8  0876               	movf	__tdiv_to_l_@f2+1,w
  3732  06D9  0273               	subwf	__tdiv_to_l_@f1+1,w
  3733  06DA  1D03               	skipz
  3734  06DB  2EDE               	goto	u4155
  3735  06DC  0875               	movf	__tdiv_to_l_@f2,w
  3736  06DD  0272               	subwf	__tdiv_to_l_@f1,w
  3737  06DE                     u4155:	
  3738  06DE  1C03               	skipc
  3739  06DF  2EEC               	goto	L20
  3740  06E0  0875               	movf	__tdiv_to_l_@f2,w
  3741  06E1  02F2               	subwf	__tdiv_to_l_@f1,f
  3742  06E2  0876               	movf	__tdiv_to_l_@f2+1,w
  3743  06E3  1C03               	skipc
  3744  06E4  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3745  06E5  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3746  06E6  0877               	movf	__tdiv_to_l_@f2+2,w
  3747  06E7  1C03               	skipc
  3748  06E8  0A77               	incf	__tdiv_to_l_@f2+2,w
  3749  06E9  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3750  06EA  1423               	bsf	__tdiv_to_l_@quot,0
  3751  06EB  1003               	clrc
  3752  06EC                     L20:	
  3753  06EC  0DF2               	rlf	__tdiv_to_l_@f1,f
  3754  06ED  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3755  06EE  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3756  06EF  0BA7               	decfsz	__tdiv_to_l_@cntr,f
  3757  06F0  2ECF               	goto	l7613
  3758  06F1  1FA8               	btfss	__tdiv_to_l_@exp1,7
  3759  06F2  2F00               	goto	l7633
  3760  06F3  0828               	movf	__tdiv_to_l_@exp1,w
  3761  06F4  3A80               	xorlw	128
  3762  06F5  3E97               	addlw	151
  3763  06F6  1C03               	btfss	3,0
  3764  06F7  2EAD               	goto	l7597
  3765  06F8                     l7629:	
  3766  06F8  1003               	clrc
  3767  06F9  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  3768  06FA  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  3769  06FB  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  3770  06FC  0CA3               	rrf	__tdiv_to_l_@quot,f
  3771  06FD  0FA8               	incfsz	__tdiv_to_l_@exp1,f
  3772  06FE  2EF8               	goto	l7629
  3773  06FF  2F0E               	goto	l7639
  3774  0700                     l7633:	
  3775  0700  3018               	movlw	24
  3776  0701  0228               	subwf	__tdiv_to_l_@exp1,w
  3777  0702  1803               	btfsc	3,0
  3778  0703  2EAD               	goto	l7597
  3779  0704                     l3560:	
  3780  0704  08A8               	movf	__tdiv_to_l_@exp1,f
  3781  0705  1903               	btfsc	3,2
  3782  0706  2F0E               	goto	l7639
  3783  0707  1003               	clrc
  3784  0708  0DA3               	rlf	__tdiv_to_l_@quot,f
  3785  0709  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  3786  070A  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  3787  070B  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  3788  070C  03A8               	decf	__tdiv_to_l_@exp1,f
  3789  070D  2F04               	goto	l3560
  3790  070E                     l7639:	
  3791  070E  0826               	movf	__tdiv_to_l_@quot+3,w
  3792  070F  00F5               	movwf	?__tdiv_to_l_+3
  3793  0710  0825               	movf	__tdiv_to_l_@quot+2,w
  3794  0711  00F4               	movwf	?__tdiv_to_l_+2
  3795  0712  0824               	movf	__tdiv_to_l_@quot+1,w
  3796  0713  00F3               	movwf	?__tdiv_to_l_+1
  3797  0714  0823               	movf	__tdiv_to_l_@quot,w
  3798  0715  00F2               	movwf	?__tdiv_to_l_
  3799  0716  0008               	return
  3800  0717                     __end_of__tdiv_to_l_:	
  3801  0717                     __ptext826:	
  3802 ;; =============== function ___ftge ends ============
  3803                           
  3804                           
  3805 ;; *************** function ___ftneg *****************
  3806 ;; Defined at:
  3807 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  f1              3    2[COMMON] float 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;		None
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  3    2[COMMON] float 
  3814 ;; Registers used:
  3815 ;;		wreg
  3816 ;; Tracked objects:
  3817 ;;		On entry : 160/20
  3818 ;;		On exit  : 160/20
  3819 ;;		Unchanged: FFE9F/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         3       0       0       0       0
  3822 ;;      Locals:         0       0       0       0       0
  3823 ;;      Temps:          0       0       0       0       0
  3824 ;;      Totals:         3       0       0       0       0
  3825 ;;Total ram usage:        3 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    1
  3828 ;; This function calls:
  3829 ;;		Nothing
  3830 ;; This function is called by:
  3831 ;;		_printf
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834  0717                     ___ftneg:	
  3835                           
  3836                           ; Regs used in ___ftneg: [wreg]
  3837  0717  0874               	movf	___ftneg@f1+2,w
  3838  0718  0473               	iorwf	___ftneg@f1+1,w
  3839  0719  0472               	iorwf	___ftneg@f1,w
  3840  071A  1903               	skipnz
  3841  071B  0008               	return
  3842  071C  3080               	movlw	128
  3843  071D  06F4               	xorwf	___ftneg@f1+2,f
  3844  071E  0008               	return
  3845  071F                     __end_of___ftneg:	
  3846  071F                     PL2:	
  3847  071F  0838               	movf	printf@c^(0+128),w
  3848  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0721  00DD               	movwf	??_printf
  3850  0722  1003               	clrc
  3851  0723  0DDD               	rlf	??_printf,f
  3852  0724  1003               	clrc
  3853  0725  0D5D               	rlf	??_printf,w
  3854  0726  3E4F               	addlw	low (_dpowers-__stringbase)
  3855  0727  0084               	movwf	4
  3856  0728  0008               	return
  3857  0729                     PL4:	
  3858  0729  300A               	movlw	10
  3859  072A  1283               	bcf	3,5	;RP0=0, select bank0
  3860  072B  00A5               	movwf	?___llmod
  3861  072C  01A6               	clrf	?___llmod+1
  3862  072D  01A7               	clrf	?___llmod+2
  3863  072E  01A8               	clrf	?___llmod+3
  3864  072F  1683               	bsf	3,5	;RP0=1, select bank1
  3865  0730  0008               	return
  3866  0731                     PL5:	
  3867  0731  00F5               	movwf	?___lldiv+3
  3868  0732  1683               	bsf	3,5	;RP0=1, select bank1
  3869  0733  082C               	movf	(printf@_val+3)^(0+128),w
  3870  0734  00F9               	movwf	?___lldiv+7
  3871  0735  082B               	movf	(printf@_val+2)^(0+128),w
  3872  0736  00F8               	movwf	?___lldiv+6
  3873  0737  082A               	movf	(printf@_val+1)^(0+128),w
  3874  0738  00F7               	movwf	?___lldiv+5
  3875  0739  0829               	movf	printf@_val^(0+128),w
  3876  073A  00F6               	movwf	?___lldiv+4
  3877  073B  0008               	return
  3878  073C                     PL6:	
  3879  073C  082B               	movf	?___fttol+3,w
  3880  073D  1683               	bsf	3,5	;RP0=1, select bank1
  3881  073E  00AC               	movwf	(printf@_val+3)^(0+128)
  3882  073F  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0740  082A               	movf	?___fttol+2,w
  3884  0741  1683               	bsf	3,5	;RP0=1, select bank1
  3885  0742  00AB               	movwf	(printf@_val+2)^(0+128)
  3886  0743  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0744  0829               	movf	?___fttol+1,w
  3888  0745  1683               	bsf	3,5	;RP0=1, select bank1
  3889  0746  00AA               	movwf	(printf@_val+1)^(0+128)
  3890  0747  1283               	bcf	3,5	;RP0=0, select bank0
  3891  0748  0828               	movf	?___fttol,w
  3892  0749  0008               	return
  3893  074A                     PL7:	
  3894  074A  0844               	movf	?_scale,w
  3895  074B  1683               	bsf	3,5	;RP0=1, select bank1
  3896  074C  00A5               	movwf	printf@integ^(0+128)
  3897  074D  1283               	bcf	3,5	;RP0=0, select bank0
  3898  074E  0845               	movf	?_scale+1,w
  3899  074F  1683               	bsf	3,5	;RP0=1, select bank1
  3900  0750  00A6               	movwf	(printf@integ+1)^(0+128)
  3901  0751  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0752  0846               	movf	?_scale+2,w
  3903  0753  1683               	bsf	3,5	;RP0=1, select bank1
  3904  0754  00A7               	movwf	(printf@integ+2)^(0+128)
  3905  0755  0833               	movf	printf@fval^(0+128),w
  3906  0756  0008               	return
  3907  0757                     PL12:	
  3908  0757  0875               	movf	?___lldiv+3,w
  3909  0758  00AC               	movwf	?___llmod+7
  3910  0759  0874               	movf	?___lldiv+2,w
  3911  075A  00AB               	movwf	?___llmod+6
  3912  075B  0873               	movf	?___lldiv+1,w
  3913  075C  00AA               	movwf	?___llmod+5
  3914  075D  0872               	movf	?___lldiv,w
  3915  075E  00A9               	movwf	?___llmod+4
  3916  075F  0008               	return
  3917  0760                     PL13:	
  3918  0760  0772               	addwf	?___wmul,w
  3919  0761  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0762  00DD               	movwf	??_printf
  3921  0763  3000               	movlw	0
  3922  0764  1803               	skipnc
  3923  0765  3001               	movlw	1
  3924  0766  0773               	addwf	?___wmul+1,w
  3925  0767  00DE               	movwf	??_printf+1
  3926  0768  085D               	movf	??_printf,w
  3927  0769  3ED0               	addlw	208
  3928  076A  1683               	bsf	3,5	;RP0=1, select bank1
  3929  076B  0008               	return
  3930  076C                     PL14:	
  3931  076C  1283               	bcf	3,5	;RP0=0, select bank0
  3932  076D  00A8               	movwf	?___fttol
  3933  076E  1683               	bsf	3,5	;RP0=1, select bank1
  3934  076F  0834               	movf	(printf@fval+1)^(0+128),w
  3935  0770  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0771  00A9               	movwf	?___fttol+1
  3937  0772  1683               	bsf	3,5	;RP0=1, select bank1
  3938  0773  0835               	movf	(printf@fval+2)^(0+128),w
  3939  0774  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0775  00AA               	movwf	?___fttol+2
  3941  0776  0008               	return
  3942  0777                     PL16:	
  3943  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3944  0778  00B5               	movwf	?___ftmul
  3945  0779  1683               	bsf	3,5	;RP0=1, select bank1
  3946  077A  0834               	movf	(printf@fval+1)^(0+128),w
  3947  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3948  077C  00B6               	movwf	?___ftmul+1
  3949  077D  1683               	bsf	3,5	;RP0=1, select bank1
  3950  077E  0835               	movf	(printf@fval+2)^(0+128),w
  3951  077F  1283               	bcf	3,5	;RP0=0, select bank0
  3952  0780  00B7               	movwf	?___ftmul+2
  3953  0781  0008               	return
  3954  0782                     PL18:	
  3955  0782  1283               	bcf	3,5	;RP0=0, select bank0
  3956  0783  00DD               	movwf	??_printf
  3957  0784  01DE               	clrf	??_printf+1
  3958  0785  1BDD               	btfsc	??_printf,7
  3959  0786  03DE               	decf	??_printf+1,f
  3960  0787  085E               	movf	??_printf+1,w
  3961  0788  3A80               	xorlw	128
  3962  0789  00DF               	movwf	??_printf+2
  3963  078A  1683               	bsf	3,5	;RP0=1, select bank1
  3964  078B  0008               	return
  3965  078C                     PL20:	
  3966  078C  1303               	bcf	3,6	;RP1=0, select bank1
  3967  078D  0838               	movf	printf@c^(0+128),w
  3968  078E  1283               	bcf	3,5	;RP0=0, select bank0
  3969  078F  00DD               	movwf	??_printf
  3970  0790  01DE               	clrf	??_printf+1
  3971  0791  1BDD               	btfsc	??_printf,7
  3972  0792  03DE               	decf	??_printf+1,f
  3973  0793  1683               	bsf	3,5	;RP0=1, select bank1
  3974  0794  0008               	return
  3975  0795                     PL21:	
  3976  0795  0825               	movf	printf@integ^(0+128),w
  3977  0796  00F2               	movwf	?___ftge
  3978  0797  0826               	movf	(printf@integ+1)^(0+128),w
  3979  0798  00F3               	movwf	?___ftge+1
  3980  0799  0827               	movf	(printf@integ+2)^(0+128),w
  3981  079A  00F4               	movwf	?___ftge+2
  3982  079B  0008               	return
  3983  079C                     PL27:	
  3984  079C  1283               	bcf	3,5	;RP0=0, select bank0
  3985  079D  085E               	movf	??_printf+1,w
  3986  079E  1803               	skipnc
  3987  079F  3E01               	addlw	1
  3988  07A0  3EFF               	addlw	255
  3989  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  3990  07A2  0008               	return
  3991  07A3                     PL28:	
  3992  07A3  0828               	movf	___fttol@f1,w
  3993  07A4  00AC               	movwf	??___fttol
  3994  07A5  0829               	movf	___fttol@f1+1,w
  3995  07A6  00AD               	movwf	??___fttol+1
  3996  07A7  082A               	movf	___fttol@f1+2,w
  3997  07A8  00AE               	movwf	??___fttol+2
  3998  07A9  0008               	return
  3999  07AA                     PL30:	
  4000  07AA  0800               	movf	0,w
  4001  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  4002  07AC  00DD               	movwf	??_printf
  4003  07AD  0A84               	incf	4,f
  4004  07AE  0800               	movf	0,w
  4005  07AF  00DE               	movwf	??_printf+1
  4006  07B0  0008               	return
  4007  07B1                     PL32:	
  4008  07B1  1683               	bsf	3,5	;RP0=1, select bank1
  4009  07B2  1303               	bcf	3,6	;RP1=0, select bank1
  4010  07B3  0008               	return
  4011                           
  4012                           	psect	text810
  4013  1728                     __ptext810:	
  4014 ;; =============== function _lcd_putc ends ============
  4015                           
  4016                           
  4017 ;; *************** function ___ftsub *****************
  4018 ;; Defined at:
  4019 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  f2              3   48[BANK0 ] float 
  4022 ;;  f1              3   51[BANK0 ] float 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  3   48[BANK0 ] float 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, pclath, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 60/0
  4031 ;;		On exit  : 60/0
  4032 ;;		Unchanged: FFF9F/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         0       6       0       0       0
  4035 ;;      Locals:         0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         0       6       0       0       0
  4038 ;;Total ram usage:        6 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    3
  4041 ;; This function calls:
  4042 ;;		___ftadd
  4043 ;; This function is called by:
  4044 ;;		_printf
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047  1728                     ___ftsub:	
  4048                           
  4049                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4050  1728  3080               	movlw	128
  4051  1729  06D2               	xorwf	___ftsub@f2+2,f
  4052  172A  0853               	movf	___ftsub@f1,w
  4053  172B  00C4               	movwf	?___ftadd
  4054  172C  0854               	movf	___ftsub@f1+1,w
  4055  172D  00C5               	movwf	?___ftadd+1
  4056  172E  0855               	movf	___ftsub@f1+2,w
  4057  172F  00C6               	movwf	?___ftadd+2
  4058  1730  0850               	movf	___ftsub@f2,w
  4059  1731  00C7               	movwf	?___ftadd+3
  4060  1732  0851               	movf	___ftsub@f2+1,w
  4061  1733  00C8               	movwf	?___ftadd+4
  4062  1734  0852               	movf	___ftsub@f2+2,w
  4063  1735  00C9               	movwf	?___ftadd+5
  4064  1736  273E               	fcall	___ftadd
  4065  1737  0844               	movf	?___ftadd,w
  4066  1738  00D0               	movwf	?___ftsub
  4067  1739  0845               	movf	?___ftadd+1,w
  4068  173A  00D1               	movwf	?___ftsub+1
  4069  173B  0846               	movf	?___ftadd+2,w
  4070  173C  00D2               	movwf	?___ftsub+2
  4071  173D  0008               	return
  4072  173E                     __end_of___ftsub:	
  4073  173E                     __ptext819:	
  4074 ;; =============== function ___ftdiv ends ============
  4075                           
  4076                           
  4077 ;; *************** function ___ftadd *****************
  4078 ;; Defined at:
  4079 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  f1              3   36[BANK0 ] float 
  4082 ;;  f2              3   39[BANK0 ] float 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  exp1            1   47[BANK0 ] unsigned char 
  4085 ;;  exp2            1   46[BANK0 ] unsigned char 
  4086 ;;  sign            1   45[BANK0 ] unsigned char 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  3   36[BANK0 ] float 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 60/0
  4093 ;;		On exit  : 60/0
  4094 ;;		Unchanged: FFF9F/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4096 ;;      Params:         0       6       0       0       0
  4097 ;;      Locals:         0       3       0       0       0
  4098 ;;      Temps:          0       3       0       0       0
  4099 ;;      Totals:         0      12       0       0       0
  4100 ;;Total ram usage:       12 bytes
  4101 ;; Hardware stack levels used:    1
  4102 ;; Hardware stack levels required when called:    2
  4103 ;; This function calls:
  4104 ;;		___ftpack
  4105 ;; This function is called by:
  4106 ;;		_printf
  4107 ;;		___ftsub
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110  173E                     ___ftadd:	
  4111                           
  4112                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4113  173E  0844               	movf	___ftadd@f1,w
  4114  173F  00CA               	movwf	??___ftadd
  4115  1740  0845               	movf	___ftadd@f1+1,w
  4116  1741  00CB               	movwf	??___ftadd+1
  4117  1742  0846               	movf	___ftadd@f1+2,w
  4118  1743  00CC               	movwf	??___ftadd+2
  4119  1744  1003               	clrc
  4120  1745  0D4B               	rlf	??___ftadd+1,w
  4121  1746  0D4C               	rlf	??___ftadd+2,w
  4122  1747  00CF               	movwf	___ftadd@exp1
  4123  1748  0847               	movf	___ftadd@f2,w
  4124  1749  00CA               	movwf	??___ftadd
  4125  174A  0848               	movf	___ftadd@f2+1,w
  4126  174B  00CB               	movwf	??___ftadd+1
  4127  174C  0849               	movf	___ftadd@f2+2,w
  4128  174D  00CC               	movwf	??___ftadd+2
  4129  174E  1003               	clrc
  4130  174F  0D4B               	rlf	??___ftadd+1,w
  4131  1750  0D4C               	rlf	??___ftadd+2,w
  4132  1751  00CE               	movwf	___ftadd@exp2
  4133  1752  084F               	movf	___ftadd@exp1,w
  4134  1753  1903               	btfsc	3,2
  4135  1754  2F61               	goto	l7829
  4136  1755  084E               	movf	___ftadd@exp2,w
  4137  1756  024F               	subwf	___ftadd@exp1,w
  4138  1757  084E               	movf	___ftadd@exp2,w
  4139  1758  1803               	skipnc
  4140  1759  2F69               	goto	L8
  4141  175A  00CA               	movwf	??___ftadd
  4142  175B  084F               	movf	___ftadd@exp1,w
  4143  175C  02CA               	subwf	??___ftadd,f
  4144  175D  3019               	movlw	25
  4145  175E  024A               	subwf	??___ftadd,w
  4146  175F  1C03               	skipc
  4147  1760  2F68               	goto	l7833
  4148  1761                     l7829:	
  4149  1761  0847               	movf	___ftadd@f2,w
  4150  1762  00C4               	movwf	?___ftadd
  4151  1763  0848               	movf	___ftadd@f2+1,w
  4152  1764  00C5               	movwf	?___ftadd+1
  4153  1765  0849               	movf	___ftadd@f2+2,w
  4154  1766  00C6               	movwf	?___ftadd+2
  4155  1767  0008               	return
  4156  1768                     l7833:	
  4157  1768  084E               	movf	___ftadd@exp2,w
  4158  1769                     L8:	
  4159  1769  1903               	btfsc	3,2
  4160  176A  0008               	return
  4161  176B  084F               	movf	___ftadd@exp1,w
  4162  176C  024E               	subwf	___ftadd@exp2,w
  4163  176D  1803               	skipnc
  4164  176E  2F77               	goto	l7839
  4165  176F  084F               	movf	___ftadd@exp1,w
  4166  1770  00CA               	movwf	??___ftadd
  4167  1771  084E               	movf	___ftadd@exp2,w
  4168  1772  02CA               	subwf	??___ftadd,f
  4169  1773  3019               	movlw	25
  4170  1774  024A               	subwf	??___ftadd,w
  4171  1775  1803               	btfsc	3,0
  4172  1776  0008               	return
  4173  1777                     l7839:	
  4174  1777  3006               	movlw	6
  4175  1778  00CD               	movwf	___ftadd@sign
  4176  1779  1BC6               	btfsc	___ftadd@f1+2,7
  4177  177A  17CD               	bsf	___ftadd@sign,7
  4178  177B  1BC9               	btfsc	___ftadd@f2+2,7
  4179  177C  174D               	bsf	___ftadd@sign,6
  4180  177D  17C5               	bsf	___ftadd@f1+1,7
  4181  177E  01C6               	clrf	___ftadd@f1+2
  4182  177F  17C8               	bsf	___ftadd@f2+1,7
  4183  1780  01C9               	clrf	___ftadd@f2+2
  4184  1781  084E               	movf	___ftadd@exp2,w
  4185  1782  024F               	subwf	___ftadd@exp1,w
  4186  1783  1803               	skipnc
  4187  1784  2F9E               	goto	l7861
  4188  1785                     l7851:	
  4189  1785  1003               	clrc
  4190  1786  0DC7               	rlf	___ftadd@f2,f
  4191  1787  0DC8               	rlf	___ftadd@f2+1,f
  4192  1788  0DC9               	rlf	___ftadd@f2+2,f
  4193  1789  03CE               	decf	___ftadd@exp2,f
  4194  178A  084E               	movf	___ftadd@exp2,w
  4195  178B  064F               	xorwf	___ftadd@exp1,w
  4196  178C  1903               	skipnz
  4197  178D  2F99               	goto	l7859
  4198  178E  03CD               	decf	___ftadd@sign,f
  4199  178F  084D               	movf	___ftadd@sign,w
  4200  1790  3907               	andlw	7
  4201  1791  1903               	btfsc	3,2
  4202  1792  2F99               	goto	l7859
  4203  1793  2F85               	goto	l7851
  4204  1794                     l7857:	
  4205  1794  1003               	clrc
  4206  1795  0CC6               	rrf	___ftadd@f1+2,f
  4207  1796  0CC5               	rrf	___ftadd@f1+1,f
  4208  1797  0CC4               	rrf	___ftadd@f1,f
  4209  1798  0ACF               	incf	___ftadd@exp1,f
  4210  1799                     l7859:	
  4211  1799  084F               	movf	___ftadd@exp1,w
  4212  179A  064E               	xorwf	___ftadd@exp2,w
  4213  179B  1903               	btfsc	3,2
  4214  179C  2FBA               	goto	l3366
  4215  179D  2F94               	goto	l7857
  4216  179E                     l7861:	
  4217  179E  084F               	movf	___ftadd@exp1,w
  4218  179F  024E               	subwf	___ftadd@exp2,w
  4219  17A0  1803               	skipnc
  4220  17A1  2FBA               	goto	l3366
  4221  17A2                     l7863:	
  4222  17A2  1003               	clrc
  4223  17A3  0DC4               	rlf	___ftadd@f1,f
  4224  17A4  0DC5               	rlf	___ftadd@f1+1,f
  4225  17A5  0DC6               	rlf	___ftadd@f1+2,f
  4226  17A6  03CF               	decf	___ftadd@exp1,f
  4227  17A7  084E               	movf	___ftadd@exp2,w
  4228  17A8  064F               	xorwf	___ftadd@exp1,w
  4229  17A9  1903               	skipnz
  4230  17AA  2FB6               	goto	l7871
  4231  17AB  03CD               	decf	___ftadd@sign,f
  4232  17AC  084D               	movf	___ftadd@sign,w
  4233  17AD  3907               	andlw	7
  4234  17AE  1903               	btfsc	3,2
  4235  17AF  2FB6               	goto	l7871
  4236  17B0  2FA2               	goto	l7863
  4237  17B1                     l7869:	
  4238  17B1  1003               	clrc
  4239  17B2  0CC9               	rrf	___ftadd@f2+2,f
  4240  17B3  0CC8               	rrf	___ftadd@f2+1,f
  4241  17B4  0CC7               	rrf	___ftadd@f2,f
  4242  17B5  0ACE               	incf	___ftadd@exp2,f
  4243  17B6                     l7871:	
  4244  17B6  084F               	movf	___ftadd@exp1,w
  4245  17B7  064E               	xorwf	___ftadd@exp2,w
  4246  17B8  1D03               	skipz
  4247  17B9  2FB1               	goto	l7869
  4248  17BA                     l3366:	
  4249  17BA  1FCD               	btfss	___ftadd@sign,7
  4250  17BB  2FC5               	goto	l7877
  4251  17BC  30FF               	movlw	255
  4252  17BD  06C4               	xorwf	___ftadd@f1,f
  4253  17BE  06C5               	xorwf	___ftadd@f1+1,f
  4254  17BF  06C6               	xorwf	___ftadd@f1+2,f
  4255  17C0  0AC4               	incf	___ftadd@f1,f
  4256  17C1  1903               	skipnz
  4257  17C2  0AC5               	incf	___ftadd@f1+1,f
  4258  17C3  1903               	skipnz
  4259  17C4  0AC6               	incf	___ftadd@f1+2,f
  4260  17C5                     l7877:	
  4261  17C5  1F4D               	btfss	___ftadd@sign,6
  4262  17C6  2FD0               	goto	l7883
  4263  17C7  30FF               	movlw	255
  4264  17C8  06C7               	xorwf	___ftadd@f2,f
  4265  17C9  06C8               	xorwf	___ftadd@f2+1,f
  4266  17CA  06C9               	xorwf	___ftadd@f2+2,f
  4267  17CB  0AC7               	incf	___ftadd@f2,f
  4268  17CC  1903               	skipnz
  4269  17CD  0AC8               	incf	___ftadd@f2+1,f
  4270  17CE  1903               	skipnz
  4271  17CF  0AC9               	incf	___ftadd@f2+2,f
  4272  17D0                     l7883:	
  4273  17D0  01CD               	clrf	___ftadd@sign
  4274  17D1  0844               	movf	___ftadd@f1,w
  4275  17D2  07C7               	addwf	___ftadd@f2,f
  4276  17D3  0845               	movf	___ftadd@f1+1,w
  4277  17D4  1103               	clrz
  4278  17D5  1803               	skipnc
  4279  17D6  0A45               	incf	___ftadd@f1+1,w
  4280  17D7  1D03               	btfss	3,2
  4281  17D8  07C8               	addwf	___ftadd@f2+1,f
  4282  17D9  0846               	movf	___ftadd@f1+2,w
  4283  17DA  1103               	clrz
  4284  17DB  1803               	skipnc
  4285  17DC  0A46               	incf	___ftadd@f1+2,w
  4286  17DD  1D03               	btfss	3,2
  4287  17DE  07C9               	addwf	___ftadd@f2+2,f
  4288  17DF  1FC9               	btfss	___ftadd@f2+2,7
  4289  17E0  2FEC               	goto	l7895
  4290  17E1  30FF               	movlw	255
  4291  17E2  06C7               	xorwf	___ftadd@f2,f
  4292  17E3  06C8               	xorwf	___ftadd@f2+1,f
  4293  17E4  06C9               	xorwf	___ftadd@f2+2,f
  4294  17E5  0AC7               	incf	___ftadd@f2,f
  4295  17E6  1903               	skipnz
  4296  17E7  0AC8               	incf	___ftadd@f2+1,f
  4297  17E8  1903               	skipnz
  4298  17E9  0AC9               	incf	___ftadd@f2+2,f
  4299  17EA  01CD               	clrf	___ftadd@sign
  4300  17EB  0ACD               	incf	___ftadd@sign,f
  4301  17EC                     l7895:	
  4302  17EC  0847               	movf	___ftadd@f2,w
  4303  17ED  00F2               	movwf	?___ftpack
  4304  17EE  0848               	movf	___ftadd@f2+1,w
  4305  17EF  00F3               	movwf	?___ftpack+1
  4306  17F0  0849               	movf	___ftadd@f2+2,w
  4307  17F1  00F4               	movwf	?___ftpack+2
  4308  17F2  084F               	movf	___ftadd@exp1,w
  4309  17F3  00F5               	movwf	?___ftpack+3
  4310  17F4  084D               	movf	___ftadd@sign,w
  4311  17F5  00F6               	movwf	?___ftpack+4
  4312  17F6  120A  158A  2769   	fcall	___ftpack
  4313  17F9  0872               	movf	?___ftpack,w
  4314  17FA  00C4               	movwf	?___ftadd
  4315  17FB  0873               	movf	?___ftpack+1,w
  4316  17FC  00C5               	movwf	?___ftadd+1
  4317  17FD  0874               	movf	?___ftpack+2,w
  4318  17FE  00C6               	movwf	?___ftadd+2
  4319  17FF  0008               	return
  4320  1800                     __end_of___ftadd:	
  4321                           
  4322                           	psect	text812
  4323  0900                     __ptext812:	
  4324 ;; =============== function _scale ends ============
  4325                           
  4326                           
  4327 ;; *************** function _fround *****************
  4328 ;; Defined at:
  4329 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  prec            1    wreg     unsigned char 
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  prec            1   57[BANK0 ] unsigned char 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  3   48[BANK0 ] unsigned char 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 60/20
  4340 ;;		On exit  : 60/0
  4341 ;;		Unchanged: FFF9F/0
  4342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4343 ;;      Params:         0       3       0       0       0
  4344 ;;      Locals:         0       7       0       0       0
  4345 ;;      Temps:          0       0       0       0       0
  4346 ;;      Totals:         0      10       0       0       0
  4347 ;;Total ram usage:       10 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    3
  4350 ;; This function calls:
  4351 ;;		___lbmod
  4352 ;;		___bmul
  4353 ;;		___lbdiv
  4354 ;;		___ftmul
  4355 ;; This function is called by:
  4356 ;;		_printf
  4357 ;; This function uses a non-reentrant model
  4358 ;;
  4359  0900                     _fround:	
  4360                           
  4361                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4362                           ;fround@prec stored from wreg
  4363  0900  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0901  00D9               	movwf	fround@prec
  4365  0902  306E               	movlw	110
  4366  0903  0259               	subwf	fround@prec,w
  4367  0904  1C03               	skipc
  4368  0905  298B               	goto	l8081
  4369  0906  3003               	movlw	3
  4370  0907  00F8               	movwf	?___bmul
  4371  0908  300A               	movlw	10
  4372  0909  00F7               	movwf	?___lbdiv
  4373  090A  3064               	movlw	100
  4374  090B  00F2               	movwf	?___lbmod
  4375  090C  0859               	movf	fround@prec,w
  4376  090D  2220  120A  158A   	fcall	___lbmod
  4377  0910  2205               	fcall	___lbdiv
  4378  0911  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4379  0916  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4380  0917  0084               	movwf	4
  4381  0918  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4382  091D  00B5               	movwf	?___ftmul
  4383  091E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4384  0923  00B6               	movwf	?___ftmul+1
  4385  0924  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4386  0929  00B7               	movwf	?___ftmul+2
  4387  092A  3003               	movlw	3
  4388  092B  00F8               	movwf	?___bmul
  4389  092C  3064               	movlw	100
  4390  092D  00F7               	movwf	?___lbdiv
  4391  092E  0859               	movf	fround@prec,w
  4392  092F  2205               	fcall	___lbdiv
  4393  0930  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4394  0935  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4395  0936  0084               	movwf	4
  4396  0937  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4397  093C  00B8               	movwf	?___ftmul+3
  4398  093D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4399  0942  00B9               	movwf	?___ftmul+4
  4400  0943  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4401  0948  00BA               	movwf	?___ftmul+5
  4402  0949  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4403  094E  224B  120A  158A   	fcall	PL31	;call to abstracted procedure
  4404  0951  3003               	movlw	3
  4405  0952  00F8               	movwf	?___bmul
  4406  0953  300A               	movlw	10
  4407  0954  00F2               	movwf	?___lbmod
  4408  0955  0859               	movf	fround@prec,w
  4409  0956  2220               	fcall	___lbmod
  4410  0957  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4411  095C  3E01               	addlw	low (__npowers_-__stringbase)
  4412  095D  0084               	movwf	4
  4413  095E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4414  0963  00B5               	movwf	?___ftmul
  4415  0964  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4416  0969  00B6               	movwf	?___ftmul+1
  4417  096A  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4418  096F  2243               	fcall	PL25	;call to abstracted procedure
  4419  0970  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4420  0975  0835               	movf	?___ftmul,w
  4421  0976  00D3               	movwf	_fround$4117
  4422  0977  0836               	movf	?___ftmul+1,w
  4423  0978  00D4               	movwf	_fround$4117+1
  4424  0979  0837               	movf	?___ftmul+2,w
  4425  097A  00D5               	movwf	_fround$4117+2
  4426  097B  303F               	movlw	63
  4427  097C  01B5               	clrf	?___ftmul
  4428  097D  01B6               	clrf	?___ftmul+1
  4429  097E  00B7               	movwf	?___ftmul+2
  4430  097F  0853               	movf	_fround$4117,w
  4431  0980  00B8               	movwf	?___ftmul+3
  4432  0981  0854               	movf	_fround$4117+1,w
  4433  0982  00B9               	movwf	?___ftmul+4
  4434  0983  0855               	movf	_fround$4117+2,w
  4435  0984  00BA               	movwf	?___ftmul+5
  4436  0985  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4437  098A  2A3C               	ljmp	PL17	;call to abstracted procedure
  4438  098B                     l8081:	
  4439  098B  300B               	movlw	11
  4440  098C  0259               	subwf	fround@prec,w
  4441  098D  1C03               	skipc
  4442  098E  29DF               	goto	l8089
  4443  098F  3003               	movlw	3
  4444  0990  00F8               	movwf	?___bmul
  4445  0991  300A               	movlw	10
  4446  0992  00F2               	movwf	?___lbmod
  4447  0993  0859               	movf	fround@prec,w
  4448  0994  2220               	fcall	___lbmod
  4449  0995  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4450  099A  3E01               	addlw	low (__npowers_-__stringbase)
  4451  099B  0084               	movwf	4
  4452  099C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4453  09A1  00B5               	movwf	?___ftmul
  4454  09A2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4455  09A7  00B6               	movwf	?___ftmul+1
  4456  09A8  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4457  09AD  00B7               	movwf	?___ftmul+2
  4458  09AE  3003               	movlw	3
  4459  09AF  00F8               	movwf	?___bmul
  4460  09B0  300A               	movlw	10
  4461  09B1  00F7               	movwf	?___lbdiv
  4462  09B2  0859               	movf	fround@prec,w
  4463  09B3  2205               	fcall	___lbdiv
  4464  09B4  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4465  09B9  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4466  09BA  0084               	movwf	4
  4467  09BB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4468  09C0  00B8               	movwf	?___ftmul+3
  4469  09C1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4470  09C6  00B9               	movwf	?___ftmul+4
  4471  09C7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4472  09CC  00BA               	movwf	?___ftmul+5
  4473  09CD  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4474  09D2  224B  120A  158A   	fcall	PL31	;call to abstracted procedure
  4475  09D5  303F               	movlw	63
  4476  09D6  01B5               	clrf	?___ftmul
  4477  09D7  01B6               	clrf	?___ftmul+1
  4478  09D8  2243               	fcall	PL25	;call to abstracted procedure
  4479  09D9  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4480  09DE  2A3C               	ljmp	PL17	;call to abstracted procedure
  4481  09DF                     l8089:	
  4482  09DF  303F               	movlw	63
  4483  09E0  01B5               	clrf	?___ftmul
  4484  09E1  01B6               	clrf	?___ftmul+1
  4485  09E2  00B7               	movwf	?___ftmul+2
  4486  09E3  3003               	movlw	3
  4487  09E4  00F8               	movwf	?___bmul
  4488  09E5  0859               	movf	fround@prec,w
  4489  09E6  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4490  09EB  3E01               	addlw	low (__npowers_-__stringbase)
  4491  09EC  0084               	movwf	4
  4492  09ED  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4493  09F2  00B8               	movwf	?___ftmul+3
  4494  09F3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4495  09F8  00B9               	movwf	?___ftmul+4
  4496  09F9  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4497  09FE  00BA               	movwf	?___ftmul+5
  4498  09FF  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4499  0A04  2A3C               	ljmp	PL17	;call to abstracted procedure
  4500  0A05                     __end_of_fround:	
  4501  0A05                     __ptext832:	
  4502 ;; =============== function ___lbmod ends ============
  4503                           
  4504                           
  4505 ;; *************** function ___lbdiv *****************
  4506 ;; Defined at:
  4507 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  dividend        1    wreg     unsigned char 
  4510 ;;  divisor         1    7[COMMON] unsigned char 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  dividend        1    0[BANK0 ] unsigned char 
  4513 ;;  quotient        1    2[BANK0 ] unsigned char 
  4514 ;;  counter         1    1[BANK0 ] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  1    wreg      unsigned char 
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0
  4519 ;; Tracked objects:
  4520 ;;		On entry : 60/0
  4521 ;;		On exit  : 60/0
  4522 ;;		Unchanged: FFF9F/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4524 ;;      Params:         1       0       0       0       0
  4525 ;;      Locals:         0       3       0       0       0
  4526 ;;      Temps:          0       0       0       0       0
  4527 ;;      Totals:         1       3       0       0       0
  4528 ;;Total ram usage:        4 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    1
  4531 ;; This function calls:
  4532 ;;		Nothing
  4533 ;; This function is called by:
  4534 ;;		_fround
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537  0A05                     ___lbdiv:	
  4538                           
  4539                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4540                           ;___lbdiv@dividend stored from wreg
  4541  0A05  00A0               	movwf	___lbdiv@dividend
  4542  0A06  01A2               	clrf	___lbdiv@quotient
  4543  0A07  0877               	movf	___lbdiv@divisor,w
  4544  0A08  1903               	btfsc	3,2
  4545  0A09  2A1E               	goto	l7663
  4546  0A0A  01A1               	clrf	___lbdiv@counter
  4547  0A0B                     l7649:	
  4548  0A0B  0AA1               	incf	___lbdiv@counter,f
  4549  0A0C  1BF7               	btfsc	___lbdiv@divisor,7
  4550  0A0D  2A11               	goto	l3335
  4551  0A0E  1003               	clrc
  4552  0A0F  0DF7               	rlf	___lbdiv@divisor,f
  4553  0A10  2A0B               	goto	l7649
  4554  0A11                     l3335:	
  4555  0A11  1003               	clrc
  4556  0A12  0DA2               	rlf	___lbdiv@quotient,f
  4557  0A13  0877               	movf	___lbdiv@divisor,w
  4558  0A14  0220               	subwf	___lbdiv@dividend,w
  4559  0A15  1C03               	skipc
  4560  0A16  2A1B               	goto	L19
  4561  0A17  0877               	movf	___lbdiv@divisor,w
  4562  0A18  02A0               	subwf	___lbdiv@dividend,f
  4563  0A19  1422               	bsf	___lbdiv@quotient,0
  4564  0A1A  1003               	clrc
  4565  0A1B                     L19:	
  4566  0A1B  0CF7               	rrf	___lbdiv@divisor,f
  4567  0A1C  0BA1               	decfsz	___lbdiv@counter,f
  4568  0A1D  2A11               	goto	l3335
  4569  0A1E                     l7663:	
  4570  0A1E  0822               	movf	___lbdiv@quotient,w
  4571  0A1F  0008               	return
  4572  0A20                     __end_of___lbdiv:	
  4573  0A20                     __ptext831:	
  4574 ;; =============== function ___ftpack ends ============
  4575                           
  4576                           
  4577 ;; *************** function ___lbmod *****************
  4578 ;; Defined at:
  4579 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  dividend        1    wreg     unsigned char 
  4582 ;;  divisor         1    2[COMMON] unsigned char 
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;  dividend        1    4[COMMON] unsigned char 
  4585 ;;  rem             1    6[COMMON] unsigned char 
  4586 ;;  counter         1    5[COMMON] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      unsigned char 
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0
  4591 ;; Tracked objects:
  4592 ;;		On entry : 60/0
  4593 ;;		On exit  : 60/0
  4594 ;;		Unchanged: FFF9F/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4596 ;;      Params:         1       0       0       0       0
  4597 ;;      Locals:         3       0       0       0       0
  4598 ;;      Temps:          1       0       0       0       0
  4599 ;;      Totals:         5       0       0       0       0
  4600 ;;Total ram usage:        5 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    1
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_fround
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609  0A20                     ___lbmod:	
  4610                           
  4611                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4612                           ;___lbmod@dividend stored from wreg
  4613  0A20  00F4               	movwf	___lbmod@dividend
  4614  0A21  3008               	movlw	8
  4615  0A22  00F5               	movwf	___lbmod@counter
  4616  0A23  01F6               	clrf	___lbmod@rem
  4617  0A24                     l6439:	
  4618  0A24  0874               	movf	___lbmod@dividend,w
  4619  0A25  00F3               	movwf	??___lbmod
  4620  0A26  3007               	movlw	7
  4621  0A27  1003               	clrc
  4622  0A28                     L18:	
  4623  0A28  0CF3               	rrf	??___lbmod,f
  4624  0A29  3EFF               	addlw	-1
  4625  0A2A  1003               	clrc
  4626  0A2B  1D03               	skipz
  4627  0A2C  2A28               	goto	L18
  4628  0A2D  0D76               	rlf	___lbmod@rem,w
  4629  0A2E  0473               	iorwf	??___lbmod,w
  4630  0A2F  00F6               	movwf	___lbmod@rem
  4631  0A30  1003               	clrc
  4632  0A31  0DF4               	rlf	___lbmod@dividend,f
  4633  0A32  0872               	movf	___lbmod@divisor,w
  4634  0A33  0276               	subwf	___lbmod@rem,w
  4635  0A34  1C03               	skipc
  4636  0A35  2A38               	goto	l6447
  4637  0A36  0872               	movf	___lbmod@divisor,w
  4638  0A37  02F6               	subwf	___lbmod@rem,f
  4639  0A38                     l6447:	
  4640  0A38  0BF5               	decfsz	___lbmod@counter,f
  4641  0A39  2A24               	goto	l6439
  4642  0A3A  0876               	movf	___lbmod@rem,w
  4643  0A3B  0008               	return
  4644  0A3C                     __end_of___lbmod:	
  4645  0A3C                     PL17:	
  4646  0A3C  0835               	movf	?___ftmul,w
  4647  0A3D  00D0               	movwf	?_fround
  4648  0A3E  0836               	movf	?___ftmul+1,w
  4649  0A3F  00D1               	movwf	?_fround+1
  4650  0A40  0837               	movf	?___ftmul+2,w
  4651  0A41  00D2               	movwf	?_fround+2
  4652  0A42  0008               	return
  4653  0A43                     PL25:	
  4654  0A43  00B7               	movwf	?___ftmul+2
  4655  0A44  0856               	movf	_fround$4116,w
  4656  0A45  00B8               	movwf	?___ftmul+3
  4657  0A46  0857               	movf	_fround$4116+1,w
  4658  0A47  00B9               	movwf	?___ftmul+4
  4659  0A48  0858               	movf	_fround$4116+2,w
  4660  0A49  00BA               	movwf	?___ftmul+5
  4661  0A4A  0008               	return
  4662  0A4B                     PL31:	
  4663  0A4B  0835               	movf	?___ftmul,w
  4664  0A4C  00D6               	movwf	_fround$4116
  4665  0A4D  0836               	movf	?___ftmul+1,w
  4666  0A4E  00D7               	movwf	_fround$4116+1
  4667  0A4F  0837               	movf	?___ftmul+2,w
  4668  0A50  00D8               	movwf	_fround$4116+2
  4669  0A51  0008               	return
  4670                           
  4671                           	psect	text813
  4672  0A52                     __ptext813:	
  4673 ;; =============== function _fround ends ============
  4674                           
  4675                           
  4676 ;; *************** function _lcd_gotoxy *****************
  4677 ;; Defined at:
  4678 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  col             1    wreg     unsigned char 
  4681 ;;  row             1    7[COMMON] unsigned char 
  4682 ;; Auto vars:     Size  Location     Type
  4683 ;;  col             1    8[COMMON] unsigned char 
  4684 ;;  address         1    9[COMMON] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;		None               void
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0, pclath, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 40/0
  4691 ;;		On exit  : 60/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4694 ;;      Params:         1       0       0       0       0
  4695 ;;      Locals:         2       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0
  4697 ;;      Totals:         3       0       0       0       0
  4698 ;;Total ram usage:        3 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    2
  4701 ;; This function calls:
  4702 ;;		_lcd_put_byte
  4703 ;;		_lcd_busy
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;;		_lcd_putc
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709  0A52                     _lcd_gotoxy:	
  4710                           
  4711                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4712                           ;lcd_gotoxy@col stored from wreg
  4713  0A52  00F8               	movwf	lcd_gotoxy@col
  4714                           
  4715                           ;lcd(16).c: 163: unsigned char address;
  4716                           ;lcd(16).c: 165: if(row!=0)
  4717  0A53  0877               	movf	lcd_gotoxy@row,w
  4718  0A54  1903               	btfsc	3,2
  4719  0A55  2A59               	goto	l8063
  4720                           
  4721                           ;lcd(16).c: 166: address=0x40;
  4722  0A56  3040               	movlw	64
  4723  0A57  00F9               	movwf	lcd_gotoxy@address
  4724  0A58  2A5A               	goto	l8065
  4725  0A59                     l8063:	
  4726                           
  4727                           ;lcd(16).c: 167: else
  4728                           ;lcd(16).c: 168: address=0;
  4729  0A59  01F9               	clrf	lcd_gotoxy@address
  4730  0A5A                     l8065:	
  4731                           
  4732                           ;lcd(16).c: 170: address += col;
  4733  0A5A  0878               	movf	lcd_gotoxy@col,w
  4734  0A5B  07F9               	addwf	lcd_gotoxy@address,f
  4735                           
  4736                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4737  0A5C  0879               	movf	lcd_gotoxy@address,w
  4738  0A5D  3880               	iorlw	128
  4739  0A5E  00F2               	movwf	?_lcd_put_byte
  4740  0A5F  3000               	movlw	0
  4741  0A60  2354  120A  158A   	fcall	_lcd_put_byte
  4742  0A63                     l8069:	
  4743                           ;lcd(16).c: 172: while(lcd_busy());
  4744                           
  4745  0A63  23E4  120A  158A   	fcall	_lcd_busy
  4746  0A66  3800               	iorlw	0
  4747  0A67  1903               	btfsc	3,2
  4748  0A68  0008               	return
  4749  0A69  2A63               	goto	l8069
  4750  0A6A                     __end_of_lcd_gotoxy:	
  4751  0A6A                     __ptext809:	
  4752 ;; =============== function _putch ends ============
  4753                           
  4754                           
  4755 ;; *************** function _lcd_putc *****************
  4756 ;; Defined at:
  4757 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  c               1    wreg     unsigned char 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  c               1    0[BANK0 ] unsigned char 
  4762 ;; Return value:  Size  Location     Type
  4763 ;;		None               void
  4764 ;; Registers used:
  4765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 60/0
  4768 ;;		On exit  : 60/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4771 ;;      Params:         0       0       0       0       0
  4772 ;;      Locals:         0       1       0       0       0
  4773 ;;      Temps:          0       0       0       0       0
  4774 ;;      Totals:         0       1       0       0       0
  4775 ;;Total ram usage:        1 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    3
  4778 ;; This function calls:
  4779 ;;		_lcd_put_byte
  4780 ;;		_lcd_busy
  4781 ;;		_lcd_gotoxy
  4782 ;;		_isprint
  4783 ;; This function is called by:
  4784 ;;		_putch
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787  0A6A                     _lcd_putc:	
  4788                           
  4789                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4790                           ;lcd_putc@c stored from wreg
  4791  0A6A  00A0               	movwf	lcd_putc@c
  4792                           
  4793                           ;lcd(16).c: 144: switch(c){
  4794  0A6B  2A90               	goto	l8155
  4795  0A6C                     l8141:	
  4796  0A6C  3000               	movlw	0
  4797                           
  4798                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4799  0A6D  01F2               	clrf	?_lcd_put_byte
  4800  0A6E  0AF2               	incf	?_lcd_put_byte,f
  4801  0A6F  2354  120A  158A   	fcall	_lcd_put_byte
  4802  0A72                     l8143:	
  4803                           ;lcd(16).c: 147: while(lcd_busy());
  4804                           
  4805  0A72  23E4  120A  158A   	fcall	_lcd_busy
  4806  0A75  3800               	iorlw	0
  4807  0A76  1903               	btfsc	3,2
  4808  0A77  0008               	return
  4809  0A78  2A72               	goto	l8143
  4810  0A79                     l8145:	
  4811  0A79  3000               	movlw	0
  4812                           
  4813                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4814  0A7A  01F7               	clrf	?_lcd_gotoxy
  4815  0A7B  0AF7               	incf	?_lcd_gotoxy,f
  4816  0A7C  2A52               	ljmp	_lcd_gotoxy
  4817  0A7D                     l8147:	
  4818                           ;lcd(16).c: 151: break;
  4819                           
  4820                           
  4821                           ;lcd(16).c: 153: if(isprint(c)){
  4822  0A7D  0820               	movf	lcd_putc@c,w
  4823  0A7E  240B  120A  158A   	fcall	_isprint
  4824  0A81  1C03               	btfss	3,0
  4825  0A82  0008               	return
  4826                           
  4827                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4828  0A83  0820               	movf	lcd_putc@c,w
  4829  0A84  00F2               	movwf	?_lcd_put_byte
  4830  0A85  3001               	movlw	1
  4831  0A86  2354  120A  158A   	fcall	_lcd_put_byte
  4832  0A89                     l8151:	
  4833                           ;lcd(16).c: 155: while(lcd_busy());
  4834                           
  4835  0A89  23E4  120A  158A   	fcall	_lcd_busy
  4836  0A8C  3800               	iorlw	0
  4837  0A8D  1903               	btfsc	3,2
  4838  0A8E  0008               	return
  4839  0A8F  2A89               	goto	l8151
  4840  0A90                     l8155:	
  4841  0A90  0820               	movf	lcd_putc@c,w
  4842                           
  4843                           ; Switch size 1, requested type "space"
  4844                           ; Number of cases is 2, Range of values is 10 to 12
  4845                           ; switch strategies available:
  4846                           ; Name         Instructions Cycles
  4847                           ; simple_byte            7     4 (average)
  4848                           ; direct_byte           20    11 (fixed)
  4849                           ; jumptable            263     9 (fixed)
  4850                           ;	Chosen strategy is simple_byte
  4851  0A91  3A0A               	xorlw	10	; case 10
  4852  0A92  1903               	skipnz
  4853  0A93  2A79               	goto	l8145
  4854  0A94  3A06               	xorlw	6	; case 12
  4855  0A95  1903               	skipnz
  4856  0A96  2A6C               	goto	l8141
  4857  0A97  2A7D               	goto	l8147
  4858  0A98  0008               	return
  4859  0A99                     __end_of_lcd_putc:	
  4860  0A99                     __ptext814:	
  4861 ;; =============== function _lcd_gotoxy ends ============
  4862                           
  4863                           
  4864 ;; *************** function _lcd_init *****************
  4865 ;; Defined at:
  4866 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  i               1    0        unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;		None               void
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 17F/60
  4877 ;;		On exit  : 60/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0
  4882 ;;      Temps:          3       0       0       0       0
  4883 ;;      Totals:         3       0       0       0       0
  4884 ;;Total ram usage:        3 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    2
  4887 ;; This function calls:
  4888 ;;		_lcd_put_byte
  4889 ;;		_lcd_busy
  4890 ;; This function is called by:
  4891 ;;		_main
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894  0A99                     _lcd_init:	
  4895                           
  4896                           ;lcd(16).c: 6: unsigned char i;
  4897                           ;lcd(16).c: 7: TRISD3 = 0;
  4898                           
  4899                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4900  0A99  1303               	bcf	3,6	;RP1=0, select bank1
  4901  0A9A  1188               	bcf	8,3
  4902                           
  4903                           ;lcd(16).c: 8: TRISD1 = 0;
  4904  0A9B  1088               	bcf	8,1
  4905                           
  4906                           ;lcd(16).c: 9: TRISD2 = 0;
  4907  0A9C  1108               	bcf	8,2
  4908                           
  4909                           ;lcd(16).c: 10: TRISD4 = 0;
  4910  0A9D  1208               	bcf	8,4
  4911                           
  4912                           ;lcd(16).c: 11: TRISD5 = 0;
  4913  0A9E  1288               	bcf	8,5
  4914                           
  4915                           ;lcd(16).c: 12: TRISD6 = 0;
  4916  0A9F  1308               	bcf	8,6
  4917                           
  4918                           ;lcd(16).c: 13: TRISD7 = 0;
  4919  0AA0  1388               	bcf	8,7
  4920                           
  4921                           ;lcd(16).c: 14: RD3 = 0;
  4922  0AA1  1283               	bcf	3,5	;RP0=0, select bank0
  4923  0AA2  3003               	movlw	3
  4924  0AA3  1188               	bcf	8,3
  4925                           
  4926                           ;lcd(16).c: 15: RD1 = 0;
  4927  0AA4  1088               	bcf	8,1
  4928                           
  4929                           ;lcd(16).c: 16: RD2 = 0;
  4930  0AA5  1108               	bcf	8,2
  4931                           
  4932                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4933  0AA6  00F9               	movwf	??_lcd_init+2
  4934  0AA7  308A               	movlw	138
  4935  0AA8  00F8               	movwf	??_lcd_init+1
  4936  0AA9  3056               	movlw	86
  4937  0AAA  00F7               	movwf	??_lcd_init
  4938  0AAB                     u5737:	
  4939  0AAB  0BF7               	decfsz	??_lcd_init,f
  4940  0AAC  2AAB               	goto	u5737
  4941  0AAD  0BF8               	decfsz	??_lcd_init+1,f
  4942  0AAE  2AAB               	goto	u5737
  4943  0AAF  0BF9               	decfsz	??_lcd_init+2,f
  4944  0AB0  2AAB               	goto	u5737
  4945  0AB1  2AB2               	nop2
  4946                           
  4947                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4948  0AB2  3030               	movlw	48
  4949  0AB3  00F2               	movwf	?_lcd_put_byte
  4950  0AB4  3000               	movlw	0
  4951  0AB5  2354  120A  158A   	fcall	_lcd_put_byte
  4952                           
  4953                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4954  0AB8  3002               	movlw	2
  4955  0AB9  00F9               	movwf	??_lcd_init+2
  4956  0ABA  3045               	movlw	69
  4957  0ABB  00F8               	movwf	??_lcd_init+1
  4958  0ABC  30A9               	movlw	169
  4959  0ABD  00F7               	movwf	??_lcd_init
  4960  0ABE                     u5747:	
  4961  0ABE  0BF7               	decfsz	??_lcd_init,f
  4962  0ABF  2ABE               	goto	u5747
  4963  0AC0  0BF8               	decfsz	??_lcd_init+1,f
  4964  0AC1  2ABE               	goto	u5747
  4965  0AC2  0BF9               	decfsz	??_lcd_init+2,f
  4966  0AC3  2ABE               	goto	u5747
  4967  0AC4  2AC5               	nop2
  4968                           
  4969                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4970  0AC5  3030               	movlw	48
  4971  0AC6  00F2               	movwf	?_lcd_put_byte
  4972  0AC7  3000               	movlw	0
  4973  0AC8  2354  120A  158A   	fcall	_lcd_put_byte
  4974                           
  4975                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4976  0ACB  3002               	movlw	2
  4977  0ACC  00F9               	movwf	??_lcd_init+2
  4978  0ACD  3045               	movlw	69
  4979  0ACE  00F8               	movwf	??_lcd_init+1
  4980  0ACF  30A9               	movlw	169
  4981  0AD0  00F7               	movwf	??_lcd_init
  4982  0AD1                     u5757:	
  4983  0AD1  0BF7               	decfsz	??_lcd_init,f
  4984  0AD2  2AD1               	goto	u5757
  4985  0AD3  0BF8               	decfsz	??_lcd_init+1,f
  4986  0AD4  2AD1               	goto	u5757
  4987  0AD5  0BF9               	decfsz	??_lcd_init+2,f
  4988  0AD6  2AD1               	goto	u5757
  4989  0AD7  2AD8               	nop2
  4990                           
  4991                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4992  0AD8  3032               	movlw	50
  4993  0AD9  00F2               	movwf	?_lcd_put_byte
  4994  0ADA  3000               	movlw	0
  4995  0ADB  2354  120A  158A   	fcall	_lcd_put_byte
  4996                           
  4997                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4998  0ADE  3003               	movlw	3
  4999  0ADF  00F9               	movwf	??_lcd_init+2
  5000  0AE0  308A               	movlw	138
  5001  0AE1  00F8               	movwf	??_lcd_init+1
  5002  0AE2  3056               	movlw	86
  5003  0AE3  00F7               	movwf	??_lcd_init
  5004  0AE4                     u5767:	
  5005  0AE4  0BF7               	decfsz	??_lcd_init,f
  5006  0AE5  2AE4               	goto	u5767
  5007  0AE6  0BF8               	decfsz	??_lcd_init+1,f
  5008  0AE7  2AE4               	goto	u5767
  5009  0AE8  0BF9               	decfsz	??_lcd_init+2,f
  5010  0AE9  2AE4               	goto	u5767
  5011  0AEA  2AEB               	nop2
  5012                           
  5013                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  5014  0AEB  3003               	movlw	3
  5015  0AEC  00F9               	movwf	??_lcd_init+2
  5016  0AED  308A               	movlw	138
  5017  0AEE  00F8               	movwf	??_lcd_init+1
  5018  0AEF  3056               	movlw	86
  5019  0AF0  00F7               	movwf	??_lcd_init
  5020  0AF1                     u5777:	
  5021  0AF1  0BF7               	decfsz	??_lcd_init,f
  5022  0AF2  2AF1               	goto	u5777
  5023  0AF3  0BF8               	decfsz	??_lcd_init+1,f
  5024  0AF4  2AF1               	goto	u5777
  5025  0AF5  0BF9               	decfsz	??_lcd_init+2,f
  5026  0AF6  2AF1               	goto	u5777
  5027  0AF7  2AF8               	nop2
  5028                           
  5029                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5030  0AF8  3003               	movlw	3
  5031  0AF9  00F9               	movwf	??_lcd_init+2
  5032  0AFA  308A               	movlw	138
  5033  0AFB  00F8               	movwf	??_lcd_init+1
  5034  0AFC  3056               	movlw	86
  5035  0AFD  00F7               	movwf	??_lcd_init
  5036  0AFE                     u5787:	
  5037  0AFE  0BF7               	decfsz	??_lcd_init,f
  5038  0AFF  2AFE               	goto	u5787
  5039  0B00  0BF8               	decfsz	??_lcd_init+1,f
  5040  0B01  2AFE               	goto	u5787
  5041  0B02  0BF9               	decfsz	??_lcd_init+2,f
  5042  0B03  2AFE               	goto	u5787
  5043  0B04  2B05               	nop2
  5044  0B05                     l8033:	
  5045                           ;lcd(16).c: 30: while(lcd_busy());
  5046                           
  5047  0B05  23E4  120A  158A   	fcall	_lcd_busy
  5048  0B08  3800               	iorlw	0
  5049  0B09  1D03               	skipz
  5050  0B0A  2B05               	goto	l8033
  5051                           
  5052                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5053  0B0B  3028               	movlw	40
  5054  0B0C  00F2               	movwf	?_lcd_put_byte
  5055  0B0D  3000               	movlw	0
  5056  0B0E  2354  120A  158A   	fcall	_lcd_put_byte
  5057  0B11                     l8037:	
  5058                           ;lcd(16).c: 32: while(lcd_busy());
  5059                           
  5060  0B11  23E4  120A  158A   	fcall	_lcd_busy
  5061  0B14  3800               	iorlw	0
  5062  0B15  1D03               	skipz
  5063  0B16  2B11               	goto	l8037
  5064                           
  5065                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5066  0B17  3008               	movlw	8
  5067  0B18  00F2               	movwf	?_lcd_put_byte
  5068  0B19  3000               	movlw	0
  5069  0B1A  2354  120A  158A   	fcall	_lcd_put_byte
  5070  0B1D                     l8041:	
  5071                           ;lcd(16).c: 35: while(lcd_busy());
  5072                           
  5073  0B1D  23E4  120A  158A   	fcall	_lcd_busy
  5074  0B20  3800               	iorlw	0
  5075  0B21  1D03               	skipz
  5076  0B22  2B1D               	goto	l8041
  5077                           
  5078                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5079  0B23  300C               	movlw	12
  5080  0B24  00F2               	movwf	?_lcd_put_byte
  5081  0B25  3000               	movlw	0
  5082  0B26  2354  120A  158A   	fcall	_lcd_put_byte
  5083  0B29                     l8045:	
  5084                           ;lcd(16).c: 37: while(lcd_busy());
  5085                           
  5086  0B29  23E4  120A  158A   	fcall	_lcd_busy
  5087  0B2C  3800               	iorlw	0
  5088  0B2D  1D03               	skipz
  5089  0B2E  2B29               	goto	l8045
  5090  0B2F  3000               	movlw	0
  5091                           
  5092                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5093  0B30  01F2               	clrf	?_lcd_put_byte
  5094  0B31  0AF2               	incf	?_lcd_put_byte,f
  5095  0B32  2354  120A  158A   	fcall	_lcd_put_byte
  5096  0B35                     l8049:	
  5097                           ;lcd(16).c: 40: while(lcd_busy());
  5098                           
  5099  0B35  23E4  120A  158A   	fcall	_lcd_busy
  5100  0B38  3800               	iorlw	0
  5101  0B39  1D03               	skipz
  5102  0B3A  2B35               	goto	l8049
  5103                           
  5104                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5105  0B3B  3004               	movlw	4
  5106  0B3C  00F2               	movwf	?_lcd_put_byte
  5107  0B3D  3000               	movlw	0
  5108  0B3E  2354  120A  158A   	fcall	_lcd_put_byte
  5109  0B41                     l8053:	
  5110                           ;lcd(16).c: 42: while(lcd_busy());
  5111                           
  5112  0B41  23E4  120A  158A   	fcall	_lcd_busy
  5113  0B44  3800               	iorlw	0
  5114  0B45  1D03               	skipz
  5115  0B46  2B41               	goto	l8053
  5116  0B47  3000               	movlw	0
  5117                           
  5118                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5119  0B48  01F2               	clrf	?_lcd_put_byte
  5120  0B49  0AF2               	incf	?_lcd_put_byte,f
  5121  0B4A  2354  120A  158A   	fcall	_lcd_put_byte
  5122  0B4D                     l8057:	
  5123                           ;lcd(16).c: 44: while(lcd_busy());
  5124                           
  5125  0B4D  23E4  120A  158A   	fcall	_lcd_busy
  5126  0B50  3800               	iorlw	0
  5127  0B51  1903               	btfsc	3,2
  5128  0B52  0008               	return
  5129  0B53  2B4D               	goto	l8057
  5130  0B54                     __end_of_lcd_init:	
  5131  0B54                     __ptext821:	
  5132 ;; =============== function _lcd_busy ends ============
  5133                           
  5134                           
  5135 ;; *************** function _lcd_put_byte *****************
  5136 ;; Defined at:
  5137 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  rs              1    wreg     unsigned char 
  5140 ;;  b               1    2[COMMON] unsigned char 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  rs              1    5[COMMON] unsigned char 
  5143 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  5144 ;; Return value:  Size  Location     Type
  5145 ;;		None               void
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 60/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5153 ;;      Params:         1       0       0       0       0
  5154 ;;      Locals:         2       0       0       0       0
  5155 ;;      Temps:          2       0       0       0       0
  5156 ;;      Totals:         5       0       0       0       0
  5157 ;;Total ram usage:        5 bytes
  5158 ;; Hardware stack levels used:    1
  5159 ;; Hardware stack levels required when called:    1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_lcd_init
  5164 ;;		_lcd_putc
  5165 ;;		_lcd_gotoxy
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168  0B54                     _lcd_put_byte:	
  5169                           
  5170                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5171                           ;lcd_put_byte@rs stored from wreg
  5172  0B54  00F5               	movwf	lcd_put_byte@rs
  5173                           
  5174                           ;lcd(16).c: 107: BYTE_VAL temp;
  5175                           ;lcd(16).c: 109: TRISD4 = 0;
  5176  0B55  1683               	bsf	3,5	;RP0=1, select bank1
  5177  0B56  1303               	bcf	3,6	;RP1=0, select bank1
  5178  0B57  1208               	bcf	8,4
  5179                           
  5180                           ;lcd(16).c: 110: TRISD5 = 0;
  5181  0B58  1288               	bcf	8,5
  5182                           
  5183                           ;lcd(16).c: 111: TRISD6 = 0;
  5184  0B59  1308               	bcf	8,6
  5185                           
  5186                           ;lcd(16).c: 112: TRISD7 = 0;
  5187  0B5A  1388               	bcf	8,7
  5188                           
  5189                           ;lcd(16).c: 114: RD1 = 0;
  5190  0B5B  1283               	bcf	3,5	;RP0=0, select bank0
  5191  0B5C  1088               	bcf	8,1
  5192                           
  5193                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5194  0B5D  0875               	movf	lcd_put_byte@rs,w
  5195  0B5E  1D03               	skipz
  5196  0B5F  1488               	bsf	8,1
  5197                           
  5198                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5199  0B60  3021               	movlw	33
  5200  0B61  00F3               	movwf	??_lcd_put_byte
  5201  0B62                     u5837:	
  5202  0B62  0BF3               	decfsz	??_lcd_put_byte,f
  5203  0B63  2B62               	goto	u5837
  5204  0B64  2420               	call	PL33	;select bank 0
  5205                           
  5206                           ;lcd(16).c: 118: RD2 = 0;
  5207  0B65  3021               	movlw	33
  5208  0B66  1108               	bcf	8,2
  5209                           
  5210                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5211  0B67  00F3               	movwf	??_lcd_put_byte
  5212  0B68                     u5847:	
  5213  0B68  0BF3               	decfsz	??_lcd_put_byte,f
  5214  0B69  2B68               	goto	u5847
  5215  0B6A  2420               	call	PL33	;select bank 0
  5216                           
  5217                           ;lcd(16).c: 120: RD3 = 0;
  5218  0B6B  1188               	bcf	8,3
  5219                           
  5220                           ;lcd(16).c: 122: temp.Val = b;
  5221  0B6C  0872               	movf	lcd_put_byte@b,w
  5222  0B6D  00F6               	movwf	lcd_put_byte@temp
  5223                           
  5224                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5225  0B6E  0E76               	swapf	lcd_put_byte@temp,w
  5226  0B6F  3901               	andlw	1
  5227  0B70  00F3               	movwf	??_lcd_put_byte
  5228  0B71  0C73               	rrf	??_lcd_put_byte,w
  5229  0B72  1C03               	btfss	3,0
  5230  0B73  2B77               	goto	u4470
  5231  0B74  2420               	call	PL33	;select bank 0
  5232  0B75  1608               	bsf	8,4
  5233  0B76  2B79               	goto	l7785
  5234  0B77                     u4470:	
  5235  0B77  2420               	call	PL33	;select bank 0
  5236  0B78  1208               	bcf	8,4
  5237  0B79                     l7785:	
  5238                           
  5239                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5240  0B79  0E76               	swapf	lcd_put_byte@temp,w
  5241  0B7A  00F3               	movwf	??_lcd_put_byte
  5242  0B7B  0C73               	rrf	??_lcd_put_byte,w
  5243  0B7C  3901               	andlw	1
  5244  0B7D  00F4               	movwf	??_lcd_put_byte+1
  5245  0B7E  0C74               	rrf	??_lcd_put_byte+1,w
  5246  0B7F  1C03               	btfss	3,0
  5247  0B80  2B84               	goto	u4490
  5248  0B81  2420               	call	PL33	;select bank 0
  5249  0B82  1688               	bsf	8,5
  5250  0B83  2B86               	goto	l7787
  5251  0B84                     u4490:	
  5252  0B84  2420               	call	PL33	;select bank 0
  5253  0B85  1288               	bcf	8,5
  5254  0B86                     l7787:	
  5255                           
  5256                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5257  0B86  0E76               	swapf	lcd_put_byte@temp,w
  5258  0B87  2419  120A  158A   	fcall	PL29	;call to abstracted procedure
  5259  0B8A  1C03               	btfss	3,0
  5260  0B8B  2B8F               	goto	u4510
  5261  0B8C  2420               	call	PL33	;select bank 0
  5262  0B8D  1708               	bsf	8,6
  5263  0B8E  2B91               	goto	l7789
  5264  0B8F                     u4510:	
  5265  0B8F  2420               	call	PL33	;select bank 0
  5266  0B90  1308               	bcf	8,6
  5267  0B91                     l7789:	
  5268                           
  5269                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5270  0B91  0D76               	rlf	lcd_put_byte@temp,w
  5271  0B92  0D76               	rlf	lcd_put_byte@temp,w
  5272  0B93  3901               	andlw	1
  5273  0B94  00F3               	movwf	??_lcd_put_byte
  5274  0B95  0C73               	rrf	??_lcd_put_byte,w
  5275  0B96  1C03               	btfss	3,0
  5276  0B97  2B9B               	goto	u4530
  5277  0B98  2420               	call	PL33	;select bank 0
  5278  0B99  1788               	bsf	8,7
  5279  0B9A  2B9D               	goto	u4544
  5280  0B9B                     u4530:	
  5281  0B9B  2420               	call	PL33	;select bank 0
  5282  0B9C  1388               	bcf	8,7
  5283  0B9D                     u4544:	
  5284                           
  5285                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5286  0B9D  3021               	movlw	33
  5287  0B9E  00F3               	movwf	??_lcd_put_byte
  5288  0B9F                     u5857:	
  5289  0B9F  0BF3               	decfsz	??_lcd_put_byte,f
  5290  0BA0  2B9F               	goto	u5857
  5291  0BA1  2420               	call	PL33	;select bank 0
  5292                           
  5293                           ;lcd(16).c: 130: RD3 = 1;
  5294  0BA2  3021               	movlw	33
  5295  0BA3  1588               	bsf	8,3
  5296                           
  5297                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5298  0BA4  00F3               	movwf	??_lcd_put_byte
  5299  0BA5                     u5867:	
  5300  0BA5  0BF3               	decfsz	??_lcd_put_byte,f
  5301  0BA6  2BA5               	goto	u5867
  5302  0BA7  2420               	call	PL33	;select bank 0
  5303                           
  5304                           ;lcd(16).c: 132: RD3 = 0;
  5305  0BA8  1188               	bcf	8,3
  5306                           
  5307                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5308  0BA9  0876               	movf	lcd_put_byte@temp,w
  5309  0BAA  3901               	andlw	1
  5310  0BAB  00F3               	movwf	??_lcd_put_byte
  5311  0BAC  0C73               	rrf	??_lcd_put_byte,w
  5312  0BAD  1C03               	btfss	3,0
  5313  0BAE  2BB2               	goto	u4550
  5314  0BAF  2420               	call	PL33	;select bank 0
  5315  0BB0  1608               	bsf	8,4
  5316  0BB1  2BB4               	goto	l7797
  5317  0BB2                     u4550:	
  5318  0BB2  2420               	call	PL33	;select bank 0
  5319  0BB3  1208               	bcf	8,4
  5320  0BB4                     l7797:	
  5321                           
  5322                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5323  0BB4  0C76               	rrf	lcd_put_byte@temp,w
  5324  0BB5  3901               	andlw	1
  5325  0BB6  00F3               	movwf	??_lcd_put_byte
  5326  0BB7  0C73               	rrf	??_lcd_put_byte,w
  5327  0BB8  1C03               	btfss	3,0
  5328  0BB9  2BBD               	goto	u4570
  5329  0BBA  2420               	call	PL33	;select bank 0
  5330  0BBB  1688               	bsf	8,5
  5331  0BBC  2BBF               	goto	l7799
  5332  0BBD                     u4570:	
  5333  0BBD  2420               	call	PL33	;select bank 0
  5334  0BBE  1288               	bcf	8,5
  5335  0BBF                     l7799:	
  5336                           
  5337                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5338  0BBF  0C76               	rrf	lcd_put_byte@temp,w
  5339  0BC0  00F3               	movwf	??_lcd_put_byte
  5340  0BC1  0C73               	rrf	??_lcd_put_byte,w
  5341  0BC2  3901               	andlw	1
  5342  0BC3  00F4               	movwf	??_lcd_put_byte+1
  5343  0BC4  0C74               	rrf	??_lcd_put_byte+1,w
  5344  0BC5  1C03               	btfss	3,0
  5345  0BC6  2BCA               	goto	u4590
  5346  0BC7  2420               	call	PL33	;select bank 0
  5347  0BC8  1708               	bsf	8,6
  5348  0BC9  2BCC               	goto	l7801
  5349  0BCA                     u4590:	
  5350  0BCA  2420               	call	PL33	;select bank 0
  5351  0BCB  1308               	bcf	8,6
  5352  0BCC                     l7801:	
  5353                           
  5354                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5355  0BCC  0C76               	rrf	lcd_put_byte@temp,w
  5356  0BCD  2419  120A  158A   	fcall	PL29	;call to abstracted procedure
  5357  0BD0  1C03               	btfss	3,0
  5358  0BD1  2BD5               	goto	u4610
  5359  0BD2  2420               	call	PL33	;select bank 0
  5360  0BD3  1788               	bsf	8,7
  5361  0BD4  2BD7               	goto	u4624
  5362  0BD5                     u4610:	
  5363  0BD5  2420               	call	PL33	;select bank 0
  5364  0BD6  1388               	bcf	8,7
  5365  0BD7                     u4624:	
  5366                           
  5367                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5368  0BD7  3021               	movlw	33
  5369  0BD8  00F3               	movwf	??_lcd_put_byte
  5370  0BD9                     u5877:	
  5371  0BD9  0BF3               	decfsz	??_lcd_put_byte,f
  5372  0BDA  2BD9               	goto	u5877
  5373  0BDB  2420               	call	PL33	;select bank 0
  5374                           
  5375                           ;lcd(16).c: 139: RD3 = 1;
  5376  0BDC  3021               	movlw	33
  5377  0BDD  1588               	bsf	8,3
  5378                           
  5379                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5380  0BDE  00F3               	movwf	??_lcd_put_byte
  5381  0BDF                     u5887:	
  5382  0BDF  0BF3               	decfsz	??_lcd_put_byte,f
  5383  0BE0  2BDF               	goto	u5887
  5384  0BE1  2420               	call	PL33	;select bank 0
  5385                           
  5386                           ;lcd(16).c: 141: RD3 = 0;
  5387  0BE2  1188               	bcf	8,3
  5388  0BE3  0008               	return
  5389  0BE4                     __end_of_lcd_put_byte:	
  5390  0BE4                     __ptext820:	
  5391 ;; =============== function ___ftadd ends ============
  5392                           
  5393                           
  5394 ;; *************** function _lcd_busy *****************
  5395 ;; Defined at:
  5396 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  busy            1    3[COMMON] unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      unsigned char 
  5403 ;; Registers used:
  5404 ;;		wreg
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 60/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5410 ;;      Params:         0       0       0       0       0
  5411 ;;      Locals:         1       0       0       0       0
  5412 ;;      Temps:          1       0       0       0       0
  5413 ;;      Totals:         2       0       0       0       0
  5414 ;;Total ram usage:        2 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    1
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_lcd_init
  5421 ;;		_lcd_putc
  5422 ;;		_lcd_gotoxy
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425  0BE4                     _lcd_busy:	
  5426                           
  5427                           ;lcd(16).c: 48: unsigned char busy;
  5428                           ;lcd(16).c: 50: TRISD4 = 1;
  5429                           
  5430                           ; Regs used in _lcd_busy: [wreg]
  5431  0BE4  1683               	bsf	3,5	;RP0=1, select bank1
  5432  0BE5  1303               	bcf	3,6	;RP1=0, select bank1
  5433  0BE6  1608               	bsf	8,4
  5434                           
  5435                           ;lcd(16).c: 51: TRISD5 = 1;
  5436  0BE7  1688               	bsf	8,5
  5437                           
  5438                           ;lcd(16).c: 52: TRISD6 = 1;
  5439  0BE8  1708               	bsf	8,6
  5440                           
  5441                           ;lcd(16).c: 53: TRISD7 = 1;
  5442  0BE9  1788               	bsf	8,7
  5443                           
  5444                           ;lcd(16).c: 55: RD2 = 1;
  5445  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0BEB  3021               	movlw	33
  5447  0BEC  1508               	bsf	8,2
  5448                           
  5449                           ;lcd(16).c: 56: RD1 = 0;
  5450  0BED  1088               	bcf	8,1
  5451                           
  5452                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5453  0BEE  00F2               	movwf	??_lcd_busy
  5454  0BEF                     u5797:	
  5455  0BEF  0BF2               	decfsz	??_lcd_busy,f
  5456  0BF0  2BEF               	goto	u5797
  5457  0BF1  2420               	call	PL33	;select bank 0
  5458                           
  5459                           ;lcd(16).c: 58: RD3 = 1;
  5460  0BF2  3021               	movlw	33
  5461  0BF3  1588               	bsf	8,3
  5462                           
  5463                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5464  0BF4  00F2               	movwf	??_lcd_busy
  5465  0BF5                     u5807:	
  5466  0BF5  0BF2               	decfsz	??_lcd_busy,f
  5467  0BF6  2BF5               	goto	u5807
  5468                           
  5469                           ;lcd(16).c: 61: busy = RD7;
  5470  0BF7  3000               	movlw	0
  5471  0BF8  2420               	call	PL33	;select bank 0
  5472  0BF9  1B88               	btfsc	8,7
  5473  0BFA  3001               	movlw	1
  5474  0BFB  00F3               	movwf	lcd_busy@busy
  5475  0BFC  3021               	movlw	33
  5476                           
  5477                           ;lcd(16).c: 63: RD3 = 0;
  5478  0BFD  1188               	bcf	8,3
  5479                           
  5480                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5481  0BFE  00F2               	movwf	??_lcd_busy
  5482  0BFF                     u5817:	
  5483  0BFF  0BF2               	decfsz	??_lcd_busy,f
  5484  0C00  2BFF               	goto	u5817
  5485  0C01  2420               	call	PL33	;select bank 0
  5486                           
  5487                           ;lcd(16).c: 65: RD3 = 1;
  5488  0C02  3021               	movlw	33
  5489  0C03  1588               	bsf	8,3
  5490                           
  5491                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5492  0C04  00F2               	movwf	??_lcd_busy
  5493  0C05                     u5827:	
  5494  0C05  0BF2               	decfsz	??_lcd_busy,f
  5495  0C06  2C05               	goto	u5827
  5496  0C07  2420               	call	PL33	;select bank 0
  5497                           
  5498                           ;lcd(16).c: 67: RD3 = 0;
  5499  0C08  1188               	bcf	8,3
  5500                           
  5501                           ;lcd(16).c: 70: return busy;
  5502  0C09  0873               	movf	lcd_busy@busy,w
  5503  0C0A  0008               	return
  5504  0C0B                     __end_of_lcd_busy:	
  5505  0C0B                     __ptext838:	
  5506 ;; =============== function _isdigit ends ============
  5507                           
  5508                           
  5509 ;; *************** function _isprint *****************
  5510 ;; Defined at:
  5511 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  c               1    wreg     unsigned char 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  c               1    3[COMMON] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;		None               void
  5518 ;; Registers used:
  5519 ;;		wreg, status,2, status,0
  5520 ;; Tracked objects:
  5521 ;;		On entry : 60/0
  5522 ;;		On exit  : 60/0
  5523 ;;		Unchanged: FFF9F/0
  5524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5525 ;;      Params:         0       0       0       0       0
  5526 ;;      Locals:         2       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0
  5528 ;;      Totals:         2       0       0       0       0
  5529 ;;Total ram usage:        2 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_lcd_putc
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538  0C0B                     _isprint:	
  5539                           
  5540                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5541                           ;isprint@c stored from wreg
  5542  0C0B  00F3               	movwf	isprint@c
  5543  0C0C  307F               	movlw	127
  5544  0C0D  01F2               	clrf	_isprint$3679
  5545  0C0E  0273               	subwf	isprint@c,w
  5546  0C0F  1803               	skipnc
  5547  0C10  2C17               	goto	l7591
  5548  0C11  3020               	movlw	32
  5549  0C12  0273               	subwf	isprint@c,w
  5550  0C13  1C03               	skipc
  5551  0C14  2C17               	goto	l7591
  5552  0C15  01F2               	clrf	_isprint$3679
  5553  0C16  0AF2               	incf	_isprint$3679,f
  5554  0C17                     l7591:	
  5555  0C17  0C72               	rrf	_isprint$3679,w
  5556  0C18  0008               	return
  5557  0C19                     __end_of_isprint:	
  5558  0C19                     PL29:	
  5559  0C19  00F3               	movwf	??_lcd_put_byte
  5560  0C1A  0CF3               	rrf	??_lcd_put_byte,f
  5561  0C1B  0C73               	rrf	??_lcd_put_byte,w
  5562  0C1C  3901               	andlw	1
  5563  0C1D  00F4               	movwf	??_lcd_put_byte+1
  5564  0C1E  0C74               	rrf	??_lcd_put_byte+1,w
  5565  0C1F  0008               	return
  5566  0C20                     PL33:	
  5567  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  5568  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  5569  0C22  0008               	return
  5570                           
  5571                           	psect	text822
  5572  0C23                     __ptext822:	
  5573 ;; =============== function _lcd_put_byte ends ============
  5574                           
  5575                           
  5576 ;; *************** function _pwm_10bit *****************
  5577 ;; Defined at:
  5578 ;;		line 88 in file "D:\TTVXL\Project TTVXL\BT02week15ttvxl\BT02week15ttvxl.c"
  5579 ;; Parameters:    Size  Location     Type
  5580 ;;  pwm             2    8[BANK0 ] int 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;		None               void
  5585 ;; Registers used:
  5586 ;;		wreg, status,2, status,0, pclath, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 60/0
  5589 ;;		On exit  : 60/0
  5590 ;;		Unchanged: FFF9F/0
  5591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5592 ;;      Params:         0       2       0       0       0
  5593 ;;      Locals:         0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0
  5595 ;;      Totals:         0       2       0       0       0
  5596 ;;Total ram usage:        2 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; Hardware stack levels required when called:    2
  5599 ;; This function calls:
  5600 ;;		___awdiv
  5601 ;; This function is called by:
  5602 ;;		_main
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605  0C23                     _pwm_10bit:	
  5606                           
  5607                           ;BT02week15ttvxl.c: 89: CCPR1L = pwm/4;
  5608                           
  5609                           ; Regs used in _pwm_10bit: [wreg+status,2+status,0+pclath+cstack]
  5610  0C23  3004               	movlw	4
  5611  0C24  00A0               	movwf	?___awdiv
  5612  0C25  01A1               	clrf	?___awdiv+1
  5613  0C26  0829               	movf	pwm_10bit@pwm+1,w
  5614  0C27  00A3               	movwf	?___awdiv+3
  5615  0C28  0828               	movf	pwm_10bit@pwm,w
  5616  0C29  00A2               	movwf	?___awdiv+2
  5617  0C2A  266A               	fcall	___awdiv
  5618  0C2B  0820               	movf	?___awdiv,w
  5619  0C2C  0095               	movwf	21	;volatile
  5620                           
  5621                           ;BT02week15ttvxl.c: 90: DC1B1 = 0; DC1B0 = 0;
  5622  0C2D  1297               	bcf	23,5
  5623  0C2E  1217               	bcf	23,4
  5624                           
  5625                           ;BT02week15ttvxl.c: 91: if((pwm & 2) == 1) DC1B1 = 1;
  5626  0C2F  0828               	movf	pwm_10bit@pwm,w
  5627  0C30  3902               	andlw	2
  5628  0C31  3A01               	xorlw	1
  5629  0C32  1903               	btfsc	3,2
  5630  0C33  1697               	bsf	23,5
  5631                           
  5632                           ;BT02week15ttvxl.c: 92: if((pwm & 1) == 1) DC1B0 = 1;
  5633  0C34  1828               	btfsc	pwm_10bit@pwm,0
  5634  0C35  1617               	bsf	23,4
  5635  0C36  0008               	return
  5636  0C37                     __end_of_pwm_10bit:	
  5637  0C37                     __ptext816:	
  5638 ;; =============== function ___lltoft ends ============
  5639                           
  5640                           
  5641 ;; *************** function ___awtoft *****************
  5642 ;; Defined at:
  5643 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  c               2    0[BANK0 ] int 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;  sign            1    3[BANK0 ] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  3    0[BANK0 ] float 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0, pclath, cstack
  5652 ;; Tracked objects:
  5653 ;;		On entry : 60/0
  5654 ;;		On exit  : 60/0
  5655 ;;		Unchanged: FFF9F/0
  5656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5657 ;;      Params:         0       3       0       0       0
  5658 ;;      Locals:         0       1       0       0       0
  5659 ;;      Temps:          0       0       0       0       0
  5660 ;;      Totals:         0       4       0       0       0
  5661 ;;Total ram usage:        4 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    2
  5664 ;; This function calls:
  5665 ;;		___ftpack
  5666 ;; This function is called by:
  5667 ;;		_main
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670  0C37                     ___awtoft:	
  5671                           
  5672                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5673  0C37  01A3               	clrf	___awtoft@sign
  5674  0C38  1FA1               	btfss	___awtoft@c+1,7
  5675  0C39  2C41               	goto	l8007
  5676  0C3A  09A0               	comf	___awtoft@c,f
  5677  0C3B  09A1               	comf	___awtoft@c+1,f
  5678  0C3C  0AA0               	incf	___awtoft@c,f
  5679  0C3D  1903               	skipnz
  5680  0C3E  0AA1               	incf	___awtoft@c+1,f
  5681  0C3F  01A3               	clrf	___awtoft@sign
  5682  0C40  0AA3               	incf	___awtoft@sign,f
  5683  0C41                     l8007:	
  5684  0C41  0820               	movf	___awtoft@c,w
  5685  0C42  00F2               	movwf	?___ftpack
  5686  0C43  0821               	movf	___awtoft@c+1,w
  5687  0C44  00F3               	movwf	?___ftpack+1
  5688  0C45  308E               	movlw	142
  5689  0C46  01F4               	clrf	?___ftpack+2
  5690  0C47  00F5               	movwf	?___ftpack+3
  5691  0C48  0823               	movf	___awtoft@sign,w
  5692  0C49  00F6               	movwf	?___ftpack+4
  5693  0C4A  2769               	fcall	___ftpack
  5694  0C4B  0872               	movf	?___ftpack,w
  5695  0C4C  00A0               	movwf	?___awtoft
  5696  0C4D  0873               	movf	?___ftpack+1,w
  5697  0C4E  00A1               	movwf	?___awtoft+1
  5698  0C4F  0874               	movf	?___ftpack+2,w
  5699  0C50  00A2               	movwf	?___awtoft+2
  5700  0C51  0008               	return
  5701  0C52                     __end_of___awtoft:	
  5702  0C52                     __ptext815:	
  5703 ;; =============== function _lcd_init ends ============
  5704                           
  5705                           
  5706 ;; *************** function ___lltoft *****************
  5707 ;; Defined at:
  5708 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  c               4    0[BANK0 ] unsigned long 
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;  exp             1    4[BANK0 ] unsigned char 
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  3    0[BANK0 ] float 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0, pclath, cstack
  5717 ;; Tracked objects:
  5718 ;;		On entry : 60/0
  5719 ;;		On exit  : 60/0
  5720 ;;		Unchanged: FFF9F/0
  5721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5722 ;;      Params:         0       4       0       0       0
  5723 ;;      Locals:         0       1       0       0       0
  5724 ;;      Temps:          0       0       0       0       0
  5725 ;;      Totals:         0       5       0       0       0
  5726 ;;Total ram usage:        5 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; Hardware stack levels required when called:    2
  5729 ;; This function calls:
  5730 ;;		___ftpack
  5731 ;; This function is called by:
  5732 ;;		_printf
  5733 ;; This function uses a non-reentrant model
  5734 ;;
  5735  0C52                     ___lltoft:	
  5736                           
  5737                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5738  0C52  308E               	movlw	142
  5739  0C53  00A4               	movwf	___lltoft@exp
  5740  0C54                     l8015:	
  5741  0C54  30FF               	movlw	255
  5742  0C55  0523               	andwf	___lltoft@c+3,w
  5743  0C56  1903               	btfsc	3,2
  5744  0C57  2C5F               	goto	l8017
  5745  0C58  1003               	clrc
  5746  0C59  0CA3               	rrf	___lltoft@c+3,f
  5747  0C5A  0CA2               	rrf	___lltoft@c+2,f
  5748  0C5B  0CA1               	rrf	___lltoft@c+1,f
  5749  0C5C  0CA0               	rrf	___lltoft@c,f
  5750  0C5D  0AA4               	incf	___lltoft@exp,f
  5751  0C5E  2C54               	goto	l8015
  5752  0C5F                     l8017:	
  5753  0C5F  0820               	movf	___lltoft@c,w
  5754  0C60  00F2               	movwf	?___ftpack
  5755  0C61  0821               	movf	___lltoft@c+1,w
  5756  0C62  00F3               	movwf	?___ftpack+1
  5757  0C63  0822               	movf	___lltoft@c+2,w
  5758  0C64  00F4               	movwf	?___ftpack+2
  5759  0C65  0824               	movf	___lltoft@exp,w
  5760  0C66  00F5               	movwf	?___ftpack+3
  5761  0C67  01F6               	clrf	?___ftpack+4
  5762  0C68  2769               	fcall	___ftpack
  5763  0C69  0872               	movf	?___ftpack,w
  5764  0C6A  00A0               	movwf	?___lltoft
  5765  0C6B  0873               	movf	?___ftpack+1,w
  5766  0C6C  00A1               	movwf	?___lltoft+1
  5767  0C6D  0874               	movf	?___ftpack+2,w
  5768  0C6E  00A2               	movwf	?___lltoft+2
  5769  0C6F  0008               	return
  5770  0C70                     __end_of___lltoft:	
  5771  0C70                     __ptext818:	
  5772 ;; =============== function ___ftmul ends ============
  5773                           
  5774                           
  5775 ;; *************** function ___ftdiv *****************
  5776 ;; Defined at:
  5777 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  f2              3    4[BANK0 ] float 
  5780 ;;  f1              3    7[BANK0 ] float 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  f3              3   14[BANK0 ] float 
  5783 ;;  sign            1   18[BANK0 ] unsigned char 
  5784 ;;  exp             1   17[BANK0 ] unsigned char 
  5785 ;;  cntr            1   13[BANK0 ] unsigned char 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  3    4[BANK0 ] float 
  5788 ;; Registers used:
  5789 ;;		wreg, status,2, status,0, pclath, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 60/0
  5792 ;;		On exit  : 60/0
  5793 ;;		Unchanged: FFF9F/0
  5794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5795 ;;      Params:         0       6       0       0       0
  5796 ;;      Locals:         0       6       0       0       0
  5797 ;;      Temps:          0       3       0       0       0
  5798 ;;      Totals:         0      15       0       0       0
  5799 ;;Total ram usage:       15 bytes
  5800 ;; Hardware stack levels used:    1
  5801 ;; Hardware stack levels required when called:    2
  5802 ;; This function calls:
  5803 ;;		___ftpack
  5804 ;; This function is called by:
  5805 ;;		_main
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808  0C70                     ___ftdiv:	
  5809                           
  5810                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5811  0C70  0827               	movf	___ftdiv@f1,w
  5812  0C71  00AA               	movwf	??___ftdiv
  5813  0C72  0828               	movf	___ftdiv@f1+1,w
  5814  0C73  00AB               	movwf	??___ftdiv+1
  5815  0C74  0829               	movf	___ftdiv@f1+2,w
  5816  0C75  00AC               	movwf	??___ftdiv+2
  5817  0C76  1003               	clrc
  5818  0C77  0D2B               	rlf	??___ftdiv+1,w
  5819  0C78  0D2C               	rlf	??___ftdiv+2,w
  5820  0C79  00B1               	movwf	___ftdiv@exp
  5821  0C7A  08B1               	movf	___ftdiv@exp,f
  5822  0C7B  1D03               	skipz
  5823  0C7C  2C81               	goto	l7905
  5824  0C7D  01A4               	clrf	?___ftdiv
  5825  0C7E  01A5               	clrf	?___ftdiv+1
  5826  0C7F  01A6               	clrf	?___ftdiv+2
  5827  0C80  0008               	return
  5828  0C81                     l7905:	
  5829  0C81  0824               	movf	___ftdiv@f2,w
  5830  0C82  00AA               	movwf	??___ftdiv
  5831  0C83  0825               	movf	___ftdiv@f2+1,w
  5832  0C84  00AB               	movwf	??___ftdiv+1
  5833  0C85  0826               	movf	___ftdiv@f2+2,w
  5834  0C86  00AC               	movwf	??___ftdiv+2
  5835  0C87  1003               	clrc
  5836  0C88  0D2B               	rlf	??___ftdiv+1,w
  5837  0C89  0D2C               	rlf	??___ftdiv+2,w
  5838  0C8A  00B2               	movwf	___ftdiv@sign
  5839  0C8B  08B2               	movf	___ftdiv@sign,f
  5840  0C8C  1D03               	skipz
  5841  0C8D  2C92               	goto	l3395
  5842  0C8E  01A4               	clrf	?___ftdiv
  5843  0C8F  01A5               	clrf	?___ftdiv+1
  5844  0C90  01A6               	clrf	?___ftdiv+2
  5845  0C91  0008               	return
  5846  0C92                     l3395:	
  5847  0C92  3089               	movlw	137
  5848  0C93  01AE               	clrf	___ftdiv@f3
  5849  0C94  01AF               	clrf	___ftdiv@f3+1
  5850  0C95  01B0               	clrf	___ftdiv@f3+2
  5851  0C96  0732               	addwf	___ftdiv@sign,w
  5852  0C97  00AA               	movwf	??___ftdiv
  5853  0C98  02B1               	subwf	___ftdiv@exp,f
  5854  0C99  0829               	movf	___ftdiv@f1+2,w
  5855  0C9A  00B2               	movwf	___ftdiv@sign
  5856  0C9B  0826               	movf	___ftdiv@f2+2,w
  5857  0C9C  06B2               	xorwf	___ftdiv@sign,f
  5858  0C9D  3080               	movlw	128
  5859  0C9E  05B2               	andwf	___ftdiv@sign,f
  5860  0C9F  3018               	movlw	24
  5861  0CA0  17A8               	bsf	___ftdiv@f1+1,7
  5862  0CA1  01A9               	clrf	___ftdiv@f1+2
  5863  0CA2  17A5               	bsf	___ftdiv@f2+1,7
  5864  0CA3  01A6               	clrf	___ftdiv@f2+2
  5865  0CA4  00AD               	movwf	___ftdiv@cntr
  5866  0CA5                     l7929:	
  5867  0CA5  1003               	clrc
  5868  0CA6  0DAE               	rlf	___ftdiv@f3,f
  5869  0CA7  0DAF               	rlf	___ftdiv@f3+1,f
  5870  0CA8  0DB0               	rlf	___ftdiv@f3+2,f
  5871  0CA9  0826               	movf	___ftdiv@f2+2,w
  5872  0CAA  0229               	subwf	___ftdiv@f1+2,w
  5873  0CAB  1D03               	skipz
  5874  0CAC  2CB3               	goto	u4855
  5875  0CAD  0825               	movf	___ftdiv@f2+1,w
  5876  0CAE  0228               	subwf	___ftdiv@f1+1,w
  5877  0CAF  1D03               	skipz
  5878  0CB0  2CB3               	goto	u4855
  5879  0CB1  0824               	movf	___ftdiv@f2,w
  5880  0CB2  0227               	subwf	___ftdiv@f1,w
  5881  0CB3                     u4855:	
  5882  0CB3  1C03               	skipc
  5883  0CB4  2CC1               	goto	L7
  5884  0CB5  0824               	movf	___ftdiv@f2,w
  5885  0CB6  02A7               	subwf	___ftdiv@f1,f
  5886  0CB7  0825               	movf	___ftdiv@f2+1,w
  5887  0CB8  1C03               	skipc
  5888  0CB9  0F25               	incfsz	___ftdiv@f2+1,w
  5889  0CBA  02A8               	subwf	___ftdiv@f1+1,f
  5890  0CBB  0826               	movf	___ftdiv@f2+2,w
  5891  0CBC  1C03               	skipc
  5892  0CBD  0A26               	incf	___ftdiv@f2+2,w
  5893  0CBE  02A9               	subwf	___ftdiv@f1+2,f
  5894  0CBF  142E               	bsf	___ftdiv@f3,0
  5895  0CC0  1003               	clrc
  5896  0CC1                     L7:	
  5897  0CC1  0DA7               	rlf	___ftdiv@f1,f
  5898  0CC2  0DA8               	rlf	___ftdiv@f1+1,f
  5899  0CC3  0DA9               	rlf	___ftdiv@f1+2,f
  5900  0CC4  0BAD               	decfsz	___ftdiv@cntr,f
  5901  0CC5  2CA5               	goto	l7929
  5902  0CC6  082E               	movf	___ftdiv@f3,w
  5903  0CC7  00F2               	movwf	?___ftpack
  5904  0CC8  082F               	movf	___ftdiv@f3+1,w
  5905  0CC9  00F3               	movwf	?___ftpack+1
  5906  0CCA  0830               	movf	___ftdiv@f3+2,w
  5907  0CCB  00F4               	movwf	?___ftpack+2
  5908  0CCC  0831               	movf	___ftdiv@exp,w
  5909  0CCD  00F5               	movwf	?___ftpack+3
  5910  0CCE  0832               	movf	___ftdiv@sign,w
  5911  0CCF  00F6               	movwf	?___ftpack+4
  5912  0CD0  2769               	fcall	___ftpack
  5913  0CD1  0872               	movf	?___ftpack,w
  5914  0CD2  00A4               	movwf	?___ftdiv
  5915  0CD3  0873               	movf	?___ftpack+1,w
  5916  0CD4  00A5               	movwf	?___ftdiv+1
  5917  0CD5  0874               	movf	?___ftpack+2,w
  5918  0CD6  00A6               	movwf	?___ftdiv+2
  5919  0CD7  0008               	return
  5920  0CD8                     __end_of___ftdiv:	
  5921  0CD8                     __ptext811:	
  5922 ;; =============== function ___ftsub ends ============
  5923                           
  5924                           
  5925 ;; *************** function _scale *****************
  5926 ;; Defined at:
  5927 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  scl             1    wreg     char 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  scl             1   46[BANK0 ] char 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  3   36[BANK0 ] char 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 60/20
  5938 ;;		On exit  : 60/0
  5939 ;;		Unchanged: FFF9F/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5941 ;;      Params:         0       3       0       0       0
  5942 ;;      Locals:         0       4       0       0       0
  5943 ;;      Temps:          0       4       0       0       0
  5944 ;;      Totals:         0      11       0       0       0
  5945 ;;Total ram usage:       11 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    3
  5948 ;; This function calls:
  5949 ;;		___awmod
  5950 ;;		___awdiv
  5951 ;;		___ftmul
  5952 ;;		___bmul
  5953 ;; This function is called by:
  5954 ;;		_printf
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957  0CD8                     _scale:	
  5958                           
  5959                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5960                           ;scale@scl stored from wreg
  5961  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  5962  0CD9  00CE               	movwf	scale@scl
  5963  0CDA  1FCE               	btfss	scale@scl,7
  5964  0CDB  2DA4               	goto	l8115
  5965  0CDC  09CE               	comf	scale@scl,f
  5966  0CDD  0ACE               	incf	scale@scl,f
  5967  0CDE  084E               	movf	scale@scl,w
  5968  0CDF  3A80               	xorlw	128
  5969  0CE0  3E12               	addlw	-238
  5970  0CE1  1C03               	skipc
  5971  0CE2  2D48               	goto	l8105
  5972  0CE3  300A               	movlw	10
  5973  0CE4  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5974  0CE7  26AF  120A  158A   	fcall	___awmod
  5975  0CEA  0873               	movf	?___awmod+1,w
  5976  0CEB  00A3               	movwf	?___awdiv+3
  5977  0CEC  0872               	movf	?___awmod,w
  5978  0CED  00A2               	movwf	?___awdiv+2
  5979  0CEE  266A  120A  158A   	fcall	___awdiv
  5980  0CF1  27E0               	fcall	PL22	;call to abstracted procedure
  5981  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5982  0CF3  0084               	movwf	4
  5983  0CF4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5984  0CF9  00B5               	movwf	?___ftmul
  5985  0CFA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5986  0CFF  00B6               	movwf	?___ftmul+1
  5987  0D00  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5988  0D05  27E8  120A  158A   	fcall	PL23	;call to abstracted procedure
  5989  0D08  1BA2               	btfsc	?___awdiv+2,7
  5990  0D09  03A3               	decf	?___awdiv+3,f
  5991  0D0A  266A  120A  158A   	fcall	___awdiv
  5992  0D0D  27AF               	fcall	PL9	;call to abstracted procedure
  5993  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  5994  0D0F  0084               	movwf	4
  5995  0D10  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5996  0D15  00B8               	movwf	?___ftmul+3
  5997  0D16  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5998  0D1B  00B9               	movwf	?___ftmul+4
  5999  0D1C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6000  0D21  00BA               	movwf	?___ftmul+5
  6001  0D22  26EC  120A  158A   	fcall	___ftmul
  6002  0D25  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  6003  0D28  1BF4               	btfsc	?___awmod+2,7
  6004  0D29  03F5               	decf	?___awmod+3,f
  6005  0D2A  26AF  120A  158A   	fcall	___awmod
  6006  0D2D  27A7               	fcall	PL8	;call to abstracted procedure
  6007  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  6008  0D2F  0084               	movwf	4
  6009  0D30  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6010  0D35  00B5               	movwf	?___ftmul
  6011  0D36  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6012  0D3B  00B6               	movwf	?___ftmul+1
  6013  0D3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6014  0D41  27F0  120A  158A   	fcall	PL24	;call to abstracted procedure
  6015  0D44  26EC  120A  158A   	fcall	___ftmul
  6016  0D47  2FC4               	ljmp	PL11	;call to abstracted procedure
  6017  0D48                     l8105:	
  6018  0D48  084E               	movf	scale@scl,w
  6019  0D49  3A80               	xorlw	128
  6020  0D4A  3E75               	addlw	-139
  6021  0D4B  1C03               	skipc
  6022  0D4C  2D8D               	goto	l8111
  6023  0D4D  300A               	movlw	10
  6024  0D4E  00F2               	movwf	?___awmod
  6025  0D4F  01F3               	clrf	?___awmod+1
  6026  0D50  084E               	movf	scale@scl,w
  6027  0D51  00F4               	movwf	?___awmod+2
  6028  0D52  01F5               	clrf	?___awmod+3
  6029  0D53  1BF4               	btfsc	?___awmod+2,7
  6030  0D54  03F5               	decf	?___awmod+3,f
  6031  0D55  26AF  120A  158A   	fcall	___awmod
  6032  0D58  27A7               	fcall	PL8	;call to abstracted procedure
  6033  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  6034  0D5A  0084               	movwf	4
  6035  0D5B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6036  0D60  00B5               	movwf	?___ftmul
  6037  0D61  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6038  0D66  00B6               	movwf	?___ftmul+1
  6039  0D67  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6040  0D6C  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  6041  0D6F  1BA2               	btfsc	?___awdiv+2,7
  6042  0D70  03A3               	decf	?___awdiv+3,f
  6043  0D71  266A  120A  158A   	fcall	___awdiv
  6044  0D74  27AF               	fcall	PL9	;call to abstracted procedure
  6045  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6046  0D76  0084               	movwf	4
  6047  0D77  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6048  0D7C  00B8               	movwf	?___ftmul+3
  6049  0D7D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6050  0D82  00B9               	movwf	?___ftmul+4
  6051  0D83  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6052  0D88  00BA               	movwf	?___ftmul+5
  6053  0D89  26EC  120A  158A   	fcall	___ftmul
  6054  0D8C  2FC4               	ljmp	PL11	;call to abstracted procedure
  6055  0D8D                     l8111:	
  6056  0D8D  3003               	movlw	3
  6057  0D8E  00F8               	movwf	?___bmul
  6058  0D8F  084E               	movf	scale@scl,w
  6059  0D90  275B               	fcall	___bmul
  6060  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  6061  0D92  0084               	movwf	4
  6062  0D93  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6063  0D98  00C4               	movwf	?_scale
  6064  0D99  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6065  0D9E  00C5               	movwf	?_scale+1
  6066  0D9F  160A  118A  2000   	fcall	stringdir
  6067  0DA2  00C6               	movwf	?_scale+2
  6068  0DA3  0008               	return
  6069  0DA4                     l8115:	
  6070  0DA4  084E               	movf	scale@scl,w
  6071  0DA5  3A80               	xorlw	128
  6072  0DA6  3E12               	addlw	-238
  6073  0DA7  1C03               	skipc
  6074  0DA8  2E0E               	goto	l8123
  6075  0DA9  300A               	movlw	10
  6076  0DAA  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  6077  0DAD  26AF  120A  158A   	fcall	___awmod
  6078  0DB0  0873               	movf	?___awmod+1,w
  6079  0DB1  00A3               	movwf	?___awdiv+3
  6080  0DB2  0872               	movf	?___awmod,w
  6081  0DB3  00A2               	movwf	?___awdiv+2
  6082  0DB4  266A  120A  158A   	fcall	___awdiv
  6083  0DB7  27E0               	fcall	PL22	;call to abstracted procedure
  6084  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  6085  0DB9  0084               	movwf	4
  6086  0DBA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6087  0DBF  00B5               	movwf	?___ftmul
  6088  0DC0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6089  0DC5  00B6               	movwf	?___ftmul+1
  6090  0DC6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6091  0DCB  27E8  120A  158A   	fcall	PL23	;call to abstracted procedure
  6092  0DCE  1BA2               	btfsc	?___awdiv+2,7
  6093  0DCF  03A3               	decf	?___awdiv+3,f
  6094  0DD0  266A  120A  158A   	fcall	___awdiv
  6095  0DD3  27AF               	fcall	PL9	;call to abstracted procedure
  6096  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6097  0DD5  0084               	movwf	4
  6098  0DD6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6099  0DDB  00B8               	movwf	?___ftmul+3
  6100  0DDC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6101  0DE1  00B9               	movwf	?___ftmul+4
  6102  0DE2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6103  0DE7  00BA               	movwf	?___ftmul+5
  6104  0DE8  26EC  120A  158A   	fcall	___ftmul
  6105  0DEB  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  6106  0DEE  1BF4               	btfsc	?___awmod+2,7
  6107  0DEF  03F5               	decf	?___awmod+3,f
  6108  0DF0  26AF  120A  158A   	fcall	___awmod
  6109  0DF3  27A7               	fcall	PL8	;call to abstracted procedure
  6110  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  6111  0DF5  0084               	movwf	4
  6112  0DF6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6113  0DFB  00B5               	movwf	?___ftmul
  6114  0DFC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6115  0E01  00B6               	movwf	?___ftmul+1
  6116  0E02  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6117  0E07  27F0  120A  158A   	fcall	PL24	;call to abstracted procedure
  6118  0E0A  26EC  120A  158A   	fcall	___ftmul
  6119  0E0D  2FC4               	ljmp	PL11	;call to abstracted procedure
  6120  0E0E                     l8123:	
  6121  0E0E  084E               	movf	scale@scl,w
  6122  0E0F  3A80               	xorlw	128
  6123  0E10  3E75               	addlw	-139
  6124  0E11  1C03               	skipc
  6125  0E12  2E53               	goto	l8129
  6126  0E13  300A               	movlw	10
  6127  0E14  00F2               	movwf	?___awmod
  6128  0E15  01F3               	clrf	?___awmod+1
  6129  0E16  084E               	movf	scale@scl,w
  6130  0E17  00F4               	movwf	?___awmod+2
  6131  0E18  01F5               	clrf	?___awmod+3
  6132  0E19  1BF4               	btfsc	?___awmod+2,7
  6133  0E1A  03F5               	decf	?___awmod+3,f
  6134  0E1B  26AF  120A  158A   	fcall	___awmod
  6135  0E1E  27A7               	fcall	PL8	;call to abstracted procedure
  6136  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  6137  0E20  0084               	movwf	4
  6138  0E21  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6139  0E26  00B5               	movwf	?___ftmul
  6140  0E27  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6141  0E2C  00B6               	movwf	?___ftmul+1
  6142  0E2D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6143  0E32  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  6144  0E35  1BA2               	btfsc	?___awdiv+2,7
  6145  0E36  03A3               	decf	?___awdiv+3,f
  6146  0E37  266A  120A  158A   	fcall	___awdiv
  6147  0E3A  27AF               	fcall	PL9	;call to abstracted procedure
  6148  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  6149  0E3C  0084               	movwf	4
  6150  0E3D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6151  0E42  00B8               	movwf	?___ftmul+3
  6152  0E43  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6153  0E48  00B9               	movwf	?___ftmul+4
  6154  0E49  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6155  0E4E  00BA               	movwf	?___ftmul+5
  6156  0E4F  26EC  120A  158A   	fcall	___ftmul
  6157  0E52  2FC4               	ljmp	PL11	;call to abstracted procedure
  6158  0E53                     l8129:	
  6159  0E53  3003               	movlw	3
  6160  0E54  00F8               	movwf	?___bmul
  6161  0E55  084E               	movf	scale@scl,w
  6162  0E56  275B               	fcall	___bmul
  6163  0E57  3E28               	addlw	low (__powers_-__stringbase)
  6164  0E58  0084               	movwf	4
  6165  0E59  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6166  0E5E  00C4               	movwf	?_scale
  6167  0E5F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6168  0E64  00C5               	movwf	?_scale+1
  6169  0E65  160A  118A  2000   	fcall	stringdir
  6170  0E68  00C6               	movwf	?_scale+2
  6171  0E69  0008               	return
  6172  0E6A                     __end_of_scale:	
  6173  0E6A                     __ptext828:	
  6174 ;; =============== function ___llmod ends ============
  6175                           
  6176                           
  6177 ;; *************** function ___awdiv *****************
  6178 ;; Defined at:
  6179 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  divisor         2    0[BANK0 ] int 
  6182 ;;  dividend        2    2[BANK0 ] int 
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;  quotient        2    6[BANK0 ] int 
  6185 ;;  sign            1    5[BANK0 ] unsigned char 
  6186 ;;  counter         1    4[BANK0 ] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  2    0[BANK0 ] int 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0
  6191 ;; Tracked objects:
  6192 ;;		On entry : 60/0
  6193 ;;		On exit  : 60/0
  6194 ;;		Unchanged: FFF9F/0
  6195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6196 ;;      Params:         0       4       0       0       0
  6197 ;;      Locals:         0       4       0       0       0
  6198 ;;      Temps:          0       0       0       0       0
  6199 ;;      Totals:         0       8       0       0       0
  6200 ;;Total ram usage:        8 bytes
  6201 ;; Hardware stack levels used:    1
  6202 ;; Hardware stack levels required when called:    1
  6203 ;; This function calls:
  6204 ;;		Nothing
  6205 ;; This function is called by:
  6206 ;;		_pwm_10bit
  6207 ;;		_scale
  6208 ;;		_printf
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211  0E6A                     ___awdiv:	
  6212                           
  6213                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6214  0E6A  01A5               	clrf	___awdiv@sign
  6215  0E6B  1FA1               	btfss	___awdiv@divisor+1,7
  6216  0E6C  2E74               	goto	l7703
  6217  0E6D  09A0               	comf	___awdiv@divisor,f
  6218  0E6E  09A1               	comf	___awdiv@divisor+1,f
  6219  0E6F  0AA0               	incf	___awdiv@divisor,f
  6220  0E70  1903               	skipnz
  6221  0E71  0AA1               	incf	___awdiv@divisor+1,f
  6222  0E72  01A5               	clrf	___awdiv@sign
  6223  0E73  0AA5               	incf	___awdiv@sign,f
  6224  0E74                     l7703:	
  6225  0E74  1FA3               	btfss	___awdiv@dividend+1,7
  6226  0E75  2E7D               	goto	l7709
  6227  0E76  09A2               	comf	___awdiv@dividend,f
  6228  0E77  09A3               	comf	___awdiv@dividend+1,f
  6229  0E78  0AA2               	incf	___awdiv@dividend,f
  6230  0E79  1903               	skipnz
  6231  0E7A  0AA3               	incf	___awdiv@dividend+1,f
  6232  0E7B  3001               	movlw	1
  6233  0E7C  06A5               	xorwf	___awdiv@sign,f
  6234  0E7D                     l7709:	
  6235  0E7D  01A6               	clrf	___awdiv@quotient
  6236  0E7E  01A7               	clrf	___awdiv@quotient+1
  6237  0E7F  0821               	movf	___awdiv@divisor+1,w
  6238  0E80  0420               	iorwf	___awdiv@divisor,w
  6239  0E81  1903               	skipnz
  6240  0E82  2EA2               	goto	l7731
  6241  0E83  01A4               	clrf	___awdiv@counter
  6242  0E84                     L16:	
  6243  0E84  0AA4               	incf	___awdiv@counter,f
  6244  0E85  1BA1               	btfsc	___awdiv@divisor+1,7
  6245  0E86  2E8B               	goto	l7719
  6246  0E87  1003               	clrc
  6247  0E88  0DA0               	rlf	___awdiv@divisor,f
  6248  0E89  0DA1               	rlf	___awdiv@divisor+1,f
  6249  0E8A  2E84               	goto	L16
  6250  0E8B                     l7719:	
  6251  0E8B  1003               	clrc
  6252  0E8C  0DA6               	rlf	___awdiv@quotient,f
  6253  0E8D  0DA7               	rlf	___awdiv@quotient+1,f
  6254  0E8E  0821               	movf	___awdiv@divisor+1,w
  6255  0E8F  0223               	subwf	___awdiv@dividend+1,w
  6256  0E90  1D03               	skipz
  6257  0E91  2E94               	goto	u4375
  6258  0E92  0820               	movf	___awdiv@divisor,w
  6259  0E93  0222               	subwf	___awdiv@dividend,w
  6260  0E94                     u4375:	
  6261  0E94  1C03               	skipc
  6262  0E95  2E9E               	goto	L17
  6263  0E96  0820               	movf	___awdiv@divisor,w
  6264  0E97  02A2               	subwf	___awdiv@dividend,f
  6265  0E98  0821               	movf	___awdiv@divisor+1,w
  6266  0E99  1C03               	skipc
  6267  0E9A  03A3               	decf	___awdiv@dividend+1,f
  6268  0E9B  02A3               	subwf	___awdiv@dividend+1,f
  6269  0E9C  1426               	bsf	___awdiv@quotient,0
  6270  0E9D  1003               	clrc
  6271  0E9E                     L17:	
  6272  0E9E  0CA1               	rrf	___awdiv@divisor+1,f
  6273  0E9F  0CA0               	rrf	___awdiv@divisor,f
  6274  0EA0  0BA4               	decfsz	___awdiv@counter,f
  6275  0EA1  2E8B               	goto	l7719
  6276  0EA2                     l7731:	
  6277  0EA2  0825               	movf	___awdiv@sign,w
  6278  0EA3  1903               	btfsc	3,2
  6279  0EA4  2EAA               	goto	l7735
  6280  0EA5  09A6               	comf	___awdiv@quotient,f
  6281  0EA6  09A7               	comf	___awdiv@quotient+1,f
  6282  0EA7  0AA6               	incf	___awdiv@quotient,f
  6283  0EA8  1903               	skipnz
  6284  0EA9  0AA7               	incf	___awdiv@quotient+1,f
  6285  0EAA                     l7735:	
  6286  0EAA  0827               	movf	___awdiv@quotient+1,w
  6287  0EAB  00A1               	movwf	?___awdiv+1
  6288  0EAC  0826               	movf	___awdiv@quotient,w
  6289  0EAD  00A0               	movwf	?___awdiv
  6290  0EAE  0008               	return
  6291  0EAF                     __end_of___awdiv:	
  6292  0EAF                     __ptext823:	
  6293 ;; =============== function _pwm_10bit ends ============
  6294                           
  6295                           
  6296 ;; *************** function ___awmod *****************
  6297 ;; Defined at:
  6298 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  divisor         2    2[COMMON] int 
  6301 ;;  dividend        2    4[COMMON] int 
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;  sign            1    7[COMMON] unsigned char 
  6304 ;;  counter         1    6[COMMON] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  2    2[COMMON] int 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0
  6309 ;; Tracked objects:
  6310 ;;		On entry : 60/0
  6311 ;;		On exit  : 60/0
  6312 ;;		Unchanged: FFF9F/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6314 ;;      Params:         4       0       0       0       0
  6315 ;;      Locals:         2       0       0       0       0
  6316 ;;      Temps:          0       0       0       0       0
  6317 ;;      Totals:         6       0       0       0       0
  6318 ;;Total ram usage:        6 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    1
  6321 ;; This function calls:
  6322 ;;		Nothing
  6323 ;; This function is called by:
  6324 ;;		_scale
  6325 ;; This function uses a non-reentrant model
  6326 ;;
  6327  0EAF                     ___awmod:	
  6328                           
  6329                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6330  0EAF  01F7               	clrf	___awmod@sign
  6331  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  6332  0EB1  2EB9               	goto	l6645
  6333  0EB2  09F4               	comf	___awmod@dividend,f
  6334  0EB3  09F5               	comf	___awmod@dividend+1,f
  6335  0EB4  0AF4               	incf	___awmod@dividend,f
  6336  0EB5  1903               	skipnz
  6337  0EB6  0AF5               	incf	___awmod@dividend+1,f
  6338  0EB7  01F7               	clrf	___awmod@sign
  6339  0EB8  0AF7               	incf	___awmod@sign,f
  6340  0EB9                     l6645:	
  6341  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  6342  0EBA  2EC0               	goto	l6649
  6343  0EBB  09F2               	comf	___awmod@divisor,f
  6344  0EBC  09F3               	comf	___awmod@divisor+1,f
  6345  0EBD  0AF2               	incf	___awmod@divisor,f
  6346  0EBE  1903               	skipnz
  6347  0EBF  0AF3               	incf	___awmod@divisor+1,f
  6348  0EC0                     l6649:	
  6349  0EC0  0873               	movf	___awmod@divisor+1,w
  6350  0EC1  0472               	iorwf	___awmod@divisor,w
  6351  0EC2  1903               	skipnz
  6352  0EC3  2EDF               	goto	l6665
  6353  0EC4  01F6               	clrf	___awmod@counter
  6354  0EC5                     L9:	
  6355  0EC5  0AF6               	incf	___awmod@counter,f
  6356  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  6357  0EC7  2ECC               	goto	l6657
  6358  0EC8  1003               	clrc
  6359  0EC9  0DF2               	rlf	___awmod@divisor,f
  6360  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  6361  0ECB  2EC5               	goto	L9
  6362  0ECC                     l6657:	
  6363  0ECC  0873               	movf	___awmod@divisor+1,w
  6364  0ECD  0275               	subwf	___awmod@dividend+1,w
  6365  0ECE  1D03               	skipz
  6366  0ECF  2ED2               	goto	u2795
  6367  0ED0  0872               	movf	___awmod@divisor,w
  6368  0ED1  0274               	subwf	___awmod@dividend,w
  6369  0ED2                     u2795:	
  6370  0ED2  1C03               	skipc
  6371  0ED3  2EDB               	goto	L10
  6372  0ED4  0872               	movf	___awmod@divisor,w
  6373  0ED5  02F4               	subwf	___awmod@dividend,f
  6374  0ED6  0873               	movf	___awmod@divisor+1,w
  6375  0ED7  1C03               	skipc
  6376  0ED8  03F5               	decf	___awmod@dividend+1,f
  6377  0ED9  02F5               	subwf	___awmod@dividend+1,f
  6378  0EDA  1003               	clrc
  6379  0EDB                     L10:	
  6380  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  6381  0EDC  0CF2               	rrf	___awmod@divisor,f
  6382  0EDD  0BF6               	decfsz	___awmod@counter,f
  6383  0EDE  2ECC               	goto	l6657
  6384  0EDF                     l6665:	
  6385  0EDF  0877               	movf	___awmod@sign,w
  6386  0EE0  1903               	btfsc	3,2
  6387  0EE1  2EE7               	goto	l6669
  6388  0EE2  09F4               	comf	___awmod@dividend,f
  6389  0EE3  09F5               	comf	___awmod@dividend+1,f
  6390  0EE4  0AF4               	incf	___awmod@dividend,f
  6391  0EE5  1903               	skipnz
  6392  0EE6  0AF5               	incf	___awmod@dividend+1,f
  6393  0EE7                     l6669:	
  6394  0EE7  0875               	movf	___awmod@dividend+1,w
  6395  0EE8  00F3               	movwf	?___awmod+1
  6396  0EE9  0874               	movf	___awmod@dividend,w
  6397  0EEA  00F2               	movwf	?___awmod
  6398  0EEB  0008               	return
  6399  0EEC                     __end_of___awmod:	
  6400  0EEC                     __ptext817:	
  6401 ;; =============== function ___awtoft ends ============
  6402                           
  6403                           
  6404 ;; *************** function ___ftmul *****************
  6405 ;; Defined at:
  6406 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  f1              3   21[BANK0 ] float 
  6409 ;;  f2              3   24[BANK0 ] float 
  6410 ;; Auto vars:     Size  Location     Type
  6411 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  6412 ;;  sign            1   35[BANK0 ] unsigned char 
  6413 ;;  cntr            1   34[BANK0 ] unsigned char 
  6414 ;;  exp             1   30[BANK0 ] unsigned char 
  6415 ;; Return value:  Size  Location     Type
  6416 ;;                  3   21[BANK0 ] float 
  6417 ;; Registers used:
  6418 ;;		wreg, status,2, status,0, pclath, cstack
  6419 ;; Tracked objects:
  6420 ;;		On entry : 60/0
  6421 ;;		On exit  : 60/0
  6422 ;;		Unchanged: FFF9F/0
  6423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6424 ;;      Params:         0       6       0       0       0
  6425 ;;      Locals:         0       6       0       0       0
  6426 ;;      Temps:          0       3       0       0       0
  6427 ;;      Totals:         0      15       0       0       0
  6428 ;;Total ram usage:       15 bytes
  6429 ;; Hardware stack levels used:    1
  6430 ;; Hardware stack levels required when called:    2
  6431 ;; This function calls:
  6432 ;;		___ftpack
  6433 ;; This function is called by:
  6434 ;;		_main
  6435 ;;		_fround
  6436 ;;		_scale
  6437 ;;		_printf
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440  0EEC                     ___ftmul:	
  6441                           
  6442                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6443  0EEC  0835               	movf	___ftmul@f1,w
  6444  0EED  00BB               	movwf	??___ftmul
  6445  0EEE  0836               	movf	___ftmul@f1+1,w
  6446  0EEF  00BC               	movwf	??___ftmul+1
  6447  0EF0  0837               	movf	___ftmul@f1+2,w
  6448  0EF1  00BD               	movwf	??___ftmul+2
  6449  0EF2  1003               	clrc
  6450  0EF3  0D3C               	rlf	??___ftmul+1,w
  6451  0EF4  0D3D               	rlf	??___ftmul+2,w
  6452  0EF5  00BE               	movwf	___ftmul@exp
  6453  0EF6  08BE               	movf	___ftmul@exp,f
  6454  0EF7  1D03               	skipz
  6455  0EF8  2EFD               	goto	l7949
  6456  0EF9  01B5               	clrf	?___ftmul
  6457  0EFA  01B6               	clrf	?___ftmul+1
  6458  0EFB  01B7               	clrf	?___ftmul+2
  6459  0EFC  0008               	return
  6460  0EFD                     l7949:	
  6461  0EFD  0838               	movf	___ftmul@f2,w
  6462  0EFE  00BB               	movwf	??___ftmul
  6463  0EFF  0839               	movf	___ftmul@f2+1,w
  6464  0F00  00BC               	movwf	??___ftmul+1
  6465  0F01  083A               	movf	___ftmul@f2+2,w
  6466  0F02  00BD               	movwf	??___ftmul+2
  6467  0F03  1003               	clrc
  6468  0F04  0D3C               	rlf	??___ftmul+1,w
  6469  0F05  0D3D               	rlf	??___ftmul+2,w
  6470  0F06  00C3               	movwf	___ftmul@sign
  6471  0F07  08C3               	movf	___ftmul@sign,f
  6472  0F08  1D03               	skipz
  6473  0F09  2F0E               	goto	l7955
  6474  0F0A  01B5               	clrf	?___ftmul
  6475  0F0B  01B6               	clrf	?___ftmul+1
  6476  0F0C  01B7               	clrf	?___ftmul+2
  6477  0F0D  0008               	return
  6478  0F0E                     l7955:	
  6479  0F0E  0843               	movf	___ftmul@sign,w
  6480  0F0F  3E7B               	addlw	123
  6481  0F10  07BE               	addwf	___ftmul@exp,f
  6482  0F11  0837               	movf	___ftmul@f1+2,w
  6483  0F12  00C3               	movwf	___ftmul@sign
  6484  0F13  083A               	movf	___ftmul@f2+2,w
  6485  0F14  06C3               	xorwf	___ftmul@sign,f
  6486  0F15  3080               	movlw	128
  6487  0F16  05C3               	andwf	___ftmul@sign,f
  6488  0F17  3007               	movlw	7
  6489  0F18  17B6               	bsf	___ftmul@f1+1,7
  6490  0F19  17B9               	bsf	___ftmul@f2+1,7
  6491  0F1A  01BA               	clrf	___ftmul@f2+2
  6492  0F1B  01BF               	clrf	___ftmul@f3_as_product
  6493  0F1C  01C0               	clrf	___ftmul@f3_as_product+1
  6494  0F1D  01C1               	clrf	___ftmul@f3_as_product+2
  6495  0F1E  00C2               	movwf	___ftmul@cntr
  6496  0F1F                     l7973:	
  6497  0F1F  1C35               	btfss	___ftmul@f1,0
  6498  0F20  2F29               	goto	l7977
  6499  0F21  0838               	movf	___ftmul@f2,w
  6500  0F22  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6501  0F25  1803               	skipnc
  6502  0F26  0A3A               	incf	___ftmul@f2+2,w
  6503  0F27  1D03               	btfss	3,2
  6504  0F28  07C1               	addwf	___ftmul@f3_as_product+2,f
  6505  0F29                     l7977:	
  6506  0F29  1003               	clrc
  6507  0F2A  0CB7               	rrf	___ftmul@f1+2,f
  6508  0F2B  0CB6               	rrf	___ftmul@f1+1,f
  6509  0F2C  0CB5               	rrf	___ftmul@f1,f
  6510  0F2D  1003               	clrc
  6511  0F2E  0DB8               	rlf	___ftmul@f2,f
  6512  0F2F  0DB9               	rlf	___ftmul@f2+1,f
  6513  0F30  0DBA               	rlf	___ftmul@f2+2,f
  6514  0F31  0BC2               	decfsz	___ftmul@cntr,f
  6515  0F32  2F1F               	goto	l7973
  6516  0F33  3009               	movlw	9
  6517  0F34  00C2               	movwf	___ftmul@cntr
  6518  0F35                     l7985:	
  6519  0F35  1C35               	btfss	___ftmul@f1,0
  6520  0F36  2F3F               	goto	l7989
  6521  0F37  0838               	movf	___ftmul@f2,w
  6522  0F38  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6523  0F3B  1803               	skipnc
  6524  0F3C  0A3A               	incf	___ftmul@f2+2,w
  6525  0F3D  1D03               	btfss	3,2
  6526  0F3E  07C1               	addwf	___ftmul@f3_as_product+2,f
  6527  0F3F                     l7989:	
  6528  0F3F  1003               	clrc
  6529  0F40  0CB7               	rrf	___ftmul@f1+2,f
  6530  0F41  0CB6               	rrf	___ftmul@f1+1,f
  6531  0F42  0CB5               	rrf	___ftmul@f1,f
  6532  0F43  1003               	clrc
  6533  0F44  0CC1               	rrf	___ftmul@f3_as_product+2,f
  6534  0F45  0CC0               	rrf	___ftmul@f3_as_product+1,f
  6535  0F46  0CBF               	rrf	___ftmul@f3_as_product,f
  6536  0F47  0BC2               	decfsz	___ftmul@cntr,f
  6537  0F48  2F35               	goto	l7985
  6538  0F49  083F               	movf	___ftmul@f3_as_product,w
  6539  0F4A  00F2               	movwf	?___ftpack
  6540  0F4B  0840               	movf	___ftmul@f3_as_product+1,w
  6541  0F4C  00F3               	movwf	?___ftpack+1
  6542  0F4D  0841               	movf	___ftmul@f3_as_product+2,w
  6543  0F4E  00F4               	movwf	?___ftpack+2
  6544  0F4F  083E               	movf	___ftmul@exp,w
  6545  0F50  00F5               	movwf	?___ftpack+3
  6546  0F51  0843               	movf	___ftmul@sign,w
  6547  0F52  00F6               	movwf	?___ftpack+4
  6548  0F53  2769               	fcall	___ftpack
  6549  0F54  0872               	movf	?___ftpack,w
  6550  0F55  00B5               	movwf	?___ftmul
  6551  0F56  0873               	movf	?___ftpack+1,w
  6552  0F57  00B6               	movwf	?___ftmul+1
  6553  0F58  0874               	movf	?___ftpack+2,w
  6554  0F59  00B7               	movwf	?___ftmul+2
  6555  0F5A  0008               	return
  6556  0F5B                     __end_of___ftmul:	
  6557  0F5B                     __ptext834:	
  6558 ;; =============== function ___wmul ends ============
  6559                           
  6560                           
  6561 ;; *************** function ___bmul *****************
  6562 ;; Defined at:
  6563 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;  multiplier      1    wreg     unsigned char 
  6566 ;;  multiplicand    1    8[COMMON] unsigned char 
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6569 ;;  product         1    3[BANK0 ] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      unsigned char 
  6572 ;; Registers used:
  6573 ;;		wreg, status,2, status,0
  6574 ;; Tracked objects:
  6575 ;;		On entry : 60/0
  6576 ;;		On exit  : 60/0
  6577 ;;		Unchanged: FFF9F/0
  6578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6579 ;;      Params:         1       0       0       0       0
  6580 ;;      Locals:         0       2       0       0       0
  6581 ;;      Temps:          0       0       0       0       0
  6582 ;;      Totals:         1       2       0       0       0
  6583 ;;Total ram usage:        3 bytes
  6584 ;; Hardware stack levels used:    1
  6585 ;; Hardware stack levels required when called:    1
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_fround
  6590 ;;		_scale
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593  0F5B                     ___bmul:	
  6594                           
  6595                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6596                           ;___bmul@multiplier stored from wreg
  6597  0F5B  00A4               	movwf	___bmul@multiplier
  6598  0F5C  01A3               	clrf	___bmul@product
  6599  0F5D                     l6381:	
  6600  0F5D  0878               	movf	___bmul@multiplicand,w
  6601  0F5E  1824               	btfsc	___bmul@multiplier,0
  6602  0F5F  07A3               	addwf	___bmul@product,f
  6603  0F60  1003               	clrc
  6604  0F61  0DF8               	rlf	___bmul@multiplicand,f
  6605  0F62  1003               	clrc
  6606  0F63  0CA4               	rrf	___bmul@multiplier,f
  6607  0F64  08A4               	movf	___bmul@multiplier,f
  6608  0F65  1D03               	skipz
  6609  0F66  2F5D               	goto	l6381
  6610  0F67  0823               	movf	___bmul@product,w
  6611  0F68  0008               	return
  6612  0F69                     __end_of___bmul:	
  6613  0F69                     __ptext830:	
  6614 ;; =============== function ___fttol ends ============
  6615                           
  6616                           
  6617 ;; *************** function ___ftpack *****************
  6618 ;; Defined at:
  6619 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  arg             3    2[COMMON] unsigned um
  6622 ;;  exp             1    5[COMMON] unsigned char 
  6623 ;;  sign            1    6[COMMON] unsigned char 
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;		None
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  3    2[COMMON] float 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0
  6630 ;; Tracked objects:
  6631 ;;		On entry : 60/0
  6632 ;;		On exit  : 60/0
  6633 ;;		Unchanged: FFF9F/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6635 ;;      Params:         5       0       0       0       0
  6636 ;;      Locals:         0       0       0       0       0
  6637 ;;      Temps:          3       0       0       0       0
  6638 ;;      Totals:         8       0       0       0       0
  6639 ;;Total ram usage:        8 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:    1
  6642 ;; This function calls:
  6643 ;;		Nothing
  6644 ;; This function is called by:
  6645 ;;		___ftadd
  6646 ;;		___ftdiv
  6647 ;;		___ftmul
  6648 ;;		___awtoft
  6649 ;;		___lltoft
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652  0F69                     ___ftpack:	
  6653                           
  6654                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6655  0F69  0875               	movf	___ftpack@exp,w
  6656  0F6A  1903               	btfsc	3,2
  6657  0F6B  2F71               	goto	l7671
  6658  0F6C  0874               	movf	___ftpack@arg+2,w
  6659  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6660  0F6E  0472               	iorwf	___ftpack@arg,w
  6661  0F6F  1D03               	skipz
  6662  0F70  2F7A               	goto	l7677
  6663  0F71                     l7671:	
  6664  0F71  01F2               	clrf	?___ftpack
  6665  0F72  01F3               	clrf	?___ftpack+1
  6666  0F73  01F4               	clrf	?___ftpack+2
  6667  0F74  0008               	return
  6668  0F75                     l7675:	
  6669  0F75  0AF5               	incf	___ftpack@exp,f
  6670  0F76  1003               	clrc
  6671  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6672  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6673  0F79  0CF2               	rrf	___ftpack@arg,f
  6674  0F7A                     l7677:	
  6675  0F7A  30FE               	movlw	254
  6676  0F7B  0574               	andwf	___ftpack@arg+2,w
  6677  0F7C  1903               	btfsc	3,2
  6678  0F7D  2F89               	goto	l7681
  6679  0F7E  2F75               	goto	l7675
  6680  0F7F                     l7679:	
  6681  0F7F  0AF5               	incf	___ftpack@exp,f
  6682  0F80  0AF2               	incf	___ftpack@arg,f
  6683  0F81  1903               	skipnz
  6684  0F82  0AF3               	incf	___ftpack@arg+1,f
  6685  0F83  1903               	skipnz
  6686  0F84  0AF4               	incf	___ftpack@arg+2,f
  6687  0F85  1003               	clrc
  6688  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6689  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6690  0F88  0CF2               	rrf	___ftpack@arg,f
  6691  0F89                     l7681:	
  6692  0F89  30FF               	movlw	255
  6693  0F8A  0574               	andwf	___ftpack@arg+2,w
  6694  0F8B  1903               	btfsc	3,2
  6695  0F8C  2F93               	goto	l7685
  6696  0F8D  2F7F               	goto	l7679
  6697  0F8E                     l7683:	
  6698  0F8E  03F5               	decf	___ftpack@exp,f
  6699  0F8F  1003               	clrc
  6700  0F90  0DF2               	rlf	___ftpack@arg,f
  6701  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6702  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6703  0F93                     l7685:	
  6704  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6705  0F94  2F8E               	goto	l7683
  6706  0F95  1C75               	btfss	___ftpack@exp,0
  6707  0F96  13F3               	bcf	___ftpack@arg+1,7
  6708  0F97  1003               	clrc
  6709  0F98  0CF5               	rrf	___ftpack@exp,f
  6710  0F99  0875               	movf	___ftpack@exp,w
  6711  0F9A  00F9               	movwf	??___ftpack+2
  6712  0F9B  01F8               	clrf	??___ftpack+1
  6713  0F9C  01F7               	clrf	??___ftpack
  6714  0F9D  0877               	movf	??___ftpack,w
  6715  0F9E  04F2               	iorwf	___ftpack@arg,f
  6716  0F9F  0878               	movf	??___ftpack+1,w
  6717  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6718  0FA1  0879               	movf	??___ftpack+2,w
  6719  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6720  0FA3  0876               	movf	___ftpack@sign,w
  6721  0FA4  1D03               	skipz
  6722  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6723  0FA6  0008               	return
  6724  0FA7                     __end_of___ftpack:	
  6725  0FA7                     PL8:	
  6726  0FA7  0872               	movf	?___awmod,w
  6727  0FA8  00C7               	movwf	??_scale
  6728  0FA9  0873               	movf	?___awmod+1,w
  6729  0FAA  00C8               	movwf	??_scale+1
  6730  0FAB  0847               	movf	??_scale,w
  6731  0FAC  0747               	addwf	??_scale,w
  6732  0FAD  0747               	addwf	??_scale,w
  6733  0FAE  0008               	return
  6734  0FAF                     PL9:	
  6735  0FAF  0820               	movf	?___awdiv,w
  6736  0FB0  00C9               	movwf	??_scale+2
  6737  0FB1  0821               	movf	?___awdiv+1,w
  6738  0FB2  00CA               	movwf	??_scale+3
  6739  0FB3  0849               	movf	??_scale+2,w
  6740  0FB4  0749               	addwf	??_scale+2,w
  6741  0FB5  0749               	addwf	??_scale+2,w
  6742  0FB6  0008               	return
  6743  0FB7                     PL10:	
  6744  0FB7  0835               	movf	?___ftmul,w
  6745  0FB8  00CB               	movwf	_scale$4118
  6746  0FB9  0836               	movf	?___ftmul+1,w
  6747  0FBA  00CC               	movwf	_scale$4118+1
  6748  0FBB  0837               	movf	?___ftmul+2,w
  6749  0FBC  00CD               	movwf	_scale$4118+2
  6750  0FBD  300A               	movlw	10
  6751  0FBE  00F2               	movwf	?___awmod
  6752  0FBF  01F3               	clrf	?___awmod+1
  6753  0FC0  084E               	movf	scale@scl,w
  6754  0FC1  00F4               	movwf	?___awmod+2
  6755  0FC2  01F5               	clrf	?___awmod+3
  6756  0FC3  0008               	return
  6757  0FC4                     PL11:	
  6758  0FC4  0835               	movf	?___ftmul,w
  6759  0FC5  00C4               	movwf	?_scale
  6760  0FC6  0836               	movf	?___ftmul+1,w
  6761  0FC7  00C5               	movwf	?_scale+1
  6762  0FC8  0837               	movf	?___ftmul+2,w
  6763  0FC9  00C6               	movwf	?_scale+2
  6764  0FCA  0008               	return
  6765  0FCB                     PL15:	
  6766  0FCB  00A0               	movwf	?___awdiv
  6767  0FCC  01A1               	clrf	?___awdiv+1
  6768  0FCD  084E               	movf	scale@scl,w
  6769  0FCE  00F4               	movwf	?___awmod+2
  6770  0FCF  01F5               	clrf	?___awmod+3
  6771  0FD0  1BF4               	btfsc	?___awmod+2,7
  6772  0FD1  03F5               	decf	?___awmod+3,f
  6773  0FD2  3064               	movlw	100
  6774  0FD3  00F2               	movwf	?___awmod
  6775  0FD4  01F3               	clrf	?___awmod+1
  6776  0FD5  0008               	return
  6777  0FD6                     PL19:	
  6778  0FD6  07BF               	addwf	___ftmul@f3_as_product,f
  6779  0FD7  0839               	movf	___ftmul@f2+1,w
  6780  0FD8  1103               	clrz
  6781  0FD9  1803               	skipnc
  6782  0FDA  0A39               	incf	___ftmul@f2+1,w
  6783  0FDB  1D03               	btfss	3,2
  6784  0FDC  07C0               	addwf	___ftmul@f3_as_product+1,f
  6785  0FDD  083A               	movf	___ftmul@f2+2,w
  6786  0FDE  1103               	clrz
  6787  0FDF  0008               	return
  6788  0FE0                     PL22:	
  6789  0FE0  0820               	movf	?___awdiv,w
  6790  0FE1  00C7               	movwf	??_scale
  6791  0FE2  0821               	movf	?___awdiv+1,w
  6792  0FE3  00C8               	movwf	??_scale+1
  6793  0FE4  0847               	movf	??_scale,w
  6794  0FE5  0747               	addwf	??_scale,w
  6795  0FE6  0747               	addwf	??_scale,w
  6796  0FE7  0008               	return
  6797  0FE8                     PL23:	
  6798  0FE8  00B7               	movwf	?___ftmul+2
  6799  0FE9  3064               	movlw	100
  6800  0FEA  00A0               	movwf	?___awdiv
  6801  0FEB  01A1               	clrf	?___awdiv+1
  6802  0FEC  084E               	movf	scale@scl,w
  6803  0FED  00A2               	movwf	?___awdiv+2
  6804  0FEE  01A3               	clrf	?___awdiv+3
  6805  0FEF  0008               	return
  6806  0FF0                     PL24:	
  6807  0FF0  00B7               	movwf	?___ftmul+2
  6808  0FF1  084B               	movf	_scale$4118,w
  6809  0FF2  00B8               	movwf	?___ftmul+3
  6810  0FF3  084C               	movf	_scale$4118+1,w
  6811  0FF4  00B9               	movwf	?___ftmul+4
  6812  0FF5  084D               	movf	_scale$4118+2,w
  6813  0FF6  00BA               	movwf	?___ftmul+5
  6814  0FF7  0008               	return
  6815  0FF8                     PL26:	
  6816  0FF8  00B7               	movwf	?___ftmul+2
  6817  0FF9  300A               	movlw	10
  6818  0FFA  00A0               	movwf	?___awdiv
  6819  0FFB  01A1               	clrf	?___awdiv+1
  6820  0FFC  084E               	movf	scale@scl,w
  6821  0FFD  00A2               	movwf	?___awdiv+2
  6822  0FFE  01A3               	clrf	?___awdiv+3
  6823  0FFF  0008               	return
  6824                           
  6825                           	psect	text835
  6826  165D                     __ptext835:	
  6827 ;; =============== function ___bmul ends ============
  6828                           
  6829                           
  6830 ;; *************** function __div_to_l_ *****************
  6831 ;; Defined at:
  6832 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  f1              3    2[COMMON] unsigned char 
  6835 ;;  f2              3    5[COMMON] unsigned char 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  quot            4    8[BANK0 ] unsigned long 
  6838 ;;  exp1            1   13[BANK0 ] unsigned char 
  6839 ;;  cntr            1   12[BANK0 ] unsigned char 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  4    2[COMMON] unsigned long 
  6842 ;; Registers used:
  6843 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 60/0
  6847 ;;		Unchanged: FFF9F/0
  6848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6849 ;;      Params:         6       0       0       0       0
  6850 ;;      Locals:         0       6       0       0       0
  6851 ;;      Temps:          0       8       0       0       0
  6852 ;;      Totals:         6      14       0       0       0
  6853 ;;Total ram usage:       20 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; Hardware stack levels required when called:    1
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_printf
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862  165D                     __div_to_l_:	
  6863                           
  6864                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6865  165D  3072               	movlw	low __div_to_l_@f1
  6866  165E  0084               	movwf	4
  6867  165F  0800               	movf	0,w
  6868  1660  1283               	bcf	3,5	;RP0=0, select bank0
  6869  1661  1303               	bcf	3,6	;RP1=0, select bank0
  6870  1662  00A0               	movwf	??__div_to_l_
  6871  1663  0A84               	incf	4,f
  6872  1664  0800               	movf	0,w
  6873  1665  00A1               	movwf	??__div_to_l_+1
  6874  1666  0A84               	incf	4,f
  6875  1667  0800               	movf	0,w
  6876  1668  00A2               	movwf	??__div_to_l_+2
  6877  1669  0A84               	incf	4,f
  6878  166A  0800               	movf	0,w
  6879  166B  00A3               	movwf	??__div_to_l_+3
  6880  166C  1003               	clrc
  6881  166D  0D22               	rlf	??__div_to_l_+2,w
  6882  166E  0D23               	rlf	??__div_to_l_+3,w
  6883  166F  00AD               	movwf	__div_to_l_@exp1
  6884  1670  08AD               	movf	__div_to_l_@exp1,f
  6885  1671  1D03               	skipz
  6886  1672  2E78               	goto	l6337
  6887  1673                     l6335:	
  6888  1673  01F2               	clrf	?__div_to_l_
  6889  1674  01F3               	clrf	?__div_to_l_+1
  6890  1675  01F4               	clrf	?__div_to_l_+2
  6891  1676  01F5               	clrf	?__div_to_l_+3
  6892  1677  0008               	return
  6893  1678                     l6337:	
  6894  1678  3075               	movlw	low __div_to_l_@f2
  6895  1679  271B  160A  118A   	fcall	PL3	;call to abstracted procedure
  6896  167C  1003               	clrc
  6897  167D  0D22               	rlf	??__div_to_l_+2,w
  6898  167E  0D23               	rlf	??__div_to_l_+3,w
  6899  167F  00AC               	movwf	__div_to_l_@cntr
  6900  1680  08AC               	movf	__div_to_l_@cntr,f
  6901  1681  1903               	btfsc	3,2
  6902  1682  2E73               	goto	l6335
  6903  1683  3072               	movlw	low __div_to_l_@f1
  6904  1684  0084               	movwf	4
  6905  1685  3080               	movlw	128
  6906  1686  0A84               	incf	4,f
  6907  1687  0A84               	incf	4,f
  6908  1688  0480               	iorwf	0,f
  6909  1689  3072               	movlw	low __div_to_l_@f1
  6910  168A  0A84               	incf	4,f
  6911  168B  0084               	movwf	4
  6912  168C  3075               	movlw	low __div_to_l_@f2
  6913  168D  0A84               	incf	4,f
  6914  168E  0A84               	incf	4,f
  6915  168F  0A84               	incf	4,f
  6916  1690  0180               	clrf	0
  6917  1691  0084               	movwf	4
  6918  1692  3080               	movlw	128
  6919  1693  0A84               	incf	4,f
  6920  1694  0A84               	incf	4,f
  6921  1695  0480               	iorwf	0,f
  6922  1696  3075               	movlw	low __div_to_l_@f2
  6923  1697  0A84               	incf	4,f
  6924  1698  0084               	movwf	4
  6925  1699  307F               	movlw	127
  6926  169A  0A84               	incf	4,f
  6927  169B  0A84               	incf	4,f
  6928  169C  0A84               	incf	4,f
  6929  169D  0180               	clrf	0
  6930  169E  01A8               	clrf	__div_to_l_@quot
  6931  169F  01A9               	clrf	__div_to_l_@quot+1
  6932  16A0  01AA               	clrf	__div_to_l_@quot+2
  6933  16A1  01AB               	clrf	__div_to_l_@quot+3
  6934  16A2  02AD               	subwf	__div_to_l_@exp1,f
  6935  16A3  30A0               	movlw	160
  6936  16A4  072C               	addwf	__div_to_l_@cntr,w
  6937  16A5  00A0               	movwf	??__div_to_l_
  6938  16A6  02AD               	subwf	__div_to_l_@exp1,f
  6939  16A7  3020               	movlw	32
  6940  16A8  00AC               	movwf	__div_to_l_@cntr
  6941  16A9                     l6351:	
  6942  16A9  3075               	movlw	low __div_to_l_@f2
  6943  16AA  1003               	clrc
  6944  16AB  0DA8               	rlf	__div_to_l_@quot,f
  6945  16AC  0DA9               	rlf	__div_to_l_@quot+1,f
  6946  16AD  0DAA               	rlf	__div_to_l_@quot+2,f
  6947  16AE  0DAB               	rlf	__div_to_l_@quot+3,f
  6948  16AF  271B  160A  118A   	fcall	PL3	;call to abstracted procedure
  6949  16B2  3072               	movlw	low __div_to_l_@f1
  6950  16B3  0084               	movwf	4
  6951  16B4  0800               	movf	0,w
  6952  16B5  00A4               	movwf	??__div_to_l_+4
  6953  16B6  0A84               	incf	4,f
  6954  16B7  0800               	movf	0,w
  6955  16B8  00A5               	movwf	??__div_to_l_+5
  6956  16B9  0A84               	incf	4,f
  6957  16BA  0800               	movf	0,w
  6958  16BB  00A6               	movwf	??__div_to_l_+6
  6959  16BC  0A84               	incf	4,f
  6960  16BD  0800               	movf	0,w
  6961  16BE  00A7               	movwf	??__div_to_l_+7
  6962  16BF  0823               	movf	??__div_to_l_+3,w
  6963  16C0  0227               	subwf	??__div_to_l_+7,w
  6964  16C1  1D03               	skipz
  6965  16C2  2ECD               	goto	u2235
  6966  16C3  0822               	movf	??__div_to_l_+2,w
  6967  16C4  0226               	subwf	??__div_to_l_+6,w
  6968  16C5  1D03               	skipz
  6969  16C6  2ECD               	goto	u2235
  6970  16C7  0821               	movf	??__div_to_l_+1,w
  6971  16C8  0225               	subwf	??__div_to_l_+5,w
  6972  16C9  1D03               	skipz
  6973  16CA  2ECD               	goto	u2235
  6974  16CB  0820               	movf	??__div_to_l_,w
  6975  16CC  0224               	subwf	??__div_to_l_+4,w
  6976  16CD                     u2235:	
  6977  16CD  1C03               	skipc
  6978  16CE  2EE9               	goto	l3595
  6979  16CF  3075               	movlw	low __div_to_l_@f2
  6980  16D0  271B  160A  118A   	fcall	PL3	;call to abstracted procedure
  6981  16D3  3072               	movlw	low __div_to_l_@f1
  6982  16D4  0084               	movwf	4
  6983  16D5  0820               	movf	??__div_to_l_,w
  6984  16D6  0280               	subwf	0,f
  6985  16D7  0A84               	incf	4,f
  6986  16D8  0821               	movf	??__div_to_l_+1,w
  6987  16D9  1C03               	skipc
  6988  16DA  0F21               	incfsz	??__div_to_l_+1,w
  6989  16DB  0280               	subwf	0,f
  6990  16DC  0A84               	incf	4,f
  6991  16DD  0822               	movf	??__div_to_l_+2,w
  6992  16DE  1C03               	skipc
  6993  16DF  0F22               	incfsz	??__div_to_l_+2,w
  6994  16E0  0280               	subwf	0,f
  6995  16E1  0A84               	incf	4,f
  6996  16E2  0823               	movf	??__div_to_l_+3,w
  6997  16E3  1C03               	skipc
  6998  16E4  0A23               	incf	??__div_to_l_+3,w
  6999  16E5  0280               	subwf	0,f
  7000  16E6  3003               	movlw	3
  7001  16E7  0284               	subwf	4,f
  7002  16E8  1428               	bsf	__div_to_l_@quot,0
  7003  16E9                     l3595:	
  7004  16E9  3072               	movlw	low __div_to_l_@f1
  7005  16EA  0084               	movwf	4
  7006  16EB  1003               	clrc
  7007  16EC  0D80               	rlf	0,f
  7008  16ED  0A84               	incf	4,f
  7009  16EE  0D80               	rlf	0,f
  7010  16EF  0A84               	incf	4,f
  7011  16F0  0D80               	rlf	0,f
  7012  16F1  0A84               	incf	4,f
  7013  16F2  0D80               	rlf	0,f
  7014  16F3  0BAC               	decfsz	__div_to_l_@cntr,f
  7015  16F4  2EA9               	goto	l6351
  7016  16F5  1FAD               	btfss	__div_to_l_@exp1,7
  7017  16F6  2F04               	goto	l6369
  7018  16F7  082D               	movf	__div_to_l_@exp1,w
  7019  16F8  3A80               	xorlw	128
  7020  16F9  3E9F               	addlw	159
  7021  16FA  1C03               	btfss	3,0
  7022  16FB  2E73               	goto	l6335
  7023  16FC                     l6365:	
  7024  16FC  1003               	clrc
  7025  16FD  0CAB               	rrf	__div_to_l_@quot+3,f
  7026  16FE  0CAA               	rrf	__div_to_l_@quot+2,f
  7027  16FF  0CA9               	rrf	__div_to_l_@quot+1,f
  7028  1700  0CA8               	rrf	__div_to_l_@quot,f
  7029  1701  0FAD               	incfsz	__div_to_l_@exp1,f
  7030  1702  2EFC               	goto	l6365
  7031  1703  2F12               	goto	l6375
  7032  1704                     l6369:	
  7033  1704  3020               	movlw	32
  7034  1705  022D               	subwf	__div_to_l_@exp1,w
  7035  1706  1803               	btfsc	3,0
  7036  1707  2E73               	goto	l6335
  7037  1708                     l3603:	
  7038  1708  08AD               	movf	__div_to_l_@exp1,f
  7039  1709  1903               	btfsc	3,2
  7040  170A  2F12               	goto	l6375
  7041  170B  1003               	clrc
  7042  170C  0DA8               	rlf	__div_to_l_@quot,f
  7043  170D  0DA9               	rlf	__div_to_l_@quot+1,f
  7044  170E  0DAA               	rlf	__div_to_l_@quot+2,f
  7045  170F  0DAB               	rlf	__div_to_l_@quot+3,f
  7046  1710  03AD               	decf	__div_to_l_@exp1,f
  7047  1711  2F08               	goto	l3603
  7048  1712                     l6375:	
  7049  1712  082B               	movf	__div_to_l_@quot+3,w
  7050  1713  00F5               	movwf	?__div_to_l_+3
  7051  1714  082A               	movf	__div_to_l_@quot+2,w
  7052  1715  00F4               	movwf	?__div_to_l_+2
  7053  1716  0829               	movf	__div_to_l_@quot+1,w
  7054  1717  00F3               	movwf	?__div_to_l_+1
  7055  1718  0828               	movf	__div_to_l_@quot,w
  7056  1719  00F2               	movwf	?__div_to_l_
  7057  171A  0008               	return
  7058  171B                     __end_of__div_to_l_:	
  7059  171B                     PL3:	
  7060  171B  0084               	movwf	4
  7061  171C  0800               	movf	0,w
  7062  171D  00A0               	movwf	??__div_to_l_
  7063  171E  0A84               	incf	4,f
  7064  171F  0800               	movf	0,w
  7065  1720  00A1               	movwf	??__div_to_l_+1
  7066  1721  0A84               	incf	4,f
  7067  1722  0800               	movf	0,w
  7068  1723  00A2               	movwf	??__div_to_l_+2
  7069  1724  0A84               	incf	4,f
  7070  1725  0800               	movf	0,w
  7071  1726  00A3               	movwf	??__div_to_l_+3
  7072  1727  0008               	return
  7073                           
  7074                           	psect	text839
  7075  07B4                     __ptext839:	
  7076 ;; =============== function _isprint ends ============
  7077                           
  7078                           
  7079 ;; *************** function _ngat *****************
  7080 ;; Defined at:
  7081 ;;		line 68 in file "D:\TTVXL\Project TTVXL\BT02week15ttvxl\BT02week15ttvxl.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;		None
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;		None
  7086 ;; Return value:  Size  Location     Type
  7087 ;;		None               void
  7088 ;; Registers used:
  7089 ;;		wreg, status,2, status,0
  7090 ;; Tracked objects:
  7091 ;;		On entry : 0/0
  7092 ;;		On exit  : 0/0
  7093 ;;		Unchanged: FFF9F/0
  7094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7095 ;;      Params:         0       0       0       0       0
  7096 ;;      Locals:         0       0       0       0       0
  7097 ;;      Temps:          2       0       0       0       0
  7098 ;;      Totals:         2       0       0       0       0
  7099 ;;Total ram usage:        2 bytes
  7100 ;; Hardware stack levels used:    1
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		Interrupt level 1
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107  07B4                     _ngat:	
  7108                           
  7109                           ;BT02week15ttvxl.c: 69: if(T0IF)
  7110  07B4  1D0B               	btfss	11,2
  7111  07B5  2FCB               	goto	L21
  7112                           
  7113                           ;BT02week15ttvxl.c: 70: { TMR0 = 6;
  7114  07B6  3006               	movlw	6
  7115  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  7116  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  7117  07B9  0081               	movwf	1	;volatile
  7118                           
  7119                           ;BT02week15ttvxl.c: 71: dem++;
  7120  07BA  0AFA               	incf	_dem,f
  7121  07BB  1903               	skipnz
  7122  07BC  0AFB               	incf	_dem+1,f
  7123                           
  7124                           ;BT02week15ttvxl.c: 72: if(dem == 250)
  7125  07BD  087A               	movf	_dem,w
  7126  07BE  3AFA               	xorlw	250
  7127  07BF  047B               	iorwf	_dem+1,w
  7128  07C0  1D03               	skipz
  7129  07C1  2FCA               	goto	i1l6259
  7130                           
  7131                           ;BT02week15ttvxl.c: 73: {
  7132                           ;BT02week15ttvxl.c: 74: dem = 0;
  7133  07C2  01FA               	clrf	_dem
  7134  07C3  01FB               	clrf	_dem+1
  7135                           
  7136                           ;BT02week15ttvxl.c: 75: xung = TMR1;
  7137  07C4  080F               	movf	15,w	;volatile
  7138  07C5  00E8               	movwf	_xung+1	;volatile
  7139  07C6  080E               	movf	14,w	;volatile
  7140  07C7  00E7               	movwf	_xung	;volatile
  7141                           
  7142                           ;BT02week15ttvxl.c: 76: TMR1 = 0;
  7143  07C8  018E               	clrf	14	;volatile
  7144  07C9  018F               	clrf	15	;volatile
  7145  07CA                     i1l6259:	
  7146                           
  7147                           ;BT02week15ttvxl.c: 77: }
  7148                           ;BT02week15ttvxl.c: 78: }
  7149                           ;BT02week15ttvxl.c: 79: T0IF = 0;
  7150  07CA  110B               	bcf	11,2
  7151  07CB                     L21:	
  7152  07CB  0871               	movf	??_ngat+1,w
  7153  07CC  008A               	movwf	10
  7154  07CD  0E70               	swapf	??_ngat^(0+-128),w
  7155  07CE  0083               	movwf	3
  7156  07CF  0EFE               	swapf	126,f
  7157  07D0  0E7E               	swapf	126,w
  7158  07D1  0009               	retfie
  7159  07D2                     __end_of_ngat:	
  7160                           
  7161                           	psect	intentry
  7162  0004                     __pintentry:	
  7163                           ; Regs used in _ngat: [wreg+status,2+status,0]
  7164                           
  7165  0004                     interrupt_function:	
  7166  007E                     saved_w	set	btemp
  7167  0004  00FE               	movwf	btemp
  7168  0005  0E03               	swapf	3,w
  7169  0006  00F0               	movwf	??_ngat
  7170  0007  080A               	movf	10,w
  7171  0008  00F1               	movwf	??_ngat+1
  7172  0009  120A  118A  2FB4   	ljmp	_ngat
  7173                           
  7174                           	psect	text840
  7175  0000                     __ptext840:	
  7176 ;; =============== function _ngat ends ============
  7177                           
  7178  007E                     btemp	set	126	;btemp
  7179  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 18 11:11:57 2022

                    _v 0062                      pc 0002         ___bmul@product 0023           ___awdiv@sign 0025  
                   fsr 0004    ___wmul@multiplicand 0074           ___ftadd@exp1 004F           ___ftadd@exp2 004E  
        ?_lcd_put_byte 0072           ___ftadd@sign 004D                    _GIE 005F                    _RD1 0041  
                  _RD2 0042                    _RE1 0049                    _RD3 0043                    _RD4 0044  
                  _RD5 0045                    _RD6 0046                    _RD7 0047                    _PS0 0408  
                  _PR2 0092                    _PS1 0409                    _PS2 040A                    _PSA 040B  
                  _dem 007A                    fsr0 0004                    indf 0000           ___awmod@sign 0077  
         ___ftdiv@cntr 002D           ___ftdiv@sign 0032                   l1063 0000                   l2124 0000  
                 l2221 00A1                   l2302 0563                   l2206 002D                   l2135 0000  
                 l2127 0000                   l3302 0000                   l2158 0000                   l2267 0379  
                 l3308 0000                   l3422 0635                   l3335 0A11                   l3344 0000  
                 l3338 0000                   l3442 0000                   l3603 1708                   l3523 0000  
                 l3292 0000                   l3366 17BA                   l3287 0000                   l3455 0000  
                 l3560 0704                   l3553 0000                   l3465 0000                   l3545 0000  
                 l3395 0C92                   l3484 0000                   l3388 0000                   l3469 0000  
                 l6401 05EC                   l8001 0000                   l3595 16E9                   l6403 0000  
                 l8011 0000                   l3596 0000                   l6333 0000                   l6405 0000  
                 l6501 0629                   l8005 0000                   l8021 0000                   l6351 16A9  
                 l6343 0000                   l6335 1673                   l6511 063F                   l6503 0000  
                 l8007 0C41                   l8015 0C54                   l8031 0000                   l8023 0000  
                 l8111 0D8D                   l6281 05E0                   l6273 0000                   l6353 0000  
                 l6345 0000                   l6337 1678                   l6441 0000                   l6513 0000  
                 l6505 0631                   l6601 0000                   l8017 0C5F                   l8041 0B1D  
                 l8033 0B05                   l8025 0000                   l8105 0D48                   l6275 0000  
                 l6347 0000                   l6443 0000                   l6435 0000                   l6515 064D  
                 l6603 0000                   l6611 0000                   l8027 0000                   l8123 0E0E  
                 l8115 0DA4                   l8211 00C9                   l8203 00A3                   l6365 16FC  
                 l6357 0000                   l6349 0000                   l6381 0F5D                   l6437 0000  
                 l6621 066B                   l6613 0000                   l8053 0B41                   l8045 0B29  
                 l8037 0B11                   l8029 0000                   l8061 0000                   l8133 0000  
                 l8141 0A6C                   l8301 0000                   l8221 00F5                   l8213 0000  
                 l8205 00B9                   l6375 1712                   l6367 0000                   l6359 0000  
                 l6447 0A38                   l6439 0A24                   l6631 0000                   l6623 0000  
                 l8063 0A59                   l8071 0000                   l8135 0000                   l8151 0A89  
                 l8143 0A72                   l8231 0000                   l8223 0000                   l8215 0000  
                 l6369 1704                   l6449 0000                   l6481 0000                   l6633 0696  
                 l8057 0B4D                   l8049 0B35                   l8065 0A5A                   l8081 098B  
                 l8129 0E53                   l8145 0A79                   l8401 04B3                   l8321 0000  
                 l8313 02E0                   l8305 02D5                   l8241 014A                   l8233 0000  
                 l7611 0000                   l7603 0000                   l6387 0000                   l6379 0000  
                 l6395 0000                   l6491 0000                   l6483 0605                   l6627 0000  
                 l6643 0000                   l8067 0000                   l8059 0000                   l8075 0000  
                 l8147 0A7D                   l8155 0A90                   l8139 0000                   l8331 033C  
                 l8315 0000                   l8323 02FE                   l8243 0000                   l8235 0000  
                 l8227 0000                   l8219 0000                   l8171 002F                   l7613 06CF  
                 l7605 0000                   l6389 0000                   l6397 05E4                   l6493 0000  
                 l6485 060A                   l7701 0000                   l6645 0EB9                   l6637 0000  
                 l8069 0A63                   l8085 0000                   l8093 0000                   l8157 0000  
                 l8421 04F9                   l8413 04EC                   l8317 02E9                   l8309 02DD  
                 l8245 0000                   l8237 0000                   l8229 0000                   l8253 0193  
                 l8181 0000                   l8173 003A                   l8165 0028                   l8501 0000  
                 l7631 0000                   l7623 0000                   l7615 0000                   l7607 0000  
                 l6495 0000                   l6487 0000                   l7711 0000                   l7703 0E74  
                 l6583 0000                   l6591 0000                   l6663 0000                   l6639 0000  
                 l8431 0000                   l8415 04EF                   l8407 04CD                   l8343 0364  
                 l8335 0000                   l8319 02F5                   l8183 006A                   l8167 0000  
                 l8159 0000                   l8503 0000                   l7633 0700                   l7609 0000  
                 l6489 0000                   l7721 0000                   l6657 0ECC                   l6665 0EDF  
                 l6649 0EC0                   l7801 0BCC                   l8089 09DF                   l8097 0000  
                 l8433 0519                   l8425 0000                   l8409 04D0                   l8361 0000  
                 l8353 0000                   l8345 0000                   l8337 0340                   l8329 0310  
                 l8281 0233                   l8265 01F2                   l8257 01C7                   l8249 0183  
                 l8193 0000                   l8177 0048                   l8441 0013                   l8521 08D1  
                 l8513 08A4                   l8505 0000                   l7619 0000                   l7643 0000  
                 l7731 0EA2                   l7707 0000                   l6595 05B7                   l6667 0000  
                 l7803 0000                   l7811 0000                   l8427 0508                   l8355 0406  
                 l8347 039B                   l8339 0355                   l8291 0278                   l8283 0000  
                 l8275 0000                   l8195 0078                   l8187 0000                   l8179 0000  
                 l8523 0000                   l8507 085D                   l8451 0000                   l8443 0000  
                 l7629 06F8                   l7661 0000                   l7653 0000                   l7645 0000  
                 l7733 0000                   l7725 0000                   l7709 0E7D                   l6669 0EE7  
                 l7805 0000                   l7813 0000                   l7821 0000                   l8429 050C  
                 l8373 0444                   l8365 0000                   l8285 0276                   l8277 0000  
                 l8269 0203                   l8357 0414                   l8189 0000                   l8197 009D  
                 l8525 0000                   l8517 08BC                   l8509 0000                   l8461 0000  
                 l8453 0000                   l8445 0000                   l7591 0C17                   l7583 0000  
                 l7639 070E                   l7647 0000                   l7663 0A1E                   l7671 0F71  
                 l7735 0EAA                   l7719 0E8B                   l6599 05C6                   l7815 0000  
                 l7807 0000                   l7823 0000                   l7911 0000                   l8439 0521  
                 l8391 048E                   l8367 0438                   l8359 0000                   l8279 0000  
                 l8199 0000                   l8527 0000                   l8471 0000                   l8463 0000  
                 l8455 0000                   l8447 0000                   l7585 0000                   l7657 0000  
                 l7649 0A0B                   l7681 0F89                   l7729 0000                   l7753 0000  
                 l7761 0000                   l7817 0000                   l7809 0000                   l7841 0000  
                 l7833 1768                   l7825 0000                   l7921 0000                   l7913 0000  
                 l7905 0C81                   l8385 0000                   l8297 0000                   l8529 0000  
                 l8481 0000                   l8473 0000                   l8465 0000                   l8457 0000  
                 l8449 0000                   l7595 0000                   l7691 0000                   l7683 0F8E  
                 l7675 0F75                   l7667 0000                   l7747 057A                   l7755 059F  
                 l7739 0000                   l7763 0000                   l7771 0000                   l7851 1785  
                 l7835 0000                   l7923 0000                   l7915 0000                   l8395 04A6  
                 l8387 047A                   l8379 0446                   l8299 02AC                   l8491 0000  
                 l8483 0000                   l8475 0000                   l8467 0000                   l8459 0000  
                 l7597 06AD                   l7693 0000                   l7685 0F93                   l7677 0F7A  
                 l7669 0000                   l7765 0000                   l7781 0000                   l7773 0000  
                 l7853 0000                   l7861 179E                   l7829 1761                   l7933 0000  
                 l7925 0000                   l7917 0000                   l8493 0000                   l8485 0000  
                 l8477 0000                   l8469 0000                   l7599 06B2                   l7679 0F7F  
                 l7695 0000                   l7759 0000                   l7791 0000                   l7783 0000  
                 l7775 0000                   l7871 17B6                   l7863 17A2                   l7847 0000  
                 l7839 1777                   l7927 0000                   l7919 0000                   l7943 0000  
                 l8495 0000                   l8487 0000                   l8479 0000                   l7689 0000  
                 l7697 0000                   l7793 0000                   l7785 0B79                   l7881 0000  
                 l7865 0000                   l7857 1794                   l7849 0000                   l7937 0000  
                 l7929 0CA5                   l7961 0000                   l8497 0000                   l8489 0000  
                 l7795 0000                   l7787 0B86                   l7779 0000                   l7891 0000  
                 l7883 17D0                   l7875 0000                   l7859 1799                   l7939 0000  
                 l7971 0000                   l7963 0000                   l7955 0F0E                   l8499 0000  
                 l7797 0BB4                   l7789 0B91                   l7893 0000                   l7885 0000  
                 l7877 17C5                   l7869 17B1                   l7981 0000                   l7973 0F1F  
                 l7965 0000                   l7957 0000                   l7949 0EFD                   l7799 0BBF  
                 l7895 17EC                   l7887 0000                   l7991 0000                   l7983 0000  
                 l7967 0000                   l7959 0000                   l7993 0000                   l7985 0F35  
                 l7977 0F29                   l7969 0000                   l7899 0000                   l7995 0000  
                 l7979 0000                   l7989 0F3F                   l7999 0000                   STR_1 1087  
                 STR_2 107C                   _T0IE 005D                   _T0IF 005A                   _T0CS 040D  
                 u2235 16CD                   u2490 0000                   u4155 06DE                   u4510 0B8F  
                 u2495 060E                   u2735 067E                   u4425 0588                   u5305 01D1  
                 u4610 0BD5                   u4530 0B9B                   u5250 0000                   _PEIE 005E  
                 u5405 02F2                   u4550 0BB2                   u4470 0B77                   u4375 0E94  
                 u5415 0307                   u5335 01F0                   u5255 0108                   u4624 0BD7  
                 u4544 0B9D                   u4570 0BBD                   u4490 0B84                   u2795 0ED2  
                 u5355 02A5                   u5605 04DE                   u5525 0473                   u5445 0349  
                 u4590 0BCA                   u5455 035F                   u5295 019C                   u5545 0488  
                 u5555 049E                   u5807 0BF5                   u4855 0CB3                   u5817 0BFF  
                 u5737 0AAB                   u5827 0C05                   u5747 0ABE                   u5595 04C3  
                 u5837 0B62                   u5757 0AD1                   u5847 0B68                   u5767 0AE4  
                 u5857 0B9F                   u5777 0AF1                   u5867 0BA5                   u5787 0AFE  
                 u5877 0BD9                   u5797 0BEF                   u5887 0BDF                   _TMR0 0001  
                 _TMR1 000E                   _TMR2 0011                   _main 081F                   _ngat 07B4  
         ___ftpack@arg 0072           ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E  
                 _xung 0067                   start 000C      ___bmul@multiplier 0024           ___ftmul@cntr 0042  
         ___ftmul@sign 0043           ___fttol@exp1 0034           ___fttol@lval 0030         ??_lcd_put_byte 0073  
                _DC1B0 00BC                  _DC1B1 00BD                  ?_main 0070                  ?_ngat 0070  
      __end_of___awdiv 0EAF        __end_of___lbdiv 0A20        __end_of___ftadd 1800        __end_of___awmod 0EEC  
      __end_of___lbmod 0A3C        __end_of___ftdiv 0CD8        __end_of___ftneg 071F                  _ANSEL 0188  
      __end_of___lldiv 069F        __end_of___ftmul 0F5B        ___awdiv@divisor 0020        __end_of___llmod 05A8  
      __end_of___ftsub 173E        __end_of___fttol 0656        ___awdiv@counter 0024           ___lltoft@exp 0024  
        ___awtoft@sign 0023                  _scale 0CD8        __end_of_isdigit 05E2          ___ftpack@sign 0076  
                _pwm_t 0065                  _putch 0564        __end_of_isprint 0C19                  pclath 000A  
                status 0003                  wtemp0 007E        ___lbdiv@divisor 0077        ___lbdiv@counter 0021  
         __end_of_main 0900           __end_of_ngat 07D2          lcd_gotoxy@col 0078          lcd_gotoxy@row 0077  
               ??_main 007A          ___fttol@sign1 002F                 ??_ngat 0070   __size_of__tdiv_to_l_ 0078  
     ___llmod@dividend 0029                 ?_scale 0044                 _CCPR1L 0015       ___awdiv@dividend 0022  
     __end_of___awtoft 0C52                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lltoft 0C70                 i1l1060 0000                 _T1SYNC 0082                 i1l6251 0000  
               i1l6245 0000                 i1l6255 0000                 i1l6257 0000                 i1l6249 0000  
               i1l6259 07CA                 _TMR1GE 0086                 _TMR1CS 0081                 _TMR1ON 0080  
               _TMR2ON 0092                 _TRISC2 043A                 _TRISD1 0441                 _TRISE0 0448  
               _TRISD2 0442                 _TRISE1 0449                 _TRISD3 0443                 _TRISE2 044A  
               _TRISD4 0444                 _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447  
     __end_of_lcd_busy 0C0B       __end_of_lcd_init 0B54       __end_of_lcd_putc 0A99                 ___bmul 0F5B  
               ___ftge 05A8                 ___wmul 05E2              ??___awdiv 0078              ??___lbdiv 0078  
            ??___ftadd 004A              ??___awmod 0076              ??___lbmod 0073              ??___ftdiv 002A  
            ??___ftneg 0075              ??___lldiv 007A              ??___ftmul 003B              ??___llmod 007A  
            ??___ftsub 007A              ??___fttol 002C                 _fround 0900       ___awdiv@quotient 0026  
      ___awmod@divisor 0072        ___awmod@counter 0076                 _printf 000F          lcd_put_byte@b 0072  
___ftmul@f3_as_product 003F              ??_isdigit 0072                 saved_w 007E              ??_isprint 0072  
               putch@c 0021       ___lbdiv@dividend 0020        ___lbmod@divisor 0072        ___lbmod@counter 0075  
 __end_of_lcd_put_byte 0BE4             ___ftadd@f1 0044             ___ftadd@f2 0047             ___ftge@ff1 0072  
           ___ftge@ff2 0075             ___ftdiv@f1 0027             ___ftdiv@f2 0024             ___ftdiv@f3 002E  
           ___ftneg@f1 0072             ___awtoft@c 0020    ___bmul@multiplicand 0078             ___ftmul@f1 0035  
           ___ftmul@f2 0038             ___ftsub@f1 0053             ___ftsub@f2 0050             ___fttol@f1 0028  
       __pcstackCOMMON 0070             ___lltoft@c 0020          __end_of_scale 0E6A          __end_of_putch 056A  
     ___lbdiv@quotient 0022             __div_to_l_ 165D      lcd_gotoxy@address 0079        __div_to_l_@exp1 002D  
      __div_to_l_@cntr 002C                ??_scale 0047        __div_to_l_@quot 0028                ??_putch 007A  
           __pbssBANK0 0062          __div_to_l_@f1 0072          __div_to_l_@f2 0075             __pmaintext 081F  
              ?___bmul 0078                ?___ftge 0072                ?___wmul 0072             __pintentry 0004  
              _CCP1CON 0017     __size_of_pwm_10bit 0014                ?_fround 0050              ?___awtoft 0020  
            ?___ftpack 0072                ?_printf 005A              ?___lltoft 0020                _T1CKPS0 0084  
              _T1CKPS1 0085                _T2CKPS0 0090                _T2CKPS1 0091             _lcd_gotoxy 0A52  
            ?_lcd_busy 0070              ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4118 004B  
      __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0E6A                ___lbdiv 0A05  
              ___ftadd 173E                ___awmod 0EAF                ___lbmod 0A20                ___ftdiv 0C70  
              ___ftneg 0717                ___lldiv 0656        __size_of___wmul 0019                ___ftmul 0EEC  
              ___llmod 056A                ___ftsub 1728                ___fttol 05FB             ??___awtoft 007A  
           ??___ftpack 0077        __size_of_fround 0105             ??___lltoft 007A        __size_of_printf 0555  
          ?__div_to_l_ 0072                _dpowers 1054                _isdigit 05D4       ___awmod@dividend 0074  
              _isprint 0C0B  __size_of_lcd_put_byte 0090             ??_lcd_busy 0072             ??_lcd_init 0077  
           ??_lcd_putc 007A   end_of_initialization 07DB         lcd_put_byte@rs 0075      __end_of_pwm_10bit 0C37  
      ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8                printf@f 00A8  
       __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0020           _lcd_put_byte 0B54  
     ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076            printf@integ 00A5  
          ___ftdiv@exp 0031            printf@width 00B1    __size_of__div_to_l_ 00BE            ___ftmul@exp 003E  
       __end_of___bmul 0F69         __end_of___ftge 05D4         __end_of___wmul 05FB         __end_of_fround 0A05  
       __end_of_printf 0564    start_initialization 07D2    __end_of__tdiv_to_l_ 0717        ___llmod@divisor 0025  
      ___llmod@counter 002D               ??___bmul 0079               ??___ftge 0078    __size_of_lcd_gotoxy 0018  
             ??___wmul 0076               ??_fround 007A               ??_printf 005D             fround@prec 0059  
    __size_of___awtoft 001B      __size_of___ftpack 003E      __size_of___lltoft 001E            __pbssCOMMON 007A  
        __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3676 0072      __size_of_lcd_busy 0027  
    __size_of_lcd_init 00BB      __size_of_lcd_putc 002F               ?___awdiv 0020               ?___lbdiv 0077  
             ?___ftadd 0044               ?___awmod 0072              __ptext810 1728              __ptext811 0CD8  
             ?___lbmod 0072              __ptext820 0BE4              __ptext812 0900              __ptext821 0B54  
            __ptext813 0A52              __ptext830 0F69              __ptext822 0C23              __ptext814 0A99  
            __ptext831 0A20              __ptext823 0EAF              __ptext815 0C52              __ptext807 000F  
            __ptext840 0000              __ptext832 0A05              __ptext824 0656              __ptext816 0C37  
            __ptext808 0564              __ptext833 05E2              __ptext825 05A8              __ptext817 0EEC  
            __ptext809 0A6A              __ptext834 0F5B              __ptext826 0717              __ptext818 0C70  
            __ptext835 165D              __ptext827 056A              __ptext819 173E              __ptext836 069F  
            __ptext828 0E6A              __ptext837 05D4              __ptext829 05FB              __ptext838 0C0B  
            __ptext839 07B4               ?___ftdiv 0024               ?___ftneg 0072               ?___lldiv 0072  
             ?___ftmul 0035               ?___llmod 0025               ?___ftsub 0050              __npowers_ 1006  
             ?___fttol 0028              __pstrings 1000            __tdiv_to_l_ 069F           ??__div_to_l_ 0020  
             ?_isdigit 0070               ?_isprint 0070         __size_of_scale 0192         __size_of_putch 0006  
    interrupt_function 0004         ___wmul@product 0076              _pwm_10bit 0C23     __end_of__div_to_l_ 171B  
          __stringbase 1005      ___wmul@multiplier 0072             printf@_val 00A9             printf@flag 00AD  
           printf@fval 00B3             printf@prec 00B6              lcd_putc@c 0020           ??_lcd_gotoxy 0078  
         pwm_10bit@pwm 0028       lcd_put_byte@temp 0076           _isprint$3679 0072             ?_pwm_10bit 0028  
   __end_of_lcd_gotoxy 0A6A       __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2  
     __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftdiv 0068       __size_of___ftneg 0008  
     __size_of___lldiv 0049       __size_of___ftmul 006F       __size_of___llmod 003E       __size_of___ftsub 0016  
     __size_of___fttol 005B               ___awtoft 0C37               ___ftpack 0F69            _fround$4116 0056  
          _fround$4117 0053               ___lltoft 0C52       __size_of_isdigit 000E       __size_of_isprint 000E  
             __powers_ 102D               _lcd_busy 0BE4               _lcd_init 0A99               _lcd_putc 0A6A  
        __size_of_main 00E1          __size_of_ngat 001E              printf@exp 00AF               isdigit@c 0073  
             scale@scl 004E               intlevel1 0000       __tdiv_to_l_@exp1 0028       __tdiv_to_l_@cntr 0027  
     __tdiv_to_l_@quot 0023       ___lldiv@dividend 0076               isprint@c 0073            ??_pwm_10bit 0078  
            stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0072            _printf$3168 00A0  
     ___lldiv@quotient 0020               stringdir 1000               stringtab 1000  
