

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 18 00:48:47 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,delta=2
    12                           	psect	text401,local,class=CODE,delta=2
    13                           	psect	text403,local,class=CODE,delta=2
    14                           	psect	text409,local,class=CODE,delta=2
    15                           	psect	text417,local,class=CODE,delta=2
    16                           	psect	text418,local,class=CODE,delta=2
    17                           	psect	text419,local,class=CODE,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	functab,global,reloc=256,class=CODE,delta=2
    20                           	psect	pa_nodes,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  000A                     	;#
    23                           
    24                           	psect	config
    25  2007  E3C2               	dw	58306	;#
    26                           
    27                           	psect	strings
    28  0011                     __pstrings:	
    29  0011                     stringtab:	
    30                           ;	global	stringdir,stringtab,__stringbase
    31                           
    32                           
    33                           ;	String table - string pointers are 1 byte each
    34  0011  1BFF               	btfsc	btemp+1,7
    35  0012  281B               	ljmp	stringcode
    36  0013  1383               	bcf	3,7
    37  0014  187F               	btfsc	btemp+1,0
    38  0015  1783               	bsf	3,7
    39  0016  0800               	movf	0,w
    40  0017  0A84               	incf	4,f
    41  0018  1903               	skipnz
    42  0019  0AFF               	incf	btemp+1,f
    43  001A  0008               	return
    44  001B                     stringcode:	
    45  001B                     stringdir:	
    46  001B  3000               	movlw	high stringdir
    47  001C  008A               	movwf	10
    48  001D  0804               	movf	4,w
    49  001E  0A84               	incf	4,f
    50  001F  0782               	addwf	2,f
    51  0020                     __stringbase:	
    52  0020  3400               	retlw	0
    53  0021                     _dpowers:	
    54  0021  3401               	retlw	1
    55  0022  3400               	retlw	0
    56  0023  340A               	retlw	10
    57  0024  3400               	retlw	0
    58  0025  3464               	retlw	100
    59  0026  3400               	retlw	0
    60  0027  34E8               	retlw	232
    61  0028  3403               	retlw	3
    62  0029  3410               	retlw	16
    63  002A  3427               	retlw	39
    64  001A                     _RCREG	set	26
    65  0019                     _TXREG	set	25
    66  00C4                     _CREN	set	196
    67  005F                     _GIE	set	95
    68  005E                     _PEIE	set	94
    69  0065                     _RCIF	set	101
    70  0041                     _RD1	set	65
    71  0042                     _RD2	set	66
    72  0043                     _RD3	set	67
    73  0044                     _RD4	set	68
    74  0045                     _RD5	set	69
    75  0046                     _RD6	set	70
    76  0047                     _RD7	set	71
    77  00C6                     _RX9	set	198
    78  00C7                     _SPEN	set	199
    79  0064                     _TXIF	set	100
    80  0099                     _SPBRG	set	153
    81  009A                     _SPBRGH	set	154
    82  04C2                     _BRGH	set	1218
    83  0465                     _RCIE	set	1125
    84  04C4                     _SYNC	set	1220
    85  0441                     _TRISD1	set	1089
    86  0442                     _TRISD2	set	1090
    87  0443                     _TRISD3	set	1091
    88  0444                     _TRISD4	set	1092
    89  0445                     _TRISD5	set	1093
    90  0446                     _TRISD6	set	1094
    91  0447                     _TRISD7	set	1095
    92  04C6                     _TX9	set	1222
    93  04C5                     _TXEN	set	1221
    94  0188                     _ANSEL	set	392
    95  0189                     _ANSELH	set	393
    96  0C3B                     _BRG16	set	3131
    97  002B                     STR_1:	
    98  002B  344E               	retlw	78	;'N'
    99  002C  3475               	retlw	117	;'u'
   100  002D  346D               	retlw	109	;'m'
   101  002E  3462               	retlw	98	;'b'
   102  002F  3465               	retlw	101	;'e'
   103  0030  3472               	retlw	114	;'r'
   104  0031  3473               	retlw	115	;'s'
   105  0032  3420               	retlw	32	;' '
   106  0033  3469               	retlw	105	;'i'
   107  0034  3473               	retlw	115	;'s'
   108  0035  343A               	retlw	58	;':'
   109  0036  3420               	retlw	32	;' '
   110  0037  3400               	retlw	0
   111  0038                     STR_2:	
   112  0038  3420               	retlw	32	;' '
   113  0039  3425               	retlw	37	;'%'
   114  003A  3430               	retlw	48	;'0'
   115  003B  3435               	retlw	53	;'5'
   116  003C  3475               	retlw	117	;'u'
   117  003D  3420               	retlw	32	;' '
   118  003E  3400               	retlw	0
   119  003F                     STR_4:	
   120  003F  3420               	retlw	32	;' '
   121  0040  3420               	retlw	32	;' '
   122  0041  3400               	retlw	0
   123  0042                     STR_3:	
   124  0042  3425               	retlw	37	;'%'
   125  0043  3464               	retlw	100	;'d'
   126  0044  3400               	retlw	0
   127                           
   128                           	psect	cinit
   129  065D                     start_initialization:	
   130  065D  303A               	movlw	low __pbssBANK0
   131                           
   132                           ; Clear objects allocated to BANK0
   133  065E  1383               	bcf	3,7	;select IRP bank0
   134  065F  0084               	movwf	4
   135  0660  304B               	movlw	low (__pbssBANK0+17)
   136  0661  120A  118A  2668   	fcall	clear_ram
   137  0664                     end_of_initialization:	
   138                           ;End of C runtime variable initialization code
   139                           
   140  0664  0183               	clrf	3
   141  0665  120A  118A  2D95   	ljmp	_main	;jump to C main() function
   142                           
   143                           	psect	bssBANK0
   144  003A                     __pbssBANK0:	
   145  003A                     _i:	
   146  003A                     	ds	2
   147  003C                     _number_in:	
   148  003C                     	ds	2
   149  003E                     _number_out:	
   150  003E                     	ds	2
   151  0040                     _ket_qua:	
   152  0040                     	ds	6
   153  0046                     _rx_data:	
   154  0046                     	ds	5
   155                           
   156                           	psect	clrtext
   157  0668                     clear_ram:	
   158                           ;	Called with FSR containing the base address, and
   159                           ;	W with the last address+1
   160                           
   161  0668  0064               	clrwdt	;clear the watchdog before getting into this loop
   162  0669                     clrloop:	
   163  0669  0180               	clrf	0	;clear RAM location pointed to by FSR
   164  066A  0A84               	incf	4,f	;increment pointer
   165  066B  0604               	xorwf	4,w	;XOR with final address
   166  066C  1903               	btfsc	3,2	;have we reached the end yet?
   167  066D  3400               	retlw	0	;all done for this memory range, return
   168  066E  0604               	xorwf	4,w	;XOR again to restore value
   169  066F  2E69               	goto	clrloop	;do the next byte
   170                           
   171                           	psect	cstackCOMMON
   172  0070                     __pcstackCOMMON:	
   173  0070                     ?_lcd_init:	
   174  0070                     ?_tx_init:	
   175                           ; 0 bytes @ 0x0
   176                           
   177  0070                     ?_rx_init:	
   178                           ; 0 bytes @ 0x0
   179                           
   180  0070                     ?_lcd_putc:	
   181                           ; 0 bytes @ 0x0
   182                           
   183  0070                     ?_isprint:	
   184                           ; 0 bytes @ 0x0
   185                           
   186  0070                     ?_isdigit:	
   187                           ; 1 bit 
   188                           
   189  0070                     ?_main:	
   190                           ; 1 bit 
   191                           
   192  0070                     ?_send_char:	
   193                           ; 0 bytes @ 0x0
   194                           
   195  0070                     ?_ngat:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ??_ngat:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ?_lcd_busy:	
   202                           ; 0 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206  0070                     	ds	3
   207  0073                     ??_tx_init:	
   208  0073                     ??_rx_init:	
   209                           ; 0 bytes @ 0x3
   210                           
   211  0073                     ?_lcd_put_byte:	
   212                           ; 0 bytes @ 0x3
   213                           
   214  0073                     ??_lcd_busy:	
   215                           ; 0 bytes @ 0x3
   216                           
   217  0073                     ??_isprint:	
   218                           ; 0 bytes @ 0x3
   219                           
   220  0073                     ??_isdigit:	
   221                           ; 0 bytes @ 0x3
   222                           
   223  0073                     ??_send_char:	
   224                           ; 0 bytes @ 0x3
   225                           
   226  0073                     ?___wmul:	
   227                           ; 0 bytes @ 0x3
   228                           
   229  0073                     ?___lwdiv:	
   230                           ; 2 bytes @ 0x3
   231                           
   232  0073                     send_char@data:	
   233                           ; 2 bytes @ 0x3
   234                           
   235  0073                     lcd_put_byte@b:	
   236                           ; 1 bytes @ 0x3
   237                           
   238  0073                     _isdigit$3692:	
   239                           ; 1 bytes @ 0x3
   240                           
   241  0073                     _isprint$3695:	
   242                           ; 1 bytes @ 0x3
   243                           
   244  0073                     ___wmul@multiplier:	
   245                           ; 1 bytes @ 0x3
   246                           
   247  0073                     ___lwdiv@divisor:	
   248                           ; 2 bytes @ 0x3
   249                           
   250                           
   251                           ; 2 bytes @ 0x3
   252  0073                     	ds	1
   253  0074                     ?_send_string:	
   254  0074                     ??_lcd_put_byte:	
   255                           ; 0 bytes @ 0x4
   256                           
   257  0074                     lcd_busy@busy:	
   258                           ; 0 bytes @ 0x4
   259                           
   260  0074                     isdigit@c:	
   261                           ; 1 bytes @ 0x4
   262                           
   263  0074                     isprint@c:	
   264                           ; 1 bytes @ 0x4
   265                           
   266  0074                     send_string@s:	
   267                           ; 1 bytes @ 0x4
   268                           
   269                           
   270                           ; 2 bytes @ 0x4
   271  0074                     	ds	1
   272  0075                     ___wmul@multiplicand:	
   273  0075                     ___lwdiv@dividend:	
   274                           ; 2 bytes @ 0x5
   275                           
   276                           
   277                           ; 2 bytes @ 0x5
   278  0075                     	ds	1
   279  0076                     ??_send_string:	
   280  0076                     lcd_put_byte@rs:	
   281                           ; 0 bytes @ 0x6
   282                           
   283                           
   284                           ; 1 bytes @ 0x6
   285  0076                     	ds	1
   286  0077                     ??___wmul:	
   287  0077                     ??___lwdiv:	
   288                           ; 0 bytes @ 0x7
   289                           
   290  0077                     lcd_put_byte@temp:	
   291                           ; 0 bytes @ 0x7
   292                           
   293  0077                     ___wmul@product:	
   294                           ; 1 bytes @ 0x7
   295                           
   296  0077                     ___lwdiv@quotient:	
   297                           ; 2 bytes @ 0x7
   298                           
   299                           
   300                           ; 2 bytes @ 0x7
   301  0077                     	ds	1
   302  0078                     ??_lcd_init:	
   303  0078                     ?_lcd_gotoxy:	
   304                           ; 0 bytes @ 0x8
   305                           
   306  0078                     lcd_gotoxy@row:	
   307                           ; 0 bytes @ 0x8
   308                           
   309                           
   310                           ; 1 bytes @ 0x8
   311  0078                     	ds	1
   312  0079                     ??_lcd_gotoxy:	
   313  0079                     ?_atoi:	
   314                           ; 0 bytes @ 0x9
   315                           
   316  0079                     lcd_gotoxy@col:	
   317                           ; 2 bytes @ 0x9
   318                           
   319  0079                     ___lwdiv@counter:	
   320                           ; 1 bytes @ 0x9
   321                           
   322                           
   323                           ; 1 bytes @ 0x9
   324  0079                     	ds	1
   325  007A                     ??___lwmod:	
   326  007A                     lcd_gotoxy@address:	
   327                           ; 0 bytes @ 0xA
   328                           
   329  007A                     ___lwmod@counter:	
   330                           ; 1 bytes @ 0xA
   331                           
   332                           
   333                           ; 1 bytes @ 0xA
   334  007A                     	ds	1
   335  007B                     ??_printf:	
   336  007B                     ??_sprintf:	
   337                           ; 0 bytes @ 0xB
   338                           
   339  007B                     ??_lcd_putc:	
   340                           ; 0 bytes @ 0xB
   341                           
   342  007B                     ??_main:	
   343                           ; 0 bytes @ 0xB
   344                           
   345  007B                     ??_putch:	
   346                           ; 0 bytes @ 0xB
   347                           
   348                           
   349                           	psect	cstackBANK0
   350  0020                     __pcstackBANK0:	
   351                           ; 0 bytes @ 0xB
   352                           
   353  0020                     ??_atoi:	
   354  0020                     ?___lwmod:	
   355                           ; 0 bytes @ 0x0
   356                           
   357  0020                     lcd_putc@c:	
   358                           ; 2 bytes @ 0x0
   359                           
   360  0020                     ___lwmod@divisor:	
   361                           ; 1 bytes @ 0x0
   362                           
   363                           
   364                           ; 2 bytes @ 0x0
   365  0020                     	ds	1
   366  0021                     ?_putch:	
   367  0021                     putch@c:	
   368                           ; 0 bytes @ 0x1
   369                           
   370                           
   371                           ; 1 bytes @ 0x1
   372  0021                     	ds	1
   373  0022                     atoi@sign:	
   374  0022                     ___lwmod@dividend:	
   375                           ; 1 bytes @ 0x2
   376                           
   377                           
   378                           ; 2 bytes @ 0x2
   379  0022                     	ds	1
   380  0023                     atoi@a:	
   381                           
   382                           ; 2 bytes @ 0x3
   383  0023                     	ds	1
   384  0024                     ?__doprnt:	
   385  0024                     __doprnt@f:	
   386                           ; 2 bytes @ 0x4
   387                           
   388                           
   389                           ; 1 bytes @ 0x4
   390  0024                     	ds	1
   391  0025                     __doprnt@ap:	
   392  0025                     atoi@s:	
   393                           ; 1 bytes @ 0x5
   394                           
   395                           
   396                           ; 1 bytes @ 0x5
   397  0025                     	ds	1
   398  0026                     ??__doprnt:	
   399                           
   400                           ; 0 bytes @ 0x6
   401  0026                     	ds	3
   402  0029                     __doprnt@prec:	
   403                           
   404                           ; 1 bytes @ 0x9
   405  0029                     	ds	1
   406  002A                     __doprnt@_val:	
   407                           
   408                           ; 4 bytes @ 0xA
   409  002A                     	ds	4
   410  002E                     __doprnt@flag:	
   411                           
   412                           ; 1 bytes @ 0xE
   413  002E                     	ds	1
   414  002F                     __doprnt@width:	
   415                           
   416                           ; 2 bytes @ 0xF
   417  002F                     	ds	2
   418  0031                     __doprnt@c:	
   419                           
   420                           ; 1 bytes @ 0x11
   421  0031                     	ds	1
   422  0032                     __doprnt@pb:	
   423                           
   424                           ; 1 bytes @ 0x12
   425  0032                     	ds	1
   426  0033                     ?_printf:	
   427  0033                     ?_sprintf:	
   428                           ; 2 bytes @ 0x13
   429                           
   430  0033                     sprintf@f:	
   431                           ; 2 bytes @ 0x13
   432                           
   433                           
   434                           ; 1 bytes @ 0x13
   435  0033                     	ds	2
   436  0035                     printf@f:	
   437                           
   438                           ; 1 bytes @ 0x15
   439  0035                     	ds	1
   440  0036                     printf@ap:	
   441  0036                     sprintf@wh:	
   442                           ; 1 bytes @ 0x16
   443                           
   444                           
   445                           ; 1 bytes @ 0x16
   446  0036                     	ds	1
   447  0037                     sprintf@ap:	
   448  0037                     printf@pb:	
   449                           ; 1 bytes @ 0x17
   450                           
   451                           
   452                           ; 2 bytes @ 0x17
   453  0037                     	ds	1
   454  0038                     sprintf@pb:	
   455                           
   456                           ; 2 bytes @ 0x18
   457  0038                     	ds	2
   458                           
   459                           	psect	maintext
   460  0595                     __pmaintext:	
   461 ;;Data sizes: Strings 26, constant 10, data 0, bss 17, persistent 0 stack 0
   462 ;;Auto spaces:   Size  Autos    Used
   463 ;; COMMON          14     11      11
   464 ;; BANK0           80     26      43
   465 ;; BANK1           80      0       0
   466 ;; BANK3           96      0       0
   467 ;; BANK2           96      0       0
   468 ;;
   469 ;; Pointer list with targets:
   470 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   471 ;;
   472 ;; ?___lwmod	unsigned int  size(1) Largest target is 2
   473 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   474 ;;
   475 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   476 ;;
   477 ;; ?_atoi	int  size(1) Largest target is 0
   478 ;;
   479 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 3
   480 ;;		 -> STR_3(CODE[3]), 
   481 ;;
   482 ;; ?_sprintf	int  size(1) Largest target is 6
   483 ;;		 -> NULL(NULL[0]), ket_qua(BANK0[6]), 
   484 ;;
   485 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   486 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   487 ;;
   488 ;; sprintf@wh	PTR unsigned char  size(1) Largest target is 6
   489 ;;		 -> ket_qua(BANK0[6]), 
   490 ;;
   491 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   492 ;;		 -> Absolute function(), putch(), 
   493 ;;
   494 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 6
   495 ;;		 -> NULL(NULL[0]), ket_qua(BANK0[6]), 
   496 ;;
   497 ;; printf@f	PTR const unsigned char  size(1) Largest target is 13
   498 ;;		 -> STR_2(CODE[7]), STR_1(CODE[13]), 
   499 ;;
   500 ;; ?_printf	int  size(1) Largest target is 0
   501 ;;
   502 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   503 ;;		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 
   504 ;;
   505 ;; pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   506 ;;		 -> Absolute function(), putch(), 
   507 ;;
   508 ;; pb.ptr	PTR unsigned char  size(1) Largest target is 6
   509 ;;		 -> NULL(NULL[0]), ket_qua(BANK0[6]), 
   510 ;;
   511 ;; atoi@s	PTR const unsigned char  size(1) Largest target is 5
   512 ;;		 -> rx_data(BANK0[5]), 
   513 ;;
   514 ;; _doprnt@ap	PTR PTR void  size(1) Largest target is 2
   515 ;;		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 
   516 ;;
   517 ;; _doprnt@f	PTR const unsigned char  size(1) Largest target is 13
   518 ;;		 -> STR_3(CODE[3]), STR_2(CODE[7]), STR_1(CODE[13]), 
   519 ;;
   520 ;; S3137__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   521 ;;		 -> Absolute function(), putch(), 
   522 ;;
   523 ;; _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
   524 ;;		 -> Absolute function(), putch(), 
   525 ;;
   526 ;; S3137__prbuf$ptr	PTR unsigned char  size(1) Largest target is 6
   527 ;;		 -> NULL(NULL[0]), ket_qua(BANK0[6]), 
   528 ;;
   529 ;; _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 6
   530 ;;		 -> NULL(NULL[0]), ket_qua(BANK0[6]), 
   531 ;;
   532 ;; _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
   533 ;;		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 
   534 ;;
   535 ;; S3162$_cp	PTR const unsigned char  size(1) Largest target is 0
   536 ;;
   537 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   538 ;;
   539 ;; send_string@s	PTR const unsigned char  size(2) Largest target is 6
   540 ;;		 -> STR_4(CODE[3]), ket_qua(BANK0[6]), 
   541 ;;
   542 ;;
   543 ;; Critical Paths under _main in COMMON
   544 ;;
   545 ;;   _main->_lcd_init
   546 ;;   _main->_atoi
   547 ;;   _main->_lcd_gotoxy
   548 ;;   __doprnt->___lwmod
   549 ;;   _lcd_putc->_lcd_gotoxy
   550 ;;   _lcd_gotoxy->_lcd_put_byte
   551 ;;   _lcd_init->_lcd_put_byte
   552 ;;   _send_string->_send_char
   553 ;;   _atoi->___wmul
   554 ;;   ___lwmod->___lwdiv
   555 ;;
   556 ;; Critical Paths under _ngat in COMMON
   557 ;;
   558 ;;   None.
   559 ;;
   560 ;; Critical Paths under _main in BANK0
   561 ;;
   562 ;;   _main->_sprintf
   563 ;;   _sprintf->__doprnt
   564 ;;   _printf->__doprnt
   565 ;;   __doprnt->___lwmod
   566 ;;   _putch->_lcd_putc
   567 ;;
   568 ;; Critical Paths under _ngat in BANK0
   569 ;;
   570 ;;   None.
   571 ;;
   572 ;; Critical Paths under _main in BANK1
   573 ;;
   574 ;;   None.
   575 ;;
   576 ;; Critical Paths under _ngat in BANK1
   577 ;;
   578 ;;   None.
   579 ;;
   580 ;; Critical Paths under _main in BANK3
   581 ;;
   582 ;;   None.
   583 ;;
   584 ;; Critical Paths under _ngat in BANK3
   585 ;;
   586 ;;   None.
   587 ;;
   588 ;; Critical Paths under _main in BANK2
   589 ;;
   590 ;;   None.
   591 ;;
   592 ;; Critical Paths under _ngat in BANK2
   593 ;;
   594 ;;   None.
   595 ;;
   596 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   597 ;;
   598 ;;
   599 ;;Call Graph Tables:
   600 ;;
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   603 ;; ---------------------------------------------------------------------------------
   604 ;; (0) _main                                                 0     0      0    6434
   605 ;;                           _lcd_init
   606 ;;                            _tx_init
   607 ;;                            _rx_init
   608 ;;                               _atoi
   609 ;;                         _lcd_gotoxy
   610 ;;                             _printf
   611 ;;                            _sprintf
   612 ;;                        _send_string
   613 ;; ---------------------------------------------------------------------------------
   614 ;; (1) _sprintf                                              7     4      3    2739
   615 ;;                                             19 BANK0      7     4      3
   616 ;;                            __doprnt
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) _printf                                               6     4      2    2683
   619 ;;                                             19 BANK0      6     4      2
   620 ;;                            __doprnt
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (2) __doprnt                                             15    13      2    2557
   623 ;;                                              4 BANK0     15    13      2
   624 ;;                   Absolute function
   625 ;;                              _putch
   626 ;;                            _isdigit
   627 ;;                             ___wmul
   628 ;;                            ___lwdiv
   629 ;;                            ___lwmod
   630 ;; ---------------------------------------------------------------------------------
   631 ;; (3) _putch                                                1     0      1     713
   632 ;;                                              1 BANK0      1     0      1
   633 ;;                           _lcd_putc
   634 ;; ---------------------------------------------------------------------------------
   635 ;; (4) _lcd_putc                                             1     1      0     691
   636 ;;                                              0 BANK0      1     1      0
   637 ;;                       _lcd_put_byte
   638 ;;                           _lcd_busy
   639 ;;                         _lcd_gotoxy
   640 ;;                            _isprint
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (5) _lcd_gotoxy                                           3     2      1     313
   643 ;;                                              8 COMMON     3     2      1
   644 ;;                       _lcd_put_byte
   645 ;;                           _lcd_busy
   646 ;; ---------------------------------------------------------------------------------
   647 ;; (1) _lcd_init                                             4     4      0     244
   648 ;;                                              8 COMMON     3     3      0
   649 ;;                       _lcd_put_byte
   650 ;;                           _lcd_busy
   651 ;; ---------------------------------------------------------------------------------
   652 ;; (6) _lcd_busy                                             2     2      0      23
   653 ;;                                              3 COMMON     2     2      0
   654 ;; ---------------------------------------------------------------------------------
   655 ;; (6) _lcd_put_byte                                         5     4      1     221
   656 ;;                                              3 COMMON     5     4      1
   657 ;; ---------------------------------------------------------------------------------
   658 ;; (1) _send_string                                          2     0      2      67
   659 ;;                                              4 COMMON     2     0      2
   660 ;;                          _send_char
   661 ;; ---------------------------------------------------------------------------------
   662 ;; (1) _atoi                                                 8     6      2     388
   663 ;;                                              9 COMMON     2     0      2
   664 ;;                                              0 BANK0      6     6      0
   665 ;;                             ___wmul
   666 ;;                            _isdigit
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (3) ___lwmod                                              5     1      4     159
   669 ;;                                             10 COMMON     1     1      0
   670 ;;                                              0 BANK0      4     0      4
   671 ;;                            ___lwdiv (ARG)
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (3) ___lwdiv                                              7     3      4     162
   674 ;;                                              3 COMMON     7     3      4
   675 ;; ---------------------------------------------------------------------------------
   676 ;; (3) ___wmul                                               6     2      4      92
   677 ;;                                              3 COMMON     6     2      4
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (3) _isdigit                                              2     2      0      68
   680 ;;                                              3 COMMON     2     2      0
   681 ;; ---------------------------------------------------------------------------------
   682 ;; (3) Absolute function(Fake)                               1     0      1       0
   683 ;;                                              3 COMMON     1     0      1
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (5) _isprint                                              2     2      0      68
   686 ;;                                              3 COMMON     2     2      0
   687 ;; ---------------------------------------------------------------------------------
   688 ;; (2) _send_char                                            1     1      0      22
   689 ;;                                              3 COMMON     1     1      0
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (1) _rx_init                                              0     0      0       0
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (1) _tx_init                                              0     0      0       0
   694 ;; ---------------------------------------------------------------------------------
   695 ;; Estimated maximum stack depth 6
   696 ;; ---------------------------------------------------------------------------------
   697 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (7) _ngat                                                 3     3      0       0
   700 ;;                                              0 COMMON     3     3      0
   701 ;; ---------------------------------------------------------------------------------
   702 ;; Estimated maximum stack depth 7
   703 ;; ---------------------------------------------------------------------------------
   704 ;; Call Graph Graphs:
   705 ;; _main (ROOT)
   706 ;;   _lcd_init
   707 ;;     _lcd_put_byte
   708 ;;     _lcd_busy
   709 ;;   _tx_init
   710 ;;   _rx_init
   711 ;;   _atoi
   712 ;;     ___wmul
   713 ;;     _isdigit
   714 ;;   _lcd_gotoxy
   715 ;;     _lcd_put_byte
   716 ;;     _lcd_busy
   717 ;;   _printf
   718 ;;     __doprnt
   719 ;;       Absolute function(Fake)
   720 ;;       _putch
   721 ;;         _lcd_putc
   722 ;;           _lcd_put_byte
   723 ;;           _lcd_busy
   724 ;;           _lcd_gotoxy
   725 ;;             _lcd_put_byte
   726 ;;             _lcd_busy
   727 ;;           _isprint
   728 ;;       _isdigit
   729 ;;       ___wmul
   730 ;;       ___lwdiv
   731 ;;       ___lwmod
   732 ;;         ___lwdiv (ARG)
   733 ;;   _sprintf
   734 ;;     __doprnt
   735 ;;       Absolute function(Fake)
   736 ;;       _putch
   737 ;;         _lcd_putc
   738 ;;           _lcd_put_byte
   739 ;;           _lcd_busy
   740 ;;           _lcd_gotoxy
   741 ;;             _lcd_put_byte
   742 ;;             _lcd_busy
   743 ;;           _isprint
   744 ;;       _isdigit
   745 ;;       ___wmul
   746 ;;       ___lwdiv
   747 ;;       ___lwmod
   748 ;;         ___lwdiv (ARG)
   749 ;;   _send_string
   750 ;;     _send_char
   751 ;;
   752 ;; _ngat (ROOT)
   753 ;;
   754 ;; Address spaces:
   755 ;;Name               Size   Autos  Total    Cost      Usage
   756 ;;BITCOMMON            E      0       0       0        0.0%
   757 ;;EEDATA             100      0       0       0        0.0%
   758 ;;NULL                 0      0       0       0        0.0%
   759 ;;CODE                 0      0       0       0        0.0%
   760 ;;COMMON               E      B       B       1       78.6%
   761 ;;BITSFR0              0      0       0       1        0.0%
   762 ;;SFR0                 0      0       0       1        0.0%
   763 ;;BITSFR1              0      0       0       2        0.0%
   764 ;;SFR1                 0      0       0       2        0.0%
   765 ;;STACK                0      0       6       2        0.0%
   766 ;;ABS                  0      0      36       3        0.0%
   767 ;;BITBANK0            50      0       0       4        0.0%
   768 ;;BITSFR3              0      0       0       4        0.0%
   769 ;;SFR3                 0      0       0       4        0.0%
   770 ;;BANK0               50     1A      2B       5       53.8%
   771 ;;BITSFR2              0      0       0       5        0.0%
   772 ;;SFR2                 0      0       0       5        0.0%
   773 ;;BITBANK1            50      0       0       6        0.0%
   774 ;;BANK1               50      0       0       7        0.0%
   775 ;;BITBANK3            60      0       0       8        0.0%
   776 ;;BANK3               60      0       0       9        0.0%
   777 ;;BITBANK2            60      0       0      10        0.0%
   778 ;;BANK2               60      0       0      11        0.0%
   779 ;;DATA                 0      0      3C      12        0.0%
   780                           
   781                           
   782 ;; *************** function _main *****************
   783 ;; Defined at:
   784 ;;		line 20 in file "D:\TTVXL\Project TTVXL\BT03week16ttvxl\BT03week16ttvxl.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 17F/0
   795 ;;		On exit  : 60/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels required when called:    7
   804 ;; This function calls:
   805 ;;		_lcd_init
   806 ;;		_tx_init
   807 ;;		_rx_init
   808 ;;		_atoi
   809 ;;		_lcd_gotoxy
   810 ;;		_printf
   811 ;;		_sprintf
   812 ;;		_send_string
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817  0595                     _main:	
   818                           
   819                           ;BT03week16ttvxl.c: 21: ANSEL = ANSELH = 0;
   820                           
   821                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   822  0595  1683               	bsf	3,5	;RP0=1, select bank3
   823  0596  1703               	bsf	3,6	;RP1=1, select bank3
   824  0597  0189               	clrf	9	;volatile
   825  0598  0188               	clrf	8	;volatile
   826                           
   827                           ;BT03week16ttvxl.c: 22: lcd_init();
   828  0599  120A  118A  240B   	fcall	_lcd_init
      +       120A  118A         
   829                           
   830                           ;BT03week16ttvxl.c: 23: tx_init();
   831  059E  120A  118A  264E   	fcall	_tx_init
      +       120A  118A         
   832                           
   833                           ;BT03week16ttvxl.c: 24: rx_init();
   834  05A3  120A  118A  263F   	fcall	_rx_init
      +       120A  118A         
   835                           
   836                           ;BT03week16ttvxl.c: 27: RCIF = 0;
   837  05A8  128C               	bcf	12,5
   838                           
   839                           ;BT03week16ttvxl.c: 28: RCIE = 1;
   840  05A9  1683               	bsf	3,5	;RP0=1, select bank1
   841  05AA  168C               	bsf	12,5
   842                           
   843                           ;BT03week16ttvxl.c: 29: PEIE = 1;
   844  05AB  170B               	bsf	11,6
   845                           
   846                           ;BT03week16ttvxl.c: 30: GIE = 1;
   847  05AC  178B               	bsf	11,7
   848                           
   849                           ;BT03week16ttvxl.c: 32: i=0;
   850  05AD  1283               	bcf	3,5	;RP0=0, select bank0
   851  05AE  01BA               	clrf	_i
   852  05AF  01BB               	clrf	_i+1
   853  05B0                     l4668:	
   854                           
   855                           ;BT03week16ttvxl.c: 34: {
   856                           ;BT03week16ttvxl.c: 35: number_in = atoi(rx_data);
   857  05B0  3046               	movlw	_rx_data& (0+255)
   858  05B1  120A  118A  2125   	fcall	_atoi
      +       120A  118A         
   859  05B6  087A               	movf	?_atoi+1,w
   860  05B7  00BD               	movwf	_number_in+1
   861  05B8  0879               	movf	?_atoi,w
   862  05B9  00BC               	movwf	_number_in
   863                           
   864                           ;BT03week16ttvxl.c: 36: number_out = number_in + 10;
   865  05BA  083D               	movf	_number_in+1,w
   866  05BB  00BF               	movwf	_number_out+1
   867  05BC  083C               	movf	_number_in,w
   868  05BD  00BE               	movwf	_number_out
   869  05BE  300A               	movlw	10
   870  05BF  07BE               	addwf	_number_out,f
   871  05C0  1803               	skipnc
   872  05C1  0ABF               	incf	_number_out+1,f
   873  05C2  3002               	movlw	2
   874                           
   875                           ;BT03week16ttvxl.c: 38: lcd_gotoxy(2,0);
   876  05C3  01F8               	clrf	?_lcd_gotoxy
   877  05C4  120A  118A  23C4   	fcall	_lcd_gotoxy
      +       120A  118A         
   878                           
   879                           ;BT03week16ttvxl.c: 39: printf("Numbers is: ");
   880  05C9  300B               	movlw	(STR_1-__stringbase)& (0+255)
   881  05CA  120A  118A  2109   	fcall	_printf
      +       120A  118A         
   882  05CF  3004               	movlw	4
   883                           
   884                           ;BT03week16ttvxl.c: 40: lcd_gotoxy(4,1);
   885  05D0  01F8               	clrf	?_lcd_gotoxy
   886  05D1  0AF8               	incf	?_lcd_gotoxy,f
   887  05D2  120A  118A  23C4   	fcall	_lcd_gotoxy
      +       120A  118A         
   888                           
   889                           ;BT03week16ttvxl.c: 41: printf(" %05u ",number_in);
   890  05D7  083D               	movf	_number_in+1,w
   891  05D8  00B4               	movwf	?_printf+1
   892  05D9  083C               	movf	_number_in,w
   893  05DA  00B3               	movwf	?_printf
   894  05DB  3018               	movlw	(STR_2-__stringbase)& (0+255)
   895  05DC  120A  118A  2109   	fcall	_printf
      +       120A  118A         
   896                           
   897                           ;BT03week16ttvxl.c: 43: sprintf(ket_qua,"%d",number_out);
   898  05E1  3022               	movlw	(STR_3-__stringbase)& (0+255)
   899  05E2  00B3               	movwf	?_sprintf
   900  05E3  083F               	movf	_number_out+1,w
   901  05E4  00B5               	movwf	?_sprintf+2
   902  05E5  083E               	movf	_number_out,w
   903  05E6  00B4               	movwf	?_sprintf+1
   904  05E7  3040               	movlw	_ket_qua& (0+255)
   905  05E8  120A  118A  2115   	fcall	_sprintf
      +       120A  118A         
   906                           
   907                           ;BT03week16ttvxl.c: 44: send_string(ket_qua);
   908  05ED  3040               	movlw	_ket_qua& (0+255)
   909  05EE  00F4               	movwf	?_send_string
   910  05EF  01F5               	clrf	?_send_string+1
   911  05F0  120A  118A  25FF   	fcall	_send_string
      +       120A  118A         
   912                           
   913                           ;BT03week16ttvxl.c: 45: send_string("  ");
   914  05F5  301F               	movlw	low (STR_4-__stringbase)
   915  05F6  00F4               	movwf	?_send_string
   916  05F7  3080               	movlw	128
   917  05F8  00F5               	movwf	?_send_string+1
   918  05F9  120A  118A  25FF   	fcall	_send_string
      +       120A  118A         
   919  05FE  2DB0               	goto	l4668
   920  05FF                     __end_of_main:	
   921                           
   922                           	psect	text401
   923  0109                     __ptext401:	
   924 ;; =============== function _sprintf ends ============
   925                           
   926                           
   927 ;; *************** function _printf *****************
   928 ;; Defined at:
   929 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\printf.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  f               1    wreg     PTR const unsigned char 
   932 ;;		 -> STR_2(7), STR_1(13), 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  f               1   21[BANK0 ] PTR const unsigned char 
   935 ;;		 -> STR_2(7), STR_1(13), 
   936 ;;  pb              2   23[BANK0 ] struct __prbuf
   937 ;;  ap              1   22[BANK0 ] PTR void [1]
   938 ;;		 -> ?_sprintf(2), ?_printf(2), 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2   19[BANK0 ] int 
   941 ;; Registers used:
   942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 60/0
   945 ;;		On exit  : 60/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       2       0       0       0
   949 ;;      Locals:         0       4       0       0       0
   950 ;;      Temps:          0       0       0       0       0
   951 ;;      Totals:         0       6       0       0       0
   952 ;;Total ram usage:        6 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    6
   955 ;; This function calls:
   956 ;;		__doprnt
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961  0109                     _printf:	
   962                           
   963                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   964                           ;printf@f stored from wreg
   965  0109  00B5               	movwf	printf@f
   966  010A  3001               	movlw	(fp__putch-fpbase)& (0+255)
   967  010B  01B7               	clrf	printf@pb
   968  010C  00B8               	movwf	printf@pb+1
   969  010D  3033               	movlw	?_printf& (0+255)
   970  010E  00B6               	movwf	printf@ap
   971                           
   972                           ;	Return value of _printf is never used
   973  010F  0835               	movf	printf@f,w
   974  0110  00A4               	movwf	?__doprnt
   975  0111  3036               	movlw	printf@ap& (0+255)
   976  0112  00A5               	movwf	?__doprnt+1
   977  0113  3037               	movlw	printf@pb& (0+255)
   978  0114  2980               	ljmp	__doprnt
   979  0115                     __end_of_printf:	
   980  0115                     __ptext400:	
   981 ;; =============== function _main ends ============
   982                           
   983                           
   984 ;; *************** function _sprintf *****************
   985 ;; Defined at:
   986 ;;		line 14 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\sprintf.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  wh              1    wreg     PTR unsigned char 
   989 ;;		 -> ket_qua(6), 
   990 ;;  f               1   19[BANK0 ] PTR const unsigned char 
   991 ;;		 -> STR_3(3), 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  wh              1   22[BANK0 ] PTR unsigned char 
   994 ;;		 -> ket_qua(6), 
   995 ;;  pb              2   24[BANK0 ] struct __prbuf
   996 ;;  ap              1   23[BANK0 ] PTR void [1]
   997 ;;		 -> ?_sprintf(2), ?_printf(2), 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  2   19[BANK0 ] int 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 60/0
  1004 ;;		On exit  : 160/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1007 ;;      Params:         0       3       0       0       0
  1008 ;;      Locals:         0       4       0       0       0
  1009 ;;      Temps:          0       0       0       0       0
  1010 ;;      Totals:         0       7       0       0       0
  1011 ;;Total ram usage:        7 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    6
  1014 ;; This function calls:
  1015 ;;		__doprnt
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020  0115                     _sprintf:	
  1021                           
  1022                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1023                           ;sprintf@wh stored from wreg
  1024  0115  00B6               	movwf	sprintf@wh
  1025  0116  00B8               	movwf	sprintf@pb
  1026  0117  3034               	movlw	(?_sprintf+1)& (0+255)
  1027  0118  01B9               	clrf	sprintf@pb+1
  1028  0119  00B7               	movwf	sprintf@ap
  1029  011A  0833               	movf	sprintf@f,w
  1030  011B  00A4               	movwf	?__doprnt
  1031  011C  3037               	movlw	sprintf@ap& (0+255)
  1032  011D  00A5               	movwf	?__doprnt+1
  1033  011E  3038               	movlw	sprintf@pb& (0+255)
  1034  011F  2180               	fcall	__doprnt
  1035  0120  0838               	movf	sprintf@pb,w
  1036  0121  0084               	movwf	4
  1037  0122  1383               	bcf	3,7	;select IRP bank0
  1038  0123  0180               	clrf	0
  1039  0124  0008               	return
  1040  0125                     __end_of_sprintf:	
  1041  0125                     __ptext410:	
  1042 ;; =============== function _send_string ends ============
  1043                           
  1044                           
  1045 ;; *************** function _atoi *****************
  1046 ;; Defined at:
  1047 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\atoi.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  s               1    wreg     PTR const unsigned char 
  1050 ;;		 -> rx_data(5), 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  1053 ;;		 -> rx_data(5), 
  1054 ;;  a               2    3[BANK0 ] int 
  1055 ;;  sign            1    2[BANK0 ] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  2    9[COMMON] int 
  1058 ;; Registers used:
  1059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 60/0
  1062 ;;		On exit  : 160/0
  1063 ;;		Unchanged: FFE9F/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         2       0       0       0       0
  1066 ;;      Locals:         0       4       0       0       0
  1067 ;;      Temps:          0       2       0       0       0
  1068 ;;      Totals:         2       6       0       0       0
  1069 ;;Total ram usage:        8 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    2
  1072 ;; This function calls:
  1073 ;;		___wmul
  1074 ;;		_isdigit
  1075 ;; This function is called by:
  1076 ;;		_main
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079  0125                     _atoi:	
  1080                           
  1081                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1082                           ;atoi@s stored from wreg
  1083  0125  00A5               	movwf	atoi@s
  1084  0126                     l4334:	
  1085  0126  0825               	movf	atoi@s,w
  1086  0127  0084               	movwf	4
  1087  0128  1383               	bcf	3,7	;select IRP bank0
  1088  0129  0800               	movf	0,w
  1089  012A  3A20               	xorlw	32
  1090  012B  1D03               	btfss	3,2
  1091  012C  292F               	goto	l4336
  1092  012D                     l4332:	
  1093  012D  0AA5               	incf	atoi@s,f
  1094  012E  2926               	goto	l4334
  1095  012F                     l4336:	
  1096  012F  0825               	movf	atoi@s,w
  1097  0130  0084               	movwf	4
  1098  0131  0800               	movf	0,w
  1099  0132  3A09               	xorlw	9
  1100  0133  1903               	skipnz
  1101  0134  292D               	goto	l4332
  1102  0135  01A3               	clrf	atoi@a
  1103  0136  01A4               	clrf	atoi@a+1
  1104  0137  01A2               	clrf	atoi@sign
  1105  0138  0825               	movf	atoi@s,w
  1106  0139  0084               	movwf	4
  1107  013A  0800               	movf	0,w
  1108  013B  3A2D               	xorlw	45
  1109  013C  1D03               	skipz
  1110  013D  2940               	goto	l4344
  1111  013E  0AA2               	incf	atoi@sign,f
  1112  013F  296A               	goto	l4346
  1113  0140                     l4344:	
  1114  0140  0825               	movf	atoi@s,w
  1115  0141  0084               	movwf	4
  1116  0142  0800               	movf	0,w
  1117  0143  3A2B               	xorlw	43
  1118  0144  1903               	btfsc	3,2
  1119  0145  296A               	goto	l4346
  1120  0146                     l4352:	
  1121  0146  0825               	movf	atoi@s,w
  1122  0147  0084               	movwf	4
  1123  0148  0800               	movf	0,w
  1124  0149  2328  120A  118A   	fcall	_isdigit
  1125  014C  1C03               	btfss	3,0
  1126  014D  296C               	goto	l4354
  1127  014E  0825               	movf	atoi@s,w
  1128  014F  0084               	movwf	4
  1129  0150  0824               	movf	atoi@a+1,w
  1130  0151  00F4               	movwf	?___wmul+1
  1131  0152  0823               	movf	atoi@a,w
  1132  0153  00F3               	movwf	?___wmul
  1133  0154  300A               	movlw	10
  1134  0155  00F5               	movwf	?___wmul+2
  1135  0156  01F6               	clrf	?___wmul+3
  1136  0157  2336  120A  118A   	fcall	___wmul
  1137  015A  0800               	movf	0,w
  1138  015B  0773               	addwf	?___wmul,w
  1139  015C  00A0               	movwf	??_atoi
  1140  015D  3000               	movlw	0
  1141  015E  1803               	skipnc
  1142  015F  3001               	movlw	1
  1143  0160  0774               	addwf	?___wmul+1,w
  1144  0161  00A1               	movwf	??_atoi+1
  1145  0162  0820               	movf	??_atoi,w
  1146  0163  3ED0               	addlw	208
  1147  0164  00A3               	movwf	atoi@a
  1148  0165  0821               	movf	??_atoi+1,w
  1149  0166  1803               	skipnc
  1150  0167  3E01               	addlw	1
  1151  0168  3EFF               	addlw	255
  1152  0169  00A4               	movwf	atoi@a+1
  1153  016A                     l4346:	
  1154  016A  0AA5               	incf	atoi@s,f
  1155  016B  2946               	goto	l4352
  1156  016C                     l4354:	
  1157  016C  0822               	movf	atoi@sign,w
  1158  016D  1903               	btfsc	3,2
  1159  016E  297B               	goto	l4360
  1160  016F  0923               	comf	atoi@a,w
  1161  0170  00A0               	movwf	??_atoi
  1162  0171  0924               	comf	atoi@a+1,w
  1163  0172  00A1               	movwf	??_atoi+1
  1164  0173  0AA0               	incf	??_atoi,f
  1165  0174  1903               	skipnz
  1166  0175  0AA1               	incf	??_atoi+1,f
  1167  0176  0820               	movf	??_atoi,w
  1168  0177  00F9               	movwf	?_atoi
  1169  0178  0821               	movf	??_atoi+1,w
  1170  0179  00FA               	movwf	?_atoi+1
  1171  017A  0008               	return
  1172  017B                     l4360:	
  1173  017B  0824               	movf	atoi@a+1,w
  1174  017C  00FA               	movwf	?_atoi+1
  1175  017D  0823               	movf	atoi@a,w
  1176  017E  00F9               	movwf	?_atoi
  1177  017F  0008               	return
  1178  0180                     __end_of_atoi:	
  1179  0180                     __ptext402:	
  1180 ;; =============== function _printf ends ============
  1181                           
  1182                           
  1183 ;; *************** function __doprnt *****************
  1184 ;; Defined at:
  1185 ;;		line 455 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;  pb              1    wreg     PTR struct __prbuf
  1188 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1189 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  1190 ;;		 -> STR_3(3), STR_2(7), STR_1(13), 
  1191 ;;  ap              1    5[BANK0 ] PTR PTR void 
  1192 ;;		 -> sprintf@ap(1), printf@ap(1), 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  pb              1   18[BANK0 ] PTR struct __prbuf
  1195 ;;		 -> sprintf@pb(2), printf@pb(2), 
  1196 ;;  _val            4   10[BANK0 ] struct .
  1197 ;;  width           2   15[BANK0 ] int 
  1198 ;;  c               1   17[BANK0 ] char 
  1199 ;;  flag            1   14[BANK0 ] unsigned char 
  1200 ;;  prec            1    9[BANK0 ] char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  2    4[BANK0 ] int 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 60/0
  1207 ;;		On exit  : 60/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       2       0       0       0
  1211 ;;      Locals:         0      10       0       0       0
  1212 ;;      Temps:          0       3       0       0       0
  1213 ;;      Totals:         0      15       0       0       0
  1214 ;;Total ram usage:       15 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    5
  1217 ;; This function calls:
  1218 ;;		Absolute function
  1219 ;;		_putch
  1220 ;;		_isdigit
  1221 ;;		___wmul
  1222 ;;		___lwdiv
  1223 ;;		___lwmod
  1224 ;; This function is called by:
  1225 ;;		_printf
  1226 ;;		_sprintf
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229  0180                     __doprnt:	
  1230                           
  1231                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1232                           ;__doprnt@pb stored from wreg
  1233  0180  00B2               	movwf	__doprnt@pb
  1234  0181                     l4622:	
  1235  0181  23BF               	call	PL7	;select bank 0
  1236  0182  0824               	movf	__doprnt@f,w
  1237  0183  0AA4               	incf	__doprnt@f,f
  1238  0184  0084               	movwf	4
  1239  0185  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1240  018A  00B1               	movwf	__doprnt@c
  1241  018B  08B1               	movf	__doprnt@c,f
  1242  018C  1903               	btfsc	3,2
  1243  018D  2B25               	goto	l4624
  1244  018E  0831               	movf	__doprnt@c,w
  1245  018F  3A25               	xorlw	37
  1246  0190  1903               	skipnz
  1247  0191  29A8               	goto	l4504
  1248  0192  0832               	movf	__doprnt@pb,w
  1249  0193  3E01               	addlw	1
  1250  0194  0084               	movwf	4
  1251  0195  1383               	bcf	3,7	;select IRP bank0
  1252  0196  0880               	movf	0,f
  1253  0197  1903               	skipnz
  1254  0198  29A1               	goto	l4500
  1255  0199  0831               	movf	__doprnt@c,w
  1256  019A  23AB               	fcall	PL3	;call to abstracted procedure
  1257  019B  120A  118A  2100   	fcall	fptable
      +       120A  118A         
  1258  01A0  2981               	goto	l4622
  1259  01A1                     l4500:	
  1260  01A1  0832               	movf	__doprnt@pb,w
  1261  01A2  0084               	movwf	4
  1262  01A3  0800               	movf	0,w
  1263  01A4  23B1  120A  118A   	fcall	PL4	;call to abstracted procedure
  1264  01A7  2981               	goto	l4622
  1265  01A8                     l4504:	
  1266  01A8  01AF               	clrf	__doprnt@width
  1267  01A9  01B0               	clrf	__doprnt@width+1
  1268  01AA  01AE               	clrf	__doprnt@flag
  1269  01AB  29AE               	goto	l4510
  1270  01AC                     l2194:	
  1271  01AC  152E               	bsf	__doprnt@flag,2
  1272  01AD  0AA4               	incf	__doprnt@f,f
  1273  01AE                     l4510:	
  1274  01AE  0824               	movf	__doprnt@f,w
  1275  01AF  0084               	movwf	4
  1276  01B0  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1277                           
  1278                           ; Switch size 1, requested type "space"
  1279                           ; Number of cases is 1, Range of values is 48 to 48
  1280                           ; switch strategies available:
  1281                           ; Name         Instructions Cycles
  1282                           ; simple_byte            4     3 (average)
  1283                           ; direct_byte           14    11 (fixed)
  1284                           ; jumptable            263     9 (fixed)
  1285                           ;	Chosen strategy is simple_byte
  1286  01B5  3A30               	xorlw	48	; case 48
  1287  01B6  1903               	skipnz
  1288  01B7  29AC               	goto	l2194
  1289  01B8  29B9               	goto	l4512
  1290  01B9                     l4512:	
  1291  01B9  0824               	movf	__doprnt@f,w
  1292  01BA  0084               	movwf	4
  1293  01BB  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1294  01C0  2328  120A  118A   	fcall	_isdigit
  1295  01C3  1C03               	btfss	3,0
  1296  01C4  29F5               	goto	l4524
  1297  01C5  01AF               	clrf	__doprnt@width
  1298  01C6  01B0               	clrf	__doprnt@width+1
  1299  01C7                     l4516:	
  1300  01C7  0830               	movf	__doprnt@width+1,w
  1301  01C8  00F4               	movwf	?___wmul+1
  1302  01C9  082F               	movf	__doprnt@width,w
  1303  01CA  00F3               	movwf	?___wmul
  1304  01CB  300A               	movlw	10
  1305  01CC  00F5               	movwf	?___wmul+2
  1306  01CD  01F6               	clrf	?___wmul+3
  1307  01CE  2336               	fcall	___wmul
  1308  01CF  0824               	movf	__doprnt@f,w
  1309  01D0  0084               	movwf	4
  1310  01D1  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1311  01D6  0773               	addwf	?___wmul,w
  1312  01D7  00A6               	movwf	??__doprnt
  1313  01D8  3000               	movlw	0
  1314  01D9  1803               	skipnc
  1315  01DA  3001               	movlw	1
  1316  01DB  0774               	addwf	?___wmul+1,w
  1317  01DC  00A7               	movwf	??__doprnt+1
  1318  01DD  0826               	movf	??__doprnt,w
  1319  01DE  3ED0               	addlw	208
  1320  01DF  00AF               	movwf	__doprnt@width
  1321  01E0  0827               	movf	??__doprnt+1,w
  1322  01E1  1803               	skipnc
  1323  01E2  3E01               	addlw	1
  1324  01E3  3EFF               	addlw	255
  1325  01E4  00B0               	movwf	__doprnt@width+1
  1326  01E5  0AA4               	incf	__doprnt@f,f
  1327  01E6  0824               	movf	__doprnt@f,w
  1328  01E7  0084               	movwf	4
  1329  01E8  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1330  01ED  2328  120A  118A   	fcall	_isdigit
  1331  01F0  1C03               	btfss	3,0
  1332  01F1  29F5               	goto	l4524
  1333  01F2  29C7               	goto	l4516
  1334  01F3                     l2208:	
  1335  01F3  172E               	bsf	__doprnt@flag,6
  1336  01F4  2A0B               	goto	l2206
  1337  01F5                     l4524:	
  1338  01F5  0824               	movf	__doprnt@f,w
  1339  01F6  0AA4               	incf	__doprnt@f,f
  1340  01F7  0084               	movwf	4
  1341  01F8  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1342  01FD  00B1               	movwf	__doprnt@c
  1343                           
  1344                           ; Switch size 1, requested type "space"
  1345                           ; Number of cases is 4, Range of values is 0 to 117
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte           13     7 (average)
  1349                           ; jumptable            260     6 (fixed)
  1350                           ; rangetable           122     6 (fixed)
  1351                           ; spacedrange          242     9 (fixed)
  1352                           ; locatedrange         118     3 (fixed)
  1353                           ;	Chosen strategy is simple_byte
  1354  01FE  3A00               	xorlw	0	; case 0
  1355  01FF  1903               	skipnz
  1356  0200  2B25               	goto	l4624
  1357  0201  3A64               	xorlw	100	; case 100
  1358  0202  1903               	skipnz
  1359  0203  2A0B               	goto	l2206
  1360  0204  3A0D               	xorlw	13	; case 105
  1361  0205  1903               	skipnz
  1362  0206  2A0B               	goto	l2206
  1363  0207  3A1C               	xorlw	28	; case 117
  1364  0208  1903               	skipnz
  1365  0209  29F3               	goto	l2208
  1366  020A  2981               	goto	l4622
  1367  020B                     l2206:	
  1368  020B  1B2E               	btfsc	__doprnt@flag,6
  1369  020C  2A1B               	goto	l4534
  1370  020D  0825               	movf	__doprnt@ap,w
  1371  020E  239D  120A  118A   	fcall	PL2	;call to abstracted procedure
  1372  0211  1FAB               	btfss	__doprnt@_val+1,7
  1373  0212  2A1D               	goto	l4536
  1374  0213  3003               	movlw	3
  1375  0214  04AE               	iorwf	__doprnt@flag,f
  1376  0215  09AA               	comf	__doprnt@_val,f
  1377  0216  09AB               	comf	__doprnt@_val+1,f
  1378  0217  0AAA               	incf	__doprnt@_val,f
  1379  0218  1903               	skipnz
  1380  0219  0AAB               	incf	__doprnt@_val+1,f
  1381  021A  2A1D               	goto	l4536
  1382  021B                     l4534:	
  1383  021B  0825               	movf	__doprnt@ap,w
  1384  021C  239D               	fcall	PL2	;call to abstracted procedure
  1385  021D                     l4536:	
  1386  021D  01B1               	clrf	__doprnt@c
  1387  021E  0AB1               	incf	__doprnt@c,f
  1388  021F                     l4542:	
  1389  021F  1003               	clrc
  1390  0220  0D31               	rlf	__doprnt@c,w
  1391  0221  3E01               	addlw	low (_dpowers-__stringbase)
  1392  0222  0084               	movwf	4
  1393  0223  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1394  0228  00A6               	movwf	??__doprnt
  1395  0229  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1396  022E  00A7               	movwf	??__doprnt+1
  1397  022F  022B               	subwf	__doprnt@_val+1,w
  1398  0230  1D03               	skipz
  1399  0231  2A34               	goto	u1385
  1400  0232  0826               	movf	??__doprnt,w
  1401  0233  022A               	subwf	__doprnt@_val,w
  1402  0234                     u1385:	
  1403  0234  1C03               	btfss	3,0
  1404  0235  2A3B               	goto	l4550
  1405  0236  0AB1               	incf	__doprnt@c,f
  1406  0237  0831               	movf	__doprnt@c,w
  1407  0238  3A05               	xorlw	5
  1408  0239  1D03               	skipz
  1409  023A  2A1F               	goto	l4542
  1410  023B                     l4550:	
  1411  023B  0830               	movf	__doprnt@width+1,w
  1412  023C  042F               	iorwf	__doprnt@width,w
  1413  023D  1903               	skipnz
  1414  023E  2A47               	goto	l4556
  1415  023F  082E               	movf	__doprnt@flag,w
  1416  0240  3903               	andlw	3
  1417  0241  1903               	btfsc	3,2
  1418  0242  2A47               	goto	l4556
  1419  0243  30FF               	movlw	-1
  1420  0244  07AF               	addwf	__doprnt@width,f
  1421  0245  1C03               	skipc
  1422  0246  03B0               	decf	__doprnt@width+1,f
  1423  0247                     l4556:	
  1424  0247  0831               	movf	__doprnt@c,w
  1425  0248  00A6               	movwf	??__doprnt
  1426  0249  01A7               	clrf	??__doprnt+1
  1427  024A  1BA6               	btfsc	??__doprnt,7
  1428  024B  03A7               	decf	??__doprnt+1,f
  1429  024C  0827               	movf	??__doprnt+1,w
  1430  024D  3A80               	xorlw	128
  1431  024E  00A8               	movwf	??__doprnt+2
  1432  024F  0830               	movf	__doprnt@width+1,w
  1433  0250  3A80               	xorlw	128
  1434  0251  0228               	subwf	??__doprnt+2,w
  1435  0252  1D03               	skipz
  1436  0253  2A56               	goto	u1425
  1437  0254  082F               	movf	__doprnt@width,w
  1438  0255  0226               	subwf	??__doprnt,w
  1439  0256                     u1425:	
  1440  0256  1803               	skipnc
  1441  0257  2A64               	goto	l4560
  1442  0258  23BF               	call	PL7	;select bank 0
  1443  0259  0831               	movf	__doprnt@c,w
  1444  025A  00A6               	movwf	??__doprnt
  1445  025B  01A7               	clrf	??__doprnt+1
  1446  025C  1BA6               	btfsc	??__doprnt,7
  1447  025D  03A7               	decf	??__doprnt+1,f
  1448  025E  02AF               	subwf	__doprnt@width,f
  1449  025F  0827               	movf	??__doprnt+1,w
  1450  0260  1C03               	skipc
  1451  0261  03B0               	decf	__doprnt@width+1,f
  1452  0262  02B0               	subwf	__doprnt@width+1,f
  1453  0263  2A67               	goto	l4562
  1454  0264                     l4560:	
  1455  0264  23BF               	call	PL7	;select bank 0
  1456  0265  01AF               	clrf	__doprnt@width
  1457  0266  01B0               	clrf	__doprnt@width+1
  1458  0267                     l4562:	
  1459  0267  1D2E               	btfss	__doprnt@flag,2
  1460  0268  2AA5               	goto	l4586
  1461  0269  082E               	movf	__doprnt@flag,w
  1462  026A  3903               	andlw	3
  1463  026B  1903               	btfsc	3,2
  1464  026C  2A82               	goto	l4574
  1465  026D  0832               	movf	__doprnt@pb,w
  1466  026E  3E01               	addlw	1
  1467  026F  0084               	movwf	4
  1468  0270  1383               	bcf	3,7	;select IRP bank0
  1469  0271  0880               	movf	0,f
  1470  0272  1903               	skipnz
  1471  0273  2A7C               	goto	l4570
  1472  0274  302D               	movlw	45
  1473  0275  23AB               	fcall	PL3	;call to abstracted procedure
  1474  0276  120A  118A  2100   	fcall	fptable
      +       120A  118A         
  1475  027B  2A82               	goto	l4574
  1476  027C                     l4570:	
  1477  027C  0832               	movf	__doprnt@pb,w
  1478  027D  0084               	movwf	4
  1479  027E  0800               	movf	0,w
  1480  027F  23B8  120A  118A   	fcall	PL6	;call to abstracted procedure
  1481  0282                     l4574:	
  1482  0282  23BF               	call	PL7	;select bank 0
  1483  0283                     L1:	
  1484  0283  0830               	movf	__doprnt@width+1,w
  1485  0284  042F               	iorwf	__doprnt@width,w
  1486  0285  1903               	skipnz
  1487  0286  2AE3               	goto	l4608
  1488  0287  0832               	movf	__doprnt@pb,w
  1489  0288  3E01               	addlw	1
  1490  0289  0084               	movwf	4
  1491  028A  1383               	bcf	3,7	;select IRP bank0
  1492  028B  0880               	movf	0,f
  1493  028C  1903               	skipnz
  1494  028D  2A96               	goto	l4580
  1495  028E  3030               	movlw	48
  1496  028F  23AB               	fcall	PL3	;call to abstracted procedure
  1497  0290  120A  118A  2100   	fcall	fptable
      +       120A  118A         
  1498  0295  2A9F               	goto	l4584
  1499  0296                     l4580:	
  1500  0296  0832               	movf	__doprnt@pb,w
  1501  0297  0084               	movwf	4
  1502  0298  0800               	movf	0,w
  1503  0299  0084               	movwf	4
  1504  029A  3030               	movlw	48
  1505  029B  0080               	movwf	0
  1506  029C  0832               	movf	__doprnt@pb,w
  1507  029D  0084               	movwf	4
  1508  029E  0A80               	incf	0,f
  1509  029F                     l4584:	
  1510  029F  30FF               	movlw	-1
  1511  02A0  23BF               	call	PL7	;select bank 0
  1512  02A1  07AF               	addwf	__doprnt@width,f
  1513  02A2  1C03               	skipc
  1514  02A3  03B0               	decf	__doprnt@width+1,f
  1515  02A4  2A83               	goto	L1
  1516  02A5                     l4586:	
  1517  02A5  0830               	movf	__doprnt@width+1,w
  1518  02A6  042F               	iorwf	__doprnt@width,w
  1519  02A7  1903               	skipnz
  1520  02A8  2ACA               	goto	l4598
  1521  02A9                     l4588:	
  1522  02A9  0832               	movf	__doprnt@pb,w
  1523  02AA  3E01               	addlw	1
  1524  02AB  0084               	movwf	4
  1525  02AC  1383               	bcf	3,7	;select IRP bank0
  1526  02AD  0880               	movf	0,f
  1527  02AE  1903               	skipnz
  1528  02AF  2AB8               	goto	l4592
  1529  02B0  3020               	movlw	32
  1530  02B1  23AB               	fcall	PL3	;call to abstracted procedure
  1531  02B2  120A  118A  2100   	fcall	fptable
      +       120A  118A         
  1532  02B7  2AC1               	goto	l4596
  1533  02B8                     l4592:	
  1534  02B8  0832               	movf	__doprnt@pb,w
  1535  02B9  0084               	movwf	4
  1536  02BA  0800               	movf	0,w
  1537  02BB  0084               	movwf	4
  1538  02BC  3020               	movlw	32
  1539  02BD  0080               	movwf	0
  1540  02BE  0832               	movf	__doprnt@pb,w
  1541  02BF  0084               	movwf	4
  1542  02C0  0A80               	incf	0,f
  1543  02C1                     l4596:	
  1544  02C1  30FF               	movlw	-1
  1545  02C2  23BF               	call	PL7	;select bank 0
  1546  02C3  07AF               	addwf	__doprnt@width,f
  1547  02C4  1C03               	skipc
  1548  02C5  03B0               	decf	__doprnt@width+1,f
  1549  02C6  0830               	movf	__doprnt@width+1,w
  1550  02C7  042F               	iorwf	__doprnt@width,w
  1551  02C8  1D03               	skipz
  1552  02C9  2AA9               	goto	l4588
  1553  02CA                     l4598:	
  1554  02CA  082E               	movf	__doprnt@flag,w
  1555  02CB  3903               	andlw	3
  1556  02CC  1903               	btfsc	3,2
  1557  02CD  2AE3               	goto	l4608
  1558  02CE  0832               	movf	__doprnt@pb,w
  1559  02CF  3E01               	addlw	1
  1560  02D0  0084               	movwf	4
  1561  02D1  1383               	bcf	3,7	;select IRP bank0
  1562  02D2  0880               	movf	0,f
  1563  02D3  1903               	skipnz
  1564  02D4  2ADD               	goto	l4604
  1565  02D5  302D               	movlw	45
  1566  02D6  23AB               	fcall	PL3	;call to abstracted procedure
  1567  02D7  120A  118A  2100   	fcall	fptable
      +       120A  118A         
  1568  02DC  2AE3               	goto	l4608
  1569  02DD                     l4604:	
  1570  02DD  0832               	movf	__doprnt@pb,w
  1571  02DE  0084               	movwf	4
  1572  02DF  0800               	movf	0,w
  1573  02E0  23B8  120A  118A   	fcall	PL6	;call to abstracted procedure
  1574  02E3                     l4608:	
  1575  02E3  23BF               	call	PL7	;select bank 0
  1576  02E4  0831               	movf	__doprnt@c,w
  1577  02E5  00A9               	movwf	__doprnt@prec
  1578  02E6  2B20               	goto	l4620
  1579  02E7                     l4610:	
  1580  02E7  300A               	movlw	10
  1581  02E8  00A0               	movwf	?___lwmod
  1582  02E9  01A1               	clrf	?___lwmod+1
  1583  02EA  1003               	clrc
  1584  02EB  0D29               	rlf	__doprnt@prec,w
  1585  02EC  3E01               	addlw	low (_dpowers-__stringbase)
  1586  02ED  0084               	movwf	4
  1587  02EE  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1588  02F3  00F3               	movwf	?___lwdiv
  1589  02F4  120A  118A  201B   	fcall	stringdir
      +       120A  118A         
  1590  02F9  00F4               	movwf	?___lwdiv+1
  1591  02FA  082B               	movf	__doprnt@_val+1,w
  1592  02FB  00F6               	movwf	?___lwdiv+3
  1593  02FC  082A               	movf	__doprnt@_val,w
  1594  02FD  00F5               	movwf	?___lwdiv+2
  1595  02FE  234F  120A  118A   	fcall	___lwdiv
  1596  0301  0874               	movf	?___lwdiv+1,w
  1597  0302  00A3               	movwf	?___lwmod+3
  1598  0303  0873               	movf	?___lwdiv,w
  1599  0304  00A2               	movwf	?___lwmod+2
  1600  0305  2379  120A  118A   	fcall	___lwmod
  1601  0308  0820               	movf	?___lwmod,w
  1602  0309  3E30               	addlw	48
  1603  030A  00B1               	movwf	__doprnt@c
  1604  030B  0832               	movf	__doprnt@pb,w
  1605  030C  3E01               	addlw	1
  1606  030D  0084               	movwf	4
  1607  030E  1383               	bcf	3,7	;select IRP bank0
  1608  030F  0880               	movf	0,f
  1609  0310  1903               	skipnz
  1610  0311  2B1A               	goto	l4616
  1611  0312  0831               	movf	__doprnt@c,w
  1612  0313  23AB               	fcall	PL3	;call to abstracted procedure
  1613  0314  120A  118A  2100   	fcall	fptable
      +       120A  118A         
  1614  0319  2B20               	goto	l4620
  1615  031A                     l4616:	
  1616  031A  0832               	movf	__doprnt@pb,w
  1617  031B  0084               	movwf	4
  1618  031C  0800               	movf	0,w
  1619  031D  23B1  120A  118A   	fcall	PL4	;call to abstracted procedure
  1620  0320                     l4620:	
  1621  0320  23BF               	call	PL7	;select bank 0
  1622  0321  03A9               	decf	__doprnt@prec,f
  1623  0322  0F29               	incfsz	__doprnt@prec,w
  1624  0323  2AE7               	goto	l4610
  1625  0324  2981               	goto	l4622
  1626  0325                     l4624:	
  1627  0325  01A4               	clrf	?__doprnt
  1628  0326  01A5               	clrf	?__doprnt+1
  1629  0327  0008               	return
  1630  0328                     __end_of__doprnt:	
  1631  0328                     __ptext414:	
  1632 ;; =============== function ___wmul ends ============
  1633                           
  1634                           
  1635 ;; *************** function _isdigit *****************
  1636 ;; Defined at:
  1637 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  c               1    wreg     unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  c               1    4[COMMON] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;		None               void
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0
  1646 ;; Tracked objects:
  1647 ;;		On entry : 60/0
  1648 ;;		On exit  : 60/0
  1649 ;;		Unchanged: FFF9F/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       0       0       0       0
  1652 ;;      Locals:         2       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0
  1654 ;;      Totals:         2       0       0       0       0
  1655 ;;Total ram usage:        2 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    1
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		__doprnt
  1662 ;;		_atoi
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665  0328                     _isdigit:	
  1666                           
  1667                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1668                           ;isdigit@c stored from wreg
  1669  0328  00F4               	movwf	isdigit@c
  1670  0329  303A               	movlw	58
  1671  032A  01F3               	clrf	_isdigit$3692
  1672  032B  0274               	subwf	isdigit@c,w
  1673  032C  1803               	skipnc
  1674  032D  2B34               	goto	l4264
  1675  032E  3030               	movlw	48
  1676  032F  0274               	subwf	isdigit@c,w
  1677  0330  1C03               	skipc
  1678  0331  2B34               	goto	l4264
  1679  0332  01F3               	clrf	_isdigit$3692
  1680  0333  0AF3               	incf	_isdigit$3692,f
  1681  0334                     l4264:	
  1682  0334  0C73               	rrf	_isdigit$3692,w
  1683  0335  0008               	return
  1684  0336                     __end_of_isdigit:	
  1685  0336                     __ptext413:	
  1686 ;; =============== function ___lwdiv ends ============
  1687                           
  1688                           
  1689 ;; *************** function ___wmul *****************
  1690 ;; Defined at:
  1691 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  multiplier      2    3[COMMON] unsigned int 
  1694 ;;  multiplicand    2    5[COMMON] unsigned int 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  product         2    7[COMMON] unsigned int 
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  2    3[COMMON] unsigned int 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, status,0
  1701 ;; Tracked objects:
  1702 ;;		On entry : 60/0
  1703 ;;		On exit  : 60/0
  1704 ;;		Unchanged: FFF9F/0
  1705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1706 ;;      Params:         4       0       0       0       0
  1707 ;;      Locals:         2       0       0       0       0
  1708 ;;      Temps:          0       0       0       0       0
  1709 ;;      Totals:         6       0       0       0       0
  1710 ;;Total ram usage:        6 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    1
  1713 ;; This function calls:
  1714 ;;		Nothing
  1715 ;; This function is called by:
  1716 ;;		__doprnt
  1717 ;;		_atoi
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720  0336                     ___wmul:	
  1721                           
  1722                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1723  0336  01F7               	clrf	___wmul@product
  1724  0337  01F8               	clrf	___wmul@product+1
  1725  0338                     l4270:	
  1726  0338  1C73               	btfss	___wmul@multiplier,0
  1727  0339  2B40               	goto	l4274
  1728  033A  0875               	movf	___wmul@multiplicand,w
  1729  033B  07F7               	addwf	___wmul@product,f
  1730  033C  1803               	skipnc
  1731  033D  0AF8               	incf	___wmul@product+1,f
  1732  033E  0876               	movf	___wmul@multiplicand+1,w
  1733  033F  07F8               	addwf	___wmul@product+1,f
  1734  0340                     l4274:	
  1735  0340  1003               	clrc
  1736  0341  0DF5               	rlf	___wmul@multiplicand,f
  1737  0342  0DF6               	rlf	___wmul@multiplicand+1,f
  1738  0343  1003               	clrc
  1739  0344  0CF4               	rrf	___wmul@multiplier+1,f
  1740  0345  0CF3               	rrf	___wmul@multiplier,f
  1741  0346  0874               	movf	___wmul@multiplier+1,w
  1742  0347  0473               	iorwf	___wmul@multiplier,w
  1743  0348  1D03               	skipz
  1744  0349  2B38               	goto	l4270
  1745  034A  0878               	movf	___wmul@product+1,w
  1746  034B  00F4               	movwf	?___wmul+1
  1747  034C  0877               	movf	___wmul@product,w
  1748  034D  00F3               	movwf	?___wmul
  1749  034E  0008               	return
  1750  034F                     __end_of___wmul:	
  1751  034F                     __ptext412:	
  1752 ;; =============== function ___lwmod ends ============
  1753                           
  1754                           
  1755 ;; *************** function ___lwdiv *****************
  1756 ;; Defined at:
  1757 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  divisor         2    3[COMMON] unsigned int 
  1760 ;;  dividend        2    5[COMMON] unsigned int 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  quotient        2    7[COMMON] unsigned int 
  1763 ;;  counter         1    9[COMMON] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  2    3[COMMON] unsigned int 
  1766 ;; Registers used:
  1767 ;;		wreg, status,2, status,0
  1768 ;; Tracked objects:
  1769 ;;		On entry : 60/0
  1770 ;;		On exit  : 60/0
  1771 ;;		Unchanged: FFF9F/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1773 ;;      Params:         4       0       0       0       0
  1774 ;;      Locals:         3       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0
  1776 ;;      Totals:         7       0       0       0       0
  1777 ;;Total ram usage:        7 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    1
  1780 ;; This function calls:
  1781 ;;		Nothing
  1782 ;; This function is called by:
  1783 ;;		__doprnt
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786  034F                     ___lwdiv:	
  1787                           
  1788                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1789  034F  01F7               	clrf	___lwdiv@quotient
  1790  0350  01F8               	clrf	___lwdiv@quotient+1
  1791  0351  0874               	movf	___lwdiv@divisor+1,w
  1792  0352  0473               	iorwf	___lwdiv@divisor,w
  1793  0353  1903               	skipnz
  1794  0354  2B74               	goto	l4306
  1795  0355  01F9               	clrf	___lwdiv@counter
  1796  0356                     L4:	
  1797  0356  0AF9               	incf	___lwdiv@counter,f
  1798  0357  1BF4               	btfsc	___lwdiv@divisor+1,7
  1799  0358  2B5D               	goto	l4294
  1800  0359  1003               	clrc
  1801  035A  0DF3               	rlf	___lwdiv@divisor,f
  1802  035B  0DF4               	rlf	___lwdiv@divisor+1,f
  1803  035C  2B56               	goto	L4
  1804  035D                     l4294:	
  1805  035D  1003               	clrc
  1806  035E  0DF7               	rlf	___lwdiv@quotient,f
  1807  035F  0DF8               	rlf	___lwdiv@quotient+1,f
  1808  0360  0874               	movf	___lwdiv@divisor+1,w
  1809  0361  0276               	subwf	___lwdiv@dividend+1,w
  1810  0362  1D03               	skipz
  1811  0363  2B66               	goto	u905
  1812  0364  0873               	movf	___lwdiv@divisor,w
  1813  0365  0275               	subwf	___lwdiv@dividend,w
  1814  0366                     u905:	
  1815  0366  1C03               	skipc
  1816  0367  2B70               	goto	L5
  1817  0368  0873               	movf	___lwdiv@divisor,w
  1818  0369  02F5               	subwf	___lwdiv@dividend,f
  1819  036A  0874               	movf	___lwdiv@divisor+1,w
  1820  036B  1C03               	skipc
  1821  036C  03F6               	decf	___lwdiv@dividend+1,f
  1822  036D  02F6               	subwf	___lwdiv@dividend+1,f
  1823  036E  1477               	bsf	___lwdiv@quotient,0
  1824  036F  1003               	clrc
  1825  0370                     L5:	
  1826  0370  0CF4               	rrf	___lwdiv@divisor+1,f
  1827  0371  0CF3               	rrf	___lwdiv@divisor,f
  1828  0372  0BF9               	decfsz	___lwdiv@counter,f
  1829  0373  2B5D               	goto	l4294
  1830  0374                     l4306:	
  1831  0374  0878               	movf	___lwdiv@quotient+1,w
  1832  0375  00F4               	movwf	?___lwdiv+1
  1833  0376  0877               	movf	___lwdiv@quotient,w
  1834  0377  00F3               	movwf	?___lwdiv
  1835  0378  0008               	return
  1836  0379                     __end_of___lwdiv:	
  1837  0379                     __ptext411:	
  1838 ;; =============== function _atoi ends ============
  1839                           
  1840                           
  1841 ;; *************** function ___lwmod *****************
  1842 ;; Defined at:
  1843 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  divisor         2    0[BANK0 ] unsigned int 
  1846 ;;  dividend        2    2[BANK0 ] unsigned int 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  counter         1   10[COMMON] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  2    0[BANK0 ] unsigned int 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 60/0
  1855 ;;		On exit  : 60/0
  1856 ;;		Unchanged: FFF9F/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0       4       0       0       0
  1859 ;;      Locals:         1       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0
  1861 ;;      Totals:         1       4       0       0       0
  1862 ;;Total ram usage:        5 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		__doprnt
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871  0379                     ___lwmod:	
  1872                           
  1873                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1874  0379  0821               	movf	___lwmod@divisor+1,w
  1875  037A  0420               	iorwf	___lwmod@divisor,w
  1876  037B  1903               	skipnz
  1877  037C  2B98               	goto	l4326
  1878  037D  01FA               	clrf	___lwmod@counter
  1879  037E                     L2:	
  1880  037E  0AFA               	incf	___lwmod@counter,f
  1881  037F  1BA1               	btfsc	___lwmod@divisor+1,7
  1882  0380  2B85               	goto	l4318
  1883  0381  1003               	clrc
  1884  0382  0DA0               	rlf	___lwmod@divisor,f
  1885  0383  0DA1               	rlf	___lwmod@divisor+1,f
  1886  0384  2B7E               	goto	L2
  1887  0385                     l4318:	
  1888  0385  0821               	movf	___lwmod@divisor+1,w
  1889  0386  0223               	subwf	___lwmod@dividend+1,w
  1890  0387  1D03               	skipz
  1891  0388  2B8B               	goto	u945
  1892  0389  0820               	movf	___lwmod@divisor,w
  1893  038A  0222               	subwf	___lwmod@dividend,w
  1894  038B                     u945:	
  1895  038B  1C03               	skipc
  1896  038C  2B94               	goto	L3
  1897  038D  0820               	movf	___lwmod@divisor,w
  1898  038E  02A2               	subwf	___lwmod@dividend,f
  1899  038F  0821               	movf	___lwmod@divisor+1,w
  1900  0390  1C03               	skipc
  1901  0391  03A3               	decf	___lwmod@dividend+1,f
  1902  0392  02A3               	subwf	___lwmod@dividend+1,f
  1903  0393  1003               	clrc
  1904  0394                     L3:	
  1905  0394  0CA1               	rrf	___lwmod@divisor+1,f
  1906  0395  0CA0               	rrf	___lwmod@divisor,f
  1907  0396  0BFA               	decfsz	___lwmod@counter,f
  1908  0397  2B85               	goto	l4318
  1909  0398                     l4326:	
  1910  0398  0823               	movf	___lwmod@dividend+1,w
  1911  0399  00A1               	movwf	?___lwmod+1
  1912  039A  0822               	movf	___lwmod@dividend,w
  1913  039B  00A0               	movwf	?___lwmod
  1914  039C  0008               	return
  1915  039D                     __end_of___lwmod:	
  1916  039D                     PL2:	
  1917  039D  0084               	movwf	4
  1918  039E  1383               	bcf	3,7	;select IRP bank0
  1919  039F  0800               	movf	0,w
  1920  03A0  00A6               	movwf	??__doprnt
  1921  03A1  3002               	movlw	2
  1922  03A2  0780               	addwf	0,f
  1923  03A3  0826               	movf	??__doprnt,w
  1924  03A4  0084               	movwf	4
  1925  03A5  0800               	movf	0,w
  1926  03A6  00AA               	movwf	__doprnt@_val
  1927  03A7  0A84               	incf	4,f
  1928  03A8  0800               	movf	0,w
  1929  03A9  00AB               	movwf	__doprnt@_val+1
  1930  03AA  0008               	return
  1931  03AB                     PL3:	
  1932  03AB  00A1               	movwf	?_putch
  1933  03AC  0832               	movf	__doprnt@pb,w
  1934  03AD  3E01               	addlw	1
  1935  03AE  0084               	movwf	4
  1936  03AF  0800               	movf	0,w
  1937  03B0  0008               	return
  1938  03B1                     PL4:	
  1939  03B1  0084               	movwf	4
  1940  03B2  0831               	movf	__doprnt@c,w
  1941  03B3  0080               	movwf	0
  1942  03B4  0832               	movf	__doprnt@pb,w
  1943  03B5  0084               	movwf	4
  1944  03B6  0A80               	incf	0,f
  1945  03B7  0008               	return
  1946  03B8                     PL6:	
  1947  03B8  0084               	movwf	4
  1948  03B9  302D               	movlw	45
  1949  03BA  0080               	movwf	0
  1950  03BB  0832               	movf	__doprnt@pb,w
  1951  03BC  0084               	movwf	4
  1952  03BD  0A80               	incf	0,f
  1953  03BE  0008               	return
  1954  03BF                     PL7:	
  1955  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  1956  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  1957  03C1  0008               	return
  1958                           
  1959                           	psect	text403
  1960  03C2                     __ptext403:	
  1961 ;; =============== function __doprnt ends ============
  1962                           
  1963                           
  1964 ;; *************** function _putch *****************
  1965 ;; Defined at:
  1966 ;;		line 93 in file "D:\TTVXL\Project TTVXL\BT03week16ttvxl\BT03week16ttvxl.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  c               1    1[BANK0 ] unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;		None               void
  1973 ;; Registers used:
  1974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 160/0
  1977 ;;		On exit  : 60/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       1       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0
  1983 ;;      Totals:         0       1       0       0       0
  1984 ;;Total ram usage:        1 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    4
  1987 ;; This function calls:
  1988 ;;		_lcd_putc
  1989 ;; This function is called by:
  1990 ;;		_printf
  1991 ;;		__doprnt
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994  03C2                     _putch:	
  1995                           
  1996                           ;BT03week16ttvxl.c: 94: lcd_putc(c);
  1997                           
  1998                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1999  03C2  0821               	movf	putch@c,w
  2000  03C3  2BDC               	ljmp	_lcd_putc
  2001  03C4                     __end_of_putch:	
  2002  03C4                     __ptext405:	
  2003 ;; =============== function _lcd_putc ends ============
  2004                           
  2005                           
  2006 ;; *************** function _lcd_gotoxy *****************
  2007 ;; Defined at:
  2008 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  col             1    wreg     unsigned char 
  2011 ;;  row             1    8[COMMON] unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  col             1    9[COMMON] unsigned char 
  2014 ;;  address         1   10[COMMON] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;		None               void
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 60/0
  2021 ;;		On exit  : 60/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2024 ;;      Params:         1       0       0       0       0
  2025 ;;      Locals:         2       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0
  2027 ;;      Totals:         3       0       0       0       0
  2028 ;;Total ram usage:        3 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:    2
  2031 ;; This function calls:
  2032 ;;		_lcd_put_byte
  2033 ;;		_lcd_busy
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;;		_lcd_putc
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039  03C4                     _lcd_gotoxy:	
  2040                           
  2041                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  2042                           ;lcd_gotoxy@col stored from wreg
  2043  03C4  00F9               	movwf	lcd_gotoxy@col
  2044                           
  2045                           ;lcd(16).c: 163: unsigned char address;
  2046                           ;lcd(16).c: 165: if(row!=0)
  2047  03C5  0878               	movf	lcd_gotoxy@row,w
  2048  03C6  1903               	btfsc	3,2
  2049  03C7  2BCB               	goto	l4464
  2050                           
  2051                           ;lcd(16).c: 166: address=0x40;
  2052  03C8  3040               	movlw	64
  2053  03C9  00FA               	movwf	lcd_gotoxy@address
  2054  03CA  2BCC               	goto	l4466
  2055  03CB                     l4464:	
  2056                           
  2057                           ;lcd(16).c: 167: else
  2058                           ;lcd(16).c: 168: address=0;
  2059  03CB  01FA               	clrf	lcd_gotoxy@address
  2060  03CC                     l4466:	
  2061                           
  2062                           ;lcd(16).c: 170: address += col;
  2063  03CC  0879               	movf	lcd_gotoxy@col,w
  2064  03CD  07FA               	addwf	lcd_gotoxy@address,f
  2065                           
  2066                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  2067  03CE  087A               	movf	lcd_gotoxy@address,w
  2068  03CF  3880               	iorlw	128
  2069  03D0  00F3               	movwf	?_lcd_put_byte
  2070  03D1  3000               	movlw	0
  2071  03D2  24C6  120A  118A   	fcall	_lcd_put_byte
  2072  03D5                     l4470:	
  2073                           ;lcd(16).c: 172: while(lcd_busy());
  2074                           
  2075  03D5  2556  120A  118A   	fcall	_lcd_busy
  2076  03D8  3800               	iorlw	0
  2077  03D9  1903               	btfsc	3,2
  2078  03DA  0008               	return
  2079  03DB  2BD5               	goto	l4470
  2080  03DC                     __end_of_lcd_gotoxy:	
  2081  03DC                     __ptext404:	
  2082 ;; =============== function _putch ends ============
  2083                           
  2084                           
  2085 ;; *************** function _lcd_putc *****************
  2086 ;; Defined at:
  2087 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  c               1    wreg     unsigned char 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  c               1    0[BANK0 ] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;		None               void
  2094 ;; Registers used:
  2095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 160/0
  2098 ;;		On exit  : 60/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2101 ;;      Params:         0       0       0       0       0
  2102 ;;      Locals:         0       1       0       0       0
  2103 ;;      Temps:          0       0       0       0       0
  2104 ;;      Totals:         0       1       0       0       0
  2105 ;;Total ram usage:        1 bytes
  2106 ;; Hardware stack levels used:    1
  2107 ;; Hardware stack levels required when called:    3
  2108 ;; This function calls:
  2109 ;;		_lcd_put_byte
  2110 ;;		_lcd_busy
  2111 ;;		_lcd_gotoxy
  2112 ;;		_isprint
  2113 ;; This function is called by:
  2114 ;;		_putch
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117  03DC                     _lcd_putc:	
  2118                           
  2119                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2120                           ;lcd_putc@c stored from wreg
  2121  03DC  00A0               	movwf	lcd_putc@c
  2122                           
  2123                           ;lcd(16).c: 144: switch(c){
  2124  03DD  2C02               	goto	l4488
  2125  03DE                     l4474:	
  2126  03DE  3000               	movlw	0
  2127                           
  2128                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  2129  03DF  01F3               	clrf	?_lcd_put_byte
  2130  03E0  0AF3               	incf	?_lcd_put_byte,f
  2131  03E1  24C6  120A  118A   	fcall	_lcd_put_byte
  2132  03E4                     l4476:	
  2133                           ;lcd(16).c: 147: while(lcd_busy());
  2134                           
  2135  03E4  2556  120A  118A   	fcall	_lcd_busy
  2136  03E7  3800               	iorlw	0
  2137  03E8  1903               	btfsc	3,2
  2138  03E9  0008               	return
  2139  03EA  2BE4               	goto	l4476
  2140  03EB                     l4478:	
  2141  03EB  3000               	movlw	0
  2142                           
  2143                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  2144  03EC  01F8               	clrf	?_lcd_gotoxy
  2145  03ED  0AF8               	incf	?_lcd_gotoxy,f
  2146  03EE  2BC4               	ljmp	_lcd_gotoxy
  2147  03EF                     l4480:	
  2148                           ;lcd(16).c: 151: break;
  2149                           
  2150                           
  2151                           ;lcd(16).c: 153: if(isprint(c)){
  2152  03EF  0820               	movf	lcd_putc@c,w
  2153  03F0  257D  120A  118A   	fcall	_isprint
  2154  03F3  1C03               	btfss	3,0
  2155  03F4  0008               	return
  2156                           
  2157                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  2158  03F5  0820               	movf	lcd_putc@c,w
  2159  03F6  00F3               	movwf	?_lcd_put_byte
  2160  03F7  3001               	movlw	1
  2161  03F8  24C6  120A  118A   	fcall	_lcd_put_byte
  2162  03FB                     l4484:	
  2163                           ;lcd(16).c: 155: while(lcd_busy());
  2164                           
  2165  03FB  2556  120A  118A   	fcall	_lcd_busy
  2166  03FE  3800               	iorlw	0
  2167  03FF  1903               	btfsc	3,2
  2168  0400  0008               	return
  2169  0401  2BFB               	goto	l4484
  2170  0402                     l4488:	
  2171  0402  0820               	movf	lcd_putc@c,w
  2172                           
  2173                           ; Switch size 1, requested type "space"
  2174                           ; Number of cases is 2, Range of values is 10 to 12
  2175                           ; switch strategies available:
  2176                           ; Name         Instructions Cycles
  2177                           ; simple_byte            7     4 (average)
  2178                           ; direct_byte           20    11 (fixed)
  2179                           ; jumptable            263     9 (fixed)
  2180                           ;	Chosen strategy is simple_byte
  2181  0403  3A0A               	xorlw	10	; case 10
  2182  0404  1903               	skipnz
  2183  0405  2BEB               	goto	l4478
  2184  0406  3A06               	xorlw	6	; case 12
  2185  0407  1903               	skipnz
  2186  0408  2BDE               	goto	l4474
  2187  0409  2BEF               	goto	l4480
  2188  040A  0008               	return
  2189  040B                     __end_of_lcd_putc:	
  2190  040B                     __ptext406:	
  2191 ;; =============== function _lcd_gotoxy ends ============
  2192                           
  2193                           
  2194 ;; *************** function _lcd_init *****************
  2195 ;; Defined at:
  2196 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  i               1    0        unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;		None               void
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 17F/60
  2207 ;;		On exit  : 60/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0
  2212 ;;      Temps:          3       0       0       0       0
  2213 ;;      Totals:         3       0       0       0       0
  2214 ;;Total ram usage:        3 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    2
  2217 ;; This function calls:
  2218 ;;		_lcd_put_byte
  2219 ;;		_lcd_busy
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224  040B                     _lcd_init:	
  2225                           
  2226                           ;lcd(16).c: 6: unsigned char i;
  2227                           ;lcd(16).c: 7: TRISD3 = 0;
  2228                           
  2229                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2230  040B  1303               	bcf	3,6	;RP1=0, select bank1
  2231  040C  1188               	bcf	8,3
  2232                           
  2233                           ;lcd(16).c: 8: TRISD1 = 0;
  2234  040D  1088               	bcf	8,1
  2235                           
  2236                           ;lcd(16).c: 9: TRISD2 = 0;
  2237  040E  1108               	bcf	8,2
  2238                           
  2239                           ;lcd(16).c: 10: TRISD4 = 0;
  2240  040F  1208               	bcf	8,4
  2241                           
  2242                           ;lcd(16).c: 11: TRISD5 = 0;
  2243  0410  1288               	bcf	8,5
  2244                           
  2245                           ;lcd(16).c: 12: TRISD6 = 0;
  2246  0411  1308               	bcf	8,6
  2247                           
  2248                           ;lcd(16).c: 13: TRISD7 = 0;
  2249  0412  1388               	bcf	8,7
  2250                           
  2251                           ;lcd(16).c: 14: RD3 = 0;
  2252  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0414  3003               	movlw	3
  2254  0415  1188               	bcf	8,3
  2255                           
  2256                           ;lcd(16).c: 15: RD1 = 0;
  2257  0416  1088               	bcf	8,1
  2258                           
  2259                           ;lcd(16).c: 16: RD2 = 0;
  2260  0417  1108               	bcf	8,2
  2261                           
  2262                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  2263  0418  00FA               	movwf	??_lcd_init+2
  2264  0419  308A               	movlw	138
  2265  041A  00F9               	movwf	??_lcd_init+1
  2266  041B  3056               	movlw	86
  2267  041C  00F8               	movwf	??_lcd_init
  2268  041D                     u1577:	
  2269  041D  0BF8               	decfsz	??_lcd_init,f
  2270  041E  2C1D               	goto	u1577
  2271  041F  0BF9               	decfsz	??_lcd_init+1,f
  2272  0420  2C1D               	goto	u1577
  2273  0421  0BFA               	decfsz	??_lcd_init+2,f
  2274  0422  2C1D               	goto	u1577
  2275  0423  2C24               	nop2
  2276                           
  2277                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  2278  0424  3030               	movlw	48
  2279  0425  00F3               	movwf	?_lcd_put_byte
  2280  0426  3000               	movlw	0
  2281  0427  24C6  120A  118A   	fcall	_lcd_put_byte
  2282                           
  2283                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  2284  042A  3002               	movlw	2
  2285  042B  00FA               	movwf	??_lcd_init+2
  2286  042C  3045               	movlw	69
  2287  042D  00F9               	movwf	??_lcd_init+1
  2288  042E  30A9               	movlw	169
  2289  042F  00F8               	movwf	??_lcd_init
  2290  0430                     u1587:	
  2291  0430  0BF8               	decfsz	??_lcd_init,f
  2292  0431  2C30               	goto	u1587
  2293  0432  0BF9               	decfsz	??_lcd_init+1,f
  2294  0433  2C30               	goto	u1587
  2295  0434  0BFA               	decfsz	??_lcd_init+2,f
  2296  0435  2C30               	goto	u1587
  2297  0436  2C37               	nop2
  2298                           
  2299                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  2300  0437  3030               	movlw	48
  2301  0438  00F3               	movwf	?_lcd_put_byte
  2302  0439  3000               	movlw	0
  2303  043A  24C6  120A  118A   	fcall	_lcd_put_byte
  2304                           
  2305                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  2306  043D  3002               	movlw	2
  2307  043E  00FA               	movwf	??_lcd_init+2
  2308  043F  3045               	movlw	69
  2309  0440  00F9               	movwf	??_lcd_init+1
  2310  0441  30A9               	movlw	169
  2311  0442  00F8               	movwf	??_lcd_init
  2312  0443                     u1597:	
  2313  0443  0BF8               	decfsz	??_lcd_init,f
  2314  0444  2C43               	goto	u1597
  2315  0445  0BF9               	decfsz	??_lcd_init+1,f
  2316  0446  2C43               	goto	u1597
  2317  0447  0BFA               	decfsz	??_lcd_init+2,f
  2318  0448  2C43               	goto	u1597
  2319  0449  2C4A               	nop2
  2320                           
  2321                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  2322  044A  3032               	movlw	50
  2323  044B  00F3               	movwf	?_lcd_put_byte
  2324  044C  3000               	movlw	0
  2325  044D  24C6  120A  118A   	fcall	_lcd_put_byte
  2326                           
  2327                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  2328  0450  3003               	movlw	3
  2329  0451  00FA               	movwf	??_lcd_init+2
  2330  0452  308A               	movlw	138
  2331  0453  00F9               	movwf	??_lcd_init+1
  2332  0454  3056               	movlw	86
  2333  0455  00F8               	movwf	??_lcd_init
  2334  0456                     u1607:	
  2335  0456  0BF8               	decfsz	??_lcd_init,f
  2336  0457  2C56               	goto	u1607
  2337  0458  0BF9               	decfsz	??_lcd_init+1,f
  2338  0459  2C56               	goto	u1607
  2339  045A  0BFA               	decfsz	??_lcd_init+2,f
  2340  045B  2C56               	goto	u1607
  2341  045C  2C5D               	nop2
  2342                           
  2343                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  2344  045D  3003               	movlw	3
  2345  045E  00FA               	movwf	??_lcd_init+2
  2346  045F  308A               	movlw	138
  2347  0460  00F9               	movwf	??_lcd_init+1
  2348  0461  3056               	movlw	86
  2349  0462  00F8               	movwf	??_lcd_init
  2350  0463                     u1617:	
  2351  0463  0BF8               	decfsz	??_lcd_init,f
  2352  0464  2C63               	goto	u1617
  2353  0465  0BF9               	decfsz	??_lcd_init+1,f
  2354  0466  2C63               	goto	u1617
  2355  0467  0BFA               	decfsz	??_lcd_init+2,f
  2356  0468  2C63               	goto	u1617
  2357  0469  2C6A               	nop2
  2358                           
  2359                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  2360  046A  3003               	movlw	3
  2361  046B  00FA               	movwf	??_lcd_init+2
  2362  046C  308A               	movlw	138
  2363  046D  00F9               	movwf	??_lcd_init+1
  2364  046E  3056               	movlw	86
  2365  046F  00F8               	movwf	??_lcd_init
  2366  0470                     u1627:	
  2367  0470  0BF8               	decfsz	??_lcd_init,f
  2368  0471  2C70               	goto	u1627
  2369  0472  0BF9               	decfsz	??_lcd_init+1,f
  2370  0473  2C70               	goto	u1627
  2371  0474  0BFA               	decfsz	??_lcd_init+2,f
  2372  0475  2C70               	goto	u1627
  2373  0476  2C77               	nop2
  2374  0477                     l4434:	
  2375                           ;lcd(16).c: 30: while(lcd_busy());
  2376                           
  2377  0477  2556  120A  118A   	fcall	_lcd_busy
  2378  047A  3800               	iorlw	0
  2379  047B  1D03               	skipz
  2380  047C  2C77               	goto	l4434
  2381                           
  2382                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  2383  047D  3028               	movlw	40
  2384  047E  00F3               	movwf	?_lcd_put_byte
  2385  047F  3000               	movlw	0
  2386  0480  24C6  120A  118A   	fcall	_lcd_put_byte
  2387  0483                     l4438:	
  2388                           ;lcd(16).c: 32: while(lcd_busy());
  2389                           
  2390  0483  2556  120A  118A   	fcall	_lcd_busy
  2391  0486  3800               	iorlw	0
  2392  0487  1D03               	skipz
  2393  0488  2C83               	goto	l4438
  2394                           
  2395                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  2396  0489  3008               	movlw	8
  2397  048A  00F3               	movwf	?_lcd_put_byte
  2398  048B  3000               	movlw	0
  2399  048C  24C6  120A  118A   	fcall	_lcd_put_byte
  2400  048F                     l4442:	
  2401                           ;lcd(16).c: 35: while(lcd_busy());
  2402                           
  2403  048F  2556  120A  118A   	fcall	_lcd_busy
  2404  0492  3800               	iorlw	0
  2405  0493  1D03               	skipz
  2406  0494  2C8F               	goto	l4442
  2407                           
  2408                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  2409  0495  300C               	movlw	12
  2410  0496  00F3               	movwf	?_lcd_put_byte
  2411  0497  3000               	movlw	0
  2412  0498  24C6  120A  118A   	fcall	_lcd_put_byte
  2413  049B                     l4446:	
  2414                           ;lcd(16).c: 37: while(lcd_busy());
  2415                           
  2416  049B  2556  120A  118A   	fcall	_lcd_busy
  2417  049E  3800               	iorlw	0
  2418  049F  1D03               	skipz
  2419  04A0  2C9B               	goto	l4446
  2420  04A1  3000               	movlw	0
  2421                           
  2422                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  2423  04A2  01F3               	clrf	?_lcd_put_byte
  2424  04A3  0AF3               	incf	?_lcd_put_byte,f
  2425  04A4  24C6  120A  118A   	fcall	_lcd_put_byte
  2426  04A7                     l4450:	
  2427                           ;lcd(16).c: 40: while(lcd_busy());
  2428                           
  2429  04A7  2556  120A  118A   	fcall	_lcd_busy
  2430  04AA  3800               	iorlw	0
  2431  04AB  1D03               	skipz
  2432  04AC  2CA7               	goto	l4450
  2433                           
  2434                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  2435  04AD  3004               	movlw	4
  2436  04AE  00F3               	movwf	?_lcd_put_byte
  2437  04AF  3000               	movlw	0
  2438  04B0  24C6  120A  118A   	fcall	_lcd_put_byte
  2439  04B3                     l4454:	
  2440                           ;lcd(16).c: 42: while(lcd_busy());
  2441                           
  2442  04B3  2556  120A  118A   	fcall	_lcd_busy
  2443  04B6  3800               	iorlw	0
  2444  04B7  1D03               	skipz
  2445  04B8  2CB3               	goto	l4454
  2446  04B9  3000               	movlw	0
  2447                           
  2448                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  2449  04BA  01F3               	clrf	?_lcd_put_byte
  2450  04BB  0AF3               	incf	?_lcd_put_byte,f
  2451  04BC  24C6  120A  118A   	fcall	_lcd_put_byte
  2452  04BF                     l4458:	
  2453                           ;lcd(16).c: 44: while(lcd_busy());
  2454                           
  2455  04BF  2556  120A  118A   	fcall	_lcd_busy
  2456  04C2  3800               	iorlw	0
  2457  04C3  1903               	btfsc	3,2
  2458  04C4  0008               	return
  2459  04C5  2CBF               	goto	l4458
  2460  04C6                     __end_of_lcd_init:	
  2461  04C6                     __ptext408:	
  2462 ;; =============== function _lcd_busy ends ============
  2463                           
  2464                           
  2465 ;; *************** function _lcd_put_byte *****************
  2466 ;; Defined at:
  2467 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  rs              1    wreg     unsigned char 
  2470 ;;  b               1    3[COMMON] unsigned char 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  rs              1    6[COMMON] unsigned char 
  2473 ;;  temp            1    7[COMMON] struct _BYTE_VAL
  2474 ;; Return value:  Size  Location     Type
  2475 ;;		None               void
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 60/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         1       0       0       0       0
  2484 ;;      Locals:         2       0       0       0       0
  2485 ;;      Temps:          2       0       0       0       0
  2486 ;;      Totals:         5       0       0       0       0
  2487 ;;Total ram usage:        5 bytes
  2488 ;; Hardware stack levels used:    1
  2489 ;; Hardware stack levels required when called:    1
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_lcd_init
  2494 ;;		_lcd_putc
  2495 ;;		_lcd_gotoxy
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498  04C6                     _lcd_put_byte:	
  2499                           
  2500                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  2501                           ;lcd_put_byte@rs stored from wreg
  2502  04C6  00F6               	movwf	lcd_put_byte@rs
  2503                           
  2504                           ;lcd(16).c: 107: BYTE_VAL temp;
  2505                           ;lcd(16).c: 109: TRISD4 = 0;
  2506  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  2507  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  2508  04C9  1208               	bcf	8,4
  2509                           
  2510                           ;lcd(16).c: 110: TRISD5 = 0;
  2511  04CA  1288               	bcf	8,5
  2512                           
  2513                           ;lcd(16).c: 111: TRISD6 = 0;
  2514  04CB  1308               	bcf	8,6
  2515                           
  2516                           ;lcd(16).c: 112: TRISD7 = 0;
  2517  04CC  1388               	bcf	8,7
  2518                           
  2519                           ;lcd(16).c: 114: RD1 = 0;
  2520  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2521  04CE  1088               	bcf	8,1
  2522                           
  2523                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  2524  04CF  0876               	movf	lcd_put_byte@rs,w
  2525  04D0  1D03               	skipz
  2526  04D1  1488               	bsf	8,1
  2527                           
  2528                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2529  04D2  3021               	movlw	33
  2530  04D3  00F4               	movwf	??_lcd_put_byte
  2531  04D4                     u1677:	
  2532  04D4  0BF4               	decfsz	??_lcd_put_byte,f
  2533  04D5  2CD4               	goto	u1677
  2534  04D6  2592               	call	PL8	;select bank 0
  2535                           
  2536                           ;lcd(16).c: 118: RD2 = 0;
  2537  04D7  3021               	movlw	33
  2538  04D8  1108               	bcf	8,2
  2539                           
  2540                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2541  04D9  00F4               	movwf	??_lcd_put_byte
  2542  04DA                     u1687:	
  2543  04DA  0BF4               	decfsz	??_lcd_put_byte,f
  2544  04DB  2CDA               	goto	u1687
  2545  04DC  2592               	call	PL8	;select bank 0
  2546                           
  2547                           ;lcd(16).c: 120: RD3 = 0;
  2548  04DD  1188               	bcf	8,3
  2549                           
  2550                           ;lcd(16).c: 122: temp.Val = b;
  2551  04DE  0873               	movf	lcd_put_byte@b,w
  2552  04DF  00F7               	movwf	lcd_put_byte@temp
  2553                           
  2554                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  2555  04E0  0E77               	swapf	lcd_put_byte@temp,w
  2556  04E1  3901               	andlw	1
  2557  04E2  00F4               	movwf	??_lcd_put_byte
  2558  04E3  0C74               	rrf	??_lcd_put_byte,w
  2559  04E4  1C03               	btfss	3,0
  2560  04E5  2CE9               	goto	u1040
  2561  04E6  2592               	call	PL8	;select bank 0
  2562  04E7  1608               	bsf	8,4
  2563  04E8  2CEB               	goto	l4386
  2564  04E9                     u1040:	
  2565  04E9  2592               	call	PL8	;select bank 0
  2566  04EA  1208               	bcf	8,4
  2567  04EB                     l4386:	
  2568                           
  2569                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  2570  04EB  0E77               	swapf	lcd_put_byte@temp,w
  2571  04EC  00F4               	movwf	??_lcd_put_byte
  2572  04ED  0C74               	rrf	??_lcd_put_byte,w
  2573  04EE  3901               	andlw	1
  2574  04EF  00F5               	movwf	??_lcd_put_byte+1
  2575  04F0  0C75               	rrf	??_lcd_put_byte+1,w
  2576  04F1  1C03               	btfss	3,0
  2577  04F2  2CF6               	goto	u1060
  2578  04F3  2592               	call	PL8	;select bank 0
  2579  04F4  1688               	bsf	8,5
  2580  04F5  2CF8               	goto	l4388
  2581  04F6                     u1060:	
  2582  04F6  2592               	call	PL8	;select bank 0
  2583  04F7  1288               	bcf	8,5
  2584  04F8                     l4388:	
  2585                           
  2586                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  2587  04F8  0E77               	swapf	lcd_put_byte@temp,w
  2588  04F9  258B  120A  118A   	fcall	PL5	;call to abstracted procedure
  2589  04FC  1C03               	btfss	3,0
  2590  04FD  2D01               	goto	u1080
  2591  04FE  2592               	call	PL8	;select bank 0
  2592  04FF  1708               	bsf	8,6
  2593  0500  2D03               	goto	l4390
  2594  0501                     u1080:	
  2595  0501  2592               	call	PL8	;select bank 0
  2596  0502  1308               	bcf	8,6
  2597  0503                     l4390:	
  2598                           
  2599                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  2600  0503  0D77               	rlf	lcd_put_byte@temp,w
  2601  0504  0D77               	rlf	lcd_put_byte@temp,w
  2602  0505  3901               	andlw	1
  2603  0506  00F4               	movwf	??_lcd_put_byte
  2604  0507  0C74               	rrf	??_lcd_put_byte,w
  2605  0508  1C03               	btfss	3,0
  2606  0509  2D0D               	goto	u1100
  2607  050A  2592               	call	PL8	;select bank 0
  2608  050B  1788               	bsf	8,7
  2609  050C  2D0F               	goto	u1114
  2610  050D                     u1100:	
  2611  050D  2592               	call	PL8	;select bank 0
  2612  050E  1388               	bcf	8,7
  2613  050F                     u1114:	
  2614                           
  2615                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2616  050F  3021               	movlw	33
  2617  0510  00F4               	movwf	??_lcd_put_byte
  2618  0511                     u1697:	
  2619  0511  0BF4               	decfsz	??_lcd_put_byte,f
  2620  0512  2D11               	goto	u1697
  2621  0513  2592               	call	PL8	;select bank 0
  2622                           
  2623                           ;lcd(16).c: 130: RD3 = 1;
  2624  0514  3021               	movlw	33
  2625  0515  1588               	bsf	8,3
  2626                           
  2627                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2628  0516  00F4               	movwf	??_lcd_put_byte
  2629  0517                     u1707:	
  2630  0517  0BF4               	decfsz	??_lcd_put_byte,f
  2631  0518  2D17               	goto	u1707
  2632  0519  2592               	call	PL8	;select bank 0
  2633                           
  2634                           ;lcd(16).c: 132: RD3 = 0;
  2635  051A  1188               	bcf	8,3
  2636                           
  2637                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  2638  051B  0877               	movf	lcd_put_byte@temp,w
  2639  051C  3901               	andlw	1
  2640  051D  00F4               	movwf	??_lcd_put_byte
  2641  051E  0C74               	rrf	??_lcd_put_byte,w
  2642  051F  1C03               	btfss	3,0
  2643  0520  2D24               	goto	u1120
  2644  0521  2592               	call	PL8	;select bank 0
  2645  0522  1608               	bsf	8,4
  2646  0523  2D26               	goto	l4398
  2647  0524                     u1120:	
  2648  0524  2592               	call	PL8	;select bank 0
  2649  0525  1208               	bcf	8,4
  2650  0526                     l4398:	
  2651                           
  2652                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  2653  0526  0C77               	rrf	lcd_put_byte@temp,w
  2654  0527  3901               	andlw	1
  2655  0528  00F4               	movwf	??_lcd_put_byte
  2656  0529  0C74               	rrf	??_lcd_put_byte,w
  2657  052A  1C03               	btfss	3,0
  2658  052B  2D2F               	goto	u1140
  2659  052C  2592               	call	PL8	;select bank 0
  2660  052D  1688               	bsf	8,5
  2661  052E  2D31               	goto	l4400
  2662  052F                     u1140:	
  2663  052F  2592               	call	PL8	;select bank 0
  2664  0530  1288               	bcf	8,5
  2665  0531                     l4400:	
  2666                           
  2667                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  2668  0531  0C77               	rrf	lcd_put_byte@temp,w
  2669  0532  00F4               	movwf	??_lcd_put_byte
  2670  0533  0C74               	rrf	??_lcd_put_byte,w
  2671  0534  3901               	andlw	1
  2672  0535  00F5               	movwf	??_lcd_put_byte+1
  2673  0536  0C75               	rrf	??_lcd_put_byte+1,w
  2674  0537  1C03               	btfss	3,0
  2675  0538  2D3C               	goto	u1160
  2676  0539  2592               	call	PL8	;select bank 0
  2677  053A  1708               	bsf	8,6
  2678  053B  2D3E               	goto	l4402
  2679  053C                     u1160:	
  2680  053C  2592               	call	PL8	;select bank 0
  2681  053D  1308               	bcf	8,6
  2682  053E                     l4402:	
  2683                           
  2684                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  2685  053E  0C77               	rrf	lcd_put_byte@temp,w
  2686  053F  258B  120A  118A   	fcall	PL5	;call to abstracted procedure
  2687  0542  1C03               	btfss	3,0
  2688  0543  2D47               	goto	u1180
  2689  0544  2592               	call	PL8	;select bank 0
  2690  0545  1788               	bsf	8,7
  2691  0546  2D49               	goto	u1194
  2692  0547                     u1180:	
  2693  0547  2592               	call	PL8	;select bank 0
  2694  0548  1388               	bcf	8,7
  2695  0549                     u1194:	
  2696                           
  2697                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2698  0549  3021               	movlw	33
  2699  054A  00F4               	movwf	??_lcd_put_byte
  2700  054B                     u1717:	
  2701  054B  0BF4               	decfsz	??_lcd_put_byte,f
  2702  054C  2D4B               	goto	u1717
  2703  054D  2592               	call	PL8	;select bank 0
  2704                           
  2705                           ;lcd(16).c: 139: RD3 = 1;
  2706  054E  3021               	movlw	33
  2707  054F  1588               	bsf	8,3
  2708                           
  2709                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2710  0550  00F4               	movwf	??_lcd_put_byte
  2711  0551                     u1727:	
  2712  0551  0BF4               	decfsz	??_lcd_put_byte,f
  2713  0552  2D51               	goto	u1727
  2714  0553  2592               	call	PL8	;select bank 0
  2715                           
  2716                           ;lcd(16).c: 141: RD3 = 0;
  2717  0554  1188               	bcf	8,3
  2718  0555  0008               	return
  2719  0556                     __end_of_lcd_put_byte:	
  2720  0556                     __ptext407:	
  2721 ;; =============== function _lcd_init ends ============
  2722                           
  2723                           
  2724 ;; *************** function _lcd_busy *****************
  2725 ;; Defined at:
  2726 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  busy            1    4[COMMON] unsigned char 
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      unsigned char 
  2733 ;; Registers used:
  2734 ;;		wreg
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 60/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2740 ;;      Params:         0       0       0       0       0
  2741 ;;      Locals:         1       0       0       0       0
  2742 ;;      Temps:          1       0       0       0       0
  2743 ;;      Totals:         2       0       0       0       0
  2744 ;;Total ram usage:        2 bytes
  2745 ;; Hardware stack levels used:    1
  2746 ;; Hardware stack levels required when called:    1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_lcd_init
  2751 ;;		_lcd_putc
  2752 ;;		_lcd_gotoxy
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755  0556                     _lcd_busy:	
  2756                           
  2757                           ;lcd(16).c: 48: unsigned char busy;
  2758                           ;lcd(16).c: 50: TRISD4 = 1;
  2759                           
  2760                           ; Regs used in _lcd_busy: [wreg]
  2761  0556  1683               	bsf	3,5	;RP0=1, select bank1
  2762  0557  1303               	bcf	3,6	;RP1=0, select bank1
  2763  0558  1608               	bsf	8,4
  2764                           
  2765                           ;lcd(16).c: 51: TRISD5 = 1;
  2766  0559  1688               	bsf	8,5
  2767                           
  2768                           ;lcd(16).c: 52: TRISD6 = 1;
  2769  055A  1708               	bsf	8,6
  2770                           
  2771                           ;lcd(16).c: 53: TRISD7 = 1;
  2772  055B  1788               	bsf	8,7
  2773                           
  2774                           ;lcd(16).c: 55: RD2 = 1;
  2775  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2776  055D  3021               	movlw	33
  2777  055E  1508               	bsf	8,2
  2778                           
  2779                           ;lcd(16).c: 56: RD1 = 0;
  2780  055F  1088               	bcf	8,1
  2781                           
  2782                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2783  0560  00F3               	movwf	??_lcd_busy
  2784  0561                     u1637:	
  2785  0561  0BF3               	decfsz	??_lcd_busy,f
  2786  0562  2D61               	goto	u1637
  2787  0563  2592               	call	PL8	;select bank 0
  2788                           
  2789                           ;lcd(16).c: 58: RD3 = 1;
  2790  0564  3021               	movlw	33
  2791  0565  1588               	bsf	8,3
  2792                           
  2793                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2794  0566  00F3               	movwf	??_lcd_busy
  2795  0567                     u1647:	
  2796  0567  0BF3               	decfsz	??_lcd_busy,f
  2797  0568  2D67               	goto	u1647
  2798                           
  2799                           ;lcd(16).c: 61: busy = RD7;
  2800  0569  3000               	movlw	0
  2801  056A  2592               	call	PL8	;select bank 0
  2802  056B  1B88               	btfsc	8,7
  2803  056C  3001               	movlw	1
  2804  056D  00F4               	movwf	lcd_busy@busy
  2805  056E  3021               	movlw	33
  2806                           
  2807                           ;lcd(16).c: 63: RD3 = 0;
  2808  056F  1188               	bcf	8,3
  2809                           
  2810                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2811  0570  00F3               	movwf	??_lcd_busy
  2812  0571                     u1657:	
  2813  0571  0BF3               	decfsz	??_lcd_busy,f
  2814  0572  2D71               	goto	u1657
  2815  0573  2592               	call	PL8	;select bank 0
  2816                           
  2817                           ;lcd(16).c: 65: RD3 = 1;
  2818  0574  3021               	movlw	33
  2819  0575  1588               	bsf	8,3
  2820                           
  2821                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  2822  0576  00F3               	movwf	??_lcd_busy
  2823  0577                     u1667:	
  2824  0577  0BF3               	decfsz	??_lcd_busy,f
  2825  0578  2D77               	goto	u1667
  2826  0579  2592               	call	PL8	;select bank 0
  2827                           
  2828                           ;lcd(16).c: 67: RD3 = 0;
  2829  057A  1188               	bcf	8,3
  2830                           
  2831                           ;lcd(16).c: 70: return busy;
  2832  057B  0874               	movf	lcd_busy@busy,w
  2833  057C  0008               	return
  2834  057D                     __end_of_lcd_busy:	
  2835  057D                     __ptext415:	
  2836 ;; =============== function _isdigit ends ============
  2837                           
  2838                           
  2839 ;; *************** function _isprint *****************
  2840 ;; Defined at:
  2841 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  c               1    wreg     unsigned char 
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  c               1    4[COMMON] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;		None               void
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 160/0
  2852 ;;		On exit  : 160/0
  2853 ;;		Unchanged: FFE9F/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       0       0       0       0
  2856 ;;      Locals:         2       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0
  2858 ;;      Totals:         2       0       0       0       0
  2859 ;;Total ram usage:        2 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    1
  2862 ;; This function calls:
  2863 ;;		Nothing
  2864 ;; This function is called by:
  2865 ;;		_lcd_putc
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868  057D                     _isprint:	
  2869                           
  2870                           ; Regs used in _isprint: [wreg+status,2+status,0]
  2871                           ;isprint@c stored from wreg
  2872  057D  00F4               	movwf	isprint@c
  2873  057E  307F               	movlw	127
  2874  057F  01F3               	clrf	_isprint$3695
  2875  0580  0274               	subwf	isprint@c,w
  2876  0581  1803               	skipnc
  2877  0582  2D89               	goto	l4252
  2878  0583  3020               	movlw	32
  2879  0584  0274               	subwf	isprint@c,w
  2880  0585  1C03               	skipc
  2881  0586  2D89               	goto	l4252
  2882  0587  01F3               	clrf	_isprint$3695
  2883  0588  0AF3               	incf	_isprint$3695,f
  2884  0589                     l4252:	
  2885  0589  0C73               	rrf	_isprint$3695,w
  2886  058A  0008               	return
  2887  058B                     __end_of_isprint:	
  2888  058B                     PL5:	
  2889  058B  00F4               	movwf	??_lcd_put_byte
  2890  058C  0CF4               	rrf	??_lcd_put_byte,f
  2891  058D  0C74               	rrf	??_lcd_put_byte,w
  2892  058E  3901               	andlw	1
  2893  058F  00F5               	movwf	??_lcd_put_byte+1
  2894  0590  0C75               	rrf	??_lcd_put_byte+1,w
  2895  0591  0008               	return
  2896  0592                     PL8:	
  2897  0592  1283               	bcf	3,5	;RP0=0, select bank0
  2898  0593  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0594  0008               	return
  2900                           
  2901                           	psect	text409
  2902  05FF                     __ptext409:	
  2903 ;; =============== function _lcd_put_byte ends ============
  2904                           
  2905                           
  2906 ;; *************** function _send_string *****************
  2907 ;; Defined at:
  2908 ;;		line 74 in file "D:\TTVXL\Project TTVXL\BT03week16ttvxl\BT03week16ttvxl.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  s               2    4[COMMON] PTR const unsigned char 
  2911 ;;		 -> STR_4(3), ket_qua(6), 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;		None               void
  2916 ;; Registers used:
  2917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 60/0
  2920 ;;		On exit  : 60/0
  2921 ;;		Unchanged: FFE9F/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         2       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0
  2926 ;;      Totals:         2       0       0       0       0
  2927 ;;Total ram usage:        2 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    2
  2930 ;; This function calls:
  2931 ;;		_send_char
  2932 ;; This function is called by:
  2933 ;;		_main
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936  05FF                     _send_string:	
  2937  05FF                     l4370:	
  2938                           ;BT03week16ttvxl.c: 75: while(*s){send_char(*s++);}
  2939                           
  2940                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2941                           
  2942  05FF  0875               	movf	send_string@s+1,w
  2943  0600  00FF               	movwf	127
  2944  0601  0874               	movf	send_string@s,w
  2945  0602  0084               	movwf	4
  2946  0603  120A  118A  2011   	fcall	stringtab
      +       120A  118A         
  2947  0608  3800               	iorlw	0
  2948  0609  1903               	btfsc	3,2
  2949  060A  0008               	return
  2950  060B  0875               	movf	send_string@s+1,w
  2951  060C  00FF               	movwf	127
  2952  060D  0874               	movf	send_string@s,w
  2953  060E  0084               	movwf	4
  2954  060F  120A  118A  2011   	fcall	stringtab
      +       120A  118A         
  2955  0614  261B  120A  118A   	fcall	_send_char
  2956  0617  0AF4               	incf	send_string@s,f
  2957  0618  1903               	skipnz
  2958  0619  0AF5               	incf	send_string@s+1,f
  2959  061A  2DFF               	goto	l4370
  2960  061B                     __end_of_send_string:	
  2961  061B                     __ptext416:	
  2962 ;; =============== function _isprint ends ============
  2963                           
  2964                           
  2965 ;; *************** function _send_char *****************
  2966 ;; Defined at:
  2967 ;;		line 68 in file "D:\TTVXL\Project TTVXL\BT03week16ttvxl\BT03week16ttvxl.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  data            1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  data            1    3[COMMON] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;		None               void
  2974 ;; Registers used:
  2975 ;;		wreg
  2976 ;; Tracked objects:
  2977 ;;		On entry : 60/0
  2978 ;;		On exit  : 60/0
  2979 ;;		Unchanged: FFF9F/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2981 ;;      Params:         0       0       0       0       0
  2982 ;;      Locals:         1       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0
  2984 ;;      Totals:         1       0       0       0       0
  2985 ;;Total ram usage:        1 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; Hardware stack levels required when called:    1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_send_string
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994  061B                     _send_char:	
  2995                           
  2996                           ; Regs used in _send_char: [wreg]
  2997                           ;send_char@data stored from wreg
  2998  061B  00F3               	movwf	send_char@data
  2999  061C                     l1065:	
  3000                           ;BT03week16ttvxl.c: 69: while(TXIF == 0){}
  3001                           
  3002  061C  1E0C               	btfss	12,4
  3003  061D  2E1C               	goto	l1065
  3004                           
  3005                           ;BT03week16ttvxl.c: 70: TXREG = data;
  3006  061E  0873               	movf	send_char@data,w
  3007  061F  0099               	movwf	25	;volatile
  3008  0620  0008               	return
  3009  0621                     __end_of_send_char:	
  3010                           
  3011                           	psect	text417
  3012  063F                     __ptext417:	
  3013 ;; =============== function _send_char ends ============
  3014                           
  3015                           
  3016 ;; *************** function _rx_init *****************
  3017 ;; Defined at:
  3018 ;;		line 60 in file "D:\TTVXL\Project TTVXL\BT03week16ttvxl\BT03week16ttvxl.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;		None               void
  3025 ;; Registers used:
  3026 ;;		wreg
  3027 ;; Tracked objects:
  3028 ;;		On entry : 60/0
  3029 ;;		On exit  : 60/0
  3030 ;;		Unchanged: FFF9F/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0
  3035 ;;      Totals:         0       0       0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    1
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_main
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045  063F                     _rx_init:	
  3046                           
  3047                           ;BT03week16ttvxl.c: 61: SPBRGH = 0x02;
  3048                           
  3049                           ; Regs used in _rx_init: [wreg]
  3050  063F  3002               	movlw	2
  3051  0640  1683               	bsf	3,5	;RP0=1, select bank1
  3052  0641  009A               	movwf	26	;volatile
  3053                           
  3054                           ;BT03week16ttvxl.c: 62: SPBRG = 0x08;
  3055  0642  3008               	movlw	8
  3056  0643  0099               	movwf	25	;volatile
  3057                           
  3058                           ;BT03week16ttvxl.c: 63: SYNC = 0; BRGH = 1; BRG16 = 1;
  3059  0644  1218               	bcf	24,4
  3060  0645  1518               	bsf	24,2
  3061  0646  1703               	bsf	3,6	;RP1=1, select bank3
  3062  0647  1587               	bsf	7,3
  3063                           
  3064                           ;BT03week16ttvxl.c: 64: CREN = 1; RX9 = 0; SPEN = 1;
  3065  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3066  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3067  064A  1618               	bsf	24,4
  3068  064B  1318               	bcf	24,6
  3069  064C  1798               	bsf	24,7
  3070  064D  0008               	return
  3071  064E                     __end_of_rx_init:	
  3072                           
  3073                           	psect	text418
  3074  064E                     __ptext418:	
  3075 ;; =============== function _rx_init ends ============
  3076                           
  3077                           
  3078 ;; *************** function _tx_init *****************
  3079 ;; Defined at:
  3080 ;;		line 51 in file "D:\TTVXL\Project TTVXL\BT03week16ttvxl\BT03week16ttvxl.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg
  3089 ;; Tracked objects:
  3090 ;;		On entry : 60/0
  3091 ;;		On exit  : 60/0
  3092 ;;		Unchanged: FFF9F/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    1
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_main
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107  064E                     _tx_init:	
  3108                           
  3109                           ;BT03week16ttvxl.c: 52: SPBRGH = 0x02;
  3110                           
  3111                           ; Regs used in _tx_init: [wreg]
  3112  064E  3002               	movlw	2
  3113  064F  1683               	bsf	3,5	;RP0=1, select bank1
  3114  0650  009A               	movwf	26	;volatile
  3115                           
  3116                           ;BT03week16ttvxl.c: 53: SPBRG = 0x08;
  3117  0651  3008               	movlw	8
  3118  0652  0099               	movwf	25	;volatile
  3119                           
  3120                           ;BT03week16ttvxl.c: 54: SYNC = 0; BRGH = 1; BRG16 = 1;
  3121  0653  1218               	bcf	24,4
  3122  0654  1518               	bsf	24,2
  3123  0655  1703               	bsf	3,6	;RP1=1, select bank3
  3124  0656  1587               	bsf	7,3
  3125                           
  3126                           ;BT03week16ttvxl.c: 55: TXEN = 1; TX9 = 0; SPEN = 1;
  3127  0657  1303               	bcf	3,6	;RP1=0, select bank1
  3128  0658  1698               	bsf	24,5
  3129  0659  1318               	bcf	24,6
  3130  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3131  065B  1798               	bsf	24,7
  3132  065C  0008               	return
  3133  065D                     __end_of_tx_init:	
  3134                           
  3135                           	psect	text419
  3136  0621                     __ptext419:	
  3137 ;; =============== function _tx_init ends ============
  3138                           
  3139                           
  3140 ;; *************** function _ngat *****************
  3141 ;; Defined at:
  3142 ;;		line 79 in file "D:\TTVXL\Project TTVXL\BT03week16ttvxl\BT03week16ttvxl.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;		None               void
  3149 ;; Registers used:
  3150 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 60/0
  3154 ;;		Unchanged: FFE9F/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0
  3158 ;;      Temps:          3       0       0       0       0
  3159 ;;      Totals:         3       0       0       0       0
  3160 ;;Total ram usage:        3 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; This function calls:
  3163 ;;		Nothing
  3164 ;; This function is called by:
  3165 ;;		Interrupt level 1
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168  0621                     _ngat:	
  3169                           
  3170                           ;BT03week16ttvxl.c: 80: if(RCIF)
  3171  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0623  1E8C               	btfss	12,5
  3174  0624  2E36               	goto	L6
  3175                           
  3176                           ;BT03week16ttvxl.c: 81: {
  3177                           ;BT03week16ttvxl.c: 82: rx_data[i] = RCREG;
  3178  0625  083A               	movf	_i,w
  3179  0626  3E46               	addlw	_rx_data& (0+255)
  3180  0627  0084               	movwf	4
  3181  0628  081A               	movf	26,w	;volatile
  3182  0629  1383               	bcf	3,7	;select IRP bank0
  3183  062A  0080               	movwf	0
  3184                           
  3185                           ;BT03week16ttvxl.c: 83: i++;
  3186  062B  0ABA               	incf	_i,f
  3187  062C  1903               	skipnz
  3188  062D  0ABB               	incf	_i+1,f
  3189                           
  3190                           ;BT03week16ttvxl.c: 84: if(i==5)
  3191  062E  083A               	movf	_i,w
  3192  062F  3A05               	xorlw	5
  3193  0630  043B               	iorwf	_i+1,w
  3194  0631  1D03               	skipz
  3195  0632  2E35               	goto	i1l4242
  3196                           
  3197                           ;BT03week16ttvxl.c: 85: {
  3198                           ;BT03week16ttvxl.c: 86: i=0;
  3199  0633  01BA               	clrf	_i
  3200  0634  01BB               	clrf	_i+1
  3201  0635                     i1l4242:	
  3202                           
  3203                           ;BT03week16ttvxl.c: 87: }
  3204                           ;BT03week16ttvxl.c: 88: }
  3205                           ;BT03week16ttvxl.c: 89: RCIF=0;
  3206  0635  128C               	bcf	12,5
  3207  0636                     L6:	
  3208  0636  0872               	movf	??_ngat+2,w
  3209  0637  008A               	movwf	10
  3210  0638  0871               	movf	??_ngat+1,w
  3211  0639  0084               	movwf	4
  3212  063A  0E70               	swapf	??_ngat^(0+-128),w
  3213  063B  0083               	movwf	3
  3214  063C  0EFE               	swapf	126,f
  3215  063D  0E7E               	swapf	126,w
  3216  063E  0009               	retfie
  3217  063F                     __end_of_ngat:	
  3218                           
  3219 ;; =============== function _ngat ends ============
  3220  0002                     
  3221                           	psect	intentry
  3222  0004                     __pintentry:	
  3223                           ; Regs used in _ngat: [wreg-fsr0h+status,2+status,0]
  3224                           
  3225  0004                     interrupt_function:	
  3226  007E                     saved_w	set	btemp
  3227  0004  00FE               	movwf	btemp
  3228  0005  0E03               	swapf	3,w
  3229  0006  00F0               	movwf	??_ngat
  3230  0007  0804               	movf	4,w
  3231  0008  00F1               	movwf	??_ngat+1
  3232  0009  080A               	movf	10,w
  3233  000A  00F2               	movwf	??_ngat+2
  3234  000B  120A  118A  2E21   	ljmp	_ngat
  3235                           
  3236                           	psect	functab
  3237  0100                     __pfunctab:	
  3238  0100                     fptable:	
  3239  0100  00FF               	movwf	(btemp+1)& (0+127)
  3240  0101  3001               	movlw	high fptable
  3241  0102  008A               	movwf	10
  3242  0103  087F               	movf	(btemp+1)& (0+127),w
  3243  0104  0782               	addwf	2,f
  3244  0105                     fpbase:	
  3245  0105  2905               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3246  0106                     fp__putch:	
  3247  0106  120A  118A  2BC2   	ljmp	_putch
  3248  007E                     btemp	set	126	;btemp
  3249  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 18 00:48:47 2022

                    _i 003A                      pc 0002                     fsr 0004    ___wmul@multiplicand 0075  
        ?_lcd_put_byte 0073                    _GIE 005F                    _RD1 0041                    _RD2 0042  
                  _RD3 0043                    _RD4 0044                    _RD5 0045                    _RD6 0046  
                  _RD7 0047                    u905 0366                    u945 038B                    _RX9 00C6  
                  _TX9 04C6                    fsr0 0004                    indf 0000                   l1062 0000  
                 l1065 061C                   l1074 0000                   l1082 0000                   l1059 0000  
                 l1068 0000                   l2141 0000                   l2206 020B                   l2208 01F3  
                 l2138 0000                   l2242 0000                   l2172 0000                   l2149 0000  
                 l4200 0000                   l4210 0000                   l4202 0000                   l3242 0000  
                 l2194 01AC                   l4212 0000                   l4204 0000                   l4220 0000  
                 l4300 0000                   l4206 0000                   l4222 0000                   l4214 0000  
                 l4310 0000                   l3247 0000                   l3263 0000                   l4208 0000  
                 l4224 0000                   l4216 0000                   l4304 0000                   l4400 0531  
                 l3256 0000                   l4226 0000                   l4218 0000                   l4306 0374  
                 l4330 0000                   l4402 053E                   l4410 0000                   l3275 0000  
                 l4228 0000                   l4252 0589                   l4244 0000                   l4324 0000  
                 l4340 0000                   l4332 012D                   l4404 0000                   l4412 0000  
                 l4500 01A1                   l3285 0000                   l4246 0000                   l4270 0338  
                 l4318 0385                   l4326 0398                   l4334 0126                   l4406 0000  
                 l4414 0000                   l4430 0000                   l4422 0000                   l4510 01AE  
                 l4502 0000                   l3295 0000                   l4264 0334                   l4256 0000  
                 l4360 017B                   l4352 0146                   l4344 0140                   l4336 012F  
                 l4416 0000                   l4408 0000                   l4432 0000                   l4424 0000  
                 l4520 0000                   l4512 01B9                   l4504 01A8                   l4258 0000  
                 l4274 0340                   l4354 016C                   l4346 016A                   l4370 05FF  
                 l4418 0000                   l4450 04A7                   l4442 048F                   l4434 0477  
                 l4426 0000                   l4610 02E7                   l4506 0000                   l4276 0000  
                 l4268 0000                   l4284 0000                   l4356 0000                   l4364 0000  
                 l4380 0000                   l4372 0000                   l4428 0000                   l4460 0000  
                 l4612 0000                   l4620 0320                   l4604 02DD                   l4532 0000  
                 l4516 01C7                   l4524 01F5                   l4278 0000                   l4294 035D  
                 l4286 0000                   l4390 0503                   l4382 0000                   l4374 0000  
                 l4454 04B3                   l4446 049B                   l4438 0483                   l4470 03D5  
                 l4462 0000                   l4606 0000                   l4550 023B                   l4542 021F  
                 l4534 021B                   l4518 0000                   l4622 0181                   l4630 0000  
                 l4296 0000                   l4368 0000                   l4392 0000                   l4384 0000  
                 l4376 0000                   l4464 03CB                   l4480 03EF                   l4472 0000  
                 l4616 031A                   l4608 02E3                   l4560 0264                   l4536 021D  
                 l4528 0000                   l4624 0325                   l4632 0000                   l4640 0000  
                 l4394 0000                   l4386 04EB                   l4458 04BF                   l4466 03CC  
                 l4474 03DE                   l4490 0000                   l4618 0000                   l4570 027C  
                 l4562 0267                   l4634 0000                   l4642 0000                   l4650 0000  
                 l4396 0000                   l4388 04F8                   l4468 0000                   l4484 03FB  
                 l4476 03E4                   l4580 0296                   l4572 0000                   l4556 0247  
                 l4548 0000                   l4492 0000                   l4628 0000                   l4644 0000  
                 l4660 0000                   l4652 0000                   l4398 0526                   l4478 03EB  
                 l4582 0000                   l4574 0282                   l4646 0000                   l4638 0000  
                 l4670 0000                   l4662 0000                   l4654 0000                   l4488 0402  
                 l4592 02B8                   l4584 029F                   l4680 0000                   l4672 0000  
                 l4664 0000                   l4656 0000                   l4594 0000                   l4586 02A5  
                 l4682 0000                   l4674 0000                   l4666 0000                   l4658 0000  
                 l4596 02C1                   l4588 02A9                   l4684 0000                   l4676 0000  
                 l4668 05B0                   l4598 02CA                   l4686 0000                   l4678 0000  
                 STR_1 002B                   STR_2 0038                   STR_3 0042                   STR_4 003F  
                 _BRGH 04C2                   _CREN 00C4                   u1100 050D                   u1120 0524  
                 u1040 04E9                   u1114 050F                   u1140 052F                   u1060 04F6  
                 u1160 053C                   u1080 0501                   u1180 0547                   u1425 0256  
                 u1194 0549                   u1607 0456                   u1617 0463                   u1385 0234  
                 u1707 0517                   u1627 0470                   u1717 054B                   u1637 0561  
                 u1727 0551                   u1647 0567                   u1657 0571                   u1577 041D  
                 u1667 0577                   u1587 0430                   u1677 04D4                   u1597 0443  
                 u1687 04DA                   u1697 0511                   _PEIE 005E                   _RCIE 0465  
                 _RCIF 0065                   _SPEN 00C7                   _TXEN 04C5                   _TXIF 0064  
                 _SYNC 04C4                   _atoi 0125                   _main 0595                   _ngat 0621  
         lcd_busy@busy 0074                   btemp 007E                   start 000E         ??_lcd_put_byte 0074  
                ?_atoi 0079                  ?_main 0070                  ?_ngat 0070                  _BRG16 0C3B  
                _ANSEL 0188        __end_of___lwdiv 0379        __end_of___lwmod 039D                  _RCREG 001A  
                _SPBRG 0099        __end_of__doprnt 0328                  _TXREG 0019        __end_of_isdigit 0336  
                atoi@a 0023                  atoi@s 0025                  _putch 03C2                  fpbase 0105  
      __end_of_isprint 058B                  pclath 000A        __end_of_rx_init 064E                  status 0003  
                wtemp0 007E        __end_of_sprintf 0125        __end_of_tx_init 065D           __end_of_atoi 0180  
         __end_of_main 05FF           __end_of_ngat 063F          lcd_gotoxy@col 0079          lcd_gotoxy@row 0078  
               ??_atoi 0020                 ??_main 007B                 ??_ngat 0070                 ?_putch 0021  
               _ANSELH 0189                 i1l1079 0000                 i1l4232 0000                 i1l4242 0635  
               i1l4236 0000                 i1l4238 0000           ?_send_string 0074                 _SPBRGH 009A  
               _TRISD1 0441                 _TRISD2 0442                 _TRISD3 0443                 _TRISD4 0444  
               _TRISD5 0445                 _TRISD6 0446                 _TRISD7 0447       __end_of_lcd_busy 057D  
     __end_of_lcd_init 04C6       __end_of_lcd_putc 040B                 ___wmul 0336              ??___lwdiv 0077  
            ??___lwmod 007A              ??__doprnt 0026           __doprnt@_val 002A           __doprnt@flag 002E  
               _printf 0109           __doprnt@prec 0029                 clrloop 0669          lcd_put_byte@b 0073  
               fptable 0100                 fptotal 0002              ??_isdigit 0073                 saved_w 007E  
            ??_isprint 0073                 putch@c 0021              ??_rx_init 0073              ??_sprintf 007B  
            ??_tx_init 0073   __end_of_lcd_put_byte 0556         __pcstackCOMMON 0070          __end_of_putch 03C4  
    lcd_gotoxy@address 007A             __doprnt@ap 0025             __doprnt@pb 0032                ??_putch 007B  
           __pbssBANK0 003A             __pmaintext 0595                ?___wmul 0073             __pintentry 0004  
   __size_of_send_char 0006                ?_printf 0033             _lcd_gotoxy 03C4              ?_lcd_busy 0070  
            ?_lcd_init 0070              ?_lcd_putc 0070   __size_of_send_string 001C        __size_of___wmul 0019  
              ___lwdiv 034F                ___lwmod 0379                __doprnt 0180        __size_of_printf 000C  
              _dpowers 0021                _ket_qua 0040                _isdigit 0328                _isprint 057D  
              _rx_data 0046                _rx_init 063F  __size_of_lcd_put_byte 0090                _sprintf 0115  
              _tx_init 064E          __doprnt@width 002F             ??_lcd_busy 0073             ??_lcd_init 0078  
           ??_lcd_putc 007B   end_of_initialization 0664         lcd_put_byte@rs 0076      __end_of_send_char 0621  
              printf@f 0035          send_char@data 0073             _number_out 003E           _lcd_put_byte 04C6  
          ?_lcd_gotoxy 0078         __end_of___wmul 034F         __end_of_printf 0115    start_initialization 065D  
  __size_of_lcd_gotoxy 0018               ??___wmul 0077               ??_printf 007B          __pcstackBANK0 0020  
         _isdigit$3692 0073      __size_of_lcd_busy 0027      __size_of_lcd_init 00BB              __doprnt@c 0031  
            __doprnt@f 0024      __size_of_lcd_putc 002F       ___lwdiv@dividend 0075              __pfunctab 0100  
            __ptext400 0115              __ptext401 0109              __ptext410 0125              __ptext402 0180  
            __ptext411 0379              __ptext403 03C2              __ptext412 034F              __ptext404 03DC  
            __ptext413 0336              __ptext405 03C4              __ptext414 0328              __ptext406 040B  
            __ptext415 057D              __ptext407 0556              __ptext416 061B              __ptext408 04C6  
            __ptext417 063F              __ptext409 05FF              __ptext418 064E              __ptext419 0621  
             ?___lwdiv 0073               ?___lwmod 0020               ?__doprnt 0024              __pstrings 0011  
             ?_isdigit 0070               ?_isprint 0070       ___lwdiv@quotient 0077               ?_rx_init 0070  
             ?_sprintf 0033               ?_tx_init 0070         __size_of_putch 0002          ??_send_string 0076  
    interrupt_function 0004         ___wmul@product 0077              _send_char 061B              _number_in 003C  
          __stringbase 0020      ___wmul@multiplier 0073              lcd_putc@c 0020           ??_lcd_gotoxy 0079  
     lcd_put_byte@temp 0077           _isprint$3695 0073             ?_send_char 0070           send_string@s 0074  
  __end_of_send_string 061B     __end_of_lcd_gotoxy 03DC       __size_of___lwdiv 002A       __size_of___lwmod 0024  
     __size_of__doprnt 01A8       __size_of_isdigit 000E        ___lwdiv@divisor 0073        ___lwdiv@counter 0079  
     __size_of_isprint 000E               _lcd_busy 0556               _lcd_init 040B               _lcd_putc 03DC  
     __size_of_rx_init 000F       __size_of_sprintf 0010       __size_of_tx_init 000F          __size_of_atoi 005B  
        __size_of_main 006A          __size_of_ngat 001E               clear_ram 0668               atoi@sign 0022  
             fp__putch 0106               isdigit@c 0074               intlevel1 0100              sprintf@ap 0037  
            sprintf@pb 0038              sprintf@wh 0036            _send_string 05FF       ___lwmod@dividend 0022  
             isprint@c 0074            ??_send_char 0073              stringcode 001B               printf@ap 0036  
             printf@pb 0037               sprintf@f 0033        ___lwmod@divisor 0020        ___lwmod@counter 007A  
             stringdir 001B               stringtab 0011  
