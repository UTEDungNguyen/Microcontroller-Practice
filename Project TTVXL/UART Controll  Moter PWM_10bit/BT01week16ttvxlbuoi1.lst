

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 18 00:28:19 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	text903,local,class=CODE,delta=2
    15                           	psect	text908,local,class=CODE,delta=2
    16                           	psect	text909,local,class=CODE,delta=2
    17                           	psect	text915,local,class=CODE,delta=2
    18                           	psect	text916,local,class=CODE,delta=2
    19                           	psect	text917,local,class=CODE,delta=2
    20                           	psect	text932,local,class=CODE,delta=2
    21                           	psect	text935,local,class=CODE,delta=2
    22                           	psect	text936,local,class=CODE,delta=2
    23                           	psect	text938,local,class=CODE,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text939,local,class=CODE,delta=2
    26                           	psect	pa_nodes,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  000A                     	;#
    29                           
    30                           	psect	config
    31  2007  E3C2               	dw	58306	;#
    32                           
    33                           	psect	strings
    34  1000                     __pstrings:	
    35  1000                     stringtab:	
    36                           ;	global	stringdir,stringtab,__stringbase
    37                           
    38  1000                     stringcode:	
    39                           ;	String table - string pointers are 1 byte each
    40                           
    41  1000                     stringdir:	
    42  1000  3010               	movlw	high stringdir
    43  1001  008A               	movwf	10
    44  1002  0804               	movf	4,w
    45  1003  0A84               	incf	4,f
    46  1004  0782               	addwf	2,f
    47  1005                     __stringbase:	
    48  1005  3400               	retlw	0
    49  1006                     __npowers_:	
    50  1006  3400               	retlw	0
    51  1007  3480               	retlw	128
    52  1008  343F               	retlw	63
    53  1009  34CD               	retlw	205
    54  100A  34CC               	retlw	204
    55  100B  343D               	retlw	61
    56  100C  34D7               	retlw	215
    57  100D  3423               	retlw	35
    58  100E  343C               	retlw	60
    59  100F  3412               	retlw	18
    60  1010  3483               	retlw	131
    61  1011  343A               	retlw	58
    62  1012  34B7               	retlw	183
    63  1013  34D1               	retlw	209
    64  1014  3438               	retlw	56
    65  1015  34C6               	retlw	198
    66  1016  3427               	retlw	39
    67  1017  3437               	retlw	55
    68  1018  3438               	retlw	56
    69  1019  3486               	retlw	134
    70  101A  3435               	retlw	53
    71  101B  34C0               	retlw	192
    72  101C  34D6               	retlw	214
    73  101D  3433               	retlw	51
    74  101E  34CC               	retlw	204
    75  101F  342B               	retlw	43
    76  1020  3432               	retlw	50
    77  1021  3470               	retlw	112
    78  1022  3489               	retlw	137
    79  1023  3430               	retlw	48
    80  1024  34E7               	retlw	231
    81  1025  34DB               	retlw	219
    82  1026  342E               	retlw	46
    83  1027  34E5               	retlw	229
    84  1028  343C               	retlw	60
    85  1029  341E               	retlw	30
    86  102A  3442               	retlw	66
    87  102B  34A2               	retlw	162
    88  102C  340D               	retlw	13
    89  102D                     __powers_:	
    90  102D  3400               	retlw	0
    91  102E  3480               	retlw	128
    92  102F  343F               	retlw	63
    93  1030  3400               	retlw	0
    94  1031  3420               	retlw	32
    95  1032  3441               	retlw	65
    96  1033  3400               	retlw	0
    97  1034  34C8               	retlw	200
    98  1035  3442               	retlw	66
    99  1036  3400               	retlw	0
   100  1037  347A               	retlw	122
   101  1038  3444               	retlw	68
   102  1039  3440               	retlw	64
   103  103A  341C               	retlw	28
   104  103B  3446               	retlw	70
   105  103C  3450               	retlw	80
   106  103D  34C3               	retlw	195
   107  103E  3447               	retlw	71
   108  103F  3424               	retlw	36
   109  1040  3474               	retlw	116
   110  1041  3449               	retlw	73
   111  1042  3497               	retlw	151
   112  1043  3418               	retlw	24
   113  1044  344B               	retlw	75
   114  1045  34BC               	retlw	188
   115  1046  34BE               	retlw	190
   116  1047  344C               	retlw	76
   117  1048  346B               	retlw	107
   118  1049  346E               	retlw	110
   119  104A  344E               	retlw	78
   120  104B  3403               	retlw	3
   121  104C  3415               	retlw	21
   122  104D  3450               	retlw	80
   123  104E  3479               	retlw	121
   124  104F  34AD               	retlw	173
   125  1050  3460               	retlw	96
   126  1051  34F3               	retlw	243
   127  1052  3449               	retlw	73
   128  1053  3471               	retlw	113
   129  1054                     _dpowers:	
   130  1054  3401               	retlw	1
   131  1055  3400               	retlw	0
   132  1056  3400               	retlw	0
   133  1057  3400               	retlw	0
   134  1058  340A               	retlw	10
   135  1059  3400               	retlw	0
   136  105A  3400               	retlw	0
   137  105B  3400               	retlw	0
   138  105C  3464               	retlw	100
   139  105D  3400               	retlw	0
   140  105E  3400               	retlw	0
   141  105F  3400               	retlw	0
   142  1060  34E8               	retlw	232
   143  1061  3403               	retlw	3
   144  1062  3400               	retlw	0
   145  1063  3400               	retlw	0
   146  1064  3410               	retlw	16
   147  1065  3427               	retlw	39
   148  1066  3400               	retlw	0
   149  1067  3400               	retlw	0
   150  1068  34A0               	retlw	160
   151  1069  3486               	retlw	134
   152  106A  3401               	retlw	1
   153  106B  3400               	retlw	0
   154  106C  3440               	retlw	64
   155  106D  3442               	retlw	66
   156  106E  340F               	retlw	15
   157  106F  3400               	retlw	0
   158  1070  3480               	retlw	128
   159  1071  3496               	retlw	150
   160  1072  3498               	retlw	152
   161  1073  3400               	retlw	0
   162  1074  3400               	retlw	0
   163  1075  34E1               	retlw	225
   164  1076  34F5               	retlw	245
   165  1077  3405               	retlw	5
   166  1078  3400               	retlw	0
   167  1079  34CA               	retlw	202
   168  107A  349A               	retlw	154
   169  107B  343B               	retlw	59
   170  000E                     _TMR1	set	14
   171  0017                     _CCP1CON	set	23
   172  0015                     _CCPR1L	set	21
   173  001A                     _RCREG	set	26
   174  0001                     _TMR0	set	1
   175  0011                     _TMR2	set	17
   176  00C4                     _CREN	set	196
   177  00BC                     _DC1B0	set	188
   178  00BD                     _DC1B1	set	189
   179  005F                     _GIE	set	95
   180  005C                     _INTE	set	92
   181  0059                     _INTF	set	89
   182  005E                     _PEIE	set	94
   183  0065                     _RCIF	set	101
   184  0041                     _RD1	set	65
   185  0042                     _RD2	set	66
   186  0043                     _RD3	set	67
   187  0044                     _RD4	set	68
   188  0045                     _RD5	set	69
   189  0046                     _RD6	set	70
   190  0047                     _RD7	set	71
   191  0048                     _RE0	set	72
   192  0049                     _RE1	set	73
   193  004A                     _RE2	set	74
   194  00C6                     _RX9	set	198
   195  00C7                     _SPEN	set	199
   196  005D                     _T0IE	set	93
   197  005A                     _T0IF	set	90
   198  0084                     _T1CKPS0	set	132
   199  0085                     _T1CKPS1	set	133
   200  0082                     _T1SYNC	set	130
   201  0090                     _T2CKPS0	set	144
   202  0091                     _T2CKPS1	set	145
   203  0081                     _TMR1CS	set	129
   204  0086                     _TMR1GE	set	134
   205  0080                     _TMR1ON	set	128
   206  0092                     _TMR2ON	set	146
   207  0092                     _PR2	set	146
   208  0099                     _SPBRG	set	153
   209  009A                     _SPBRGH	set	154
   210  0095                     _WPUB	set	149
   211  04C2                     _BRGH	set	1218
   212  0408                     _PS0	set	1032
   213  0409                     _PS1	set	1033
   214  040A                     _PS2	set	1034
   215  040B                     _PSA	set	1035
   216  0465                     _RCIE	set	1125
   217  04C4                     _SYNC	set	1220
   218  040D                     _T0CS	set	1037
   219  0430                     _TRISB0	set	1072
   220  043A                     _TRISC2	set	1082
   221  0441                     _TRISD1	set	1089
   222  0442                     _TRISD2	set	1090
   223  0443                     _TRISD3	set	1091
   224  0444                     _TRISD4	set	1092
   225  0445                     _TRISD5	set	1093
   226  0446                     _TRISD6	set	1094
   227  0447                     _TRISD7	set	1095
   228  0448                     _TRISE0	set	1096
   229  0449                     _TRISE1	set	1097
   230  044A                     _TRISE2	set	1098
   231  04C6                     _TX9	set	1222
   232  04C5                     _TXEN	set	1221
   233  040F                     _nRBPU	set	1039
   234  0188                     _ANSEL	set	392
   235  0189                     _ANSELH	set	393
   236  0C3B                     _BRG16	set	3131
   237  107C                     STR_2:	
   238  107C  3478               	retlw	120	;'x'
   239  107D  3475               	retlw	117	;'u'
   240  107E  346E               	retlw	110	;'n'
   241  107F  3467               	retlw	103	;'g'
   242  1080  343A               	retlw	58	;':'
   243  1081  3420               	retlw	32	;' '
   244  1082  3425               	retlw	37	;'%'
   245  1083  3430               	retlw	48	;'0'
   246  1084  3435               	retlw	53	;'5'
   247  1085  3464               	retlw	100	;'d'
   248  1086  3400               	retlw	0
   249  1087                     STR_1:	
   250  1087  3476               	retlw	118	;'v'
   251  1088  343A               	retlw	58	;':'
   252  1089  3420               	retlw	32	;' '
   253  108A  3425               	retlw	37	;'%'
   254  108B  3433               	retlw	51	;'3'
   255  108C  342E               	retlw	46	;'.'
   256  108D  3432               	retlw	50	;'2'
   257  108E  3466               	retlw	102	;'f'
   258  108F  3400               	retlw	0
   259                           
   260                           	psect	cinit
   261  0811                     start_initialization:	
   262                           
   263                           ; Clear objects allocated to COMMON
   264  0811  01F9               	clrf	__pbssCOMMON& (0+127)
   265  0812  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0813  01E9               	clrf	__pbssBANK0& (0+127)
   269  0814  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   270  0815  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   271  0816  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   272  0817  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   273  0818  01EE               	clrf	(__pbssBANK0+5)& (0+127)
   274                           
   275                           ; Clear objects allocated to BANK1
   276  0819  1683               	bsf	3,5	;RP0=1, select bank1
   277  081A  01B9               	clrf	__pbssBANK1& (0+127)
   278  081B  01BA               	clrf	(__pbssBANK1+1)& (0+127)
   279  081C  01BB               	clrf	(__pbssBANK1+2)& (0+127)
   280  081D  01BC               	clrf	(__pbssBANK1+3)& (0+127)
   281  081E  01BD               	clrf	(__pbssBANK1+4)& (0+127)
   282  081F  01BE               	clrf	(__pbssBANK1+5)& (0+127)
   283  0820  01BF               	clrf	(__pbssBANK1+6)& (0+127)
   284  0821  01C0               	clrf	(__pbssBANK1+7)& (0+127)
   285  0822  01C1               	clrf	(__pbssBANK1+8)& (0+127)
   286  0823  01C2               	clrf	(__pbssBANK1+9)& (0+127)
   287  0824  01C3               	clrf	(__pbssBANK1+10)& (0+127)
   288  0825  01C4               	clrf	(__pbssBANK1+11)& (0+127)
   289  0826  01C5               	clrf	(__pbssBANK1+12)& (0+127)
   290  0827                     end_of_initialization:	
   291                           ;End of C runtime variable initialization code
   292                           
   293  0827  0183               	clrf	3
   294  0828  120A  158A  282B   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssCOMMON
   297  0079                     __pbssCOMMON:	
   298  0079                     _a:	
   299  0079                     	ds	2
   300                           
   301                           	psect	bssBANK0
   302  0069                     __pbssBANK0:	
   303  0069                     _dem:	
   304  0069                     	ds	2
   305  006B                     _pwm_t:	
   306  006B                     	ds	2
   307  006D                     _xung:	
   308  006D                     	ds	2
   309                           
   310                           	psect	bssBANK1
   311  00B9                     __pbssBANK1:	
   312  00B9                     _data_rx:	
   313  00B9                     	ds	10
   314  00C3                     _v:	
   315  00C3                     	ds	3
   316                           
   317                           	psect	cstackBANK1
   318  00A0                     __pcstackBANK1:	
   319  00A0                     _printf$3184:	
   320                           
   321                           ; 4 bytes @ 0x0
   322  00A0                     	ds	4
   323  00A4                     printf@ap:	
   324                           
   325                           ; 1 bytes @ 0x4
   326  00A4                     	ds	1
   327  00A5                     printf@integ:	
   328                           
   329                           ; 3 bytes @ 0x5
   330  00A5                     	ds	3
   331  00A8                     printf@f:	
   332                           
   333                           ; 1 bytes @ 0x8
   334  00A8                     	ds	1
   335  00A9                     printf@_val:	
   336                           
   337                           ; 4 bytes @ 0x9
   338  00A9                     	ds	4
   339  00AD                     printf@flag:	
   340                           
   341                           ; 2 bytes @ 0xD
   342  00AD                     	ds	2
   343  00AF                     printf@exp:	
   344                           
   345                           ; 2 bytes @ 0xF
   346  00AF                     	ds	2
   347  00B1                     printf@width:	
   348                           
   349                           ; 2 bytes @ 0x11
   350  00B1                     	ds	2
   351  00B3                     printf@fval:	
   352                           
   353                           ; 3 bytes @ 0x13
   354  00B3                     	ds	3
   355  00B6                     printf@prec:	
   356                           
   357                           ; 2 bytes @ 0x16
   358  00B6                     	ds	2
   359  00B8                     printf@c:	
   360                           
   361                           ; 1 bytes @ 0x18
   362  00B8                     	ds	1
   363                           
   364                           	psect	cstackCOMMON
   365  0070                     __pcstackCOMMON:	
   366  0070                     ?_isprint:	
   367  0070                     ?_tx:	
   368                           ; 1 bit 
   369                           
   370  0070                     ?_rx:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ?_isdigit:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_lcd_init:	
   377                           ; 1 bit 
   378                           
   379  0070                     ?_lcd_putc:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?_main:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ?_ngat:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0070                     ??_ngat:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0070                     ?_putch:	
   392                           ; 0 bytes @ 0x0
   393                           
   394  0070                     ?_lcd_busy:	
   395                           ; 0 bytes @ 0x0
   396                           
   397                           
   398                           ; 1 bytes @ 0x0
   399  0070                     	ds	3
   400  0073                     ?_lcd_put_byte:	
   401  0073                     ??_lcd_busy:	
   402                           ; 0 bytes @ 0x3
   403                           
   404  0073                     ??_isprint:	
   405                           ; 0 bytes @ 0x3
   406                           
   407  0073                     ??_tx:	
   408                           ; 0 bytes @ 0x3
   409                           
   410  0073                     ??_rx:	
   411                           ; 0 bytes @ 0x3
   412                           
   413  0073                     ??_isdigit:	
   414                           ; 0 bytes @ 0x3
   415                           
   416  0073                     ?___ftge:	
   417                           ; 0 bytes @ 0x3
   418                           
   419  0073                     ??___lldiv:	
   420                           ; 1 bit 
   421                           
   422  0073                     ?___lbmod:	
   423                           ; 0 bytes @ 0x3
   424                           
   425  0073                     ?___wmul:	
   426                           ; 1 bytes @ 0x3
   427                           
   428  0073                     ?___awmod:	
   429                           ; 2 bytes @ 0x3
   430                           
   431  0073                     ?___ftpack:	
   432                           ; 2 bytes @ 0x3
   433                           
   434  0073                     ?___ftneg:	
   435                           ; 3 bytes @ 0x3
   436                           
   437  0073                     ?__tdiv_to_l_:	
   438                           ; 3 bytes @ 0x3
   439                           
   440  0073                     ?__div_to_l_:	
   441                           ; 4 bytes @ 0x3
   442                           
   443  0073                     lcd_put_byte@b:	
   444                           ; 4 bytes @ 0x3
   445                           
   446  0073                     _isdigit$3697:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     _isprint$3700:	
   450                           ; 1 bytes @ 0x3
   451                           
   452  0073                     ___lbmod@divisor:	
   453                           ; 1 bytes @ 0x3
   454                           
   455  0073                     ___wmul@multiplier:	
   456                           ; 1 bytes @ 0x3
   457                           
   458  0073                     ___awmod@divisor:	
   459                           ; 2 bytes @ 0x3
   460                           
   461  0073                     ___ftneg@f1:	
   462                           ; 2 bytes @ 0x3
   463                           
   464  0073                     ___ftge@ff1:	
   465                           ; 3 bytes @ 0x3
   466                           
   467  0073                     __tdiv_to_l_@f1:	
   468                           ; 3 bytes @ 0x3
   469                           
   470  0073                     __div_to_l_@f1:	
   471                           ; 3 bytes @ 0x3
   472                           
   473  0073                     ___ftpack@arg:	
   474                           ; 3 bytes @ 0x3
   475                           
   476  0073                     ___lldiv@quotient:	
   477                           ; 3 bytes @ 0x3
   478                           
   479                           
   480                           ; 4 bytes @ 0x3
   481  0073                     	ds	1
   482  0074                     ??_lcd_put_byte:	
   483  0074                     ??___lbmod:	
   484                           ; 0 bytes @ 0x4
   485                           
   486  0074                     lcd_busy@busy:	
   487                           ; 0 bytes @ 0x4
   488                           
   489  0074                     isdigit@c:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  0074                     isprint@c:	
   493                           ; 1 bytes @ 0x4
   494                           
   495                           
   496                           ; 1 bytes @ 0x4
   497  0074                     	ds	1
   498  0075                     ___lbmod@dividend:	
   499  0075                     ___wmul@multiplicand:	
   500                           ; 1 bytes @ 0x5
   501                           
   502  0075                     ___awmod@dividend:	
   503                           ; 2 bytes @ 0x5
   504                           
   505                           
   506                           ; 2 bytes @ 0x5
   507  0075                     	ds	1
   508  0076                     ??___ftneg:	
   509  0076                     lcd_put_byte@rs:	
   510                           ; 0 bytes @ 0x6
   511                           
   512  0076                     ___lbmod@counter:	
   513                           ; 1 bytes @ 0x6
   514                           
   515  0076                     ___ftpack@exp:	
   516                           ; 1 bytes @ 0x6
   517                           
   518  0076                     ___ftge@ff2:	
   519                           ; 1 bytes @ 0x6
   520                           
   521  0076                     __tdiv_to_l_@f2:	
   522                           ; 3 bytes @ 0x6
   523                           
   524  0076                     __div_to_l_@f2:	
   525                           ; 3 bytes @ 0x6
   526                           
   527                           
   528                           ; 3 bytes @ 0x6
   529  0076                     	ds	1
   530  0077                     ??___wmul:	
   531  0077                     ??___awmod:	
   532                           ; 0 bytes @ 0x7
   533                           
   534  0077                     lcd_put_byte@temp:	
   535                           ; 0 bytes @ 0x7
   536                           
   537  0077                     ___lbmod@rem:	
   538                           ; 1 bytes @ 0x7
   539                           
   540  0077                     ___lldiv@counter:	
   541                           ; 1 bytes @ 0x7
   542                           
   543  0077                     ___awmod@counter:	
   544                           ; 1 bytes @ 0x7
   545                           
   546  0077                     ___ftpack@sign:	
   547                           ; 1 bytes @ 0x7
   548                           
   549  0077                     ___wmul@product:	
   550                           ; 1 bytes @ 0x7
   551                           
   552                           
   553                           ; 2 bytes @ 0x7
   554  0077                     	ds	1
   555  0078                     ?_lcd_gotoxy:	
   556  0078                     ??___awtoft:	
   557                           ; 0 bytes @ 0x8
   558                           
   559  0078                     ??___llmod:	
   560                           ; 0 bytes @ 0x8
   561                           
   562  0078                     ??___lltoft:	
   563                           ; 0 bytes @ 0x8
   564                           
   565  0078                     ?___lbdiv:	
   566                           ; 0 bytes @ 0x8
   567                           
   568  0078                     lcd_gotoxy@row:	
   569                           ; 1 bytes @ 0x8
   570                           
   571  0078                     ___lbdiv@divisor:	
   572                           ; 1 bytes @ 0x8
   573                           
   574  0078                     ___awtoft@sign:	
   575                           ; 1 bytes @ 0x8
   576                           
   577  0078                     ___llmod@counter:	
   578                           ; 1 bytes @ 0x8
   579                           
   580  0078                     ___awmod@sign:	
   581                           ; 1 bytes @ 0x8
   582                           
   583  0078                     ___lltoft@exp:	
   584                           ; 1 bytes @ 0x8
   585                           
   586                           
   587                           ; 1 bytes @ 0x8
   588  0078                     	ds	1
   589  0079                     ??_lcd_gotoxy:	
   590  0079                     ??_pwm_10bit:	
   591                           ; 0 bytes @ 0x9
   592                           
   593  0079                     ??_lcd_putc:	
   594                           ; 0 bytes @ 0x9
   595                           
   596  0079                     ??_putch:	
   597                           ; 0 bytes @ 0x9
   598                           
   599  0079                     ??_fround:	
   600                           ; 0 bytes @ 0x9
   601                           
   602  0079                     ??___bmul:	
   603                           ; 0 bytes @ 0x9
   604                           
   605  0079                     ??___lbdiv:	
   606                           ; 0 bytes @ 0x9
   607                           
   608  0079                     ??___ftsub:	
   609                           ; 0 bytes @ 0x9
   610                           
   611  0079                     ??___awdiv:	
   612                           ; 0 bytes @ 0x9
   613                           
   614  0079                     ??___ftge:	
   615                           ; 0 bytes @ 0x9
   616                           
   617                           
   618                           	psect	cstackBANK0
   619  0020                     __pcstackBANK0:	
   620                           ; 0 bytes @ 0x9
   621                           
   622  0020                     ??__tdiv_to_l_:	
   623  0020                     ??__div_to_l_:	
   624                           ; 0 bytes @ 0x0
   625                           
   626  0020                     ??___ftpack:	
   627                           ; 0 bytes @ 0x0
   628                           
   629  0020                     ??_lcd_init:	
   630                           ; 0 bytes @ 0x0
   631                           
   632  0020                     ?_atoi:	
   633                           ; 0 bytes @ 0x0
   634                           
   635  0020                     ?___awdiv:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0020                     ?___lldiv:	
   639                           ; 2 bytes @ 0x0
   640                           
   641  0020                     lcd_gotoxy@col:	
   642                           ; 4 bytes @ 0x0
   643                           
   644  0020                     ___lbdiv@dividend:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0020                     ___awdiv@divisor:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0020                     ___lldiv@divisor:	
   651                           ; 2 bytes @ 0x0
   652                           
   653                           
   654                           ; 4 bytes @ 0x0
   655  0020                     	ds	1
   656  0021                     lcd_gotoxy@address:	
   657  0021                     ___lbdiv@counter:	
   658                           ; 1 bytes @ 0x1
   659                           
   660                           
   661                           ; 1 bytes @ 0x1
   662  0021                     	ds	1
   663  0022                     ??_atoi:	
   664  0022                     lcd_putc@c:	
   665                           ; 0 bytes @ 0x2
   666                           
   667  0022                     ___lbdiv@quotient:	
   668                           ; 1 bytes @ 0x2
   669                           
   670  0022                     ___awdiv@dividend:	
   671                           ; 1 bytes @ 0x2
   672                           
   673                           
   674                           ; 2 bytes @ 0x2
   675  0022                     	ds	1
   676  0023                     ?___bmul:	
   677  0023                     ?___awtoft:	
   678                           ; 1 bytes @ 0x3
   679                           
   680  0023                     ?___lltoft:	
   681                           ; 3 bytes @ 0x3
   682                           
   683  0023                     putch@c:	
   684                           ; 3 bytes @ 0x3
   685                           
   686  0023                     ___bmul@multiplicand:	
   687                           ; 1 bytes @ 0x3
   688                           
   689  0023                     ___awtoft@c:	
   690                           ; 1 bytes @ 0x3
   691                           
   692  0023                     ___lltoft@c:	
   693                           ; 2 bytes @ 0x3
   694                           
   695  0023                     __tdiv_to_l_@quot:	
   696                           ; 4 bytes @ 0x3
   697                           
   698                           
   699                           ; 4 bytes @ 0x3
   700  0023                     	ds	1
   701  0024                     atoi@sign:	
   702  0024                     ___bmul@product:	
   703                           ; 1 bytes @ 0x4
   704                           
   705  0024                     ___awdiv@counter:	
   706                           ; 1 bytes @ 0x4
   707                           
   708  0024                     ___lldiv@dividend:	
   709                           ; 1 bytes @ 0x4
   710                           
   711                           
   712                           ; 4 bytes @ 0x4
   713  0024                     	ds	1
   714  0025                     ___bmul@multiplier:	
   715  0025                     ___awdiv@sign:	
   716                           ; 1 bytes @ 0x5
   717                           
   718  0025                     atoi@a:	
   719                           ; 1 bytes @ 0x5
   720                           
   721                           
   722                           ; 2 bytes @ 0x5
   723  0025                     	ds	1
   724  0026                     ?___ftdiv:	
   725  0026                     ___awdiv@quotient:	
   726                           ; 3 bytes @ 0x6
   727                           
   728  0026                     ___ftdiv@f2:	
   729                           ; 2 bytes @ 0x6
   730                           
   731                           
   732                           ; 3 bytes @ 0x6
   733  0026                     	ds	1
   734  0027                     atoi@s:	
   735  0027                     __tdiv_to_l_@cntr:	
   736                           ; 1 bytes @ 0x7
   737                           
   738                           
   739                           ; 1 bytes @ 0x7
   740  0027                     	ds	1
   741  0028                     ?_pwm_10bit:	
   742  0028                     ?___fttol:	
   743                           ; 0 bytes @ 0x8
   744                           
   745  0028                     ?___llmod:	
   746                           ; 4 bytes @ 0x8
   747                           
   748  0028                     __tdiv_to_l_@exp1:	
   749                           ; 4 bytes @ 0x8
   750                           
   751  0028                     pwm_10bit@pwm:	
   752                           ; 1 bytes @ 0x8
   753                           
   754  0028                     ___fttol@f1:	
   755                           ; 2 bytes @ 0x8
   756                           
   757  0028                     ___llmod@divisor:	
   758                           ; 3 bytes @ 0x8
   759                           
   760  0028                     __div_to_l_@quot:	
   761                           ; 4 bytes @ 0x8
   762                           
   763                           
   764                           ; 4 bytes @ 0x8
   765  0028                     	ds	1
   766  0029                     ___ftdiv@f1:	
   767                           
   768                           ; 3 bytes @ 0x9
   769  0029                     	ds	3
   770  002C                     ??___ftdiv:	
   771  002C                     ??___fttol:	
   772                           ; 0 bytes @ 0xC
   773                           
   774  002C                     __div_to_l_@cntr:	
   775                           ; 0 bytes @ 0xC
   776                           
   777  002C                     ___llmod@dividend:	
   778                           ; 1 bytes @ 0xC
   779                           
   780                           
   781                           ; 4 bytes @ 0xC
   782  002C                     	ds	1
   783  002D                     __div_to_l_@exp1:	
   784                           
   785                           ; 1 bytes @ 0xD
   786  002D                     	ds	2
   787  002F                     ___ftdiv@cntr:	
   788  002F                     ___fttol@sign1:	
   789                           ; 1 bytes @ 0xF
   790                           
   791                           
   792                           ; 1 bytes @ 0xF
   793  002F                     	ds	1
   794  0030                     ___ftdiv@f3:	
   795  0030                     ___fttol@lval:	
   796                           ; 3 bytes @ 0x10
   797                           
   798                           
   799                           ; 4 bytes @ 0x10
   800  0030                     	ds	3
   801  0033                     ___ftdiv@exp:	
   802                           
   803                           ; 1 bytes @ 0x13
   804  0033                     	ds	1
   805  0034                     ___ftdiv@sign:	
   806  0034                     ___fttol@exp1:	
   807                           ; 1 bytes @ 0x14
   808                           
   809                           
   810                           ; 1 bytes @ 0x14
   811  0034                     	ds	1
   812  0035                     ?___ftmul:	
   813  0035                     ___ftmul@f1:	
   814                           ; 3 bytes @ 0x15
   815                           
   816                           
   817                           ; 3 bytes @ 0x15
   818  0035                     	ds	3
   819  0038                     ___ftmul@f2:	
   820                           
   821                           ; 3 bytes @ 0x18
   822  0038                     	ds	3
   823  003B                     ??___ftmul:	
   824                           
   825                           ; 0 bytes @ 0x1B
   826  003B                     	ds	3
   827  003E                     ___ftmul@exp:	
   828                           
   829                           ; 1 bytes @ 0x1E
   830  003E                     	ds	1
   831  003F                     ___ftmul@f3_as_product:	
   832                           
   833                           ; 3 bytes @ 0x1F
   834  003F                     	ds	3
   835  0042                     ___ftmul@cntr:	
   836                           
   837                           ; 1 bytes @ 0x22
   838  0042                     	ds	1
   839  0043                     ___ftmul@sign:	
   840                           
   841                           ; 1 bytes @ 0x23
   842  0043                     	ds	1
   843  0044                     ?_scale:	
   844  0044                     ?___ftadd:	
   845                           ; 3 bytes @ 0x24
   846                           
   847  0044                     ___ftadd@f1:	
   848                           ; 3 bytes @ 0x24
   849                           
   850                           
   851                           ; 3 bytes @ 0x24
   852  0044                     	ds	3
   853  0047                     ??_scale:	
   854  0047                     ___ftadd@f2:	
   855                           ; 0 bytes @ 0x27
   856                           
   857                           
   858                           ; 3 bytes @ 0x27
   859  0047                     	ds	3
   860  004A                     ??___ftadd:	
   861                           
   862                           ; 0 bytes @ 0x2A
   863  004A                     	ds	1
   864  004B                     _scale$4149:	
   865                           
   866                           ; 3 bytes @ 0x2B
   867  004B                     	ds	2
   868  004D                     ___ftadd@sign:	
   869                           
   870                           ; 1 bytes @ 0x2D
   871  004D                     	ds	1
   872  004E                     scale@scl:	
   873  004E                     ___ftadd@exp2:	
   874                           ; 1 bytes @ 0x2E
   875                           
   876                           
   877                           ; 1 bytes @ 0x2E
   878  004E                     	ds	1
   879  004F                     ___ftadd@exp1:	
   880                           
   881                           ; 1 bytes @ 0x2F
   882  004F                     	ds	1
   883  0050                     ?_fround:	
   884  0050                     ?___ftsub:	
   885                           ; 3 bytes @ 0x30
   886                           
   887  0050                     ___ftsub@f2:	
   888                           ; 3 bytes @ 0x30
   889                           
   890                           
   891                           ; 3 bytes @ 0x30
   892  0050                     	ds	3
   893  0053                     ___ftsub@f1:	
   894  0053                     _fround$4148:	
   895                           ; 3 bytes @ 0x33
   896                           
   897                           
   898                           ; 3 bytes @ 0x33
   899  0053                     	ds	3
   900  0056                     _fround$4147:	
   901                           
   902                           ; 3 bytes @ 0x36
   903  0056                     	ds	3
   904  0059                     fround@prec:	
   905                           
   906                           ; 1 bytes @ 0x39
   907  0059                     	ds	1
   908  005A                     ?_printf:	
   909                           
   910                           ; 2 bytes @ 0x3A
   911  005A                     	ds	3
   912  005D                     ??_printf:	
   913                           
   914                           ; 0 bytes @ 0x3D
   915  005D                     	ds	5
   916  0062                     ??_main:	
   917                           
   918                           ; 0 bytes @ 0x42
   919  0062                     	ds	2
   920  0064                     main@data_pwm:	
   921                           
   922                           ; 3 bytes @ 0x44
   923  0064                     	ds	3
   924  0067                     main@b:	
   925                           
   926                           ; 2 bytes @ 0x47
   927  0067                     	ds	2
   928                           
   929                           	psect	maintext
   930  082B                     __pmaintext:	
   931 ;;Data sizes: Strings 20, constant 118, data 0, bss 21, persistent 0 stack 0
   932 ;;Auto spaces:   Size  Autos    Used
   933 ;; COMMON          14      9      11
   934 ;; BANK0           80     73      79
   935 ;; BANK1           80     25      38
   936 ;; BANK3           96      0       0
   937 ;; BANK2           96      0       0
   938 ;;
   939 ;; Pointer list with targets:
   940 ;; ?___ftpack	float  size(1) Largest target is 0
   941 ;;
   942 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   943 ;;
   944 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   945 ;;
   946 ;; ?___ftsub	float  size(1) Largest target is 0
   947 ;;
   948 ;; ?___lltoft	float  size(1) Largest target is 0
   949 ;;
   950 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   951 ;;
   952 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   953 ;;
   954 ;; ?___fttol	long  size(1) Largest target is 0
   955 ;;
   956 ;; ?___ftadd	float  size(1) Largest target is 0
   957 ;;
   958 ;; ?___ftneg	float  size(1) Largest target is 0
   959 ;;
   960 ;; ?___awmod	int  size(1) Largest target is 40
   961 ;;		 -> dpowers(CODE[40]), 
   962 ;;
   963 ;; ?_scale	int  size(1) Largest target is 0
   964 ;;
   965 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   966 ;;
   967 ;; ?_fround	unsigned int  size(1) Largest target is 0
   968 ;;
   969 ;; ?___awdiv	int  size(1) Largest target is 0
   970 ;;
   971 ;; ?___ftdiv	float  size(1) Largest target is 0
   972 ;;
   973 ;; ?___awtoft	float  size(1) Largest target is 0
   974 ;;
   975 ;; ?___ftmul	float  size(1) Largest target is 0
   976 ;;
   977 ;; ?_atoi	int  size(1) Largest target is 0
   978 ;;
   979 ;; atoi@s	PTR const unsigned char  size(1) Largest target is 3
   980 ;;		 -> main@data_pwm(BANK0[3]), 
   981 ;;
   982 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   983 ;;		 -> STR_2(CODE[11]), STR_1(CODE[9]), 
   984 ;;
   985 ;; ?_printf	int  size(1) Largest target is 0
   986 ;;
   987 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   988 ;;		 -> ?_printf(BANK0[2]), 
   989 ;;
   990 ;; S3173$_cp	PTR const unsigned char  size(1) Largest target is 0
   991 ;;
   992 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   993 ;;
   994 ;;
   995 ;; Critical Paths under _main in COMMON
   996 ;;
   997 ;;   _main->___awtoft
   998 ;;   _main->_lcd_gotoxy
   999 ;;   _printf->___wmul
  1000 ;;   _printf->___ftge
  1001 ;;   _printf->__div_to_l_
  1002 ;;   _printf->__tdiv_to_l_
  1003 ;;   _printf->___lltoft
  1004 ;;   _printf->___llmod
  1005 ;;   _lcd_putc->_lcd_gotoxy
  1006 ;;   ___ftsub->___lltoft
  1007 ;;   _scale->___awmod
  1008 ;;   _fround->___lbdiv
  1009 ;;   _lcd_gotoxy->_lcd_put_byte
  1010 ;;   _lcd_init->_lcd_put_byte
  1011 ;;   ___lltoft->___ftpack
  1012 ;;   ___awtoft->___ftpack
  1013 ;;   ___ftmul->___awtoft
  1014 ;;   ___ftmul->___awmod
  1015 ;;   ___ftmul->___lbdiv
  1016 ;;   ___ftdiv->___awtoft
  1017 ;;   ___ftadd->___lbdiv
  1018 ;;   _atoi->___wmul
  1019 ;;   ___llmod->___lldiv
  1020 ;;   ___awdiv->___awmod
  1021 ;;   ___fttol->___awmod
  1022 ;;   ___lbdiv->___lbmod
  1023 ;;   ___bmul->___lbdiv
  1024 ;;
  1025 ;; Critical Paths under _ngat in COMMON
  1026 ;;
  1027 ;;   None.
  1028 ;;
  1029 ;; Critical Paths under _main in BANK0
  1030 ;;
  1031 ;;   _main->_printf
  1032 ;;   _printf->_fround
  1033 ;;   _putch->_lcd_putc
  1034 ;;   _lcd_putc->_lcd_gotoxy
  1035 ;;   ___ftsub->___ftadd
  1036 ;;   _scale->___ftmul
  1037 ;;   _fround->___ftadd
  1038 ;;   ___lltoft->___ftpack
  1039 ;;   ___awtoft->___ftpack
  1040 ;;   ___ftmul->___ftdiv
  1041 ;;   ___ftmul->___fttol
  1042 ;;   ___ftdiv->___awtoft
  1043 ;;   ___ftadd->___ftmul
  1044 ;;   _pwm_10bit->___awdiv
  1045 ;;   ___llmod->___lldiv
  1046 ;;   ___fttol->___awdiv
  1047 ;;   ___bmul->___lbdiv
  1048 ;;
  1049 ;; Critical Paths under _ngat in BANK0
  1050 ;;
  1051 ;;   None.
  1052 ;;
  1053 ;; Critical Paths under _main in BANK1
  1054 ;;
  1055 ;;   _main->_printf
  1056 ;;
  1057 ;; Critical Paths under _ngat in BANK1
  1058 ;;
  1059 ;;   None.
  1060 ;;
  1061 ;; Critical Paths under _main in BANK3
  1062 ;;
  1063 ;;   None.
  1064 ;;
  1065 ;; Critical Paths under _ngat in BANK3
  1066 ;;
  1067 ;;   None.
  1068 ;;
  1069 ;; Critical Paths under _main in BANK2
  1070 ;;
  1071 ;;   None.
  1072 ;;
  1073 ;; Critical Paths under _ngat in BANK2
  1074 ;;
  1075 ;;   None.
  1076 ;;
  1077 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1078 ;;
  1079 ;;
  1080 ;;Call Graph Tables:
  1081 ;;
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (0) _main                                                17    17      0   18760
  1086 ;;                                             66 BANK0      7     7      0
  1087 ;;                           _lcd_init
  1088 ;;                          _pwm_10bit
  1089 ;;                                 _tx
  1090 ;;                                 _rx
  1091 ;;                               _atoi
  1092 ;;                           ___awtoft
  1093 ;;                            ___ftdiv
  1094 ;;                            ___ftmul
  1095 ;;                         _lcd_gotoxy
  1096 ;;                             _printf
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; (1) _printf                                              37    34      3   14911
  1099 ;;                                             58 BANK0      8     5      3
  1100 ;;                                              0 BANK1     25    25      0
  1101 ;;                              _putch
  1102 ;;                            _isdigit
  1103 ;;                             ___wmul
  1104 ;;                             ___ftge
  1105 ;;                            ___ftneg
  1106 ;;                            ___awdiv
  1107 ;;                              _scale
  1108 ;;                            ___ftmul
  1109 ;;                             _fround
  1110 ;;                            ___ftadd
  1111 ;;                            ___fttol
  1112 ;;                         __div_to_l_
  1113 ;;                        __tdiv_to_l_
  1114 ;;                           ___lltoft
  1115 ;;                            ___ftsub
  1116 ;;                            ___lldiv
  1117 ;;                            ___llmod
  1118 ;; ---------------------------------------------------------------------------------
  1119 ;; (2) _putch                                                1     1      0     988
  1120 ;;                                              3 BANK0      1     1      0
  1121 ;;                           _lcd_putc
  1122 ;; ---------------------------------------------------------------------------------
  1123 ;; (3) _lcd_putc                                             1     1      0     957
  1124 ;;                                              2 BANK0      1     1      0
  1125 ;;                       _lcd_put_byte
  1126 ;;                           _lcd_busy
  1127 ;;                         _lcd_gotoxy
  1128 ;;                            _isprint
  1129 ;; ---------------------------------------------------------------------------------
  1130 ;; (2) ___ftsub                                              6     0      6    1602
  1131 ;;                                             48 BANK0      6     0      6
  1132 ;;                            ___ftadd
  1133 ;;                           ___lltoft (ARG)
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (2) _scale                                               14    11      3    2201
  1136 ;;                                             36 BANK0     11     8      3
  1137 ;;                            ___awmod
  1138 ;;                            ___awdiv
  1139 ;;                            ___ftmul
  1140 ;;                             ___bmul
  1141 ;;                            ___fttol (ARG)
  1142 ;; ---------------------------------------------------------------------------------
  1143 ;; (2) _fround                                              13    10      3    1647
  1144 ;;                                             48 BANK0     10     7      3
  1145 ;;                            ___lbmod
  1146 ;;                             ___bmul
  1147 ;;                            ___lbdiv
  1148 ;;                            ___ftmul
  1149 ;;                            ___ftadd (ARG)
  1150 ;; ---------------------------------------------------------------------------------
  1151 ;; (4) _lcd_gotoxy                                           3     2      1     449
  1152 ;;                                              8 COMMON     1     0      1
  1153 ;;                                              0 BANK0      2     2      0
  1154 ;;                       _lcd_put_byte
  1155 ;;                           _lcd_busy
  1156 ;; ---------------------------------------------------------------------------------
  1157 ;; (1) _lcd_init                                             4     4      0     347
  1158 ;;                                              0 BANK0      3     3      0
  1159 ;;                       _lcd_put_byte
  1160 ;;                           _lcd_busy
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (2) ___lltoft                                             5     1      4     414
  1163 ;;                                              8 COMMON     1     1      0
  1164 ;;                                              3 BANK0      4     0      4
  1165 ;;                           ___ftpack
  1166 ;; ---------------------------------------------------------------------------------
  1167 ;; (1) ___awtoft                                             4     1      3     445
  1168 ;;                                              8 COMMON     1     1      0
  1169 ;;                                              3 BANK0      3     0      3
  1170 ;;                           ___ftpack
  1171 ;; ---------------------------------------------------------------------------------
  1172 ;; (3) ___ftmul                                             15     9      6     800
  1173 ;;                                             21 BANK0     15     9      6
  1174 ;;                           ___ftpack
  1175 ;;                            ___ftdiv (ARG)
  1176 ;;                           ___awtoft (ARG)
  1177 ;;                            ___fttol (ARG)
  1178 ;;                            ___awdiv (ARG)
  1179 ;;                            ___awmod (ARG)
  1180 ;;                             ___bmul (ARG)
  1181 ;;                            ___lbdiv (ARG)
  1182 ;;                            ___lbmod (ARG)
  1183 ;; ---------------------------------------------------------------------------------
  1184 ;; (1) ___ftdiv                                             15     9      6     732
  1185 ;;                                              6 BANK0     15     9      6
  1186 ;;                           ___ftpack
  1187 ;;                           ___awtoft (ARG)
  1188 ;; ---------------------------------------------------------------------------------
  1189 ;; (3) ___ftadd                                             12     6      6    1537
  1190 ;;                                             36 BANK0     12     6      6
  1191 ;;                           ___ftpack
  1192 ;;                            ___lbmod (ARG)
  1193 ;;                             ___bmul (ARG)
  1194 ;;                            ___lbdiv (ARG)
  1195 ;;                            ___ftmul (ARG)
  1196 ;; ---------------------------------------------------------------------------------
  1197 ;; (1) _atoi                                                 8     6      2     494
  1198 ;;                                              0 BANK0      8     6      2
  1199 ;;                             ___wmul
  1200 ;;                            _isdigit
  1201 ;; ---------------------------------------------------------------------------------
  1202 ;; (1) _pwm_10bit                                            2     0      2     366
  1203 ;;                                              8 BANK0      2     0      2
  1204 ;;                            ___awdiv
  1205 ;; ---------------------------------------------------------------------------------
  1206 ;; (5) _lcd_busy                                             2     2      0      34
  1207 ;;                                              3 COMMON     2     2      0
  1208 ;; ---------------------------------------------------------------------------------
  1209 ;; (5) _lcd_put_byte                                         5     4      1     313
  1210 ;;                                              3 COMMON     5     4      1
  1211 ;; ---------------------------------------------------------------------------------
  1212 ;; (3) ___awmod                                              6     2      4     296
  1213 ;;                                              3 COMMON     6     2      4
  1214 ;; ---------------------------------------------------------------------------------
  1215 ;; (2) ___lldiv                                             13     5      8     241
  1216 ;;                                              3 COMMON     5     5      0
  1217 ;;                                              0 BANK0      8     0      8
  1218 ;; ---------------------------------------------------------------------------------
  1219 ;; (2) ___ftge                                               6     0      6     136
  1220 ;;                                              3 COMMON     6     0      6
  1221 ;; ---------------------------------------------------------------------------------
  1222 ;; (2) ___ftneg                                              3     0      3      45
  1223 ;;                                              3 COMMON     3     0      3
  1224 ;; ---------------------------------------------------------------------------------
  1225 ;; (2) ___llmod                                              9     1      8     232
  1226 ;;                                              8 COMMON     1     1      0
  1227 ;;                                              8 BANK0      8     0      8
  1228 ;;                            ___lldiv (ARG)
  1229 ;; ---------------------------------------------------------------------------------
  1230 ;; (3) ___awdiv                                              8     4      4     300
  1231 ;;                                              0 BANK0      8     4      4
  1232 ;;                            ___awmod (ARG)
  1233 ;; ---------------------------------------------------------------------------------
  1234 ;; (2) ___fttol                                             13     9      4     252
  1235 ;;                                              8 BANK0     13     9      4
  1236 ;;                           ___ftpack (ARG)
  1237 ;;                            ___awmod (ARG)
  1238 ;;                            ___awdiv (ARG)
  1239 ;;                             ___bmul (ARG)
  1240 ;; ---------------------------------------------------------------------------------
  1241 ;; (4) ___ftpack                                             8     3      5     312
  1242 ;;                                              3 COMMON     5     0      5
  1243 ;;                                              0 BANK0      3     3      0
  1244 ;; ---------------------------------------------------------------------------------
  1245 ;; (3) ___lbmod                                              5     4      1     159
  1246 ;;                                              3 COMMON     5     4      1
  1247 ;; ---------------------------------------------------------------------------------
  1248 ;; (3) ___lbdiv                                              4     3      1     162
  1249 ;;                                              8 COMMON     1     0      1
  1250 ;;                                              0 BANK0      3     3      0
  1251 ;;                            ___lbmod (ARG)
  1252 ;; ---------------------------------------------------------------------------------
  1253 ;; (2) ___wmul                                               6     2      4      92
  1254 ;;                                              3 COMMON     6     2      4
  1255 ;; ---------------------------------------------------------------------------------
  1256 ;; (3) ___bmul                                               3     2      1     108
  1257 ;;                                              3 BANK0      3     2      1
  1258 ;;                            ___lbmod (ARG)
  1259 ;;                            ___lbdiv (ARG)
  1260 ;; ---------------------------------------------------------------------------------
  1261 ;; (2) __div_to_l_                                          20    14      6     446
  1262 ;;                                              3 COMMON     6     0      6
  1263 ;;                                              0 BANK0     14    14      0
  1264 ;; ---------------------------------------------------------------------------------
  1265 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1266 ;;                                              3 COMMON     6     0      6
  1267 ;;                                              0 BANK0      9     9      0
  1268 ;; ---------------------------------------------------------------------------------
  1269 ;; (2) _isdigit                                              2     2      0      68
  1270 ;;                                              3 COMMON     2     2      0
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (1) _rx                                                   0     0      0       0
  1273 ;; ---------------------------------------------------------------------------------
  1274 ;; (1) _tx                                                   0     0      0       0
  1275 ;; ---------------------------------------------------------------------------------
  1276 ;; (4) _isprint                                              2     2      0      68
  1277 ;;                                              3 COMMON     2     2      0
  1278 ;; ---------------------------------------------------------------------------------
  1279 ;; Estimated maximum stack depth 5
  1280 ;; ---------------------------------------------------------------------------------
  1281 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (6) _ngat                                                 3     3      0       0
  1284 ;;                                              0 COMMON     3     3      0
  1285 ;; ---------------------------------------------------------------------------------
  1286 ;; Estimated maximum stack depth 6
  1287 ;; ---------------------------------------------------------------------------------
  1288 ;; Call Graph Graphs:
  1289 ;; _main (ROOT)
  1290 ;;   _lcd_init
  1291 ;;     _lcd_put_byte
  1292 ;;     _lcd_busy
  1293 ;;   _pwm_10bit
  1294 ;;     ___awdiv
  1295 ;;       ___awmod (ARG)
  1296 ;;   _tx
  1297 ;;   _rx
  1298 ;;   _atoi
  1299 ;;     ___wmul
  1300 ;;     _isdigit
  1301 ;;   ___awtoft
  1302 ;;     ___ftpack
  1303 ;;   ___ftdiv
  1304 ;;     ___ftpack
  1305 ;;     ___awtoft (ARG)
  1306 ;;       ___ftpack
  1307 ;;   ___ftmul
  1308 ;;     ___ftpack
  1309 ;;     ___ftdiv (ARG)
  1310 ;;       ___ftpack
  1311 ;;       ___awtoft (ARG)
  1312 ;;         ___ftpack
  1313 ;;     ___awtoft (ARG)
  1314 ;;       ___ftpack
  1315 ;;     ___fttol (ARG)
  1316 ;;       ___ftpack (ARG)
  1317 ;;       ___awmod (ARG)
  1318 ;;       ___awdiv (ARG)
  1319 ;;         ___awmod (ARG)
  1320 ;;       ___bmul (ARG)
  1321 ;;         ___lbmod (ARG)
  1322 ;;         ___lbdiv (ARG)
  1323 ;;           ___lbmod (ARG)
  1324 ;;     ___awdiv (ARG)
  1325 ;;       ___awmod (ARG)
  1326 ;;     ___awmod (ARG)
  1327 ;;     ___bmul (ARG)
  1328 ;;       ___lbmod (ARG)
  1329 ;;       ___lbdiv (ARG)
  1330 ;;         ___lbmod (ARG)
  1331 ;;     ___lbdiv (ARG)
  1332 ;;       ___lbmod (ARG)
  1333 ;;     ___lbmod (ARG)
  1334 ;;   _lcd_gotoxy
  1335 ;;     _lcd_put_byte
  1336 ;;     _lcd_busy
  1337 ;;   _printf
  1338 ;;     _putch
  1339 ;;       _lcd_putc
  1340 ;;         _lcd_put_byte
  1341 ;;         _lcd_busy
  1342 ;;         _lcd_gotoxy
  1343 ;;           _lcd_put_byte
  1344 ;;           _lcd_busy
  1345 ;;         _isprint
  1346 ;;     _isdigit
  1347 ;;     ___wmul
  1348 ;;     ___ftge
  1349 ;;     ___ftneg
  1350 ;;     ___awdiv
  1351 ;;       ___awmod (ARG)
  1352 ;;     _scale
  1353 ;;       ___awmod
  1354 ;;       ___awdiv
  1355 ;;         ___awmod (ARG)
  1356 ;;       ___ftmul
  1357 ;;         ___ftpack
  1358 ;;         ___ftdiv (ARG)
  1359 ;;           ___ftpack
  1360 ;;           ___awtoft (ARG)
  1361 ;;             ___ftpack
  1362 ;;         ___awtoft (ARG)
  1363 ;;           ___ftpack
  1364 ;;         ___fttol (ARG)
  1365 ;;           ___ftpack (ARG)
  1366 ;;           ___awmod (ARG)
  1367 ;;           ___awdiv (ARG)
  1368 ;;             ___awmod (ARG)
  1369 ;;           ___bmul (ARG)
  1370 ;;             ___lbmod (ARG)
  1371 ;;             ___lbdiv (ARG)
  1372 ;;               ___lbmod (ARG)
  1373 ;;         ___awdiv (ARG)
  1374 ;;           ___awmod (ARG)
  1375 ;;         ___awmod (ARG)
  1376 ;;         ___bmul (ARG)
  1377 ;;           ___lbmod (ARG)
  1378 ;;           ___lbdiv (ARG)
  1379 ;;             ___lbmod (ARG)
  1380 ;;         ___lbdiv (ARG)
  1381 ;;           ___lbmod (ARG)
  1382 ;;         ___lbmod (ARG)
  1383 ;;       ___bmul
  1384 ;;         ___lbmod (ARG)
  1385 ;;         ___lbdiv (ARG)
  1386 ;;           ___lbmod (ARG)
  1387 ;;       ___fttol (ARG)
  1388 ;;         ___ftpack (ARG)
  1389 ;;         ___awmod (ARG)
  1390 ;;         ___awdiv (ARG)
  1391 ;;           ___awmod (ARG)
  1392 ;;         ___bmul (ARG)
  1393 ;;           ___lbmod (ARG)
  1394 ;;           ___lbdiv (ARG)
  1395 ;;             ___lbmod (ARG)
  1396 ;;     ___ftmul
  1397 ;;       ___ftpack
  1398 ;;       ___ftdiv (ARG)
  1399 ;;         ___ftpack
  1400 ;;         ___awtoft (ARG)
  1401 ;;           ___ftpack
  1402 ;;       ___awtoft (ARG)
  1403 ;;         ___ftpack
  1404 ;;       ___fttol (ARG)
  1405 ;;         ___ftpack (ARG)
  1406 ;;         ___awmod (ARG)
  1407 ;;         ___awdiv (ARG)
  1408 ;;           ___awmod (ARG)
  1409 ;;         ___bmul (ARG)
  1410 ;;           ___lbmod (ARG)
  1411 ;;           ___lbdiv (ARG)
  1412 ;;             ___lbmod (ARG)
  1413 ;;       ___awdiv (ARG)
  1414 ;;         ___awmod (ARG)
  1415 ;;       ___awmod (ARG)
  1416 ;;       ___bmul (ARG)
  1417 ;;         ___lbmod (ARG)
  1418 ;;         ___lbdiv (ARG)
  1419 ;;           ___lbmod (ARG)
  1420 ;;       ___lbdiv (ARG)
  1421 ;;         ___lbmod (ARG)
  1422 ;;       ___lbmod (ARG)
  1423 ;;     _fround
  1424 ;;       ___lbmod
  1425 ;;       ___bmul
  1426 ;;         ___lbmod (ARG)
  1427 ;;         ___lbdiv (ARG)
  1428 ;;           ___lbmod (ARG)
  1429 ;;       ___lbdiv
  1430 ;;         ___lbmod (ARG)
  1431 ;;       ___ftmul
  1432 ;;         ___ftpack
  1433 ;;         ___ftdiv (ARG)
  1434 ;;           ___ftpack
  1435 ;;           ___awtoft (ARG)
  1436 ;;             ___ftpack
  1437 ;;         ___awtoft (ARG)
  1438 ;;           ___ftpack
  1439 ;;         ___fttol (ARG)
  1440 ;;           ___ftpack (ARG)
  1441 ;;           ___awmod (ARG)
  1442 ;;           ___awdiv (ARG)
  1443 ;;             ___awmod (ARG)
  1444 ;;           ___bmul (ARG)
  1445 ;;             ___lbmod (ARG)
  1446 ;;             ___lbdiv (ARG)
  1447 ;;               ___lbmod (ARG)
  1448 ;;         ___awdiv (ARG)
  1449 ;;           ___awmod (ARG)
  1450 ;;         ___awmod (ARG)
  1451 ;;         ___bmul (ARG)
  1452 ;;           ___lbmod (ARG)
  1453 ;;           ___lbdiv (ARG)
  1454 ;;             ___lbmod (ARG)
  1455 ;;         ___lbdiv (ARG)
  1456 ;;           ___lbmod (ARG)
  1457 ;;         ___lbmod (ARG)
  1458 ;;       ___ftadd (ARG)
  1459 ;;         ___ftpack
  1460 ;;         ___lbmod (ARG)
  1461 ;;         ___bmul (ARG)
  1462 ;;           ___lbmod (ARG)
  1463 ;;           ___lbdiv (ARG)
  1464 ;;             ___lbmod (ARG)
  1465 ;;         ___lbdiv (ARG)
  1466 ;;           ___lbmod (ARG)
  1467 ;;         ___ftmul (ARG)
  1468 ;;           ___ftpack
  1469 ;;           ___ftdiv (ARG)
  1470 ;;             ___ftpack
  1471 ;;             ___awtoft (ARG)
  1472 ;;               ___ftpack
  1473 ;;           ___awtoft (ARG)
  1474 ;;             ___ftpack
  1475 ;;           ___fttol (ARG)
  1476 ;;             ___ftpack (ARG)
  1477 ;;             ___awmod (ARG)
  1478 ;;             ___awdiv (ARG)
  1479 ;;               ___awmod (ARG)
  1480 ;;             ___bmul (ARG)
  1481 ;;               ___lbmod (ARG)
  1482 ;;               ___lbdiv (ARG)
  1483 ;;                 ___lbmod (ARG)
  1484 ;;           ___awdiv (ARG)
  1485 ;;             ___awmod (ARG)
  1486 ;;           ___awmod (ARG)
  1487 ;;           ___bmul (ARG)
  1488 ;;             ___lbmod (ARG)
  1489 ;;             ___lbdiv (ARG)
  1490 ;;               ___lbmod (ARG)
  1491 ;;           ___lbdiv (ARG)
  1492 ;;             ___lbmod (ARG)
  1493 ;;           ___lbmod (ARG)
  1494 ;;     ___ftadd
  1495 ;;       ___ftpack
  1496 ;;       ___lbmod (ARG)
  1497 ;;       ___bmul (ARG)
  1498 ;;         ___lbmod (ARG)
  1499 ;;         ___lbdiv (ARG)
  1500 ;;           ___lbmod (ARG)
  1501 ;;       ___lbdiv (ARG)
  1502 ;;         ___lbmod (ARG)
  1503 ;;       ___ftmul (ARG)
  1504 ;;         ___ftpack
  1505 ;;         ___ftdiv (ARG)
  1506 ;;           ___ftpack
  1507 ;;           ___awtoft (ARG)
  1508 ;;             ___ftpack
  1509 ;;         ___awtoft (ARG)
  1510 ;;           ___ftpack
  1511 ;;         ___fttol (ARG)
  1512 ;;           ___ftpack (ARG)
  1513 ;;           ___awmod (ARG)
  1514 ;;           ___awdiv (ARG)
  1515 ;;             ___awmod (ARG)
  1516 ;;           ___bmul (ARG)
  1517 ;;             ___lbmod (ARG)
  1518 ;;             ___lbdiv (ARG)
  1519 ;;               ___lbmod (ARG)
  1520 ;;         ___awdiv (ARG)
  1521 ;;           ___awmod (ARG)
  1522 ;;         ___awmod (ARG)
  1523 ;;         ___bmul (ARG)
  1524 ;;           ___lbmod (ARG)
  1525 ;;           ___lbdiv (ARG)
  1526 ;;             ___lbmod (ARG)
  1527 ;;         ___lbdiv (ARG)
  1528 ;;           ___lbmod (ARG)
  1529 ;;         ___lbmod (ARG)
  1530 ;;     ___fttol
  1531 ;;       ___ftpack (ARG)
  1532 ;;       ___awmod (ARG)
  1533 ;;       ___awdiv (ARG)
  1534 ;;         ___awmod (ARG)
  1535 ;;       ___bmul (ARG)
  1536 ;;         ___lbmod (ARG)
  1537 ;;         ___lbdiv (ARG)
  1538 ;;           ___lbmod (ARG)
  1539 ;;     __div_to_l_
  1540 ;;     __tdiv_to_l_
  1541 ;;     ___lltoft
  1542 ;;       ___ftpack
  1543 ;;     ___ftsub
  1544 ;;       ___ftadd
  1545 ;;         ___ftpack
  1546 ;;         ___lbmod (ARG)
  1547 ;;         ___bmul (ARG)
  1548 ;;           ___lbmod (ARG)
  1549 ;;           ___lbdiv (ARG)
  1550 ;;             ___lbmod (ARG)
  1551 ;;         ___lbdiv (ARG)
  1552 ;;           ___lbmod (ARG)
  1553 ;;         ___ftmul (ARG)
  1554 ;;           ___ftpack
  1555 ;;           ___ftdiv (ARG)
  1556 ;;             ___ftpack
  1557 ;;             ___awtoft (ARG)
  1558 ;;               ___ftpack
  1559 ;;           ___awtoft (ARG)
  1560 ;;             ___ftpack
  1561 ;;           ___fttol (ARG)
  1562 ;;             ___ftpack (ARG)
  1563 ;;             ___awmod (ARG)
  1564 ;;             ___awdiv (ARG)
  1565 ;;               ___awmod (ARG)
  1566 ;;             ___bmul (ARG)
  1567 ;;               ___lbmod (ARG)
  1568 ;;               ___lbdiv (ARG)
  1569 ;;                 ___lbmod (ARG)
  1570 ;;           ___awdiv (ARG)
  1571 ;;             ___awmod (ARG)
  1572 ;;           ___awmod (ARG)
  1573 ;;           ___bmul (ARG)
  1574 ;;             ___lbmod (ARG)
  1575 ;;             ___lbdiv (ARG)
  1576 ;;               ___lbmod (ARG)
  1577 ;;           ___lbdiv (ARG)
  1578 ;;             ___lbmod (ARG)
  1579 ;;           ___lbmod (ARG)
  1580 ;;       ___lltoft (ARG)
  1581 ;;         ___ftpack
  1582 ;;     ___lldiv
  1583 ;;     ___llmod
  1584 ;;       ___lldiv (ARG)
  1585 ;;
  1586 ;; _ngat (ROOT)
  1587 ;;
  1588 ;; Address spaces:
  1589 ;;Name               Size   Autos  Total    Cost      Usage
  1590 ;;BITCOMMON            E      0       0       0        0.0%
  1591 ;;EEDATA             100      0       0       0        0.0%
  1592 ;;NULL                 0      0       0       0        0.0%
  1593 ;;CODE                 0      0       0       0        0.0%
  1594 ;;COMMON               E      9       B       1       78.6%
  1595 ;;BITSFR0              0      0       0       1        0.0%
  1596 ;;SFR0                 0      0       0       1        0.0%
  1597 ;;BITSFR1              0      0       0       2        0.0%
  1598 ;;SFR1                 0      0       0       2        0.0%
  1599 ;;STACK                0      0       5       2        0.0%
  1600 ;;ABS                  0      0      80       3        0.0%
  1601 ;;BITBANK0            50      0       0       4        0.0%
  1602 ;;BITSFR3              0      0       0       4        0.0%
  1603 ;;SFR3                 0      0       0       4        0.0%
  1604 ;;BANK0               50     49      4F       5       98.8%
  1605 ;;BITSFR2              0      0       0       5        0.0%
  1606 ;;SFR2                 0      0       0       5        0.0%
  1607 ;;BITBANK1            50      0       0       6        0.0%
  1608 ;;BANK1               50     19      26       7       47.5%
  1609 ;;BITBANK3            60      0       0       8        0.0%
  1610 ;;BANK3               60      0       0       9        0.0%
  1611 ;;BITBANK2            60      0       0      10        0.0%
  1612 ;;BANK2               60      0       0      11        0.0%
  1613 ;;DATA                 0      0      85      12        0.0%
  1614                           
  1615                           
  1616 ;; *************** function _main *****************
  1617 ;; Defined at:
  1618 ;;		line 22 in file "D:\TTVXL\Project TTVXL\BT01week16ttvxlbuoi1\BT01week16ttvxlbuoi1.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  b               2   71[BANK0 ] int 
  1623 ;;  data_tx        10    0        unsigned char [10]
  1624 ;;  data_pwm        3   68[BANK0 ] unsigned char [3]
  1625 ;; Return value:  Size  Location     Type
  1626 ;;		None               void
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 17F/0
  1631 ;;		On exit  : 60/20
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1634 ;;      Params:         0       0       0       0       0
  1635 ;;      Locals:         0       5       0       0       0
  1636 ;;      Temps:          0       2       0       0       0
  1637 ;;      Totals:         0       7       0       0       0
  1638 ;;Total ram usage:        7 bytes
  1639 ;; Hardware stack levels required when called:    6
  1640 ;; This function calls:
  1641 ;;		_lcd_init
  1642 ;;		_pwm_10bit
  1643 ;;		_tx
  1644 ;;		_rx
  1645 ;;		_atoi
  1646 ;;		___awtoft
  1647 ;;		___ftdiv
  1648 ;;		___ftmul
  1649 ;;		_lcd_gotoxy
  1650 ;;		_printf
  1651 ;; This function is called by:
  1652 ;;		Startup code after reset
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655  082B                     _main:	
  1656                           
  1657                           ;BT01week16ttvxlbuoi1.c: 23: ANSEL = ANSELH = 0;
  1658                           
  1659                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1660  082B  1683               	bsf	3,5	;RP0=1, select bank3
  1661  082C  1703               	bsf	3,6	;RP1=1, select bank3
  1662  082D  0189               	clrf	9	;volatile
  1663  082E  0188               	clrf	8	;volatile
  1664                           
  1665                           ;BT01week16ttvxlbuoi1.c: 24: lcd_init();
  1666  082F  120A  158A  22B5   	fcall	_lcd_init
      +       120A  158A         
  1667                           
  1668                           ;BT01week16ttvxlbuoi1.c: 25: TRISE0 = 0;
  1669  0834  1683               	bsf	3,5	;RP0=1, select bank1
  1670  0835  1009               	bcf	9,0
  1671                           
  1672                           ;BT01week16ttvxlbuoi1.c: 26: TRISE1 = 0; RE1=0;
  1673  0836  1089               	bcf	9,1
  1674  0837  1283               	bcf	3,5	;RP0=0, select bank0
  1675  0838  1089               	bcf	9,1
  1676                           
  1677                           ;BT01week16ttvxlbuoi1.c: 27: TRISE2 = 0;
  1678  0839  1683               	bsf	3,5	;RP0=1, select bank1
  1679  083A  1109               	bcf	9,2
  1680                           
  1681                           ;BT01week16ttvxlbuoi1.c: 28: TRISB0 = 1;
  1682  083B  1406               	bsf	6,0
  1683                           
  1684                           ;BT01week16ttvxlbuoi1.c: 30: TRISC2 = 0;
  1685  083C  1107               	bcf	7,2
  1686                           
  1687                           ;BT01week16ttvxlbuoi1.c: 32: T2CKPS1 = 0; T2CKPS0 = 1;
  1688  083D  1283               	bcf	3,5	;RP0=0, select bank0
  1689  083E  307C               	movlw	124
  1690  083F  1092               	bcf	18,1
  1691  0840  1412               	bsf	18,0
  1692                           
  1693                           ;BT01week16ttvxlbuoi1.c: 33: PR2 = 124; TMR2 = 0;
  1694  0841  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0842  0092               	movwf	18	;volatile
  1696  0843  1283               	bcf	3,5	;RP0=0, select bank0
  1697  0844  0191               	clrf	17	;volatile
  1698  0845  300C               	movlw	12
  1699                           
  1700                           ;BT01week16ttvxlbuoi1.c: 34: TMR2ON = 1;
  1701  0846  1512               	bsf	18,2
  1702                           
  1703                           ;BT01week16ttvxlbuoi1.c: 36: CCP1CON = 0b00001100;
  1704  0847  0097               	movwf	23	;volatile
  1705                           
  1706                           ;BT01week16ttvxlbuoi1.c: 38: TMR1CS = 1;
  1707  0848  1490               	bsf	16,1
  1708                           
  1709                           ;BT01week16ttvxlbuoi1.c: 39: T1CKPS1 = 0;T1CKPS0 = 0;
  1710  0849  1290               	bcf	16,5
  1711  084A  1210               	bcf	16,4
  1712                           
  1713                           ;BT01week16ttvxlbuoi1.c: 40: T1SYNC = 1;
  1714  084B  1510               	bsf	16,2
  1715                           
  1716                           ;BT01week16ttvxlbuoi1.c: 41: TMR1 = 0;
  1717  084C  018E               	clrf	14	;volatile
  1718  084D  018F               	clrf	15	;volatile
  1719                           
  1720                           ;BT01week16ttvxlbuoi1.c: 42: TMR1GE = 0; TMR1ON = 1;
  1721  084E  1310               	bcf	16,6
  1722  084F  1410               	bsf	16,0
  1723                           
  1724                           ;BT01week16ttvxlbuoi1.c: 45: T0CS = 0;
  1725  0850  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0851  3006               	movlw	6
  1727  0852  1281               	bcf	1,5
  1728                           
  1729                           ;BT01week16ttvxlbuoi1.c: 46: PSA = 0;
  1730  0853  1181               	bcf	1,3
  1731                           
  1732                           ;BT01week16ttvxlbuoi1.c: 47: PS2 = 0; PS1 = 1;PS0 = 0;
  1733  0854  1101               	bcf	1,2
  1734  0855  1481               	bsf	1,1
  1735  0856  1001               	bcf	1,0
  1736                           
  1737                           ;BT01week16ttvxlbuoi1.c: 48: TMR0 = 6;
  1738  0857  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0858  0081               	movwf	1	;volatile
  1740  0859  3001               	movlw	1
  1741                           
  1742                           ;BT01week16ttvxlbuoi1.c: 49: T0IE = 1; T0IF = 0; GIE = 1; PEIE =1;
  1743  085A  168B               	bsf	11,5
  1744  085B  110B               	bcf	11,2
  1745  085C  178B               	bsf	11,7
  1746  085D  170B               	bsf	11,6
  1747                           
  1748                           ;BT01week16ttvxlbuoi1.c: 51: WPUB = 0b00000001;
  1749  085E  1683               	bsf	3,5	;RP0=1, select bank1
  1750  085F  0095               	movwf	21	;volatile
  1751  0860  3041               	movlw	65
  1752                           
  1753                           ;BT01week16ttvxlbuoi1.c: 52: nRBPU =0;
  1754  0861  1381               	bcf	1,7
  1755                           
  1756                           ;BT01week16ttvxlbuoi1.c: 53: GIE = 1;
  1757  0862  178B               	bsf	11,7
  1758                           
  1759                           ;BT01week16ttvxlbuoi1.c: 54: INTE = 1;
  1760  0863  160B               	bsf	11,4
  1761                           
  1762                           ;BT01week16ttvxlbuoi1.c: 55: INTF = 0;
  1763  0864  108B               	bcf	11,1
  1764                           
  1765                           ;BT01week16ttvxlbuoi1.c: 56: _delay((unsigned long)((10)*(20000000/4000.0)));
  1766  0865  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0866  00E3               	movwf	??_main+1
  1768  0867  30EE               	movlw	238
  1769  0868  00E2               	movwf	??_main
  1770  0869                     u5777:	
  1771  0869  0BE2               	decfsz	??_main,f
  1772  086A  2869               	goto	u5777
  1773  086B  0BE3               	decfsz	??_main+1,f
  1774  086C  2869               	goto	u5777
  1775  086D  0064               	clrwdt
  1776                           
  1777                           ;BT01week16ttvxlbuoi1.c: 58: pwm_t = 300;
  1778  086E  302C               	movlw	44
  1779  086F  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0870  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0871  00EB               	movwf	_pwm_t
  1782  0872  3001               	movlw	1
  1783  0873  00EC               	movwf	_pwm_t+1
  1784                           
  1785                           ;BT01week16ttvxlbuoi1.c: 59: pwm_10bit(pwm_t);
  1786  0874  302C               	movlw	44
  1787  0875  00A8               	movwf	?_pwm_10bit
  1788  0876  3001               	movlw	1
  1789  0877  00A9               	movwf	?_pwm_10bit+1
  1790  0878  120A  158A  2441   	fcall	_pwm_10bit
      +       120A  158A         
  1791                           
  1792                           ;BT01week16ttvxlbuoi1.c: 60: tx();
  1793  087D  120A  158A  2002   	fcall	_tx
      +       120A  158A         
  1794                           
  1795                           ;BT01week16ttvxlbuoi1.c: 61: rx();
  1796  0882  160A  118A  25AF   	fcall	_rx
      +       120A  158A         
  1797  0887                     l8672:	
  1798                           
  1799                           ;BT01week16ttvxlbuoi1.c: 65: {
  1800                           ;BT01week16ttvxlbuoi1.c: 67: for (int b=2;b<=4;b++){
  1801  0887  3002               	movlw	2
  1802  0888  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0889  00E7               	movwf	main@b
  1804  088A  01E8               	clrf	main@b+1
  1805  088B                     l8678:	
  1806                           
  1807                           ;BT01week16ttvxlbuoi1.c: 68: data_pwm[b-2]=data_rx[b];
  1808  088B  1283               	bcf	3,5	;RP0=0, select bank0
  1809  088C  1303               	bcf	3,6	;RP1=0, select bank0
  1810  088D  0867               	movf	main@b,w
  1811  088E  3EB9               	addlw	_data_rx& (0+255)
  1812  088F  0084               	movwf	4
  1813  0890  1383               	bcf	3,7	;select IRP bank1
  1814  0891  0800               	movf	0,w
  1815  0892  00E2               	movwf	??_main
  1816  0893  0867               	movf	main@b,w
  1817  0894  3EFE               	addlw	254
  1818  0895  3E64               	addlw	main@data_pwm& (0+255)
  1819  0896  0084               	movwf	4
  1820  0897  0862               	movf	??_main,w
  1821  0898  0080               	movwf	0
  1822  0899  0AE7               	incf	main@b,f
  1823  089A  1903               	skipnz
  1824  089B  0AE8               	incf	main@b+1,f
  1825  089C  0868               	movf	main@b+1,w
  1826  089D  3A80               	xorlw	128
  1827  089E  00FF               	movwf	127
  1828  089F  3080               	movlw	128
  1829  08A0  027F               	subwf	127,w
  1830  08A1  1D03               	skipz
  1831  08A2  28A5               	goto	u5765
  1832  08A3  3005               	movlw	5
  1833  08A4  0267               	subwf	main@b,w
  1834  08A5                     u5765:	
  1835  08A5  1C03               	skipc
  1836  08A6  288B               	goto	l8678
  1837                           
  1838                           ;BT01week16ttvxlbuoi1.c: 69: }
  1839                           ;BT01week16ttvxlbuoi1.c: 70: pwm_t=atoi(data_pwm);
  1840  08A7  3064               	movlw	main@data_pwm& (0+255)
  1841  08A8  160A  118A  2612   	fcall	_atoi
      +       120A  158A         
  1842  08AD  0821               	movf	?_atoi+1,w
  1843  08AE  00EC               	movwf	_pwm_t+1
  1844  08AF  0820               	movf	?_atoi,w
  1845  08B0  00EB               	movwf	_pwm_t
  1846                           
  1847                           ;BT01week16ttvxlbuoi1.c: 72: v = (xung/360.0)*10.0*60.0;
  1848  08B1  3016               	movlw	22
  1849  08B2  01B5               	clrf	?___ftmul
  1850  08B3  00B6               	movwf	?___ftmul+1
  1851  08B4  3044               	movlw	68
  1852  08B5  00B7               	movwf	?___ftmul+2
  1853  08B6  30B4               	movlw	180
  1854  08B7  01A6               	clrf	?___ftdiv
  1855  08B8  00A7               	movwf	?___ftdiv+1
  1856  08B9  3043               	movlw	67
  1857  08BA  00A8               	movwf	?___ftdiv+2
  1858  08BB  086E               	movf	_xung+1,w
  1859  08BC  00A4               	movwf	?___awtoft+1
  1860  08BD  086D               	movf	_xung,w
  1861  08BE  00A3               	movwf	?___awtoft
  1862  08BF  120A  158A  2455   	fcall	___awtoft
      +       120A  158A         
  1863  08C4  0823               	movf	?___awtoft,w
  1864  08C5  00A9               	movwf	?___ftdiv+3
  1865  08C6  0824               	movf	?___awtoft+1,w
  1866  08C7  00AA               	movwf	?___ftdiv+4
  1867  08C8  0825               	movf	?___awtoft+2,w
  1868  08C9  00AB               	movwf	?___ftdiv+5
  1869  08CA  120A  158A  2470   	fcall	___ftdiv
      +       120A  158A         
  1870  08CF  0826               	movf	?___ftdiv,w
  1871  08D0  00B8               	movwf	?___ftmul+3
  1872  08D1  0827               	movf	?___ftdiv+1,w
  1873  08D2  00B9               	movwf	?___ftmul+4
  1874  08D3  0828               	movf	?___ftdiv+2,w
  1875  08D4  00BA               	movwf	?___ftmul+5
  1876  08D5  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  1877  08DA  0835               	movf	?___ftmul,w
  1878  08DB  1683               	bsf	3,5	;RP0=1, select bank1
  1879  08DC  00C3               	movwf	_v^(0+128)
  1880  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  1881  08DE  0836               	movf	?___ftmul+1,w
  1882  08DF  1683               	bsf	3,5	;RP0=1, select bank1
  1883  08E0  00C4               	movwf	(_v+1)^(0+128)
  1884  08E1  1283               	bcf	3,5	;RP0=0, select bank0
  1885  08E2  0837               	movf	?___ftmul+2,w
  1886  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  1887  08E4  00C5               	movwf	(_v+2)^(0+128)
  1888                           
  1889                           ;BT01week16ttvxlbuoi1.c: 79: pwm_10bit(pwm_t);
  1890  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  1891  08E6  086C               	movf	_pwm_t+1,w
  1892  08E7  00A9               	movwf	?_pwm_10bit+1
  1893  08E8  086B               	movf	_pwm_t,w
  1894  08E9  00A8               	movwf	?_pwm_10bit
  1895  08EA  120A  158A  2441   	fcall	_pwm_10bit
      +       120A  158A         
  1896  08EF  3000               	movlw	0
  1897                           
  1898                           ;BT01week16ttvxlbuoi1.c: 80: lcd_gotoxy(0,0);
  1899  08F0  01F8               	clrf	?_lcd_gotoxy
  1900  08F1  120A  158A  226D   	fcall	_lcd_gotoxy
      +       120A  158A         
  1901                           
  1902                           ;BT01week16ttvxlbuoi1.c: 81: printf("v: %3.2f",v);
  1903  08F6  1683               	bsf	3,5	;RP0=1, select bank1
  1904  08F7  0843               	movf	_v^(0+128),w
  1905  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1906  08F9  00DA               	movwf	?_printf
  1907  08FA  1683               	bsf	3,5	;RP0=1, select bank1
  1908  08FB  0844               	movf	(_v+1)^(0+128),w
  1909  08FC  1283               	bcf	3,5	;RP0=0, select bank0
  1910  08FD  00DB               	movwf	?_printf+1
  1911  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  1912  08FF  0845               	movf	(_v+2)^(0+128),w
  1913  0900  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0901  00DC               	movwf	?_printf+2
  1915  0902  3082               	movlw	(STR_1-__stringbase)& (0+255)
  1916  0903  120A  118A  2011   	fcall	_printf
      +       120A  158A         
  1917  0908  3000               	movlw	0
  1918                           
  1919                           ;BT01week16ttvxlbuoi1.c: 82: lcd_gotoxy(0,1);
  1920  0909  01F8               	clrf	?_lcd_gotoxy
  1921  090A  0AF8               	incf	?_lcd_gotoxy,f
  1922  090B  120A  158A  226D   	fcall	_lcd_gotoxy
      +       120A  158A         
  1923                           
  1924                           ;BT01week16ttvxlbuoi1.c: 83: printf("xung: %05d",xung);
  1925  0910  086E               	movf	_xung+1,w
  1926  0911  00DB               	movwf	?_printf+1
  1927  0912  086D               	movf	_xung,w
  1928  0913  00DA               	movwf	?_printf
  1929  0914  3077               	movlw	(STR_2-__stringbase)& (0+255)
  1930  0915  120A  118A  2011   	fcall	_printf
      +       120A  158A         
  1931  091A  2887               	goto	l8672
  1932  091B                     __end_of_main:	
  1933                           
  1934                           	psect	text903
  1935  0011                     __ptext903:	
  1936 ;; =============== function _main ends ============
  1937                           
  1938                           
  1939 ;; *************** function _printf *****************
  1940 ;; Defined at:
  1941 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  f               1    wreg     PTR const unsigned char 
  1944 ;;		 -> STR_2(11), STR_1(9), 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1947 ;;		 -> STR_2(11), STR_1(9), 
  1948 ;;  _val            4    9[BANK1 ] struct .
  1949 ;;  fval            3   19[BANK1 ] struct .
  1950 ;;  integ           3    5[BANK1 ] struct .
  1951 ;;  ival            3    0        struct .
  1952 ;;  prec            2   22[BANK1 ] int 
  1953 ;;  width           2   17[BANK1 ] int 
  1954 ;;  exp             2   15[BANK1 ] int 
  1955 ;;  flag            2   13[BANK1 ] unsigned short 
  1956 ;;  c               1   24[BANK1 ] char 
  1957 ;;  ap              1    4[BANK1 ] PTR void [1]
  1958 ;;		 -> ?_printf(2), 
  1959 ;;  d               1    0        unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  2   58[BANK0 ] int 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 60/0
  1966 ;;		On exit  : 60/20
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1969 ;;      Params:         0       3       0       0       0
  1970 ;;      Locals:         0       0      25       0       0
  1971 ;;      Temps:          0       5       0       0       0
  1972 ;;      Totals:         0       8      25       0       0
  1973 ;;Total ram usage:       33 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    5
  1976 ;; This function calls:
  1977 ;;		_putch
  1978 ;;		_isdigit
  1979 ;;		___wmul
  1980 ;;		___ftge
  1981 ;;		___ftneg
  1982 ;;		___awdiv
  1983 ;;		_scale
  1984 ;;		___ftmul
  1985 ;;		_fround
  1986 ;;		___ftadd
  1987 ;;		___fttol
  1988 ;;		__div_to_l_
  1989 ;;		__tdiv_to_l_
  1990 ;;		___lltoft
  1991 ;;		___ftsub
  1992 ;;		___lldiv
  1993 ;;		___llmod
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998  0011                     _printf:	
  1999                           
  2000                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2001                           ;printf@f stored from wreg
  2002  0011  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0012  00A8               	movwf	printf@f^(0+128)
  2004  0013  305A               	movlw	?_printf& (0+255)
  2005  0014  00A4               	movwf	printf@ap^(0+128)
  2006  0015                     l8588:	
  2007  0015  1683               	bsf	3,5	;RP0=1, select bank1
  2008  0016  0828               	movf	printf@f^(0+128),w
  2009  0017  0AA8               	incf	printf@f^(0+128),f
  2010  0018  0084               	movwf	4
  2011  0019  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2012  001E  00B8               	movwf	printf@c^(0+128)
  2013  001F  08B8               	movf	printf@c^(0+128),f
  2014  0020  1903               	btfsc	3,2
  2015  0021  0008               	return
  2016  0022  3A25               	xorlw	37
  2017  0023  1903               	skipnz
  2018  0024  282A               	goto	l8312
  2019  0025  0838               	movf	printf@c^(0+128),w
  2020  0026  2564  120A  118A   	fcall	_putch
  2021  0029  2815               	goto	l8588
  2022  002A                     l8312:	
  2023  002A  01B1               	clrf	printf@width^(0+128)
  2024  002B  01B2               	clrf	(printf@width+1)^(0+128)
  2025  002C  01AD               	clrf	printf@flag^(0+128)
  2026  002D  01AE               	clrf	(printf@flag+1)^(0+128)
  2027  002E  2831               	goto	l8318
  2028  002F                     l2236:	
  2029  002F  152D               	bsf	printf@flag^(0+128),2
  2030  0030  0AA8               	incf	printf@f^(0+128),f
  2031  0031                     l8318:	
  2032  0031  0828               	movf	printf@f^(0+128),w
  2033  0032  0084               	movwf	4
  2034  0033  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2035                           
  2036                           ; Switch size 1, requested type "space"
  2037                           ; Number of cases is 1, Range of values is 48 to 48
  2038                           ; switch strategies available:
  2039                           ; Name         Instructions Cycles
  2040                           ; simple_byte            4     3 (average)
  2041                           ; direct_byte           14    11 (fixed)
  2042                           ; jumptable            263     9 (fixed)
  2043                           ;	Chosen strategy is simple_byte
  2044  0038  3A30               	xorlw	48	; case 48
  2045  0039  1903               	skipnz
  2046  003A  282F               	goto	l2236
  2047  003B  283C               	goto	l8320
  2048  003C                     l8320:	
  2049  003C  0828               	movf	printf@f^(0+128),w
  2050  003D  0084               	movwf	4
  2051  003E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2052  0043  25D4  120A  118A   	fcall	_isdigit
  2053  0046  1C03               	btfss	3,0
  2054  0047  286C               	goto	l8330
  2055  0048  01B1               	clrf	printf@width^(0+128)
  2056  0049  01B2               	clrf	(printf@width+1)^(0+128)
  2057  004A                     l8324:	
  2058  004A  0832               	movf	(printf@width+1)^(0+128),w
  2059  004B  00F4               	movwf	?___wmul+1
  2060  004C  0831               	movf	printf@width^(0+128),w
  2061  004D  00F3               	movwf	?___wmul
  2062  004E  300A               	movlw	10
  2063  004F  00F5               	movwf	?___wmul+2
  2064  0050  01F6               	clrf	?___wmul+3
  2065  0051  25E2               	fcall	___wmul
  2066  0052  0828               	movf	printf@f^(0+128),w
  2067  0053  0084               	movwf	4
  2068  0054  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2069  0059  2726  120A  118A   	fcall	PL13	;call to abstracted procedure
  2070  005C  00B1               	movwf	printf@width^(0+128)
  2071  005D  2769               	fcall	PL29	;call to abstracted procedure
  2072  005E  00B2               	movwf	(printf@width+1)^(0+128)
  2073  005F  0AA8               	incf	printf@f^(0+128),f
  2074  0060  0828               	movf	printf@f^(0+128),w
  2075  0061  0084               	movwf	4
  2076  0062  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2077  0067  25D4  120A  118A   	fcall	_isdigit
  2078  006A  1803               	btfsc	3,0
  2079  006B  284A               	goto	l8324
  2080  006C                     l8330:	
  2081  006C  0828               	movf	printf@f^(0+128),w
  2082  006D  0084               	movwf	4
  2083  006E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2084  0073  3A2E               	xorlw	46
  2085  0074  1D03               	skipz
  2086  0075  289F               	goto	l8344
  2087  0076  172E               	bsf	(printf@flag^(0+128)+1),6
  2088  0077  0AA8               	incf	printf@f^(0+128),f
  2089  0078  01B6               	clrf	printf@prec^(0+128)
  2090  0079  01B7               	clrf	(printf@prec+1)^(0+128)
  2091  007A                     l8342:	
  2092  007A  0828               	movf	printf@f^(0+128),w
  2093  007B  0084               	movwf	4
  2094  007C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2095  0081  25D4  120A  118A   	fcall	_isdigit
  2096  0084  1C03               	btfss	3,0
  2097  0085  28A5               	goto	l8350
  2098  0086  0837               	movf	(printf@prec+1)^(0+128),w
  2099  0087  00F4               	movwf	?___wmul+1
  2100  0088  0836               	movf	printf@prec^(0+128),w
  2101  0089  00F3               	movwf	?___wmul
  2102  008A  300A               	movlw	10
  2103  008B  00F5               	movwf	?___wmul+2
  2104  008C  01F6               	clrf	?___wmul+3
  2105  008D  25E2               	fcall	___wmul
  2106  008E  0828               	movf	printf@f^(0+128),w
  2107  008F  0084               	movwf	4
  2108  0090  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2109  0095  2726  120A  118A   	fcall	PL13	;call to abstracted procedure
  2110  0098  00B6               	movwf	printf@prec^(0+128)
  2111  0099  2769  120A  118A   	fcall	PL29	;call to abstracted procedure
  2112  009C  00B7               	movwf	(printf@prec+1)^(0+128)
  2113  009D  0AA8               	incf	printf@f^(0+128),f
  2114  009E  287A               	goto	l8342
  2115  009F                     l8344:	
  2116  009F  01B6               	clrf	printf@prec^(0+128)
  2117  00A0  01B7               	clrf	(printf@prec+1)^(0+128)
  2118  00A1  162E               	bsf	(printf@flag^(0+128)+1),4
  2119  00A2  28A5               	goto	l8350
  2120  00A3                     l2251:	
  2121  00A3  152E               	bsf	(printf@flag^(0+128)+1),2
  2122  00A4  28BB               	goto	l8352
  2123  00A5                     l8350:	
  2124  00A5  0828               	movf	printf@f^(0+128),w
  2125  00A6  0AA8               	incf	printf@f^(0+128),f
  2126  00A7  0084               	movwf	4
  2127  00A8  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2128  00AD  00B8               	movwf	printf@c^(0+128)
  2129                           
  2130                           ; Switch size 1, requested type "space"
  2131                           ; Number of cases is 4, Range of values is 0 to 105
  2132                           ; switch strategies available:
  2133                           ; Name         Instructions Cycles
  2134                           ; simple_byte           13     7 (average)
  2135                           ; jumptable            260     6 (fixed)
  2136                           ; rangetable           110     6 (fixed)
  2137                           ; spacedrange          218     9 (fixed)
  2138                           ; locatedrange         106     3 (fixed)
  2139                           ;	Chosen strategy is simple_byte
  2140  00AE  3A00               	xorlw	0	; case 0
  2141  00AF  1903               	skipnz
  2142  00B0  2D63               	goto	l2332
  2143  00B1  3A64               	xorlw	100	; case 100
  2144  00B2  1903               	skipnz
  2145  00B3  28BB               	goto	l8352
  2146  00B4  3A02               	xorlw	2	; case 102
  2147  00B5  1903               	skipnz
  2148  00B6  28A3               	goto	l2251
  2149  00B7  3A0F               	xorlw	15	; case 105
  2150  00B8  1903               	skipnz
  2151  00B9  28BB               	goto	l8352
  2152  00BA  2815               	goto	l8588
  2153  00BB                     l8352:	
  2154  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  2155  00BC  3007               	movlw	7
  2156  00BD  01DD               	clrf	??_printf
  2157  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  2158  00BF  052E               	andwf	(printf@flag+1)^(0+128),w
  2159  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2160  00C1  00DE               	movwf	??_printf+1
  2161  00C2  045D               	iorwf	??_printf,w
  2162  00C3  1903               	skipnz
  2163  00C4  2C14               	goto	l8504
  2164  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  2165  00C6  1E2E               	btfss	(printf@flag+1)^(0+128),4
  2166  00C7  28CB               	goto	l8358
  2167  00C8  3006               	movlw	6
  2168  00C9  00B6               	movwf	printf@prec^(0+128)
  2169  00CA  01B7               	clrf	(printf@prec+1)^(0+128)
  2170  00CB                     l8358:	
  2171  00CB  0824               	movf	printf@ap^(0+128),w
  2172  00CC  0084               	movwf	4
  2173  00CD  1383               	bcf	3,7	;select IRP bank0
  2174  00CE  0800               	movf	0,w
  2175  00CF  00B3               	movwf	printf@fval^(0+128)
  2176  00D0  0A84               	incf	4,f
  2177  00D1  0800               	movf	0,w
  2178  00D2  00B4               	movwf	(printf@fval+1)^(0+128)
  2179  00D3  0A84               	incf	4,f
  2180  00D4  0800               	movf	0,w
  2181  00D5  00B5               	movwf	(printf@fval+2)^(0+128)
  2182  00D6  3003               	movlw	3
  2183  00D7  07A4               	addwf	printf@ap^(0+128),f
  2184  00D8  0833               	movf	printf@fval^(0+128),w
  2185  00D9  00F3               	movwf	?___ftge
  2186  00DA  0834               	movf	(printf@fval+1)^(0+128),w
  2187  00DB  00F4               	movwf	?___ftge+1
  2188  00DC  0835               	movf	(printf@fval+2)^(0+128),w
  2189  00DD  00F5               	movwf	?___ftge+2
  2190  00DE  01F6               	clrf	?___ftge+3
  2191  00DF  01F7               	clrf	?___ftge+4
  2192  00E0  01F8               	clrf	?___ftge+5
  2193  00E1  25A8  120A  118A   	fcall	___ftge
  2194  00E4  1803               	btfsc	3,0
  2195  00E5  28F7               	goto	l8368
  2196  00E6  0833               	movf	printf@fval^(0+128),w
  2197  00E7  00F3               	movwf	?___ftneg
  2198  00E8  0834               	movf	(printf@fval+1)^(0+128),w
  2199  00E9  00F4               	movwf	?___ftneg+1
  2200  00EA  0835               	movf	(printf@fval+2)^(0+128),w
  2201  00EB  00F5               	movwf	?___ftneg+2
  2202  00EC  269E  120A  118A   	fcall	___ftneg
  2203  00EF  0873               	movf	?___ftneg,w
  2204  00F0  00B3               	movwf	printf@fval^(0+128)
  2205  00F1  0874               	movf	?___ftneg+1,w
  2206  00F2  00B4               	movwf	(printf@fval+1)^(0+128)
  2207  00F3  0875               	movf	?___ftneg+2,w
  2208  00F4  00B5               	movwf	(printf@fval+2)^(0+128)
  2209  00F5  3003               	movlw	3
  2210  00F6  04AD               	iorwf	printf@flag^(0+128),f
  2211  00F7                     l8368:	
  2212  00F7  01AF               	clrf	printf@exp^(0+128)
  2213  00F8  01B0               	clrf	(printf@exp+1)^(0+128)
  2214  00F9  0835               	movf	(printf@fval+2)^(0+128),w
  2215  00FA  0434               	iorwf	(printf@fval+1)^(0+128),w
  2216  00FB  0433               	iorwf	printf@fval^(0+128),w
  2217  00FC  1903               	skipnz
  2218  00FD  2995               	goto	l8400
  2219  00FE  30B3               	movlw	low printf@fval
  2220  00FF  0084               	movwf	4
  2221  0100  2762  120A  118A   	fcall	PL28	;call to abstracted procedure
  2222  0103  0A84               	incf	4,f
  2223  0104  0800               	movf	0,w
  2224  0105  00DF               	movwf	??_printf+2
  2225  0106  0A84               	incf	4,f
  2226  0107  0800               	movf	0,w
  2227  0108  00E0               	movwf	??_printf+3
  2228  0109  300F               	movlw	15
  2229  010A                     u5315:	
  2230  010A  1003               	clrc
  2231  010B  0CE0               	rrf	??_printf+3,f
  2232  010C  0CDF               	rrf	??_printf+2,f
  2233  010D  0CDE               	rrf	??_printf+1,f
  2234  010E  0CDD               	rrf	??_printf,f
  2235  010F  3EFF               	addlw	-1
  2236  0110  1D03               	skipz
  2237  0111  290A               	goto	u5315
  2238  0112  085E               	movf	??_printf+1,w
  2239  0113  1683               	bsf	3,5	;RP0=1, select bank1
  2240  0114  00B0               	movwf	(printf@exp+1)^(0+128)
  2241  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2242  0116  085D               	movf	??_printf,w
  2243  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0118  00AF               	movwf	printf@exp^(0+128)
  2245  0119  3082               	movlw	-126
  2246  011A  01B0               	clrf	(printf@exp+1)^(0+128)
  2247  011B  07AF               	addwf	printf@exp^(0+128),f
  2248  011C  1C03               	skipc
  2249  011D  03B0               	decf	(printf@exp+1)^(0+128),f
  2250  011E  30FF               	movlw	-1
  2251  011F  07AF               	addwf	printf@exp^(0+128),f
  2252  0120  1C03               	skipc
  2253  0121  03B0               	decf	(printf@exp+1)^(0+128),f
  2254  0122  3003               	movlw	3
  2255  0123  00F3               	movwf	?___wmul
  2256  0124  01F4               	clrf	?___wmul+1
  2257  0125  0830               	movf	(printf@exp+1)^(0+128),w
  2258  0126  00F6               	movwf	?___wmul+3
  2259  0127  082F               	movf	printf@exp^(0+128),w
  2260  0128  00F5               	movwf	?___wmul+2
  2261  0129  25E2               	fcall	___wmul
  2262  012A  0874               	movf	?___wmul+1,w
  2263  012B  00B0               	movwf	(printf@exp+1)^(0+128)
  2264  012C  0873               	movf	?___wmul,w
  2265  012D  00AF               	movwf	printf@exp^(0+128)
  2266  012E  300A               	movlw	10
  2267  012F  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0130  00A0               	movwf	?___awdiv
  2269  0131  01A1               	clrf	?___awdiv+1
  2270  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2271  0133  0830               	movf	(printf@exp+1)^(0+128),w
  2272  0134  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0135  00A3               	movwf	?___awdiv+3
  2274  0136  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0137  082F               	movf	printf@exp^(0+128),w
  2276  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0139  00A2               	movwf	?___awdiv+2
  2278  013A  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2279  013F  0821               	movf	?___awdiv+1,w
  2280  0140  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0141  00B0               	movwf	(printf@exp+1)^(0+128)
  2282  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0143  0820               	movf	?___awdiv,w
  2284  0144  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0145  00AF               	movwf	printf@exp^(0+128)
  2286  0146  1FB0               	btfss	(printf@exp+1)^(0+128),7
  2287  0147  294C               	goto	l8388
  2288  0148  30FF               	movlw	-1
  2289  0149  07AF               	addwf	printf@exp^(0+128),f
  2290  014A  1C03               	skipc
  2291  014B  03B0               	decf	(printf@exp+1)^(0+128),f
  2292  014C                     l8388:	
  2293  014C  032F               	decf	printf@exp^(0+128),w
  2294  014D  3AFF               	xorlw	255
  2295  014E  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2296  0153  2710  120A  118A   	fcall	PL8	;call to abstracted procedure
  2297  0156  273D               	fcall	PL16	;call to abstracted procedure
  2298  0157  1683               	bsf	3,5	;RP0=1, select bank1
  2299  0158  0825               	movf	printf@integ^(0+128),w
  2300  0159  1283               	bcf	3,5	;RP0=0, select bank0
  2301  015A  00B8               	movwf	?___ftmul+3
  2302  015B  1683               	bsf	3,5	;RP0=1, select bank1
  2303  015C  0826               	movf	(printf@integ+1)^(0+128),w
  2304  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2305  015E  00B9               	movwf	?___ftmul+4
  2306  015F  1683               	bsf	3,5	;RP0=1, select bank1
  2307  0160  0827               	movf	(printf@integ+2)^(0+128),w
  2308  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0162  00BA               	movwf	?___ftmul+5
  2310  0163  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2311  0168  0835               	movf	?___ftmul,w
  2312  0169  1683               	bsf	3,5	;RP0=1, select bank1
  2313  016A  00A5               	movwf	printf@integ^(0+128)
  2314  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2315  016C  0836               	movf	?___ftmul+1,w
  2316  016D  1683               	bsf	3,5	;RP0=1, select bank1
  2317  016E  00A6               	movwf	(printf@integ+1)^(0+128)
  2318  016F  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0170  0837               	movf	?___ftmul+2,w
  2320  0171  1683               	bsf	3,5	;RP0=1, select bank1
  2321  0172  00A7               	movwf	(printf@integ+2)^(0+128)
  2322  0173  275B  120A  118A   	fcall	PL21	;call to abstracted procedure
  2323  0176  3080               	movlw	128
  2324  0177  01F6               	clrf	?___ftge+3
  2325  0178  00F7               	movwf	?___ftge+4
  2326  0179  303F               	movlw	63
  2327  017A  00F8               	movwf	?___ftge+5
  2328  017B  25A8  120A  118A   	fcall	___ftge
  2329  017E  1803               	btfsc	3,0
  2330  017F  2985               	goto	l8396
  2331  0180  30FF               	movlw	-1
  2332  0181  07AF               	addwf	printf@exp^(0+128),f
  2333  0182  1C03               	skipc
  2334  0183  03B0               	decf	(printf@exp+1)^(0+128),f
  2335  0184  2995               	goto	l8400
  2336  0185                     l8396:	
  2337  0185  275B  120A  118A   	fcall	PL21	;call to abstracted procedure
  2338  0188  3020               	movlw	32
  2339  0189  01F6               	clrf	?___ftge+3
  2340  018A  00F7               	movwf	?___ftge+4
  2341  018B  3041               	movlw	65
  2342  018C  00F8               	movwf	?___ftge+5
  2343  018D  25A8  120A  118A   	fcall	___ftge
  2344  0190  1C03               	btfss	3,0
  2345  0191  2995               	goto	l8400
  2346  0192  0AAF               	incf	printf@exp^(0+128),f
  2347  0193  1903               	skipnz
  2348  0194  0AB0               	incf	(printf@exp+1)^(0+128),f
  2349  0195                     l8400:	
  2350  0195  0837               	movf	(printf@prec+1)^(0+128),w
  2351  0196  3A80               	xorlw	128
  2352  0197  00FF               	movwf	127
  2353  0198  3080               	movlw	128
  2354  0199  027F               	subwf	127,w
  2355  019A  1D03               	skipz
  2356  019B  299E               	goto	u5355
  2357  019C  300D               	movlw	13
  2358  019D  0236               	subwf	printf@prec^(0+128),w
  2359  019E                     u5355:	
  2360  019E  1803               	skipnc
  2361  019F  29C9               	goto	l8404
  2362  01A0  2777               	call	PL32	;select bank 1
  2363  01A1  0836               	movf	printf@prec^(0+128),w
  2364  01A2  120A  158A  211B   	fcall	_fround
      +       120A  118A         
  2365  01A7  0850               	movf	?_fround,w
  2366  01A8  00C4               	movwf	?___ftadd
  2367  01A9  0851               	movf	?_fround+1,w
  2368  01AA  00C5               	movwf	?___ftadd+1
  2369  01AB  0852               	movf	?_fround+2,w
  2370  01AC  00C6               	movwf	?___ftadd+2
  2371  01AD  1683               	bsf	3,5	;RP0=1, select bank1
  2372  01AE  0833               	movf	printf@fval^(0+128),w
  2373  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2374  01B0  00C7               	movwf	?___ftadd+3
  2375  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2376  01B2  0834               	movf	(printf@fval+1)^(0+128),w
  2377  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  2378  01B4  00C8               	movwf	?___ftadd+4
  2379  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2380  01B6  0835               	movf	(printf@fval+2)^(0+128),w
  2381  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2382  01B8  00C9               	movwf	?___ftadd+5
  2383  01B9  160A  118A  2673   	fcall	___ftadd
      +       120A  118A         
  2384  01BE  0844               	movf	?___ftadd,w
  2385  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  2386  01C0  00B3               	movwf	printf@fval^(0+128)
  2387  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2388  01C2  0845               	movf	?___ftadd+1,w
  2389  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  2390  01C4  00B4               	movwf	(printf@fval+1)^(0+128)
  2391  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  2392  01C6  0846               	movf	?___ftadd+2,w
  2393  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2394  01C8  00B5               	movwf	(printf@fval+2)^(0+128)
  2395  01C9                     l8404:	
  2396  01C9  2777               	call	PL32	;select bank 1
  2397  01CA  0830               	movf	(printf@exp+1)^(0+128),w
  2398  01CB  3A80               	xorlw	128
  2399  01CC  00FF               	movwf	127
  2400  01CD  3080               	movlw	128
  2401  01CE  027F               	subwf	127,w
  2402  01CF  1D03               	skipz
  2403  01D0  29D3               	goto	u5365
  2404  01D1  300A               	movlw	10
  2405  01D2  022F               	subwf	printf@exp^(0+128),w
  2406  01D3                     u5365:	
  2407  01D3  1803               	skipnc
  2408  01D4  29F4               	goto	l8412
  2409  01D5  2777               	call	PL32	;select bank 1
  2410  01D6  0835               	movf	(printf@fval+2)^(0+128),w
  2411  01D7  0434               	iorwf	(printf@fval+1)^(0+128),w
  2412  01D8  0433               	iorwf	printf@fval^(0+128),w
  2413  01D9  1903               	skipnz
  2414  01DA  2A35               	goto	l8428
  2415  01DB  0833               	movf	printf@fval^(0+128),w
  2416  01DC  2732  120A  118A   	fcall	PL14	;call to abstracted procedure
  2417  01DF  25FB  120A  118A   	fcall	___fttol
  2418  01E2  082B               	movf	?___fttol+3,w
  2419  01E3  042A               	iorwf	?___fttol+2,w
  2420  01E4  0429               	iorwf	?___fttol+1,w
  2421  01E5  0428               	iorwf	?___fttol,w
  2422  01E6  1D03               	skipz
  2423  01E7  2A35               	goto	l8428
  2424  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  2425  01E9  0830               	movf	(printf@exp+1)^(0+128),w
  2426  01EA  3A80               	xorlw	128
  2427  01EB  00FF               	movwf	127
  2428  01EC  3080               	movlw	128
  2429  01ED  027F               	subwf	127,w
  2430  01EE  1D03               	skipz
  2431  01EF  29F2               	goto	u5395
  2432  01F0  3002               	movlw	2
  2433  01F1  022F               	subwf	printf@exp^(0+128),w
  2434  01F2                     u5395:	
  2435  01F2  1C03               	skipc
  2436  01F3  2A35               	goto	l8428
  2437  01F4                     l8412:	
  2438  01F4  2777               	call	PL32	;select bank 1
  2439  01F5  275B  120A  118A   	fcall	PL21	;call to abstracted procedure
  2440  01F8  3070               	movlw	112
  2441  01F9  00F6               	movwf	?___ftge+3
  2442  01FA  3089               	movlw	137
  2443  01FB  00F7               	movwf	?___ftge+4
  2444  01FC  3040               	movlw	64
  2445  01FD  00F8               	movwf	?___ftge+5
  2446  01FE  25A8  120A  118A   	fcall	___ftge
  2447  0201  1803               	btfsc	3,0
  2448  0202  2A05               	goto	l8416
  2449  0203  30F7               	movlw	-9
  2450  0204  2A06               	goto	L1
  2451  0205                     l8416:	
  2452  0205  30F8               	movlw	-8
  2453  0206                     L1:	
  2454  0206  07AF               	addwf	printf@exp^(0+128),f
  2455  0207  1C03               	skipc
  2456  0208  03B0               	decf	(printf@exp+1)^(0+128),f
  2457  0209  082F               	movf	printf@exp^(0+128),w
  2458  020A  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2459  020F  2710  120A  118A   	fcall	PL8	;call to abstracted procedure
  2460  0212  00F3               	movwf	?__tdiv_to_l_
  2461  0213  0834               	movf	(printf@fval+1)^(0+128),w
  2462  0214  00F4               	movwf	?__tdiv_to_l_+1
  2463  0215  0835               	movf	(printf@fval+2)^(0+128),w
  2464  0216  00F5               	movwf	?__tdiv_to_l_+2
  2465  0217  0825               	movf	printf@integ^(0+128),w
  2466  0218  00F6               	movwf	?__tdiv_to_l_+3
  2467  0219  0826               	movf	(printf@integ+1)^(0+128),w
  2468  021A  00F7               	movwf	?__tdiv_to_l_+4
  2469  021B  0827               	movf	(printf@integ+2)^(0+128),w
  2470  021C  00F8               	movwf	?__tdiv_to_l_+5
  2471  021D  277A  120A  118A   	fcall	__tdiv_to_l_
  2472  0220  0876               	movf	?__tdiv_to_l_+3,w
  2473  0221  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0222  00A3               	movwf	(_printf$3184+3)^(0+128)
  2475  0223  0875               	movf	?__tdiv_to_l_+2,w
  2476  0224  00A2               	movwf	(_printf$3184+2)^(0+128)
  2477  0225  0874               	movf	?__tdiv_to_l_+1,w
  2478  0226  00A1               	movwf	(_printf$3184+1)^(0+128)
  2479  0227  0873               	movf	?__tdiv_to_l_,w
  2480  0228  00A0               	movwf	_printf$3184^(0+128)
  2481  0229  0823               	movf	(_printf$3184+3)^(0+128),w
  2482  022A  00AC               	movwf	(printf@_val+3)^(0+128)
  2483  022B  0822               	movf	(_printf$3184+2)^(0+128),w
  2484  022C  00AB               	movwf	(printf@_val+2)^(0+128)
  2485  022D  0821               	movf	(_printf$3184+1)^(0+128),w
  2486  022E  00AA               	movwf	(printf@_val+1)^(0+128)
  2487  022F  0820               	movf	_printf$3184^(0+128),w
  2488  0230  00A9               	movwf	printf@_val^(0+128)
  2489  0231  01B3               	clrf	printf@fval^(0+128)
  2490  0232  01B4               	clrf	(printf@fval+1)^(0+128)
  2491  0233  01B5               	clrf	(printf@fval+2)^(0+128)
  2492  0234  2A76               	goto	l8432
  2493  0235                     l8428:	
  2494  0235  2777               	call	PL32	;select bank 1
  2495  0236  0833               	movf	printf@fval^(0+128),w
  2496  0237  2732  120A  118A   	fcall	PL14	;call to abstracted procedure
  2497  023A  25FB  120A  118A   	fcall	___fttol
  2498  023D  2702  120A  118A   	fcall	PL6	;call to abstracted procedure
  2499  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2500  0241  00A9               	movwf	printf@_val^(0+128)
  2501  0242  082C               	movf	(printf@_val+3)^(0+128),w
  2502  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2503  0244  00A6               	movwf	?___lltoft+3
  2504  0245  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0246  082B               	movf	(printf@_val+2)^(0+128),w
  2506  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2507  0248  00A5               	movwf	?___lltoft+2
  2508  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2509  024A  082A               	movf	(printf@_val+1)^(0+128),w
  2510  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2511  024C  00A4               	movwf	?___lltoft+1
  2512  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2513  024E  0829               	movf	printf@_val^(0+128),w
  2514  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0250  00A3               	movwf	?___lltoft
  2516  0251  26A6  120A  118A   	fcall	___lltoft
  2517  0254  0823               	movf	?___lltoft,w
  2518  0255  00D0               	movwf	?___ftsub
  2519  0256  0824               	movf	?___lltoft+1,w
  2520  0257  00D1               	movwf	?___ftsub+1
  2521  0258  0825               	movf	?___lltoft+2,w
  2522  0259  00D2               	movwf	?___ftsub+2
  2523  025A  1683               	bsf	3,5	;RP0=1, select bank1
  2524  025B  0833               	movf	printf@fval^(0+128),w
  2525  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2526  025D  00D3               	movwf	?___ftsub+3
  2527  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2528  025F  0834               	movf	(printf@fval+1)^(0+128),w
  2529  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0261  00D4               	movwf	?___ftsub+4
  2531  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2532  0263  0835               	movf	(printf@fval+2)^(0+128),w
  2533  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0265  00D5               	movwf	?___ftsub+5
  2535  0266  26C6  120A  118A   	fcall	___ftsub
  2536  0269  0850               	movf	?___ftsub,w
  2537  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2538  026B  00B3               	movwf	printf@fval^(0+128)
  2539  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2540  026D  0851               	movf	?___ftsub+1,w
  2541  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2542  026F  00B4               	movwf	(printf@fval+1)^(0+128)
  2543  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0271  0852               	movf	?___ftsub+2,w
  2545  0272  1683               	bsf	3,5	;RP0=1, select bank1
  2546  0273  00B5               	movwf	(printf@fval+2)^(0+128)
  2547  0274  01AF               	clrf	printf@exp^(0+128)
  2548  0275  01B0               	clrf	(printf@exp+1)^(0+128)
  2549  0276                     l8432:	
  2550  0276  01B8               	clrf	printf@c^(0+128)
  2551  0277  0AB8               	incf	printf@c^(0+128),f
  2552  0278                     l8438:	
  2553  0278  26F0               	fcall	PL3	;call to abstracted procedure
  2554  0279  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2555  027E  00DE               	movwf	??_printf+1
  2556  027F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2557  0284  00DF               	movwf	??_printf+2
  2558  0285  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2559  028A  00E0               	movwf	??_printf+3
  2560  028B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2561  0290  00E1               	movwf	??_printf+4
  2562  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2563  0292  022C               	subwf	(printf@_val+3)^(0+128),w
  2564  0293  1D03               	skipz
  2565  0294  2AA5               	goto	u5415
  2566  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0296  0860               	movf	??_printf+3,w
  2568  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2569  0298  022B               	subwf	(printf@_val+2)^(0+128),w
  2570  0299  1D03               	skipz
  2571  029A  2AA5               	goto	u5415
  2572  029B  1283               	bcf	3,5	;RP0=0, select bank0
  2573  029C  085F               	movf	??_printf+2,w
  2574  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2575  029E  022A               	subwf	(printf@_val+1)^(0+128),w
  2576  029F  1D03               	skipz
  2577  02A0  2AA5               	goto	u5415
  2578  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2579  02A2  085E               	movf	??_printf+1,w
  2580  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2581  02A4  0229               	subwf	printf@_val^(0+128),w
  2582  02A5                     u5415:	
  2583  02A5  1C03               	btfss	3,0
  2584  02A6  2AAC               	goto	l8446
  2585  02A7  0AB8               	incf	printf@c^(0+128),f
  2586  02A8  0838               	movf	printf@c^(0+128),w
  2587  02A9  3A0A               	xorlw	10
  2588  02AA  1D03               	skipz
  2589  02AB  2A78               	goto	l8438
  2590  02AC                     l8446:	
  2591  02AC  0836               	movf	printf@prec^(0+128),w
  2592  02AD  0738               	addwf	printf@c^(0+128),w
  2593  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2594  02AF  00DD               	movwf	??_printf
  2595  02B0  1683               	bsf	3,5	;RP0=1, select bank1
  2596  02B1  0837               	movf	(printf@prec+1)^(0+128),w
  2597  02B2  1803               	skipnc
  2598  02B3  0A37               	incf	(printf@prec+1)^(0+128),w
  2599  02B4  1BB8               	btfsc	printf@c^(0+128),7
  2600  02B5  3EFF               	addlw	255
  2601  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2602  02B7  00DE               	movwf	??_printf+1
  2603  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  2604  02B9  082F               	movf	printf@exp^(0+128),w
  2605  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2606  02BB  075D               	addwf	??_printf,w
  2607  02BC  00DF               	movwf	??_printf+2
  2608  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2609  02BE  0830               	movf	(printf@exp+1)^(0+128),w
  2610  02BF  1803               	skipnc
  2611  02C0  0A30               	incf	(printf@exp+1)^(0+128),w
  2612  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2613  02C2  075E               	addwf	??_printf+1,w
  2614  02C3  00E0               	movwf	??_printf+3
  2615  02C4  085F               	movf	??_printf+2,w
  2616  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2617  02C6  02B1               	subwf	printf@width^(0+128),f
  2618  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  2619  02C8  0860               	movf	??_printf+3,w
  2620  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2621  02CA  1C03               	skipc
  2622  02CB  03B2               	decf	(printf@width+1)^(0+128),f
  2623  02CC  02B2               	subwf	(printf@width+1)^(0+128),f
  2624  02CD  0837               	movf	(printf@prec+1)^(0+128),w
  2625  02CE  0436               	iorwf	printf@prec^(0+128),w
  2626  02CF  1903               	skipnz
  2627  02D0  2AD5               	goto	l8452
  2628  02D1  30FF               	movlw	-1
  2629  02D2  07B1               	addwf	printf@width^(0+128),f
  2630  02D3  1C03               	skipc
  2631  02D4  03B2               	decf	(printf@width+1)^(0+128),f
  2632  02D5                     l8452:	
  2633  02D5  082D               	movf	printf@flag^(0+128),w
  2634  02D6  3903               	andlw	3
  2635  02D7  1903               	btfsc	3,2
  2636  02D8  2ADD               	goto	l8456
  2637  02D9  30FF               	movlw	-1
  2638  02DA  07B1               	addwf	printf@width^(0+128),f
  2639  02DB  1C03               	skipc
  2640  02DC  03B2               	decf	(printf@width+1)^(0+128),f
  2641  02DD                     l8456:	
  2642  02DD  192D               	btfsc	printf@flag^(0+128),2
  2643  02DE  2AE9               	goto	l8464
  2644  02DF  2AFE               	goto	l8470
  2645  02E0                     l8460:	
  2646  02E0  3030               	movlw	48
  2647  02E1  2564  120A  118A   	fcall	_putch
  2648  02E4  30FF               	movlw	-1
  2649  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2650  02E6  07B1               	addwf	printf@width^(0+128),f
  2651  02E7  1C03               	skipc
  2652  02E8  03B2               	decf	(printf@width+1)^(0+128),f
  2653  02E9                     l8464:	
  2654  02E9  0832               	movf	(printf@width+1)^(0+128),w
  2655  02EA  3A80               	xorlw	128
  2656  02EB  00FF               	movwf	127
  2657  02EC  3080               	movlw	128
  2658  02ED  027F               	subwf	127,w
  2659  02EE  1D03               	skipz
  2660  02EF  2AF2               	goto	u5465
  2661  02F0  3001               	movlw	1
  2662  02F1  0231               	subwf	printf@width^(0+128),w
  2663  02F2                     u5465:	
  2664  02F2  1C03               	btfss	3,0
  2665  02F3  2B3C               	goto	l8478
  2666  02F4  2AE0               	goto	l8460
  2667  02F5                     l8466:	
  2668  02F5  3020               	movlw	32
  2669  02F6  2564  120A  118A   	fcall	_putch
  2670  02F9  30FF               	movlw	-1
  2671  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  2672  02FB  07B1               	addwf	printf@width^(0+128),f
  2673  02FC  1C03               	skipc
  2674  02FD  03B2               	decf	(printf@width+1)^(0+128),f
  2675  02FE                     l8470:	
  2676  02FE  0832               	movf	(printf@width+1)^(0+128),w
  2677  02FF  3A80               	xorlw	128
  2678  0300  00FF               	movwf	127
  2679  0301  3080               	movlw	128
  2680  0302  027F               	subwf	127,w
  2681  0303  1D03               	skipz
  2682  0304  2B07               	goto	u5475
  2683  0305  3001               	movlw	1
  2684  0306  0231               	subwf	printf@width^(0+128),w
  2685  0307                     u5475:	
  2686  0307  1803               	skipnc
  2687  0308  2AF5               	goto	l8466
  2688  0309  2777               	call	PL32	;select bank 1
  2689  030A  082D               	movf	printf@flag^(0+128),w
  2690  030B  3903               	andlw	3
  2691  030C  1903               	btfsc	3,2
  2692  030D  2B3C               	goto	l8478
  2693  030E  302D               	movlw	45
  2694  030F  2B39               	goto	L2
  2695  0310                     l8476:	
  2696  0310  26FA  120A  118A   	fcall	PL5	;call to abstracted procedure
  2697  0313  26F0               	fcall	PL3	;call to abstracted procedure
  2698  0314  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2699  0319  00A0               	movwf	?___lldiv
  2700  031A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2701  031F  00A1               	movwf	?___lldiv+1
  2702  0320  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2703  0325  00A2               	movwf	?___lldiv+2
  2704  0326  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2705  032B  26DE  120A  118A   	fcall	PL2	;call to abstracted procedure
  2706  032E  2656  120A  118A   	fcall	___lldiv
  2707  0331  271D  120A  118A   	fcall	PL12	;call to abstracted procedure
  2708  0334  256A  120A  118A   	fcall	___llmod
  2709  0337  0828               	movf	?___llmod,w
  2710  0338  3E30               	addlw	48
  2711  0339                     L2:	
  2712  0339  2564  120A  118A   	fcall	_putch
  2713  033C                     l8478:	
  2714  033C  2777               	call	PL32	;select bank 1
  2715  033D  03B8               	decf	printf@c^(0+128),f
  2716  033E  0F38               	incfsz	printf@c^(0+128),w
  2717  033F  2B10               	goto	l8476
  2718  0340                     l8484:	
  2719  0340  0830               	movf	(printf@exp+1)^(0+128),w
  2720  0341  3A80               	xorlw	128
  2721  0342  00FF               	movwf	127
  2722  0343  3080               	movlw	128
  2723  0344  027F               	subwf	127,w
  2724  0345  1D03               	skipz
  2725  0346  2B49               	goto	u5505
  2726  0347  3001               	movlw	1
  2727  0348  022F               	subwf	printf@exp^(0+128),w
  2728  0349                     u5505:	
  2729  0349  1C03               	btfss	3,0
  2730  034A  2B55               	goto	l8486
  2731  034B  3030               	movlw	48
  2732  034C  2564  120A  118A   	fcall	_putch
  2733  034F  30FF               	movlw	-1
  2734  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2735  0351  07AF               	addwf	printf@exp^(0+128),f
  2736  0352  1C03               	skipc
  2737  0353  03B0               	decf	(printf@exp+1)^(0+128),f
  2738  0354  2B40               	goto	l8484
  2739  0355                     l8486:	
  2740  0355  2777               	call	PL32	;select bank 1
  2741  0356  0837               	movf	(printf@prec+1)^(0+128),w
  2742  0357  3A80               	xorlw	128
  2743  0358  00FF               	movwf	127
  2744  0359  3080               	movlw	128
  2745  035A  027F               	subwf	127,w
  2746  035B  1D03               	skipz
  2747  035C  2B5F               	goto	u5515
  2748  035D  3009               	movlw	9
  2749  035E  0236               	subwf	printf@prec^(0+128),w
  2750  035F                     u5515:	
  2751  035F  1C03               	skipc
  2752  0360  2B64               	goto	l8490
  2753  0361  3008               	movlw	8
  2754  0362  2777               	call	PL32	;select bank 1
  2755  0363  2B66               	goto	L3
  2756  0364                     l8490:	
  2757  0364  2777               	call	PL32	;select bank 1
  2758  0365  0836               	movf	printf@prec^(0+128),w
  2759  0366                     L3:	
  2760  0366  00B8               	movwf	printf@c^(0+128)
  2761  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0368  00DD               	movwf	??_printf
  2763  0369  01DE               	clrf	??_printf+1
  2764  036A  1BDD               	btfsc	??_printf,7
  2765  036B  03DE               	decf	??_printf+1,f
  2766  036C  1683               	bsf	3,5	;RP0=1, select bank1
  2767  036D  02B6               	subwf	printf@prec^(0+128),f
  2768  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2769  036F  085E               	movf	??_printf+1,w
  2770  0370  1683               	bsf	3,5	;RP0=1, select bank1
  2771  0371  1C03               	skipc
  2772  0372  03B7               	decf	(printf@prec+1)^(0+128),f
  2773  0373  02B7               	subwf	(printf@prec+1)^(0+128),f
  2774  0374  0838               	movf	printf@c^(0+128),w
  2775  0375  1903               	btfsc	3,2
  2776  0376  2B79               	goto	l2297
  2777  0377  302E               	movlw	46
  2778  0378  2564               	fcall	_putch
  2779  0379                     l2297:	
  2780  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2781  037A  0838               	movf	printf@c^(0+128),w
  2782  037B  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2783  0380  0844               	movf	?_scale,w
  2784  0381  00B8               	movwf	?___ftmul+3
  2785  0382  0845               	movf	?_scale+1,w
  2786  0383  00B9               	movwf	?___ftmul+4
  2787  0384  0846               	movf	?_scale+2,w
  2788  0385  00BA               	movwf	?___ftmul+5
  2789  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2790  0387  0833               	movf	printf@fval^(0+128),w
  2791  0388  273D               	fcall	PL16	;call to abstracted procedure
  2792  0389  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2793  038E  0835               	movf	?___ftmul,w
  2794  038F  00A8               	movwf	?___fttol
  2795  0390  0836               	movf	?___ftmul+1,w
  2796  0391  00A9               	movwf	?___fttol+1
  2797  0392  0837               	movf	?___ftmul+2,w
  2798  0393  00AA               	movwf	?___fttol+2
  2799  0394  25FB  120A  118A   	fcall	___fttol
  2800  0397  2702  120A  118A   	fcall	PL6	;call to abstracted procedure
  2801  039A  2C01               	goto	L4
  2802  039B                     l8494:	
  2803  039B  26FA  120A  118A   	fcall	PL5	;call to abstracted procedure
  2804  039E  26F0               	fcall	PL3	;call to abstracted procedure
  2805  039F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2806  03A4  00A0               	movwf	?___lldiv
  2807  03A5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2808  03AA  00A1               	movwf	?___lldiv+1
  2809  03AB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2810  03B0  00A2               	movwf	?___lldiv+2
  2811  03B1  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2812  03B6  26DE  120A  118A   	fcall	PL2	;call to abstracted procedure
  2813  03B9  2656  120A  118A   	fcall	___lldiv
  2814  03BC  271D  120A  118A   	fcall	PL12	;call to abstracted procedure
  2815  03BF  256A  120A  118A   	fcall	___llmod
  2816  03C2  0828               	movf	?___llmod,w
  2817  03C3  3E30               	addlw	48
  2818  03C4  2564  120A  118A   	fcall	_putch
  2819  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2820  03C8  26F0               	fcall	PL3	;call to abstracted procedure
  2821  03C9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2822  03CE  00A8               	movwf	?___llmod
  2823  03CF  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2824  03D4  00A9               	movwf	?___llmod+1
  2825  03D5  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2826  03DA  00AA               	movwf	?___llmod+2
  2827  03DB  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2828  03E0  00AB               	movwf	?___llmod+3
  2829  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2830  03E2  082C               	movf	(printf@_val+3)^(0+128),w
  2831  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  2832  03E4  00AF               	movwf	?___llmod+7
  2833  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2834  03E6  082B               	movf	(printf@_val+2)^(0+128),w
  2835  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2836  03E8  00AE               	movwf	?___llmod+6
  2837  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2838  03EA  082A               	movf	(printf@_val+1)^(0+128),w
  2839  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2840  03EC  00AD               	movwf	?___llmod+5
  2841  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2842  03EE  0829               	movf	printf@_val^(0+128),w
  2843  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2844  03F0  00AC               	movwf	?___llmod+4
  2845  03F1  256A  120A  118A   	fcall	___llmod
  2846  03F4  082B               	movf	?___llmod+3,w
  2847  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2848  03F6  00AC               	movwf	(printf@_val+3)^(0+128)
  2849  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2850  03F8  082A               	movf	?___llmod+2,w
  2851  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2852  03FA  00AB               	movwf	(printf@_val+2)^(0+128)
  2853  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2854  03FC  0829               	movf	?___llmod+1,w
  2855  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2856  03FE  00AA               	movwf	(printf@_val+1)^(0+128)
  2857  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2858  0400  0828               	movf	?___llmod,w
  2859  0401                     L4:	
  2860  0401  1683               	bsf	3,5	;RP0=1, select bank1
  2861  0402  00A9               	movwf	printf@_val^(0+128)
  2862  0403  03B8               	decf	printf@c^(0+128),f
  2863  0404  0F38               	incfsz	printf@c^(0+128),w
  2864  0405  2B9B               	goto	l8494
  2865  0406                     l8502:	
  2866  0406  0837               	movf	(printf@prec+1)^(0+128),w
  2867  0407  0436               	iorwf	printf@prec^(0+128),w
  2868  0408  1903               	btfsc	3,2
  2869  0409  2815               	goto	l8588
  2870  040A  3030               	movlw	48
  2871  040B  2564  120A  118A   	fcall	_putch
  2872  040E  30FF               	movlw	-1
  2873  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2874  0410  07B6               	addwf	printf@prec^(0+128),f
  2875  0411  1C03               	skipc
  2876  0412  03B7               	decf	(printf@prec+1)^(0+128),f
  2877  0413  2C06               	goto	l8502
  2878  0414                     l8504:	
  2879  0414  1683               	bsf	3,5	;RP0=1, select bank1
  2880  0415  0824               	movf	printf@ap^(0+128),w
  2881  0416  0084               	movwf	4
  2882  0417  1383               	bcf	3,7	;select IRP bank0
  2883  0418  2762  120A  118A   	fcall	PL28	;call to abstracted procedure
  2884  041B  085D               	movf	??_printf,w
  2885  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2886  041D  00A9               	movwf	printf@_val^(0+128)
  2887  041E  1283               	bcf	3,5	;RP0=0, select bank0
  2888  041F  085E               	movf	??_printf+1,w
  2889  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2890  0421  00AA               	movwf	(printf@_val+1)^(0+128)
  2891  0422  3000               	movlw	0
  2892  0423  1BAA               	btfsc	(printf@_val+1)^(0+128),7
  2893  0424  30FF               	movlw	255
  2894  0425  00AB               	movwf	(printf@_val+2)^(0+128)
  2895  0426  00AC               	movwf	(printf@_val+3)^(0+128)
  2896  0427  0AA4               	incf	printf@ap^(0+128),f
  2897  0428  0AA4               	incf	printf@ap^(0+128),f
  2898  0429  1FAC               	btfss	(printf@_val+3)^(0+128),7
  2899  042A  2C38               	goto	l8514
  2900  042B  3003               	movlw	3
  2901  042C  04AD               	iorwf	printf@flag^(0+128),f
  2902  042D  09A9               	comf	printf@_val^(0+128),f
  2903  042E  09AA               	comf	(printf@_val+1)^(0+128),f
  2904  042F  09AB               	comf	(printf@_val+2)^(0+128),f
  2905  0430  09AC               	comf	(printf@_val+3)^(0+128),f
  2906  0431  0AA9               	incf	printf@_val^(0+128),f
  2907  0432  1903               	skipnz
  2908  0433  0AAA               	incf	(printf@_val+1)^(0+128),f
  2909  0434  1903               	skipnz
  2910  0435  0AAB               	incf	(printf@_val+2)^(0+128),f
  2911  0436  1903               	skipnz
  2912  0437  0AAC               	incf	(printf@_val+3)^(0+128),f
  2913  0438                     l8514:	
  2914  0438  0837               	movf	(printf@prec+1)^(0+128),w
  2915  0439  0436               	iorwf	printf@prec^(0+128),w
  2916  043A  1D03               	skipz
  2917  043B  2C44               	goto	l8520
  2918  043C  082C               	movf	(printf@_val+3)^(0+128),w
  2919  043D  042B               	iorwf	(printf@_val+2)^(0+128),w
  2920  043E  042A               	iorwf	(printf@_val+1)^(0+128),w
  2921  043F  0429               	iorwf	printf@_val^(0+128),w
  2922  0440  1903               	btfsc	3,2
  2923  0441  0AB6               	incf	printf@prec^(0+128),f
  2924  0442  1903               	skipnz
  2925  0443  0AB7               	incf	(printf@prec+1)^(0+128),f
  2926  0444                     l8520:	
  2927  0444  01B8               	clrf	printf@c^(0+128)
  2928  0445  0AB8               	incf	printf@c^(0+128),f
  2929  0446                     l8526:	
  2930  0446  26F0               	fcall	PL3	;call to abstracted procedure
  2931  0447  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2932  044C  00DE               	movwf	??_printf+1
  2933  044D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2934  0452  00DF               	movwf	??_printf+2
  2935  0453  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2936  0458  00E0               	movwf	??_printf+3
  2937  0459  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2938  045E  00E1               	movwf	??_printf+4
  2939  045F  1683               	bsf	3,5	;RP0=1, select bank1
  2940  0460  022C               	subwf	(printf@_val+3)^(0+128),w
  2941  0461  1D03               	skipz
  2942  0462  2C73               	goto	u5585
  2943  0463  1283               	bcf	3,5	;RP0=0, select bank0
  2944  0464  0860               	movf	??_printf+3,w
  2945  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2946  0466  022B               	subwf	(printf@_val+2)^(0+128),w
  2947  0467  1D03               	skipz
  2948  0468  2C73               	goto	u5585
  2949  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2950  046A  085F               	movf	??_printf+2,w
  2951  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2952  046C  022A               	subwf	(printf@_val+1)^(0+128),w
  2953  046D  1D03               	skipz
  2954  046E  2C73               	goto	u5585
  2955  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0470  085E               	movf	??_printf+1,w
  2957  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2958  0472  0229               	subwf	printf@_val^(0+128),w
  2959  0473                     u5585:	
  2960  0473  1C03               	btfss	3,0
  2961  0474  2C7A               	goto	l8534
  2962  0475  0AB8               	incf	printf@c^(0+128),f
  2963  0476  0838               	movf	printf@c^(0+128),w
  2964  0477  3A0A               	xorlw	10
  2965  0478  1D03               	skipz
  2966  0479  2C46               	goto	l8526
  2967  047A                     l8534:	
  2968  047A  0838               	movf	printf@c^(0+128),w
  2969  047B  2748  120A  118A   	fcall	PL18	;call to abstracted procedure
  2970  047E  0837               	movf	(printf@prec+1)^(0+128),w
  2971  047F  3A80               	xorlw	128
  2972  0480  1283               	bcf	3,5	;RP0=0, select bank0
  2973  0481  025F               	subwf	??_printf+2,w
  2974  0482  1D03               	skipz
  2975  0483  2C88               	goto	u5605
  2976  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2977  0485  0836               	movf	printf@prec^(0+128),w
  2978  0486  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0487  025D               	subwf	??_printf,w
  2980  0488                     u5605:	
  2981  0488  1803               	skipnc
  2982  0489  2C8E               	goto	l8538
  2983  048A  2777               	call	PL32	;select bank 1
  2984  048B  0836               	movf	printf@prec^(0+128),w
  2985  048C  00B8               	movwf	printf@c^(0+128)
  2986  048D  2CA6               	goto	l8542
  2987  048E                     l8538:	
  2988  048E  1683               	bsf	3,5	;RP0=1, select bank1
  2989  048F  2752  120A  118A   	fcall	PL20	;call to abstracted procedure
  2990  0492  0837               	movf	(printf@prec+1)^(0+128),w
  2991  0493  3A80               	xorlw	128
  2992  0494  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0495  00DF               	movwf	??_printf+2
  2994  0496  085E               	movf	??_printf+1,w
  2995  0497  3A80               	xorlw	128
  2996  0498  025F               	subwf	??_printf+2,w
  2997  0499  1D03               	skipz
  2998  049A  2C9E               	goto	u5615
  2999  049B  085D               	movf	??_printf,w
  3000  049C  1683               	bsf	3,5	;RP0=1, select bank1
  3001  049D  0236               	subwf	printf@prec^(0+128),w
  3002  049E                     u5615:	
  3003  049E  1803               	skipnc
  3004  049F  2CA6               	goto	l8542
  3005  04A0  2777               	call	PL32	;select bank 1
  3006  04A1  0838               	movf	printf@c^(0+128),w
  3007  04A2  00B6               	movwf	printf@prec^(0+128)
  3008  04A3  01B7               	clrf	(printf@prec+1)^(0+128)
  3009  04A4  1BB6               	btfsc	printf@prec^(0+128),7
  3010  04A5  03B7               	decf	(printf@prec+1)^(0+128),f
  3011  04A6                     l8542:	
  3012  04A6  2777               	call	PL32	;select bank 1
  3013  04A7  0832               	movf	(printf@width+1)^(0+128),w
  3014  04A8  0431               	iorwf	printf@width^(0+128),w
  3015  04A9  1903               	skipnz
  3016  04AA  2CB3               	goto	l8548
  3017  04AB  082D               	movf	printf@flag^(0+128),w
  3018  04AC  3903               	andlw	3
  3019  04AD  1903               	btfsc	3,2
  3020  04AE  2CB3               	goto	l8548
  3021  04AF  30FF               	movlw	-1
  3022  04B0  07B1               	addwf	printf@width^(0+128),f
  3023  04B1  1C03               	skipc
  3024  04B2  03B2               	decf	(printf@width+1)^(0+128),f
  3025  04B3                     l8548:	
  3026  04B3  1F2E               	btfss	(printf@flag+1)^(0+128),6
  3027  04B4  2CD0               	goto	l8556
  3028  04B5  0837               	movf	(printf@prec+1)^(0+128),w
  3029  04B6  3A80               	xorlw	128
  3030  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3031  04B8  00DD               	movwf	??_printf
  3032  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3033  04BA  0832               	movf	(printf@width+1)^(0+128),w
  3034  04BB  3A80               	xorlw	128
  3035  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3036  04BD  025D               	subwf	??_printf,w
  3037  04BE  1D03               	skipz
  3038  04BF  2CC3               	goto	u5655
  3039  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  3040  04C1  0831               	movf	printf@width^(0+128),w
  3041  04C2  0236               	subwf	printf@prec^(0+128),w
  3042  04C3                     u5655:	
  3043  04C3  1803               	skipnc
  3044  04C4  2CCD               	goto	l8554
  3045  04C5  2777               	call	PL32	;select bank 1
  3046  04C6  0836               	movf	printf@prec^(0+128),w
  3047  04C7  02B1               	subwf	printf@width^(0+128),f
  3048  04C8  0837               	movf	(printf@prec+1)^(0+128),w
  3049  04C9  1C03               	skipc
  3050  04CA  03B2               	decf	(printf@width+1)^(0+128),f
  3051  04CB  02B2               	subwf	(printf@width+1)^(0+128),f
  3052  04CC  2CD0               	goto	l8556
  3053  04CD                     l8554:	
  3054  04CD  2777               	call	PL32	;select bank 1
  3055  04CE  01B1               	clrf	printf@width^(0+128)
  3056  04CF  01B2               	clrf	(printf@width+1)^(0+128)
  3057  04D0                     l8556:	
  3058  04D0  0838               	movf	printf@c^(0+128),w
  3059  04D1  2748  120A  118A   	fcall	PL18	;call to abstracted procedure
  3060  04D4  0832               	movf	(printf@width+1)^(0+128),w
  3061  04D5  3A80               	xorlw	128
  3062  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  3063  04D7  025F               	subwf	??_printf+2,w
  3064  04D8  1D03               	skipz
  3065  04D9  2CDE               	goto	u5665
  3066  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3067  04DB  0831               	movf	printf@width^(0+128),w
  3068  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3069  04DD  025D               	subwf	??_printf,w
  3070  04DE                     u5665:	
  3071  04DE  1803               	skipnc
  3072  04DF  2CEC               	goto	l8560
  3073  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  3074  04E1  2752  120A  118A   	fcall	PL20	;call to abstracted procedure
  3075  04E4  02B1               	subwf	printf@width^(0+128),f
  3076  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  3077  04E6  085E               	movf	??_printf+1,w
  3078  04E7  1683               	bsf	3,5	;RP0=1, select bank1
  3079  04E8  1C03               	skipc
  3080  04E9  03B2               	decf	(printf@width+1)^(0+128),f
  3081  04EA  02B2               	subwf	(printf@width+1)^(0+128),f
  3082  04EB  2CEF               	goto	l8562
  3083  04EC                     l8560:	
  3084  04EC  2777               	call	PL32	;select bank 1
  3085  04ED  01B1               	clrf	printf@width^(0+128)
  3086  04EE  01B2               	clrf	(printf@width+1)^(0+128)
  3087  04EF                     l8562:	
  3088  04EF  1D2D               	btfss	printf@flag^(0+128),2
  3089  04F0  2D08               	goto	l8574
  3090  04F1  082D               	movf	printf@flag^(0+128),w
  3091  04F2  3903               	andlw	3
  3092  04F3  1903               	btfsc	3,2
  3093  04F4  2CF9               	goto	l8568
  3094  04F5  302D               	movlw	45
  3095  04F6  2564  120A  118A   	fcall	_putch
  3096  04F9                     l8568:	
  3097  04F9  1683               	bsf	3,5	;RP0=1, select bank1
  3098  04FA                     L6:	
  3099  04FA  0832               	movf	(printf@width+1)^(0+128),w
  3100  04FB  0431               	iorwf	printf@width^(0+128),w
  3101  04FC  1903               	skipnz
  3102  04FD  2D21               	goto	l8586
  3103  04FE  3030               	movlw	48
  3104  04FF  2564  120A  118A   	fcall	_putch
  3105  0502  30FF               	movlw	-1
  3106  0503  1683               	bsf	3,5	;RP0=1, select bank1
  3107  0504  07B1               	addwf	printf@width^(0+128),f
  3108  0505  1C03               	skipc
  3109  0506  03B2               	decf	(printf@width+1)^(0+128),f
  3110  0507  2CFA               	goto	L6
  3111  0508                     l8574:	
  3112  0508  0832               	movf	(printf@width+1)^(0+128),w
  3113  0509  0431               	iorwf	printf@width^(0+128),w
  3114  050A  1903               	skipnz
  3115  050B  2D19               	goto	l8580
  3116  050C                     l8576:	
  3117  050C  3020               	movlw	32
  3118  050D  2564  120A  118A   	fcall	_putch
  3119  0510  30FF               	movlw	-1
  3120  0511  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0512  07B1               	addwf	printf@width^(0+128),f
  3122  0513  1C03               	skipc
  3123  0514  03B2               	decf	(printf@width+1)^(0+128),f
  3124  0515  0832               	movf	(printf@width+1)^(0+128),w
  3125  0516  0431               	iorwf	printf@width^(0+128),w
  3126  0517  1D03               	skipz
  3127  0518  2D0C               	goto	l8576
  3128  0519                     l8580:	
  3129  0519  082D               	movf	printf@flag^(0+128),w
  3130  051A  3903               	andlw	3
  3131  051B  1903               	btfsc	3,2
  3132  051C  2D21               	goto	l8586
  3133  051D  302D               	movlw	45
  3134  051E                     L5:	
  3135  051E  2564  120A  118A   	fcall	_putch
  3136  0521                     l8586:	
  3137  0521  30FF               	movlw	-1
  3138  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3139  0523  07B6               	addwf	printf@prec^(0+128),f
  3140  0524  1C03               	skipc
  3141  0525  03B7               	decf	(printf@prec+1)^(0+128),f
  3142  0526  0A36               	incf	printf@prec^(0+128),w
  3143  0527  1903               	skipnz
  3144  0528  0A37               	incf	(printf@prec+1)^(0+128),w
  3145  0529  1903               	btfsc	3,2
  3146  052A  2815               	goto	l8588
  3147  052B  300A               	movlw	10
  3148  052C  1283               	bcf	3,5	;RP0=0, select bank0
  3149  052D  00A8               	movwf	?___llmod
  3150  052E  01A9               	clrf	?___llmod+1
  3151  052F  01AA               	clrf	?___llmod+2
  3152  0530  01AB               	clrf	?___llmod+3
  3153  0531  1683               	bsf	3,5	;RP0=1, select bank1
  3154  0532  0836               	movf	printf@prec^(0+128),w
  3155  0533  1283               	bcf	3,5	;RP0=0, select bank0
  3156  0534  00DD               	movwf	??_printf
  3157  0535  1003               	clrc
  3158  0536  0DDD               	rlf	??_printf,f
  3159  0537  1003               	clrc
  3160  0538  0D5D               	rlf	??_printf,w
  3161  0539  3E4F               	addlw	low (_dpowers-__stringbase)
  3162  053A  0084               	movwf	4
  3163  053B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3164  0540  00A0               	movwf	?___lldiv
  3165  0541  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3166  0546  00A1               	movwf	?___lldiv+1
  3167  0547  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3168  054C  00A2               	movwf	?___lldiv+2
  3169  054D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3170  0552  26DE  120A  118A   	fcall	PL2	;call to abstracted procedure
  3171  0555  2656  120A  118A   	fcall	___lldiv
  3172  0558  271D  120A  118A   	fcall	PL12	;call to abstracted procedure
  3173  055B  256A  120A  118A   	fcall	___llmod
  3174  055E  0828               	movf	?___llmod,w
  3175  055F  3E30               	addlw	48
  3176  0560  1683               	bsf	3,5	;RP0=1, select bank1
  3177  0561  00B8               	movwf	printf@c^(0+128)
  3178  0562  2D1E               	goto	L5
  3179  0563                     l2332:	
  3180  0563  0008               	return
  3181  0564                     __end_of_printf:	
  3182  0564                     __ptext904:	
  3183 ;; =============== function _printf ends ============
  3184                           
  3185                           
  3186 ;; *************** function _putch *****************
  3187 ;; Defined at:
  3188 ;;		line 115 in file "D:\TTVXL\Project TTVXL\BT01week16ttvxlbuoi1\BT01week16ttvxlbuoi1.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  c               1    wreg     unsigned char 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  c               1    3[BANK0 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;		None               void
  3195 ;; Registers used:
  3196 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/20
  3199 ;;		On exit  : 60/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         0       0       0       0       0
  3203 ;;      Locals:         0       1       0       0       0
  3204 ;;      Temps:          0       0       0       0       0
  3205 ;;      Totals:         0       1       0       0       0
  3206 ;;Total ram usage:        1 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    4
  3209 ;; This function calls:
  3210 ;;		_lcd_putc
  3211 ;; This function is called by:
  3212 ;;		_printf
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215  0564                     _putch:	
  3216                           
  3217                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3218                           ;putch@c stored from wreg
  3219  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0566  00A3               	movwf	putch@c
  3222                           
  3223                           ;BT01week16ttvxlbuoi1.c: 116: lcd_putc(c);
  3224  0567  120A  158A  2A86   	ljmp	_lcd_putc
  3225  056A                     __end_of_putch:	
  3226  056A                     __ptext924:	
  3227 ;; =============== function ___ftneg ends ============
  3228                           
  3229                           
  3230 ;; *************** function ___llmod *****************
  3231 ;; Defined at:
  3232 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  divisor         4    8[BANK0 ] unsigned long 
  3235 ;;  dividend        4   12[BANK0 ] unsigned long 
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;  counter         1    8[COMMON] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  4    8[BANK0 ] unsigned long 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0
  3242 ;; Tracked objects:
  3243 ;;		On entry : 60/0
  3244 ;;		On exit  : 60/0
  3245 ;;		Unchanged: FFF9F/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3247 ;;      Params:         0       8       0       0       0
  3248 ;;      Locals:         1       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0
  3250 ;;      Totals:         1       8       0       0       0
  3251 ;;Total ram usage:        9 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    1
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_printf
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260  056A                     ___llmod:	
  3261                           
  3262                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3263  056A  082B               	movf	___llmod@divisor+3,w
  3264  056B  042A               	iorwf	___llmod@divisor+2,w
  3265  056C  0429               	iorwf	___llmod@divisor+1,w
  3266  056D  0428               	iorwf	___llmod@divisor,w
  3267  056E  1903               	skipnz
  3268  056F  2D9F               	goto	l7854
  3269  0570  01F8               	clrf	___llmod@counter
  3270  0571                     L14:	
  3271  0571  0AF8               	incf	___llmod@counter,f
  3272  0572  1BAB               	btfsc	___llmod@divisor+3,7
  3273  0573  2D7A               	goto	l7846
  3274  0574  1003               	clrc
  3275  0575  0DA8               	rlf	___llmod@divisor,f
  3276  0576  0DA9               	rlf	___llmod@divisor+1,f
  3277  0577  0DAA               	rlf	___llmod@divisor+2,f
  3278  0578  0DAB               	rlf	___llmod@divisor+3,f
  3279  0579  2D71               	goto	L14
  3280  057A                     l7846:	
  3281  057A  082B               	movf	___llmod@divisor+3,w
  3282  057B  022F               	subwf	___llmod@dividend+3,w
  3283  057C  1D03               	skipz
  3284  057D  2D88               	goto	u4405
  3285  057E  082A               	movf	___llmod@divisor+2,w
  3286  057F  022E               	subwf	___llmod@dividend+2,w
  3287  0580  1D03               	skipz
  3288  0581  2D88               	goto	u4405
  3289  0582  0829               	movf	___llmod@divisor+1,w
  3290  0583  022D               	subwf	___llmod@dividend+1,w
  3291  0584  1D03               	skipz
  3292  0585  2D88               	goto	u4405
  3293  0586  0828               	movf	___llmod@divisor,w
  3294  0587  022C               	subwf	___llmod@dividend,w
  3295  0588                     u4405:	
  3296  0588  1C03               	skipc
  3297  0589  2D99               	goto	L15
  3298  058A  0828               	movf	___llmod@divisor,w
  3299  058B  02AC               	subwf	___llmod@dividend,f
  3300  058C  0829               	movf	___llmod@divisor+1,w
  3301  058D  1C03               	skipc
  3302  058E  0F29               	incfsz	___llmod@divisor+1,w
  3303  058F  02AD               	subwf	___llmod@dividend+1,f
  3304  0590  082A               	movf	___llmod@divisor+2,w
  3305  0591  1C03               	skipc
  3306  0592  0F2A               	incfsz	___llmod@divisor+2,w
  3307  0593  02AE               	subwf	___llmod@dividend+2,f
  3308  0594  082B               	movf	___llmod@divisor+3,w
  3309  0595  1C03               	skipc
  3310  0596  0F2B               	incfsz	___llmod@divisor+3,w
  3311  0597  02AF               	subwf	___llmod@dividend+3,f
  3312  0598  1003               	clrc
  3313  0599                     L15:	
  3314  0599  0CAB               	rrf	___llmod@divisor+3,f
  3315  059A  0CAA               	rrf	___llmod@divisor+2,f
  3316  059B  0CA9               	rrf	___llmod@divisor+1,f
  3317  059C  0CA8               	rrf	___llmod@divisor,f
  3318  059D  0BF8               	decfsz	___llmod@counter,f
  3319  059E  2D7A               	goto	l7846
  3320  059F                     l7854:	
  3321  059F  082F               	movf	___llmod@dividend+3,w
  3322  05A0  00AB               	movwf	?___llmod+3
  3323  05A1  082E               	movf	___llmod@dividend+2,w
  3324  05A2  00AA               	movwf	?___llmod+2
  3325  05A3  082D               	movf	___llmod@dividend+1,w
  3326  05A4  00A9               	movwf	?___llmod+1
  3327  05A5  082C               	movf	___llmod@dividend,w
  3328  05A6  00A8               	movwf	?___llmod
  3329  05A7  0008               	return
  3330  05A8                     __end_of___llmod:	
  3331  05A8                     __ptext922:	
  3332 ;; =============== function ___lldiv ends ============
  3333                           
  3334                           
  3335 ;; *************** function ___ftge *****************
  3336 ;; Defined at:
  3337 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  ff1             3    3[COMMON] float 
  3340 ;;  ff2             3    6[COMMON] float 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 60/20
  3349 ;;		On exit  : 60/20
  3350 ;;		Unchanged: FFF9F/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3352 ;;      Params:         6       0       0       0       0
  3353 ;;      Locals:         0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0
  3355 ;;      Totals:         6       0       0       0       0
  3356 ;;Total ram usage:        6 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_printf
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365  05A8                     ___ftge:	
  3366                           
  3367                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3368  05A8  1FF5               	btfss	___ftge@ff1+2,7
  3369  05A9  2DB7               	goto	l6758
  3370  05AA  0873               	movf	___ftge@ff1,w
  3371  05AB  3C00               	sublw	0
  3372  05AC  00F3               	movwf	___ftge@ff1
  3373  05AD  0874               	movf	___ftge@ff1+1,w
  3374  05AE  1C03               	skipc
  3375  05AF  0F74               	incfsz	___ftge@ff1+1,w
  3376  05B0  3C00               	sublw	0
  3377  05B1  00F4               	movwf	___ftge@ff1+1
  3378  05B2  0875               	movf	___ftge@ff1+2,w
  3379  05B3  1C03               	skipc
  3380  05B4  0F75               	incfsz	___ftge@ff1+2,w
  3381  05B5  3C80               	sublw	128
  3382  05B6  00F5               	movwf	___ftge@ff1+2
  3383  05B7                     l6758:	
  3384  05B7  1FF8               	btfss	___ftge@ff2+2,7
  3385  05B8  2DC6               	goto	l6762
  3386  05B9  0876               	movf	___ftge@ff2,w
  3387  05BA  3C00               	sublw	0
  3388  05BB  00F6               	movwf	___ftge@ff2
  3389  05BC  0877               	movf	___ftge@ff2+1,w
  3390  05BD  1C03               	skipc
  3391  05BE  0F77               	incfsz	___ftge@ff2+1,w
  3392  05BF  3C00               	sublw	0
  3393  05C0  00F7               	movwf	___ftge@ff2+1
  3394  05C1  0878               	movf	___ftge@ff2+2,w
  3395  05C2  1C03               	skipc
  3396  05C3  0F78               	incfsz	___ftge@ff2+2,w
  3397  05C4  3C80               	sublw	128
  3398  05C5  00F8               	movwf	___ftge@ff2+2
  3399  05C6                     l6762:	
  3400  05C6  3080               	movlw	128
  3401  05C7  06F5               	xorwf	___ftge@ff1+2,f
  3402  05C8  06F8               	xorwf	___ftge@ff2+2,f
  3403  05C9  0878               	movf	___ftge@ff2+2,w
  3404  05CA  0275               	subwf	___ftge@ff1+2,w
  3405  05CB  1D03               	skipz
  3406  05CC  0008               	return
  3407  05CD  0877               	movf	___ftge@ff2+1,w
  3408  05CE  0274               	subwf	___ftge@ff1+1,w
  3409  05CF  1D03               	skipz
  3410  05D0  0008               	return
  3411  05D1  0876               	movf	___ftge@ff2,w
  3412  05D2  0273               	subwf	___ftge@ff1,w
  3413  05D3  0008               	return
  3414  05D4                     __end_of___ftge:	
  3415  05D4                     __ptext934:	
  3416 ;; =============== function __tdiv_to_l_ ends ============
  3417                           
  3418                           
  3419 ;; *************** function _isdigit *****************
  3420 ;; Defined at:
  3421 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  c               1    wreg     unsigned char 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;  c               1    4[COMMON] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;		None               void
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 40/20
  3432 ;;		On exit  : 40/20
  3433 ;;		Unchanged: FFFBF/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3435 ;;      Params:         0       0       0       0       0
  3436 ;;      Locals:         2       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0
  3438 ;;      Totals:         2       0       0       0       0
  3439 ;;Total ram usage:        2 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; Hardware stack levels required when called:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_printf
  3446 ;;		_atoi
  3447 ;; This function uses a non-reentrant model
  3448 ;;
  3449  05D4                     _isdigit:	
  3450                           
  3451                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3452                           ;isdigit@c stored from wreg
  3453  05D4  00F4               	movwf	isdigit@c
  3454  05D5  303A               	movlw	58
  3455  05D6  01F3               	clrf	_isdigit$3697
  3456  05D7  0274               	subwf	isdigit@c,w
  3457  05D8  1803               	skipnc
  3458  05D9  2DE0               	goto	l6444
  3459  05DA  3030               	movlw	48
  3460  05DB  0274               	subwf	isdigit@c,w
  3461  05DC  1C03               	skipc
  3462  05DD  2DE0               	goto	l6444
  3463  05DE  01F3               	clrf	_isdigit$3697
  3464  05DF  0AF3               	incf	_isdigit$3697,f
  3465  05E0                     l6444:	
  3466  05E0  0C73               	rrf	_isdigit$3697,w
  3467  05E1  0008               	return
  3468  05E2                     __end_of_isdigit:	
  3469  05E2                     __ptext930:	
  3470 ;; =============== function ___lbdiv ends ============
  3471                           
  3472                           
  3473 ;; *************** function ___wmul *****************
  3474 ;; Defined at:
  3475 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  multiplier      2    3[COMMON] unsigned int 
  3478 ;;  multiplicand    2    5[COMMON] unsigned int 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  product         2    7[COMMON] unsigned int 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  2    3[COMMON] unsigned int 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 40/20
  3487 ;;		On exit  : 40/20
  3488 ;;		Unchanged: FFFBF/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         4       0       0       0       0
  3491 ;;      Locals:         2       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         6       0       0       0       0
  3494 ;;Total ram usage:        6 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    1
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_fround
  3501 ;;		_scale
  3502 ;;		_printf
  3503 ;;		_atoi
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506  05E2                     ___wmul:	
  3507                           
  3508                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3509  05E2  01F7               	clrf	___wmul@product
  3510  05E3  01F8               	clrf	___wmul@product+1
  3511  05E4                     l6560:	
  3512  05E4  1C73               	btfss	___wmul@multiplier,0
  3513  05E5  2DEC               	goto	l6564
  3514  05E6  0875               	movf	___wmul@multiplicand,w
  3515  05E7  07F7               	addwf	___wmul@product,f
  3516  05E8  1803               	skipnc
  3517  05E9  0AF8               	incf	___wmul@product+1,f
  3518  05EA  0876               	movf	___wmul@multiplicand+1,w
  3519  05EB  07F8               	addwf	___wmul@product+1,f
  3520  05EC                     l6564:	
  3521  05EC  1003               	clrc
  3522  05ED  0DF5               	rlf	___wmul@multiplicand,f
  3523  05EE  0DF6               	rlf	___wmul@multiplicand+1,f
  3524  05EF  1003               	clrc
  3525  05F0  0CF4               	rrf	___wmul@multiplier+1,f
  3526  05F1  0CF3               	rrf	___wmul@multiplier,f
  3527  05F2  0874               	movf	___wmul@multiplier+1,w
  3528  05F3  0473               	iorwf	___wmul@multiplier,w
  3529  05F4  1D03               	skipz
  3530  05F5  2DE4               	goto	l6560
  3531  05F6  0878               	movf	___wmul@product+1,w
  3532  05F7  00F4               	movwf	?___wmul+1
  3533  05F8  0877               	movf	___wmul@product,w
  3534  05F9  00F3               	movwf	?___wmul
  3535  05FA  0008               	return
  3536  05FB                     __end_of___wmul:	
  3537  05FB                     __ptext926:	
  3538 ;; =============== function ___awdiv ends ============
  3539                           
  3540                           
  3541 ;; *************** function ___fttol *****************
  3542 ;; Defined at:
  3543 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  f1              3    8[BANK0 ] float 
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;  lval            4   16[BANK0 ] unsigned long 
  3548 ;;  exp1            1   20[BANK0 ] unsigned char 
  3549 ;;  sign1           1   15[BANK0 ] unsigned char 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  4    8[BANK0 ] long 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0
  3554 ;; Tracked objects:
  3555 ;;		On entry : 60/0
  3556 ;;		On exit  : 60/0
  3557 ;;		Unchanged: FFF9F/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       4       0       0       0
  3560 ;;      Locals:         0       6       0       0       0
  3561 ;;      Temps:          0       3       0       0       0
  3562 ;;      Totals:         0      13       0       0       0
  3563 ;;Total ram usage:       13 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    1
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		_printf
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572  05FB                     ___fttol:	
  3573                           
  3574                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3575  05FB  2770  120A  118A   	fcall	PL30	;call to abstracted procedure
  3576  05FE  1003               	clrc
  3577  05FF  0D2D               	rlf	??___fttol+1,w
  3578  0600  0D2E               	rlf	??___fttol+2,w
  3579  0601  00B4               	movwf	___fttol@exp1
  3580  0602  08B4               	movf	___fttol@exp1,f
  3581  0603  1D03               	skipz
  3582  0604  2E0A               	goto	l6648
  3583  0605                     l6646:	
  3584  0605  01A8               	clrf	?___fttol
  3585  0606  01A9               	clrf	?___fttol+1
  3586  0607  01AA               	clrf	?___fttol+2
  3587  0608  01AB               	clrf	?___fttol+3
  3588  0609  0008               	return
  3589  060A                     l6648:	
  3590  060A  2770  120A  118A   	fcall	PL30	;call to abstracted procedure
  3591  060D  3017               	movlw	23
  3592  060E                     u2635:	
  3593  060E  1003               	clrc
  3594  060F  0CAE               	rrf	??___fttol+2,f
  3595  0610  0CAD               	rrf	??___fttol+1,f
  3596  0611  0CAC               	rrf	??___fttol,f
  3597  0612  3EFF               	addlw	-1
  3598  0613  1D03               	skipz
  3599  0614  2E0E               	goto	u2635
  3600  0615  082C               	movf	??___fttol,w
  3601  0616  00AF               	movwf	___fttol@sign1
  3602  0617  17A9               	bsf	___fttol@f1+1,7
  3603  0618  01AA               	clrf	___fttol@f1+2
  3604  0619  0828               	movf	___fttol@f1,w
  3605  061A  00B0               	movwf	___fttol@lval
  3606  061B  0829               	movf	___fttol@f1+1,w
  3607  061C  00B1               	movwf	___fttol@lval+1
  3608  061D  082A               	movf	___fttol@f1+2,w
  3609  061E  00B2               	movwf	___fttol@lval+2
  3610  061F  308E               	movlw	142
  3611  0620  01B3               	clrf	___fttol@lval+3
  3612  0621  02B4               	subwf	___fttol@exp1,f
  3613  0622  1FB4               	btfss	___fttol@exp1,7
  3614  0623  2E31               	goto	l6668
  3615  0624  0834               	movf	___fttol@exp1,w
  3616  0625  3A80               	xorlw	128
  3617  0626  3E8F               	addlw	143
  3618  0627  1C03               	btfss	3,0
  3619  0628  2E05               	goto	l6646
  3620  0629                     l6664:	
  3621  0629  1003               	clrc
  3622  062A  0CB3               	rrf	___fttol@lval+3,f
  3623  062B  0CB2               	rrf	___fttol@lval+2,f
  3624  062C  0CB1               	rrf	___fttol@lval+1,f
  3625  062D  0CB0               	rrf	___fttol@lval,f
  3626  062E  0FB4               	incfsz	___fttol@exp1,f
  3627  062F  2E29               	goto	l6664
  3628  0630  2E3F               	goto	l6674
  3629  0631                     l6668:	
  3630  0631  3018               	movlw	24
  3631  0632  0234               	subwf	___fttol@exp1,w
  3632  0633  1803               	btfsc	3,0
  3633  0634  2E05               	goto	l6646
  3634  0635                     l3467:	
  3635  0635  08B4               	movf	___fttol@exp1,f
  3636  0636  1903               	btfsc	3,2
  3637  0637  2E3F               	goto	l6674
  3638  0638  1003               	clrc
  3639  0639  0DB0               	rlf	___fttol@lval,f
  3640  063A  0DB1               	rlf	___fttol@lval+1,f
  3641  063B  0DB2               	rlf	___fttol@lval+2,f
  3642  063C  0DB3               	rlf	___fttol@lval+3,f
  3643  063D  03B4               	decf	___fttol@exp1,f
  3644  063E  2E35               	goto	l3467
  3645  063F                     l6674:	
  3646  063F  082F               	movf	___fttol@sign1,w
  3647  0640  1903               	btfsc	3,2
  3648  0641  2E4D               	goto	l6678
  3649  0642  09B0               	comf	___fttol@lval,f
  3650  0643  09B1               	comf	___fttol@lval+1,f
  3651  0644  09B2               	comf	___fttol@lval+2,f
  3652  0645  09B3               	comf	___fttol@lval+3,f
  3653  0646  0AB0               	incf	___fttol@lval,f
  3654  0647  1903               	skipnz
  3655  0648  0AB1               	incf	___fttol@lval+1,f
  3656  0649  1903               	skipnz
  3657  064A  0AB2               	incf	___fttol@lval+2,f
  3658  064B  1903               	skipnz
  3659  064C  0AB3               	incf	___fttol@lval+3,f
  3660  064D                     l6678:	
  3661  064D  0833               	movf	___fttol@lval+3,w
  3662  064E  00AB               	movwf	?___fttol+3
  3663  064F  0832               	movf	___fttol@lval+2,w
  3664  0650  00AA               	movwf	?___fttol+2
  3665  0651  0831               	movf	___fttol@lval+1,w
  3666  0652  00A9               	movwf	?___fttol+1
  3667  0653  0830               	movf	___fttol@lval,w
  3668  0654  00A8               	movwf	?___fttol
  3669  0655  0008               	return
  3670  0656                     __end_of___fttol:	
  3671  0656                     __ptext921:	
  3672 ;; =============== function ___awmod ends ============
  3673                           
  3674                           
  3675 ;; *************** function ___lldiv *****************
  3676 ;; Defined at:
  3677 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  divisor         4    0[BANK0 ] unsigned long 
  3680 ;;  dividend        4    4[BANK0 ] unsigned long 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  quotient        4    3[COMMON] unsigned long 
  3683 ;;  counter         1    7[COMMON] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  4    0[BANK0 ] unsigned long 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 60/0
  3690 ;;		On exit  : 60/0
  3691 ;;		Unchanged: FFF9F/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       8       0       0       0
  3694 ;;      Locals:         5       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0
  3696 ;;      Totals:         5       8       0       0       0
  3697 ;;Total ram usage:       13 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_printf
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706  0656                     ___lldiv:	
  3707                           
  3708                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3709  0656  01F3               	clrf	___lldiv@quotient
  3710  0657  01F4               	clrf	___lldiv@quotient+1
  3711  0658  01F5               	clrf	___lldiv@quotient+2
  3712  0659  01F6               	clrf	___lldiv@quotient+3
  3713  065A  0823               	movf	___lldiv@divisor+3,w
  3714  065B  0422               	iorwf	___lldiv@divisor+2,w
  3715  065C  0421               	iorwf	___lldiv@divisor+1,w
  3716  065D  0420               	iorwf	___lldiv@divisor,w
  3717  065E  1903               	skipnz
  3718  065F  2E95               	goto	l7880
  3719  0660  01F7               	clrf	___lldiv@counter
  3720  0661                     L11:	
  3721  0661  0AF7               	incf	___lldiv@counter,f
  3722  0662  1BA3               	btfsc	___lldiv@divisor+3,7
  3723  0663  2E6A               	goto	l7868
  3724  0664  1003               	clrc
  3725  0665  0DA0               	rlf	___lldiv@divisor,f
  3726  0666  0DA1               	rlf	___lldiv@divisor+1,f
  3727  0667  0DA2               	rlf	___lldiv@divisor+2,f
  3728  0668  0DA3               	rlf	___lldiv@divisor+3,f
  3729  0669  2E61               	goto	L11
  3730  066A                     l7868:	
  3731  066A  1003               	clrc
  3732  066B  0DF3               	rlf	___lldiv@quotient,f
  3733  066C  0DF4               	rlf	___lldiv@quotient+1,f
  3734  066D  0DF5               	rlf	___lldiv@quotient+2,f
  3735  066E  0DF6               	rlf	___lldiv@quotient+3,f
  3736  066F  0823               	movf	___lldiv@divisor+3,w
  3737  0670  0227               	subwf	___lldiv@dividend+3,w
  3738  0671  1D03               	skipz
  3739  0672  2E7D               	goto	u4445
  3740  0673  0822               	movf	___lldiv@divisor+2,w
  3741  0674  0226               	subwf	___lldiv@dividend+2,w
  3742  0675  1D03               	skipz
  3743  0676  2E7D               	goto	u4445
  3744  0677  0821               	movf	___lldiv@divisor+1,w
  3745  0678  0225               	subwf	___lldiv@dividend+1,w
  3746  0679  1D03               	skipz
  3747  067A  2E7D               	goto	u4445
  3748  067B  0820               	movf	___lldiv@divisor,w
  3749  067C  0224               	subwf	___lldiv@dividend,w
  3750  067D                     u4445:	
  3751  067D  1C03               	skipc
  3752  067E  2E8F               	goto	L12
  3753  067F  0820               	movf	___lldiv@divisor,w
  3754  0680  02A4               	subwf	___lldiv@dividend,f
  3755  0681  0821               	movf	___lldiv@divisor+1,w
  3756  0682  1C03               	skipc
  3757  0683  0F21               	incfsz	___lldiv@divisor+1,w
  3758  0684  02A5               	subwf	___lldiv@dividend+1,f
  3759  0685  0822               	movf	___lldiv@divisor+2,w
  3760  0686  1C03               	skipc
  3761  0687  0F22               	incfsz	___lldiv@divisor+2,w
  3762  0688  02A6               	subwf	___lldiv@dividend+2,f
  3763  0689  0823               	movf	___lldiv@divisor+3,w
  3764  068A  1C03               	skipc
  3765  068B  0F23               	incfsz	___lldiv@divisor+3,w
  3766  068C  02A7               	subwf	___lldiv@dividend+3,f
  3767  068D  1473               	bsf	___lldiv@quotient,0
  3768  068E  1003               	clrc
  3769  068F                     L12:	
  3770  068F  0CA3               	rrf	___lldiv@divisor+3,f
  3771  0690  0CA2               	rrf	___lldiv@divisor+2,f
  3772  0691  0CA1               	rrf	___lldiv@divisor+1,f
  3773  0692  0CA0               	rrf	___lldiv@divisor,f
  3774  0693  0BF7               	decfsz	___lldiv@counter,f
  3775  0694  2E6A               	goto	l7868
  3776  0695                     l7880:	
  3777  0695  0876               	movf	___lldiv@quotient+3,w
  3778  0696  00A3               	movwf	?___lldiv+3
  3779  0697  0875               	movf	___lldiv@quotient+2,w
  3780  0698  00A2               	movwf	?___lldiv+2
  3781  0699  0874               	movf	___lldiv@quotient+1,w
  3782  069A  00A1               	movwf	?___lldiv+1
  3783  069B  0873               	movf	___lldiv@quotient,w
  3784  069C  00A0               	movwf	?___lldiv
  3785  069D  0008               	return
  3786  069E                     __end_of___lldiv:	
  3787  069E                     __ptext923:	
  3788 ;; =============== function ___ftge ends ============
  3789                           
  3790                           
  3791 ;; *************** function ___ftneg *****************
  3792 ;; Defined at:
  3793 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  f1              3    3[COMMON] float 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  3    3[COMMON] float 
  3800 ;; Registers used:
  3801 ;;		wreg
  3802 ;; Tracked objects:
  3803 ;;		On entry : 160/20
  3804 ;;		On exit  : 160/20
  3805 ;;		Unchanged: FFE9F/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         3       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0
  3810 ;;      Totals:         3       0       0       0       0
  3811 ;;Total ram usage:        3 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    1
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_printf
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820  069E                     ___ftneg:	
  3821                           
  3822                           ; Regs used in ___ftneg: [wreg]
  3823  069E  0875               	movf	___ftneg@f1+2,w
  3824  069F  0474               	iorwf	___ftneg@f1+1,w
  3825  06A0  0473               	iorwf	___ftneg@f1,w
  3826  06A1  1903               	skipnz
  3827  06A2  0008               	return
  3828  06A3  3080               	movlw	128
  3829  06A4  06F5               	xorwf	___ftneg@f1+2,f
  3830  06A5  0008               	return
  3831  06A6                     __end_of___ftneg:	
  3832  06A6                     __ptext911:	
  3833 ;; =============== function _lcd_init ends ============
  3834                           
  3835                           
  3836 ;; *************** function ___lltoft *****************
  3837 ;; Defined at:
  3838 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  c               4    3[BANK0 ] unsigned long 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  exp             1    8[COMMON] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  3    3[BANK0 ] float 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0, pclath, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 60/0
  3849 ;;		On exit  : 60/0
  3850 ;;		Unchanged: FFF9F/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         0       4       0       0       0
  3853 ;;      Locals:         1       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0
  3855 ;;      Totals:         1       4       0       0       0
  3856 ;;Total ram usage:        5 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    2
  3859 ;; This function calls:
  3860 ;;		___ftpack
  3861 ;; This function is called by:
  3862 ;;		_printf
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865  06A6                     ___lltoft:	
  3866                           
  3867                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3868  06A6  308E               	movlw	142
  3869  06A7  00F8               	movwf	___lltoft@exp
  3870  06A8                     l8162:	
  3871  06A8  30FF               	movlw	255
  3872  06A9  0526               	andwf	___lltoft@c+3,w
  3873  06AA  1903               	btfsc	3,2
  3874  06AB  2EB3               	goto	l8164
  3875  06AC  1003               	clrc
  3876  06AD  0CA6               	rrf	___lltoft@c+3,f
  3877  06AE  0CA5               	rrf	___lltoft@c+2,f
  3878  06AF  0CA4               	rrf	___lltoft@c+1,f
  3879  06B0  0CA3               	rrf	___lltoft@c,f
  3880  06B1  0AF8               	incf	___lltoft@exp,f
  3881  06B2  2EA8               	goto	l8162
  3882  06B3                     l8164:	
  3883  06B3  0823               	movf	___lltoft@c,w
  3884  06B4  00F3               	movwf	?___ftpack
  3885  06B5  0824               	movf	___lltoft@c+1,w
  3886  06B6  00F4               	movwf	?___ftpack+1
  3887  06B7  0825               	movf	___lltoft@c+2,w
  3888  06B8  00F5               	movwf	?___ftpack+2
  3889  06B9  0878               	movf	___lltoft@exp,w
  3890  06BA  00F6               	movwf	?___ftpack+3
  3891  06BB  01F7               	clrf	?___ftpack+4
  3892  06BC  120A  158A  2769   	fcall	___ftpack
  3893  06BF  0873               	movf	?___ftpack,w
  3894  06C0  00A3               	movwf	?___lltoft
  3895  06C1  0874               	movf	?___ftpack+1,w
  3896  06C2  00A4               	movwf	?___lltoft+1
  3897  06C3  0875               	movf	?___ftpack+2,w
  3898  06C4  00A5               	movwf	?___lltoft+2
  3899  06C5  0008               	return
  3900  06C6                     __end_of___lltoft:	
  3901  06C6                     __ptext906:	
  3902 ;; =============== function _lcd_putc ends ============
  3903                           
  3904                           
  3905 ;; *************** function ___ftsub *****************
  3906 ;; Defined at:
  3907 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  f2              3   48[BANK0 ] float 
  3910 ;;  f1              3   51[BANK0 ] float 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  3   48[BANK0 ] float 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, pclath, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 60/0
  3919 ;;		On exit  : 60/0
  3920 ;;		Unchanged: FFF9F/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3922 ;;      Params:         0       6       0       0       0
  3923 ;;      Locals:         0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0
  3925 ;;      Totals:         0       6       0       0       0
  3926 ;;Total ram usage:        6 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    3
  3929 ;; This function calls:
  3930 ;;		___ftadd
  3931 ;; This function is called by:
  3932 ;;		_printf
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935  06C6                     ___ftsub:	
  3936                           
  3937                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  3938  06C6  3080               	movlw	128
  3939  06C7  06D2               	xorwf	___ftsub@f2+2,f
  3940  06C8  0853               	movf	___ftsub@f1,w
  3941  06C9  00C4               	movwf	?___ftadd
  3942  06CA  0854               	movf	___ftsub@f1+1,w
  3943  06CB  00C5               	movwf	?___ftadd+1
  3944  06CC  0855               	movf	___ftsub@f1+2,w
  3945  06CD  00C6               	movwf	?___ftadd+2
  3946  06CE  0850               	movf	___ftsub@f2,w
  3947  06CF  00C7               	movwf	?___ftadd+3
  3948  06D0  0851               	movf	___ftsub@f2+1,w
  3949  06D1  00C8               	movwf	?___ftadd+4
  3950  06D2  0852               	movf	___ftsub@f2+2,w
  3951  06D3  00C9               	movwf	?___ftadd+5
  3952  06D4  160A  118A  2673   	fcall	___ftadd
  3953  06D7  0844               	movf	?___ftadd,w
  3954  06D8  00D0               	movwf	?___ftsub
  3955  06D9  0845               	movf	?___ftadd+1,w
  3956  06DA  00D1               	movwf	?___ftsub+1
  3957  06DB  0846               	movf	?___ftadd+2,w
  3958  06DC  00D2               	movwf	?___ftsub+2
  3959  06DD  0008               	return
  3960  06DE                     __end_of___ftsub:	
  3961  06DE                     PL2:	
  3962  06DE  00A3               	movwf	?___lldiv+3
  3963  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  3964  06E0  082C               	movf	(printf@_val+3)^(0+128),w
  3965  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  3966  06E2  00A7               	movwf	?___lldiv+7
  3967  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3968  06E4  082B               	movf	(printf@_val+2)^(0+128),w
  3969  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3970  06E6  00A6               	movwf	?___lldiv+6
  3971  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3972  06E8  082A               	movf	(printf@_val+1)^(0+128),w
  3973  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3974  06EA  00A5               	movwf	?___lldiv+5
  3975  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  3976  06EC  0829               	movf	printf@_val^(0+128),w
  3977  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3978  06EE  00A4               	movwf	?___lldiv+4
  3979  06EF  0008               	return
  3980  06F0                     PL3:	
  3981  06F0  0838               	movf	printf@c^(0+128),w
  3982  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3983  06F2  00DD               	movwf	??_printf
  3984  06F3  1003               	clrc
  3985  06F4  0DDD               	rlf	??_printf,f
  3986  06F5  1003               	clrc
  3987  06F6  0D5D               	rlf	??_printf,w
  3988  06F7  3E4F               	addlw	low (_dpowers-__stringbase)
  3989  06F8  0084               	movwf	4
  3990  06F9  0008               	return
  3991  06FA                     PL5:	
  3992  06FA  300A               	movlw	10
  3993  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3994  06FC  00A8               	movwf	?___llmod
  3995  06FD  01A9               	clrf	?___llmod+1
  3996  06FE  01AA               	clrf	?___llmod+2
  3997  06FF  01AB               	clrf	?___llmod+3
  3998  0700  1683               	bsf	3,5	;RP0=1, select bank1
  3999  0701  0008               	return
  4000  0702                     PL6:	
  4001  0702  082B               	movf	?___fttol+3,w
  4002  0703  1683               	bsf	3,5	;RP0=1, select bank1
  4003  0704  00AC               	movwf	(printf@_val+3)^(0+128)
  4004  0705  1283               	bcf	3,5	;RP0=0, select bank0
  4005  0706  082A               	movf	?___fttol+2,w
  4006  0707  1683               	bsf	3,5	;RP0=1, select bank1
  4007  0708  00AB               	movwf	(printf@_val+2)^(0+128)
  4008  0709  1283               	bcf	3,5	;RP0=0, select bank0
  4009  070A  0829               	movf	?___fttol+1,w
  4010  070B  1683               	bsf	3,5	;RP0=1, select bank1
  4011  070C  00AA               	movwf	(printf@_val+1)^(0+128)
  4012  070D  1283               	bcf	3,5	;RP0=0, select bank0
  4013  070E  0828               	movf	?___fttol,w
  4014  070F  0008               	return
  4015  0710                     PL8:	
  4016  0710  0844               	movf	?_scale,w
  4017  0711  1683               	bsf	3,5	;RP0=1, select bank1
  4018  0712  00A5               	movwf	printf@integ^(0+128)
  4019  0713  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0714  0845               	movf	?_scale+1,w
  4021  0715  1683               	bsf	3,5	;RP0=1, select bank1
  4022  0716  00A6               	movwf	(printf@integ+1)^(0+128)
  4023  0717  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0718  0846               	movf	?_scale+2,w
  4025  0719  1683               	bsf	3,5	;RP0=1, select bank1
  4026  071A  00A7               	movwf	(printf@integ+2)^(0+128)
  4027  071B  0833               	movf	printf@fval^(0+128),w
  4028  071C  0008               	return
  4029  071D                     PL12:	
  4030  071D  0823               	movf	?___lldiv+3,w
  4031  071E  00AF               	movwf	?___llmod+7
  4032  071F  0822               	movf	?___lldiv+2,w
  4033  0720  00AE               	movwf	?___llmod+6
  4034  0721  0821               	movf	?___lldiv+1,w
  4035  0722  00AD               	movwf	?___llmod+5
  4036  0723  0820               	movf	?___lldiv,w
  4037  0724  00AC               	movwf	?___llmod+4
  4038  0725  0008               	return
  4039  0726                     PL13:	
  4040  0726  0773               	addwf	?___wmul,w
  4041  0727  1283               	bcf	3,5	;RP0=0, select bank0
  4042  0728  00DD               	movwf	??_printf
  4043  0729  3000               	movlw	0
  4044  072A  1803               	skipnc
  4045  072B  3001               	movlw	1
  4046  072C  0774               	addwf	?___wmul+1,w
  4047  072D  00DE               	movwf	??_printf+1
  4048  072E  085D               	movf	??_printf,w
  4049  072F  3ED0               	addlw	208
  4050  0730  1683               	bsf	3,5	;RP0=1, select bank1
  4051  0731  0008               	return
  4052  0732                     PL14:	
  4053  0732  1283               	bcf	3,5	;RP0=0, select bank0
  4054  0733  00A8               	movwf	?___fttol
  4055  0734  1683               	bsf	3,5	;RP0=1, select bank1
  4056  0735  0834               	movf	(printf@fval+1)^(0+128),w
  4057  0736  1283               	bcf	3,5	;RP0=0, select bank0
  4058  0737  00A9               	movwf	?___fttol+1
  4059  0738  1683               	bsf	3,5	;RP0=1, select bank1
  4060  0739  0835               	movf	(printf@fval+2)^(0+128),w
  4061  073A  1283               	bcf	3,5	;RP0=0, select bank0
  4062  073B  00AA               	movwf	?___fttol+2
  4063  073C  0008               	return
  4064  073D                     PL16:	
  4065  073D  1283               	bcf	3,5	;RP0=0, select bank0
  4066  073E  00B5               	movwf	?___ftmul
  4067  073F  1683               	bsf	3,5	;RP0=1, select bank1
  4068  0740  0834               	movf	(printf@fval+1)^(0+128),w
  4069  0741  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0742  00B6               	movwf	?___ftmul+1
  4071  0743  1683               	bsf	3,5	;RP0=1, select bank1
  4072  0744  0835               	movf	(printf@fval+2)^(0+128),w
  4073  0745  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0746  00B7               	movwf	?___ftmul+2
  4075  0747  0008               	return
  4076  0748                     PL18:	
  4077  0748  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0749  00DD               	movwf	??_printf
  4079  074A  01DE               	clrf	??_printf+1
  4080  074B  1BDD               	btfsc	??_printf,7
  4081  074C  03DE               	decf	??_printf+1,f
  4082  074D  085E               	movf	??_printf+1,w
  4083  074E  3A80               	xorlw	128
  4084  074F  00DF               	movwf	??_printf+2
  4085  0750  1683               	bsf	3,5	;RP0=1, select bank1
  4086  0751  0008               	return
  4087  0752                     PL20:	
  4088  0752  1303               	bcf	3,6	;RP1=0, select bank1
  4089  0753  0838               	movf	printf@c^(0+128),w
  4090  0754  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0755  00DD               	movwf	??_printf
  4092  0756  01DE               	clrf	??_printf+1
  4093  0757  1BDD               	btfsc	??_printf,7
  4094  0758  03DE               	decf	??_printf+1,f
  4095  0759  1683               	bsf	3,5	;RP0=1, select bank1
  4096  075A  0008               	return
  4097  075B                     PL21:	
  4098  075B  0825               	movf	printf@integ^(0+128),w
  4099  075C  00F3               	movwf	?___ftge
  4100  075D  0826               	movf	(printf@integ+1)^(0+128),w
  4101  075E  00F4               	movwf	?___ftge+1
  4102  075F  0827               	movf	(printf@integ+2)^(0+128),w
  4103  0760  00F5               	movwf	?___ftge+2
  4104  0761  0008               	return
  4105  0762                     PL28:	
  4106  0762  0800               	movf	0,w
  4107  0763  1283               	bcf	3,5	;RP0=0, select bank0
  4108  0764  00DD               	movwf	??_printf
  4109  0765  0A84               	incf	4,f
  4110  0766  0800               	movf	0,w
  4111  0767  00DE               	movwf	??_printf+1
  4112  0768  0008               	return
  4113  0769                     PL29:	
  4114  0769  1283               	bcf	3,5	;RP0=0, select bank0
  4115  076A  085E               	movf	??_printf+1,w
  4116  076B  1803               	skipnc
  4117  076C  3E01               	addlw	1
  4118  076D  3EFF               	addlw	255
  4119  076E  1683               	bsf	3,5	;RP0=1, select bank1
  4120  076F  0008               	return
  4121  0770                     PL30:	
  4122  0770  0828               	movf	___fttol@f1,w
  4123  0771  00AC               	movwf	??___fttol
  4124  0772  0829               	movf	___fttol@f1+1,w
  4125  0773  00AD               	movwf	??___fttol+1
  4126  0774  082A               	movf	___fttol@f1+2,w
  4127  0775  00AE               	movwf	??___fttol+2
  4128  0776  0008               	return
  4129  0777                     PL32:	
  4130  0777  1683               	bsf	3,5	;RP0=1, select bank1
  4131  0778  1303               	bcf	3,6	;RP1=0, select bank1
  4132  0779  0008               	return
  4133  077A                     __ptext933:	
  4134 ;; =============== function __div_to_l_ ends ============
  4135                           
  4136                           
  4137 ;; *************** function __tdiv_to_l_ *****************
  4138 ;; Defined at:
  4139 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  f1              3    3[COMMON] float 
  4142 ;;  f2              3    6[COMMON] float 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  quot            4    3[BANK0 ] unsigned long 
  4145 ;;  exp1            1    8[BANK0 ] unsigned char 
  4146 ;;  cntr            1    7[BANK0 ] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  4    3[COMMON] unsigned long 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 60/20
  4153 ;;		On exit  : 60/0
  4154 ;;		Unchanged: FFF9F/0
  4155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4156 ;;      Params:         6       0       0       0       0
  4157 ;;      Locals:         0       6       0       0       0
  4158 ;;      Temps:          0       3       0       0       0
  4159 ;;      Totals:         6       9       0       0       0
  4160 ;;Total ram usage:       15 bytes
  4161 ;; Hardware stack levels used:    1
  4162 ;; Hardware stack levels required when called:    1
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_printf
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169  077A                     __tdiv_to_l_:	
  4170                           
  4171                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4172  077A  0873               	movf	__tdiv_to_l_@f1,w
  4173  077B  1283               	bcf	3,5	;RP0=0, select bank0
  4174  077C  00A0               	movwf	??__tdiv_to_l_
  4175  077D  0874               	movf	__tdiv_to_l_@f1+1,w
  4176  077E  00A1               	movwf	??__tdiv_to_l_+1
  4177  077F  0875               	movf	__tdiv_to_l_@f1+2,w
  4178  0780  00A2               	movwf	??__tdiv_to_l_+2
  4179  0781  1003               	clrc
  4180  0782  0D21               	rlf	??__tdiv_to_l_+1,w
  4181  0783  0D22               	rlf	??__tdiv_to_l_+2,w
  4182  0784  00A8               	movwf	__tdiv_to_l_@exp1
  4183  0785  08A8               	movf	__tdiv_to_l_@exp1,f
  4184  0786  1D03               	skipz
  4185  0787  2F8D               	goto	l6452
  4186  0788                     l6450:	
  4187  0788  01F3               	clrf	?__tdiv_to_l_
  4188  0789  01F4               	clrf	?__tdiv_to_l_+1
  4189  078A  01F5               	clrf	?__tdiv_to_l_+2
  4190  078B  01F6               	clrf	?__tdiv_to_l_+3
  4191  078C  0008               	return
  4192  078D                     l6452:	
  4193  078D  0876               	movf	__tdiv_to_l_@f2,w
  4194  078E  00A0               	movwf	??__tdiv_to_l_
  4195  078F  0877               	movf	__tdiv_to_l_@f2+1,w
  4196  0790  00A1               	movwf	??__tdiv_to_l_+1
  4197  0791  0878               	movf	__tdiv_to_l_@f2+2,w
  4198  0792  00A2               	movwf	??__tdiv_to_l_+2
  4199  0793  1003               	clrc
  4200  0794  0D21               	rlf	??__tdiv_to_l_+1,w
  4201  0795  0D22               	rlf	??__tdiv_to_l_+2,w
  4202  0796  00A7               	movwf	__tdiv_to_l_@cntr
  4203  0797  08A7               	movf	__tdiv_to_l_@cntr,f
  4204  0798  1903               	btfsc	3,2
  4205  0799  2F88               	goto	l6450
  4206  079A  307F               	movlw	127
  4207  079B  17F4               	bsf	__tdiv_to_l_@f1+1,7
  4208  079C  01F5               	clrf	__tdiv_to_l_@f1+2
  4209  079D  17F7               	bsf	__tdiv_to_l_@f2+1,7
  4210  079E  01F8               	clrf	__tdiv_to_l_@f2+2
  4211  079F  01A3               	clrf	__tdiv_to_l_@quot
  4212  07A0  01A4               	clrf	__tdiv_to_l_@quot+1
  4213  07A1  01A5               	clrf	__tdiv_to_l_@quot+2
  4214  07A2  01A6               	clrf	__tdiv_to_l_@quot+3
  4215  07A3  02A8               	subwf	__tdiv_to_l_@exp1,f
  4216  07A4  3098               	movlw	152
  4217  07A5  0727               	addwf	__tdiv_to_l_@cntr,w
  4218  07A6  00A0               	movwf	??__tdiv_to_l_
  4219  07A7  02A8               	subwf	__tdiv_to_l_@exp1,f
  4220  07A8  3018               	movlw	24
  4221  07A9  00A7               	movwf	__tdiv_to_l_@cntr
  4222  07AA                     l6466:	
  4223  07AA  1003               	clrc
  4224  07AB  0DA3               	rlf	__tdiv_to_l_@quot,f
  4225  07AC  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  4226  07AD  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  4227  07AE  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  4228  07AF  0878               	movf	__tdiv_to_l_@f2+2,w
  4229  07B0  0275               	subwf	__tdiv_to_l_@f1+2,w
  4230  07B1  1D03               	skipz
  4231  07B2  2FB9               	goto	u2285
  4232  07B3  0877               	movf	__tdiv_to_l_@f2+1,w
  4233  07B4  0274               	subwf	__tdiv_to_l_@f1+1,w
  4234  07B5  1D03               	skipz
  4235  07B6  2FB9               	goto	u2285
  4236  07B7  0876               	movf	__tdiv_to_l_@f2,w
  4237  07B8  0273               	subwf	__tdiv_to_l_@f1,w
  4238  07B9                     u2285:	
  4239  07B9  1C03               	skipc
  4240  07BA  2FC7               	goto	L20
  4241  07BB  0876               	movf	__tdiv_to_l_@f2,w
  4242  07BC  02F3               	subwf	__tdiv_to_l_@f1,f
  4243  07BD  0877               	movf	__tdiv_to_l_@f2+1,w
  4244  07BE  1C03               	skipc
  4245  07BF  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  4246  07C0  02F4               	subwf	__tdiv_to_l_@f1+1,f
  4247  07C1  0878               	movf	__tdiv_to_l_@f2+2,w
  4248  07C2  1C03               	skipc
  4249  07C3  0A78               	incf	__tdiv_to_l_@f2+2,w
  4250  07C4  02F5               	subwf	__tdiv_to_l_@f1+2,f
  4251  07C5  1423               	bsf	__tdiv_to_l_@quot,0
  4252  07C6  1003               	clrc
  4253  07C7                     L20:	
  4254  07C7  0DF3               	rlf	__tdiv_to_l_@f1,f
  4255  07C8  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  4256  07C9  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  4257  07CA  0BA7               	decfsz	__tdiv_to_l_@cntr,f
  4258  07CB  2FAA               	goto	l6466
  4259  07CC  1FA8               	btfss	__tdiv_to_l_@exp1,7
  4260  07CD  2FDB               	goto	l6486
  4261  07CE  0828               	movf	__tdiv_to_l_@exp1,w
  4262  07CF  3A80               	xorlw	128
  4263  07D0  3E97               	addlw	151
  4264  07D1  1C03               	btfss	3,0
  4265  07D2  2F88               	goto	l6450
  4266  07D3                     l6482:	
  4267  07D3  1003               	clrc
  4268  07D4  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  4269  07D5  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  4270  07D6  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  4271  07D7  0CA3               	rrf	__tdiv_to_l_@quot,f
  4272  07D8  0FA8               	incfsz	__tdiv_to_l_@exp1,f
  4273  07D9  2FD3               	goto	l6482
  4274  07DA  2FE9               	goto	l6492
  4275  07DB                     l6486:	
  4276  07DB  3018               	movlw	24
  4277  07DC  0228               	subwf	__tdiv_to_l_@exp1,w
  4278  07DD  1803               	btfsc	3,0
  4279  07DE  2F88               	goto	l6450
  4280  07DF                     l3605:	
  4281  07DF  08A8               	movf	__tdiv_to_l_@exp1,f
  4282  07E0  1903               	btfsc	3,2
  4283  07E1  2FE9               	goto	l6492
  4284  07E2  1003               	clrc
  4285  07E3  0DA3               	rlf	__tdiv_to_l_@quot,f
  4286  07E4  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  4287  07E5  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  4288  07E6  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  4289  07E7  03A8               	decf	__tdiv_to_l_@exp1,f
  4290  07E8  2FDF               	goto	l3605
  4291  07E9                     l6492:	
  4292  07E9  0826               	movf	__tdiv_to_l_@quot+3,w
  4293  07EA  00F6               	movwf	?__tdiv_to_l_+3
  4294  07EB  0825               	movf	__tdiv_to_l_@quot+2,w
  4295  07EC  00F5               	movwf	?__tdiv_to_l_+2
  4296  07ED  0824               	movf	__tdiv_to_l_@quot+1,w
  4297  07EE  00F4               	movwf	?__tdiv_to_l_+1
  4298  07EF  0823               	movf	__tdiv_to_l_@quot,w
  4299  07F0  00F3               	movwf	?__tdiv_to_l_
  4300  07F1  0008               	return
  4301  07F2                     __end_of__tdiv_to_l_:	
  4302                           
  4303                           	psect	text908
  4304  091B                     __ptext908:	
  4305 ;; =============== function _scale ends ============
  4306                           
  4307                           
  4308 ;; *************** function _fround *****************
  4309 ;; Defined at:
  4310 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  prec            1    wreg     unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  prec            1   57[BANK0 ] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  3   48[BANK0 ] unsigned char 
  4317 ;; Registers used:
  4318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 60/20
  4321 ;;		On exit  : 60/0
  4322 ;;		Unchanged: FFF9F/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4324 ;;      Params:         0       3       0       0       0
  4325 ;;      Locals:         0       7       0       0       0
  4326 ;;      Temps:          0       0       0       0       0
  4327 ;;      Totals:         0      10       0       0       0
  4328 ;;Total ram usage:       10 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    3
  4331 ;; This function calls:
  4332 ;;		___lbmod
  4333 ;;		___bmul
  4334 ;;		___lbdiv
  4335 ;;		___ftmul
  4336 ;; This function is called by:
  4337 ;;		_printf
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340  091B                     _fround:	
  4341                           
  4342                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4343                           ;fround@prec stored from wreg
  4344  091B  1283               	bcf	3,5	;RP0=0, select bank0
  4345  091C  00D9               	movwf	fround@prec
  4346  091D  306E               	movlw	110
  4347  091E  0259               	subwf	fround@prec,w
  4348  091F  1C03               	skipc
  4349  0920  29A6               	goto	l8228
  4350  0921  3003               	movlw	3
  4351  0922  00A3               	movwf	?___bmul
  4352  0923  300A               	movlw	10
  4353  0924  00F8               	movwf	?___lbdiv
  4354  0925  3064               	movlw	100
  4355  0926  00F3               	movwf	?___lbmod
  4356  0927  0859               	movf	fround@prec,w
  4357  0928  223B  120A  158A   	fcall	___lbmod
  4358  092B  2220               	fcall	___lbdiv
  4359  092C  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4360  0931  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4361  0932  0084               	movwf	4
  4362  0933  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4363  0938  00B5               	movwf	?___ftmul
  4364  0939  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4365  093E  00B6               	movwf	?___ftmul+1
  4366  093F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4367  0944  00B7               	movwf	?___ftmul+2
  4368  0945  3003               	movlw	3
  4369  0946  00A3               	movwf	?___bmul
  4370  0947  3064               	movlw	100
  4371  0948  00F8               	movwf	?___lbdiv
  4372  0949  0859               	movf	fround@prec,w
  4373  094A  2220               	fcall	___lbdiv
  4374  094B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4375  0950  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4376  0951  0084               	movwf	4
  4377  0952  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4378  0957  00B8               	movwf	?___ftmul+3
  4379  0958  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4380  095D  00B9               	movwf	?___ftmul+4
  4381  095E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4382  0963  00BA               	movwf	?___ftmul+5
  4383  0964  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4384  0969  2266  120A  158A   	fcall	PL31	;call to abstracted procedure
  4385  096C  3003               	movlw	3
  4386  096D  00A3               	movwf	?___bmul
  4387  096E  300A               	movlw	10
  4388  096F  00F3               	movwf	?___lbmod
  4389  0970  0859               	movf	fround@prec,w
  4390  0971  223B               	fcall	___lbmod
  4391  0972  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4392  0977  3E01               	addlw	low (__npowers_-__stringbase)
  4393  0978  0084               	movwf	4
  4394  0979  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4395  097E  00B5               	movwf	?___ftmul
  4396  097F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4397  0984  00B6               	movwf	?___ftmul+1
  4398  0985  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4399  098A  225E               	fcall	PL25	;call to abstracted procedure
  4400  098B  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4401  0990  0835               	movf	?___ftmul,w
  4402  0991  00D3               	movwf	_fround$4148
  4403  0992  0836               	movf	?___ftmul+1,w
  4404  0993  00D4               	movwf	_fround$4148+1
  4405  0994  0837               	movf	?___ftmul+2,w
  4406  0995  00D5               	movwf	_fround$4148+2
  4407  0996  303F               	movlw	63
  4408  0997  01B5               	clrf	?___ftmul
  4409  0998  01B6               	clrf	?___ftmul+1
  4410  0999  00B7               	movwf	?___ftmul+2
  4411  099A  0853               	movf	_fround$4148,w
  4412  099B  00B8               	movwf	?___ftmul+3
  4413  099C  0854               	movf	_fround$4148+1,w
  4414  099D  00B9               	movwf	?___ftmul+4
  4415  099E  0855               	movf	_fround$4148+2,w
  4416  099F  00BA               	movwf	?___ftmul+5
  4417  09A0  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4418  09A5  2A57               	ljmp	PL17	;call to abstracted procedure
  4419  09A6                     l8228:	
  4420  09A6  300B               	movlw	11
  4421  09A7  0259               	subwf	fround@prec,w
  4422  09A8  1C03               	skipc
  4423  09A9  29FA               	goto	l8236
  4424  09AA  3003               	movlw	3
  4425  09AB  00A3               	movwf	?___bmul
  4426  09AC  300A               	movlw	10
  4427  09AD  00F3               	movwf	?___lbmod
  4428  09AE  0859               	movf	fround@prec,w
  4429  09AF  223B               	fcall	___lbmod
  4430  09B0  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4431  09B5  3E01               	addlw	low (__npowers_-__stringbase)
  4432  09B6  0084               	movwf	4
  4433  09B7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4434  09BC  00B5               	movwf	?___ftmul
  4435  09BD  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4436  09C2  00B6               	movwf	?___ftmul+1
  4437  09C3  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4438  09C8  00B7               	movwf	?___ftmul+2
  4439  09C9  3003               	movlw	3
  4440  09CA  00A3               	movwf	?___bmul
  4441  09CB  300A               	movlw	10
  4442  09CC  00F8               	movwf	?___lbdiv
  4443  09CD  0859               	movf	fround@prec,w
  4444  09CE  2220               	fcall	___lbdiv
  4445  09CF  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4446  09D4  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4447  09D5  0084               	movwf	4
  4448  09D6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4449  09DB  00B8               	movwf	?___ftmul+3
  4450  09DC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4451  09E1  00B9               	movwf	?___ftmul+4
  4452  09E2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4453  09E7  00BA               	movwf	?___ftmul+5
  4454  09E8  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4455  09ED  2266  120A  158A   	fcall	PL31	;call to abstracted procedure
  4456  09F0  303F               	movlw	63
  4457  09F1  01B5               	clrf	?___ftmul
  4458  09F2  01B6               	clrf	?___ftmul+1
  4459  09F3  225E               	fcall	PL25	;call to abstracted procedure
  4460  09F4  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4461  09F9  2A57               	ljmp	PL17	;call to abstracted procedure
  4462  09FA                     l8236:	
  4463  09FA  303F               	movlw	63
  4464  09FB  01B5               	clrf	?___ftmul
  4465  09FC  01B6               	clrf	?___ftmul+1
  4466  09FD  00B7               	movwf	?___ftmul+2
  4467  09FE  3003               	movlw	3
  4468  09FF  00A3               	movwf	?___bmul
  4469  0A00  0859               	movf	fround@prec,w
  4470  0A01  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4471  0A06  3E01               	addlw	low (__npowers_-__stringbase)
  4472  0A07  0084               	movwf	4
  4473  0A08  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4474  0A0D  00B8               	movwf	?___ftmul+3
  4475  0A0E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4476  0A13  00B9               	movwf	?___ftmul+4
  4477  0A14  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4478  0A19  00BA               	movwf	?___ftmul+5
  4479  0A1A  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4480  0A1F  2A57               	ljmp	PL17	;call to abstracted procedure
  4481  0A20                     __end_of_fround:	
  4482  0A20                     __ptext929:	
  4483 ;; =============== function ___lbmod ends ============
  4484                           
  4485                           
  4486 ;; *************** function ___lbdiv *****************
  4487 ;; Defined at:
  4488 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  dividend        1    wreg     unsigned char 
  4491 ;;  divisor         1    8[COMMON] unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  dividend        1    0[BANK0 ] unsigned char 
  4494 ;;  quotient        1    2[BANK0 ] unsigned char 
  4495 ;;  counter         1    1[BANK0 ] unsigned char 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      unsigned char 
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0
  4500 ;; Tracked objects:
  4501 ;;		On entry : 60/0
  4502 ;;		On exit  : 60/0
  4503 ;;		Unchanged: FFF9F/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4505 ;;      Params:         1       0       0       0       0
  4506 ;;      Locals:         0       3       0       0       0
  4507 ;;      Temps:          0       0       0       0       0
  4508 ;;      Totals:         1       3       0       0       0
  4509 ;;Total ram usage:        4 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_fround
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518  0A20                     ___lbdiv:	
  4519                           
  4520                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4521                           ;___lbdiv@dividend stored from wreg
  4522  0A20  00A0               	movwf	___lbdiv@dividend
  4523  0A21  01A2               	clrf	___lbdiv@quotient
  4524  0A22  0878               	movf	___lbdiv@divisor,w
  4525  0A23  1903               	btfsc	3,2
  4526  0A24  2A39               	goto	l6594
  4527  0A25  01A1               	clrf	___lbdiv@counter
  4528  0A26                     l6580:	
  4529  0A26  0AA1               	incf	___lbdiv@counter,f
  4530  0A27  1BF8               	btfsc	___lbdiv@divisor,7
  4531  0A28  2A2C               	goto	l3380
  4532  0A29  1003               	clrc
  4533  0A2A  0DF8               	rlf	___lbdiv@divisor,f
  4534  0A2B  2A26               	goto	l6580
  4535  0A2C                     l3380:	
  4536  0A2C  1003               	clrc
  4537  0A2D  0DA2               	rlf	___lbdiv@quotient,f
  4538  0A2E  0878               	movf	___lbdiv@divisor,w
  4539  0A2F  0220               	subwf	___lbdiv@dividend,w
  4540  0A30  1C03               	skipc
  4541  0A31  2A36               	goto	L19
  4542  0A32  0878               	movf	___lbdiv@divisor,w
  4543  0A33  02A0               	subwf	___lbdiv@dividend,f
  4544  0A34  1422               	bsf	___lbdiv@quotient,0
  4545  0A35  1003               	clrc
  4546  0A36                     L19:	
  4547  0A36  0CF8               	rrf	___lbdiv@divisor,f
  4548  0A37  0BA1               	decfsz	___lbdiv@counter,f
  4549  0A38  2A2C               	goto	l3380
  4550  0A39                     l6594:	
  4551  0A39  0822               	movf	___lbdiv@quotient,w
  4552  0A3A  0008               	return
  4553  0A3B                     __end_of___lbdiv:	
  4554  0A3B                     __ptext928:	
  4555 ;; =============== function ___ftpack ends ============
  4556                           
  4557                           
  4558 ;; *************** function ___lbmod *****************
  4559 ;; Defined at:
  4560 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  dividend        1    wreg     unsigned char 
  4563 ;;  divisor         1    3[COMMON] unsigned char 
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;  dividend        1    5[COMMON] unsigned char 
  4566 ;;  rem             1    7[COMMON] unsigned char 
  4567 ;;  counter         1    6[COMMON] unsigned char 
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      unsigned char 
  4570 ;; Registers used:
  4571 ;;		wreg, status,2, status,0
  4572 ;; Tracked objects:
  4573 ;;		On entry : 60/0
  4574 ;;		On exit  : 60/0
  4575 ;;		Unchanged: FFF9F/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4577 ;;      Params:         1       0       0       0       0
  4578 ;;      Locals:         3       0       0       0       0
  4579 ;;      Temps:          1       0       0       0       0
  4580 ;;      Totals:         5       0       0       0       0
  4581 ;;Total ram usage:        5 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_fround
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590  0A3B                     ___lbmod:	
  4591                           
  4592                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4593                           ;___lbmod@dividend stored from wreg
  4594  0A3B  00F5               	movwf	___lbmod@dividend
  4595  0A3C  3008               	movlw	8
  4596  0A3D  00F6               	movwf	___lbmod@counter
  4597  0A3E  01F7               	clrf	___lbmod@rem
  4598  0A3F                     l6602:	
  4599  0A3F  0875               	movf	___lbmod@dividend,w
  4600  0A40  00F4               	movwf	??___lbmod
  4601  0A41  3007               	movlw	7
  4602  0A42  1003               	clrc
  4603  0A43                     L18:	
  4604  0A43  0CF4               	rrf	??___lbmod,f
  4605  0A44  3EFF               	addlw	-1
  4606  0A45  1003               	clrc
  4607  0A46  1D03               	skipz
  4608  0A47  2A43               	goto	L18
  4609  0A48  0D77               	rlf	___lbmod@rem,w
  4610  0A49  0474               	iorwf	??___lbmod,w
  4611  0A4A  00F7               	movwf	___lbmod@rem
  4612  0A4B  1003               	clrc
  4613  0A4C  0DF5               	rlf	___lbmod@dividend,f
  4614  0A4D  0873               	movf	___lbmod@divisor,w
  4615  0A4E  0277               	subwf	___lbmod@rem,w
  4616  0A4F  1C03               	skipc
  4617  0A50  2A53               	goto	l6610
  4618  0A51  0873               	movf	___lbmod@divisor,w
  4619  0A52  02F7               	subwf	___lbmod@rem,f
  4620  0A53                     l6610:	
  4621  0A53  0BF6               	decfsz	___lbmod@counter,f
  4622  0A54  2A3F               	goto	l6602
  4623  0A55  0877               	movf	___lbmod@rem,w
  4624  0A56  0008               	return
  4625  0A57                     __end_of___lbmod:	
  4626  0A57                     PL17:	
  4627  0A57  0835               	movf	?___ftmul,w
  4628  0A58  00D0               	movwf	?_fround
  4629  0A59  0836               	movf	?___ftmul+1,w
  4630  0A5A  00D1               	movwf	?_fround+1
  4631  0A5B  0837               	movf	?___ftmul+2,w
  4632  0A5C  00D2               	movwf	?_fround+2
  4633  0A5D  0008               	return
  4634  0A5E                     PL25:	
  4635  0A5E  00B7               	movwf	?___ftmul+2
  4636  0A5F  0856               	movf	_fround$4147,w
  4637  0A60  00B8               	movwf	?___ftmul+3
  4638  0A61  0857               	movf	_fround$4147+1,w
  4639  0A62  00B9               	movwf	?___ftmul+4
  4640  0A63  0858               	movf	_fround$4147+2,w
  4641  0A64  00BA               	movwf	?___ftmul+5
  4642  0A65  0008               	return
  4643  0A66                     PL31:	
  4644  0A66  0835               	movf	?___ftmul,w
  4645  0A67  00D6               	movwf	_fround$4147
  4646  0A68  0836               	movf	?___ftmul+1,w
  4647  0A69  00D7               	movwf	_fround$4147+1
  4648  0A6A  0837               	movf	?___ftmul+2,w
  4649  0A6B  00D8               	movwf	_fround$4147+2
  4650  0A6C  0008               	return
  4651                           
  4652                           	psect	text909
  4653  0A6D                     __ptext909:	
  4654 ;; =============== function _fround ends ============
  4655                           
  4656                           
  4657 ;; *************** function _lcd_gotoxy *****************
  4658 ;; Defined at:
  4659 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  col             1    wreg     unsigned char 
  4662 ;;  row             1    8[COMMON] unsigned char 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  col             1    0[BANK0 ] unsigned char 
  4665 ;;  address         1    1[BANK0 ] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;		None               void
  4668 ;; Registers used:
  4669 ;;		wreg, status,2, status,0, pclath, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 40/0
  4672 ;;		On exit  : 60/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4675 ;;      Params:         1       0       0       0       0
  4676 ;;      Locals:         0       2       0       0       0
  4677 ;;      Temps:          0       0       0       0       0
  4678 ;;      Totals:         1       2       0       0       0
  4679 ;;Total ram usage:        3 bytes
  4680 ;; Hardware stack levels used:    1
  4681 ;; Hardware stack levels required when called:    2
  4682 ;; This function calls:
  4683 ;;		_lcd_put_byte
  4684 ;;		_lcd_busy
  4685 ;; This function is called by:
  4686 ;;		_lcd_putc
  4687 ;;		_main
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690  0A6D                     _lcd_gotoxy:	
  4691                           
  4692                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4693                           ;lcd_gotoxy@col stored from wreg
  4694  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  4695  0A6E  00A0               	movwf	lcd_gotoxy@col
  4696                           
  4697                           ;lcd(16).c: 163: unsigned char address;
  4698                           ;lcd(16).c: 165: if(row!=0)
  4699  0A6F  0878               	movf	lcd_gotoxy@row,w
  4700  0A70  1903               	btfsc	3,2
  4701  0A71  2A75               	goto	l8210
  4702                           
  4703                           ;lcd(16).c: 166: address=0x40;
  4704  0A72  3040               	movlw	64
  4705  0A73  00A1               	movwf	lcd_gotoxy@address
  4706  0A74  2A76               	goto	l8212
  4707  0A75                     l8210:	
  4708                           
  4709                           ;lcd(16).c: 167: else
  4710                           ;lcd(16).c: 168: address=0;
  4711  0A75  01A1               	clrf	lcd_gotoxy@address
  4712  0A76                     l8212:	
  4713                           
  4714                           ;lcd(16).c: 170: address += col;
  4715  0A76  0820               	movf	lcd_gotoxy@col,w
  4716  0A77  07A1               	addwf	lcd_gotoxy@address,f
  4717                           
  4718                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4719  0A78  0821               	movf	lcd_gotoxy@address,w
  4720  0A79  3880               	iorlw	128
  4721  0A7A  00F3               	movwf	?_lcd_put_byte
  4722  0A7B  3000               	movlw	0
  4723  0A7C  2372  120A  158A   	fcall	_lcd_put_byte
  4724  0A7F                     l8216:	
  4725                           ;lcd(16).c: 172: while(lcd_busy());
  4726                           
  4727  0A7F  2402  120A  158A   	fcall	_lcd_busy
  4728  0A82  3800               	iorlw	0
  4729  0A83  1903               	btfsc	3,2
  4730  0A84  0008               	return
  4731  0A85  2A7F               	goto	l8216
  4732  0A86                     __end_of_lcd_gotoxy:	
  4733  0A86                     __ptext905:	
  4734 ;; =============== function _putch ends ============
  4735                           
  4736                           
  4737 ;; *************** function _lcd_putc *****************
  4738 ;; Defined at:
  4739 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  c               1    wreg     unsigned char 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  c               1    2[BANK0 ] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;		None               void
  4746 ;; Registers used:
  4747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4748 ;; Tracked objects:
  4749 ;;		On entry : 60/0
  4750 ;;		On exit  : 60/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4753 ;;      Params:         0       0       0       0       0
  4754 ;;      Locals:         0       1       0       0       0
  4755 ;;      Temps:          0       0       0       0       0
  4756 ;;      Totals:         0       1       0       0       0
  4757 ;;Total ram usage:        1 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; Hardware stack levels required when called:    3
  4760 ;; This function calls:
  4761 ;;		_lcd_put_byte
  4762 ;;		_lcd_busy
  4763 ;;		_lcd_gotoxy
  4764 ;;		_isprint
  4765 ;; This function is called by:
  4766 ;;		_putch
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769  0A86                     _lcd_putc:	
  4770                           
  4771                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4772                           ;lcd_putc@c stored from wreg
  4773  0A86  00A2               	movwf	lcd_putc@c
  4774                           
  4775                           ;lcd(16).c: 144: switch(c){
  4776  0A87  2AAC               	goto	l8302
  4777  0A88                     l8288:	
  4778  0A88  3000               	movlw	0
  4779                           
  4780                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4781  0A89  01F3               	clrf	?_lcd_put_byte
  4782  0A8A  0AF3               	incf	?_lcd_put_byte,f
  4783  0A8B  2372  120A  158A   	fcall	_lcd_put_byte
  4784  0A8E                     l8290:	
  4785                           ;lcd(16).c: 147: while(lcd_busy());
  4786                           
  4787  0A8E  2402  120A  158A   	fcall	_lcd_busy
  4788  0A91  3800               	iorlw	0
  4789  0A92  1903               	btfsc	3,2
  4790  0A93  0008               	return
  4791  0A94  2A8E               	goto	l8290
  4792  0A95                     l8292:	
  4793  0A95  3000               	movlw	0
  4794                           
  4795                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4796  0A96  01F8               	clrf	?_lcd_gotoxy
  4797  0A97  0AF8               	incf	?_lcd_gotoxy,f
  4798  0A98  2A6D               	ljmp	_lcd_gotoxy
  4799  0A99                     l8294:	
  4800                           ;lcd(16).c: 151: break;
  4801                           
  4802                           
  4803                           ;lcd(16).c: 153: if(isprint(c)){
  4804  0A99  0822               	movf	lcd_putc@c,w
  4805  0A9A  2429  120A  158A   	fcall	_isprint
  4806  0A9D  1C03               	btfss	3,0
  4807  0A9E  0008               	return
  4808                           
  4809                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4810  0A9F  0822               	movf	lcd_putc@c,w
  4811  0AA0  00F3               	movwf	?_lcd_put_byte
  4812  0AA1  3001               	movlw	1
  4813  0AA2  2372  120A  158A   	fcall	_lcd_put_byte
  4814  0AA5                     l8298:	
  4815                           ;lcd(16).c: 155: while(lcd_busy());
  4816                           
  4817  0AA5  2402  120A  158A   	fcall	_lcd_busy
  4818  0AA8  3800               	iorlw	0
  4819  0AA9  1903               	btfsc	3,2
  4820  0AAA  0008               	return
  4821  0AAB  2AA5               	goto	l8298
  4822  0AAC                     l8302:	
  4823  0AAC  0822               	movf	lcd_putc@c,w
  4824                           
  4825                           ; Switch size 1, requested type "space"
  4826                           ; Number of cases is 2, Range of values is 10 to 12
  4827                           ; switch strategies available:
  4828                           ; Name         Instructions Cycles
  4829                           ; simple_byte            7     4 (average)
  4830                           ; direct_byte           20    11 (fixed)
  4831                           ; jumptable            263     9 (fixed)
  4832                           ;	Chosen strategy is simple_byte
  4833  0AAD  3A0A               	xorlw	10	; case 10
  4834  0AAE  1903               	skipnz
  4835  0AAF  2A95               	goto	l8292
  4836  0AB0  3A06               	xorlw	6	; case 12
  4837  0AB1  1903               	skipnz
  4838  0AB2  2A88               	goto	l8288
  4839  0AB3  2A99               	goto	l8294
  4840  0AB4  0008               	return
  4841  0AB5                     __end_of_lcd_putc:	
  4842  0AB5                     __ptext910:	
  4843 ;; =============== function _lcd_gotoxy ends ============
  4844                           
  4845                           
  4846 ;; *************** function _lcd_init *****************
  4847 ;; Defined at:
  4848 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  i               1    0        unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;		None               void
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 17F/60
  4859 ;;		On exit  : 60/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4862 ;;      Params:         0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0
  4864 ;;      Temps:          0       3       0       0       0
  4865 ;;      Totals:         0       3       0       0       0
  4866 ;;Total ram usage:        3 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    2
  4869 ;; This function calls:
  4870 ;;		_lcd_put_byte
  4871 ;;		_lcd_busy
  4872 ;; This function is called by:
  4873 ;;		_main
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876  0AB5                     _lcd_init:	
  4877                           
  4878                           ;lcd(16).c: 6: unsigned char i;
  4879                           ;lcd(16).c: 7: TRISD3 = 0;
  4880                           
  4881                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4882  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
  4883  0AB6  1188               	bcf	8,3
  4884                           
  4885                           ;lcd(16).c: 8: TRISD1 = 0;
  4886  0AB7  1088               	bcf	8,1
  4887                           
  4888                           ;lcd(16).c: 9: TRISD2 = 0;
  4889  0AB8  1108               	bcf	8,2
  4890                           
  4891                           ;lcd(16).c: 10: TRISD4 = 0;
  4892  0AB9  1208               	bcf	8,4
  4893                           
  4894                           ;lcd(16).c: 11: TRISD5 = 0;
  4895  0ABA  1288               	bcf	8,5
  4896                           
  4897                           ;lcd(16).c: 12: TRISD6 = 0;
  4898  0ABB  1308               	bcf	8,6
  4899                           
  4900                           ;lcd(16).c: 13: TRISD7 = 0;
  4901  0ABC  1388               	bcf	8,7
  4902                           
  4903                           ;lcd(16).c: 14: RD3 = 0;
  4904  0ABD  1283               	bcf	3,5	;RP0=0, select bank0
  4905  0ABE  3003               	movlw	3
  4906  0ABF  1188               	bcf	8,3
  4907                           
  4908                           ;lcd(16).c: 15: RD1 = 0;
  4909  0AC0  1088               	bcf	8,1
  4910                           
  4911                           ;lcd(16).c: 16: RD2 = 0;
  4912  0AC1  1108               	bcf	8,2
  4913                           
  4914                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4915  0AC2  00A2               	movwf	??_lcd_init+2
  4916  0AC3  308A               	movlw	138
  4917  0AC4  00A1               	movwf	??_lcd_init+1
  4918  0AC5  3056               	movlw	86
  4919  0AC6  00A0               	movwf	??_lcd_init
  4920  0AC7                     u5787:	
  4921  0AC7  0BA0               	decfsz	??_lcd_init,f
  4922  0AC8  2AC7               	goto	u5787
  4923  0AC9  0BA1               	decfsz	??_lcd_init+1,f
  4924  0ACA  2AC7               	goto	u5787
  4925  0ACB  0BA2               	decfsz	??_lcd_init+2,f
  4926  0ACC  2AC7               	goto	u5787
  4927  0ACD  2ACE               	nop2
  4928                           
  4929                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  4930  0ACE  3030               	movlw	48
  4931  0ACF  00F3               	movwf	?_lcd_put_byte
  4932  0AD0  3000               	movlw	0
  4933  0AD1  2372  120A  158A   	fcall	_lcd_put_byte
  4934                           
  4935                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  4936  0AD4  3002               	movlw	2
  4937  0AD5  00A2               	movwf	??_lcd_init+2
  4938  0AD6  3045               	movlw	69
  4939  0AD7  00A1               	movwf	??_lcd_init+1
  4940  0AD8  30A9               	movlw	169
  4941  0AD9  00A0               	movwf	??_lcd_init
  4942  0ADA                     u5797:	
  4943  0ADA  0BA0               	decfsz	??_lcd_init,f
  4944  0ADB  2ADA               	goto	u5797
  4945  0ADC  0BA1               	decfsz	??_lcd_init+1,f
  4946  0ADD  2ADA               	goto	u5797
  4947  0ADE  0BA2               	decfsz	??_lcd_init+2,f
  4948  0ADF  2ADA               	goto	u5797
  4949  0AE0  2AE1               	nop2
  4950                           
  4951                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  4952  0AE1  3030               	movlw	48
  4953  0AE2  00F3               	movwf	?_lcd_put_byte
  4954  0AE3  3000               	movlw	0
  4955  0AE4  2372  120A  158A   	fcall	_lcd_put_byte
  4956                           
  4957                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  4958  0AE7  3002               	movlw	2
  4959  0AE8  00A2               	movwf	??_lcd_init+2
  4960  0AE9  3045               	movlw	69
  4961  0AEA  00A1               	movwf	??_lcd_init+1
  4962  0AEB  30A9               	movlw	169
  4963  0AEC  00A0               	movwf	??_lcd_init
  4964  0AED                     u5807:	
  4965  0AED  0BA0               	decfsz	??_lcd_init,f
  4966  0AEE  2AED               	goto	u5807
  4967  0AEF  0BA1               	decfsz	??_lcd_init+1,f
  4968  0AF0  2AED               	goto	u5807
  4969  0AF1  0BA2               	decfsz	??_lcd_init+2,f
  4970  0AF2  2AED               	goto	u5807
  4971  0AF3  2AF4               	nop2
  4972                           
  4973                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  4974  0AF4  3032               	movlw	50
  4975  0AF5  00F3               	movwf	?_lcd_put_byte
  4976  0AF6  3000               	movlw	0
  4977  0AF7  2372  120A  158A   	fcall	_lcd_put_byte
  4978                           
  4979                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  4980  0AFA  3003               	movlw	3
  4981  0AFB  00A2               	movwf	??_lcd_init+2
  4982  0AFC  308A               	movlw	138
  4983  0AFD  00A1               	movwf	??_lcd_init+1
  4984  0AFE  3056               	movlw	86
  4985  0AFF  00A0               	movwf	??_lcd_init
  4986  0B00                     u5817:	
  4987  0B00  0BA0               	decfsz	??_lcd_init,f
  4988  0B01  2B00               	goto	u5817
  4989  0B02  0BA1               	decfsz	??_lcd_init+1,f
  4990  0B03  2B00               	goto	u5817
  4991  0B04  0BA2               	decfsz	??_lcd_init+2,f
  4992  0B05  2B00               	goto	u5817
  4993  0B06  2B07               	nop2
  4994                           
  4995                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  4996  0B07  3003               	movlw	3
  4997  0B08  243E               	call	PL33	;select bank 0
  4998  0B09  00A2               	movwf	??_lcd_init+2
  4999  0B0A  308A               	movlw	138
  5000  0B0B  00A1               	movwf	??_lcd_init+1
  5001  0B0C  3056               	movlw	86
  5002  0B0D  00A0               	movwf	??_lcd_init
  5003  0B0E                     u5827:	
  5004  0B0E  0BA0               	decfsz	??_lcd_init,f
  5005  0B0F  2B0E               	goto	u5827
  5006  0B10  0BA1               	decfsz	??_lcd_init+1,f
  5007  0B11  2B0E               	goto	u5827
  5008  0B12  0BA2               	decfsz	??_lcd_init+2,f
  5009  0B13  2B0E               	goto	u5827
  5010  0B14  2B15               	nop2
  5011                           
  5012                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5013  0B15  3003               	movlw	3
  5014  0B16  243E               	call	PL33	;select bank 0
  5015  0B17  00A2               	movwf	??_lcd_init+2
  5016  0B18  308A               	movlw	138
  5017  0B19  00A1               	movwf	??_lcd_init+1
  5018  0B1A  3056               	movlw	86
  5019  0B1B  00A0               	movwf	??_lcd_init
  5020  0B1C                     u5837:	
  5021  0B1C  0BA0               	decfsz	??_lcd_init,f
  5022  0B1D  2B1C               	goto	u5837
  5023  0B1E  0BA1               	decfsz	??_lcd_init+1,f
  5024  0B1F  2B1C               	goto	u5837
  5025  0B20  0BA2               	decfsz	??_lcd_init+2,f
  5026  0B21  2B1C               	goto	u5837
  5027  0B22  2B23               	nop2
  5028  0B23                     l8180:	
  5029                           ;lcd(16).c: 30: while(lcd_busy());
  5030                           
  5031  0B23  2402  120A  158A   	fcall	_lcd_busy
  5032  0B26  3800               	iorlw	0
  5033  0B27  1D03               	skipz
  5034  0B28  2B23               	goto	l8180
  5035                           
  5036                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5037  0B29  3028               	movlw	40
  5038  0B2A  00F3               	movwf	?_lcd_put_byte
  5039  0B2B  3000               	movlw	0
  5040  0B2C  2372  120A  158A   	fcall	_lcd_put_byte
  5041  0B2F                     l8184:	
  5042                           ;lcd(16).c: 32: while(lcd_busy());
  5043                           
  5044  0B2F  2402  120A  158A   	fcall	_lcd_busy
  5045  0B32  3800               	iorlw	0
  5046  0B33  1D03               	skipz
  5047  0B34  2B2F               	goto	l8184
  5048                           
  5049                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5050  0B35  3008               	movlw	8
  5051  0B36  00F3               	movwf	?_lcd_put_byte
  5052  0B37  3000               	movlw	0
  5053  0B38  2372  120A  158A   	fcall	_lcd_put_byte
  5054  0B3B                     l8188:	
  5055                           ;lcd(16).c: 35: while(lcd_busy());
  5056                           
  5057  0B3B  2402  120A  158A   	fcall	_lcd_busy
  5058  0B3E  3800               	iorlw	0
  5059  0B3F  1D03               	skipz
  5060  0B40  2B3B               	goto	l8188
  5061                           
  5062                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5063  0B41  300C               	movlw	12
  5064  0B42  00F3               	movwf	?_lcd_put_byte
  5065  0B43  3000               	movlw	0
  5066  0B44  2372  120A  158A   	fcall	_lcd_put_byte
  5067  0B47                     l8192:	
  5068                           ;lcd(16).c: 37: while(lcd_busy());
  5069                           
  5070  0B47  2402  120A  158A   	fcall	_lcd_busy
  5071  0B4A  3800               	iorlw	0
  5072  0B4B  1D03               	skipz
  5073  0B4C  2B47               	goto	l8192
  5074  0B4D  3000               	movlw	0
  5075                           
  5076                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5077  0B4E  01F3               	clrf	?_lcd_put_byte
  5078  0B4F  0AF3               	incf	?_lcd_put_byte,f
  5079  0B50  2372  120A  158A   	fcall	_lcd_put_byte
  5080  0B53                     l8196:	
  5081                           ;lcd(16).c: 40: while(lcd_busy());
  5082                           
  5083  0B53  2402  120A  158A   	fcall	_lcd_busy
  5084  0B56  3800               	iorlw	0
  5085  0B57  1D03               	skipz
  5086  0B58  2B53               	goto	l8196
  5087                           
  5088                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5089  0B59  3004               	movlw	4
  5090  0B5A  00F3               	movwf	?_lcd_put_byte
  5091  0B5B  3000               	movlw	0
  5092  0B5C  2372  120A  158A   	fcall	_lcd_put_byte
  5093  0B5F                     l8200:	
  5094                           ;lcd(16).c: 42: while(lcd_busy());
  5095                           
  5096  0B5F  2402  120A  158A   	fcall	_lcd_busy
  5097  0B62  3800               	iorlw	0
  5098  0B63  1D03               	skipz
  5099  0B64  2B5F               	goto	l8200
  5100  0B65  3000               	movlw	0
  5101                           
  5102                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5103  0B66  01F3               	clrf	?_lcd_put_byte
  5104  0B67  0AF3               	incf	?_lcd_put_byte,f
  5105  0B68  2372  120A  158A   	fcall	_lcd_put_byte
  5106  0B6B                     l8204:	
  5107                           ;lcd(16).c: 44: while(lcd_busy());
  5108                           
  5109  0B6B  2402  120A  158A   	fcall	_lcd_busy
  5110  0B6E  3800               	iorlw	0
  5111  0B6F  1903               	btfsc	3,2
  5112  0B70  0008               	return
  5113  0B71  2B6B               	goto	l8204
  5114  0B72                     __end_of_lcd_init:	
  5115  0B72                     __ptext919:	
  5116 ;; =============== function _lcd_busy ends ============
  5117                           
  5118                           
  5119 ;; *************** function _lcd_put_byte *****************
  5120 ;; Defined at:
  5121 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;  rs              1    wreg     unsigned char 
  5124 ;;  b               1    3[COMMON] unsigned char 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  rs              1    6[COMMON] unsigned char 
  5127 ;;  temp            1    7[COMMON] struct _BYTE_VAL
  5128 ;; Return value:  Size  Location     Type
  5129 ;;		None               void
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 60/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5137 ;;      Params:         1       0       0       0       0
  5138 ;;      Locals:         2       0       0       0       0
  5139 ;;      Temps:          2       0       0       0       0
  5140 ;;      Totals:         5       0       0       0       0
  5141 ;;Total ram usage:        5 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    1
  5144 ;; This function calls:
  5145 ;;		Nothing
  5146 ;; This function is called by:
  5147 ;;		_lcd_init
  5148 ;;		_lcd_putc
  5149 ;;		_lcd_gotoxy
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152  0B72                     _lcd_put_byte:	
  5153                           
  5154                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5155                           ;lcd_put_byte@rs stored from wreg
  5156  0B72  00F6               	movwf	lcd_put_byte@rs
  5157                           
  5158                           ;lcd(16).c: 107: BYTE_VAL temp;
  5159                           ;lcd(16).c: 109: TRISD4 = 0;
  5160  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  5161  0B74  1303               	bcf	3,6	;RP1=0, select bank1
  5162  0B75  1208               	bcf	8,4
  5163                           
  5164                           ;lcd(16).c: 110: TRISD5 = 0;
  5165  0B76  1288               	bcf	8,5
  5166                           
  5167                           ;lcd(16).c: 111: TRISD6 = 0;
  5168  0B77  1308               	bcf	8,6
  5169                           
  5170                           ;lcd(16).c: 112: TRISD7 = 0;
  5171  0B78  1388               	bcf	8,7
  5172                           
  5173                           ;lcd(16).c: 114: RD1 = 0;
  5174  0B79  1283               	bcf	3,5	;RP0=0, select bank0
  5175  0B7A  1088               	bcf	8,1
  5176                           
  5177                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5178  0B7B  0876               	movf	lcd_put_byte@rs,w
  5179  0B7C  1D03               	skipz
  5180  0B7D  1488               	bsf	8,1
  5181                           
  5182                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5183  0B7E  3021               	movlw	33
  5184  0B7F  00F4               	movwf	??_lcd_put_byte
  5185  0B80                     u5887:	
  5186  0B80  0BF4               	decfsz	??_lcd_put_byte,f
  5187  0B81  2B80               	goto	u5887
  5188  0B82  243E               	call	PL33	;select bank 0
  5189                           
  5190                           ;lcd(16).c: 118: RD2 = 0;
  5191  0B83  3021               	movlw	33
  5192  0B84  1108               	bcf	8,2
  5193                           
  5194                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5195  0B85  00F4               	movwf	??_lcd_put_byte
  5196  0B86                     u5897:	
  5197  0B86  0BF4               	decfsz	??_lcd_put_byte,f
  5198  0B87  2B86               	goto	u5897
  5199  0B88  243E               	call	PL33	;select bank 0
  5200                           
  5201                           ;lcd(16).c: 120: RD3 = 0;
  5202  0B89  1188               	bcf	8,3
  5203                           
  5204                           ;lcd(16).c: 122: temp.Val = b;
  5205  0B8A  0873               	movf	lcd_put_byte@b,w
  5206  0B8B  00F7               	movwf	lcd_put_byte@temp
  5207                           
  5208                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5209  0B8C  0E77               	swapf	lcd_put_byte@temp,w
  5210  0B8D  3901               	andlw	1
  5211  0B8E  00F4               	movwf	??_lcd_put_byte
  5212  0B8F  0C74               	rrf	??_lcd_put_byte,w
  5213  0B90  1C03               	btfss	3,0
  5214  0B91  2B95               	goto	u4470
  5215  0B92  243E               	call	PL33	;select bank 0
  5216  0B93  1608               	bsf	8,4
  5217  0B94  2B97               	goto	l7898
  5218  0B95                     u4470:	
  5219  0B95  243E               	call	PL33	;select bank 0
  5220  0B96  1208               	bcf	8,4
  5221  0B97                     l7898:	
  5222                           
  5223                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5224  0B97  0E77               	swapf	lcd_put_byte@temp,w
  5225  0B98  00F4               	movwf	??_lcd_put_byte
  5226  0B99  0C74               	rrf	??_lcd_put_byte,w
  5227  0B9A  3901               	andlw	1
  5228  0B9B  00F5               	movwf	??_lcd_put_byte+1
  5229  0B9C  0C75               	rrf	??_lcd_put_byte+1,w
  5230  0B9D  1C03               	btfss	3,0
  5231  0B9E  2BA2               	goto	u4490
  5232  0B9F  243E               	call	PL33	;select bank 0
  5233  0BA0  1688               	bsf	8,5
  5234  0BA1  2BA4               	goto	l7900
  5235  0BA2                     u4490:	
  5236  0BA2  243E               	call	PL33	;select bank 0
  5237  0BA3  1288               	bcf	8,5
  5238  0BA4                     l7900:	
  5239                           
  5240                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5241  0BA4  0E77               	swapf	lcd_put_byte@temp,w
  5242  0BA5  2437  120A  158A   	fcall	PL27	;call to abstracted procedure
  5243  0BA8  1C03               	btfss	3,0
  5244  0BA9  2BAD               	goto	u4510
  5245  0BAA  243E               	call	PL33	;select bank 0
  5246  0BAB  1708               	bsf	8,6
  5247  0BAC  2BAF               	goto	l7902
  5248  0BAD                     u4510:	
  5249  0BAD  243E               	call	PL33	;select bank 0
  5250  0BAE  1308               	bcf	8,6
  5251  0BAF                     l7902:	
  5252                           
  5253                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5254  0BAF  0D77               	rlf	lcd_put_byte@temp,w
  5255  0BB0  0D77               	rlf	lcd_put_byte@temp,w
  5256  0BB1  3901               	andlw	1
  5257  0BB2  00F4               	movwf	??_lcd_put_byte
  5258  0BB3  0C74               	rrf	??_lcd_put_byte,w
  5259  0BB4  1C03               	btfss	3,0
  5260  0BB5  2BB9               	goto	u4530
  5261  0BB6  243E               	call	PL33	;select bank 0
  5262  0BB7  1788               	bsf	8,7
  5263  0BB8  2BBB               	goto	u4544
  5264  0BB9                     u4530:	
  5265  0BB9  243E               	call	PL33	;select bank 0
  5266  0BBA  1388               	bcf	8,7
  5267  0BBB                     u4544:	
  5268                           
  5269                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5270  0BBB  3021               	movlw	33
  5271  0BBC  00F4               	movwf	??_lcd_put_byte
  5272  0BBD                     u5907:	
  5273  0BBD  0BF4               	decfsz	??_lcd_put_byte,f
  5274  0BBE  2BBD               	goto	u5907
  5275  0BBF  243E               	call	PL33	;select bank 0
  5276                           
  5277                           ;lcd(16).c: 130: RD3 = 1;
  5278  0BC0  3021               	movlw	33
  5279  0BC1  1588               	bsf	8,3
  5280                           
  5281                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5282  0BC2  00F4               	movwf	??_lcd_put_byte
  5283  0BC3                     u5917:	
  5284  0BC3  0BF4               	decfsz	??_lcd_put_byte,f
  5285  0BC4  2BC3               	goto	u5917
  5286  0BC5  243E               	call	PL33	;select bank 0
  5287                           
  5288                           ;lcd(16).c: 132: RD3 = 0;
  5289  0BC6  1188               	bcf	8,3
  5290                           
  5291                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5292  0BC7  0877               	movf	lcd_put_byte@temp,w
  5293  0BC8  3901               	andlw	1
  5294  0BC9  00F4               	movwf	??_lcd_put_byte
  5295  0BCA  0C74               	rrf	??_lcd_put_byte,w
  5296  0BCB  1C03               	btfss	3,0
  5297  0BCC  2BD0               	goto	u4550
  5298  0BCD  243E               	call	PL33	;select bank 0
  5299  0BCE  1608               	bsf	8,4
  5300  0BCF  2BD2               	goto	l7910
  5301  0BD0                     u4550:	
  5302  0BD0  243E               	call	PL33	;select bank 0
  5303  0BD1  1208               	bcf	8,4
  5304  0BD2                     l7910:	
  5305                           
  5306                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5307  0BD2  0C77               	rrf	lcd_put_byte@temp,w
  5308  0BD3  3901               	andlw	1
  5309  0BD4  00F4               	movwf	??_lcd_put_byte
  5310  0BD5  0C74               	rrf	??_lcd_put_byte,w
  5311  0BD6  1C03               	btfss	3,0
  5312  0BD7  2BDB               	goto	u4570
  5313  0BD8  243E               	call	PL33	;select bank 0
  5314  0BD9  1688               	bsf	8,5
  5315  0BDA  2BDD               	goto	l7912
  5316  0BDB                     u4570:	
  5317  0BDB  243E               	call	PL33	;select bank 0
  5318  0BDC  1288               	bcf	8,5
  5319  0BDD                     l7912:	
  5320                           
  5321                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5322  0BDD  0C77               	rrf	lcd_put_byte@temp,w
  5323  0BDE  00F4               	movwf	??_lcd_put_byte
  5324  0BDF  0C74               	rrf	??_lcd_put_byte,w
  5325  0BE0  3901               	andlw	1
  5326  0BE1  00F5               	movwf	??_lcd_put_byte+1
  5327  0BE2  0C75               	rrf	??_lcd_put_byte+1,w
  5328  0BE3  1C03               	btfss	3,0
  5329  0BE4  2BE8               	goto	u4590
  5330  0BE5  243E               	call	PL33	;select bank 0
  5331  0BE6  1708               	bsf	8,6
  5332  0BE7  2BEA               	goto	l7914
  5333  0BE8                     u4590:	
  5334  0BE8  243E               	call	PL33	;select bank 0
  5335  0BE9  1308               	bcf	8,6
  5336  0BEA                     l7914:	
  5337                           
  5338                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5339  0BEA  0C77               	rrf	lcd_put_byte@temp,w
  5340  0BEB  2437  120A  158A   	fcall	PL27	;call to abstracted procedure
  5341  0BEE  1C03               	btfss	3,0
  5342  0BEF  2BF3               	goto	u4610
  5343  0BF0  243E               	call	PL33	;select bank 0
  5344  0BF1  1788               	bsf	8,7
  5345  0BF2  2BF5               	goto	u4624
  5346  0BF3                     u4610:	
  5347  0BF3  243E               	call	PL33	;select bank 0
  5348  0BF4  1388               	bcf	8,7
  5349  0BF5                     u4624:	
  5350                           
  5351                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5352  0BF5  3021               	movlw	33
  5353  0BF6  00F4               	movwf	??_lcd_put_byte
  5354  0BF7                     u5927:	
  5355  0BF7  0BF4               	decfsz	??_lcd_put_byte,f
  5356  0BF8  2BF7               	goto	u5927
  5357  0BF9  243E               	call	PL33	;select bank 0
  5358                           
  5359                           ;lcd(16).c: 139: RD3 = 1;
  5360  0BFA  3021               	movlw	33
  5361  0BFB  1588               	bsf	8,3
  5362                           
  5363                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5364  0BFC  00F4               	movwf	??_lcd_put_byte
  5365  0BFD                     u5937:	
  5366  0BFD  0BF4               	decfsz	??_lcd_put_byte,f
  5367  0BFE  2BFD               	goto	u5937
  5368  0BFF  243E               	call	PL33	;select bank 0
  5369                           
  5370                           ;lcd(16).c: 141: RD3 = 0;
  5371  0C00  1188               	bcf	8,3
  5372  0C01  0008               	return
  5373  0C02                     __end_of_lcd_put_byte:	
  5374  0C02                     __ptext918:	
  5375 ;; =============== function _pwm_10bit ends ============
  5376                           
  5377                           
  5378 ;; *************** function _lcd_busy *****************
  5379 ;; Defined at:
  5380 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  busy            1    4[COMMON] unsigned char 
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      unsigned char 
  5387 ;; Registers used:
  5388 ;;		wreg
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 60/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5394 ;;      Params:         0       0       0       0       0
  5395 ;;      Locals:         1       0       0       0       0
  5396 ;;      Temps:          1       0       0       0       0
  5397 ;;      Totals:         2       0       0       0       0
  5398 ;;Total ram usage:        2 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; Hardware stack levels required when called:    1
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_lcd_init
  5405 ;;		_lcd_putc
  5406 ;;		_lcd_gotoxy
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409  0C02                     _lcd_busy:	
  5410                           
  5411                           ;lcd(16).c: 48: unsigned char busy;
  5412                           ;lcd(16).c: 50: TRISD4 = 1;
  5413                           
  5414                           ; Regs used in _lcd_busy: [wreg]
  5415  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  5416  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  5417  0C04  1608               	bsf	8,4
  5418                           
  5419                           ;lcd(16).c: 51: TRISD5 = 1;
  5420  0C05  1688               	bsf	8,5
  5421                           
  5422                           ;lcd(16).c: 52: TRISD6 = 1;
  5423  0C06  1708               	bsf	8,6
  5424                           
  5425                           ;lcd(16).c: 53: TRISD7 = 1;
  5426  0C07  1788               	bsf	8,7
  5427                           
  5428                           ;lcd(16).c: 55: RD2 = 1;
  5429  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  5430  0C09  3021               	movlw	33
  5431  0C0A  1508               	bsf	8,2
  5432                           
  5433                           ;lcd(16).c: 56: RD1 = 0;
  5434  0C0B  1088               	bcf	8,1
  5435                           
  5436                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5437  0C0C  00F3               	movwf	??_lcd_busy
  5438  0C0D                     u5847:	
  5439  0C0D  0BF3               	decfsz	??_lcd_busy,f
  5440  0C0E  2C0D               	goto	u5847
  5441  0C0F  243E               	call	PL33	;select bank 0
  5442                           
  5443                           ;lcd(16).c: 58: RD3 = 1;
  5444  0C10  3021               	movlw	33
  5445  0C11  1588               	bsf	8,3
  5446                           
  5447                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5448  0C12  00F3               	movwf	??_lcd_busy
  5449  0C13                     u5857:	
  5450  0C13  0BF3               	decfsz	??_lcd_busy,f
  5451  0C14  2C13               	goto	u5857
  5452                           
  5453                           ;lcd(16).c: 61: busy = RD7;
  5454  0C15  3000               	movlw	0
  5455  0C16  243E               	call	PL33	;select bank 0
  5456  0C17  1B88               	btfsc	8,7
  5457  0C18  3001               	movlw	1
  5458  0C19  00F4               	movwf	lcd_busy@busy
  5459  0C1A  3021               	movlw	33
  5460                           
  5461                           ;lcd(16).c: 63: RD3 = 0;
  5462  0C1B  1188               	bcf	8,3
  5463                           
  5464                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5465  0C1C  00F3               	movwf	??_lcd_busy
  5466  0C1D                     u5867:	
  5467  0C1D  0BF3               	decfsz	??_lcd_busy,f
  5468  0C1E  2C1D               	goto	u5867
  5469  0C1F  243E               	call	PL33	;select bank 0
  5470                           
  5471                           ;lcd(16).c: 65: RD3 = 1;
  5472  0C20  3021               	movlw	33
  5473  0C21  1588               	bsf	8,3
  5474                           
  5475                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5476  0C22  00F3               	movwf	??_lcd_busy
  5477  0C23                     u5877:	
  5478  0C23  0BF3               	decfsz	??_lcd_busy,f
  5479  0C24  2C23               	goto	u5877
  5480  0C25  243E               	call	PL33	;select bank 0
  5481                           
  5482                           ;lcd(16).c: 67: RD3 = 0;
  5483  0C26  1188               	bcf	8,3
  5484                           
  5485                           ;lcd(16).c: 70: return busy;
  5486  0C27  0874               	movf	lcd_busy@busy,w
  5487  0C28  0008               	return
  5488  0C29                     __end_of_lcd_busy:	
  5489  0C29                     __ptext937:	
  5490 ;; =============== function _tx ends ============
  5491                           
  5492                           
  5493 ;; *************** function _isprint *****************
  5494 ;; Defined at:
  5495 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;  c               1    wreg     unsigned char 
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;  c               1    4[COMMON] unsigned char 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;		None               void
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 60/0
  5506 ;;		On exit  : 60/0
  5507 ;;		Unchanged: FFF9F/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5509 ;;      Params:         0       0       0       0       0
  5510 ;;      Locals:         2       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0
  5512 ;;      Totals:         2       0       0       0       0
  5513 ;;Total ram usage:        2 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_lcd_putc
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522  0C29                     _isprint:	
  5523                           
  5524                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5525                           ;isprint@c stored from wreg
  5526  0C29  00F4               	movwf	isprint@c
  5527  0C2A  307F               	movlw	127
  5528  0C2B  01F3               	clrf	_isprint$3700
  5529  0C2C  0274               	subwf	isprint@c,w
  5530  0C2D  1803               	skipnc
  5531  0C2E  2C35               	goto	l6366
  5532  0C2F  3020               	movlw	32
  5533  0C30  0274               	subwf	isprint@c,w
  5534  0C31  1C03               	skipc
  5535  0C32  2C35               	goto	l6366
  5536  0C33  01F3               	clrf	_isprint$3700
  5537  0C34  0AF3               	incf	_isprint$3700,f
  5538  0C35                     l6366:	
  5539  0C35  0C73               	rrf	_isprint$3700,w
  5540  0C36  0008               	return
  5541  0C37                     __end_of_isprint:	
  5542  0C37                     PL27:	
  5543  0C37  00F4               	movwf	??_lcd_put_byte
  5544  0C38  0CF4               	rrf	??_lcd_put_byte,f
  5545  0C39  0C74               	rrf	??_lcd_put_byte,w
  5546  0C3A  3901               	andlw	1
  5547  0C3B  00F5               	movwf	??_lcd_put_byte+1
  5548  0C3C  0C75               	rrf	??_lcd_put_byte+1,w
  5549  0C3D  0008               	return
  5550  0C3E                     PL33:	
  5551  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  5553  0C40  0008               	return
  5554                           
  5555                           	psect	text915
  5556  1673                     __ptext915:	
  5557 ;; =============== function ___ftdiv ends ============
  5558                           
  5559                           
  5560 ;; *************** function ___ftadd *****************
  5561 ;; Defined at:
  5562 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  f1              3   36[BANK0 ] float 
  5565 ;;  f2              3   39[BANK0 ] float 
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  exp1            1   47[BANK0 ] unsigned char 
  5568 ;;  exp2            1   46[BANK0 ] unsigned char 
  5569 ;;  sign            1   45[BANK0 ] unsigned char 
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  3   36[BANK0 ] float 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0, pclath, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 60/0
  5576 ;;		On exit  : 60/0
  5577 ;;		Unchanged: FFF9F/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5579 ;;      Params:         0       6       0       0       0
  5580 ;;      Locals:         0       3       0       0       0
  5581 ;;      Temps:          0       3       0       0       0
  5582 ;;      Totals:         0      12       0       0       0
  5583 ;;Total ram usage:       12 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    2
  5586 ;; This function calls:
  5587 ;;		___ftpack
  5588 ;; This function is called by:
  5589 ;;		_printf
  5590 ;;		___ftsub
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593  1673                     ___ftadd:	
  5594                           
  5595                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  5596  1673  0844               	movf	___ftadd@f1,w
  5597  1674  00CA               	movwf	??___ftadd
  5598  1675  0845               	movf	___ftadd@f1+1,w
  5599  1676  00CB               	movwf	??___ftadd+1
  5600  1677  0846               	movf	___ftadd@f1+2,w
  5601  1678  00CC               	movwf	??___ftadd+2
  5602  1679  1003               	clrc
  5603  167A  0D4B               	rlf	??___ftadd+1,w
  5604  167B  0D4C               	rlf	??___ftadd+2,w
  5605  167C  00CF               	movwf	___ftadd@exp1
  5606  167D  0847               	movf	___ftadd@f2,w
  5607  167E  00CA               	movwf	??___ftadd
  5608  167F  0848               	movf	___ftadd@f2+1,w
  5609  1680  00CB               	movwf	??___ftadd+1
  5610  1681  0849               	movf	___ftadd@f2+2,w
  5611  1682  00CC               	movwf	??___ftadd+2
  5612  1683  1003               	clrc
  5613  1684  0D4B               	rlf	??___ftadd+1,w
  5614  1685  0D4C               	rlf	??___ftadd+2,w
  5615  1686  00CE               	movwf	___ftadd@exp2
  5616  1687  084F               	movf	___ftadd@exp1,w
  5617  1688  1903               	btfsc	3,2
  5618  1689  2E96               	goto	l7976
  5619  168A  084E               	movf	___ftadd@exp2,w
  5620  168B  024F               	subwf	___ftadd@exp1,w
  5621  168C  084E               	movf	___ftadd@exp2,w
  5622  168D  1803               	skipnc
  5623  168E  2E9E               	goto	L8
  5624  168F  00CA               	movwf	??___ftadd
  5625  1690  084F               	movf	___ftadd@exp1,w
  5626  1691  02CA               	subwf	??___ftadd,f
  5627  1692  3019               	movlw	25
  5628  1693  024A               	subwf	??___ftadd,w
  5629  1694  1C03               	skipc
  5630  1695  2E9D               	goto	l7980
  5631  1696                     l7976:	
  5632  1696  0847               	movf	___ftadd@f2,w
  5633  1697  00C4               	movwf	?___ftadd
  5634  1698  0848               	movf	___ftadd@f2+1,w
  5635  1699  00C5               	movwf	?___ftadd+1
  5636  169A  0849               	movf	___ftadd@f2+2,w
  5637  169B  00C6               	movwf	?___ftadd+2
  5638  169C  0008               	return
  5639  169D                     l7980:	
  5640  169D  084E               	movf	___ftadd@exp2,w
  5641  169E                     L8:	
  5642  169E  1903               	btfsc	3,2
  5643  169F  0008               	return
  5644  16A0  084F               	movf	___ftadd@exp1,w
  5645  16A1  024E               	subwf	___ftadd@exp2,w
  5646  16A2  1803               	skipnc
  5647  16A3  2EAC               	goto	l7986
  5648  16A4  084F               	movf	___ftadd@exp1,w
  5649  16A5  00CA               	movwf	??___ftadd
  5650  16A6  084E               	movf	___ftadd@exp2,w
  5651  16A7  02CA               	subwf	??___ftadd,f
  5652  16A8  3019               	movlw	25
  5653  16A9  024A               	subwf	??___ftadd,w
  5654  16AA  1803               	btfsc	3,0
  5655  16AB  0008               	return
  5656  16AC                     l7986:	
  5657  16AC  3006               	movlw	6
  5658  16AD  00CD               	movwf	___ftadd@sign
  5659  16AE  1BC6               	btfsc	___ftadd@f1+2,7
  5660  16AF  17CD               	bsf	___ftadd@sign,7
  5661  16B0  1BC9               	btfsc	___ftadd@f2+2,7
  5662  16B1  174D               	bsf	___ftadd@sign,6
  5663  16B2  17C5               	bsf	___ftadd@f1+1,7
  5664  16B3  01C6               	clrf	___ftadd@f1+2
  5665  16B4  17C8               	bsf	___ftadd@f2+1,7
  5666  16B5  01C9               	clrf	___ftadd@f2+2
  5667  16B6  084E               	movf	___ftadd@exp2,w
  5668  16B7  024F               	subwf	___ftadd@exp1,w
  5669  16B8  1803               	skipnc
  5670  16B9  2ED3               	goto	l8008
  5671  16BA                     l7998:	
  5672  16BA  1003               	clrc
  5673  16BB  0DC7               	rlf	___ftadd@f2,f
  5674  16BC  0DC8               	rlf	___ftadd@f2+1,f
  5675  16BD  0DC9               	rlf	___ftadd@f2+2,f
  5676  16BE  03CE               	decf	___ftadd@exp2,f
  5677  16BF  084E               	movf	___ftadd@exp2,w
  5678  16C0  064F               	xorwf	___ftadd@exp1,w
  5679  16C1  1903               	skipnz
  5680  16C2  2ECE               	goto	l8006
  5681  16C3  03CD               	decf	___ftadd@sign,f
  5682  16C4  084D               	movf	___ftadd@sign,w
  5683  16C5  3907               	andlw	7
  5684  16C6  1903               	btfsc	3,2
  5685  16C7  2ECE               	goto	l8006
  5686  16C8  2EBA               	goto	l7998
  5687  16C9                     l8004:	
  5688  16C9  1003               	clrc
  5689  16CA  0CC6               	rrf	___ftadd@f1+2,f
  5690  16CB  0CC5               	rrf	___ftadd@f1+1,f
  5691  16CC  0CC4               	rrf	___ftadd@f1,f
  5692  16CD  0ACF               	incf	___ftadd@exp1,f
  5693  16CE                     l8006:	
  5694  16CE  084F               	movf	___ftadd@exp1,w
  5695  16CF  064E               	xorwf	___ftadd@exp2,w
  5696  16D0  1903               	btfsc	3,2
  5697  16D1  2EEF               	goto	l3411
  5698  16D2  2EC9               	goto	l8004
  5699  16D3                     l8008:	
  5700  16D3  084F               	movf	___ftadd@exp1,w
  5701  16D4  024E               	subwf	___ftadd@exp2,w
  5702  16D5  1803               	skipnc
  5703  16D6  2EEF               	goto	l3411
  5704  16D7                     l8010:	
  5705  16D7  1003               	clrc
  5706  16D8  0DC4               	rlf	___ftadd@f1,f
  5707  16D9  0DC5               	rlf	___ftadd@f1+1,f
  5708  16DA  0DC6               	rlf	___ftadd@f1+2,f
  5709  16DB  03CF               	decf	___ftadd@exp1,f
  5710  16DC  084E               	movf	___ftadd@exp2,w
  5711  16DD  064F               	xorwf	___ftadd@exp1,w
  5712  16DE  1903               	skipnz
  5713  16DF  2EEB               	goto	l8018
  5714  16E0  03CD               	decf	___ftadd@sign,f
  5715  16E1  084D               	movf	___ftadd@sign,w
  5716  16E2  3907               	andlw	7
  5717  16E3  1903               	btfsc	3,2
  5718  16E4  2EEB               	goto	l8018
  5719  16E5  2ED7               	goto	l8010
  5720  16E6                     l8016:	
  5721  16E6  1003               	clrc
  5722  16E7  0CC9               	rrf	___ftadd@f2+2,f
  5723  16E8  0CC8               	rrf	___ftadd@f2+1,f
  5724  16E9  0CC7               	rrf	___ftadd@f2,f
  5725  16EA  0ACE               	incf	___ftadd@exp2,f
  5726  16EB                     l8018:	
  5727  16EB  084F               	movf	___ftadd@exp1,w
  5728  16EC  064E               	xorwf	___ftadd@exp2,w
  5729  16ED  1D03               	skipz
  5730  16EE  2EE6               	goto	l8016
  5731  16EF                     l3411:	
  5732  16EF  1FCD               	btfss	___ftadd@sign,7
  5733  16F0  2EFA               	goto	l8024
  5734  16F1  30FF               	movlw	255
  5735  16F2  06C4               	xorwf	___ftadd@f1,f
  5736  16F3  06C5               	xorwf	___ftadd@f1+1,f
  5737  16F4  06C6               	xorwf	___ftadd@f1+2,f
  5738  16F5  0AC4               	incf	___ftadd@f1,f
  5739  16F6  1903               	skipnz
  5740  16F7  0AC5               	incf	___ftadd@f1+1,f
  5741  16F8  1903               	skipnz
  5742  16F9  0AC6               	incf	___ftadd@f1+2,f
  5743  16FA                     l8024:	
  5744  16FA  1F4D               	btfss	___ftadd@sign,6
  5745  16FB  2F05               	goto	l8030
  5746  16FC  30FF               	movlw	255
  5747  16FD  06C7               	xorwf	___ftadd@f2,f
  5748  16FE  06C8               	xorwf	___ftadd@f2+1,f
  5749  16FF  06C9               	xorwf	___ftadd@f2+2,f
  5750  1700  0AC7               	incf	___ftadd@f2,f
  5751  1701  1903               	skipnz
  5752  1702  0AC8               	incf	___ftadd@f2+1,f
  5753  1703  1903               	skipnz
  5754  1704  0AC9               	incf	___ftadd@f2+2,f
  5755  1705                     l8030:	
  5756  1705  01CD               	clrf	___ftadd@sign
  5757  1706  0844               	movf	___ftadd@f1,w
  5758  1707  07C7               	addwf	___ftadd@f2,f
  5759  1708  0845               	movf	___ftadd@f1+1,w
  5760  1709  1103               	clrz
  5761  170A  1803               	skipnc
  5762  170B  0A45               	incf	___ftadd@f1+1,w
  5763  170C  1D03               	btfss	3,2
  5764  170D  07C8               	addwf	___ftadd@f2+1,f
  5765  170E  0846               	movf	___ftadd@f1+2,w
  5766  170F  1103               	clrz
  5767  1710  1803               	skipnc
  5768  1711  0A46               	incf	___ftadd@f1+2,w
  5769  1712  1D03               	btfss	3,2
  5770  1713  07C9               	addwf	___ftadd@f2+2,f
  5771  1714  1FC9               	btfss	___ftadd@f2+2,7
  5772  1715  2F21               	goto	l8042
  5773  1716  30FF               	movlw	255
  5774  1717  06C7               	xorwf	___ftadd@f2,f
  5775  1718  06C8               	xorwf	___ftadd@f2+1,f
  5776  1719  06C9               	xorwf	___ftadd@f2+2,f
  5777  171A  0AC7               	incf	___ftadd@f2,f
  5778  171B  1903               	skipnz
  5779  171C  0AC8               	incf	___ftadd@f2+1,f
  5780  171D  1903               	skipnz
  5781  171E  0AC9               	incf	___ftadd@f2+2,f
  5782  171F  01CD               	clrf	___ftadd@sign
  5783  1720  0ACD               	incf	___ftadd@sign,f
  5784  1721                     l8042:	
  5785  1721  0847               	movf	___ftadd@f2,w
  5786  1722  00F3               	movwf	?___ftpack
  5787  1723  0848               	movf	___ftadd@f2+1,w
  5788  1724  00F4               	movwf	?___ftpack+1
  5789  1725  0849               	movf	___ftadd@f2+2,w
  5790  1726  00F5               	movwf	?___ftpack+2
  5791  1727  084F               	movf	___ftadd@exp1,w
  5792  1728  00F6               	movwf	?___ftpack+3
  5793  1729  084D               	movf	___ftadd@sign,w
  5794  172A  00F7               	movwf	?___ftpack+4
  5795  172B  120A  158A  2769   	fcall	___ftpack
  5796  172E  0873               	movf	?___ftpack,w
  5797  172F  00C4               	movwf	?___ftadd
  5798  1730  0874               	movf	?___ftpack+1,w
  5799  1731  00C5               	movwf	?___ftadd+1
  5800  1732  0875               	movf	?___ftpack+2,w
  5801  1733  00C6               	movwf	?___ftadd+2
  5802  1734  0008               	return
  5803  1735                     __end_of___ftadd:	
  5804                           
  5805                           	psect	text916
  5806  1612                     __ptext916:	
  5807 ;; =============== function ___ftadd ends ============
  5808                           
  5809                           
  5810 ;; *************** function _atoi *****************
  5811 ;; Defined at:
  5812 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\atoi.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  s               1    wreg     PTR const unsigned char 
  5815 ;;		 -> main@data_pwm(3), 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  5818 ;;		 -> main@data_pwm(3), 
  5819 ;;  a               2    5[BANK0 ] int 
  5820 ;;  sign            1    4[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  2    0[BANK0 ] int 
  5823 ;; Registers used:
  5824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 160/0
  5828 ;;		Unchanged: FFE9F/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5830 ;;      Params:         0       2       0       0       0
  5831 ;;      Locals:         0       4       0       0       0
  5832 ;;      Temps:          0       2       0       0       0
  5833 ;;      Totals:         0       8       0       0       0
  5834 ;;Total ram usage:        8 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    2
  5837 ;; This function calls:
  5838 ;;		___wmul
  5839 ;;		_isdigit
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844  1612                     _atoi:	
  5845                           
  5846                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5847                           ;atoi@s stored from wreg
  5848  1612  1283               	bcf	3,5	;RP0=0, select bank0
  5849  1613  1303               	bcf	3,6	;RP1=0, select bank0
  5850  1614  00A7               	movwf	atoi@s
  5851  1615                     l7938:	
  5852  1615  0827               	movf	atoi@s,w
  5853  1616  0084               	movwf	4
  5854  1617  1383               	bcf	3,7	;select IRP bank0
  5855  1618  0800               	movf	0,w
  5856  1619  3A20               	xorlw	32
  5857  161A  1D03               	btfss	3,2
  5858  161B  2E1E               	goto	l7940
  5859  161C                     l7936:	
  5860  161C  0AA7               	incf	atoi@s,f
  5861  161D  2E15               	goto	l7938
  5862  161E                     l7940:	
  5863  161E  0827               	movf	atoi@s,w
  5864  161F  0084               	movwf	4
  5865  1620  0800               	movf	0,w
  5866  1621  3A09               	xorlw	9
  5867  1622  1903               	skipnz
  5868  1623  2E1C               	goto	l7936
  5869  1624  01A5               	clrf	atoi@a
  5870  1625  01A6               	clrf	atoi@a+1
  5871  1626  01A4               	clrf	atoi@sign
  5872  1627  0827               	movf	atoi@s,w
  5873  1628  0084               	movwf	4
  5874  1629  0800               	movf	0,w
  5875  162A  3A2D               	xorlw	45
  5876  162B  1D03               	skipz
  5877  162C  2E2F               	goto	l7948
  5878  162D  0AA4               	incf	atoi@sign,f
  5879  162E  2E5D               	goto	l7950
  5880  162F                     l7948:	
  5881  162F  0827               	movf	atoi@s,w
  5882  1630  0084               	movwf	4
  5883  1631  0800               	movf	0,w
  5884  1632  3A2B               	xorlw	43
  5885  1633  1903               	btfsc	3,2
  5886  1634  2E5D               	goto	l7950
  5887  1635                     l7956:	
  5888  1635  0827               	movf	atoi@s,w
  5889  1636  0084               	movwf	4
  5890  1637  0800               	movf	0,w
  5891  1638  120A  118A  25D4   	fcall	_isdigit
      +       160A  118A         
  5892  163D  1C03               	btfss	3,0
  5893  163E  2E5F               	goto	l7958
  5894  163F  0827               	movf	atoi@s,w
  5895  1640  0084               	movwf	4
  5896  1641  0826               	movf	atoi@a+1,w
  5897  1642  00F4               	movwf	?___wmul+1
  5898  1643  0825               	movf	atoi@a,w
  5899  1644  00F3               	movwf	?___wmul
  5900  1645  300A               	movlw	10
  5901  1646  00F5               	movwf	?___wmul+2
  5902  1647  01F6               	clrf	?___wmul+3
  5903  1648  120A  118A  25E2   	fcall	___wmul
      +       160A  118A         
  5904  164D  0800               	movf	0,w
  5905  164E  0773               	addwf	?___wmul,w
  5906  164F  00A2               	movwf	??_atoi
  5907  1650  3000               	movlw	0
  5908  1651  1803               	skipnc
  5909  1652  3001               	movlw	1
  5910  1653  0774               	addwf	?___wmul+1,w
  5911  1654  00A3               	movwf	??_atoi+1
  5912  1655  0822               	movf	??_atoi,w
  5913  1656  3ED0               	addlw	208
  5914  1657  00A5               	movwf	atoi@a
  5915  1658  0823               	movf	??_atoi+1,w
  5916  1659  1803               	skipnc
  5917  165A  3E01               	addlw	1
  5918  165B  3EFF               	addlw	255
  5919  165C  00A6               	movwf	atoi@a+1
  5920  165D                     l7950:	
  5921  165D  0AA7               	incf	atoi@s,f
  5922  165E  2E35               	goto	l7956
  5923  165F                     l7958:	
  5924  165F  0824               	movf	atoi@sign,w
  5925  1660  1903               	btfsc	3,2
  5926  1661  2E6E               	goto	l7964
  5927  1662  0925               	comf	atoi@a,w
  5928  1663  00A2               	movwf	??_atoi
  5929  1664  0926               	comf	atoi@a+1,w
  5930  1665  00A3               	movwf	??_atoi+1
  5931  1666  0AA2               	incf	??_atoi,f
  5932  1667  1903               	skipnz
  5933  1668  0AA3               	incf	??_atoi+1,f
  5934  1669  0822               	movf	??_atoi,w
  5935  166A  00A0               	movwf	?_atoi
  5936  166B  0823               	movf	??_atoi+1,w
  5937  166C  00A1               	movwf	?_atoi+1
  5938  166D  0008               	return
  5939  166E                     l7964:	
  5940  166E  0826               	movf	atoi@a+1,w
  5941  166F  00A1               	movwf	?_atoi+1
  5942  1670  0825               	movf	atoi@a,w
  5943  1671  00A0               	movwf	?_atoi
  5944  1672  0008               	return
  5945  1673                     __end_of_atoi:	
  5946                           
  5947                           	psect	text917
  5948  0C41                     __ptext917:	
  5949 ;; =============== function _atoi ends ============
  5950                           
  5951                           
  5952 ;; *************** function _pwm_10bit *****************
  5953 ;; Defined at:
  5954 ;;		line 120 in file "D:\TTVXL\Project TTVXL\BT01week16ttvxlbuoi1\BT01week16ttvxlbuoi1.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  pwm             2    8[BANK0 ] int 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;		None               void
  5961 ;; Registers used:
  5962 ;;		wreg, status,2, status,0, pclath, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 60/0
  5965 ;;		On exit  : 60/0
  5966 ;;		Unchanged: FFF9F/0
  5967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5968 ;;      Params:         0       2       0       0       0
  5969 ;;      Locals:         0       0       0       0       0
  5970 ;;      Temps:          0       0       0       0       0
  5971 ;;      Totals:         0       2       0       0       0
  5972 ;;Total ram usage:        2 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    2
  5975 ;; This function calls:
  5976 ;;		___awdiv
  5977 ;; This function is called by:
  5978 ;;		_main
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981  0C41                     _pwm_10bit:	
  5982                           
  5983                           ;BT01week16ttvxlbuoi1.c: 121: CCPR1L = pwm/4;
  5984                           
  5985                           ; Regs used in _pwm_10bit: [wreg+status,2+status,0+pclath+cstack]
  5986  0C41  3004               	movlw	4
  5987  0C42  00A0               	movwf	?___awdiv
  5988  0C43  01A1               	clrf	?___awdiv+1
  5989  0C44  0829               	movf	pwm_10bit@pwm+1,w
  5990  0C45  00A3               	movwf	?___awdiv+3
  5991  0C46  0828               	movf	pwm_10bit@pwm,w
  5992  0C47  00A2               	movwf	?___awdiv+2
  5993  0C48  266A               	fcall	___awdiv
  5994  0C49  0820               	movf	?___awdiv,w
  5995  0C4A  0095               	movwf	21	;volatile
  5996                           
  5997                           ;BT01week16ttvxlbuoi1.c: 122: DC1B1 = 0; DC1B0 = 0;
  5998  0C4B  1297               	bcf	23,5
  5999  0C4C  1217               	bcf	23,4
  6000                           
  6001                           ;BT01week16ttvxlbuoi1.c: 123: if((pwm & 2) == 1) DC1B1 = 1;
  6002  0C4D  0828               	movf	pwm_10bit@pwm,w
  6003  0C4E  3902               	andlw	2
  6004  0C4F  3A01               	xorlw	1
  6005  0C50  1903               	btfsc	3,2
  6006  0C51  1697               	bsf	23,5
  6007                           
  6008                           ;BT01week16ttvxlbuoi1.c: 124: if((pwm & 1) == 1) DC1B0 = 1;
  6009  0C52  1828               	btfsc	pwm_10bit@pwm,0
  6010  0C53  1617               	bsf	23,4
  6011  0C54  0008               	return
  6012  0C55                     __end_of_pwm_10bit:	
  6013  0C55                     __ptext912:	
  6014 ;; =============== function ___lltoft ends ============
  6015                           
  6016                           
  6017 ;; *************** function ___awtoft *****************
  6018 ;; Defined at:
  6019 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awtoft.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  c               2    3[BANK0 ] int 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  sign            1    8[COMMON] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  3    3[BANK0 ] float 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0, pclath, cstack
  6028 ;; Tracked objects:
  6029 ;;		On entry : 160/0
  6030 ;;		On exit  : 160/0
  6031 ;;		Unchanged: FFE9F/0
  6032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6033 ;;      Params:         0       3       0       0       0
  6034 ;;      Locals:         1       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0
  6036 ;;      Totals:         1       3       0       0       0
  6037 ;;Total ram usage:        4 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; Hardware stack levels required when called:    2
  6040 ;; This function calls:
  6041 ;;		___ftpack
  6042 ;; This function is called by:
  6043 ;;		_main
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046  0C55                     ___awtoft:	
  6047                           
  6048                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6049  0C55  01F8               	clrf	___awtoft@sign
  6050  0C56  1FA4               	btfss	___awtoft@c+1,7
  6051  0C57  2C5F               	goto	l8154
  6052  0C58  09A3               	comf	___awtoft@c,f
  6053  0C59  09A4               	comf	___awtoft@c+1,f
  6054  0C5A  0AA3               	incf	___awtoft@c,f
  6055  0C5B  1903               	skipnz
  6056  0C5C  0AA4               	incf	___awtoft@c+1,f
  6057  0C5D  01F8               	clrf	___awtoft@sign
  6058  0C5E  0AF8               	incf	___awtoft@sign,f
  6059  0C5F                     l8154:	
  6060  0C5F  0823               	movf	___awtoft@c,w
  6061  0C60  00F3               	movwf	?___ftpack
  6062  0C61  0824               	movf	___awtoft@c+1,w
  6063  0C62  00F4               	movwf	?___ftpack+1
  6064  0C63  308E               	movlw	142
  6065  0C64  01F5               	clrf	?___ftpack+2
  6066  0C65  00F6               	movwf	?___ftpack+3
  6067  0C66  0878               	movf	___awtoft@sign,w
  6068  0C67  00F7               	movwf	?___ftpack+4
  6069  0C68  2769               	fcall	___ftpack
  6070  0C69  0873               	movf	?___ftpack,w
  6071  0C6A  00A3               	movwf	?___awtoft
  6072  0C6B  0874               	movf	?___ftpack+1,w
  6073  0C6C  00A4               	movwf	?___awtoft+1
  6074  0C6D  0875               	movf	?___ftpack+2,w
  6075  0C6E  00A5               	movwf	?___awtoft+2
  6076  0C6F  0008               	return
  6077  0C70                     __end_of___awtoft:	
  6078  0C70                     __ptext914:	
  6079 ;; =============== function ___ftmul ends ============
  6080                           
  6081                           
  6082 ;; *************** function ___ftdiv *****************
  6083 ;; Defined at:
  6084 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  f2              3    6[BANK0 ] float 
  6087 ;;  f1              3    9[BANK0 ] float 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;  f3              3   16[BANK0 ] float 
  6090 ;;  sign            1   20[BANK0 ] unsigned char 
  6091 ;;  exp             1   19[BANK0 ] unsigned char 
  6092 ;;  cntr            1   15[BANK0 ] unsigned char 
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  3    6[BANK0 ] float 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, pclath, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 160/0
  6099 ;;		On exit  : 160/0
  6100 ;;		Unchanged: FFE9F/0
  6101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6102 ;;      Params:         0       6       0       0       0
  6103 ;;      Locals:         0       6       0       0       0
  6104 ;;      Temps:          0       3       0       0       0
  6105 ;;      Totals:         0      15       0       0       0
  6106 ;;Total ram usage:       15 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    2
  6109 ;; This function calls:
  6110 ;;		___ftpack
  6111 ;; This function is called by:
  6112 ;;		_main
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115  0C70                     ___ftdiv:	
  6116                           
  6117                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  6118  0C70  0829               	movf	___ftdiv@f1,w
  6119  0C71  00AC               	movwf	??___ftdiv
  6120  0C72  082A               	movf	___ftdiv@f1+1,w
  6121  0C73  00AD               	movwf	??___ftdiv+1
  6122  0C74  082B               	movf	___ftdiv@f1+2,w
  6123  0C75  00AE               	movwf	??___ftdiv+2
  6124  0C76  1003               	clrc
  6125  0C77  0D2D               	rlf	??___ftdiv+1,w
  6126  0C78  0D2E               	rlf	??___ftdiv+2,w
  6127  0C79  00B3               	movwf	___ftdiv@exp
  6128  0C7A  08B3               	movf	___ftdiv@exp,f
  6129  0C7B  1D03               	skipz
  6130  0C7C  2C81               	goto	l8052
  6131  0C7D  01A6               	clrf	?___ftdiv
  6132  0C7E  01A7               	clrf	?___ftdiv+1
  6133  0C7F  01A8               	clrf	?___ftdiv+2
  6134  0C80  0008               	return
  6135  0C81                     l8052:	
  6136  0C81  0826               	movf	___ftdiv@f2,w
  6137  0C82  00AC               	movwf	??___ftdiv
  6138  0C83  0827               	movf	___ftdiv@f2+1,w
  6139  0C84  00AD               	movwf	??___ftdiv+1
  6140  0C85  0828               	movf	___ftdiv@f2+2,w
  6141  0C86  00AE               	movwf	??___ftdiv+2
  6142  0C87  1003               	clrc
  6143  0C88  0D2D               	rlf	??___ftdiv+1,w
  6144  0C89  0D2E               	rlf	??___ftdiv+2,w
  6145  0C8A  00B4               	movwf	___ftdiv@sign
  6146  0C8B  08B4               	movf	___ftdiv@sign,f
  6147  0C8C  1D03               	skipz
  6148  0C8D  2C92               	goto	l3440
  6149  0C8E  01A6               	clrf	?___ftdiv
  6150  0C8F  01A7               	clrf	?___ftdiv+1
  6151  0C90  01A8               	clrf	?___ftdiv+2
  6152  0C91  0008               	return
  6153  0C92                     l3440:	
  6154  0C92  3089               	movlw	137
  6155  0C93  01B0               	clrf	___ftdiv@f3
  6156  0C94  01B1               	clrf	___ftdiv@f3+1
  6157  0C95  01B2               	clrf	___ftdiv@f3+2
  6158  0C96  0734               	addwf	___ftdiv@sign,w
  6159  0C97  00AC               	movwf	??___ftdiv
  6160  0C98  02B3               	subwf	___ftdiv@exp,f
  6161  0C99  082B               	movf	___ftdiv@f1+2,w
  6162  0C9A  00B4               	movwf	___ftdiv@sign
  6163  0C9B  0828               	movf	___ftdiv@f2+2,w
  6164  0C9C  06B4               	xorwf	___ftdiv@sign,f
  6165  0C9D  3080               	movlw	128
  6166  0C9E  05B4               	andwf	___ftdiv@sign,f
  6167  0C9F  3018               	movlw	24
  6168  0CA0  17AA               	bsf	___ftdiv@f1+1,7
  6169  0CA1  01AB               	clrf	___ftdiv@f1+2
  6170  0CA2  17A7               	bsf	___ftdiv@f2+1,7
  6171  0CA3  01A8               	clrf	___ftdiv@f2+2
  6172  0CA4  00AF               	movwf	___ftdiv@cntr
  6173  0CA5                     l8076:	
  6174  0CA5  1003               	clrc
  6175  0CA6  0DB0               	rlf	___ftdiv@f3,f
  6176  0CA7  0DB1               	rlf	___ftdiv@f3+1,f
  6177  0CA8  0DB2               	rlf	___ftdiv@f3+2,f
  6178  0CA9  0828               	movf	___ftdiv@f2+2,w
  6179  0CAA  022B               	subwf	___ftdiv@f1+2,w
  6180  0CAB  1D03               	skipz
  6181  0CAC  2CB3               	goto	u4915
  6182  0CAD  0827               	movf	___ftdiv@f2+1,w
  6183  0CAE  022A               	subwf	___ftdiv@f1+1,w
  6184  0CAF  1D03               	skipz
  6185  0CB0  2CB3               	goto	u4915
  6186  0CB1  0826               	movf	___ftdiv@f2,w
  6187  0CB2  0229               	subwf	___ftdiv@f1,w
  6188  0CB3                     u4915:	
  6189  0CB3  1C03               	skipc
  6190  0CB4  2CC1               	goto	L7
  6191  0CB5  0826               	movf	___ftdiv@f2,w
  6192  0CB6  02A9               	subwf	___ftdiv@f1,f
  6193  0CB7  0827               	movf	___ftdiv@f2+1,w
  6194  0CB8  1C03               	skipc
  6195  0CB9  0F27               	incfsz	___ftdiv@f2+1,w
  6196  0CBA  02AA               	subwf	___ftdiv@f1+1,f
  6197  0CBB  0828               	movf	___ftdiv@f2+2,w
  6198  0CBC  1C03               	skipc
  6199  0CBD  0A28               	incf	___ftdiv@f2+2,w
  6200  0CBE  02AB               	subwf	___ftdiv@f1+2,f
  6201  0CBF  1430               	bsf	___ftdiv@f3,0
  6202  0CC0  1003               	clrc
  6203  0CC1                     L7:	
  6204  0CC1  0DA9               	rlf	___ftdiv@f1,f
  6205  0CC2  0DAA               	rlf	___ftdiv@f1+1,f
  6206  0CC3  0DAB               	rlf	___ftdiv@f1+2,f
  6207  0CC4  0BAF               	decfsz	___ftdiv@cntr,f
  6208  0CC5  2CA5               	goto	l8076
  6209  0CC6  0830               	movf	___ftdiv@f3,w
  6210  0CC7  00F3               	movwf	?___ftpack
  6211  0CC8  0831               	movf	___ftdiv@f3+1,w
  6212  0CC9  00F4               	movwf	?___ftpack+1
  6213  0CCA  0832               	movf	___ftdiv@f3+2,w
  6214  0CCB  00F5               	movwf	?___ftpack+2
  6215  0CCC  0833               	movf	___ftdiv@exp,w
  6216  0CCD  00F6               	movwf	?___ftpack+3
  6217  0CCE  0834               	movf	___ftdiv@sign,w
  6218  0CCF  00F7               	movwf	?___ftpack+4
  6219  0CD0  2769               	fcall	___ftpack
  6220  0CD1  0873               	movf	?___ftpack,w
  6221  0CD2  00A6               	movwf	?___ftdiv
  6222  0CD3  0874               	movf	?___ftpack+1,w
  6223  0CD4  00A7               	movwf	?___ftdiv+1
  6224  0CD5  0875               	movf	?___ftpack+2,w
  6225  0CD6  00A8               	movwf	?___ftdiv+2
  6226  0CD7  0008               	return
  6227  0CD8                     __end_of___ftdiv:	
  6228  0CD8                     __ptext907:	
  6229 ;; =============== function ___ftsub ends ============
  6230                           
  6231                           
  6232 ;; *************** function _scale *****************
  6233 ;; Defined at:
  6234 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  scl             1    wreg     char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  scl             1   46[BANK0 ] char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  3   36[BANK0 ] char 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 60/20
  6245 ;;		On exit  : 60/0
  6246 ;;		Unchanged: FFF9F/0
  6247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6248 ;;      Params:         0       3       0       0       0
  6249 ;;      Locals:         0       4       0       0       0
  6250 ;;      Temps:          0       4       0       0       0
  6251 ;;      Totals:         0      11       0       0       0
  6252 ;;Total ram usage:       11 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:    3
  6255 ;; This function calls:
  6256 ;;		___awmod
  6257 ;;		___awdiv
  6258 ;;		___ftmul
  6259 ;;		___bmul
  6260 ;; This function is called by:
  6261 ;;		_printf
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264  0CD8                     _scale:	
  6265                           
  6266                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6267                           ;scale@scl stored from wreg
  6268  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  6269  0CD9  00CE               	movwf	scale@scl
  6270  0CDA  1FCE               	btfss	scale@scl,7
  6271  0CDB  2DA4               	goto	l8262
  6272  0CDC  09CE               	comf	scale@scl,f
  6273  0CDD  0ACE               	incf	scale@scl,f
  6274  0CDE  084E               	movf	scale@scl,w
  6275  0CDF  3A80               	xorlw	128
  6276  0CE0  3E12               	addlw	-238
  6277  0CE1  1C03               	skipc
  6278  0CE2  2D48               	goto	l8252
  6279  0CE3  300A               	movlw	10
  6280  0CE4  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  6281  0CE7  26AF  120A  158A   	fcall	___awmod
  6282  0CEA  0874               	movf	?___awmod+1,w
  6283  0CEB  00A3               	movwf	?___awdiv+3
  6284  0CEC  0873               	movf	?___awmod,w
  6285  0CED  00A2               	movwf	?___awdiv+2
  6286  0CEE  266A  120A  158A   	fcall	___awdiv
  6287  0CF1  27E8               	fcall	PL23	;call to abstracted procedure
  6288  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6289  0CF3  0084               	movwf	4
  6290  0CF4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6291  0CF9  00B5               	movwf	?___ftmul
  6292  0CFA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6293  0CFF  00B6               	movwf	?___ftmul+1
  6294  0D00  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6295  0D05  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  6296  0D08  1BA2               	btfsc	?___awdiv+2,7
  6297  0D09  03A3               	decf	?___awdiv+3,f
  6298  0D0A  266A  120A  158A   	fcall	___awdiv
  6299  0D0D  27BC               	fcall	PL10	;call to abstracted procedure
  6300  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  6301  0D0F  0084               	movwf	4
  6302  0D10  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6303  0D15  00B8               	movwf	?___ftmul+3
  6304  0D16  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6305  0D1B  00B9               	movwf	?___ftmul+4
  6306  0D1C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6307  0D21  00BA               	movwf	?___ftmul+5
  6308  0D22  26EC  120A  158A   	fcall	___ftmul
  6309  0D25  27A7  120A  158A   	fcall	PL7	;call to abstracted procedure
  6310  0D28  1BF5               	btfsc	?___awmod+2,7
  6311  0D29  03F6               	decf	?___awmod+3,f
  6312  0D2A  26AF  120A  158A   	fcall	___awmod
  6313  0D2D  27B4               	fcall	PL9	;call to abstracted procedure
  6314  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  6315  0D2F  0084               	movwf	4
  6316  0D30  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6317  0D35  00B5               	movwf	?___ftmul
  6318  0D36  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6319  0D3B  00B6               	movwf	?___ftmul+1
  6320  0D3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6321  0D41  27F0  120A  158A   	fcall	PL24	;call to abstracted procedure
  6322  0D44  26EC  120A  158A   	fcall	___ftmul
  6323  0D47  2FC4               	ljmp	PL11	;call to abstracted procedure
  6324  0D48                     l8252:	
  6325  0D48  084E               	movf	scale@scl,w
  6326  0D49  3A80               	xorlw	128
  6327  0D4A  3E75               	addlw	-139
  6328  0D4B  1C03               	skipc
  6329  0D4C  2D8D               	goto	l8258
  6330  0D4D  300A               	movlw	10
  6331  0D4E  00F3               	movwf	?___awmod
  6332  0D4F  01F4               	clrf	?___awmod+1
  6333  0D50  084E               	movf	scale@scl,w
  6334  0D51  00F5               	movwf	?___awmod+2
  6335  0D52  01F6               	clrf	?___awmod+3
  6336  0D53  1BF5               	btfsc	?___awmod+2,7
  6337  0D54  03F6               	decf	?___awmod+3,f
  6338  0D55  26AF  120A  158A   	fcall	___awmod
  6339  0D58  27B4               	fcall	PL9	;call to abstracted procedure
  6340  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  6341  0D5A  0084               	movwf	4
  6342  0D5B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6343  0D60  00B5               	movwf	?___ftmul
  6344  0D61  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6345  0D66  00B6               	movwf	?___ftmul+1
  6346  0D67  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6347  0D6C  27E0  120A  158A   	fcall	PL22	;call to abstracted procedure
  6348  0D6F  1BA2               	btfsc	?___awdiv+2,7
  6349  0D70  03A3               	decf	?___awdiv+3,f
  6350  0D71  266A  120A  158A   	fcall	___awdiv
  6351  0D74  27BC               	fcall	PL10	;call to abstracted procedure
  6352  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6353  0D76  0084               	movwf	4
  6354  0D77  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6355  0D7C  00B8               	movwf	?___ftmul+3
  6356  0D7D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6357  0D82  00B9               	movwf	?___ftmul+4
  6358  0D83  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6359  0D88  00BA               	movwf	?___ftmul+5
  6360  0D89  26EC  120A  158A   	fcall	___ftmul
  6361  0D8C  2FC4               	ljmp	PL11	;call to abstracted procedure
  6362  0D8D                     l8258:	
  6363  0D8D  3003               	movlw	3
  6364  0D8E  00A3               	movwf	?___bmul
  6365  0D8F  084E               	movf	scale@scl,w
  6366  0D90  275B               	fcall	___bmul
  6367  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  6368  0D92  0084               	movwf	4
  6369  0D93  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6370  0D98  00C4               	movwf	?_scale
  6371  0D99  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6372  0D9E  00C5               	movwf	?_scale+1
  6373  0D9F  160A  118A  2000   	fcall	stringdir
  6374  0DA2  00C6               	movwf	?_scale+2
  6375  0DA3  0008               	return
  6376  0DA4                     l8262:	
  6377  0DA4  084E               	movf	scale@scl,w
  6378  0DA5  3A80               	xorlw	128
  6379  0DA6  3E12               	addlw	-238
  6380  0DA7  1C03               	skipc
  6381  0DA8  2E0E               	goto	l8270
  6382  0DA9  300A               	movlw	10
  6383  0DAA  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  6384  0DAD  26AF  120A  158A   	fcall	___awmod
  6385  0DB0  0874               	movf	?___awmod+1,w
  6386  0DB1  00A3               	movwf	?___awdiv+3
  6387  0DB2  0873               	movf	?___awmod,w
  6388  0DB3  00A2               	movwf	?___awdiv+2
  6389  0DB4  266A  120A  158A   	fcall	___awdiv
  6390  0DB7  27E8               	fcall	PL23	;call to abstracted procedure
  6391  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  6392  0DB9  0084               	movwf	4
  6393  0DBA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6394  0DBF  00B5               	movwf	?___ftmul
  6395  0DC0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6396  0DC5  00B6               	movwf	?___ftmul+1
  6397  0DC6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6398  0DCB  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  6399  0DCE  1BA2               	btfsc	?___awdiv+2,7
  6400  0DCF  03A3               	decf	?___awdiv+3,f
  6401  0DD0  266A  120A  158A   	fcall	___awdiv
  6402  0DD3  27BC               	fcall	PL10	;call to abstracted procedure
  6403  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6404  0DD5  0084               	movwf	4
  6405  0DD6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6406  0DDB  00B8               	movwf	?___ftmul+3
  6407  0DDC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6408  0DE1  00B9               	movwf	?___ftmul+4
  6409  0DE2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6410  0DE7  00BA               	movwf	?___ftmul+5
  6411  0DE8  26EC  120A  158A   	fcall	___ftmul
  6412  0DEB  27A7  120A  158A   	fcall	PL7	;call to abstracted procedure
  6413  0DEE  1BF5               	btfsc	?___awmod+2,7
  6414  0DEF  03F6               	decf	?___awmod+3,f
  6415  0DF0  26AF  120A  158A   	fcall	___awmod
  6416  0DF3  27B4               	fcall	PL9	;call to abstracted procedure
  6417  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  6418  0DF5  0084               	movwf	4
  6419  0DF6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6420  0DFB  00B5               	movwf	?___ftmul
  6421  0DFC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6422  0E01  00B6               	movwf	?___ftmul+1
  6423  0E02  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6424  0E07  27F0  120A  158A   	fcall	PL24	;call to abstracted procedure
  6425  0E0A  26EC  120A  158A   	fcall	___ftmul
  6426  0E0D  2FC4               	ljmp	PL11	;call to abstracted procedure
  6427  0E0E                     l8270:	
  6428  0E0E  084E               	movf	scale@scl,w
  6429  0E0F  3A80               	xorlw	128
  6430  0E10  3E75               	addlw	-139
  6431  0E11  1C03               	skipc
  6432  0E12  2E53               	goto	l8276
  6433  0E13  300A               	movlw	10
  6434  0E14  00F3               	movwf	?___awmod
  6435  0E15  01F4               	clrf	?___awmod+1
  6436  0E16  084E               	movf	scale@scl,w
  6437  0E17  00F5               	movwf	?___awmod+2
  6438  0E18  01F6               	clrf	?___awmod+3
  6439  0E19  1BF5               	btfsc	?___awmod+2,7
  6440  0E1A  03F6               	decf	?___awmod+3,f
  6441  0E1B  26AF  120A  158A   	fcall	___awmod
  6442  0E1E  27B4               	fcall	PL9	;call to abstracted procedure
  6443  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  6444  0E20  0084               	movwf	4
  6445  0E21  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6446  0E26  00B5               	movwf	?___ftmul
  6447  0E27  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6448  0E2C  00B6               	movwf	?___ftmul+1
  6449  0E2D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6450  0E32  27E0  120A  158A   	fcall	PL22	;call to abstracted procedure
  6451  0E35  1BA2               	btfsc	?___awdiv+2,7
  6452  0E36  03A3               	decf	?___awdiv+3,f
  6453  0E37  266A  120A  158A   	fcall	___awdiv
  6454  0E3A  27BC               	fcall	PL10	;call to abstracted procedure
  6455  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  6456  0E3C  0084               	movwf	4
  6457  0E3D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6458  0E42  00B8               	movwf	?___ftmul+3
  6459  0E43  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6460  0E48  00B9               	movwf	?___ftmul+4
  6461  0E49  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6462  0E4E  00BA               	movwf	?___ftmul+5
  6463  0E4F  26EC  120A  158A   	fcall	___ftmul
  6464  0E52  2FC4               	ljmp	PL11	;call to abstracted procedure
  6465  0E53                     l8276:	
  6466  0E53  3003               	movlw	3
  6467  0E54  00A3               	movwf	?___bmul
  6468  0E55  084E               	movf	scale@scl,w
  6469  0E56  275B               	fcall	___bmul
  6470  0E57  3E28               	addlw	low (__powers_-__stringbase)
  6471  0E58  0084               	movwf	4
  6472  0E59  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6473  0E5E  00C4               	movwf	?_scale
  6474  0E5F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6475  0E64  00C5               	movwf	?_scale+1
  6476  0E65  160A  118A  2000   	fcall	stringdir
  6477  0E68  00C6               	movwf	?_scale+2
  6478  0E69  0008               	return
  6479  0E6A                     __end_of_scale:	
  6480  0E6A                     __ptext925:	
  6481 ;; =============== function ___llmod ends ============
  6482                           
  6483                           
  6484 ;; *************** function ___awdiv *****************
  6485 ;; Defined at:
  6486 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;  divisor         2    0[BANK0 ] int 
  6489 ;;  dividend        2    2[BANK0 ] int 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  quotient        2    6[BANK0 ] int 
  6492 ;;  sign            1    5[BANK0 ] unsigned char 
  6493 ;;  counter         1    4[BANK0 ] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  2    0[BANK0 ] int 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 60/0
  6500 ;;		On exit  : 60/0
  6501 ;;		Unchanged: FFF9F/0
  6502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6503 ;;      Params:         0       4       0       0       0
  6504 ;;      Locals:         0       4       0       0       0
  6505 ;;      Temps:          0       0       0       0       0
  6506 ;;      Totals:         0       8       0       0       0
  6507 ;;Total ram usage:        8 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    1
  6510 ;; This function calls:
  6511 ;;		Nothing
  6512 ;; This function is called by:
  6513 ;;		_pwm_10bit
  6514 ;;		_scale
  6515 ;;		_printf
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518  0E6A                     ___awdiv:	
  6519                           
  6520                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6521  0E6A  01A5               	clrf	___awdiv@sign
  6522  0E6B  1FA1               	btfss	___awdiv@divisor+1,7
  6523  0E6C  2E74               	goto	l6690
  6524  0E6D  09A0               	comf	___awdiv@divisor,f
  6525  0E6E  09A1               	comf	___awdiv@divisor+1,f
  6526  0E6F  0AA0               	incf	___awdiv@divisor,f
  6527  0E70  1903               	skipnz
  6528  0E71  0AA1               	incf	___awdiv@divisor+1,f
  6529  0E72  01A5               	clrf	___awdiv@sign
  6530  0E73  0AA5               	incf	___awdiv@sign,f
  6531  0E74                     l6690:	
  6532  0E74  1FA3               	btfss	___awdiv@dividend+1,7
  6533  0E75  2E7D               	goto	l6696
  6534  0E76  09A2               	comf	___awdiv@dividend,f
  6535  0E77  09A3               	comf	___awdiv@dividend+1,f
  6536  0E78  0AA2               	incf	___awdiv@dividend,f
  6537  0E79  1903               	skipnz
  6538  0E7A  0AA3               	incf	___awdiv@dividend+1,f
  6539  0E7B  3001               	movlw	1
  6540  0E7C  06A5               	xorwf	___awdiv@sign,f
  6541  0E7D                     l6696:	
  6542  0E7D  01A6               	clrf	___awdiv@quotient
  6543  0E7E  01A7               	clrf	___awdiv@quotient+1
  6544  0E7F  0821               	movf	___awdiv@divisor+1,w
  6545  0E80  0420               	iorwf	___awdiv@divisor,w
  6546  0E81  1903               	skipnz
  6547  0E82  2EA2               	goto	l6718
  6548  0E83  01A4               	clrf	___awdiv@counter
  6549  0E84                     L16:	
  6550  0E84  0AA4               	incf	___awdiv@counter,f
  6551  0E85  1BA1               	btfsc	___awdiv@divisor+1,7
  6552  0E86  2E8B               	goto	l6706
  6553  0E87  1003               	clrc
  6554  0E88  0DA0               	rlf	___awdiv@divisor,f
  6555  0E89  0DA1               	rlf	___awdiv@divisor+1,f
  6556  0E8A  2E84               	goto	L16
  6557  0E8B                     l6706:	
  6558  0E8B  1003               	clrc
  6559  0E8C  0DA6               	rlf	___awdiv@quotient,f
  6560  0E8D  0DA7               	rlf	___awdiv@quotient+1,f
  6561  0E8E  0821               	movf	___awdiv@divisor+1,w
  6562  0E8F  0223               	subwf	___awdiv@dividend+1,w
  6563  0E90  1D03               	skipz
  6564  0E91  2E94               	goto	u2745
  6565  0E92  0820               	movf	___awdiv@divisor,w
  6566  0E93  0222               	subwf	___awdiv@dividend,w
  6567  0E94                     u2745:	
  6568  0E94  1C03               	skipc
  6569  0E95  2E9E               	goto	L17
  6570  0E96  0820               	movf	___awdiv@divisor,w
  6571  0E97  02A2               	subwf	___awdiv@dividend,f
  6572  0E98  0821               	movf	___awdiv@divisor+1,w
  6573  0E99  1C03               	skipc
  6574  0E9A  03A3               	decf	___awdiv@dividend+1,f
  6575  0E9B  02A3               	subwf	___awdiv@dividend+1,f
  6576  0E9C  1426               	bsf	___awdiv@quotient,0
  6577  0E9D  1003               	clrc
  6578  0E9E                     L17:	
  6579  0E9E  0CA1               	rrf	___awdiv@divisor+1,f
  6580  0E9F  0CA0               	rrf	___awdiv@divisor,f
  6581  0EA0  0BA4               	decfsz	___awdiv@counter,f
  6582  0EA1  2E8B               	goto	l6706
  6583  0EA2                     l6718:	
  6584  0EA2  0825               	movf	___awdiv@sign,w
  6585  0EA3  1903               	btfsc	3,2
  6586  0EA4  2EAA               	goto	l6722
  6587  0EA5  09A6               	comf	___awdiv@quotient,f
  6588  0EA6  09A7               	comf	___awdiv@quotient+1,f
  6589  0EA7  0AA6               	incf	___awdiv@quotient,f
  6590  0EA8  1903               	skipnz
  6591  0EA9  0AA7               	incf	___awdiv@quotient+1,f
  6592  0EAA                     l6722:	
  6593  0EAA  0827               	movf	___awdiv@quotient+1,w
  6594  0EAB  00A1               	movwf	?___awdiv+1
  6595  0EAC  0826               	movf	___awdiv@quotient,w
  6596  0EAD  00A0               	movwf	?___awdiv
  6597  0EAE  0008               	return
  6598  0EAF                     __end_of___awdiv:	
  6599  0EAF                     __ptext920:	
  6600 ;; =============== function _lcd_put_byte ends ============
  6601                           
  6602                           
  6603 ;; *************** function ___awmod *****************
  6604 ;; Defined at:
  6605 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;  divisor         2    3[COMMON] int 
  6608 ;;  dividend        2    5[COMMON] int 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  sign            1    8[COMMON] unsigned char 
  6611 ;;  counter         1    7[COMMON] unsigned char 
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  2    3[COMMON] int 
  6614 ;; Registers used:
  6615 ;;		wreg, status,2, status,0
  6616 ;; Tracked objects:
  6617 ;;		On entry : 60/0
  6618 ;;		On exit  : 60/0
  6619 ;;		Unchanged: FFF9F/0
  6620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6621 ;;      Params:         4       0       0       0       0
  6622 ;;      Locals:         2       0       0       0       0
  6623 ;;      Temps:          0       0       0       0       0
  6624 ;;      Totals:         6       0       0       0       0
  6625 ;;Total ram usage:        6 bytes
  6626 ;; Hardware stack levels used:    1
  6627 ;; Hardware stack levels required when called:    1
  6628 ;; This function calls:
  6629 ;;		Nothing
  6630 ;; This function is called by:
  6631 ;;		_scale
  6632 ;; This function uses a non-reentrant model
  6633 ;;
  6634  0EAF                     ___awmod:	
  6635                           
  6636                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6637  0EAF  01F8               	clrf	___awmod@sign
  6638  0EB0  1FF6               	btfss	___awmod@dividend+1,7
  6639  0EB1  2EB9               	goto	l6808
  6640  0EB2  09F5               	comf	___awmod@dividend,f
  6641  0EB3  09F6               	comf	___awmod@dividend+1,f
  6642  0EB4  0AF5               	incf	___awmod@dividend,f
  6643  0EB5  1903               	skipnz
  6644  0EB6  0AF6               	incf	___awmod@dividend+1,f
  6645  0EB7  01F8               	clrf	___awmod@sign
  6646  0EB8  0AF8               	incf	___awmod@sign,f
  6647  0EB9                     l6808:	
  6648  0EB9  1FF4               	btfss	___awmod@divisor+1,7
  6649  0EBA  2EC0               	goto	l6812
  6650  0EBB  09F3               	comf	___awmod@divisor,f
  6651  0EBC  09F4               	comf	___awmod@divisor+1,f
  6652  0EBD  0AF3               	incf	___awmod@divisor,f
  6653  0EBE  1903               	skipnz
  6654  0EBF  0AF4               	incf	___awmod@divisor+1,f
  6655  0EC0                     l6812:	
  6656  0EC0  0874               	movf	___awmod@divisor+1,w
  6657  0EC1  0473               	iorwf	___awmod@divisor,w
  6658  0EC2  1903               	skipnz
  6659  0EC3  2EDF               	goto	l6828
  6660  0EC4  01F7               	clrf	___awmod@counter
  6661  0EC5                     L9:	
  6662  0EC5  0AF7               	incf	___awmod@counter,f
  6663  0EC6  1BF4               	btfsc	___awmod@divisor+1,7
  6664  0EC7  2ECC               	goto	l6820
  6665  0EC8  1003               	clrc
  6666  0EC9  0DF3               	rlf	___awmod@divisor,f
  6667  0ECA  0DF4               	rlf	___awmod@divisor+1,f
  6668  0ECB  2EC5               	goto	L9
  6669  0ECC                     l6820:	
  6670  0ECC  0874               	movf	___awmod@divisor+1,w
  6671  0ECD  0276               	subwf	___awmod@dividend+1,w
  6672  0ECE  1D03               	skipz
  6673  0ECF  2ED2               	goto	u2935
  6674  0ED0  0873               	movf	___awmod@divisor,w
  6675  0ED1  0275               	subwf	___awmod@dividend,w
  6676  0ED2                     u2935:	
  6677  0ED2  1C03               	skipc
  6678  0ED3  2EDB               	goto	L10
  6679  0ED4  0873               	movf	___awmod@divisor,w
  6680  0ED5  02F5               	subwf	___awmod@dividend,f
  6681  0ED6  0874               	movf	___awmod@divisor+1,w
  6682  0ED7  1C03               	skipc
  6683  0ED8  03F6               	decf	___awmod@dividend+1,f
  6684  0ED9  02F6               	subwf	___awmod@dividend+1,f
  6685  0EDA  1003               	clrc
  6686  0EDB                     L10:	
  6687  0EDB  0CF4               	rrf	___awmod@divisor+1,f
  6688  0EDC  0CF3               	rrf	___awmod@divisor,f
  6689  0EDD  0BF7               	decfsz	___awmod@counter,f
  6690  0EDE  2ECC               	goto	l6820
  6691  0EDF                     l6828:	
  6692  0EDF  0878               	movf	___awmod@sign,w
  6693  0EE0  1903               	btfsc	3,2
  6694  0EE1  2EE7               	goto	l6832
  6695  0EE2  09F5               	comf	___awmod@dividend,f
  6696  0EE3  09F6               	comf	___awmod@dividend+1,f
  6697  0EE4  0AF5               	incf	___awmod@dividend,f
  6698  0EE5  1903               	skipnz
  6699  0EE6  0AF6               	incf	___awmod@dividend+1,f
  6700  0EE7                     l6832:	
  6701  0EE7  0876               	movf	___awmod@dividend+1,w
  6702  0EE8  00F4               	movwf	?___awmod+1
  6703  0EE9  0875               	movf	___awmod@dividend,w
  6704  0EEA  00F3               	movwf	?___awmod
  6705  0EEB  0008               	return
  6706  0EEC                     __end_of___awmod:	
  6707  0EEC                     __ptext913:	
  6708 ;; =============== function ___awtoft ends ============
  6709                           
  6710                           
  6711 ;; *************** function ___ftmul *****************
  6712 ;; Defined at:
  6713 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  f1              3   21[BANK0 ] float 
  6716 ;;  f2              3   24[BANK0 ] float 
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  6719 ;;  sign            1   35[BANK0 ] unsigned char 
  6720 ;;  cntr            1   34[BANK0 ] unsigned char 
  6721 ;;  exp             1   30[BANK0 ] unsigned char 
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  3   21[BANK0 ] float 
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0, pclath, cstack
  6726 ;; Tracked objects:
  6727 ;;		On entry : 60/0
  6728 ;;		On exit  : 60/0
  6729 ;;		Unchanged: FFF9F/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6731 ;;      Params:         0       6       0       0       0
  6732 ;;      Locals:         0       6       0       0       0
  6733 ;;      Temps:          0       3       0       0       0
  6734 ;;      Totals:         0      15       0       0       0
  6735 ;;Total ram usage:       15 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    2
  6738 ;; This function calls:
  6739 ;;		___ftpack
  6740 ;; This function is called by:
  6741 ;;		_main
  6742 ;;		_fround
  6743 ;;		_scale
  6744 ;;		_printf
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747  0EEC                     ___ftmul:	
  6748                           
  6749                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6750  0EEC  0835               	movf	___ftmul@f1,w
  6751  0EED  00BB               	movwf	??___ftmul
  6752  0EEE  0836               	movf	___ftmul@f1+1,w
  6753  0EEF  00BC               	movwf	??___ftmul+1
  6754  0EF0  0837               	movf	___ftmul@f1+2,w
  6755  0EF1  00BD               	movwf	??___ftmul+2
  6756  0EF2  1003               	clrc
  6757  0EF3  0D3C               	rlf	??___ftmul+1,w
  6758  0EF4  0D3D               	rlf	??___ftmul+2,w
  6759  0EF5  00BE               	movwf	___ftmul@exp
  6760  0EF6  08BE               	movf	___ftmul@exp,f
  6761  0EF7  1D03               	skipz
  6762  0EF8  2EFD               	goto	l8096
  6763  0EF9  01B5               	clrf	?___ftmul
  6764  0EFA  01B6               	clrf	?___ftmul+1
  6765  0EFB  01B7               	clrf	?___ftmul+2
  6766  0EFC  0008               	return
  6767  0EFD                     l8096:	
  6768  0EFD  0838               	movf	___ftmul@f2,w
  6769  0EFE  00BB               	movwf	??___ftmul
  6770  0EFF  0839               	movf	___ftmul@f2+1,w
  6771  0F00  00BC               	movwf	??___ftmul+1
  6772  0F01  083A               	movf	___ftmul@f2+2,w
  6773  0F02  00BD               	movwf	??___ftmul+2
  6774  0F03  1003               	clrc
  6775  0F04  0D3C               	rlf	??___ftmul+1,w
  6776  0F05  0D3D               	rlf	??___ftmul+2,w
  6777  0F06  00C3               	movwf	___ftmul@sign
  6778  0F07  08C3               	movf	___ftmul@sign,f
  6779  0F08  1D03               	skipz
  6780  0F09  2F0E               	goto	l8102
  6781  0F0A  01B5               	clrf	?___ftmul
  6782  0F0B  01B6               	clrf	?___ftmul+1
  6783  0F0C  01B7               	clrf	?___ftmul+2
  6784  0F0D  0008               	return
  6785  0F0E                     l8102:	
  6786  0F0E  0843               	movf	___ftmul@sign,w
  6787  0F0F  3E7B               	addlw	123
  6788  0F10  07BE               	addwf	___ftmul@exp,f
  6789  0F11  0837               	movf	___ftmul@f1+2,w
  6790  0F12  00C3               	movwf	___ftmul@sign
  6791  0F13  083A               	movf	___ftmul@f2+2,w
  6792  0F14  06C3               	xorwf	___ftmul@sign,f
  6793  0F15  3080               	movlw	128
  6794  0F16  05C3               	andwf	___ftmul@sign,f
  6795  0F17  3007               	movlw	7
  6796  0F18  17B6               	bsf	___ftmul@f1+1,7
  6797  0F19  17B9               	bsf	___ftmul@f2+1,7
  6798  0F1A  01BA               	clrf	___ftmul@f2+2
  6799  0F1B  01BF               	clrf	___ftmul@f3_as_product
  6800  0F1C  01C0               	clrf	___ftmul@f3_as_product+1
  6801  0F1D  01C1               	clrf	___ftmul@f3_as_product+2
  6802  0F1E  00C2               	movwf	___ftmul@cntr
  6803  0F1F                     l8120:	
  6804  0F1F  1C35               	btfss	___ftmul@f1,0
  6805  0F20  2F29               	goto	l8124
  6806  0F21  0838               	movf	___ftmul@f2,w
  6807  0F22  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6808  0F25  1803               	skipnc
  6809  0F26  0A3A               	incf	___ftmul@f2+2,w
  6810  0F27  1D03               	btfss	3,2
  6811  0F28  07C1               	addwf	___ftmul@f3_as_product+2,f
  6812  0F29                     l8124:	
  6813  0F29  1003               	clrc
  6814  0F2A  0CB7               	rrf	___ftmul@f1+2,f
  6815  0F2B  0CB6               	rrf	___ftmul@f1+1,f
  6816  0F2C  0CB5               	rrf	___ftmul@f1,f
  6817  0F2D  1003               	clrc
  6818  0F2E  0DB8               	rlf	___ftmul@f2,f
  6819  0F2F  0DB9               	rlf	___ftmul@f2+1,f
  6820  0F30  0DBA               	rlf	___ftmul@f2+2,f
  6821  0F31  0BC2               	decfsz	___ftmul@cntr,f
  6822  0F32  2F1F               	goto	l8120
  6823  0F33  3009               	movlw	9
  6824  0F34  00C2               	movwf	___ftmul@cntr
  6825  0F35                     l8132:	
  6826  0F35  1C35               	btfss	___ftmul@f1,0
  6827  0F36  2F3F               	goto	l8136
  6828  0F37  0838               	movf	___ftmul@f2,w
  6829  0F38  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6830  0F3B  1803               	skipnc
  6831  0F3C  0A3A               	incf	___ftmul@f2+2,w
  6832  0F3D  1D03               	btfss	3,2
  6833  0F3E  07C1               	addwf	___ftmul@f3_as_product+2,f
  6834  0F3F                     l8136:	
  6835  0F3F  1003               	clrc
  6836  0F40  0CB7               	rrf	___ftmul@f1+2,f
  6837  0F41  0CB6               	rrf	___ftmul@f1+1,f
  6838  0F42  0CB5               	rrf	___ftmul@f1,f
  6839  0F43  1003               	clrc
  6840  0F44  0CC1               	rrf	___ftmul@f3_as_product+2,f
  6841  0F45  0CC0               	rrf	___ftmul@f3_as_product+1,f
  6842  0F46  0CBF               	rrf	___ftmul@f3_as_product,f
  6843  0F47  0BC2               	decfsz	___ftmul@cntr,f
  6844  0F48  2F35               	goto	l8132
  6845  0F49  083F               	movf	___ftmul@f3_as_product,w
  6846  0F4A  00F3               	movwf	?___ftpack
  6847  0F4B  0840               	movf	___ftmul@f3_as_product+1,w
  6848  0F4C  00F4               	movwf	?___ftpack+1
  6849  0F4D  0841               	movf	___ftmul@f3_as_product+2,w
  6850  0F4E  00F5               	movwf	?___ftpack+2
  6851  0F4F  083E               	movf	___ftmul@exp,w
  6852  0F50  00F6               	movwf	?___ftpack+3
  6853  0F51  0843               	movf	___ftmul@sign,w
  6854  0F52  00F7               	movwf	?___ftpack+4
  6855  0F53  2769               	fcall	___ftpack
  6856  0F54  0873               	movf	?___ftpack,w
  6857  0F55  00B5               	movwf	?___ftmul
  6858  0F56  0874               	movf	?___ftpack+1,w
  6859  0F57  00B6               	movwf	?___ftmul+1
  6860  0F58  0875               	movf	?___ftpack+2,w
  6861  0F59  00B7               	movwf	?___ftmul+2
  6862  0F5A  0008               	return
  6863  0F5B                     __end_of___ftmul:	
  6864  0F5B                     __ptext931:	
  6865 ;; =============== function ___wmul ends ============
  6866                           
  6867                           
  6868 ;; *************** function ___bmul *****************
  6869 ;; Defined at:
  6870 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  multiplier      1    wreg     unsigned char 
  6873 ;;  multiplicand    1    3[BANK0 ] unsigned char 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;  multiplier      1    5[BANK0 ] unsigned char 
  6876 ;;  product         1    4[BANK0 ] unsigned char 
  6877 ;; Return value:  Size  Location     Type
  6878 ;;                  1    wreg      unsigned char 
  6879 ;; Registers used:
  6880 ;;		wreg, status,2, status,0
  6881 ;; Tracked objects:
  6882 ;;		On entry : 60/0
  6883 ;;		On exit  : 60/0
  6884 ;;		Unchanged: FFF9F/0
  6885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6886 ;;      Params:         0       1       0       0       0
  6887 ;;      Locals:         0       2       0       0       0
  6888 ;;      Temps:          0       0       0       0       0
  6889 ;;      Totals:         0       3       0       0       0
  6890 ;;Total ram usage:        3 bytes
  6891 ;; Hardware stack levels used:    1
  6892 ;; Hardware stack levels required when called:    1
  6893 ;; This function calls:
  6894 ;;		Nothing
  6895 ;; This function is called by:
  6896 ;;		_fround
  6897 ;;		_scale
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900  0F5B                     ___bmul:	
  6901                           
  6902                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6903                           ;___bmul@multiplier stored from wreg
  6904  0F5B  00A5               	movwf	___bmul@multiplier
  6905  0F5C  01A4               	clrf	___bmul@product
  6906  0F5D                     l7796:	
  6907  0F5D  0823               	movf	___bmul@multiplicand,w
  6908  0F5E  1825               	btfsc	___bmul@multiplier,0
  6909  0F5F  07A4               	addwf	___bmul@product,f
  6910  0F60  1003               	clrc
  6911  0F61  0DA3               	rlf	___bmul@multiplicand,f
  6912  0F62  1003               	clrc
  6913  0F63  0CA5               	rrf	___bmul@multiplier,f
  6914  0F64  08A5               	movf	___bmul@multiplier,f
  6915  0F65  1D03               	skipz
  6916  0F66  2F5D               	goto	l7796
  6917  0F67  0824               	movf	___bmul@product,w
  6918  0F68  0008               	return
  6919  0F69                     __end_of___bmul:	
  6920  0F69                     __ptext927:	
  6921 ;; =============== function ___fttol ends ============
  6922                           
  6923                           
  6924 ;; *************** function ___ftpack *****************
  6925 ;; Defined at:
  6926 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  arg             3    3[COMMON] unsigned um
  6929 ;;  exp             1    6[COMMON] unsigned char 
  6930 ;;  sign            1    7[COMMON] unsigned char 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;		None
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  3    3[COMMON] float 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 60/0
  6939 ;;		On exit  : 60/0
  6940 ;;		Unchanged: FFF9F/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6942 ;;      Params:         5       0       0       0       0
  6943 ;;      Locals:         0       0       0       0       0
  6944 ;;      Temps:          0       3       0       0       0
  6945 ;;      Totals:         5       3       0       0       0
  6946 ;;Total ram usage:        8 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; Hardware stack levels required when called:    1
  6949 ;; This function calls:
  6950 ;;		Nothing
  6951 ;; This function is called by:
  6952 ;;		___ftadd
  6953 ;;		___ftdiv
  6954 ;;		___ftmul
  6955 ;;		___awtoft
  6956 ;;		___lltoft
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959  0F69                     ___ftpack:	
  6960                           
  6961                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6962  0F69  0876               	movf	___ftpack@exp,w
  6963  0F6A  1903               	btfsc	3,2
  6964  0F6B  2F71               	goto	l7814
  6965  0F6C  0875               	movf	___ftpack@arg+2,w
  6966  0F6D  0474               	iorwf	___ftpack@arg+1,w
  6967  0F6E  0473               	iorwf	___ftpack@arg,w
  6968  0F6F  1D03               	skipz
  6969  0F70  2F7A               	goto	l7820
  6970  0F71                     l7814:	
  6971  0F71  01F3               	clrf	?___ftpack
  6972  0F72  01F4               	clrf	?___ftpack+1
  6973  0F73  01F5               	clrf	?___ftpack+2
  6974  0F74  0008               	return
  6975  0F75                     l7818:	
  6976  0F75  0AF6               	incf	___ftpack@exp,f
  6977  0F76  1003               	clrc
  6978  0F77  0CF5               	rrf	___ftpack@arg+2,f
  6979  0F78  0CF4               	rrf	___ftpack@arg+1,f
  6980  0F79  0CF3               	rrf	___ftpack@arg,f
  6981  0F7A                     l7820:	
  6982  0F7A  30FE               	movlw	254
  6983  0F7B  0575               	andwf	___ftpack@arg+2,w
  6984  0F7C  1903               	btfsc	3,2
  6985  0F7D  2F89               	goto	l7824
  6986  0F7E  2F75               	goto	l7818
  6987  0F7F                     l7822:	
  6988  0F7F  0AF6               	incf	___ftpack@exp,f
  6989  0F80  0AF3               	incf	___ftpack@arg,f
  6990  0F81  1903               	skipnz
  6991  0F82  0AF4               	incf	___ftpack@arg+1,f
  6992  0F83  1903               	skipnz
  6993  0F84  0AF5               	incf	___ftpack@arg+2,f
  6994  0F85  1003               	clrc
  6995  0F86  0CF5               	rrf	___ftpack@arg+2,f
  6996  0F87  0CF4               	rrf	___ftpack@arg+1,f
  6997  0F88  0CF3               	rrf	___ftpack@arg,f
  6998  0F89                     l7824:	
  6999  0F89  30FF               	movlw	255
  7000  0F8A  0575               	andwf	___ftpack@arg+2,w
  7001  0F8B  1903               	btfsc	3,2
  7002  0F8C  2F93               	goto	l7828
  7003  0F8D  2F7F               	goto	l7822
  7004  0F8E                     l7826:	
  7005  0F8E  03F6               	decf	___ftpack@exp,f
  7006  0F8F  1003               	clrc
  7007  0F90  0DF3               	rlf	___ftpack@arg,f
  7008  0F91  0DF4               	rlf	___ftpack@arg+1,f
  7009  0F92  0DF5               	rlf	___ftpack@arg+2,f
  7010  0F93                     l7828:	
  7011  0F93  1FF4               	btfss	___ftpack@arg+1,7
  7012  0F94  2F8E               	goto	l7826
  7013  0F95  1C76               	btfss	___ftpack@exp,0
  7014  0F96  13F4               	bcf	___ftpack@arg+1,7
  7015  0F97  1003               	clrc
  7016  0F98  0CF6               	rrf	___ftpack@exp,f
  7017  0F99  0876               	movf	___ftpack@exp,w
  7018  0F9A  00A2               	movwf	??___ftpack+2
  7019  0F9B  01A1               	clrf	??___ftpack+1
  7020  0F9C  01A0               	clrf	??___ftpack
  7021  0F9D  0820               	movf	??___ftpack,w
  7022  0F9E  04F3               	iorwf	___ftpack@arg,f
  7023  0F9F  0821               	movf	??___ftpack+1,w
  7024  0FA0  04F4               	iorwf	___ftpack@arg+1,f
  7025  0FA1  0822               	movf	??___ftpack+2,w
  7026  0FA2  04F5               	iorwf	___ftpack@arg+2,f
  7027  0FA3  0877               	movf	___ftpack@sign,w
  7028  0FA4  1D03               	skipz
  7029  0FA5  17F5               	bsf	___ftpack@arg+2,7
  7030  0FA6  0008               	return
  7031  0FA7                     __end_of___ftpack:	
  7032  0FA7                     PL7:	
  7033  0FA7  0835               	movf	?___ftmul,w
  7034  0FA8  00CB               	movwf	_scale$4149
  7035  0FA9  0836               	movf	?___ftmul+1,w
  7036  0FAA  00CC               	movwf	_scale$4149+1
  7037  0FAB  0837               	movf	?___ftmul+2,w
  7038  0FAC  00CD               	movwf	_scale$4149+2
  7039  0FAD  300A               	movlw	10
  7040  0FAE  00F3               	movwf	?___awmod
  7041  0FAF  01F4               	clrf	?___awmod+1
  7042  0FB0  084E               	movf	scale@scl,w
  7043  0FB1  00F5               	movwf	?___awmod+2
  7044  0FB2  01F6               	clrf	?___awmod+3
  7045  0FB3  0008               	return
  7046  0FB4                     PL9:	
  7047  0FB4  0873               	movf	?___awmod,w
  7048  0FB5  00C7               	movwf	??_scale
  7049  0FB6  0874               	movf	?___awmod+1,w
  7050  0FB7  00C8               	movwf	??_scale+1
  7051  0FB8  0847               	movf	??_scale,w
  7052  0FB9  0747               	addwf	??_scale,w
  7053  0FBA  0747               	addwf	??_scale,w
  7054  0FBB  0008               	return
  7055  0FBC                     PL10:	
  7056  0FBC  0820               	movf	?___awdiv,w
  7057  0FBD  00C9               	movwf	??_scale+2
  7058  0FBE  0821               	movf	?___awdiv+1,w
  7059  0FBF  00CA               	movwf	??_scale+3
  7060  0FC0  0849               	movf	??_scale+2,w
  7061  0FC1  0749               	addwf	??_scale+2,w
  7062  0FC2  0749               	addwf	??_scale+2,w
  7063  0FC3  0008               	return
  7064  0FC4                     PL11:	
  7065  0FC4  0835               	movf	?___ftmul,w
  7066  0FC5  00C4               	movwf	?_scale
  7067  0FC6  0836               	movf	?___ftmul+1,w
  7068  0FC7  00C5               	movwf	?_scale+1
  7069  0FC8  0837               	movf	?___ftmul+2,w
  7070  0FC9  00C6               	movwf	?_scale+2
  7071  0FCA  0008               	return
  7072  0FCB                     PL15:	
  7073  0FCB  00A0               	movwf	?___awdiv
  7074  0FCC  01A1               	clrf	?___awdiv+1
  7075  0FCD  084E               	movf	scale@scl,w
  7076  0FCE  00F5               	movwf	?___awmod+2
  7077  0FCF  01F6               	clrf	?___awmod+3
  7078  0FD0  1BF5               	btfsc	?___awmod+2,7
  7079  0FD1  03F6               	decf	?___awmod+3,f
  7080  0FD2  3064               	movlw	100
  7081  0FD3  00F3               	movwf	?___awmod
  7082  0FD4  01F4               	clrf	?___awmod+1
  7083  0FD5  0008               	return
  7084  0FD6                     PL19:	
  7085  0FD6  07BF               	addwf	___ftmul@f3_as_product,f
  7086  0FD7  0839               	movf	___ftmul@f2+1,w
  7087  0FD8  1103               	clrz
  7088  0FD9  1803               	skipnc
  7089  0FDA  0A39               	incf	___ftmul@f2+1,w
  7090  0FDB  1D03               	btfss	3,2
  7091  0FDC  07C0               	addwf	___ftmul@f3_as_product+1,f
  7092  0FDD  083A               	movf	___ftmul@f2+2,w
  7093  0FDE  1103               	clrz
  7094  0FDF  0008               	return
  7095  0FE0                     PL22:	
  7096  0FE0  00B7               	movwf	?___ftmul+2
  7097  0FE1  300A               	movlw	10
  7098  0FE2  00A0               	movwf	?___awdiv
  7099  0FE3  01A1               	clrf	?___awdiv+1
  7100  0FE4  084E               	movf	scale@scl,w
  7101  0FE5  00A2               	movwf	?___awdiv+2
  7102  0FE6  01A3               	clrf	?___awdiv+3
  7103  0FE7  0008               	return
  7104  0FE8                     PL23:	
  7105  0FE8  0820               	movf	?___awdiv,w
  7106  0FE9  00C7               	movwf	??_scale
  7107  0FEA  0821               	movf	?___awdiv+1,w
  7108  0FEB  00C8               	movwf	??_scale+1
  7109  0FEC  0847               	movf	??_scale,w
  7110  0FED  0747               	addwf	??_scale,w
  7111  0FEE  0747               	addwf	??_scale,w
  7112  0FEF  0008               	return
  7113  0FF0                     PL24:	
  7114  0FF0  00B7               	movwf	?___ftmul+2
  7115  0FF1  084B               	movf	_scale$4149,w
  7116  0FF2  00B8               	movwf	?___ftmul+3
  7117  0FF3  084C               	movf	_scale$4149+1,w
  7118  0FF4  00B9               	movwf	?___ftmul+4
  7119  0FF5  084D               	movf	_scale$4149+2,w
  7120  0FF6  00BA               	movwf	?___ftmul+5
  7121  0FF7  0008               	return
  7122  0FF8                     PL26:	
  7123  0FF8  00B7               	movwf	?___ftmul+2
  7124  0FF9  3064               	movlw	100
  7125  0FFA  00A0               	movwf	?___awdiv
  7126  0FFB  01A1               	clrf	?___awdiv+1
  7127  0FFC  084E               	movf	scale@scl,w
  7128  0FFD  00A2               	movwf	?___awdiv+2
  7129  0FFE  01A3               	clrf	?___awdiv+3
  7130  0FFF  0008               	return
  7131                           
  7132                           	psect	text932
  7133  1735                     __ptext932:	
  7134 ;; =============== function ___bmul ends ============
  7135                           
  7136                           
  7137 ;; *************** function __div_to_l_ *****************
  7138 ;; Defined at:
  7139 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  7140 ;; Parameters:    Size  Location     Type
  7141 ;;  f1              3    3[COMMON] unsigned char 
  7142 ;;  f2              3    6[COMMON] unsigned char 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;  quot            4    8[BANK0 ] unsigned long 
  7145 ;;  exp1            1   13[BANK0 ] unsigned char 
  7146 ;;  cntr            1   12[BANK0 ] unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  4    3[COMMON] unsigned long 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 60/0
  7154 ;;		Unchanged: FFF9F/0
  7155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7156 ;;      Params:         6       0       0       0       0
  7157 ;;      Locals:         0       6       0       0       0
  7158 ;;      Temps:          0       8       0       0       0
  7159 ;;      Totals:         6      14       0       0       0
  7160 ;;Total ram usage:       20 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:    1
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		_printf
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169  1735                     __div_to_l_:	
  7170                           
  7171                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  7172  1735  3073               	movlw	low __div_to_l_@f1
  7173  1736  0084               	movwf	4
  7174  1737  0800               	movf	0,w
  7175  1738  1283               	bcf	3,5	;RP0=0, select bank0
  7176  1739  1303               	bcf	3,6	;RP1=0, select bank0
  7177  173A  00A0               	movwf	??__div_to_l_
  7178  173B  0A84               	incf	4,f
  7179  173C  0800               	movf	0,w
  7180  173D  00A1               	movwf	??__div_to_l_+1
  7181  173E  0A84               	incf	4,f
  7182  173F  0800               	movf	0,w
  7183  1740  00A2               	movwf	??__div_to_l_+2
  7184  1741  0A84               	incf	4,f
  7185  1742  0800               	movf	0,w
  7186  1743  00A3               	movwf	??__div_to_l_+3
  7187  1744  1003               	clrc
  7188  1745  0D22               	rlf	??__div_to_l_+2,w
  7189  1746  0D23               	rlf	??__div_to_l_+3,w
  7190  1747  00AD               	movwf	__div_to_l_@exp1
  7191  1748  08AD               	movf	__div_to_l_@exp1,f
  7192  1749  1D03               	skipz
  7193  174A  2F50               	goto	l6500
  7194  174B                     l6498:	
  7195  174B  01F3               	clrf	?__div_to_l_
  7196  174C  01F4               	clrf	?__div_to_l_+1
  7197  174D  01F5               	clrf	?__div_to_l_+2
  7198  174E  01F6               	clrf	?__div_to_l_+3
  7199  174F  0008               	return
  7200  1750                     l6500:	
  7201  1750  3076               	movlw	low __div_to_l_@f2
  7202  1751  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  7203  1754  1003               	clrc
  7204  1755  0D22               	rlf	??__div_to_l_+2,w
  7205  1756  0D23               	rlf	??__div_to_l_+3,w
  7206  1757  00AC               	movwf	__div_to_l_@cntr
  7207  1758  08AC               	movf	__div_to_l_@cntr,f
  7208  1759  1903               	btfsc	3,2
  7209  175A  2F4B               	goto	l6498
  7210  175B  3073               	movlw	low __div_to_l_@f1
  7211  175C  0084               	movwf	4
  7212  175D  3080               	movlw	128
  7213  175E  0A84               	incf	4,f
  7214  175F  0A84               	incf	4,f
  7215  1760  0480               	iorwf	0,f
  7216  1761  3073               	movlw	low __div_to_l_@f1
  7217  1762  0A84               	incf	4,f
  7218  1763  0084               	movwf	4
  7219  1764  3076               	movlw	low __div_to_l_@f2
  7220  1765  0A84               	incf	4,f
  7221  1766  0A84               	incf	4,f
  7222  1767  0A84               	incf	4,f
  7223  1768  0180               	clrf	0
  7224  1769  0084               	movwf	4
  7225  176A  3080               	movlw	128
  7226  176B  0A84               	incf	4,f
  7227  176C  0A84               	incf	4,f
  7228  176D  0480               	iorwf	0,f
  7229  176E  3076               	movlw	low __div_to_l_@f2
  7230  176F  0A84               	incf	4,f
  7231  1770  0084               	movwf	4
  7232  1771  307F               	movlw	127
  7233  1772  0A84               	incf	4,f
  7234  1773  0A84               	incf	4,f
  7235  1774  0A84               	incf	4,f
  7236  1775  0180               	clrf	0
  7237  1776  01A8               	clrf	__div_to_l_@quot
  7238  1777  01A9               	clrf	__div_to_l_@quot+1
  7239  1778  01AA               	clrf	__div_to_l_@quot+2
  7240  1779  01AB               	clrf	__div_to_l_@quot+3
  7241  177A  02AD               	subwf	__div_to_l_@exp1,f
  7242  177B  30A0               	movlw	160
  7243  177C  072C               	addwf	__div_to_l_@cntr,w
  7244  177D  00A0               	movwf	??__div_to_l_
  7245  177E  02AD               	subwf	__div_to_l_@exp1,f
  7246  177F  3020               	movlw	32
  7247  1780  00AC               	movwf	__div_to_l_@cntr
  7248  1781                     l6514:	
  7249  1781  3076               	movlw	low __div_to_l_@f2
  7250  1782  1003               	clrc
  7251  1783  0DA8               	rlf	__div_to_l_@quot,f
  7252  1784  0DA9               	rlf	__div_to_l_@quot+1,f
  7253  1785  0DAA               	rlf	__div_to_l_@quot+2,f
  7254  1786  0DAB               	rlf	__div_to_l_@quot+3,f
  7255  1787  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  7256  178A  3073               	movlw	low __div_to_l_@f1
  7257  178B  0084               	movwf	4
  7258  178C  0800               	movf	0,w
  7259  178D  00A4               	movwf	??__div_to_l_+4
  7260  178E  0A84               	incf	4,f
  7261  178F  0800               	movf	0,w
  7262  1790  00A5               	movwf	??__div_to_l_+5
  7263  1791  0A84               	incf	4,f
  7264  1792  0800               	movf	0,w
  7265  1793  00A6               	movwf	??__div_to_l_+6
  7266  1794  0A84               	incf	4,f
  7267  1795  0800               	movf	0,w
  7268  1796  00A7               	movwf	??__div_to_l_+7
  7269  1797  0823               	movf	??__div_to_l_+3,w
  7270  1798  0227               	subwf	??__div_to_l_+7,w
  7271  1799  1D03               	skipz
  7272  179A  2FA5               	goto	u2375
  7273  179B  0822               	movf	??__div_to_l_+2,w
  7274  179C  0226               	subwf	??__div_to_l_+6,w
  7275  179D  1D03               	skipz
  7276  179E  2FA5               	goto	u2375
  7277  179F  0821               	movf	??__div_to_l_+1,w
  7278  17A0  0225               	subwf	??__div_to_l_+5,w
  7279  17A1  1D03               	skipz
  7280  17A2  2FA5               	goto	u2375
  7281  17A3  0820               	movf	??__div_to_l_,w
  7282  17A4  0224               	subwf	??__div_to_l_+4,w
  7283  17A5                     u2375:	
  7284  17A5  1C03               	skipc
  7285  17A6  2FC1               	goto	l3640
  7286  17A7  3076               	movlw	low __div_to_l_@f2
  7287  17A8  27F3  160A  118A   	fcall	PL4	;call to abstracted procedure
  7288  17AB  3073               	movlw	low __div_to_l_@f1
  7289  17AC  0084               	movwf	4
  7290  17AD  0820               	movf	??__div_to_l_,w
  7291  17AE  0280               	subwf	0,f
  7292  17AF  0A84               	incf	4,f
  7293  17B0  0821               	movf	??__div_to_l_+1,w
  7294  17B1  1C03               	skipc
  7295  17B2  0F21               	incfsz	??__div_to_l_+1,w
  7296  17B3  0280               	subwf	0,f
  7297  17B4  0A84               	incf	4,f
  7298  17B5  0822               	movf	??__div_to_l_+2,w
  7299  17B6  1C03               	skipc
  7300  17B7  0F22               	incfsz	??__div_to_l_+2,w
  7301  17B8  0280               	subwf	0,f
  7302  17B9  0A84               	incf	4,f
  7303  17BA  0823               	movf	??__div_to_l_+3,w
  7304  17BB  1C03               	skipc
  7305  17BC  0A23               	incf	??__div_to_l_+3,w
  7306  17BD  0280               	subwf	0,f
  7307  17BE  3003               	movlw	3
  7308  17BF  0284               	subwf	4,f
  7309  17C0  1428               	bsf	__div_to_l_@quot,0
  7310  17C1                     l3640:	
  7311  17C1  3073               	movlw	low __div_to_l_@f1
  7312  17C2  0084               	movwf	4
  7313  17C3  1003               	clrc
  7314  17C4  0D80               	rlf	0,f
  7315  17C5  0A84               	incf	4,f
  7316  17C6  0D80               	rlf	0,f
  7317  17C7  0A84               	incf	4,f
  7318  17C8  0D80               	rlf	0,f
  7319  17C9  0A84               	incf	4,f
  7320  17CA  0D80               	rlf	0,f
  7321  17CB  0BAC               	decfsz	__div_to_l_@cntr,f
  7322  17CC  2F81               	goto	l6514
  7323  17CD  1FAD               	btfss	__div_to_l_@exp1,7
  7324  17CE  2FDC               	goto	l6532
  7325  17CF  082D               	movf	__div_to_l_@exp1,w
  7326  17D0  3A80               	xorlw	128
  7327  17D1  3E9F               	addlw	159
  7328  17D2  1C03               	btfss	3,0
  7329  17D3  2F4B               	goto	l6498
  7330  17D4                     l6528:	
  7331  17D4  1003               	clrc
  7332  17D5  0CAB               	rrf	__div_to_l_@quot+3,f
  7333  17D6  0CAA               	rrf	__div_to_l_@quot+2,f
  7334  17D7  0CA9               	rrf	__div_to_l_@quot+1,f
  7335  17D8  0CA8               	rrf	__div_to_l_@quot,f
  7336  17D9  0FAD               	incfsz	__div_to_l_@exp1,f
  7337  17DA  2FD4               	goto	l6528
  7338  17DB  2FEA               	goto	l6538
  7339  17DC                     l6532:	
  7340  17DC  3020               	movlw	32
  7341  17DD  022D               	subwf	__div_to_l_@exp1,w
  7342  17DE  1803               	btfsc	3,0
  7343  17DF  2F4B               	goto	l6498
  7344  17E0                     l3648:	
  7345  17E0  08AD               	movf	__div_to_l_@exp1,f
  7346  17E1  1903               	btfsc	3,2
  7347  17E2  2FEA               	goto	l6538
  7348  17E3  1003               	clrc
  7349  17E4  0DA8               	rlf	__div_to_l_@quot,f
  7350  17E5  0DA9               	rlf	__div_to_l_@quot+1,f
  7351  17E6  0DAA               	rlf	__div_to_l_@quot+2,f
  7352  17E7  0DAB               	rlf	__div_to_l_@quot+3,f
  7353  17E8  03AD               	decf	__div_to_l_@exp1,f
  7354  17E9  2FE0               	goto	l3648
  7355  17EA                     l6538:	
  7356  17EA  082B               	movf	__div_to_l_@quot+3,w
  7357  17EB  00F6               	movwf	?__div_to_l_+3
  7358  17EC  082A               	movf	__div_to_l_@quot+2,w
  7359  17ED  00F5               	movwf	?__div_to_l_+2
  7360  17EE  0829               	movf	__div_to_l_@quot+1,w
  7361  17EF  00F4               	movwf	?__div_to_l_+1
  7362  17F0  0828               	movf	__div_to_l_@quot,w
  7363  17F1  00F3               	movwf	?__div_to_l_
  7364  17F2  0008               	return
  7365  17F3                     __end_of__div_to_l_:	
  7366  17F3                     PL4:	
  7367  17F3  0084               	movwf	4
  7368  17F4  0800               	movf	0,w
  7369  17F5  00A0               	movwf	??__div_to_l_
  7370  17F6  0A84               	incf	4,f
  7371  17F7  0800               	movf	0,w
  7372  17F8  00A1               	movwf	??__div_to_l_+1
  7373  17F9  0A84               	incf	4,f
  7374  17FA  0800               	movf	0,w
  7375  17FB  00A2               	movwf	??__div_to_l_+2
  7376  17FC  0A84               	incf	4,f
  7377  17FD  0800               	movf	0,w
  7378  17FE  00A3               	movwf	??__div_to_l_+3
  7379  17FF  0008               	return
  7380                           
  7381                           	psect	text935
  7382  15AF                     __ptext935:	
  7383 ;; =============== function _isdigit ends ============
  7384                           
  7385                           
  7386 ;; *************** function _rx *****************
  7387 ;; Defined at:
  7388 ;;		line 141 in file "D:\TTVXL\Project TTVXL\BT01week16ttvxlbuoi1\BT01week16ttvxlbuoi1.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;		None
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;		None
  7393 ;; Return value:  Size  Location     Type
  7394 ;;		None               void
  7395 ;; Registers used:
  7396 ;;		wreg
  7397 ;; Tracked objects:
  7398 ;;		On entry : 60/0
  7399 ;;		On exit  : 60/0
  7400 ;;		Unchanged: FFF9F/0
  7401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7402 ;;      Params:         0       0       0       0       0
  7403 ;;      Locals:         0       0       0       0       0
  7404 ;;      Temps:          0       0       0       0       0
  7405 ;;      Totals:         0       0       0       0       0
  7406 ;;Total ram usage:        0 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    1
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_main
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415  15AF                     _rx:	
  7416                           
  7417                           ;BT01week16ttvxlbuoi1.c: 142: SYNC = 0; BRGH = 1; BRG16 = 1;
  7418                           
  7419                           ; Regs used in _rx: [wreg]
  7420  15AF  1683               	bsf	3,5	;RP0=1, select bank1
  7421  15B0  1218               	bcf	24,4
  7422  15B1  1518               	bsf	24,2
  7423  15B2  1703               	bsf	3,6	;RP1=1, select bank3
  7424  15B3  3002               	movlw	2
  7425  15B4  1587               	bsf	7,3
  7426                           
  7427                           ;BT01week16ttvxlbuoi1.c: 143: SPBRGH = 0x02;
  7428  15B5  1303               	bcf	3,6	;RP1=0, select bank1
  7429  15B6  009A               	movwf	26	;volatile
  7430                           
  7431                           ;BT01week16ttvxlbuoi1.c: 144: SPBRG = 0x08;
  7432  15B7  3008               	movlw	8
  7433  15B8  0099               	movwf	25	;volatile
  7434                           
  7435                           ;BT01week16ttvxlbuoi1.c: 145: CREN = 1; RX9 = 0; SPEN = 1;
  7436  15B9  1283               	bcf	3,5	;RP0=0, select bank0
  7437  15BA  1618               	bsf	24,4
  7438  15BB  1318               	bcf	24,6
  7439  15BC  1798               	bsf	24,7
  7440                           
  7441                           ;BT01week16ttvxlbuoi1.c: 147: RCIE=1; RCIF=0; PEIE=1; GIE=1;
  7442  15BD  1683               	bsf	3,5	;RP0=1, select bank1
  7443  15BE  168C               	bsf	12,5
  7444  15BF  1283               	bcf	3,5	;RP0=0, select bank0
  7445  15C0  128C               	bcf	12,5
  7446  15C1  170B               	bsf	11,6
  7447  15C2  178B               	bsf	11,7
  7448  15C3  0008               	return
  7449  15C4                     __end_of_rx:	
  7450                           
  7451                           	psect	text936
  7452  0802                     __ptext936:	
  7453 ;; =============== function _rx ends ============
  7454                           
  7455                           
  7456 ;; *************** function _tx *****************
  7457 ;; Defined at:
  7458 ;;		line 134 in file "D:\TTVXL\Project TTVXL\BT01week16ttvxlbuoi1\BT01week16ttvxlbuoi1.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;		None
  7461 ;; Auto vars:     Size  Location     Type
  7462 ;;		None
  7463 ;; Return value:  Size  Location     Type
  7464 ;;		None               void
  7465 ;; Registers used:
  7466 ;;		wreg
  7467 ;; Tracked objects:
  7468 ;;		On entry : 60/0
  7469 ;;		On exit  : 60/0
  7470 ;;		Unchanged: FFF9F/0
  7471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7472 ;;      Params:         0       0       0       0       0
  7473 ;;      Locals:         0       0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0
  7475 ;;      Totals:         0       0       0       0       0
  7476 ;;Total ram usage:        0 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    1
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_main
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485  0802                     _tx:	
  7486                           
  7487                           ;BT01week16ttvxlbuoi1.c: 135: SYNC = 0; BRGH = 1; BRG16 = 1;
  7488                           
  7489                           ; Regs used in _tx: [wreg]
  7490  0802  1683               	bsf	3,5	;RP0=1, select bank1
  7491  0803  1218               	bcf	24,4
  7492  0804  1518               	bsf	24,2
  7493  0805  1703               	bsf	3,6	;RP1=1, select bank3
  7494  0806  3002               	movlw	2
  7495  0807  1587               	bsf	7,3
  7496                           
  7497                           ;BT01week16ttvxlbuoi1.c: 136: SPBRGH = 0x02;
  7498  0808  1303               	bcf	3,6	;RP1=0, select bank1
  7499  0809  009A               	movwf	26	;volatile
  7500                           
  7501                           ;BT01week16ttvxlbuoi1.c: 137: SPBRG = 0x08;
  7502  080A  3008               	movlw	8
  7503  080B  0099               	movwf	25	;volatile
  7504                           
  7505                           ;BT01week16ttvxlbuoi1.c: 138: TXEN = 1; TX9 = 0; SPEN = 1;
  7506  080C  1698               	bsf	24,5
  7507  080D  1318               	bcf	24,6
  7508  080E  1283               	bcf	3,5	;RP0=0, select bank0
  7509  080F  1798               	bsf	24,7
  7510  0810  0008               	return
  7511  0811                     __end_of_tx:	
  7512                           
  7513                           	psect	text938
  7514  15C4                     __ptext938:	
  7515 ;; =============== function _isprint ends ============
  7516                           
  7517                           
  7518 ;; *************** function _ngat *****************
  7519 ;; Defined at:
  7520 ;;		line 87 in file "D:\TTVXL\Project TTVXL\BT01week16ttvxlbuoi1\BT01week16ttvxlbuoi1.c"
  7521 ;; Parameters:    Size  Location     Type
  7522 ;;		None
  7523 ;; Auto vars:     Size  Location     Type
  7524 ;;		None
  7525 ;; Return value:  Size  Location     Type
  7526 ;;		None               void
  7527 ;; Registers used:
  7528 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 60/0
  7532 ;;		Unchanged: FFE9F/0
  7533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7534 ;;      Params:         0       0       0       0       0
  7535 ;;      Locals:         0       0       0       0       0
  7536 ;;      Temps:          3       0       0       0       0
  7537 ;;      Totals:         3       0       0       0       0
  7538 ;;Total ram usage:        3 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; This function calls:
  7541 ;;		Nothing
  7542 ;; This function is called by:
  7543 ;;		Interrupt level 1
  7544 ;; This function uses a non-reentrant model
  7545 ;;
  7546  15C4                     _ngat:	
  7547                           
  7548                           ;BT01week16ttvxlbuoi1.c: 88: if(T0IF)
  7549  15C4  1D0B               	btfss	11,2
  7550  15C5  2DDB               	goto	L22
  7551                           
  7552                           ;BT01week16ttvxlbuoi1.c: 89: { TMR0 = 6;
  7553  15C6  3006               	movlw	6
  7554  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  7555  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  7556  15C9  0081               	movwf	1	;volatile
  7557                           
  7558                           ;BT01week16ttvxlbuoi1.c: 90: dem++;
  7559  15CA  0AE9               	incf	_dem,f
  7560  15CB  1903               	skipnz
  7561  15CC  0AEA               	incf	_dem+1,f
  7562                           
  7563                           ;BT01week16ttvxlbuoi1.c: 91: if(dem == 250)
  7564  15CD  0869               	movf	_dem,w
  7565  15CE  3AFA               	xorlw	250
  7566  15CF  046A               	iorwf	_dem+1,w
  7567  15D0  1D03               	skipz
  7568  15D1  2DDA               	goto	i1l6412
  7569                           
  7570                           ;BT01week16ttvxlbuoi1.c: 92: {
  7571                           ;BT01week16ttvxlbuoi1.c: 93: dem = 0;
  7572  15D2  01E9               	clrf	_dem
  7573  15D3  01EA               	clrf	_dem+1
  7574                           
  7575                           ;BT01week16ttvxlbuoi1.c: 94: xung = TMR1;
  7576  15D4  080F               	movf	15,w	;volatile
  7577  15D5  00EE               	movwf	_xung+1	;volatile
  7578  15D6  080E               	movf	14,w	;volatile
  7579  15D7  00ED               	movwf	_xung	;volatile
  7580                           
  7581                           ;BT01week16ttvxlbuoi1.c: 95: TMR1 = 0;
  7582  15D8  018E               	clrf	14	;volatile
  7583  15D9  018F               	clrf	15	;volatile
  7584  15DA                     i1l6412:	
  7585                           
  7586                           ;BT01week16ttvxlbuoi1.c: 96: }
  7587                           ;BT01week16ttvxlbuoi1.c: 97: }
  7588                           ;BT01week16ttvxlbuoi1.c: 98: T0IF = 0;
  7589  15DA  110B               	bcf	11,2
  7590  15DB                     L22:	
  7591                           
  7592                           ;BT01week16ttvxlbuoi1.c: 100: if (RCIF){
  7593  15DB  1283               	bcf	3,5	;RP0=0, select bank0
  7594  15DC  1303               	bcf	3,6	;RP1=0, select bank0
  7595  15DD  1E8C               	btfss	12,5
  7596  15DE  2E09               	goto	L23
  7597                           
  7598                           ;BT01week16ttvxlbuoi1.c: 102: data_rx[a]=RCREG;
  7599  15DF  0879               	movf	_a,w
  7600  15E0  3EB9               	addlw	_data_rx& (0+255)
  7601  15E1  0084               	movwf	4
  7602  15E2  081A               	movf	26,w	;volatile
  7603  15E3  1383               	bcf	3,7	;select IRP bank1
  7604  15E4  0080               	movwf	0
  7605                           
  7606                           ;BT01week16ttvxlbuoi1.c: 103: a++;
  7607  15E5  0AF9               	incf	_a,f
  7608  15E6  1903               	skipnz
  7609  15E7  0AFA               	incf	_a+1,f
  7610                           
  7611                           ;BT01week16ttvxlbuoi1.c: 104: if (a==5) {a=0;}
  7612  15E8  0879               	movf	_a,w
  7613  15E9  3A05               	xorlw	5
  7614  15EA  047A               	iorwf	_a+1,w
  7615  15EB  1D03               	skipz
  7616  15EC  2DEF               	goto	i1l6424
  7617  15ED  01F9               	clrf	_a
  7618  15EE  01FA               	clrf	_a+1
  7619  15EF                     i1l6424:	
  7620                           
  7621                           ;BT01week16ttvxlbuoi1.c: 105: if (RCREG == 'S') {RE0=1;RE1=0;RE2 = 0; TMR2ON=0;}
  7622  15EF  081A               	movf	26,w
  7623  15F0  3A53               	xorlw	83
  7624  15F1  1D03               	skipz
  7625  15F2  2DF8               	goto	i1l6428
  7626  15F3  1409               	bsf	9,0
  7627  15F4  1089               	bcf	9,1
  7628  15F5  1109               	bcf	9,2
  7629  15F6  1112               	bcf	18,2
  7630  15F7  2E08               	goto	i1l2161
  7631  15F8                     i1l6428:	
  7632                           
  7633                           ;BT01week16ttvxlbuoi1.c: 106: else if (RCREG == 'L') {RE0=1;RE1=0;RE2 = 1; TMR2ON=1;}
  7634  15F8  081A               	movf	26,w
  7635  15F9  3A4C               	xorlw	76
  7636  15FA  1D03               	skipz
  7637  15FB  2E00               	goto	i1l6432
  7638  15FC  1409               	bsf	9,0
  7639  15FD  1089               	bcf	9,1
  7640  15FE  1509               	bsf	9,2
  7641  15FF  2E07               	goto	L21
  7642  1600                     i1l6432:	
  7643                           
  7644                           ;BT01week16ttvxlbuoi1.c: 107: else if (RCREG == 'R') {RE0=0;RE1=1;RE2 = 0; TMR2ON=1;}
  7645  1600  081A               	movf	26,w
  7646  1601  3A52               	xorlw	82
  7647  1602  1D03               	skipz
  7648  1603  2E08               	goto	i1l2161
  7649  1604  1009               	bcf	9,0
  7650  1605  1489               	bsf	9,1
  7651  1606  1109               	bcf	9,2
  7652  1607                     L21:	
  7653  1607  1512               	bsf	18,2
  7654  1608                     i1l2161:	
  7655                           
  7656                           ;BT01week16ttvxlbuoi1.c: 110: }
  7657                           ;BT01week16ttvxlbuoi1.c: 111: RCIF=0;
  7658  1608  128C               	bcf	12,5
  7659  1609                     L23:	
  7660  1609  0872               	movf	??_ngat+2,w
  7661  160A  008A               	movwf	10
  7662  160B  0871               	movf	??_ngat+1,w
  7663  160C  0084               	movwf	4
  7664  160D  0E70               	swapf	??_ngat^(0+-128),w
  7665  160E  0083               	movwf	3
  7666  160F  0EFE               	swapf	126,f
  7667  1610  0E7E               	swapf	126,w
  7668  1611  0009               	retfie
  7669  1612                     __end_of_ngat:	
  7670                           
  7671                           	psect	intentry
  7672  0004                     __pintentry:	
  7673                           ; Regs used in _ngat: [wreg-fsr0h+status,2+status,0]
  7674                           
  7675  0004                     interrupt_function:	
  7676  007E                     saved_w	set	btemp
  7677  0004  00FE               	movwf	btemp
  7678  0005  0E03               	swapf	3,w
  7679  0006  00F0               	movwf	??_ngat
  7680  0007  0804               	movf	4,w
  7681  0008  00F1               	movwf	??_ngat+1
  7682  0009  080A               	movf	10,w
  7683  000A  00F2               	movwf	??_ngat+2
  7684  000B  160A  118A  2DC4   	ljmp	_ngat
  7685                           
  7686                           	psect	text939
  7687  0000                     __ptext939:	
  7688 ;; =============== function _ngat ends ============
  7689                           
  7690  007E                     btemp	set	126	;btemp
  7691  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 18 00:28:19 2022

                    _a 0079                      _v 00C3                      pc 0002         ___bmul@product 0024  
         ___awdiv@sign 0025                     _rx 15AF                     _tx 0802                     fsr 0004  
  ___wmul@multiplicand 0075           ___ftadd@exp1 004F           ___ftadd@exp2 004E          ?_lcd_put_byte 0073  
         ___ftadd@sign 004D                    ?_rx 0070                    ?_tx 0070                    _GIE 005F  
                  _RD1 0041                    _RE0 0048                    _RD2 0042                    _RE1 0049  
                  _RD3 0043                    _RE2 004A                    _RD4 0044                    _RD5 0045  
                  _RD6 0046                    _RD7 0047                    _PS0 0408                    _PR2 0092  
                  _PS1 0409                    _PS2 040A                    _PSA 040B                    _RX9 00C6  
                  _TX9 04C6                    _dem 0069                    fsr0 0004                    indf 0000  
         ___awmod@sign 0078                   ??_rx 0073                   ??_tx 0073           ___ftdiv@cntr 002F  
         ___ftdiv@sign 0034                   l1056 0000                   l1090 0000                   l1067 0000  
                 l1059 0000                   l2171 0000                   l2251 00A3                   l2332 0563  
                 l2236 002F                   l2191 0000                   l2194 0000                   l3411 16EF  
                 l3332 0000                   l3500 0000                   l3510 0000                   l3440 0C92  
                 l3337 0000                   l3353 0000                   l3433 0000                   l2297 0379  
                 l3514 0000                   l3347 0000                   l3380 0A2C                   l3605 07DF  
                 l3383 0000                   l3640 17C1                   l3641 0000                   l3529 0000  
                 l3467 0635                   l3389 0000                   l3590 0000                   l3487 0000  
                 l3648 17E0                   l3568 0000                   l8000 0000                   l8010 16D7  
                 l6500 1750                   l8012 0000                   l8004 16C9                   l3598 0000  
                 l6510 0000                   l8030 1705                   l8022 0000                   l8006 16CE  
                 l8110 0000                   l8102 0F0E                   l6360 0000                   l6520 0000  
                 l6512 0000                   l6600 0000                   l8040 0000                   l8032 0000  
                 l8024 16FA                   l8016 16E6                   l8008 16D3                   l8120 0F1F  
                 l8112 0000                   l8104 0000                   l8200 0B5F                   l6370 0000  
                 l6450 0788                   l6530 0000                   l6522 0000                   l6514 1781  
                 l6506 0000                   l6610 0A53                   l6602 0A3F                   l8042 1721  
                 l8034 0000                   l8018 16EB                   l8130 0000                   l8114 0000  
                 l8106 0000                   l8210 0A75                   l6372 0000                   l6380 0000  
                 l6444 05E0                   l6436 0000                   l6460 0000                   l6452 078D  
                 l6532 17DC                   l6516 0000                   l6508 0000                   l6612 0000  
                 l6604 0000                   l8028 0000                   l8060 0000                   l8052 0C81  
                 l8140 0000                   l8132 0F35                   l8124 0F29                   l8116 0000  
                 l8108 0000                   l8204 0B6B                   l8212 0A76                   l6366 0C35  
                 l6358 0000                   l6374 0000                   l6390 0000                   l6382 0000  
                 l6438 0000                   l6462 0000                   l6606 0000                   l8038 0000  
                 l8070 0000                   l8062 0000                   l8046 0000                   l8142 0000  
                 l8126 0000                   l8118 0000                   l8214 0000                   l8206 0000  
                 l8222 0000                   l8302 0AAC                   l6376 0000                   l6392 0000  
                 l6384 0000                   l6472 0000                   l6464 0000                   l6456 0000  
                 l6448 0000                   l6528 17D4                   l6560 05E4                   l6720 0000  
                 l6712 0000                   l6800 0000                   l8080 0000                   l8072 0000  
                 l8064 0000                   l8136 0F3F                   l8128 0000                   l8152 0000  
                 l8216 0A7F                   l8208 0000                   l8232 0000                   l8240 0000  
                 l8304 0000                   l8400 0195                   l8320 003C                   l8312 002A  
                 l6378 0000                   l6394 0000                   l6386 0000                   l6482 07D3  
                 l6466 07AA                   l6458 0000                   l6538 17EA                   l6650 0000  
                 l6722 0EAA                   l6706 0E8B                   l6802 0000                   l8074 0000  
                 l8066 0000                   l8058 0000                   l8138 0000                   l8090 0000  
                 l8154 0C5F                   l8146 0000                   l8162 06A8                   l8170 0000  
                 l8218 0000                   l8330 006C                   l8314 0000                   l8306 0000  
                 l6396 0000                   l6388 0000                   l6492 07E9                   l6484 0000  
                 l6476 0000                   l6468 0000                   l6564 05EC                   l6580 0A26  
                 l6652 0000                   l6644 0000                   l6716 0000                   l6708 0000  
                 l6820 0ECC                   l6812 0EC0                   l8084 0000                   l8076 0CA5  
                 l8068 0000                   l8148 0000                   l8164 06B3                   l8180 0B23  
                 l8172 0000                   l8236 09FA                   l8228 09A6                   l8252 0D48  
                 l8244 0000                   l8500 0000                   l8412 01F4                   l8404 01C9  
                 l8340 0000                   l8324 004A                   l6486 07DB                   l6566 0000  
                 l6558 0000                   l6574 0000                   l6654 0000                   l6646 0605  
                 l6718 0EA2                   l6830 0000                   l6806 0000                   l8086 0000  
                 l8158 0000                   l8174 0000                   l8270 0E0E                   l8262 0DA4  
                 l8502 0406                   l8430 0000                   l8422 0000                   l8350 00A5  
                 l8342 007A                   l8334 0000                   l8326 0000                   l8318 0031  
                 l6496 0000                   l6568 0000                   l6592 0000                   l6584 0000  
                 l6576 0000                   l6664 0629                   l6656 0000                   l6648 060A  
                 l6832 0EE7                   l6808 0EB9                   l8096 0EFD                   l8192 0B47  
                 l8184 0B2F                   l8176 0000                   l8168 0000                   l8280 0000  
                 l8520 0444                   l8512 0000                   l8432 0276                   l8424 0000  
                 l8416 0205                   l8360 0000                   l8504 0414                   l8352 00BB  
                 l8336 0000                   l8344 009F                   l8328 0000                   l8600 0000  
                 l6498 174B                   l7802 0000                   l6578 0000                   l6594 0A39  
                 l7810 0000                   l6674 063F                   l6666 0000                   l6658 0000  
                 l6690 0E74                   l6682 0000                   l6746 0000                   l6762 05C6  
                 l6754 0000                   l6826 0000                   l8178 0000                   l8258 0D8D  
                 l8282 0000                   l8290 0A8E                   l8514 0438                   l8506 0000  
                 l8426 0000                   l8370 0000                   l8362 0000                   l8346 0000  
                 l8610 0000                   l8602 0000                   l7804 0000                   l6588 0000  
                 l7820 0F7A                   l7812 0000                   l6676 0000                   l6668 0631  
                 l6684 0000                   l6764 0000                   l6828 0EDF                   l7900 0BA4  
                 l8196 0B53                   l8188 0B3B                   l8276 0E53                   l8292 0A95  
                 l8532 0000                   l8508 0000                   l8460 02E0                   l8452 02D5  
                 l8444 0000                   l8428 0235                   l8380 0000                   l8620 0000  
                 l8612 0000                   l8604 0000                   l6598 0000                   l7822 0F7F  
                 l7814 0F71                   l6678 064D                   l6694 0000                   l6766 0000  
                 l6758 05B7                   l7910 0BD2                   l7902 0BAF                   l8294 0A99  
                 l8286 0000                   l8542 04A6                   l8534 047A                   l8526 0446  
                 l8462 0000                   l8470 02FE                   l8446 02AC                   l8438 0278  
                 l8390 0000                   l8382 0000                   l8374 0000                   l8366 0000  
                 l8358 00CB                   l8630 0000                   l8622 0000                   l8614 0000  
                 l8606 0000                   l7832 0000                   l7824 0F89                   l6696 0E7D  
                 l6688 0000                   l7912 0BDD                   l7904 0000                   l7920 0000  
                 l8288 0A88                   l8560 04EC                   l8464 02E9                   l8456 02DD  
                 l8448 0000                   l8392 0000                   l8384 0000                   l8376 0000  
                 l8368 00F7                   l8640 0000                   l8632 0000                   l8624 0000  
                 l8616 0000                   l8608 0000                   l7834 0000                   l7826 0F8E  
                 l7818 0F75                   l6698 0000                   l7914 0BEA                   l7906 0000  
                 l7930 0000                   l7922 0000                   l6890 0000                   l8298 0AA5  
                 l8562 04EF                   l8554 04CD                   l8538 048E                   l8490 0364  
                 l8482 0000                   l8466 02F5                   l8378 0000                   l8650 0000  
                 l8642 0000                   l8634 0000                   l8626 0000                   l8618 0000  
                 l7836 0000                   l7828 0F93                   l7852 0000                   l7860 0000  
                 l7916 0000                   l7908 0000                   l7924 0000                   l6892 0000  
                 l7940 161E                   l8580 0519                   l8572 0000                   l8556 04D0  
                 l8548 04B3                   l8492 0000                   l8484 0340                   l8476 0310  
                 l8468 0000                   l8396 0185                   l8388 014C                   l8660 0000  
                 l8652 0000                   l8644 0000                   l8636 0000                   l8628 0000  
                 l7846 057A                   l7854 059F                   l7838 0000                   l7870 0000  
                 l7918 0000                   l7926 0000                   l6886 0000                   l7950 165D  
                 l7934 0000                   l8574 0508                   l8494 039B                   l8486 0355  
                 l8478 033C                   l8670 0000                   l8662 0000                   l8654 0000  
                 l8646 0000                   l8638 0000                   l8590 0000                   l7880 0695  
                 l7928 0000                   l6888 0000                   l7960 0000                   l7944 0000  
                 l7936 161C                   l8576 050C                   l8568 04F9                   l8680 0000  
                 l8672 0887                   l8664 0000                   l8656 0000                   l8648 0000  
                 l8592 0000                   l7794 0000                   l7874 0000                   l7858 0000  
                 l7938 1615                   l7970 0000                   l8578 0000                   l8586 0521  
                 l8690 0000                   l8682 0000                   l8666 0000                   l8658 0000  
                 l8594 0000                   l7796 0F5D                   l7868 066A                   l7892 0000  
                 l7884 0000                   l7964 166E                   l7956 1635                   l7948 162F  
                 l7980 169D                   l7972 0000                   l8588 0015                   l8692 0000  
                 l8668 0000                   l8596 0000                   l7878 0000                   l7894 0000  
                 l7886 0000                   l7958 165F                   l7982 0000                   l8694 0000  
                 l8686 0000                   l8678 088B                   l8598 0000                   l7896 0000  
                 l7888 0000                   l7976 1696                   l7968 0000                   l8696 0000  
                 l8688 0000                   l7898 0B97                   l7994 0000                   l7986 16AC  
                 l7996 0000                   l7988 0000                   l7998 16BA                   STR_1 1087  
                 STR_2 107C                   _BRGH 04C2                   _T0IE 005D                   _T0IF 005A  
                 _CREN 00C4                   _T0CS 040D                   u2285 07B9                   u2630 0000  
                 u2375 17A5                   u2635 060E                   u4405 0588                   u4510 0BAD  
                 u5310 0000                   u2745 0E94                   u4610 0BF3                   u4530 0BB9  
                 u5315 010A                   _PEIE 005E                   u4445 067D                   _INTE 005C  
                 u4550 0BD0                   u4470 0B95                   _INTF 0059                   u2935 0ED2  
                 u5415 02A5                   u4624 0BF5                   u4544 0BBB                   u5505 0349  
                 u4570 0BDB                   u4490 0BA2                   u5515 035F                   u5355 019E  
                 _RCIE 0465                   _RCIF 0065                   u5605 0488                   u5365 01D3  
                 u4590 0BE8                   u5615 049E                   u5465 02F2                   u4915 0CB3  
                 u5475 0307                   u5395 01F2                   u5807 0AED                   u5655 04C3  
                 u5817 0B00                   u5665 04DE                   u5585 0473                   u5907 0BBD  
                 u5827 0B0E                   u5917 0BC3                   u5837 0B1C                   u5765 08A5  
                 u5927 0BF7                   u5847 0C0D                   u5937 0BFD                   u5857 0C13  
                 u5777 0869                   u5867 0C1D                   u5787 0AC7                   u5877 0C23  
                 u5797 0ADA                   u5887 0B80                   u5897 0B86                   _TMR0 0001  
                 _TMR1 000E                   _TMR2 0011                   _SPEN 00C7                   _TXEN 04C5  
                 _SYNC 04C4                   _WPUB 0095                   _atoi 1612                   _main 082B  
                 _ngat 15C4           ___ftpack@arg 0073           ___ftpack@exp 0076           lcd_busy@busy 0074  
                 btemp 007E                   _xung 006D                   start 000E      ___bmul@multiplier 0025  
         ___ftmul@cntr 0042           ___ftmul@sign 0043           main@data_pwm 0064           ___fttol@exp1 0034  
         ___fttol@lval 0030         ??_lcd_put_byte 0074                  _DC1B0 00BC                  _DC1B1 00BD  
                ?_atoi 0020                  ?_main 0070                  ?_ngat 0070        __end_of___awdiv 0EAF  
      __end_of___lbdiv 0A3B        __end_of___ftadd 1735                  _BRG16 0C3B        __end_of___awmod 0EEC  
      __end_of___lbmod 0A57        __end_of___ftdiv 0CD8        __end_of___ftneg 06A6                  _ANSEL 0188  
      __end_of___lldiv 069E        __end_of___ftmul 0F5B        ___awdiv@divisor 0020        __end_of___llmod 05A8  
      __end_of___ftsub 06DE        __end_of___fttol 0656        ___awdiv@counter 0024                  _RCREG 001A  
                _SPBRG 0099           ___lltoft@exp 0078                  _nRBPU 040F          ___awtoft@sign 0078  
                _scale 0CD8        __end_of_isdigit 05E2          ___ftpack@sign 0077                  atoi@a 0025  
                atoi@s 0027                  _pwm_t 006B                  _putch 0564                  main@b 0067  
      __end_of_isprint 0C37                  pclath 000A                  status 0003                  wtemp0 007E  
      ___lbdiv@divisor 0078        ___lbdiv@counter 0021           __end_of_atoi 1673           __end_of_main 091B  
         __end_of_ngat 1612          lcd_gotoxy@col 0020          lcd_gotoxy@row 0078                 ??_atoi 0022  
               ??_main 0062          ___fttol@sign1 002F                 ??_ngat 0070   __size_of__tdiv_to_l_ 0078  
     ___llmod@dividend 002C                 ?_scale 0044                 _CCPR1L 0015       ___awdiv@dividend 0022  
     __end_of___awtoft 0C70                 ?_putch 0070       __end_of___ftpack 0FA7                 _ANSELH 0189  
     __end_of___lltoft 06C6                 i1l2161 1608                 i1l2168 0000                 _T1SYNC 0082  
               i1l6410 0000                 i1l6402 0000                 i1l6420 0000                 i1l6404 0000  
               i1l6412 15DA                 i1l6414 0000                 i1l6432 1600                 i1l6424 15EF  
               i1l6408 0000                 i1l6418 0000                 i1l6428 15F8                 i1l6398 0000  
               _TMR1GE 0086                 _TMR1CS 0081                 _SPBRGH 009A                 _TMR1ON 0080  
               _TMR2ON 0092                 _TRISB0 0430                 _TRISC2 043A                 _TRISD1 0441  
               _TRISE0 0448                 _TRISD2 0442                 _TRISE1 0449                 _TRISD3 0443  
               _TRISE2 044A                 _TRISD4 0444                 _TRISD5 0445                 _TRISD6 0446  
               _TRISD7 0447       __end_of_lcd_busy 0C29       __end_of_lcd_init 0B72       __end_of_lcd_putc 0AB5  
               ___bmul 0F5B                 ___ftge 05A8                 ___wmul 05E2              ??___awdiv 0079  
            ??___lbdiv 0079              ??___ftadd 004A              ??___awmod 0077              ??___lbmod 0074  
            ??___ftdiv 002C              ??___ftneg 0076              ??___lldiv 0073              ??___ftmul 003B  
            ??___llmod 0078              ??___ftsub 0079              ??___fttol 002C                 _fround 091B  
     ___awdiv@quotient 0026        ___awmod@divisor 0073        ___awmod@counter 0077                 _printf 0011  
        lcd_put_byte@b 0073  ___ftmul@f3_as_product 003F              ??_isdigit 0073                 saved_w 007E  
            ??_isprint 0073                 putch@c 0023       ___lbdiv@dividend 0020        ___lbmod@divisor 0073  
      ___lbmod@counter 0076   __end_of_lcd_put_byte 0C02             ___ftadd@f1 0044             ___ftadd@f2 0047  
           ___ftge@ff1 0073             ___ftge@ff2 0076             ___ftdiv@f1 0029             ___ftdiv@f2 0026  
           ___ftdiv@f3 0030             ___ftneg@f1 0073             ___awtoft@c 0023    ___bmul@multiplicand 0023  
           ___ftmul@f1 0035             ___ftmul@f2 0038             ___ftsub@f1 0053             ___ftsub@f2 0050  
           ___fttol@f1 0028         __pcstackCOMMON 0070             ___lltoft@c 0023          __end_of_scale 0E6A  
        __end_of_putch 056A       ___lbdiv@quotient 0022             __end_of_rx 15C4             __end_of_tx 0811  
           __div_to_l_ 1735      lcd_gotoxy@address 0021        __div_to_l_@exp1 002D        __div_to_l_@cntr 002C  
              ??_scale 0047        __div_to_l_@quot 0028                ??_putch 0079             __pbssBANK0 0069  
           __pbssBANK1 00B9          __div_to_l_@f1 0073          __div_to_l_@f2 0076             __pmaintext 082B  
              ?___bmul 0023                ?___ftge 0073                ?___wmul 0073             __pintentry 0004  
              _CCP1CON 0017     __size_of_pwm_10bit 0014                ?_fround 0050              ?___awtoft 0023  
            ?___ftpack 0073                ?_printf 005A              ?___lltoft 0023                _T1CKPS0 0084  
              _T1CKPS1 0085                _T2CKPS0 0090                _T2CKPS1 0091             _lcd_gotoxy 0A6D  
            ?_lcd_busy 0070              ?_lcd_init 0070              ?_lcd_putc 0070             _scale$4149 004B  
      __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0E6A                ___lbdiv 0A20  
              ___ftadd 1673                ___awmod 0EAF                ___lbmod 0A3B                ___ftdiv 0C70  
              ___ftneg 069E                ___lldiv 0656        __size_of___wmul 0019                ___ftmul 0EEC  
              ___llmod 056A                ___ftsub 06C6                ___fttol 05FB                _data_rx 00B9  
           ??___awtoft 0078             ??___ftpack 0020        __size_of_fround 0105             ??___lltoft 0078  
      __size_of_printf 0553            ?__div_to_l_ 0073                _dpowers 1054                _isdigit 05D4  
     ___awmod@dividend 0075                _isprint 0C29  __size_of_lcd_put_byte 0090             ??_lcd_busy 0073  
           ??_lcd_init 0020             ??_lcd_putc 0079   end_of_initialization 0827         lcd_put_byte@rs 0076  
    __end_of_pwm_10bit 0C55        ___lldiv@divisor 0020        ___lldiv@counter 0077                printf@c 00B8  
              printf@f 00A8         __tdiv_to_l_@f1 0073         __tdiv_to_l_@f2 0076          ??__tdiv_to_l_ 0020  
         _lcd_put_byte 0B72       ___lbmod@dividend 0075            ?_lcd_gotoxy 0078            ___lbmod@rem 0077  
          printf@integ 00A5            ___ftdiv@exp 0033            printf@width 00B1    __size_of__div_to_l_ 00BE  
          ___ftmul@exp 003E         __end_of___bmul 0F69         __end_of___ftge 05D4         __end_of___wmul 05FB  
       __end_of_fround 0A20         __end_of_printf 0564    start_initialization 0811    __end_of__tdiv_to_l_ 07F2  
      ___llmod@divisor 0028        ___llmod@counter 0078               ??___bmul 0079               ??___ftge 0079  
  __size_of_lcd_gotoxy 0019               ??___wmul 0077               ??_fround 0079               ??_printf 005D  
           fround@prec 0059      __size_of___awtoft 001B      __size_of___ftpack 003E      __size_of___lltoft 0020  
          __pbssCOMMON 0079          __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3697 0073  
    __size_of_lcd_busy 0027      __size_of_lcd_init 00BD      __size_of_lcd_putc 002F               ?___awdiv 0020  
             ?___lbdiv 0078               ?___ftadd 0044               ?___awmod 0073               ?___lbmod 0073  
            __ptext910 0AB5              __ptext911 06A6              __ptext903 0011              __ptext920 0EAF  
            __ptext912 0C55              __ptext904 0564              __ptext921 0656              __ptext913 0EEC  
            __ptext905 0A86              __ptext930 05E2              __ptext922 05A8              __ptext914 0C70  
            __ptext906 06C6              __ptext931 0F5B              __ptext923 069E              __ptext915 1673  
            __ptext907 0CD8              __ptext932 1735              __ptext924 056A              __ptext916 1612  
            __ptext908 091B              __ptext933 077A              __ptext925 0E6A              __ptext917 0C41  
            __ptext909 0A6D              __ptext934 05D4              __ptext926 05FB              __ptext918 0C02  
            __ptext935 15AF              __ptext927 0F69              __ptext919 0B72              __ptext936 0802  
            __ptext928 0A3B              __ptext937 0C29              __ptext929 0A20              __ptext938 15C4  
            __ptext939 0000               ?___ftdiv 0026               ?___ftneg 0073               ?___lldiv 0020  
             ?___ftmul 0035               ?___llmod 0028               ?___ftsub 0050              __npowers_ 1006  
             ?___fttol 0028              __pstrings 1000            __tdiv_to_l_ 077A           ??__div_to_l_ 0020  
             ?_isdigit 0070               ?_isprint 0070         __size_of_scale 0192         __size_of_putch 0006  
          __size_of_rx 0015            __size_of_tx 000F      interrupt_function 0004         ___wmul@product 0077  
            _pwm_10bit 0C41     __end_of__div_to_l_ 17F3            __stringbase 1005      ___wmul@multiplier 0073  
           printf@_val 00A9             printf@flag 00AD             printf@fval 00B3             printf@prec 00B6  
            lcd_putc@c 0022           ??_lcd_gotoxy 0079           pwm_10bit@pwm 0028       lcd_put_byte@temp 0077  
         _isprint$3700 0073             ?_pwm_10bit 0028     __end_of_lcd_gotoxy 0A86       __size_of___awdiv 0045  
     __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C  
     __size_of___ftdiv 0068       __size_of___ftneg 0008       __size_of___lldiv 0048       __size_of___ftmul 006F  
     __size_of___llmod 003E       __size_of___ftsub 0018       __size_of___fttol 005B               ___awtoft 0C55  
             ___ftpack 0F69            _fround$4147 0056            _fround$4148 0053               ___lltoft 06A6  
     __size_of_isdigit 000E       __size_of_isprint 000E               __powers_ 102D               _lcd_busy 0C02  
             _lcd_init 0AB5               _lcd_putc 0A86          __size_of_atoi 0061          __size_of_main 00F0  
        __size_of_ngat 004E               atoi@sign 0024              printf@exp 00AF               isdigit@c 0074  
             scale@scl 004E               intlevel1 0000       __tdiv_to_l_@exp1 0028       __tdiv_to_l_@cntr 0027  
     __tdiv_to_l_@quot 0023       ___lldiv@dividend 0024               isprint@c 0074            ??_pwm_10bit 0079  
            stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0073            _printf$3184 00A0  
     ___lldiv@quotient 0073               stringdir 1000               stringtab 1000  
