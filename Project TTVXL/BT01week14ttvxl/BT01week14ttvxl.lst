

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sun Dec 18 03:18:05 2022

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text807,local,class=CODE,delta=2
    14                           	psect	text810,local,class=CODE,delta=2
    15                           	psect	text812,local,class=CODE,delta=2
    16                           	psect	text813,local,class=CODE,delta=2
    17                           	psect	text822,local,class=CODE,delta=2
    18                           	psect	text835,local,class=CODE,delta=2
    19                           	psect	text839,local,class=CODE,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text840,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  000A                     	;#
    25                           
    26                           	psect	config
    27  2007  E3C2               	dw	58306	;#
    28                           
    29                           	psect	strings
    30  1000                     __pstrings:	
    31  1000                     stringtab:	
    32                           ;	global	stringdir,stringtab,__stringbase
    33                           
    34  1000                     stringcode:	
    35                           ;	String table - string pointers are 1 byte each
    36                           
    37  1000                     stringdir:	
    38  1000  3010               	movlw	high stringdir
    39  1001  008A               	movwf	10
    40  1002  0804               	movf	4,w
    41  1003  0A84               	incf	4,f
    42  1004  0782               	addwf	2,f
    43  1005                     __stringbase:	
    44  1005  3400               	retlw	0
    45  1006                     __npowers_:	
    46  1006  3400               	retlw	0
    47  1007  3480               	retlw	128
    48  1008  343F               	retlw	63
    49  1009  34CD               	retlw	205
    50  100A  34CC               	retlw	204
    51  100B  343D               	retlw	61
    52  100C  34D7               	retlw	215
    53  100D  3423               	retlw	35
    54  100E  343C               	retlw	60
    55  100F  3412               	retlw	18
    56  1010  3483               	retlw	131
    57  1011  343A               	retlw	58
    58  1012  34B7               	retlw	183
    59  1013  34D1               	retlw	209
    60  1014  3438               	retlw	56
    61  1015  34C6               	retlw	198
    62  1016  3427               	retlw	39
    63  1017  3437               	retlw	55
    64  1018  3438               	retlw	56
    65  1019  3486               	retlw	134
    66  101A  3435               	retlw	53
    67  101B  34C0               	retlw	192
    68  101C  34D6               	retlw	214
    69  101D  3433               	retlw	51
    70  101E  34CC               	retlw	204
    71  101F  342B               	retlw	43
    72  1020  3432               	retlw	50
    73  1021  3470               	retlw	112
    74  1022  3489               	retlw	137
    75  1023  3430               	retlw	48
    76  1024  34E7               	retlw	231
    77  1025  34DB               	retlw	219
    78  1026  342E               	retlw	46
    79  1027  34E5               	retlw	229
    80  1028  343C               	retlw	60
    81  1029  341E               	retlw	30
    82  102A  3442               	retlw	66
    83  102B  34A2               	retlw	162
    84  102C  340D               	retlw	13
    85  102D                     __powers_:	
    86  102D  3400               	retlw	0
    87  102E  3480               	retlw	128
    88  102F  343F               	retlw	63
    89  1030  3400               	retlw	0
    90  1031  3420               	retlw	32
    91  1032  3441               	retlw	65
    92  1033  3400               	retlw	0
    93  1034  34C8               	retlw	200
    94  1035  3442               	retlw	66
    95  1036  3400               	retlw	0
    96  1037  347A               	retlw	122
    97  1038  3444               	retlw	68
    98  1039  3440               	retlw	64
    99  103A  341C               	retlw	28
   100  103B  3446               	retlw	70
   101  103C  3450               	retlw	80
   102  103D  34C3               	retlw	195
   103  103E  3447               	retlw	71
   104  103F  3424               	retlw	36
   105  1040  3474               	retlw	116
   106  1041  3449               	retlw	73
   107  1042  3497               	retlw	151
   108  1043  3418               	retlw	24
   109  1044  344B               	retlw	75
   110  1045  34BC               	retlw	188
   111  1046  34BE               	retlw	190
   112  1047  344C               	retlw	76
   113  1048  346B               	retlw	107
   114  1049  346E               	retlw	110
   115  104A  344E               	retlw	78
   116  104B  3403               	retlw	3
   117  104C  3415               	retlw	21
   118  104D  3450               	retlw	80
   119  104E  3479               	retlw	121
   120  104F  34AD               	retlw	173
   121  1050  3460               	retlw	96
   122  1051  34F3               	retlw	243
   123  1052  3449               	retlw	73
   124  1053  3471               	retlw	113
   125  1054                     _dpowers:	
   126  1054  3401               	retlw	1
   127  1055  3400               	retlw	0
   128  1056  3400               	retlw	0
   129  1057  3400               	retlw	0
   130  1058  340A               	retlw	10
   131  1059  3400               	retlw	0
   132  105A  3400               	retlw	0
   133  105B  3400               	retlw	0
   134  105C  3464               	retlw	100
   135  105D  3400               	retlw	0
   136  105E  3400               	retlw	0
   137  105F  3400               	retlw	0
   138  1060  34E8               	retlw	232
   139  1061  3403               	retlw	3
   140  1062  3400               	retlw	0
   141  1063  3400               	retlw	0
   142  1064  3410               	retlw	16
   143  1065  3427               	retlw	39
   144  1066  3400               	retlw	0
   145  1067  3400               	retlw	0
   146  1068  34A0               	retlw	160
   147  1069  3486               	retlw	134
   148  106A  3401               	retlw	1
   149  106B  3400               	retlw	0
   150  106C  3440               	retlw	64
   151  106D  3442               	retlw	66
   152  106E  340F               	retlw	15
   153  106F  3400               	retlw	0
   154  1070  3480               	retlw	128
   155  1071  3496               	retlw	150
   156  1072  3498               	retlw	152
   157  1073  3400               	retlw	0
   158  1074  3400               	retlw	0
   159  1075  34E1               	retlw	225
   160  1076  34F5               	retlw	245
   161  1077  3405               	retlw	5
   162  1078  3400               	retlw	0
   163  1079  34CA               	retlw	202
   164  107A  349A               	retlw	154
   165  107B  343B               	retlw	59
   166  000E                     _TMR1	set	14
   167  0017                     _CCP1CON	set	23
   168  0015                     _CCPR1L	set	21
   169  0001                     _TMR0	set	1
   170  000F                     _TMR1H	set	15
   171  000E                     _TMR1L	set	14
   172  0011                     _TMR2	set	17
   173  00BC                     _DC1B0	set	188
   174  00BD                     _DC1B1	set	189
   175  005F                     _GIE	set	95
   176  005E                     _PEIE	set	94
   177  0041                     _RD1	set	65
   178  0042                     _RD2	set	66
   179  0043                     _RD3	set	67
   180  0044                     _RD4	set	68
   181  0045                     _RD5	set	69
   182  0046                     _RD6	set	70
   183  0047                     _RD7	set	71
   184  0048                     _RE0	set	72
   185  005D                     _T0IE	set	93
   186  005A                     _T0IF	set	90
   187  0084                     _T1CKPS0	set	132
   188  0085                     _T1CKPS1	set	133
   189  0082                     _T1SYNC	set	130
   190  0090                     _T2CKPS0	set	144
   191  0091                     _T2CKPS1	set	145
   192  0081                     _TMR1CS	set	129
   193  0086                     _TMR1GE	set	134
   194  0080                     _TMR1ON	set	128
   195  0092                     _TMR2ON	set	146
   196  0092                     _PR2	set	146
   197  0408                     _PS0	set	1032
   198  0409                     _PS1	set	1033
   199  040A                     _PS2	set	1034
   200  040B                     _PSA	set	1035
   201  040D                     _T0CS	set	1037
   202  043A                     _TRISC2	set	1082
   203  0441                     _TRISD1	set	1089
   204  0442                     _TRISD2	set	1090
   205  0443                     _TRISD3	set	1091
   206  0444                     _TRISD4	set	1092
   207  0445                     _TRISD5	set	1093
   208  0446                     _TRISD6	set	1094
   209  0447                     _TRISD7	set	1095
   210  0448                     _TRISE0	set	1096
   211  0188                     _ANSEL	set	392
   212  0189                     _ANSELH	set	393
   213  107C                     STR_2:	
   214  107C  3478               	retlw	120	;'x'
   215  107D  3475               	retlw	117	;'u'
   216  107E  346E               	retlw	110	;'n'
   217  107F  3467               	retlw	103	;'g'
   218  1080  343A               	retlw	58	;':'
   219  1081  3420               	retlw	32	;' '
   220  1082  3425               	retlw	37	;'%'
   221  1083  3430               	retlw	48	;'0'
   222  1084  3435               	retlw	53	;'5'
   223  1085  3464               	retlw	100	;'d'
   224  1086  3400               	retlw	0
   225  1087                     STR_1:	
   226  1087  3476               	retlw	118	;'v'
   227  1088  343A               	retlw	58	;':'
   228  1089  3420               	retlw	32	;' '
   229  108A  3425               	retlw	37	;'%'
   230  108B  3433               	retlw	51	;'3'
   231  108C  342E               	retlw	46	;'.'
   232  108D  3432               	retlw	50	;'2'
   233  108E  3466               	retlw	102	;'f'
   234  108F  3400               	retlw	0
   235                           
   236                           	psect	cinit
   237  0823                     start_initialization:	
   238                           
   239                           ; Clear objects allocated to COMMON
   240  0823  01FA               	clrf	__pbssCOMMON& (0+127)
   241  0824  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   242                           
   243                           ; Clear objects allocated to BANK0
   244  0825  01E3               	clrf	__pbssBANK0& (0+127)
   245  0826  01E4               	clrf	(__pbssBANK0+1)& (0+127)
   246  0827  01E5               	clrf	(__pbssBANK0+2)& (0+127)
   247  0828  01E6               	clrf	(__pbssBANK0+3)& (0+127)
   248  0829  01E7               	clrf	(__pbssBANK0+4)& (0+127)
   249  082A  01E8               	clrf	(__pbssBANK0+5)& (0+127)
   250  082B  01E9               	clrf	(__pbssBANK0+6)& (0+127)
   251  082C  01EA               	clrf	(__pbssBANK0+7)& (0+127)
   252  082D  01EB               	clrf	(__pbssBANK0+8)& (0+127)
   253  082E                     end_of_initialization:	
   254                           ;End of C runtime variable initialization code
   255                           
   256  082E  0183               	clrf	3
   257  082F  160A  118A  2F2F   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMMON
   260  007A                     __pbssCOMMON:	
   261  007A                     _dem:	
   262  007A                     	ds	2
   263                           
   264                           	psect	bssBANK0
   265  0063                     __pbssBANK0:	
   266  0063                     _v:	
   267  0063                     	ds	3
   268  0066                     _pwm_t:	
   269  0066                     	ds	2
   270  0068                     _xung:	
   271  0068                     	ds	4
   272                           
   273                           	psect	cstackBANK1
   274  00A0                     __pcstackBANK1:	
   275  00A0                     _printf$3173:	
   276                           
   277                           ; 4 bytes @ 0x0
   278  00A0                     	ds	4
   279  00A4                     printf@ap:	
   280                           
   281                           ; 1 bytes @ 0x4
   282  00A4                     	ds	1
   283  00A5                     printf@integ:	
   284                           
   285                           ; 3 bytes @ 0x5
   286  00A5                     	ds	3
   287  00A8                     printf@f:	
   288                           
   289                           ; 1 bytes @ 0x8
   290  00A8                     	ds	1
   291  00A9                     printf@_val:	
   292                           
   293                           ; 4 bytes @ 0x9
   294  00A9                     	ds	4
   295  00AD                     printf@flag:	
   296                           
   297                           ; 2 bytes @ 0xD
   298  00AD                     	ds	2
   299  00AF                     printf@exp:	
   300                           
   301                           ; 2 bytes @ 0xF
   302  00AF                     	ds	2
   303  00B1                     printf@width:	
   304                           
   305                           ; 2 bytes @ 0x11
   306  00B1                     	ds	2
   307  00B3                     printf@fval:	
   308                           
   309                           ; 3 bytes @ 0x13
   310  00B3                     	ds	3
   311  00B6                     printf@prec:	
   312                           
   313                           ; 2 bytes @ 0x16
   314  00B6                     	ds	2
   315  00B8                     printf@c:	
   316                           
   317                           ; 1 bytes @ 0x18
   318  00B8                     	ds	1
   319                           
   320                           	psect	cstackCOMMON
   321  0070                     __pcstackCOMMON:	
   322  0070                     ?_lcd_init:	
   323  0070                     ?_lcd_putc:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ?_isprint:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_isdigit:	
   330                           ; 1 bit 
   331                           
   332  0070                     ?_main:	
   333                           ; 1 bit 
   334                           
   335  0070                     ?_ngat:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ??_ngat:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_putch:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_lcd_busy:	
   345                           ; 0 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	2
   350  0072                     ?_lcd_put_byte:	
   351  0072                     ??_lcd_busy:	
   352                           ; 0 bytes @ 0x2
   353                           
   354  0072                     ??_isprint:	
   355                           ; 0 bytes @ 0x2
   356                           
   357  0072                     ??_isdigit:	
   358                           ; 0 bytes @ 0x2
   359                           
   360  0072                     ?___ftge:	
   361                           ; 0 bytes @ 0x2
   362                           
   363  0072                     ?___lbmod:	
   364                           ; 1 bit 
   365                           
   366  0072                     ?___wmul:	
   367                           ; 1 bytes @ 0x2
   368                           
   369  0072                     ?___awmod:	
   370                           ; 2 bytes @ 0x2
   371                           
   372  0072                     ?___ftpack:	
   373                           ; 2 bytes @ 0x2
   374                           
   375  0072                     ?___ftneg:	
   376                           ; 3 bytes @ 0x2
   377                           
   378  0072                     ?__tdiv_to_l_:	
   379                           ; 3 bytes @ 0x2
   380                           
   381  0072                     ?__div_to_l_:	
   382                           ; 4 bytes @ 0x2
   383                           
   384  0072                     ?___lldiv:	
   385                           ; 4 bytes @ 0x2
   386                           
   387  0072                     lcd_put_byte@b:	
   388                           ; 4 bytes @ 0x2
   389                           
   390  0072                     _isdigit$3681:	
   391                           ; 1 bytes @ 0x2
   392                           
   393  0072                     _isprint$3684:	
   394                           ; 1 bytes @ 0x2
   395                           
   396  0072                     ___lbmod@divisor:	
   397                           ; 1 bytes @ 0x2
   398                           
   399  0072                     ___wmul@multiplier:	
   400                           ; 1 bytes @ 0x2
   401                           
   402  0072                     ___awmod@divisor:	
   403                           ; 2 bytes @ 0x2
   404                           
   405  0072                     ___ftneg@f1:	
   406                           ; 2 bytes @ 0x2
   407                           
   408  0072                     ___ftge@ff1:	
   409                           ; 3 bytes @ 0x2
   410                           
   411  0072                     __tdiv_to_l_@f1:	
   412                           ; 3 bytes @ 0x2
   413                           
   414  0072                     __div_to_l_@f1:	
   415                           ; 3 bytes @ 0x2
   416                           
   417  0072                     ___ftpack@arg:	
   418                           ; 3 bytes @ 0x2
   419                           
   420  0072                     ___lldiv@divisor:	
   421                           ; 3 bytes @ 0x2
   422                           
   423                           
   424                           ; 4 bytes @ 0x2
   425  0072                     	ds	1
   426  0073                     ??_lcd_put_byte:	
   427  0073                     ??___lbmod:	
   428                           ; 0 bytes @ 0x3
   429                           
   430  0073                     lcd_busy@busy:	
   431                           ; 0 bytes @ 0x3
   432                           
   433  0073                     isdigit@c:	
   434                           ; 1 bytes @ 0x3
   435                           
   436  0073                     isprint@c:	
   437                           ; 1 bytes @ 0x3
   438                           
   439                           
   440                           ; 1 bytes @ 0x3
   441  0073                     	ds	1
   442  0074                     ___lbmod@dividend:	
   443  0074                     ___wmul@multiplicand:	
   444                           ; 1 bytes @ 0x4
   445                           
   446  0074                     ___awmod@dividend:	
   447                           ; 2 bytes @ 0x4
   448                           
   449                           
   450                           ; 2 bytes @ 0x4
   451  0074                     	ds	1
   452  0075                     ??___ftneg:	
   453  0075                     lcd_put_byte@rs:	
   454                           ; 0 bytes @ 0x5
   455                           
   456  0075                     ___lbmod@counter:	
   457                           ; 1 bytes @ 0x5
   458                           
   459  0075                     ___ftpack@exp:	
   460                           ; 1 bytes @ 0x5
   461                           
   462  0075                     ___ftge@ff2:	
   463                           ; 1 bytes @ 0x5
   464                           
   465  0075                     __tdiv_to_l_@f2:	
   466                           ; 3 bytes @ 0x5
   467                           
   468  0075                     __div_to_l_@f2:	
   469                           ; 3 bytes @ 0x5
   470                           
   471                           
   472                           ; 3 bytes @ 0x5
   473  0075                     	ds	1
   474  0076                     ??___wmul:	
   475  0076                     ??___awmod:	
   476                           ; 0 bytes @ 0x6
   477                           
   478  0076                     lcd_put_byte@temp:	
   479                           ; 0 bytes @ 0x6
   480                           
   481  0076                     ___lbmod@rem:	
   482                           ; 1 bytes @ 0x6
   483                           
   484  0076                     ___awmod@counter:	
   485                           ; 1 bytes @ 0x6
   486                           
   487  0076                     ___ftpack@sign:	
   488                           ; 1 bytes @ 0x6
   489                           
   490  0076                     ___wmul@product:	
   491                           ; 1 bytes @ 0x6
   492                           
   493  0076                     ___lldiv@dividend:	
   494                           ; 2 bytes @ 0x6
   495                           
   496                           
   497                           ; 4 bytes @ 0x6
   498  0076                     	ds	1
   499  0077                     ??_lcd_init:	
   500  0077                     ?_lcd_gotoxy:	
   501                           ; 0 bytes @ 0x7
   502                           
   503  0077                     ??___ftpack:	
   504                           ; 0 bytes @ 0x7
   505                           
   506  0077                     ?___lbdiv:	
   507                           ; 0 bytes @ 0x7
   508                           
   509  0077                     lcd_gotoxy@row:	
   510                           ; 1 bytes @ 0x7
   511                           
   512  0077                     ___lbdiv@divisor:	
   513                           ; 1 bytes @ 0x7
   514                           
   515  0077                     ___awmod@sign:	
   516                           ; 1 bytes @ 0x7
   517                           
   518                           
   519                           ; 1 bytes @ 0x7
   520  0077                     	ds	1
   521  0078                     ??_pwm_10bit:	
   522  0078                     ??_lcd_gotoxy:	
   523                           ; 0 bytes @ 0x8
   524                           
   525  0078                     ??___lbdiv:	
   526                           ; 0 bytes @ 0x8
   527                           
   528  0078                     ??___awdiv:	
   529                           ; 0 bytes @ 0x8
   530                           
   531  0078                     ??___ftge:	
   532                           ; 0 bytes @ 0x8
   533                           
   534  0078                     ?___bmul:	
   535                           ; 0 bytes @ 0x8
   536                           
   537  0078                     lcd_gotoxy@col:	
   538                           ; 1 bytes @ 0x8
   539                           
   540  0078                     ___bmul@multiplicand:	
   541                           ; 1 bytes @ 0x8
   542                           
   543                           
   544                           ; 1 bytes @ 0x8
   545  0078                     	ds	1
   546  0079                     ??___bmul:	
   547  0079                     lcd_gotoxy@address:	
   548                           ; 0 bytes @ 0x9
   549                           
   550                           
   551                           ; 1 bytes @ 0x9
   552  0079                     	ds	1
   553  007A                     ??_lcd_putc:	
   554  007A                     ??_main:	
   555                           ; 0 bytes @ 0xA
   556                           
   557  007A                     ??_putch:	
   558                           ; 0 bytes @ 0xA
   559                           
   560  007A                     ??_fround:	
   561                           ; 0 bytes @ 0xA
   562                           
   563  007A                     ??___ftsub:	
   564                           ; 0 bytes @ 0xA
   565                           
   566  007A                     ??___llmod:	
   567                           ; 0 bytes @ 0xA
   568                           
   569  007A                     ??___lldiv:	
   570                           ; 0 bytes @ 0xA
   571                           
   572  007A                     ??___altoft:	
   573                           ; 0 bytes @ 0xA
   574                           
   575  007A                     ??___lltoft:	
   576                           ; 0 bytes @ 0xA
   577                           
   578                           
   579                           	psect	cstackBANK0
   580  0020                     __pcstackBANK0:	
   581                           ; 0 bytes @ 0xA
   582                           
   583  0020                     ??__tdiv_to_l_:	
   584  0020                     ??__div_to_l_:	
   585                           ; 0 bytes @ 0x0
   586                           
   587  0020                     ?___awdiv:	
   588                           ; 0 bytes @ 0x0
   589                           
   590  0020                     ?___altoft:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0020                     ?___lltoft:	
   594                           ; 3 bytes @ 0x0
   595                           
   596  0020                     lcd_putc@c:	
   597                           ; 3 bytes @ 0x0
   598                           
   599  0020                     ___lbdiv@dividend:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0020                     ___awdiv@divisor:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0020                     ___lldiv@quotient:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0020                     ___altoft@c:	
   609                           ; 4 bytes @ 0x0
   610                           
   611  0020                     ___lltoft@c:	
   612                           ; 4 bytes @ 0x0
   613                           
   614                           
   615                           ; 4 bytes @ 0x0
   616  0020                     	ds	1
   617  0021                     putch@c:	
   618  0021                     ___lbdiv@counter:	
   619                           ; 1 bytes @ 0x1
   620                           
   621                           
   622                           ; 1 bytes @ 0x1
   623  0021                     	ds	1
   624  0022                     ___lbdiv@quotient:	
   625  0022                     ___awdiv@dividend:	
   626                           ; 1 bytes @ 0x2
   627                           
   628                           
   629                           ; 2 bytes @ 0x2
   630  0022                     	ds	1
   631  0023                     ___bmul@product:	
   632  0023                     __tdiv_to_l_@quot:	
   633                           ; 1 bytes @ 0x3
   634                           
   635                           
   636                           ; 4 bytes @ 0x3
   637  0023                     	ds	1
   638  0024                     ___bmul@multiplier:	
   639  0024                     ___awdiv@counter:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0024                     ___lldiv@counter:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0024                     ___altoft@exp:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0024                     ___lltoft@exp:	
   649                           ; 1 bytes @ 0x4
   650                           
   651                           
   652                           ; 1 bytes @ 0x4
   653  0024                     	ds	1
   654  0025                     ?___llmod:	
   655  0025                     ___awdiv@sign:	
   656                           ; 4 bytes @ 0x5
   657                           
   658  0025                     ___altoft@sign:	
   659                           ; 1 bytes @ 0x5
   660                           
   661  0025                     ___llmod@divisor:	
   662                           ; 1 bytes @ 0x5
   663                           
   664                           
   665                           ; 4 bytes @ 0x5
   666  0025                     	ds	1
   667  0026                     ?___ftdiv:	
   668  0026                     ___awdiv@quotient:	
   669                           ; 3 bytes @ 0x6
   670                           
   671  0026                     ___ftdiv@f2:	
   672                           ; 2 bytes @ 0x6
   673                           
   674                           
   675                           ; 3 bytes @ 0x6
   676  0026                     	ds	1
   677  0027                     __tdiv_to_l_@cntr:	
   678                           
   679                           ; 1 bytes @ 0x7
   680  0027                     	ds	1
   681  0028                     ?_pwm_10bit:	
   682  0028                     ?___fttol:	
   683                           ; 0 bytes @ 0x8
   684                           
   685  0028                     __tdiv_to_l_@exp1:	
   686                           ; 4 bytes @ 0x8
   687                           
   688  0028                     pwm_10bit@pwm:	
   689                           ; 1 bytes @ 0x8
   690                           
   691  0028                     ___fttol@f1:	
   692                           ; 2 bytes @ 0x8
   693                           
   694  0028                     __div_to_l_@quot:	
   695                           ; 3 bytes @ 0x8
   696                           
   697                           
   698                           ; 4 bytes @ 0x8
   699  0028                     	ds	1
   700  0029                     ___ftdiv@f1:	
   701  0029                     ___llmod@dividend:	
   702                           ; 3 bytes @ 0x9
   703                           
   704                           
   705                           ; 4 bytes @ 0x9
   706  0029                     	ds	3
   707  002C                     ??___ftdiv:	
   708  002C                     ??___fttol:	
   709                           ; 0 bytes @ 0xC
   710                           
   711  002C                     __div_to_l_@cntr:	
   712                           ; 0 bytes @ 0xC
   713                           
   714                           
   715                           ; 1 bytes @ 0xC
   716  002C                     	ds	1
   717  002D                     ___llmod@counter:	
   718  002D                     __div_to_l_@exp1:	
   719                           ; 1 bytes @ 0xD
   720                           
   721                           
   722                           ; 1 bytes @ 0xD
   723  002D                     	ds	2
   724  002F                     ___ftdiv@cntr:	
   725  002F                     ___fttol@sign1:	
   726                           ; 1 bytes @ 0xF
   727                           
   728                           
   729                           ; 1 bytes @ 0xF
   730  002F                     	ds	1
   731  0030                     ___ftdiv@f3:	
   732  0030                     ___fttol@lval:	
   733                           ; 3 bytes @ 0x10
   734                           
   735                           
   736                           ; 4 bytes @ 0x10
   737  0030                     	ds	3
   738  0033                     ___ftdiv@exp:	
   739                           
   740                           ; 1 bytes @ 0x13
   741  0033                     	ds	1
   742  0034                     ___ftdiv@sign:	
   743  0034                     ___fttol@exp1:	
   744                           ; 1 bytes @ 0x14
   745                           
   746                           
   747                           ; 1 bytes @ 0x14
   748  0034                     	ds	1
   749  0035                     ?___ftmul:	
   750  0035                     ___ftmul@f1:	
   751                           ; 3 bytes @ 0x15
   752                           
   753                           
   754                           ; 3 bytes @ 0x15
   755  0035                     	ds	3
   756  0038                     ___ftmul@f2:	
   757                           
   758                           ; 3 bytes @ 0x18
   759  0038                     	ds	3
   760  003B                     ??___ftmul:	
   761                           
   762                           ; 0 bytes @ 0x1B
   763  003B                     	ds	3
   764  003E                     ___ftmul@exp:	
   765                           
   766                           ; 1 bytes @ 0x1E
   767  003E                     	ds	1
   768  003F                     ___ftmul@f3_as_product:	
   769                           
   770                           ; 3 bytes @ 0x1F
   771  003F                     	ds	3
   772  0042                     ___ftmul@cntr:	
   773                           
   774                           ; 1 bytes @ 0x22
   775  0042                     	ds	1
   776  0043                     ___ftmul@sign:	
   777                           
   778                           ; 1 bytes @ 0x23
   779  0043                     	ds	1
   780  0044                     ?_scale:	
   781  0044                     ?___ftadd:	
   782                           ; 3 bytes @ 0x24
   783                           
   784  0044                     ___ftadd@f1:	
   785                           ; 3 bytes @ 0x24
   786                           
   787                           
   788                           ; 3 bytes @ 0x24
   789  0044                     	ds	3
   790  0047                     ??_scale:	
   791  0047                     ___ftadd@f2:	
   792                           ; 0 bytes @ 0x27
   793                           
   794                           
   795                           ; 3 bytes @ 0x27
   796  0047                     	ds	3
   797  004A                     ??___ftadd:	
   798                           
   799                           ; 0 bytes @ 0x2A
   800  004A                     	ds	1
   801  004B                     _scale$4122:	
   802                           
   803                           ; 3 bytes @ 0x2B
   804  004B                     	ds	2
   805  004D                     ___ftadd@sign:	
   806                           
   807                           ; 1 bytes @ 0x2D
   808  004D                     	ds	1
   809  004E                     scale@scl:	
   810  004E                     ___ftadd@exp2:	
   811                           ; 1 bytes @ 0x2E
   812                           
   813                           
   814                           ; 1 bytes @ 0x2E
   815  004E                     	ds	1
   816  004F                     ___ftadd@exp1:	
   817                           
   818                           ; 1 bytes @ 0x2F
   819  004F                     	ds	1
   820  0050                     ?_fround:	
   821  0050                     ?___ftsub:	
   822                           ; 3 bytes @ 0x30
   823                           
   824  0050                     ___ftsub@f2:	
   825                           ; 3 bytes @ 0x30
   826                           
   827                           
   828                           ; 3 bytes @ 0x30
   829  0050                     	ds	3
   830  0053                     ___ftsub@f1:	
   831  0053                     _fround$4121:	
   832                           ; 3 bytes @ 0x33
   833                           
   834                           
   835                           ; 3 bytes @ 0x33
   836  0053                     	ds	3
   837  0056                     _fround$4120:	
   838                           
   839                           ; 3 bytes @ 0x36
   840  0056                     	ds	3
   841  0059                     fround@prec:	
   842                           
   843                           ; 1 bytes @ 0x39
   844  0059                     	ds	1
   845  005A                     ?_printf:	
   846                           
   847                           ; 2 bytes @ 0x3A
   848  005A                     	ds	4
   849  005E                     ??_printf:	
   850                           
   851                           ; 0 bytes @ 0x3E
   852  005E                     	ds	5
   853                           
   854                           	psect	maintext
   855  172F                     __pmaintext:	
   856 ;;Data sizes: Strings 20, constant 118, data 0, bss 11, persistent 0 stack 0
   857 ;;Auto spaces:   Size  Autos    Used
   858 ;; COMMON          14     10      12
   859 ;; BANK0           80     67      76
   860 ;; BANK1           80     25      25
   861 ;; BANK3           96      0       0
   862 ;; BANK2           96      0       0
   863 ;;
   864 ;; Pointer list with targets:
   865 ;; ?___ftpack	float  size(1) Largest target is 0
   866 ;;
   867 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   868 ;;
   869 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   870 ;;
   871 ;; ?___ftsub	float  size(1) Largest target is 0
   872 ;;
   873 ;; ?___lltoft	float  size(1) Largest target is 0
   874 ;;
   875 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   876 ;;
   877 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   878 ;;
   879 ;; ?___fttol	long  size(1) Largest target is 0
   880 ;;
   881 ;; ?___ftadd	float  size(1) Largest target is 0
   882 ;;
   883 ;; ?___ftneg	float  size(1) Largest target is 0
   884 ;;
   885 ;; ?___awmod	int  size(1) Largest target is 40
   886 ;;		 -> dpowers(CODE[40]), 
   887 ;;
   888 ;; ?_scale	int  size(1) Largest target is 0
   889 ;;
   890 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   891 ;;
   892 ;; ?_fround	unsigned int  size(1) Largest target is 0
   893 ;;
   894 ;; ?___awdiv	int  size(1) Largest target is 0
   895 ;;
   896 ;; ?___ftdiv	float  size(1) Largest target is 0
   897 ;;
   898 ;; ?___altoft	float  size(1) Largest target is 0
   899 ;;
   900 ;; ?___ftmul	float  size(1) Largest target is 0
   901 ;;
   902 ;; printf@f	PTR const unsigned char  size(1) Largest target is 11
   903 ;;		 -> STR_2(CODE[11]), STR_1(CODE[9]), 
   904 ;;
   905 ;; ?_printf	int  size(1) Largest target is 0
   906 ;;
   907 ;; printf@ap	PTR void [1] size(1) Largest target is 2
   908 ;;		 -> ?_printf(BANK0[2]), 
   909 ;;
   910 ;; S3162$_cp	PTR const unsigned char  size(1) Largest target is 0
   911 ;;
   912 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   913 ;;
   914 ;;
   915 ;; Critical Paths under _main in COMMON
   916 ;;
   917 ;;   _main->_lcd_init
   918 ;;   _main->_lcd_gotoxy
   919 ;;   _printf->___lldiv
   920 ;;   _lcd_putc->_lcd_gotoxy
   921 ;;   _lcd_gotoxy->_lcd_put_byte
   922 ;;   _lcd_init->_lcd_put_byte
   923 ;;   ___lltoft->___ftpack
   924 ;;   ___altoft->___ftpack
   925 ;;   ___ftmul->___ftpack
   926 ;;   ___ftdiv->___ftpack
   927 ;;   ___ftadd->___ftpack
   928 ;;   ___llmod->___lldiv
   929 ;;   ___awdiv->___awmod
   930 ;;   ___fttol->___ftpack
   931 ;;   ___lbdiv->___lbmod
   932 ;;   ___bmul->___lbdiv
   933 ;;
   934 ;; Critical Paths under _ngat in COMMON
   935 ;;
   936 ;;   None.
   937 ;;
   938 ;; Critical Paths under _main in BANK0
   939 ;;
   940 ;;   _main->_printf
   941 ;;   _printf->_fround
   942 ;;   _putch->_lcd_putc
   943 ;;   ___ftsub->___ftadd
   944 ;;   _scale->___ftmul
   945 ;;   _fround->___ftadd
   946 ;;   ___ftmul->___ftdiv
   947 ;;   ___ftmul->___fttol
   948 ;;   ___ftdiv->___altoft
   949 ;;   ___ftadd->___ftmul
   950 ;;   _pwm_10bit->___awdiv
   951 ;;   ___llmod->___lldiv
   952 ;;   ___fttol->___awdiv
   953 ;;   ___bmul->___lbdiv
   954 ;;
   955 ;; Critical Paths under _ngat in BANK0
   956 ;;
   957 ;;   None.
   958 ;;
   959 ;; Critical Paths under _main in BANK1
   960 ;;
   961 ;;   _main->_printf
   962 ;;
   963 ;; Critical Paths under _ngat in BANK1
   964 ;;
   965 ;;   None.
   966 ;;
   967 ;; Critical Paths under _main in BANK3
   968 ;;
   969 ;;   None.
   970 ;;
   971 ;; Critical Paths under _ngat in BANK3
   972 ;;
   973 ;;   None.
   974 ;;
   975 ;; Critical Paths under _main in BANK2
   976 ;;
   977 ;;   None.
   978 ;;
   979 ;; Critical Paths under _ngat in BANK2
   980 ;;
   981 ;;   None.
   982 ;;
   983 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   984 ;;
   985 ;;
   986 ;;Call Graph Tables:
   987 ;;
   988 ;; ---------------------------------------------------------------------------------
   989 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (0) _main                                                 0     0      0   18821
   992 ;;                           _lcd_init
   993 ;;                          _pwm_10bit
   994 ;;                           ___altoft
   995 ;;                            ___ftdiv
   996 ;;                            ___ftmul
   997 ;;                             ___ftge
   998 ;;                         _lcd_gotoxy
   999 ;;                             _printf
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (1) _printf                                              38    34      4   15303
  1002 ;;                                             58 BANK0      9     5      4
  1003 ;;                                              0 BANK1     25    25      0
  1004 ;;                              _putch
  1005 ;;                            _isdigit
  1006 ;;                             ___wmul
  1007 ;;                             ___ftge
  1008 ;;                            ___ftneg
  1009 ;;                            ___awdiv
  1010 ;;                              _scale
  1011 ;;                            ___ftmul
  1012 ;;                             _fround
  1013 ;;                            ___ftadd
  1014 ;;                            ___fttol
  1015 ;;                         __div_to_l_
  1016 ;;                        __tdiv_to_l_
  1017 ;;                           ___lltoft
  1018 ;;                            ___ftsub
  1019 ;;                            ___lldiv
  1020 ;;                            ___llmod
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (2) _putch                                                1     1      0    1019
  1023 ;;                                              1 BANK0      1     1      0
  1024 ;;                           _lcd_putc
  1025 ;; ---------------------------------------------------------------------------------
  1026 ;; (3) _lcd_putc                                             1     1      0     988
  1027 ;;                                              0 BANK0      1     1      0
  1028 ;;                       _lcd_put_byte
  1029 ;;                           _lcd_busy
  1030 ;;                         _lcd_gotoxy
  1031 ;;                            _isprint
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (2) ___ftsub                                              6     0      6    1602
  1034 ;;                                             48 BANK0      6     0      6
  1035 ;;                            ___ftadd
  1036 ;;                           ___lltoft (ARG)
  1037 ;; ---------------------------------------------------------------------------------
  1038 ;; (2) _scale                                               14    11      3    2306
  1039 ;;                                             36 BANK0     11     8      3
  1040 ;;                            ___awmod
  1041 ;;                            ___awdiv
  1042 ;;                            ___ftmul
  1043 ;;                             ___bmul
  1044 ;;                            ___fttol (ARG)
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (2) _fround                                              13    10      3    1686
  1047 ;;                                             48 BANK0     10     7      3
  1048 ;;                            ___lbmod
  1049 ;;                             ___bmul
  1050 ;;                            ___lbdiv
  1051 ;;                            ___ftmul
  1052 ;;                            ___ftadd (ARG)
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (4) _lcd_gotoxy                                           3     2      1     449
  1055 ;;                                              7 COMMON     3     2      1
  1056 ;;                       _lcd_put_byte
  1057 ;;                           _lcd_busy
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (1) _lcd_init                                             4     4      0     347
  1060 ;;                                              7 COMMON     3     3      0
  1061 ;;                       _lcd_put_byte
  1062 ;;                           _lcd_busy
  1063 ;; ---------------------------------------------------------------------------------
  1064 ;; (2) ___lltoft                                             5     1      4     414
  1065 ;;                                              0 BANK0      5     1      4
  1066 ;;                           ___ftpack
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (1) ___altoft                                             6     2      4     516
  1069 ;;                                              0 BANK0      6     2      4
  1070 ;;                           ___ftpack
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (3) ___ftmul                                             15     9      6     800
  1073 ;;                                             21 BANK0     15     9      6
  1074 ;;                           ___ftpack
  1075 ;;                            ___ftdiv (ARG)
  1076 ;;                           ___altoft (ARG)
  1077 ;;                            ___fttol (ARG)
  1078 ;;                            ___awdiv (ARG)
  1079 ;;                            ___awmod (ARG)
  1080 ;;                             ___bmul (ARG)
  1081 ;;                            ___lbdiv (ARG)
  1082 ;;                            ___lbmod (ARG)
  1083 ;; ---------------------------------------------------------------------------------
  1084 ;; (1) ___ftdiv                                             15     9      6     732
  1085 ;;                                              6 BANK0     15     9      6
  1086 ;;                           ___ftpack
  1087 ;;                           ___altoft (ARG)
  1088 ;; ---------------------------------------------------------------------------------
  1089 ;; (3) ___ftadd                                             12     6      6    1537
  1090 ;;                                             36 BANK0     12     6      6
  1091 ;;                           ___ftpack
  1092 ;;                            ___lbmod (ARG)
  1093 ;;                             ___bmul (ARG)
  1094 ;;                            ___lbdiv (ARG)
  1095 ;;                            ___ftmul (ARG)
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (5) _lcd_busy                                             2     2      0      34
  1098 ;;                                              2 COMMON     2     2      0
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (5) _lcd_put_byte                                         5     4      1     313
  1101 ;;                                              2 COMMON     5     4      1
  1102 ;; ---------------------------------------------------------------------------------
  1103 ;; (1) _pwm_10bit                                            2     0      2     538
  1104 ;;                                              8 BANK0      2     0      2
  1105 ;;                            ___awdiv
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (3) ___awmod                                              6     2      4     296
  1108 ;;                                              2 COMMON     6     2      4
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (2) ___lldiv                                             13     5      8     162
  1111 ;;                                              2 COMMON     8     0      8
  1112 ;;                                              0 BANK0      5     5      0
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (2) ___ftge                                               6     0      6     136
  1115 ;;                                              2 COMMON     6     0      6
  1116 ;; ---------------------------------------------------------------------------------
  1117 ;; (2) ___ftneg                                              3     0      3      45
  1118 ;;                                              2 COMMON     3     0      3
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (2) ___llmod                                              9     1      8     232
  1121 ;;                                              5 BANK0      9     1      8
  1122 ;;                            ___lldiv (ARG)
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (3) ___awdiv                                              8     4      4     445
  1125 ;;                                              0 BANK0      8     4      4
  1126 ;;                            ___awmod (ARG)
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (2) ___fttol                                             13     9      4     252
  1129 ;;                                              8 BANK0     13     9      4
  1130 ;;                           ___ftpack (ARG)
  1131 ;;                            ___awmod (ARG)
  1132 ;;                            ___awdiv (ARG)
  1133 ;;                             ___bmul (ARG)
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; (4) ___ftpack                                             8     3      5     312
  1136 ;;                                              2 COMMON     8     3      5
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (3) ___lbmod                                              5     4      1     159
  1139 ;;                                              2 COMMON     5     4      1
  1140 ;; ---------------------------------------------------------------------------------
  1141 ;; (3) ___lbdiv                                              4     3      1     241
  1142 ;;                                              7 COMMON     1     0      1
  1143 ;;                                              0 BANK0      3     3      0
  1144 ;;                            ___lbmod (ARG)
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (2) ___wmul                                               6     2      4      92
  1147 ;;                                              2 COMMON     6     2      4
  1148 ;; ---------------------------------------------------------------------------------
  1149 ;; (3) ___bmul                                               3     2      1      68
  1150 ;;                                              8 COMMON     1     0      1
  1151 ;;                                              3 BANK0      2     2      0
  1152 ;;                            ___lbmod (ARG)
  1153 ;;                            ___lbdiv (ARG)
  1154 ;; ---------------------------------------------------------------------------------
  1155 ;; (2) __div_to_l_                                          20    14      6     446
  1156 ;;                                              2 COMMON     6     0      6
  1157 ;;                                              0 BANK0     14    14      0
  1158 ;; ---------------------------------------------------------------------------------
  1159 ;; (2) __tdiv_to_l_                                         15     9      6     454
  1160 ;;                                              2 COMMON     6     0      6
  1161 ;;                                              0 BANK0      9     9      0
  1162 ;; ---------------------------------------------------------------------------------
  1163 ;; (2) _isdigit                                              2     2      0      68
  1164 ;;                                              2 COMMON     2     2      0
  1165 ;; ---------------------------------------------------------------------------------
  1166 ;; (4) _isprint                                              2     2      0      99
  1167 ;;                                              2 COMMON     2     2      0
  1168 ;; ---------------------------------------------------------------------------------
  1169 ;; Estimated maximum stack depth 5
  1170 ;; ---------------------------------------------------------------------------------
  1171 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1172 ;; ---------------------------------------------------------------------------------
  1173 ;; (6) _ngat                                                 2     2      0       0
  1174 ;;                                              0 COMMON     2     2      0
  1175 ;; ---------------------------------------------------------------------------------
  1176 ;; Estimated maximum stack depth 6
  1177 ;; ---------------------------------------------------------------------------------
  1178 ;; Call Graph Graphs:
  1179 ;; _main (ROOT)
  1180 ;;   _lcd_init
  1181 ;;     _lcd_put_byte
  1182 ;;     _lcd_busy
  1183 ;;   _pwm_10bit
  1184 ;;     ___awdiv
  1185 ;;       ___awmod (ARG)
  1186 ;;   ___altoft
  1187 ;;     ___ftpack
  1188 ;;   ___ftdiv
  1189 ;;     ___ftpack
  1190 ;;     ___altoft (ARG)
  1191 ;;       ___ftpack
  1192 ;;   ___ftmul
  1193 ;;     ___ftpack
  1194 ;;     ___ftdiv (ARG)
  1195 ;;       ___ftpack
  1196 ;;       ___altoft (ARG)
  1197 ;;         ___ftpack
  1198 ;;     ___altoft (ARG)
  1199 ;;       ___ftpack
  1200 ;;     ___fttol (ARG)
  1201 ;;       ___ftpack (ARG)
  1202 ;;       ___awmod (ARG)
  1203 ;;       ___awdiv (ARG)
  1204 ;;         ___awmod (ARG)
  1205 ;;       ___bmul (ARG)
  1206 ;;         ___lbmod (ARG)
  1207 ;;         ___lbdiv (ARG)
  1208 ;;           ___lbmod (ARG)
  1209 ;;     ___awdiv (ARG)
  1210 ;;       ___awmod (ARG)
  1211 ;;     ___awmod (ARG)
  1212 ;;     ___bmul (ARG)
  1213 ;;       ___lbmod (ARG)
  1214 ;;       ___lbdiv (ARG)
  1215 ;;         ___lbmod (ARG)
  1216 ;;     ___lbdiv (ARG)
  1217 ;;       ___lbmod (ARG)
  1218 ;;     ___lbmod (ARG)
  1219 ;;   ___ftge
  1220 ;;   _lcd_gotoxy
  1221 ;;     _lcd_put_byte
  1222 ;;     _lcd_busy
  1223 ;;   _printf
  1224 ;;     _putch
  1225 ;;       _lcd_putc
  1226 ;;         _lcd_put_byte
  1227 ;;         _lcd_busy
  1228 ;;         _lcd_gotoxy
  1229 ;;           _lcd_put_byte
  1230 ;;           _lcd_busy
  1231 ;;         _isprint
  1232 ;;     _isdigit
  1233 ;;     ___wmul
  1234 ;;     ___ftge
  1235 ;;     ___ftneg
  1236 ;;     ___awdiv
  1237 ;;       ___awmod (ARG)
  1238 ;;     _scale
  1239 ;;       ___awmod
  1240 ;;       ___awdiv
  1241 ;;         ___awmod (ARG)
  1242 ;;       ___ftmul
  1243 ;;         ___ftpack
  1244 ;;         ___ftdiv (ARG)
  1245 ;;           ___ftpack
  1246 ;;           ___altoft (ARG)
  1247 ;;             ___ftpack
  1248 ;;         ___altoft (ARG)
  1249 ;;           ___ftpack
  1250 ;;         ___fttol (ARG)
  1251 ;;           ___ftpack (ARG)
  1252 ;;           ___awmod (ARG)
  1253 ;;           ___awdiv (ARG)
  1254 ;;             ___awmod (ARG)
  1255 ;;           ___bmul (ARG)
  1256 ;;             ___lbmod (ARG)
  1257 ;;             ___lbdiv (ARG)
  1258 ;;               ___lbmod (ARG)
  1259 ;;         ___awdiv (ARG)
  1260 ;;           ___awmod (ARG)
  1261 ;;         ___awmod (ARG)
  1262 ;;         ___bmul (ARG)
  1263 ;;           ___lbmod (ARG)
  1264 ;;           ___lbdiv (ARG)
  1265 ;;             ___lbmod (ARG)
  1266 ;;         ___lbdiv (ARG)
  1267 ;;           ___lbmod (ARG)
  1268 ;;         ___lbmod (ARG)
  1269 ;;       ___bmul
  1270 ;;         ___lbmod (ARG)
  1271 ;;         ___lbdiv (ARG)
  1272 ;;           ___lbmod (ARG)
  1273 ;;       ___fttol (ARG)
  1274 ;;         ___ftpack (ARG)
  1275 ;;         ___awmod (ARG)
  1276 ;;         ___awdiv (ARG)
  1277 ;;           ___awmod (ARG)
  1278 ;;         ___bmul (ARG)
  1279 ;;           ___lbmod (ARG)
  1280 ;;           ___lbdiv (ARG)
  1281 ;;             ___lbmod (ARG)
  1282 ;;     ___ftmul
  1283 ;;       ___ftpack
  1284 ;;       ___ftdiv (ARG)
  1285 ;;         ___ftpack
  1286 ;;         ___altoft (ARG)
  1287 ;;           ___ftpack
  1288 ;;       ___altoft (ARG)
  1289 ;;         ___ftpack
  1290 ;;       ___fttol (ARG)
  1291 ;;         ___ftpack (ARG)
  1292 ;;         ___awmod (ARG)
  1293 ;;         ___awdiv (ARG)
  1294 ;;           ___awmod (ARG)
  1295 ;;         ___bmul (ARG)
  1296 ;;           ___lbmod (ARG)
  1297 ;;           ___lbdiv (ARG)
  1298 ;;             ___lbmod (ARG)
  1299 ;;       ___awdiv (ARG)
  1300 ;;         ___awmod (ARG)
  1301 ;;       ___awmod (ARG)
  1302 ;;       ___bmul (ARG)
  1303 ;;         ___lbmod (ARG)
  1304 ;;         ___lbdiv (ARG)
  1305 ;;           ___lbmod (ARG)
  1306 ;;       ___lbdiv (ARG)
  1307 ;;         ___lbmod (ARG)
  1308 ;;       ___lbmod (ARG)
  1309 ;;     _fround
  1310 ;;       ___lbmod
  1311 ;;       ___bmul
  1312 ;;         ___lbmod (ARG)
  1313 ;;         ___lbdiv (ARG)
  1314 ;;           ___lbmod (ARG)
  1315 ;;       ___lbdiv
  1316 ;;         ___lbmod (ARG)
  1317 ;;       ___ftmul
  1318 ;;         ___ftpack
  1319 ;;         ___ftdiv (ARG)
  1320 ;;           ___ftpack
  1321 ;;           ___altoft (ARG)
  1322 ;;             ___ftpack
  1323 ;;         ___altoft (ARG)
  1324 ;;           ___ftpack
  1325 ;;         ___fttol (ARG)
  1326 ;;           ___ftpack (ARG)
  1327 ;;           ___awmod (ARG)
  1328 ;;           ___awdiv (ARG)
  1329 ;;             ___awmod (ARG)
  1330 ;;           ___bmul (ARG)
  1331 ;;             ___lbmod (ARG)
  1332 ;;             ___lbdiv (ARG)
  1333 ;;               ___lbmod (ARG)
  1334 ;;         ___awdiv (ARG)
  1335 ;;           ___awmod (ARG)
  1336 ;;         ___awmod (ARG)
  1337 ;;         ___bmul (ARG)
  1338 ;;           ___lbmod (ARG)
  1339 ;;           ___lbdiv (ARG)
  1340 ;;             ___lbmod (ARG)
  1341 ;;         ___lbdiv (ARG)
  1342 ;;           ___lbmod (ARG)
  1343 ;;         ___lbmod (ARG)
  1344 ;;       ___ftadd (ARG)
  1345 ;;         ___ftpack
  1346 ;;         ___lbmod (ARG)
  1347 ;;         ___bmul (ARG)
  1348 ;;           ___lbmod (ARG)
  1349 ;;           ___lbdiv (ARG)
  1350 ;;             ___lbmod (ARG)
  1351 ;;         ___lbdiv (ARG)
  1352 ;;           ___lbmod (ARG)
  1353 ;;         ___ftmul (ARG)
  1354 ;;           ___ftpack
  1355 ;;           ___ftdiv (ARG)
  1356 ;;             ___ftpack
  1357 ;;             ___altoft (ARG)
  1358 ;;               ___ftpack
  1359 ;;           ___altoft (ARG)
  1360 ;;             ___ftpack
  1361 ;;           ___fttol (ARG)
  1362 ;;             ___ftpack (ARG)
  1363 ;;             ___awmod (ARG)
  1364 ;;             ___awdiv (ARG)
  1365 ;;               ___awmod (ARG)
  1366 ;;             ___bmul (ARG)
  1367 ;;               ___lbmod (ARG)
  1368 ;;               ___lbdiv (ARG)
  1369 ;;                 ___lbmod (ARG)
  1370 ;;           ___awdiv (ARG)
  1371 ;;             ___awmod (ARG)
  1372 ;;           ___awmod (ARG)
  1373 ;;           ___bmul (ARG)
  1374 ;;             ___lbmod (ARG)
  1375 ;;             ___lbdiv (ARG)
  1376 ;;               ___lbmod (ARG)
  1377 ;;           ___lbdiv (ARG)
  1378 ;;             ___lbmod (ARG)
  1379 ;;           ___lbmod (ARG)
  1380 ;;     ___ftadd
  1381 ;;       ___ftpack
  1382 ;;       ___lbmod (ARG)
  1383 ;;       ___bmul (ARG)
  1384 ;;         ___lbmod (ARG)
  1385 ;;         ___lbdiv (ARG)
  1386 ;;           ___lbmod (ARG)
  1387 ;;       ___lbdiv (ARG)
  1388 ;;         ___lbmod (ARG)
  1389 ;;       ___ftmul (ARG)
  1390 ;;         ___ftpack
  1391 ;;         ___ftdiv (ARG)
  1392 ;;           ___ftpack
  1393 ;;           ___altoft (ARG)
  1394 ;;             ___ftpack
  1395 ;;         ___altoft (ARG)
  1396 ;;           ___ftpack
  1397 ;;         ___fttol (ARG)
  1398 ;;           ___ftpack (ARG)
  1399 ;;           ___awmod (ARG)
  1400 ;;           ___awdiv (ARG)
  1401 ;;             ___awmod (ARG)
  1402 ;;           ___bmul (ARG)
  1403 ;;             ___lbmod (ARG)
  1404 ;;             ___lbdiv (ARG)
  1405 ;;               ___lbmod (ARG)
  1406 ;;         ___awdiv (ARG)
  1407 ;;           ___awmod (ARG)
  1408 ;;         ___awmod (ARG)
  1409 ;;         ___bmul (ARG)
  1410 ;;           ___lbmod (ARG)
  1411 ;;           ___lbdiv (ARG)
  1412 ;;             ___lbmod (ARG)
  1413 ;;         ___lbdiv (ARG)
  1414 ;;           ___lbmod (ARG)
  1415 ;;         ___lbmod (ARG)
  1416 ;;     ___fttol
  1417 ;;       ___ftpack (ARG)
  1418 ;;       ___awmod (ARG)
  1419 ;;       ___awdiv (ARG)
  1420 ;;         ___awmod (ARG)
  1421 ;;       ___bmul (ARG)
  1422 ;;         ___lbmod (ARG)
  1423 ;;         ___lbdiv (ARG)
  1424 ;;           ___lbmod (ARG)
  1425 ;;     __div_to_l_
  1426 ;;     __tdiv_to_l_
  1427 ;;     ___lltoft
  1428 ;;       ___ftpack
  1429 ;;     ___ftsub
  1430 ;;       ___ftadd
  1431 ;;         ___ftpack
  1432 ;;         ___lbmod (ARG)
  1433 ;;         ___bmul (ARG)
  1434 ;;           ___lbmod (ARG)
  1435 ;;           ___lbdiv (ARG)
  1436 ;;             ___lbmod (ARG)
  1437 ;;         ___lbdiv (ARG)
  1438 ;;           ___lbmod (ARG)
  1439 ;;         ___ftmul (ARG)
  1440 ;;           ___ftpack
  1441 ;;           ___ftdiv (ARG)
  1442 ;;             ___ftpack
  1443 ;;             ___altoft (ARG)
  1444 ;;               ___ftpack
  1445 ;;           ___altoft (ARG)
  1446 ;;             ___ftpack
  1447 ;;           ___fttol (ARG)
  1448 ;;             ___ftpack (ARG)
  1449 ;;             ___awmod (ARG)
  1450 ;;             ___awdiv (ARG)
  1451 ;;               ___awmod (ARG)
  1452 ;;             ___bmul (ARG)
  1453 ;;               ___lbmod (ARG)
  1454 ;;               ___lbdiv (ARG)
  1455 ;;                 ___lbmod (ARG)
  1456 ;;           ___awdiv (ARG)
  1457 ;;             ___awmod (ARG)
  1458 ;;           ___awmod (ARG)
  1459 ;;           ___bmul (ARG)
  1460 ;;             ___lbmod (ARG)
  1461 ;;             ___lbdiv (ARG)
  1462 ;;               ___lbmod (ARG)
  1463 ;;           ___lbdiv (ARG)
  1464 ;;             ___lbmod (ARG)
  1465 ;;           ___lbmod (ARG)
  1466 ;;       ___lltoft (ARG)
  1467 ;;         ___ftpack
  1468 ;;     ___lldiv
  1469 ;;     ___llmod
  1470 ;;       ___lldiv (ARG)
  1471 ;;
  1472 ;; _ngat (ROOT)
  1473 ;;
  1474 ;; Address spaces:
  1475 ;;Name               Size   Autos  Total    Cost      Usage
  1476 ;;BITCOMMON            E      0       0       0        0.0%
  1477 ;;EEDATA             100      0       0       0        0.0%
  1478 ;;NULL                 0      0       0       0        0.0%
  1479 ;;CODE                 0      0       0       0        0.0%
  1480 ;;COMMON               E      A       C       1       85.7%
  1481 ;;BITSFR0              0      0       0       1        0.0%
  1482 ;;SFR0                 0      0       0       1        0.0%
  1483 ;;BITSFR1              0      0       0       2        0.0%
  1484 ;;SFR1                 0      0       0       2        0.0%
  1485 ;;STACK                0      0       5       2        0.0%
  1486 ;;ABS                  0      0      71       3        0.0%
  1487 ;;BITBANK0            50      0       0       4        0.0%
  1488 ;;BITSFR3              0      0       0       4        0.0%
  1489 ;;SFR3                 0      0       0       4        0.0%
  1490 ;;BANK0               50     43      4C       5       95.0%
  1491 ;;BITSFR2              0      0       0       5        0.0%
  1492 ;;SFR2                 0      0       0       5        0.0%
  1493 ;;BITBANK1            50      0       0       6        0.0%
  1494 ;;BANK1               50     19      19       7       31.3%
  1495 ;;BITBANK3            60      0       0       8        0.0%
  1496 ;;BANK3               60      0       0       9        0.0%
  1497 ;;BITBANK2            60      0       0      10        0.0%
  1498 ;;BANK2               60      0       0      11        0.0%
  1499 ;;DATA                 0      0      76      12        0.0%
  1500                           
  1501                           
  1502 ;; *************** function _main *****************
  1503 ;; Defined at:
  1504 ;;		line 22 in file "D:\TTVXL\Project TTVXL\BT01week14ttvxl\BT01week14ttvxl.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;		None               void
  1511 ;; Registers used:
  1512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 17F/0
  1515 ;;		On exit  : 60/20
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels required when called:    6
  1524 ;; This function calls:
  1525 ;;		_lcd_init
  1526 ;;		_pwm_10bit
  1527 ;;		___altoft
  1528 ;;		___ftdiv
  1529 ;;		___ftmul
  1530 ;;		___ftge
  1531 ;;		_lcd_gotoxy
  1532 ;;		_printf
  1533 ;; This function is called by:
  1534 ;;		Startup code after reset
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537  172F                     _main:	
  1538                           
  1539                           ;BT01week14ttvxl.c: 23: ANSEL = ANSELH = 0;
  1540                           
  1541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1542  172F  1683               	bsf	3,5	;RP0=1, select bank3
  1543  1730  1703               	bsf	3,6	;RP1=1, select bank3
  1544  1731  0189               	clrf	9	;volatile
  1545  1732  0188               	clrf	8	;volatile
  1546                           
  1547                           ;BT01week14ttvxl.c: 24: lcd_init();
  1548  1733  120A  158A  22A3   	fcall	_lcd_init
      +       160A  118A         
  1549                           
  1550                           ;BT01week14ttvxl.c: 25: TRISE0 = 0; RE0 = 1;
  1551  1738  1683               	bsf	3,5	;RP0=1, select bank1
  1552  1739  1009               	bcf	9,0
  1553  173A  1283               	bcf	3,5	;RP0=0, select bank0
  1554  173B  1409               	bsf	9,0
  1555                           
  1556                           ;BT01week14ttvxl.c: 26: TRISC2=0;
  1557  173C  1683               	bsf	3,5	;RP0=1, select bank1
  1558  173D  1107               	bcf	7,2
  1559                           
  1560                           ;BT01week14ttvxl.c: 29: T2CKPS1 = 0; T2CKPS0 = 1;
  1561  173E  1283               	bcf	3,5	;RP0=0, select bank0
  1562  173F  307C               	movlw	124
  1563  1740  1092               	bcf	18,1
  1564  1741  1412               	bsf	18,0
  1565                           
  1566                           ;BT01week14ttvxl.c: 30: PR2 = 124; TMR2 = 0;
  1567  1742  1683               	bsf	3,5	;RP0=1, select bank1
  1568  1743  0092               	movwf	18	;volatile
  1569  1744  1283               	bcf	3,5	;RP0=0, select bank0
  1570  1745  0191               	clrf	17	;volatile
  1571  1746  300C               	movlw	12
  1572                           
  1573                           ;BT01week14ttvxl.c: 31: TMR2ON = 1;
  1574  1747  1512               	bsf	18,2
  1575                           
  1576                           ;BT01week14ttvxl.c: 34: CCP1CON=0b00001100;
  1577  1748  0097               	movwf	23	;volatile
  1578                           
  1579                           ;BT01week14ttvxl.c: 37: TMR1CS =1 ;
  1580  1749  1490               	bsf	16,1
  1581                           
  1582                           ;BT01week14ttvxl.c: 38: T1CKPS1=0; T1CKPS0=0;
  1583  174A  1290               	bcf	16,5
  1584  174B  1210               	bcf	16,4
  1585                           
  1586                           ;BT01week14ttvxl.c: 39: T1SYNC =1;
  1587  174C  1510               	bsf	16,2
  1588                           
  1589                           ;BT01week14ttvxl.c: 40: TMR1=0;
  1590  174D  018E               	clrf	14	;volatile
  1591  174E  018F               	clrf	15	;volatile
  1592                           
  1593                           ;BT01week14ttvxl.c: 41: TMR1GE=0;
  1594  174F  1310               	bcf	16,6
  1595                           
  1596                           ;BT01week14ttvxl.c: 42: TMR1ON=1;
  1597  1750  1410               	bsf	16,0
  1598                           
  1599                           ;BT01week14ttvxl.c: 44: T0CS = 0;
  1600  1751  1683               	bsf	3,5	;RP0=1, select bank1
  1601  1752  3006               	movlw	6
  1602  1753  1281               	bcf	1,5
  1603                           
  1604                           ;BT01week14ttvxl.c: 45: PSA =0;
  1605  1754  1181               	bcf	1,3
  1606                           
  1607                           ;BT01week14ttvxl.c: 46: PS2=0;PS1=1;PS0=0;
  1608  1755  1101               	bcf	1,2
  1609  1756  1481               	bsf	1,1
  1610  1757  1001               	bcf	1,0
  1611                           
  1612                           ;BT01week14ttvxl.c: 47: TMR0=6;
  1613  1758  1283               	bcf	3,5	;RP0=0, select bank0
  1614  1759  0081               	movwf	1	;volatile
  1615  175A  302C               	movlw	44
  1616                           
  1617                           ;BT01week14ttvxl.c: 48: T0IE=1;
  1618  175B  168B               	bsf	11,5
  1619                           
  1620                           ;BT01week14ttvxl.c: 49: T0IF=0;
  1621  175C  110B               	bcf	11,2
  1622                           
  1623                           ;BT01week14ttvxl.c: 50: GIE=1;
  1624  175D  178B               	bsf	11,7
  1625                           
  1626                           ;BT01week14ttvxl.c: 51: PEIE=1;
  1627  175E  170B               	bsf	11,6
  1628                           
  1629                           ;BT01week14ttvxl.c: 53: pwm_t = 300;
  1630  175F  00E6               	movwf	_pwm_t
  1631  1760  3001               	movlw	1
  1632  1761  00E7               	movwf	_pwm_t+1
  1633                           
  1634                           ;BT01week14ttvxl.c: 54: pwm_10bit(pwm_t);
  1635  1762  302C               	movlw	44
  1636  1763  00A8               	movwf	?_pwm_10bit
  1637  1764  3001               	movlw	1
  1638  1765  00A9               	movwf	?_pwm_10bit+1
  1639  1766  120A  158A  242D   	fcall	_pwm_10bit
      +       160A  118A         
  1640  176B                     l8495:	
  1641                           
  1642                           ;BT01week14ttvxl.c: 57: {
  1643                           ;BT01week14ttvxl.c: 58: v = (xung/360.0)*10.0*60.0;
  1644  176B  1283               	bcf	3,5	;RP0=0, select bank0
  1645  176C  3016               	movlw	22
  1646  176D  01B5               	clrf	?___ftmul
  1647  176E  00B6               	movwf	?___ftmul+1
  1648  176F  3044               	movlw	68
  1649  1770  00B7               	movwf	?___ftmul+2
  1650  1771  30B4               	movlw	180
  1651  1772  01A6               	clrf	?___ftdiv
  1652  1773  00A7               	movwf	?___ftdiv+1
  1653  1774  3043               	movlw	67
  1654  1775  00A8               	movwf	?___ftdiv+2
  1655  1776  086B               	movf	_xung+3,w
  1656  1777  00A3               	movwf	?___altoft+3
  1657  1778  086A               	movf	_xung+2,w
  1658  1779  00A2               	movwf	?___altoft+2
  1659  177A  0869               	movf	_xung+1,w
  1660  177B  00A1               	movwf	?___altoft+1
  1661  177C  0868               	movf	_xung,w
  1662  177D  00A0               	movwf	?___altoft
  1663  177E  120A  158A  2441   	fcall	___altoft
      +       160A  118A         
  1664  1783  0820               	movf	?___altoft,w
  1665  1784  00A9               	movwf	?___ftdiv+3
  1666  1785  0821               	movf	?___altoft+1,w
  1667  1786  00AA               	movwf	?___ftdiv+4
  1668  1787  0822               	movf	?___altoft+2,w
  1669  1788  00AB               	movwf	?___ftdiv+5
  1670  1789  120A  158A  2470   	fcall	___ftdiv
      +       160A  118A         
  1671  178E  0826               	movf	?___ftdiv,w
  1672  178F  00B8               	movwf	?___ftmul+3
  1673  1790  0827               	movf	?___ftdiv+1,w
  1674  1791  00B9               	movwf	?___ftmul+4
  1675  1792  0828               	movf	?___ftdiv+2,w
  1676  1793  00BA               	movwf	?___ftmul+5
  1677  1794  120A  158A  26EC   	fcall	___ftmul
      +       160A  118A         
  1678  1799  0835               	movf	?___ftmul,w
  1679  179A  00E3               	movwf	_v
  1680  179B  0836               	movf	?___ftmul+1,w
  1681  179C  00E4               	movwf	_v+1
  1682  179D  0837               	movf	?___ftmul+2,w
  1683  179E  00E5               	movwf	_v+2
  1684                           
  1685                           ;BT01week14ttvxl.c: 59: if(v < 30.7)pwm_t = pwm_t++;
  1686  179F  0863               	movf	_v,w
  1687  17A0  00F2               	movwf	?___ftge
  1688  17A1  0864               	movf	_v+1,w
  1689  17A2  00F3               	movwf	?___ftge+1
  1690  17A3  0865               	movf	_v+2,w
  1691  17A4  00F4               	movwf	?___ftge+2
  1692  17A5  309A               	movlw	154
  1693  17A6  00F5               	movwf	?___ftge+3
  1694  17A7  30F5               	movlw	245
  1695  17A8  00F6               	movwf	?___ftge+4
  1696  17A9  3041               	movlw	65
  1697  17AA  00F7               	movwf	?___ftge+5
  1698  17AB  120A  118A  25A6   	fcall	___ftge
      +       160A  118A         
  1699  17B0  1803               	btfsc	3,0
  1700  17B1  2FB6               	goto	l8501
  1701  17B2  0AE6               	incf	_pwm_t,f
  1702  17B3  1903               	skipnz
  1703  17B4  0AE7               	incf	_pwm_t+1,f
  1704  17B5  2FCD               	goto	l8505
  1705  17B6                     l8501:	
  1706                           
  1707                           ;BT01week14ttvxl.c: 60: else if(v > 30.7)pwm_t = pwm_t--;
  1708  17B6  309A               	movlw	154
  1709  17B7  00F2               	movwf	?___ftge
  1710  17B8  30F5               	movlw	245
  1711  17B9  00F3               	movwf	?___ftge+1
  1712  17BA  3041               	movlw	65
  1713  17BB  00F4               	movwf	?___ftge+2
  1714  17BC  0863               	movf	_v,w
  1715  17BD  00F5               	movwf	?___ftge+3
  1716  17BE  0864               	movf	_v+1,w
  1717  17BF  00F6               	movwf	?___ftge+4
  1718  17C0  0865               	movf	_v+2,w
  1719  17C1  00F7               	movwf	?___ftge+5
  1720  17C2  120A  118A  25A6   	fcall	___ftge
      +       160A  118A         
  1721  17C7  1803               	btfsc	3,0
  1722  17C8  2FCD               	goto	l8505
  1723  17C9  30FF               	movlw	-1
  1724  17CA  07E6               	addwf	_pwm_t,f
  1725  17CB  1C03               	skipc
  1726  17CC  03E7               	decf	_pwm_t+1,f
  1727  17CD                     l8505:	
  1728                           
  1729                           ;BT01week14ttvxl.c: 62: pwm_10bit(pwm_t);
  1730  17CD  0867               	movf	_pwm_t+1,w
  1731  17CE  00A9               	movwf	?_pwm_10bit+1
  1732  17CF  0866               	movf	_pwm_t,w
  1733  17D0  00A8               	movwf	?_pwm_10bit
  1734  17D1  120A  158A  242D   	fcall	_pwm_10bit
      +       160A  118A         
  1735  17D6  3000               	movlw	0
  1736                           
  1737                           ;BT01week14ttvxl.c: 63: lcd_gotoxy(0,0);
  1738  17D7  01F7               	clrf	?_lcd_gotoxy
  1739  17D8  120A  158A  225C   	fcall	_lcd_gotoxy
      +       160A  118A         
  1740                           
  1741                           ;BT01week14ttvxl.c: 64: printf("v: %3.2f",v);
  1742  17DD  0863               	movf	_v,w
  1743  17DE  00DA               	movwf	?_printf
  1744  17DF  0864               	movf	_v+1,w
  1745  17E0  00DB               	movwf	?_printf+1
  1746  17E1  0865               	movf	_v+2,w
  1747  17E2  00DC               	movwf	?_printf+2
  1748  17E3  3082               	movlw	(STR_1-__stringbase)& (0+255)
  1749  17E4  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1750  17E9  3000               	movlw	0
  1751                           
  1752                           ;BT01week14ttvxl.c: 65: lcd_gotoxy(0,1);
  1753  17EA  01F7               	clrf	?_lcd_gotoxy
  1754  17EB  0AF7               	incf	?_lcd_gotoxy,f
  1755  17EC  120A  158A  225C   	fcall	_lcd_gotoxy
      +       160A  118A         
  1756                           
  1757                           ;BT01week14ttvxl.c: 66: printf("xung: %05d",xung);
  1758  17F1  086B               	movf	_xung+3,w
  1759  17F2  00DD               	movwf	?_printf+3
  1760  17F3  086A               	movf	_xung+2,w
  1761  17F4  00DC               	movwf	?_printf+2
  1762  17F5  0869               	movf	_xung+1,w
  1763  17F6  00DB               	movwf	?_printf+1
  1764  17F7  0868               	movf	_xung,w
  1765  17F8  00DA               	movwf	?_printf
  1766  17F9  3077               	movlw	(STR_2-__stringbase)& (0+255)
  1767  17FA  120A  118A  200F   	fcall	_printf
      +       160A  118A         
  1768  17FF  2F6B               	goto	l8495
  1769  1800                     __end_of_main:	
  1770                           
  1771                           	psect	text807
  1772  000F                     __ptext807:	
  1773 ;; =============== function _main ends ============
  1774                           
  1775                           
  1776 ;; *************** function _printf *****************
  1777 ;; Defined at:
  1778 ;;		line 461 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  f               1    wreg     PTR const unsigned char 
  1781 ;;		 -> STR_2(11), STR_1(9), 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1784 ;;		 -> STR_2(11), STR_1(9), 
  1785 ;;  _val            4    9[BANK1 ] struct .
  1786 ;;  fval            3   19[BANK1 ] struct .
  1787 ;;  integ           3    5[BANK1 ] struct .
  1788 ;;  ival            3    0        struct .
  1789 ;;  prec            2   22[BANK1 ] int 
  1790 ;;  width           2   17[BANK1 ] int 
  1791 ;;  exp             2   15[BANK1 ] int 
  1792 ;;  flag            2   13[BANK1 ] unsigned short 
  1793 ;;  c               1   24[BANK1 ] char 
  1794 ;;  ap              1    4[BANK1 ] PTR void [1]
  1795 ;;		 -> ?_printf(2), 
  1796 ;;  d               1    0        unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  2   58[BANK0 ] int 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 60/0
  1803 ;;		On exit  : 60/20
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       4       0       0       0
  1807 ;;      Locals:         0       0      25       0       0
  1808 ;;      Temps:          0       5       0       0       0
  1809 ;;      Totals:         0       9      25       0       0
  1810 ;;Total ram usage:       34 bytes
  1811 ;; Hardware stack levels used:    1
  1812 ;; Hardware stack levels required when called:    5
  1813 ;; This function calls:
  1814 ;;		_putch
  1815 ;;		_isdigit
  1816 ;;		___wmul
  1817 ;;		___ftge
  1818 ;;		___ftneg
  1819 ;;		___awdiv
  1820 ;;		_scale
  1821 ;;		___ftmul
  1822 ;;		_fround
  1823 ;;		___ftadd
  1824 ;;		___fttol
  1825 ;;		__div_to_l_
  1826 ;;		__tdiv_to_l_
  1827 ;;		___lltoft
  1828 ;;		___ftsub
  1829 ;;		___lldiv
  1830 ;;		___llmod
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835  000F                     _printf:	
  1836                           
  1837                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1838                           ;printf@f stored from wreg
  1839  000F  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0010  00A8               	movwf	printf@f^(0+128)
  1841  0011  305A               	movlw	?_printf& (0+255)
  1842  0012  00A4               	movwf	printf@ap^(0+128)
  1843  0013                     l8433:	
  1844  0013  1683               	bsf	3,5	;RP0=1, select bank1
  1845  0014  0828               	movf	printf@f^(0+128),w
  1846  0015  0AA8               	incf	printf@f^(0+128),f
  1847  0016  0084               	movwf	4
  1848  0017  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1849  001C  00B8               	movwf	printf@c^(0+128)
  1850  001D  08B8               	movf	printf@c^(0+128),f
  1851  001E  1903               	btfsc	3,2
  1852  001F  0008               	return
  1853  0020  3A25               	xorlw	37
  1854  0021  1903               	skipnz
  1855  0022  2828               	goto	l8157
  1856  0023  0838               	movf	printf@c^(0+128),w
  1857  0024  2562  120A  118A   	fcall	_putch
  1858  0027  2813               	goto	l8433
  1859  0028                     l8157:	
  1860  0028  01B1               	clrf	printf@width^(0+128)
  1861  0029  01B2               	clrf	(printf@width+1)^(0+128)
  1862  002A  01AD               	clrf	printf@flag^(0+128)
  1863  002B  01AE               	clrf	(printf@flag+1)^(0+128)
  1864  002C  282F               	goto	l8163
  1865  002D                     l2214:	
  1866  002D  152D               	bsf	printf@flag^(0+128),2
  1867  002E  0AA8               	incf	printf@f^(0+128),f
  1868  002F                     l8163:	
  1869  002F  0828               	movf	printf@f^(0+128),w
  1870  0030  0084               	movwf	4
  1871  0031  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1872                           
  1873                           ; Switch size 1, requested type "space"
  1874                           ; Number of cases is 1, Range of values is 48 to 48
  1875                           ; switch strategies available:
  1876                           ; Name         Instructions Cycles
  1877                           ; simple_byte            4     3 (average)
  1878                           ; direct_byte           14    11 (fixed)
  1879                           ; jumptable            263     9 (fixed)
  1880                           ;	Chosen strategy is simple_byte
  1881  0036  3A30               	xorlw	48	; case 48
  1882  0037  1903               	skipnz
  1883  0038  282D               	goto	l2214
  1884  0039  283A               	goto	l8165
  1885  003A                     l8165:	
  1886  003A  0828               	movf	printf@f^(0+128),w
  1887  003B  0084               	movwf	4
  1888  003C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1889  0041  25D2  120A  118A   	fcall	_isdigit
  1890  0044  1C03               	btfss	3,0
  1891  0045  286A               	goto	l8175
  1892  0046  01B1               	clrf	printf@width^(0+128)
  1893  0047  01B2               	clrf	(printf@width+1)^(0+128)
  1894  0048                     l8169:	
  1895  0048  0832               	movf	(printf@width+1)^(0+128),w
  1896  0049  00F3               	movwf	?___wmul+1
  1897  004A  0831               	movf	printf@width^(0+128),w
  1898  004B  00F2               	movwf	?___wmul
  1899  004C  300A               	movlw	10
  1900  004D  00F4               	movwf	?___wmul+2
  1901  004E  01F5               	clrf	?___wmul+3
  1902  004F  25E0               	fcall	___wmul
  1903  0050  0828               	movf	printf@f^(0+128),w
  1904  0051  0084               	movwf	4
  1905  0052  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1906  0057  275E  120A  118A   	fcall	PL13	;call to abstracted procedure
  1907  005A  00B1               	movwf	printf@width^(0+128)
  1908  005B  27A1               	fcall	PL29	;call to abstracted procedure
  1909  005C  00B2               	movwf	(printf@width+1)^(0+128)
  1910  005D  0AA8               	incf	printf@f^(0+128),f
  1911  005E  0828               	movf	printf@f^(0+128),w
  1912  005F  0084               	movwf	4
  1913  0060  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1914  0065  25D2  120A  118A   	fcall	_isdigit
  1915  0068  1803               	btfsc	3,0
  1916  0069  2848               	goto	l8169
  1917  006A                     l8175:	
  1918  006A  0828               	movf	printf@f^(0+128),w
  1919  006B  0084               	movwf	4
  1920  006C  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1921  0071  3A2E               	xorlw	46
  1922  0072  1D03               	skipz
  1923  0073  289D               	goto	l8189
  1924  0074  172E               	bsf	(printf@flag^(0+128)+1),6
  1925  0075  0AA8               	incf	printf@f^(0+128),f
  1926  0076  01B6               	clrf	printf@prec^(0+128)
  1927  0077  01B7               	clrf	(printf@prec+1)^(0+128)
  1928  0078                     l8187:	
  1929  0078  0828               	movf	printf@f^(0+128),w
  1930  0079  0084               	movwf	4
  1931  007A  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1932  007F  25D2  120A  118A   	fcall	_isdigit
  1933  0082  1C03               	btfss	3,0
  1934  0083  28A3               	goto	l8195
  1935  0084  0837               	movf	(printf@prec+1)^(0+128),w
  1936  0085  00F3               	movwf	?___wmul+1
  1937  0086  0836               	movf	printf@prec^(0+128),w
  1938  0087  00F2               	movwf	?___wmul
  1939  0088  300A               	movlw	10
  1940  0089  00F4               	movwf	?___wmul+2
  1941  008A  01F5               	clrf	?___wmul+3
  1942  008B  25E0               	fcall	___wmul
  1943  008C  0828               	movf	printf@f^(0+128),w
  1944  008D  0084               	movwf	4
  1945  008E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1946  0093  275E  120A  118A   	fcall	PL13	;call to abstracted procedure
  1947  0096  00B6               	movwf	printf@prec^(0+128)
  1948  0097  27A1  120A  118A   	fcall	PL29	;call to abstracted procedure
  1949  009A  00B7               	movwf	(printf@prec+1)^(0+128)
  1950  009B  0AA8               	incf	printf@f^(0+128),f
  1951  009C  2878               	goto	l8187
  1952  009D                     l8189:	
  1953  009D  01B6               	clrf	printf@prec^(0+128)
  1954  009E  01B7               	clrf	(printf@prec+1)^(0+128)
  1955  009F  162E               	bsf	(printf@flag^(0+128)+1),4
  1956  00A0  28A3               	goto	l8195
  1957  00A1                     l2229:	
  1958  00A1  152E               	bsf	(printf@flag^(0+128)+1),2
  1959  00A2  28B9               	goto	l8197
  1960  00A3                     l8195:	
  1961  00A3  0828               	movf	printf@f^(0+128),w
  1962  00A4  0AA8               	incf	printf@f^(0+128),f
  1963  00A5  0084               	movwf	4
  1964  00A6  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  1965  00AB  00B8               	movwf	printf@c^(0+128)
  1966                           
  1967                           ; Switch size 1, requested type "space"
  1968                           ; Number of cases is 4, Range of values is 0 to 105
  1969                           ; switch strategies available:
  1970                           ; Name         Instructions Cycles
  1971                           ; simple_byte           13     7 (average)
  1972                           ; jumptable            260     6 (fixed)
  1973                           ; rangetable           110     6 (fixed)
  1974                           ; spacedrange          218     9 (fixed)
  1975                           ; locatedrange         106     3 (fixed)
  1976                           ;	Chosen strategy is simple_byte
  1977  00AC  3A00               	xorlw	0	; case 0
  1978  00AD  1903               	skipnz
  1979  00AE  2D61               	goto	l2310
  1980  00AF  3A64               	xorlw	100	; case 100
  1981  00B0  1903               	skipnz
  1982  00B1  28B9               	goto	l8197
  1983  00B2  3A02               	xorlw	2	; case 102
  1984  00B3  1903               	skipnz
  1985  00B4  28A1               	goto	l2229
  1986  00B5  3A0F               	xorlw	15	; case 105
  1987  00B6  1903               	skipnz
  1988  00B7  28B9               	goto	l8197
  1989  00B8  2813               	goto	l8433
  1990  00B9                     l8197:	
  1991  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1992  00BA  3007               	movlw	7
  1993  00BB  01DE               	clrf	??_printf
  1994  00BC  1683               	bsf	3,5	;RP0=1, select bank1
  1995  00BD  052E               	andwf	(printf@flag+1)^(0+128),w
  1996  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1997  00BF  00DF               	movwf	??_printf+1
  1998  00C0  045E               	iorwf	??_printf,w
  1999  00C1  1903               	skipnz
  2000  00C2  2C12               	goto	l8349
  2001  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  2002  00C4  1E2E               	btfss	(printf@flag+1)^(0+128),4
  2003  00C5  28C9               	goto	l8203
  2004  00C6  3006               	movlw	6
  2005  00C7  00B6               	movwf	printf@prec^(0+128)
  2006  00C8  01B7               	clrf	(printf@prec+1)^(0+128)
  2007  00C9                     l8203:	
  2008  00C9  0824               	movf	printf@ap^(0+128),w
  2009  00CA  0084               	movwf	4
  2010  00CB  1383               	bcf	3,7	;select IRP bank0
  2011  00CC  0800               	movf	0,w
  2012  00CD  00B3               	movwf	printf@fval^(0+128)
  2013  00CE  0A84               	incf	4,f
  2014  00CF  0800               	movf	0,w
  2015  00D0  00B4               	movwf	(printf@fval+1)^(0+128)
  2016  00D1  0A84               	incf	4,f
  2017  00D2  0800               	movf	0,w
  2018  00D3  00B5               	movwf	(printf@fval+2)^(0+128)
  2019  00D4  3003               	movlw	3
  2020  00D5  07A4               	addwf	printf@ap^(0+128),f
  2021  00D6  0833               	movf	printf@fval^(0+128),w
  2022  00D7  00F2               	movwf	?___ftge
  2023  00D8  0834               	movf	(printf@fval+1)^(0+128),w
  2024  00D9  00F3               	movwf	?___ftge+1
  2025  00DA  0835               	movf	(printf@fval+2)^(0+128),w
  2026  00DB  00F4               	movwf	?___ftge+2
  2027  00DC  01F5               	clrf	?___ftge+3
  2028  00DD  01F6               	clrf	?___ftge+4
  2029  00DE  01F7               	clrf	?___ftge+5
  2030  00DF  25A6  120A  118A   	fcall	___ftge
  2031  00E2  1803               	btfsc	3,0
  2032  00E3  28F5               	goto	l8213
  2033  00E4  0833               	movf	printf@fval^(0+128),w
  2034  00E5  00F2               	movwf	?___ftneg
  2035  00E6  0834               	movf	(printf@fval+1)^(0+128),w
  2036  00E7  00F3               	movwf	?___ftneg+1
  2037  00E8  0835               	movf	(printf@fval+2)^(0+128),w
  2038  00E9  00F4               	movwf	?___ftneg+2
  2039  00EA  2715  120A  118A   	fcall	___ftneg
  2040  00ED  0872               	movf	?___ftneg,w
  2041  00EE  00B3               	movwf	printf@fval^(0+128)
  2042  00EF  0873               	movf	?___ftneg+1,w
  2043  00F0  00B4               	movwf	(printf@fval+1)^(0+128)
  2044  00F1  0874               	movf	?___ftneg+2,w
  2045  00F2  00B5               	movwf	(printf@fval+2)^(0+128)
  2046  00F3  3003               	movlw	3
  2047  00F4  04AD               	iorwf	printf@flag^(0+128),f
  2048  00F5                     l8213:	
  2049  00F5  01AF               	clrf	printf@exp^(0+128)
  2050  00F6  01B0               	clrf	(printf@exp+1)^(0+128)
  2051  00F7  0835               	movf	(printf@fval+2)^(0+128),w
  2052  00F8  0434               	iorwf	(printf@fval+1)^(0+128),w
  2053  00F9  0433               	iorwf	printf@fval^(0+128),w
  2054  00FA  1903               	skipnz
  2055  00FB  2993               	goto	l8245
  2056  00FC  30B3               	movlw	low printf@fval
  2057  00FD  0084               	movwf	4
  2058  00FE  279A  120A  118A   	fcall	PL28	;call to abstracted procedure
  2059  0101  0A84               	incf	4,f
  2060  0102  0800               	movf	0,w
  2061  0103  00E0               	movwf	??_printf+2
  2062  0104  0A84               	incf	4,f
  2063  0105  0800               	movf	0,w
  2064  0106  00E1               	movwf	??_printf+3
  2065  0107  300F               	movlw	15
  2066  0108                     u5265:	
  2067  0108  1003               	clrc
  2068  0109  0CE1               	rrf	??_printf+3,f
  2069  010A  0CE0               	rrf	??_printf+2,f
  2070  010B  0CDF               	rrf	??_printf+1,f
  2071  010C  0CDE               	rrf	??_printf,f
  2072  010D  3EFF               	addlw	-1
  2073  010E  1D03               	skipz
  2074  010F  2908               	goto	u5265
  2075  0110  085F               	movf	??_printf+1,w
  2076  0111  1683               	bsf	3,5	;RP0=1, select bank1
  2077  0112  00B0               	movwf	(printf@exp+1)^(0+128)
  2078  0113  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0114  085E               	movf	??_printf,w
  2080  0115  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0116  00AF               	movwf	printf@exp^(0+128)
  2082  0117  3082               	movlw	-126
  2083  0118  01B0               	clrf	(printf@exp+1)^(0+128)
  2084  0119  07AF               	addwf	printf@exp^(0+128),f
  2085  011A  1C03               	skipc
  2086  011B  03B0               	decf	(printf@exp+1)^(0+128),f
  2087  011C  30FF               	movlw	-1
  2088  011D  07AF               	addwf	printf@exp^(0+128),f
  2089  011E  1C03               	skipc
  2090  011F  03B0               	decf	(printf@exp+1)^(0+128),f
  2091  0120  3003               	movlw	3
  2092  0121  00F2               	movwf	?___wmul
  2093  0122  01F3               	clrf	?___wmul+1
  2094  0123  0830               	movf	(printf@exp+1)^(0+128),w
  2095  0124  00F5               	movwf	?___wmul+3
  2096  0125  082F               	movf	printf@exp^(0+128),w
  2097  0126  00F4               	movwf	?___wmul+2
  2098  0127  25E0               	fcall	___wmul
  2099  0128  0873               	movf	?___wmul+1,w
  2100  0129  00B0               	movwf	(printf@exp+1)^(0+128)
  2101  012A  0872               	movf	?___wmul,w
  2102  012B  00AF               	movwf	printf@exp^(0+128)
  2103  012C  300A               	movlw	10
  2104  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2105  012E  00A0               	movwf	?___awdiv
  2106  012F  01A1               	clrf	?___awdiv+1
  2107  0130  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0131  0830               	movf	(printf@exp+1)^(0+128),w
  2109  0132  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0133  00A3               	movwf	?___awdiv+3
  2111  0134  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0135  082F               	movf	printf@exp^(0+128),w
  2113  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0137  00A2               	movwf	?___awdiv+2
  2115  0138  120A  158A  266A   	fcall	___awdiv
      +       120A  118A         
  2116  013D  0821               	movf	?___awdiv+1,w
  2117  013E  1683               	bsf	3,5	;RP0=1, select bank1
  2118  013F  00B0               	movwf	(printf@exp+1)^(0+128)
  2119  0140  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0141  0820               	movf	?___awdiv,w
  2121  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2122  0143  00AF               	movwf	printf@exp^(0+128)
  2123  0144  1FB0               	btfss	(printf@exp+1)^(0+128),7
  2124  0145  294A               	goto	l8233
  2125  0146  30FF               	movlw	-1
  2126  0147  07AF               	addwf	printf@exp^(0+128),f
  2127  0148  1C03               	skipc
  2128  0149  03B0               	decf	(printf@exp+1)^(0+128),f
  2129  014A                     l8233:	
  2130  014A  032F               	decf	printf@exp^(0+128),w
  2131  014B  3AFF               	xorlw	255
  2132  014C  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2133  0151  2748  120A  118A   	fcall	PL7	;call to abstracted procedure
  2134  0154  2775               	fcall	PL16	;call to abstracted procedure
  2135  0155  1683               	bsf	3,5	;RP0=1, select bank1
  2136  0156  0825               	movf	printf@integ^(0+128),w
  2137  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0158  00B8               	movwf	?___ftmul+3
  2139  0159  1683               	bsf	3,5	;RP0=1, select bank1
  2140  015A  0826               	movf	(printf@integ+1)^(0+128),w
  2141  015B  1283               	bcf	3,5	;RP0=0, select bank0
  2142  015C  00B9               	movwf	?___ftmul+4
  2143  015D  1683               	bsf	3,5	;RP0=1, select bank1
  2144  015E  0827               	movf	(printf@integ+2)^(0+128),w
  2145  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0160  00BA               	movwf	?___ftmul+5
  2147  0161  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2148  0166  0835               	movf	?___ftmul,w
  2149  0167  1683               	bsf	3,5	;RP0=1, select bank1
  2150  0168  00A5               	movwf	printf@integ^(0+128)
  2151  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2152  016A  0836               	movf	?___ftmul+1,w
  2153  016B  1683               	bsf	3,5	;RP0=1, select bank1
  2154  016C  00A6               	movwf	(printf@integ+1)^(0+128)
  2155  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2156  016E  0837               	movf	?___ftmul+2,w
  2157  016F  1683               	bsf	3,5	;RP0=1, select bank1
  2158  0170  00A7               	movwf	(printf@integ+2)^(0+128)
  2159  0171  2793  120A  118A   	fcall	PL21	;call to abstracted procedure
  2160  0174  3080               	movlw	128
  2161  0175  01F5               	clrf	?___ftge+3
  2162  0176  00F6               	movwf	?___ftge+4
  2163  0177  303F               	movlw	63
  2164  0178  00F7               	movwf	?___ftge+5
  2165  0179  25A6  120A  118A   	fcall	___ftge
  2166  017C  1803               	btfsc	3,0
  2167  017D  2983               	goto	l8241
  2168  017E  30FF               	movlw	-1
  2169  017F  07AF               	addwf	printf@exp^(0+128),f
  2170  0180  1C03               	skipc
  2171  0181  03B0               	decf	(printf@exp+1)^(0+128),f
  2172  0182  2993               	goto	l8245
  2173  0183                     l8241:	
  2174  0183  2793  120A  118A   	fcall	PL21	;call to abstracted procedure
  2175  0186  3020               	movlw	32
  2176  0187  01F5               	clrf	?___ftge+3
  2177  0188  00F6               	movwf	?___ftge+4
  2178  0189  3041               	movlw	65
  2179  018A  00F7               	movwf	?___ftge+5
  2180  018B  25A6  120A  118A   	fcall	___ftge
  2181  018E  1C03               	btfss	3,0
  2182  018F  2993               	goto	l8245
  2183  0190  0AAF               	incf	printf@exp^(0+128),f
  2184  0191  1903               	skipnz
  2185  0192  0AB0               	incf	(printf@exp+1)^(0+128),f
  2186  0193                     l8245:	
  2187  0193  0837               	movf	(printf@prec+1)^(0+128),w
  2188  0194  3A80               	xorlw	128
  2189  0195  00FF               	movwf	127
  2190  0196  3080               	movlw	128
  2191  0197  027F               	subwf	127,w
  2192  0198  1D03               	skipz
  2193  0199  299C               	goto	u5305
  2194  019A  300D               	movlw	13
  2195  019B  0236               	subwf	printf@prec^(0+128),w
  2196  019C                     u5305:	
  2197  019C  1803               	skipnc
  2198  019D  29C7               	goto	l8249
  2199  019E  27AF               	call	PL32	;select bank 1
  2200  019F  0836               	movf	printf@prec^(0+128),w
  2201  01A0  120A  158A  210A   	fcall	_fround
      +       120A  118A         
  2202  01A5  0850               	movf	?_fround,w
  2203  01A6  00C4               	movwf	?___ftadd
  2204  01A7  0851               	movf	?_fround+1,w
  2205  01A8  00C5               	movwf	?___ftadd+1
  2206  01A9  0852               	movf	?_fround+2,w
  2207  01AA  00C6               	movwf	?___ftadd+2
  2208  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2209  01AC  0833               	movf	printf@fval^(0+128),w
  2210  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2211  01AE  00C7               	movwf	?___ftadd+3
  2212  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  2213  01B0  0834               	movf	(printf@fval+1)^(0+128),w
  2214  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2215  01B2  00C8               	movwf	?___ftadd+4
  2216  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2217  01B4  0835               	movf	(printf@fval+2)^(0+128),w
  2218  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2219  01B6  00C9               	movwf	?___ftadd+5
  2220  01B7  120A  158A  2048   	fcall	___ftadd
      +       120A  118A         
  2221  01BC  0844               	movf	?___ftadd,w
  2222  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  2223  01BE  00B3               	movwf	printf@fval^(0+128)
  2224  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2225  01C0  0845               	movf	?___ftadd+1,w
  2226  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2227  01C2  00B4               	movwf	(printf@fval+1)^(0+128)
  2228  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2229  01C4  0846               	movf	?___ftadd+2,w
  2230  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  2231  01C6  00B5               	movwf	(printf@fval+2)^(0+128)
  2232  01C7                     l8249:	
  2233  01C7  27AF               	call	PL32	;select bank 1
  2234  01C8  0830               	movf	(printf@exp+1)^(0+128),w
  2235  01C9  3A80               	xorlw	128
  2236  01CA  00FF               	movwf	127
  2237  01CB  3080               	movlw	128
  2238  01CC  027F               	subwf	127,w
  2239  01CD  1D03               	skipz
  2240  01CE  29D1               	goto	u5315
  2241  01CF  300A               	movlw	10
  2242  01D0  022F               	subwf	printf@exp^(0+128),w
  2243  01D1                     u5315:	
  2244  01D1  1803               	skipnc
  2245  01D2  29F2               	goto	l8257
  2246  01D3  27AF               	call	PL32	;select bank 1
  2247  01D4  0835               	movf	(printf@fval+2)^(0+128),w
  2248  01D5  0434               	iorwf	(printf@fval+1)^(0+128),w
  2249  01D6  0433               	iorwf	printf@fval^(0+128),w
  2250  01D7  1903               	skipnz
  2251  01D8  2A33               	goto	l8273
  2252  01D9  0833               	movf	printf@fval^(0+128),w
  2253  01DA  276A  120A  118A   	fcall	PL14	;call to abstracted procedure
  2254  01DD  25F9  120A  118A   	fcall	___fttol
  2255  01E0  082B               	movf	?___fttol+3,w
  2256  01E1  042A               	iorwf	?___fttol+2,w
  2257  01E2  0429               	iorwf	?___fttol+1,w
  2258  01E3  0428               	iorwf	?___fttol,w
  2259  01E4  1D03               	skipz
  2260  01E5  2A33               	goto	l8273
  2261  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2262  01E7  0830               	movf	(printf@exp+1)^(0+128),w
  2263  01E8  3A80               	xorlw	128
  2264  01E9  00FF               	movwf	127
  2265  01EA  3080               	movlw	128
  2266  01EB  027F               	subwf	127,w
  2267  01EC  1D03               	skipz
  2268  01ED  29F0               	goto	u5345
  2269  01EE  3002               	movlw	2
  2270  01EF  022F               	subwf	printf@exp^(0+128),w
  2271  01F0                     u5345:	
  2272  01F0  1C03               	skipc
  2273  01F1  2A33               	goto	l8273
  2274  01F2                     l8257:	
  2275  01F2  27AF               	call	PL32	;select bank 1
  2276  01F3  2793  120A  118A   	fcall	PL21	;call to abstracted procedure
  2277  01F6  3070               	movlw	112
  2278  01F7  00F5               	movwf	?___ftge+3
  2279  01F8  3089               	movlw	137
  2280  01F9  00F6               	movwf	?___ftge+4
  2281  01FA  3040               	movlw	64
  2282  01FB  00F7               	movwf	?___ftge+5
  2283  01FC  25A6  120A  118A   	fcall	___ftge
  2284  01FF  1803               	btfsc	3,0
  2285  0200  2A03               	goto	l8261
  2286  0201  30F7               	movlw	-9
  2287  0202  2A04               	goto	L1
  2288  0203                     l8261:	
  2289  0203  30F8               	movlw	-8
  2290  0204                     L1:	
  2291  0204  07AF               	addwf	printf@exp^(0+128),f
  2292  0205  1C03               	skipc
  2293  0206  03B0               	decf	(printf@exp+1)^(0+128),f
  2294  0207  082F               	movf	printf@exp^(0+128),w
  2295  0208  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2296  020D  2748  120A  118A   	fcall	PL7	;call to abstracted procedure
  2297  0210  00F2               	movwf	?__tdiv_to_l_
  2298  0211  0834               	movf	(printf@fval+1)^(0+128),w
  2299  0212  00F3               	movwf	?__tdiv_to_l_+1
  2300  0213  0835               	movf	(printf@fval+2)^(0+128),w
  2301  0214  00F4               	movwf	?__tdiv_to_l_+2
  2302  0215  0825               	movf	printf@integ^(0+128),w
  2303  0216  00F5               	movwf	?__tdiv_to_l_+3
  2304  0217  0826               	movf	(printf@integ+1)^(0+128),w
  2305  0218  00F6               	movwf	?__tdiv_to_l_+4
  2306  0219  0827               	movf	(printf@integ+2)^(0+128),w
  2307  021A  00F7               	movwf	?__tdiv_to_l_+5
  2308  021B  269D  120A  118A   	fcall	__tdiv_to_l_
  2309  021E  0875               	movf	?__tdiv_to_l_+3,w
  2310  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2311  0220  00A3               	movwf	(_printf$3173+3)^(0+128)
  2312  0221  0874               	movf	?__tdiv_to_l_+2,w
  2313  0222  00A2               	movwf	(_printf$3173+2)^(0+128)
  2314  0223  0873               	movf	?__tdiv_to_l_+1,w
  2315  0224  00A1               	movwf	(_printf$3173+1)^(0+128)
  2316  0225  0872               	movf	?__tdiv_to_l_,w
  2317  0226  00A0               	movwf	_printf$3173^(0+128)
  2318  0227  0823               	movf	(_printf$3173+3)^(0+128),w
  2319  0228  00AC               	movwf	(printf@_val+3)^(0+128)
  2320  0229  0822               	movf	(_printf$3173+2)^(0+128),w
  2321  022A  00AB               	movwf	(printf@_val+2)^(0+128)
  2322  022B  0821               	movf	(_printf$3173+1)^(0+128),w
  2323  022C  00AA               	movwf	(printf@_val+1)^(0+128)
  2324  022D  0820               	movf	_printf$3173^(0+128),w
  2325  022E  00A9               	movwf	printf@_val^(0+128)
  2326  022F  01B3               	clrf	printf@fval^(0+128)
  2327  0230  01B4               	clrf	(printf@fval+1)^(0+128)
  2328  0231  01B5               	clrf	(printf@fval+2)^(0+128)
  2329  0232  2A74               	goto	l8277
  2330  0233                     l8273:	
  2331  0233  27AF               	call	PL32	;select bank 1
  2332  0234  0833               	movf	printf@fval^(0+128),w
  2333  0235  276A  120A  118A   	fcall	PL14	;call to abstracted procedure
  2334  0238  25F9  120A  118A   	fcall	___fttol
  2335  023B  273A  120A  118A   	fcall	PL6	;call to abstracted procedure
  2336  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2337  023F  00A9               	movwf	printf@_val^(0+128)
  2338  0240  082C               	movf	(printf@_val+3)^(0+128),w
  2339  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2340  0242  00A3               	movwf	?___lltoft+3
  2341  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2342  0244  082B               	movf	(printf@_val+2)^(0+128),w
  2343  0245  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0246  00A2               	movwf	?___lltoft+2
  2345  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2346  0248  082A               	movf	(printf@_val+1)^(0+128),w
  2347  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2348  024A  00A1               	movwf	?___lltoft+1
  2349  024B  1683               	bsf	3,5	;RP0=1, select bank1
  2350  024C  0829               	movf	printf@_val^(0+128),w
  2351  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2352  024E  00A0               	movwf	?___lltoft
  2353  024F  27B2               	fcall	___lltoft
  2354  0250  0820               	movf	?___lltoft,w
  2355  0251  00D0               	movwf	?___ftsub
  2356  0252  0821               	movf	?___lltoft+1,w
  2357  0253  00D1               	movwf	?___ftsub+1
  2358  0254  0822               	movf	?___lltoft+2,w
  2359  0255  00D2               	movwf	?___ftsub+2
  2360  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2361  0257  0833               	movf	printf@fval^(0+128),w
  2362  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0259  00D3               	movwf	?___ftsub+3
  2364  025A  1683               	bsf	3,5	;RP0=1, select bank1
  2365  025B  0834               	movf	(printf@fval+1)^(0+128),w
  2366  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2367  025D  00D4               	movwf	?___ftsub+4
  2368  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2369  025F  0835               	movf	(printf@fval+2)^(0+128),w
  2370  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0261  00D5               	movwf	?___ftsub+5
  2372  0262  120A  158A  2032   	fcall	___ftsub
      +       120A  118A         
  2373  0267  0850               	movf	?___ftsub,w
  2374  0268  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0269  00B3               	movwf	printf@fval^(0+128)
  2376  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2377  026B  0851               	movf	?___ftsub+1,w
  2378  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2379  026D  00B4               	movwf	(printf@fval+1)^(0+128)
  2380  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2381  026F  0852               	movf	?___ftsub+2,w
  2382  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2383  0271  00B5               	movwf	(printf@fval+2)^(0+128)
  2384  0272  01AF               	clrf	printf@exp^(0+128)
  2385  0273  01B0               	clrf	(printf@exp+1)^(0+128)
  2386  0274                     l8277:	
  2387  0274  01B8               	clrf	printf@c^(0+128)
  2388  0275  0AB8               	incf	printf@c^(0+128),f
  2389  0276                     l8283:	
  2390  0276  271D               	fcall	PL2	;call to abstracted procedure
  2391  0277  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2392  027C  00DF               	movwf	??_printf+1
  2393  027D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2394  0282  00E0               	movwf	??_printf+2
  2395  0283  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2396  0288  00E1               	movwf	??_printf+3
  2397  0289  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2398  028E  00E2               	movwf	??_printf+4
  2399  028F  1683               	bsf	3,5	;RP0=1, select bank1
  2400  0290  022C               	subwf	(printf@_val+3)^(0+128),w
  2401  0291  1D03               	skipz
  2402  0292  2AA3               	goto	u5365
  2403  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0294  0861               	movf	??_printf+3,w
  2405  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2406  0296  022B               	subwf	(printf@_val+2)^(0+128),w
  2407  0297  1D03               	skipz
  2408  0298  2AA3               	goto	u5365
  2409  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2410  029A  0860               	movf	??_printf+2,w
  2411  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2412  029C  022A               	subwf	(printf@_val+1)^(0+128),w
  2413  029D  1D03               	skipz
  2414  029E  2AA3               	goto	u5365
  2415  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2416  02A0  085F               	movf	??_printf+1,w
  2417  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2418  02A2  0229               	subwf	printf@_val^(0+128),w
  2419  02A3                     u5365:	
  2420  02A3  1C03               	btfss	3,0
  2421  02A4  2AAA               	goto	l8291
  2422  02A5  0AB8               	incf	printf@c^(0+128),f
  2423  02A6  0838               	movf	printf@c^(0+128),w
  2424  02A7  3A0A               	xorlw	10
  2425  02A8  1D03               	skipz
  2426  02A9  2A76               	goto	l8283
  2427  02AA                     l8291:	
  2428  02AA  0836               	movf	printf@prec^(0+128),w
  2429  02AB  0738               	addwf	printf@c^(0+128),w
  2430  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2431  02AD  00DE               	movwf	??_printf
  2432  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  2433  02AF  0837               	movf	(printf@prec+1)^(0+128),w
  2434  02B0  1803               	skipnc
  2435  02B1  0A37               	incf	(printf@prec+1)^(0+128),w
  2436  02B2  1BB8               	btfsc	printf@c^(0+128),7
  2437  02B3  3EFF               	addlw	255
  2438  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2439  02B5  00DF               	movwf	??_printf+1
  2440  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2441  02B7  082F               	movf	printf@exp^(0+128),w
  2442  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2443  02B9  075E               	addwf	??_printf,w
  2444  02BA  00E0               	movwf	??_printf+2
  2445  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2446  02BC  0830               	movf	(printf@exp+1)^(0+128),w
  2447  02BD  1803               	skipnc
  2448  02BE  0A30               	incf	(printf@exp+1)^(0+128),w
  2449  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2450  02C0  075F               	addwf	??_printf+1,w
  2451  02C1  00E1               	movwf	??_printf+3
  2452  02C2  0860               	movf	??_printf+2,w
  2453  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2454  02C4  02B1               	subwf	printf@width^(0+128),f
  2455  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2456  02C6  0861               	movf	??_printf+3,w
  2457  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2458  02C8  1C03               	skipc
  2459  02C9  03B2               	decf	(printf@width+1)^(0+128),f
  2460  02CA  02B2               	subwf	(printf@width+1)^(0+128),f
  2461  02CB  0837               	movf	(printf@prec+1)^(0+128),w
  2462  02CC  0436               	iorwf	printf@prec^(0+128),w
  2463  02CD  1903               	skipnz
  2464  02CE  2AD3               	goto	l8297
  2465  02CF  30FF               	movlw	-1
  2466  02D0  07B1               	addwf	printf@width^(0+128),f
  2467  02D1  1C03               	skipc
  2468  02D2  03B2               	decf	(printf@width+1)^(0+128),f
  2469  02D3                     l8297:	
  2470  02D3  082D               	movf	printf@flag^(0+128),w
  2471  02D4  3903               	andlw	3
  2472  02D5  1903               	btfsc	3,2
  2473  02D6  2ADB               	goto	l8301
  2474  02D7  30FF               	movlw	-1
  2475  02D8  07B1               	addwf	printf@width^(0+128),f
  2476  02D9  1C03               	skipc
  2477  02DA  03B2               	decf	(printf@width+1)^(0+128),f
  2478  02DB                     l8301:	
  2479  02DB  192D               	btfsc	printf@flag^(0+128),2
  2480  02DC  2AE7               	goto	l8309
  2481  02DD  2AFC               	goto	l8315
  2482  02DE                     l8305:	
  2483  02DE  3030               	movlw	48
  2484  02DF  2562  120A  118A   	fcall	_putch
  2485  02E2  30FF               	movlw	-1
  2486  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  2487  02E4  07B1               	addwf	printf@width^(0+128),f
  2488  02E5  1C03               	skipc
  2489  02E6  03B2               	decf	(printf@width+1)^(0+128),f
  2490  02E7                     l8309:	
  2491  02E7  0832               	movf	(printf@width+1)^(0+128),w
  2492  02E8  3A80               	xorlw	128
  2493  02E9  00FF               	movwf	127
  2494  02EA  3080               	movlw	128
  2495  02EB  027F               	subwf	127,w
  2496  02EC  1D03               	skipz
  2497  02ED  2AF0               	goto	u5415
  2498  02EE  3001               	movlw	1
  2499  02EF  0231               	subwf	printf@width^(0+128),w
  2500  02F0                     u5415:	
  2501  02F0  1C03               	btfss	3,0
  2502  02F1  2B3A               	goto	l8323
  2503  02F2  2ADE               	goto	l8305
  2504  02F3                     l8311:	
  2505  02F3  3020               	movlw	32
  2506  02F4  2562  120A  118A   	fcall	_putch
  2507  02F7  30FF               	movlw	-1
  2508  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  2509  02F9  07B1               	addwf	printf@width^(0+128),f
  2510  02FA  1C03               	skipc
  2511  02FB  03B2               	decf	(printf@width+1)^(0+128),f
  2512  02FC                     l8315:	
  2513  02FC  0832               	movf	(printf@width+1)^(0+128),w
  2514  02FD  3A80               	xorlw	128
  2515  02FE  00FF               	movwf	127
  2516  02FF  3080               	movlw	128
  2517  0300  027F               	subwf	127,w
  2518  0301  1D03               	skipz
  2519  0302  2B05               	goto	u5425
  2520  0303  3001               	movlw	1
  2521  0304  0231               	subwf	printf@width^(0+128),w
  2522  0305                     u5425:	
  2523  0305  1803               	skipnc
  2524  0306  2AF3               	goto	l8311
  2525  0307  27AF               	call	PL32	;select bank 1
  2526  0308  082D               	movf	printf@flag^(0+128),w
  2527  0309  3903               	andlw	3
  2528  030A  1903               	btfsc	3,2
  2529  030B  2B3A               	goto	l8323
  2530  030C  302D               	movlw	45
  2531  030D  2B37               	goto	L2
  2532  030E                     l8321:	
  2533  030E  2727  120A  118A   	fcall	PL4	;call to abstracted procedure
  2534  0311  271D               	fcall	PL2	;call to abstracted procedure
  2535  0312  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2536  0317  00F2               	movwf	?___lldiv
  2537  0318  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2538  031D  00F3               	movwf	?___lldiv+1
  2539  031E  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2540  0323  00F4               	movwf	?___lldiv+2
  2541  0324  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2542  0329  272F  120A  118A   	fcall	PL5	;call to abstracted procedure
  2543  032C  2654  120A  118A   	fcall	___lldiv
  2544  032F  2755  120A  118A   	fcall	PL12	;call to abstracted procedure
  2545  0332  2568  120A  118A   	fcall	___llmod
  2546  0335  0825               	movf	?___llmod,w
  2547  0336  3E30               	addlw	48
  2548  0337                     L2:	
  2549  0337  2562  120A  118A   	fcall	_putch
  2550  033A                     l8323:	
  2551  033A  27AF               	call	PL32	;select bank 1
  2552  033B  03B8               	decf	printf@c^(0+128),f
  2553  033C  0F38               	incfsz	printf@c^(0+128),w
  2554  033D  2B0E               	goto	l8321
  2555  033E                     l8329:	
  2556  033E  0830               	movf	(printf@exp+1)^(0+128),w
  2557  033F  3A80               	xorlw	128
  2558  0340  00FF               	movwf	127
  2559  0341  3080               	movlw	128
  2560  0342  027F               	subwf	127,w
  2561  0343  1D03               	skipz
  2562  0344  2B47               	goto	u5455
  2563  0345  3001               	movlw	1
  2564  0346  022F               	subwf	printf@exp^(0+128),w
  2565  0347                     u5455:	
  2566  0347  1C03               	btfss	3,0
  2567  0348  2B53               	goto	l8331
  2568  0349  3030               	movlw	48
  2569  034A  2562  120A  118A   	fcall	_putch
  2570  034D  30FF               	movlw	-1
  2571  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2572  034F  07AF               	addwf	printf@exp^(0+128),f
  2573  0350  1C03               	skipc
  2574  0351  03B0               	decf	(printf@exp+1)^(0+128),f
  2575  0352  2B3E               	goto	l8329
  2576  0353                     l8331:	
  2577  0353  27AF               	call	PL32	;select bank 1
  2578  0354  0837               	movf	(printf@prec+1)^(0+128),w
  2579  0355  3A80               	xorlw	128
  2580  0356  00FF               	movwf	127
  2581  0357  3080               	movlw	128
  2582  0358  027F               	subwf	127,w
  2583  0359  1D03               	skipz
  2584  035A  2B5D               	goto	u5465
  2585  035B  3009               	movlw	9
  2586  035C  0236               	subwf	printf@prec^(0+128),w
  2587  035D                     u5465:	
  2588  035D  1C03               	skipc
  2589  035E  2B62               	goto	l8335
  2590  035F  3008               	movlw	8
  2591  0360  27AF               	call	PL32	;select bank 1
  2592  0361  2B64               	goto	L3
  2593  0362                     l8335:	
  2594  0362  27AF               	call	PL32	;select bank 1
  2595  0363  0836               	movf	printf@prec^(0+128),w
  2596  0364                     L3:	
  2597  0364  00B8               	movwf	printf@c^(0+128)
  2598  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0366  00DE               	movwf	??_printf
  2600  0367  01DF               	clrf	??_printf+1
  2601  0368  1BDE               	btfsc	??_printf,7
  2602  0369  03DF               	decf	??_printf+1,f
  2603  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2604  036B  02B6               	subwf	printf@prec^(0+128),f
  2605  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2606  036D  085F               	movf	??_printf+1,w
  2607  036E  1683               	bsf	3,5	;RP0=1, select bank1
  2608  036F  1C03               	skipc
  2609  0370  03B7               	decf	(printf@prec+1)^(0+128),f
  2610  0371  02B7               	subwf	(printf@prec+1)^(0+128),f
  2611  0372  0838               	movf	printf@c^(0+128),w
  2612  0373  1903               	btfsc	3,2
  2613  0374  2B77               	goto	l2275
  2614  0375  302E               	movlw	46
  2615  0376  2562               	fcall	_putch
  2616  0377                     l2275:	
  2617  0377  1683               	bsf	3,5	;RP0=1, select bank1
  2618  0378  0838               	movf	printf@c^(0+128),w
  2619  0379  120A  158A  24D8   	fcall	_scale
      +       120A  118A         
  2620  037E  0844               	movf	?_scale,w
  2621  037F  00B8               	movwf	?___ftmul+3
  2622  0380  0845               	movf	?_scale+1,w
  2623  0381  00B9               	movwf	?___ftmul+4
  2624  0382  0846               	movf	?_scale+2,w
  2625  0383  00BA               	movwf	?___ftmul+5
  2626  0384  1683               	bsf	3,5	;RP0=1, select bank1
  2627  0385  0833               	movf	printf@fval^(0+128),w
  2628  0386  2775               	fcall	PL16	;call to abstracted procedure
  2629  0387  120A  158A  26EC   	fcall	___ftmul
      +       120A  118A         
  2630  038C  0835               	movf	?___ftmul,w
  2631  038D  00A8               	movwf	?___fttol
  2632  038E  0836               	movf	?___ftmul+1,w
  2633  038F  00A9               	movwf	?___fttol+1
  2634  0390  0837               	movf	?___ftmul+2,w
  2635  0391  00AA               	movwf	?___fttol+2
  2636  0392  25F9  120A  118A   	fcall	___fttol
  2637  0395  273A  120A  118A   	fcall	PL6	;call to abstracted procedure
  2638  0398  2BFF               	goto	L4
  2639  0399                     l8339:	
  2640  0399  2727  120A  118A   	fcall	PL4	;call to abstracted procedure
  2641  039C  271D               	fcall	PL2	;call to abstracted procedure
  2642  039D  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2643  03A2  00F2               	movwf	?___lldiv
  2644  03A3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2645  03A8  00F3               	movwf	?___lldiv+1
  2646  03A9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2647  03AE  00F4               	movwf	?___lldiv+2
  2648  03AF  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2649  03B4  272F  120A  118A   	fcall	PL5	;call to abstracted procedure
  2650  03B7  2654  120A  118A   	fcall	___lldiv
  2651  03BA  2755  120A  118A   	fcall	PL12	;call to abstracted procedure
  2652  03BD  2568  120A  118A   	fcall	___llmod
  2653  03C0  0825               	movf	?___llmod,w
  2654  03C1  3E30               	addlw	48
  2655  03C2  2562  120A  118A   	fcall	_putch
  2656  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2657  03C6  271D               	fcall	PL2	;call to abstracted procedure
  2658  03C7  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2659  03CC  00A5               	movwf	?___llmod
  2660  03CD  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2661  03D2  00A6               	movwf	?___llmod+1
  2662  03D3  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2663  03D8  00A7               	movwf	?___llmod+2
  2664  03D9  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2665  03DE  00A8               	movwf	?___llmod+3
  2666  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  2667  03E0  082C               	movf	(printf@_val+3)^(0+128),w
  2668  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  2669  03E2  00AC               	movwf	?___llmod+7
  2670  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2671  03E4  082B               	movf	(printf@_val+2)^(0+128),w
  2672  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2673  03E6  00AB               	movwf	?___llmod+6
  2674  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2675  03E8  082A               	movf	(printf@_val+1)^(0+128),w
  2676  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2677  03EA  00AA               	movwf	?___llmod+5
  2678  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2679  03EC  0829               	movf	printf@_val^(0+128),w
  2680  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2681  03EE  00A9               	movwf	?___llmod+4
  2682  03EF  2568  120A  118A   	fcall	___llmod
  2683  03F2  0828               	movf	?___llmod+3,w
  2684  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2685  03F4  00AC               	movwf	(printf@_val+3)^(0+128)
  2686  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2687  03F6  0827               	movf	?___llmod+2,w
  2688  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2689  03F8  00AB               	movwf	(printf@_val+2)^(0+128)
  2690  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2691  03FA  0826               	movf	?___llmod+1,w
  2692  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2693  03FC  00AA               	movwf	(printf@_val+1)^(0+128)
  2694  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2695  03FE  0825               	movf	?___llmod,w
  2696  03FF                     L4:	
  2697  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2698  0400  00A9               	movwf	printf@_val^(0+128)
  2699  0401  03B8               	decf	printf@c^(0+128),f
  2700  0402  0F38               	incfsz	printf@c^(0+128),w
  2701  0403  2B99               	goto	l8339
  2702  0404                     l8347:	
  2703  0404  0837               	movf	(printf@prec+1)^(0+128),w
  2704  0405  0436               	iorwf	printf@prec^(0+128),w
  2705  0406  1903               	btfsc	3,2
  2706  0407  2813               	goto	l8433
  2707  0408  3030               	movlw	48
  2708  0409  2562  120A  118A   	fcall	_putch
  2709  040C  30FF               	movlw	-1
  2710  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2711  040E  07B6               	addwf	printf@prec^(0+128),f
  2712  040F  1C03               	skipc
  2713  0410  03B7               	decf	(printf@prec+1)^(0+128),f
  2714  0411  2C04               	goto	l8347
  2715  0412                     l8349:	
  2716  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2717  0413  0824               	movf	printf@ap^(0+128),w
  2718  0414  0084               	movwf	4
  2719  0415  1383               	bcf	3,7	;select IRP bank0
  2720  0416  279A  120A  118A   	fcall	PL28	;call to abstracted procedure
  2721  0419  085E               	movf	??_printf,w
  2722  041A  1683               	bsf	3,5	;RP0=1, select bank1
  2723  041B  00A9               	movwf	printf@_val^(0+128)
  2724  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2725  041D  085F               	movf	??_printf+1,w
  2726  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2727  041F  00AA               	movwf	(printf@_val+1)^(0+128)
  2728  0420  3000               	movlw	0
  2729  0421  1BAA               	btfsc	(printf@_val+1)^(0+128),7
  2730  0422  30FF               	movlw	255
  2731  0423  00AB               	movwf	(printf@_val+2)^(0+128)
  2732  0424  00AC               	movwf	(printf@_val+3)^(0+128)
  2733  0425  0AA4               	incf	printf@ap^(0+128),f
  2734  0426  0AA4               	incf	printf@ap^(0+128),f
  2735  0427  1FAC               	btfss	(printf@_val+3)^(0+128),7
  2736  0428  2C36               	goto	l8359
  2737  0429  3003               	movlw	3
  2738  042A  04AD               	iorwf	printf@flag^(0+128),f
  2739  042B  09A9               	comf	printf@_val^(0+128),f
  2740  042C  09AA               	comf	(printf@_val+1)^(0+128),f
  2741  042D  09AB               	comf	(printf@_val+2)^(0+128),f
  2742  042E  09AC               	comf	(printf@_val+3)^(0+128),f
  2743  042F  0AA9               	incf	printf@_val^(0+128),f
  2744  0430  1903               	skipnz
  2745  0431  0AAA               	incf	(printf@_val+1)^(0+128),f
  2746  0432  1903               	skipnz
  2747  0433  0AAB               	incf	(printf@_val+2)^(0+128),f
  2748  0434  1903               	skipnz
  2749  0435  0AAC               	incf	(printf@_val+3)^(0+128),f
  2750  0436                     l8359:	
  2751  0436  0837               	movf	(printf@prec+1)^(0+128),w
  2752  0437  0436               	iorwf	printf@prec^(0+128),w
  2753  0438  1D03               	skipz
  2754  0439  2C42               	goto	l8365
  2755  043A  082C               	movf	(printf@_val+3)^(0+128),w
  2756  043B  042B               	iorwf	(printf@_val+2)^(0+128),w
  2757  043C  042A               	iorwf	(printf@_val+1)^(0+128),w
  2758  043D  0429               	iorwf	printf@_val^(0+128),w
  2759  043E  1903               	btfsc	3,2
  2760  043F  0AB6               	incf	printf@prec^(0+128),f
  2761  0440  1903               	skipnz
  2762  0441  0AB7               	incf	(printf@prec+1)^(0+128),f
  2763  0442                     l8365:	
  2764  0442  01B8               	clrf	printf@c^(0+128)
  2765  0443  0AB8               	incf	printf@c^(0+128),f
  2766  0444                     l8371:	
  2767  0444  271D               	fcall	PL2	;call to abstracted procedure
  2768  0445  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2769  044A  00DF               	movwf	??_printf+1
  2770  044B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2771  0450  00E0               	movwf	??_printf+2
  2772  0451  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2773  0456  00E1               	movwf	??_printf+3
  2774  0457  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  2775  045C  00E2               	movwf	??_printf+4
  2776  045D  1683               	bsf	3,5	;RP0=1, select bank1
  2777  045E  022C               	subwf	(printf@_val+3)^(0+128),w
  2778  045F  1D03               	skipz
  2779  0460  2C71               	goto	u5535
  2780  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0462  0861               	movf	??_printf+3,w
  2782  0463  1683               	bsf	3,5	;RP0=1, select bank1
  2783  0464  022B               	subwf	(printf@_val+2)^(0+128),w
  2784  0465  1D03               	skipz
  2785  0466  2C71               	goto	u5535
  2786  0467  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0468  0860               	movf	??_printf+2,w
  2788  0469  1683               	bsf	3,5	;RP0=1, select bank1
  2789  046A  022A               	subwf	(printf@_val+1)^(0+128),w
  2790  046B  1D03               	skipz
  2791  046C  2C71               	goto	u5535
  2792  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2793  046E  085F               	movf	??_printf+1,w
  2794  046F  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0470  0229               	subwf	printf@_val^(0+128),w
  2796  0471                     u5535:	
  2797  0471  1C03               	btfss	3,0
  2798  0472  2C78               	goto	l8379
  2799  0473  0AB8               	incf	printf@c^(0+128),f
  2800  0474  0838               	movf	printf@c^(0+128),w
  2801  0475  3A0A               	xorlw	10
  2802  0476  1D03               	skipz
  2803  0477  2C44               	goto	l8371
  2804  0478                     l8379:	
  2805  0478  0838               	movf	printf@c^(0+128),w
  2806  0479  2780  120A  118A   	fcall	PL18	;call to abstracted procedure
  2807  047C  0837               	movf	(printf@prec+1)^(0+128),w
  2808  047D  3A80               	xorlw	128
  2809  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2810  047F  0260               	subwf	??_printf+2,w
  2811  0480  1D03               	skipz
  2812  0481  2C86               	goto	u5555
  2813  0482  1683               	bsf	3,5	;RP0=1, select bank1
  2814  0483  0836               	movf	printf@prec^(0+128),w
  2815  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2816  0485  025E               	subwf	??_printf,w
  2817  0486                     u5555:	
  2818  0486  1803               	skipnc
  2819  0487  2C8C               	goto	l8383
  2820  0488  27AF               	call	PL32	;select bank 1
  2821  0489  0836               	movf	printf@prec^(0+128),w
  2822  048A  00B8               	movwf	printf@c^(0+128)
  2823  048B  2CA4               	goto	l8387
  2824  048C                     l8383:	
  2825  048C  1683               	bsf	3,5	;RP0=1, select bank1
  2826  048D  278A  120A  118A   	fcall	PL20	;call to abstracted procedure
  2827  0490  0837               	movf	(printf@prec+1)^(0+128),w
  2828  0491  3A80               	xorlw	128
  2829  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2830  0493  00E0               	movwf	??_printf+2
  2831  0494  085F               	movf	??_printf+1,w
  2832  0495  3A80               	xorlw	128
  2833  0496  0260               	subwf	??_printf+2,w
  2834  0497  1D03               	skipz
  2835  0498  2C9C               	goto	u5565
  2836  0499  085E               	movf	??_printf,w
  2837  049A  1683               	bsf	3,5	;RP0=1, select bank1
  2838  049B  0236               	subwf	printf@prec^(0+128),w
  2839  049C                     u5565:	
  2840  049C  1803               	skipnc
  2841  049D  2CA4               	goto	l8387
  2842  049E  27AF               	call	PL32	;select bank 1
  2843  049F  0838               	movf	printf@c^(0+128),w
  2844  04A0  00B6               	movwf	printf@prec^(0+128)
  2845  04A1  01B7               	clrf	(printf@prec+1)^(0+128)
  2846  04A2  1BB6               	btfsc	printf@prec^(0+128),7
  2847  04A3  03B7               	decf	(printf@prec+1)^(0+128),f
  2848  04A4                     l8387:	
  2849  04A4  27AF               	call	PL32	;select bank 1
  2850  04A5  0832               	movf	(printf@width+1)^(0+128),w
  2851  04A6  0431               	iorwf	printf@width^(0+128),w
  2852  04A7  1903               	skipnz
  2853  04A8  2CB1               	goto	l8393
  2854  04A9  082D               	movf	printf@flag^(0+128),w
  2855  04AA  3903               	andlw	3
  2856  04AB  1903               	btfsc	3,2
  2857  04AC  2CB1               	goto	l8393
  2858  04AD  30FF               	movlw	-1
  2859  04AE  07B1               	addwf	printf@width^(0+128),f
  2860  04AF  1C03               	skipc
  2861  04B0  03B2               	decf	(printf@width+1)^(0+128),f
  2862  04B1                     l8393:	
  2863  04B1  1F2E               	btfss	(printf@flag+1)^(0+128),6
  2864  04B2  2CCE               	goto	l8401
  2865  04B3  0837               	movf	(printf@prec+1)^(0+128),w
  2866  04B4  3A80               	xorlw	128
  2867  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2868  04B6  00DE               	movwf	??_printf
  2869  04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2870  04B8  0832               	movf	(printf@width+1)^(0+128),w
  2871  04B9  3A80               	xorlw	128
  2872  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2873  04BB  025E               	subwf	??_printf,w
  2874  04BC  1D03               	skipz
  2875  04BD  2CC1               	goto	u5605
  2876  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  2877  04BF  0831               	movf	printf@width^(0+128),w
  2878  04C0  0236               	subwf	printf@prec^(0+128),w
  2879  04C1                     u5605:	
  2880  04C1  1803               	skipnc
  2881  04C2  2CCB               	goto	l8399
  2882  04C3  27AF               	call	PL32	;select bank 1
  2883  04C4  0836               	movf	printf@prec^(0+128),w
  2884  04C5  02B1               	subwf	printf@width^(0+128),f
  2885  04C6  0837               	movf	(printf@prec+1)^(0+128),w
  2886  04C7  1C03               	skipc
  2887  04C8  03B2               	decf	(printf@width+1)^(0+128),f
  2888  04C9  02B2               	subwf	(printf@width+1)^(0+128),f
  2889  04CA  2CCE               	goto	l8401
  2890  04CB                     l8399:	
  2891  04CB  27AF               	call	PL32	;select bank 1
  2892  04CC  01B1               	clrf	printf@width^(0+128)
  2893  04CD  01B2               	clrf	(printf@width+1)^(0+128)
  2894  04CE                     l8401:	
  2895  04CE  0838               	movf	printf@c^(0+128),w
  2896  04CF  2780  120A  118A   	fcall	PL18	;call to abstracted procedure
  2897  04D2  0832               	movf	(printf@width+1)^(0+128),w
  2898  04D3  3A80               	xorlw	128
  2899  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  2900  04D5  0260               	subwf	??_printf+2,w
  2901  04D6  1D03               	skipz
  2902  04D7  2CDC               	goto	u5615
  2903  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2904  04D9  0831               	movf	printf@width^(0+128),w
  2905  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  2906  04DB  025E               	subwf	??_printf,w
  2907  04DC                     u5615:	
  2908  04DC  1803               	skipnc
  2909  04DD  2CEA               	goto	l8405
  2910  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  2911  04DF  278A  120A  118A   	fcall	PL20	;call to abstracted procedure
  2912  04E2  02B1               	subwf	printf@width^(0+128),f
  2913  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  2914  04E4  085F               	movf	??_printf+1,w
  2915  04E5  1683               	bsf	3,5	;RP0=1, select bank1
  2916  04E6  1C03               	skipc
  2917  04E7  03B2               	decf	(printf@width+1)^(0+128),f
  2918  04E8  02B2               	subwf	(printf@width+1)^(0+128),f
  2919  04E9  2CED               	goto	l8407
  2920  04EA                     l8405:	
  2921  04EA  27AF               	call	PL32	;select bank 1
  2922  04EB  01B1               	clrf	printf@width^(0+128)
  2923  04EC  01B2               	clrf	(printf@width+1)^(0+128)
  2924  04ED                     l8407:	
  2925  04ED  1D2D               	btfss	printf@flag^(0+128),2
  2926  04EE  2D06               	goto	l8419
  2927  04EF  082D               	movf	printf@flag^(0+128),w
  2928  04F0  3903               	andlw	3
  2929  04F1  1903               	btfsc	3,2
  2930  04F2  2CF7               	goto	l8413
  2931  04F3  302D               	movlw	45
  2932  04F4  2562  120A  118A   	fcall	_putch
  2933  04F7                     l8413:	
  2934  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2935  04F8                     L6:	
  2936  04F8  0832               	movf	(printf@width+1)^(0+128),w
  2937  04F9  0431               	iorwf	printf@width^(0+128),w
  2938  04FA  1903               	skipnz
  2939  04FB  2D1F               	goto	l8431
  2940  04FC  3030               	movlw	48
  2941  04FD  2562  120A  118A   	fcall	_putch
  2942  0500  30FF               	movlw	-1
  2943  0501  1683               	bsf	3,5	;RP0=1, select bank1
  2944  0502  07B1               	addwf	printf@width^(0+128),f
  2945  0503  1C03               	skipc
  2946  0504  03B2               	decf	(printf@width+1)^(0+128),f
  2947  0505  2CF8               	goto	L6
  2948  0506                     l8419:	
  2949  0506  0832               	movf	(printf@width+1)^(0+128),w
  2950  0507  0431               	iorwf	printf@width^(0+128),w
  2951  0508  1903               	skipnz
  2952  0509  2D17               	goto	l8425
  2953  050A                     l8421:	
  2954  050A  3020               	movlw	32
  2955  050B  2562  120A  118A   	fcall	_putch
  2956  050E  30FF               	movlw	-1
  2957  050F  1683               	bsf	3,5	;RP0=1, select bank1
  2958  0510  07B1               	addwf	printf@width^(0+128),f
  2959  0511  1C03               	skipc
  2960  0512  03B2               	decf	(printf@width+1)^(0+128),f
  2961  0513  0832               	movf	(printf@width+1)^(0+128),w
  2962  0514  0431               	iorwf	printf@width^(0+128),w
  2963  0515  1D03               	skipz
  2964  0516  2D0A               	goto	l8421
  2965  0517                     l8425:	
  2966  0517  082D               	movf	printf@flag^(0+128),w
  2967  0518  3903               	andlw	3
  2968  0519  1903               	btfsc	3,2
  2969  051A  2D1F               	goto	l8431
  2970  051B  302D               	movlw	45
  2971  051C                     L5:	
  2972  051C  2562  120A  118A   	fcall	_putch
  2973  051F                     l8431:	
  2974  051F  30FF               	movlw	-1
  2975  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2976  0521  07B6               	addwf	printf@prec^(0+128),f
  2977  0522  1C03               	skipc
  2978  0523  03B7               	decf	(printf@prec+1)^(0+128),f
  2979  0524  0A36               	incf	printf@prec^(0+128),w
  2980  0525  1903               	skipnz
  2981  0526  0A37               	incf	(printf@prec+1)^(0+128),w
  2982  0527  1903               	btfsc	3,2
  2983  0528  2813               	goto	l8433
  2984  0529  300A               	movlw	10
  2985  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2986  052B  00A5               	movwf	?___llmod
  2987  052C  01A6               	clrf	?___llmod+1
  2988  052D  01A7               	clrf	?___llmod+2
  2989  052E  01A8               	clrf	?___llmod+3
  2990  052F  1683               	bsf	3,5	;RP0=1, select bank1
  2991  0530  0836               	movf	printf@prec^(0+128),w
  2992  0531  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0532  00DE               	movwf	??_printf
  2994  0533  1003               	clrc
  2995  0534  0DDE               	rlf	??_printf,f
  2996  0535  1003               	clrc
  2997  0536  0D5E               	rlf	??_printf,w
  2998  0537  3E4F               	addlw	low (_dpowers-__stringbase)
  2999  0538  0084               	movwf	4
  3000  0539  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3001  053E  00F2               	movwf	?___lldiv
  3002  053F  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3003  0544  00F3               	movwf	?___lldiv+1
  3004  0545  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3005  054A  00F4               	movwf	?___lldiv+2
  3006  054B  160A  118A  2000   	fcall	stringdir
      +       120A  118A         
  3007  0550  272F  120A  118A   	fcall	PL5	;call to abstracted procedure
  3008  0553  2654  120A  118A   	fcall	___lldiv
  3009  0556  2755  120A  118A   	fcall	PL12	;call to abstracted procedure
  3010  0559  2568  120A  118A   	fcall	___llmod
  3011  055C  0825               	movf	?___llmod,w
  3012  055D  3E30               	addlw	48
  3013  055E  1683               	bsf	3,5	;RP0=1, select bank1
  3014  055F  00B8               	movwf	printf@c^(0+128)
  3015  0560  2D1C               	goto	L5
  3016  0561                     l2310:	
  3017  0561  0008               	return
  3018  0562                     __end_of_printf:	
  3019  0562                     __ptext808:	
  3020 ;; =============== function _printf ends ============
  3021                           
  3022                           
  3023 ;; *************** function _putch *****************
  3024 ;; Defined at:
  3025 ;;		line 95 in file "D:\TTVXL\Project TTVXL\BT01week14ttvxl\BT01week14ttvxl.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  c               1    wreg     unsigned char 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  c               1    1[BANK0 ] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/20
  3036 ;;		On exit  : 60/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       1       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       1       0       0       0
  3043 ;;Total ram usage:        1 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    4
  3046 ;; This function calls:
  3047 ;;		_lcd_putc
  3048 ;; This function is called by:
  3049 ;;		_printf
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052  0562                     _putch:	
  3053                           
  3054                           ; Regs used in _putch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3055                           ;putch@c stored from wreg
  3056  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3057  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3058  0564  00A1               	movwf	putch@c
  3059                           
  3060                           ;BT01week14ttvxl.c: 96: lcd_putc(c);
  3061  0565  120A  158A  2A74   	ljmp	_lcd_putc
  3062  0568                     __end_of_putch:	
  3063  0568                     __ptext827:	
  3064 ;; =============== function ___ftneg ends ============
  3065                           
  3066                           
  3067 ;; *************** function ___llmod *****************
  3068 ;; Defined at:
  3069 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  divisor         4    5[BANK0 ] unsigned long 
  3072 ;;  dividend        4    9[BANK0 ] unsigned long 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  counter         1   13[BANK0 ] unsigned char 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  4    5[BANK0 ] unsigned long 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0
  3079 ;; Tracked objects:
  3080 ;;		On entry : 60/0
  3081 ;;		On exit  : 60/0
  3082 ;;		Unchanged: FFF9F/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       8       0       0       0
  3085 ;;      Locals:         0       1       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         0       9       0       0       0
  3088 ;;Total ram usage:        9 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_printf
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097  0568                     ___llmod:	
  3098                           
  3099                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3100  0568  0828               	movf	___llmod@divisor+3,w
  3101  0569  0427               	iorwf	___llmod@divisor+2,w
  3102  056A  0426               	iorwf	___llmod@divisor+1,w
  3103  056B  0425               	iorwf	___llmod@divisor,w
  3104  056C  1903               	skipnz
  3105  056D  2D9D               	goto	l7743
  3106  056E  01AD               	clrf	___llmod@counter
  3107  056F                     L14:	
  3108  056F  0AAD               	incf	___llmod@counter,f
  3109  0570  1BA8               	btfsc	___llmod@divisor+3,7
  3110  0571  2D78               	goto	l7735
  3111  0572  1003               	clrc
  3112  0573  0DA5               	rlf	___llmod@divisor,f
  3113  0574  0DA6               	rlf	___llmod@divisor+1,f
  3114  0575  0DA7               	rlf	___llmod@divisor+2,f
  3115  0576  0DA8               	rlf	___llmod@divisor+3,f
  3116  0577  2D6F               	goto	L14
  3117  0578                     l7735:	
  3118  0578  0828               	movf	___llmod@divisor+3,w
  3119  0579  022C               	subwf	___llmod@dividend+3,w
  3120  057A  1D03               	skipz
  3121  057B  2D86               	goto	u4425
  3122  057C  0827               	movf	___llmod@divisor+2,w
  3123  057D  022B               	subwf	___llmod@dividend+2,w
  3124  057E  1D03               	skipz
  3125  057F  2D86               	goto	u4425
  3126  0580  0826               	movf	___llmod@divisor+1,w
  3127  0581  022A               	subwf	___llmod@dividend+1,w
  3128  0582  1D03               	skipz
  3129  0583  2D86               	goto	u4425
  3130  0584  0825               	movf	___llmod@divisor,w
  3131  0585  0229               	subwf	___llmod@dividend,w
  3132  0586                     u4425:	
  3133  0586  1C03               	skipc
  3134  0587  2D97               	goto	L15
  3135  0588  0825               	movf	___llmod@divisor,w
  3136  0589  02A9               	subwf	___llmod@dividend,f
  3137  058A  0826               	movf	___llmod@divisor+1,w
  3138  058B  1C03               	skipc
  3139  058C  0F26               	incfsz	___llmod@divisor+1,w
  3140  058D  02AA               	subwf	___llmod@dividend+1,f
  3141  058E  0827               	movf	___llmod@divisor+2,w
  3142  058F  1C03               	skipc
  3143  0590  0F27               	incfsz	___llmod@divisor+2,w
  3144  0591  02AB               	subwf	___llmod@dividend+2,f
  3145  0592  0828               	movf	___llmod@divisor+3,w
  3146  0593  1C03               	skipc
  3147  0594  0F28               	incfsz	___llmod@divisor+3,w
  3148  0595  02AC               	subwf	___llmod@dividend+3,f
  3149  0596  1003               	clrc
  3150  0597                     L15:	
  3151  0597  0CA8               	rrf	___llmod@divisor+3,f
  3152  0598  0CA7               	rrf	___llmod@divisor+2,f
  3153  0599  0CA6               	rrf	___llmod@divisor+1,f
  3154  059A  0CA5               	rrf	___llmod@divisor,f
  3155  059B  0BAD               	decfsz	___llmod@counter,f
  3156  059C  2D78               	goto	l7735
  3157  059D                     l7743:	
  3158  059D  082C               	movf	___llmod@dividend+3,w
  3159  059E  00A8               	movwf	?___llmod+3
  3160  059F  082B               	movf	___llmod@dividend+2,w
  3161  05A0  00A7               	movwf	?___llmod+2
  3162  05A1  082A               	movf	___llmod@dividend+1,w
  3163  05A2  00A6               	movwf	?___llmod+1
  3164  05A3  0829               	movf	___llmod@dividend,w
  3165  05A4  00A5               	movwf	?___llmod
  3166  05A5  0008               	return
  3167  05A6                     __end_of___llmod:	
  3168  05A6                     __ptext825:	
  3169 ;; =============== function ___lldiv ends ============
  3170                           
  3171                           
  3172 ;; *************** function ___ftge *****************
  3173 ;; Defined at:
  3174 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftge.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;  ff1             3    2[COMMON] float 
  3177 ;;  ff2             3    5[COMMON] float 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;		None               void
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 40/0
  3186 ;;		On exit  : 40/0
  3187 ;;		Unchanged: FFFBF/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3189 ;;      Params:         6       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0
  3192 ;;      Totals:         6       0       0       0       0
  3193 ;;Total ram usage:        6 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:    1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_main
  3200 ;;		_printf
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203  05A6                     ___ftge:	
  3204                           
  3205                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3206  05A6  1FF4               	btfss	___ftge@ff1+2,7
  3207  05A7  2DB5               	goto	l6589
  3208  05A8  0872               	movf	___ftge@ff1,w
  3209  05A9  3C00               	sublw	0
  3210  05AA  00F2               	movwf	___ftge@ff1
  3211  05AB  0873               	movf	___ftge@ff1+1,w
  3212  05AC  1C03               	skipc
  3213  05AD  0F73               	incfsz	___ftge@ff1+1,w
  3214  05AE  3C00               	sublw	0
  3215  05AF  00F3               	movwf	___ftge@ff1+1
  3216  05B0  0874               	movf	___ftge@ff1+2,w
  3217  05B1  1C03               	skipc
  3218  05B2  0F74               	incfsz	___ftge@ff1+2,w
  3219  05B3  3C80               	sublw	128
  3220  05B4  00F4               	movwf	___ftge@ff1+2
  3221  05B5                     l6589:	
  3222  05B5  1FF7               	btfss	___ftge@ff2+2,7
  3223  05B6  2DC4               	goto	l6593
  3224  05B7  0875               	movf	___ftge@ff2,w
  3225  05B8  3C00               	sublw	0
  3226  05B9  00F5               	movwf	___ftge@ff2
  3227  05BA  0876               	movf	___ftge@ff2+1,w
  3228  05BB  1C03               	skipc
  3229  05BC  0F76               	incfsz	___ftge@ff2+1,w
  3230  05BD  3C00               	sublw	0
  3231  05BE  00F6               	movwf	___ftge@ff2+1
  3232  05BF  0877               	movf	___ftge@ff2+2,w
  3233  05C0  1C03               	skipc
  3234  05C1  0F77               	incfsz	___ftge@ff2+2,w
  3235  05C2  3C80               	sublw	128
  3236  05C3  00F7               	movwf	___ftge@ff2+2
  3237  05C4                     l6593:	
  3238  05C4  3080               	movlw	128
  3239  05C5  06F4               	xorwf	___ftge@ff1+2,f
  3240  05C6  06F7               	xorwf	___ftge@ff2+2,f
  3241  05C7  0877               	movf	___ftge@ff2+2,w
  3242  05C8  0274               	subwf	___ftge@ff1+2,w
  3243  05C9  1D03               	skipz
  3244  05CA  0008               	return
  3245  05CB  0876               	movf	___ftge@ff2+1,w
  3246  05CC  0273               	subwf	___ftge@ff1+1,w
  3247  05CD  1D03               	skipz
  3248  05CE  0008               	return
  3249  05CF  0875               	movf	___ftge@ff2,w
  3250  05D0  0272               	subwf	___ftge@ff1,w
  3251  05D1  0008               	return
  3252  05D2                     __end_of___ftge:	
  3253  05D2                     __ptext837:	
  3254 ;; =============== function __tdiv_to_l_ ends ============
  3255                           
  3256                           
  3257 ;; *************** function _isdigit *****************
  3258 ;; Defined at:
  3259 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isdigit.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  c               1    wreg     unsigned char 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;  c               1    3[COMMON] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;		None               void
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 60/20
  3270 ;;		On exit  : 60/20
  3271 ;;		Unchanged: FFF9F/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         2       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0
  3276 ;;      Totals:         2       0       0       0       0
  3277 ;;Total ram usage:        2 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_printf
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286  05D2                     _isdigit:	
  3287                           
  3288                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3289                           ;isdigit@c stored from wreg
  3290  05D2  00F3               	movwf	isdigit@c
  3291  05D3  303A               	movlw	58
  3292  05D4  01F2               	clrf	_isdigit$3681
  3293  05D5  0273               	subwf	isdigit@c,w
  3294  05D6  1803               	skipnc
  3295  05D7  2DDE               	goto	l6275
  3296  05D8  3030               	movlw	48
  3297  05D9  0273               	subwf	isdigit@c,w
  3298  05DA  1C03               	skipc
  3299  05DB  2DDE               	goto	l6275
  3300  05DC  01F2               	clrf	_isdigit$3681
  3301  05DD  0AF2               	incf	_isdigit$3681,f
  3302  05DE                     l6275:	
  3303  05DE  0C72               	rrf	_isdigit$3681,w
  3304  05DF  0008               	return
  3305  05E0                     __end_of_isdigit:	
  3306  05E0                     __ptext833:	
  3307 ;; =============== function ___lbdiv ends ============
  3308                           
  3309                           
  3310 ;; *************** function ___wmul *****************
  3311 ;; Defined at:
  3312 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  multiplier      2    2[COMMON] unsigned int 
  3315 ;;  multiplicand    2    4[COMMON] unsigned int 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  product         2    6[COMMON] unsigned int 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  2    2[COMMON] unsigned int 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 60/20
  3324 ;;		On exit  : 60/20
  3325 ;;		Unchanged: FFF9F/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         4       0       0       0       0
  3328 ;;      Locals:         2       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0
  3330 ;;      Totals:         6       0       0       0       0
  3331 ;;Total ram usage:        6 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; Hardware stack levels required when called:    1
  3334 ;; This function calls:
  3335 ;;		Nothing
  3336 ;; This function is called by:
  3337 ;;		_fround
  3338 ;;		_scale
  3339 ;;		_printf
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342  05E0                     ___wmul:	
  3343                           
  3344                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3345  05E0  01F6               	clrf	___wmul@product
  3346  05E1  01F7               	clrf	___wmul@product+1
  3347  05E2                     l6391:	
  3348  05E2  1C72               	btfss	___wmul@multiplier,0
  3349  05E3  2DEA               	goto	l6395
  3350  05E4  0874               	movf	___wmul@multiplicand,w
  3351  05E5  07F6               	addwf	___wmul@product,f
  3352  05E6  1803               	skipnc
  3353  05E7  0AF7               	incf	___wmul@product+1,f
  3354  05E8  0875               	movf	___wmul@multiplicand+1,w
  3355  05E9  07F7               	addwf	___wmul@product+1,f
  3356  05EA                     l6395:	
  3357  05EA  1003               	clrc
  3358  05EB  0DF4               	rlf	___wmul@multiplicand,f
  3359  05EC  0DF5               	rlf	___wmul@multiplicand+1,f
  3360  05ED  1003               	clrc
  3361  05EE  0CF3               	rrf	___wmul@multiplier+1,f
  3362  05EF  0CF2               	rrf	___wmul@multiplier,f
  3363  05F0  0873               	movf	___wmul@multiplier+1,w
  3364  05F1  0472               	iorwf	___wmul@multiplier,w
  3365  05F2  1D03               	skipz
  3366  05F3  2DE2               	goto	l6391
  3367  05F4  0877               	movf	___wmul@product+1,w
  3368  05F5  00F3               	movwf	?___wmul+1
  3369  05F6  0876               	movf	___wmul@product,w
  3370  05F7  00F2               	movwf	?___wmul
  3371  05F8  0008               	return
  3372  05F9                     __end_of___wmul:	
  3373  05F9                     __ptext829:	
  3374 ;; =============== function ___awdiv ends ============
  3375                           
  3376                           
  3377 ;; *************** function ___fttol *****************
  3378 ;; Defined at:
  3379 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fttol.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  f1              3    8[BANK0 ] float 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  lval            4   16[BANK0 ] unsigned long 
  3384 ;;  exp1            1   20[BANK0 ] unsigned char 
  3385 ;;  sign1           1   15[BANK0 ] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  4    8[BANK0 ] long 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 60/0
  3392 ;;		On exit  : 60/0
  3393 ;;		Unchanged: FFF9F/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       4       0       0       0
  3396 ;;      Locals:         0       6       0       0       0
  3397 ;;      Temps:          0       3       0       0       0
  3398 ;;      Totals:         0      13       0       0       0
  3399 ;;Total ram usage:       13 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_printf
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408  05F9                     ___fttol:	
  3409                           
  3410                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3411  05F9  27A8  120A  118A   	fcall	PL30	;call to abstracted procedure
  3412  05FC  1003               	clrc
  3413  05FD  0D2D               	rlf	??___fttol+1,w
  3414  05FE  0D2E               	rlf	??___fttol+2,w
  3415  05FF  00B4               	movwf	___fttol@exp1
  3416  0600  08B4               	movf	___fttol@exp1,f
  3417  0601  1D03               	skipz
  3418  0602  2E08               	goto	l6479
  3419  0603                     l6477:	
  3420  0603  01A8               	clrf	?___fttol
  3421  0604  01A9               	clrf	?___fttol+1
  3422  0605  01AA               	clrf	?___fttol+2
  3423  0606  01AB               	clrf	?___fttol+3
  3424  0607  0008               	return
  3425  0608                     l6479:	
  3426  0608  27A8  120A  118A   	fcall	PL30	;call to abstracted procedure
  3427  060B  3017               	movlw	23
  3428  060C                     u2495:	
  3429  060C  1003               	clrc
  3430  060D  0CAE               	rrf	??___fttol+2,f
  3431  060E  0CAD               	rrf	??___fttol+1,f
  3432  060F  0CAC               	rrf	??___fttol,f
  3433  0610  3EFF               	addlw	-1
  3434  0611  1D03               	skipz
  3435  0612  2E0C               	goto	u2495
  3436  0613  082C               	movf	??___fttol,w
  3437  0614  00AF               	movwf	___fttol@sign1
  3438  0615  17A9               	bsf	___fttol@f1+1,7
  3439  0616  01AA               	clrf	___fttol@f1+2
  3440  0617  0828               	movf	___fttol@f1,w
  3441  0618  00B0               	movwf	___fttol@lval
  3442  0619  0829               	movf	___fttol@f1+1,w
  3443  061A  00B1               	movwf	___fttol@lval+1
  3444  061B  082A               	movf	___fttol@f1+2,w
  3445  061C  00B2               	movwf	___fttol@lval+2
  3446  061D  308E               	movlw	142
  3447  061E  01B3               	clrf	___fttol@lval+3
  3448  061F  02B4               	subwf	___fttol@exp1,f
  3449  0620  1FB4               	btfss	___fttol@exp1,7
  3450  0621  2E2F               	goto	l6499
  3451  0622  0834               	movf	___fttol@exp1,w
  3452  0623  3A80               	xorlw	128
  3453  0624  3E8F               	addlw	143
  3454  0625  1C03               	btfss	3,0
  3455  0626  2E03               	goto	l6477
  3456  0627                     l6495:	
  3457  0627  1003               	clrc
  3458  0628  0CB3               	rrf	___fttol@lval+3,f
  3459  0629  0CB2               	rrf	___fttol@lval+2,f
  3460  062A  0CB1               	rrf	___fttol@lval+1,f
  3461  062B  0CB0               	rrf	___fttol@lval,f
  3462  062C  0FB4               	incfsz	___fttol@exp1,f
  3463  062D  2E27               	goto	l6495
  3464  062E  2E3D               	goto	l6505
  3465  062F                     l6499:	
  3466  062F  3018               	movlw	24
  3467  0630  0234               	subwf	___fttol@exp1,w
  3468  0631  1803               	btfsc	3,0
  3469  0632  2E03               	goto	l6477
  3470  0633                     l3430:	
  3471  0633  08B4               	movf	___fttol@exp1,f
  3472  0634  1903               	btfsc	3,2
  3473  0635  2E3D               	goto	l6505
  3474  0636  1003               	clrc
  3475  0637  0DB0               	rlf	___fttol@lval,f
  3476  0638  0DB1               	rlf	___fttol@lval+1,f
  3477  0639  0DB2               	rlf	___fttol@lval+2,f
  3478  063A  0DB3               	rlf	___fttol@lval+3,f
  3479  063B  03B4               	decf	___fttol@exp1,f
  3480  063C  2E33               	goto	l3430
  3481  063D                     l6505:	
  3482  063D  082F               	movf	___fttol@sign1,w
  3483  063E  1903               	btfsc	3,2
  3484  063F  2E4B               	goto	l6509
  3485  0640  09B0               	comf	___fttol@lval,f
  3486  0641  09B1               	comf	___fttol@lval+1,f
  3487  0642  09B2               	comf	___fttol@lval+2,f
  3488  0643  09B3               	comf	___fttol@lval+3,f
  3489  0644  0AB0               	incf	___fttol@lval,f
  3490  0645  1903               	skipnz
  3491  0646  0AB1               	incf	___fttol@lval+1,f
  3492  0647  1903               	skipnz
  3493  0648  0AB2               	incf	___fttol@lval+2,f
  3494  0649  1903               	skipnz
  3495  064A  0AB3               	incf	___fttol@lval+3,f
  3496  064B                     l6509:	
  3497  064B  0833               	movf	___fttol@lval+3,w
  3498  064C  00AB               	movwf	?___fttol+3
  3499  064D  0832               	movf	___fttol@lval+2,w
  3500  064E  00AA               	movwf	?___fttol+2
  3501  064F  0831               	movf	___fttol@lval+1,w
  3502  0650  00A9               	movwf	?___fttol+1
  3503  0651  0830               	movf	___fttol@lval,w
  3504  0652  00A8               	movwf	?___fttol
  3505  0653  0008               	return
  3506  0654                     __end_of___fttol:	
  3507  0654                     __ptext824:	
  3508 ;; =============== function ___awmod ends ============
  3509                           
  3510                           
  3511 ;; *************** function ___lldiv *****************
  3512 ;; Defined at:
  3513 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  divisor         4    2[COMMON] unsigned long 
  3516 ;;  dividend        4    6[COMMON] unsigned long 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  quotient        4    0[BANK0 ] unsigned long 
  3519 ;;  counter         1    4[BANK0 ] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  4    2[COMMON] unsigned long 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0
  3524 ;; Tracked objects:
  3525 ;;		On entry : 60/20
  3526 ;;		On exit  : 60/0
  3527 ;;		Unchanged: FFF9F/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         8       0       0       0       0
  3530 ;;      Locals:         0       5       0       0       0
  3531 ;;      Temps:          0       0       0       0       0
  3532 ;;      Totals:         8       5       0       0       0
  3533 ;;Total ram usage:       13 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    1
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_printf
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542  0654                     ___lldiv:	
  3543                           
  3544                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3545  0654  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0655  01A0               	clrf	___lldiv@quotient
  3547  0656  01A1               	clrf	___lldiv@quotient+1
  3548  0657  01A2               	clrf	___lldiv@quotient+2
  3549  0658  01A3               	clrf	___lldiv@quotient+3
  3550  0659  0875               	movf	___lldiv@divisor+3,w
  3551  065A  0474               	iorwf	___lldiv@divisor+2,w
  3552  065B  0473               	iorwf	___lldiv@divisor+1,w
  3553  065C  0472               	iorwf	___lldiv@divisor,w
  3554  065D  1903               	skipnz
  3555  065E  2E94               	goto	l6627
  3556  065F  01A4               	clrf	___lldiv@counter
  3557  0660                     L11:	
  3558  0660  0AA4               	incf	___lldiv@counter,f
  3559  0661  1BF5               	btfsc	___lldiv@divisor+3,7
  3560  0662  2E69               	goto	l6615
  3561  0663  1003               	clrc
  3562  0664  0DF2               	rlf	___lldiv@divisor,f
  3563  0665  0DF3               	rlf	___lldiv@divisor+1,f
  3564  0666  0DF4               	rlf	___lldiv@divisor+2,f
  3565  0667  0DF5               	rlf	___lldiv@divisor+3,f
  3566  0668  2E60               	goto	L11
  3567  0669                     l6615:	
  3568  0669  1003               	clrc
  3569  066A  0DA0               	rlf	___lldiv@quotient,f
  3570  066B  0DA1               	rlf	___lldiv@quotient+1,f
  3571  066C  0DA2               	rlf	___lldiv@quotient+2,f
  3572  066D  0DA3               	rlf	___lldiv@quotient+3,f
  3573  066E  0875               	movf	___lldiv@divisor+3,w
  3574  066F  0279               	subwf	___lldiv@dividend+3,w
  3575  0670  1D03               	skipz
  3576  0671  2E7C               	goto	u2735
  3577  0672  0874               	movf	___lldiv@divisor+2,w
  3578  0673  0278               	subwf	___lldiv@dividend+2,w
  3579  0674  1D03               	skipz
  3580  0675  2E7C               	goto	u2735
  3581  0676  0873               	movf	___lldiv@divisor+1,w
  3582  0677  0277               	subwf	___lldiv@dividend+1,w
  3583  0678  1D03               	skipz
  3584  0679  2E7C               	goto	u2735
  3585  067A  0872               	movf	___lldiv@divisor,w
  3586  067B  0276               	subwf	___lldiv@dividend,w
  3587  067C                     u2735:	
  3588  067C  1C03               	skipc
  3589  067D  2E8E               	goto	L12
  3590  067E  0872               	movf	___lldiv@divisor,w
  3591  067F  02F6               	subwf	___lldiv@dividend,f
  3592  0680  0873               	movf	___lldiv@divisor+1,w
  3593  0681  1C03               	skipc
  3594  0682  0F73               	incfsz	___lldiv@divisor+1,w
  3595  0683  02F7               	subwf	___lldiv@dividend+1,f
  3596  0684  0874               	movf	___lldiv@divisor+2,w
  3597  0685  1C03               	skipc
  3598  0686  0F74               	incfsz	___lldiv@divisor+2,w
  3599  0687  02F8               	subwf	___lldiv@dividend+2,f
  3600  0688  0875               	movf	___lldiv@divisor+3,w
  3601  0689  1C03               	skipc
  3602  068A  0F75               	incfsz	___lldiv@divisor+3,w
  3603  068B  02F9               	subwf	___lldiv@dividend+3,f
  3604  068C  1420               	bsf	___lldiv@quotient,0
  3605  068D  1003               	clrc
  3606  068E                     L12:	
  3607  068E  0CF5               	rrf	___lldiv@divisor+3,f
  3608  068F  0CF4               	rrf	___lldiv@divisor+2,f
  3609  0690  0CF3               	rrf	___lldiv@divisor+1,f
  3610  0691  0CF2               	rrf	___lldiv@divisor,f
  3611  0692  0BA4               	decfsz	___lldiv@counter,f
  3612  0693  2E69               	goto	l6615
  3613  0694                     l6627:	
  3614  0694  0823               	movf	___lldiv@quotient+3,w
  3615  0695  00F5               	movwf	?___lldiv+3
  3616  0696  0822               	movf	___lldiv@quotient+2,w
  3617  0697  00F4               	movwf	?___lldiv+2
  3618  0698  0821               	movf	___lldiv@quotient+1,w
  3619  0699  00F3               	movwf	?___lldiv+1
  3620  069A  0820               	movf	___lldiv@quotient,w
  3621  069B  00F2               	movwf	?___lldiv
  3622  069C  0008               	return
  3623  069D                     __end_of___lldiv:	
  3624  069D                     __ptext836:	
  3625 ;; =============== function __div_to_l_ ends ============
  3626                           
  3627                           
  3628 ;; *************** function __tdiv_to_l_ *****************
  3629 ;; Defined at:
  3630 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdivl.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  f1              3    2[COMMON] float 
  3633 ;;  f2              3    5[COMMON] float 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  quot            4    3[BANK0 ] unsigned long 
  3636 ;;  exp1            1    8[BANK0 ] unsigned char 
  3637 ;;  cntr            1    7[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  4    2[COMMON] unsigned long 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 60/20
  3644 ;;		On exit  : 60/0
  3645 ;;		Unchanged: FFF9F/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         6       0       0       0       0
  3648 ;;      Locals:         0       6       0       0       0
  3649 ;;      Temps:          0       3       0       0       0
  3650 ;;      Totals:         6       9       0       0       0
  3651 ;;Total ram usage:       15 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_printf
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660  069D                     __tdiv_to_l_:	
  3661                           
  3662                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  3663  069D  0872               	movf	__tdiv_to_l_@f1,w
  3664  069E  1283               	bcf	3,5	;RP0=0, select bank0
  3665  069F  00A0               	movwf	??__tdiv_to_l_
  3666  06A0  0873               	movf	__tdiv_to_l_@f1+1,w
  3667  06A1  00A1               	movwf	??__tdiv_to_l_+1
  3668  06A2  0874               	movf	__tdiv_to_l_@f1+2,w
  3669  06A3  00A2               	movwf	??__tdiv_to_l_+2
  3670  06A4  1003               	clrc
  3671  06A5  0D21               	rlf	??__tdiv_to_l_+1,w
  3672  06A6  0D22               	rlf	??__tdiv_to_l_+2,w
  3673  06A7  00A8               	movwf	__tdiv_to_l_@exp1
  3674  06A8  08A8               	movf	__tdiv_to_l_@exp1,f
  3675  06A9  1D03               	skipz
  3676  06AA  2EB0               	goto	l7587
  3677  06AB                     l7585:	
  3678  06AB  01F2               	clrf	?__tdiv_to_l_
  3679  06AC  01F3               	clrf	?__tdiv_to_l_+1
  3680  06AD  01F4               	clrf	?__tdiv_to_l_+2
  3681  06AE  01F5               	clrf	?__tdiv_to_l_+3
  3682  06AF  0008               	return
  3683  06B0                     l7587:	
  3684  06B0  0875               	movf	__tdiv_to_l_@f2,w
  3685  06B1  00A0               	movwf	??__tdiv_to_l_
  3686  06B2  0876               	movf	__tdiv_to_l_@f2+1,w
  3687  06B3  00A1               	movwf	??__tdiv_to_l_+1
  3688  06B4  0877               	movf	__tdiv_to_l_@f2+2,w
  3689  06B5  00A2               	movwf	??__tdiv_to_l_+2
  3690  06B6  1003               	clrc
  3691  06B7  0D21               	rlf	??__tdiv_to_l_+1,w
  3692  06B8  0D22               	rlf	??__tdiv_to_l_+2,w
  3693  06B9  00A7               	movwf	__tdiv_to_l_@cntr
  3694  06BA  08A7               	movf	__tdiv_to_l_@cntr,f
  3695  06BB  1903               	btfsc	3,2
  3696  06BC  2EAB               	goto	l7585
  3697  06BD  307F               	movlw	127
  3698  06BE  17F3               	bsf	__tdiv_to_l_@f1+1,7
  3699  06BF  01F4               	clrf	__tdiv_to_l_@f1+2
  3700  06C0  17F6               	bsf	__tdiv_to_l_@f2+1,7
  3701  06C1  01F7               	clrf	__tdiv_to_l_@f2+2
  3702  06C2  01A3               	clrf	__tdiv_to_l_@quot
  3703  06C3  01A4               	clrf	__tdiv_to_l_@quot+1
  3704  06C4  01A5               	clrf	__tdiv_to_l_@quot+2
  3705  06C5  01A6               	clrf	__tdiv_to_l_@quot+3
  3706  06C6  02A8               	subwf	__tdiv_to_l_@exp1,f
  3707  06C7  3098               	movlw	152
  3708  06C8  0727               	addwf	__tdiv_to_l_@cntr,w
  3709  06C9  00A0               	movwf	??__tdiv_to_l_
  3710  06CA  02A8               	subwf	__tdiv_to_l_@exp1,f
  3711  06CB  3018               	movlw	24
  3712  06CC  00A7               	movwf	__tdiv_to_l_@cntr
  3713  06CD                     l7601:	
  3714  06CD  1003               	clrc
  3715  06CE  0DA3               	rlf	__tdiv_to_l_@quot,f
  3716  06CF  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  3717  06D0  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  3718  06D1  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  3719  06D2  0877               	movf	__tdiv_to_l_@f2+2,w
  3720  06D3  0274               	subwf	__tdiv_to_l_@f1+2,w
  3721  06D4  1D03               	skipz
  3722  06D5  2EDC               	goto	u4155
  3723  06D6  0876               	movf	__tdiv_to_l_@f2+1,w
  3724  06D7  0273               	subwf	__tdiv_to_l_@f1+1,w
  3725  06D8  1D03               	skipz
  3726  06D9  2EDC               	goto	u4155
  3727  06DA  0875               	movf	__tdiv_to_l_@f2,w
  3728  06DB  0272               	subwf	__tdiv_to_l_@f1,w
  3729  06DC                     u4155:	
  3730  06DC  1C03               	skipc
  3731  06DD  2EEA               	goto	L20
  3732  06DE  0875               	movf	__tdiv_to_l_@f2,w
  3733  06DF  02F2               	subwf	__tdiv_to_l_@f1,f
  3734  06E0  0876               	movf	__tdiv_to_l_@f2+1,w
  3735  06E1  1C03               	skipc
  3736  06E2  0F76               	incfsz	__tdiv_to_l_@f2+1,w
  3737  06E3  02F3               	subwf	__tdiv_to_l_@f1+1,f
  3738  06E4  0877               	movf	__tdiv_to_l_@f2+2,w
  3739  06E5  1C03               	skipc
  3740  06E6  0A77               	incf	__tdiv_to_l_@f2+2,w
  3741  06E7  02F4               	subwf	__tdiv_to_l_@f1+2,f
  3742  06E8  1423               	bsf	__tdiv_to_l_@quot,0
  3743  06E9  1003               	clrc
  3744  06EA                     L20:	
  3745  06EA  0DF2               	rlf	__tdiv_to_l_@f1,f
  3746  06EB  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  3747  06EC  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  3748  06ED  0BA7               	decfsz	__tdiv_to_l_@cntr,f
  3749  06EE  2ECD               	goto	l7601
  3750  06EF  1FA8               	btfss	__tdiv_to_l_@exp1,7
  3751  06F0  2EFE               	goto	l7621
  3752  06F1  0828               	movf	__tdiv_to_l_@exp1,w
  3753  06F2  3A80               	xorlw	128
  3754  06F3  3E97               	addlw	151
  3755  06F4  1C03               	btfss	3,0
  3756  06F5  2EAB               	goto	l7585
  3757  06F6                     l7617:	
  3758  06F6  1003               	clrc
  3759  06F7  0CA6               	rrf	__tdiv_to_l_@quot+3,f
  3760  06F8  0CA5               	rrf	__tdiv_to_l_@quot+2,f
  3761  06F9  0CA4               	rrf	__tdiv_to_l_@quot+1,f
  3762  06FA  0CA3               	rrf	__tdiv_to_l_@quot,f
  3763  06FB  0FA8               	incfsz	__tdiv_to_l_@exp1,f
  3764  06FC  2EF6               	goto	l7617
  3765  06FD  2F0C               	goto	l7627
  3766  06FE                     l7621:	
  3767  06FE  3018               	movlw	24
  3768  06FF  0228               	subwf	__tdiv_to_l_@exp1,w
  3769  0700  1803               	btfsc	3,0
  3770  0701  2EAB               	goto	l7585
  3771  0702                     l3568:	
  3772  0702  08A8               	movf	__tdiv_to_l_@exp1,f
  3773  0703  1903               	btfsc	3,2
  3774  0704  2F0C               	goto	l7627
  3775  0705  1003               	clrc
  3776  0706  0DA3               	rlf	__tdiv_to_l_@quot,f
  3777  0707  0DA4               	rlf	__tdiv_to_l_@quot+1,f
  3778  0708  0DA5               	rlf	__tdiv_to_l_@quot+2,f
  3779  0709  0DA6               	rlf	__tdiv_to_l_@quot+3,f
  3780  070A  03A8               	decf	__tdiv_to_l_@exp1,f
  3781  070B  2F02               	goto	l3568
  3782  070C                     l7627:	
  3783  070C  0826               	movf	__tdiv_to_l_@quot+3,w
  3784  070D  00F5               	movwf	?__tdiv_to_l_+3
  3785  070E  0825               	movf	__tdiv_to_l_@quot+2,w
  3786  070F  00F4               	movwf	?__tdiv_to_l_+2
  3787  0710  0824               	movf	__tdiv_to_l_@quot+1,w
  3788  0711  00F3               	movwf	?__tdiv_to_l_+1
  3789  0712  0823               	movf	__tdiv_to_l_@quot,w
  3790  0713  00F2               	movwf	?__tdiv_to_l_
  3791  0714  0008               	return
  3792  0715                     __end_of__tdiv_to_l_:	
  3793  0715                     __ptext826:	
  3794 ;; =============== function ___ftge ends ============
  3795                           
  3796                           
  3797 ;; *************** function ___ftneg *****************
  3798 ;; Defined at:
  3799 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftneg.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  f1              3    2[COMMON] float 
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  3    2[COMMON] float 
  3806 ;; Registers used:
  3807 ;;		wreg
  3808 ;; Tracked objects:
  3809 ;;		On entry : 160/20
  3810 ;;		On exit  : 160/20
  3811 ;;		Unchanged: FFE9F/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3813 ;;      Params:         3       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0
  3816 ;;      Totals:         3       0       0       0       0
  3817 ;;Total ram usage:        3 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_printf
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826  0715                     ___ftneg:	
  3827                           
  3828                           ; Regs used in ___ftneg: [wreg]
  3829  0715  0874               	movf	___ftneg@f1+2,w
  3830  0716  0473               	iorwf	___ftneg@f1+1,w
  3831  0717  0472               	iorwf	___ftneg@f1,w
  3832  0718  1903               	skipnz
  3833  0719  0008               	return
  3834  071A  3080               	movlw	128
  3835  071B  06F4               	xorwf	___ftneg@f1+2,f
  3836  071C  0008               	return
  3837  071D                     __end_of___ftneg:	
  3838  071D                     PL2:	
  3839  071D  0838               	movf	printf@c^(0+128),w
  3840  071E  1283               	bcf	3,5	;RP0=0, select bank0
  3841  071F  00DE               	movwf	??_printf
  3842  0720  1003               	clrc
  3843  0721  0DDE               	rlf	??_printf,f
  3844  0722  1003               	clrc
  3845  0723  0D5E               	rlf	??_printf,w
  3846  0724  3E4F               	addlw	low (_dpowers-__stringbase)
  3847  0725  0084               	movwf	4
  3848  0726  0008               	return
  3849  0727                     PL4:	
  3850  0727  300A               	movlw	10
  3851  0728  1283               	bcf	3,5	;RP0=0, select bank0
  3852  0729  00A5               	movwf	?___llmod
  3853  072A  01A6               	clrf	?___llmod+1
  3854  072B  01A7               	clrf	?___llmod+2
  3855  072C  01A8               	clrf	?___llmod+3
  3856  072D  1683               	bsf	3,5	;RP0=1, select bank1
  3857  072E  0008               	return
  3858  072F                     PL5:	
  3859  072F  00F5               	movwf	?___lldiv+3
  3860  0730  1683               	bsf	3,5	;RP0=1, select bank1
  3861  0731  082C               	movf	(printf@_val+3)^(0+128),w
  3862  0732  00F9               	movwf	?___lldiv+7
  3863  0733  082B               	movf	(printf@_val+2)^(0+128),w
  3864  0734  00F8               	movwf	?___lldiv+6
  3865  0735  082A               	movf	(printf@_val+1)^(0+128),w
  3866  0736  00F7               	movwf	?___lldiv+5
  3867  0737  0829               	movf	printf@_val^(0+128),w
  3868  0738  00F6               	movwf	?___lldiv+4
  3869  0739  0008               	return
  3870  073A                     PL6:	
  3871  073A  082B               	movf	?___fttol+3,w
  3872  073B  1683               	bsf	3,5	;RP0=1, select bank1
  3873  073C  00AC               	movwf	(printf@_val+3)^(0+128)
  3874  073D  1283               	bcf	3,5	;RP0=0, select bank0
  3875  073E  082A               	movf	?___fttol+2,w
  3876  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3877  0740  00AB               	movwf	(printf@_val+2)^(0+128)
  3878  0741  1283               	bcf	3,5	;RP0=0, select bank0
  3879  0742  0829               	movf	?___fttol+1,w
  3880  0743  1683               	bsf	3,5	;RP0=1, select bank1
  3881  0744  00AA               	movwf	(printf@_val+1)^(0+128)
  3882  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0746  0828               	movf	?___fttol,w
  3884  0747  0008               	return
  3885  0748                     PL7:	
  3886  0748  0844               	movf	?_scale,w
  3887  0749  1683               	bsf	3,5	;RP0=1, select bank1
  3888  074A  00A5               	movwf	printf@integ^(0+128)
  3889  074B  1283               	bcf	3,5	;RP0=0, select bank0
  3890  074C  0845               	movf	?_scale+1,w
  3891  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3892  074E  00A6               	movwf	(printf@integ+1)^(0+128)
  3893  074F  1283               	bcf	3,5	;RP0=0, select bank0
  3894  0750  0846               	movf	?_scale+2,w
  3895  0751  1683               	bsf	3,5	;RP0=1, select bank1
  3896  0752  00A7               	movwf	(printf@integ+2)^(0+128)
  3897  0753  0833               	movf	printf@fval^(0+128),w
  3898  0754  0008               	return
  3899  0755                     PL12:	
  3900  0755  0875               	movf	?___lldiv+3,w
  3901  0756  00AC               	movwf	?___llmod+7
  3902  0757  0874               	movf	?___lldiv+2,w
  3903  0758  00AB               	movwf	?___llmod+6
  3904  0759  0873               	movf	?___lldiv+1,w
  3905  075A  00AA               	movwf	?___llmod+5
  3906  075B  0872               	movf	?___lldiv,w
  3907  075C  00A9               	movwf	?___llmod+4
  3908  075D  0008               	return
  3909  075E                     PL13:	
  3910  075E  0772               	addwf	?___wmul,w
  3911  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0760  00DE               	movwf	??_printf
  3913  0761  3000               	movlw	0
  3914  0762  1803               	skipnc
  3915  0763  3001               	movlw	1
  3916  0764  0773               	addwf	?___wmul+1,w
  3917  0765  00DF               	movwf	??_printf+1
  3918  0766  085E               	movf	??_printf,w
  3919  0767  3ED0               	addlw	208
  3920  0768  1683               	bsf	3,5	;RP0=1, select bank1
  3921  0769  0008               	return
  3922  076A                     PL14:	
  3923  076A  1283               	bcf	3,5	;RP0=0, select bank0
  3924  076B  00A8               	movwf	?___fttol
  3925  076C  1683               	bsf	3,5	;RP0=1, select bank1
  3926  076D  0834               	movf	(printf@fval+1)^(0+128),w
  3927  076E  1283               	bcf	3,5	;RP0=0, select bank0
  3928  076F  00A9               	movwf	?___fttol+1
  3929  0770  1683               	bsf	3,5	;RP0=1, select bank1
  3930  0771  0835               	movf	(printf@fval+2)^(0+128),w
  3931  0772  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0773  00AA               	movwf	?___fttol+2
  3933  0774  0008               	return
  3934  0775                     PL16:	
  3935  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0776  00B5               	movwf	?___ftmul
  3937  0777  1683               	bsf	3,5	;RP0=1, select bank1
  3938  0778  0834               	movf	(printf@fval+1)^(0+128),w
  3939  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3940  077A  00B6               	movwf	?___ftmul+1
  3941  077B  1683               	bsf	3,5	;RP0=1, select bank1
  3942  077C  0835               	movf	(printf@fval+2)^(0+128),w
  3943  077D  1283               	bcf	3,5	;RP0=0, select bank0
  3944  077E  00B7               	movwf	?___ftmul+2
  3945  077F  0008               	return
  3946  0780                     PL18:	
  3947  0780  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0781  00DE               	movwf	??_printf
  3949  0782  01DF               	clrf	??_printf+1
  3950  0783  1BDE               	btfsc	??_printf,7
  3951  0784  03DF               	decf	??_printf+1,f
  3952  0785  085F               	movf	??_printf+1,w
  3953  0786  3A80               	xorlw	128
  3954  0787  00E0               	movwf	??_printf+2
  3955  0788  1683               	bsf	3,5	;RP0=1, select bank1
  3956  0789  0008               	return
  3957  078A                     PL20:	
  3958  078A  1303               	bcf	3,6	;RP1=0, select bank1
  3959  078B  0838               	movf	printf@c^(0+128),w
  3960  078C  1283               	bcf	3,5	;RP0=0, select bank0
  3961  078D  00DE               	movwf	??_printf
  3962  078E  01DF               	clrf	??_printf+1
  3963  078F  1BDE               	btfsc	??_printf,7
  3964  0790  03DF               	decf	??_printf+1,f
  3965  0791  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0792  0008               	return
  3967  0793                     PL21:	
  3968  0793  0825               	movf	printf@integ^(0+128),w
  3969  0794  00F2               	movwf	?___ftge
  3970  0795  0826               	movf	(printf@integ+1)^(0+128),w
  3971  0796  00F3               	movwf	?___ftge+1
  3972  0797  0827               	movf	(printf@integ+2)^(0+128),w
  3973  0798  00F4               	movwf	?___ftge+2
  3974  0799  0008               	return
  3975  079A                     PL28:	
  3976  079A  0800               	movf	0,w
  3977  079B  1283               	bcf	3,5	;RP0=0, select bank0
  3978  079C  00DE               	movwf	??_printf
  3979  079D  0A84               	incf	4,f
  3980  079E  0800               	movf	0,w
  3981  079F  00DF               	movwf	??_printf+1
  3982  07A0  0008               	return
  3983  07A1                     PL29:	
  3984  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  3985  07A2  085F               	movf	??_printf+1,w
  3986  07A3  1803               	skipnc
  3987  07A4  3E01               	addlw	1
  3988  07A5  3EFF               	addlw	255
  3989  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  3990  07A7  0008               	return
  3991  07A8                     PL30:	
  3992  07A8  0828               	movf	___fttol@f1,w
  3993  07A9  00AC               	movwf	??___fttol
  3994  07AA  0829               	movf	___fttol@f1+1,w
  3995  07AB  00AD               	movwf	??___fttol+1
  3996  07AC  082A               	movf	___fttol@f1+2,w
  3997  07AD  00AE               	movwf	??___fttol+2
  3998  07AE  0008               	return
  3999  07AF                     PL32:	
  4000  07AF  1683               	bsf	3,5	;RP0=1, select bank1
  4001  07B0  1303               	bcf	3,6	;RP1=0, select bank1
  4002  07B1  0008               	return
  4003  07B2                     __ptext815:	
  4004 ;; =============== function _lcd_init ends ============
  4005                           
  4006                           
  4007 ;; *************** function ___lltoft *****************
  4008 ;; Defined at:
  4009 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lltoft.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  c               4    0[BANK0 ] unsigned long 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  exp             1    4[BANK0 ] unsigned char 
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  3    0[BANK0 ] float 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 60/0
  4020 ;;		On exit  : 60/0
  4021 ;;		Unchanged: FFF9F/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4023 ;;      Params:         0       4       0       0       0
  4024 ;;      Locals:         0       1       0       0       0
  4025 ;;      Temps:          0       0       0       0       0
  4026 ;;      Totals:         0       5       0       0       0
  4027 ;;Total ram usage:        5 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    2
  4030 ;; This function calls:
  4031 ;;		___ftpack
  4032 ;; This function is called by:
  4033 ;;		_printf
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036  07B2                     ___lltoft:	
  4037                           
  4038                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  4039  07B2  308E               	movlw	142
  4040  07B3  00A4               	movwf	___lltoft@exp
  4041  07B4                     l8007:	
  4042  07B4  30FF               	movlw	255
  4043  07B5  0523               	andwf	___lltoft@c+3,w
  4044  07B6  1903               	btfsc	3,2
  4045  07B7  2FBF               	goto	l8009
  4046  07B8  1003               	clrc
  4047  07B9  0CA3               	rrf	___lltoft@c+3,f
  4048  07BA  0CA2               	rrf	___lltoft@c+2,f
  4049  07BB  0CA1               	rrf	___lltoft@c+1,f
  4050  07BC  0CA0               	rrf	___lltoft@c,f
  4051  07BD  0AA4               	incf	___lltoft@exp,f
  4052  07BE  2FB4               	goto	l8007
  4053  07BF                     l8009:	
  4054  07BF  0820               	movf	___lltoft@c,w
  4055  07C0  00F2               	movwf	?___ftpack
  4056  07C1  0821               	movf	___lltoft@c+1,w
  4057  07C2  00F3               	movwf	?___ftpack+1
  4058  07C3  0822               	movf	___lltoft@c+2,w
  4059  07C4  00F4               	movwf	?___ftpack+2
  4060  07C5  0824               	movf	___lltoft@exp,w
  4061  07C6  00F5               	movwf	?___ftpack+3
  4062  07C7  01F6               	clrf	?___ftpack+4
  4063  07C8  120A  158A  2769   	fcall	___ftpack
  4064  07CB  0872               	movf	?___ftpack,w
  4065  07CC  00A0               	movwf	?___lltoft
  4066  07CD  0873               	movf	?___ftpack+1,w
  4067  07CE  00A1               	movwf	?___lltoft+1
  4068  07CF  0874               	movf	?___ftpack+2,w
  4069  07D0  00A2               	movwf	?___lltoft+2
  4070  07D1  0008               	return
  4071  07D2                     __end_of___lltoft:	
  4072                           
  4073                           	psect	text810
  4074  0832                     __ptext810:	
  4075 ;; =============== function _lcd_putc ends ============
  4076                           
  4077                           
  4078 ;; *************** function ___ftsub *****************
  4079 ;; Defined at:
  4080 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftsub.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;  f2              3   48[BANK0 ] float 
  4083 ;;  f1              3   51[BANK0 ] float 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  3   48[BANK0 ] float 
  4088 ;; Registers used:
  4089 ;;		wreg, status,2, status,0, pclath, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 60/0
  4092 ;;		On exit  : 60/0
  4093 ;;		Unchanged: FFF9F/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4095 ;;      Params:         0       6       0       0       0
  4096 ;;      Locals:         0       0       0       0       0
  4097 ;;      Temps:          0       0       0       0       0
  4098 ;;      Totals:         0       6       0       0       0
  4099 ;;Total ram usage:        6 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:    3
  4102 ;; This function calls:
  4103 ;;		___ftadd
  4104 ;; This function is called by:
  4105 ;;		_printf
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108  0832                     ___ftsub:	
  4109                           
  4110                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4111  0832  3080               	movlw	128
  4112  0833  06D2               	xorwf	___ftsub@f2+2,f
  4113  0834  0853               	movf	___ftsub@f1,w
  4114  0835  00C4               	movwf	?___ftadd
  4115  0836  0854               	movf	___ftsub@f1+1,w
  4116  0837  00C5               	movwf	?___ftadd+1
  4117  0838  0855               	movf	___ftsub@f1+2,w
  4118  0839  00C6               	movwf	?___ftadd+2
  4119  083A  0850               	movf	___ftsub@f2,w
  4120  083B  00C7               	movwf	?___ftadd+3
  4121  083C  0851               	movf	___ftsub@f2+1,w
  4122  083D  00C8               	movwf	?___ftadd+4
  4123  083E  0852               	movf	___ftsub@f2+2,w
  4124  083F  00C9               	movwf	?___ftadd+5
  4125  0840  2048               	fcall	___ftadd
  4126  0841  0844               	movf	?___ftadd,w
  4127  0842  00D0               	movwf	?___ftsub
  4128  0843  0845               	movf	?___ftadd+1,w
  4129  0844  00D1               	movwf	?___ftsub+1
  4130  0845  0846               	movf	?___ftadd+2,w
  4131  0846  00D2               	movwf	?___ftsub+2
  4132  0847  0008               	return
  4133  0848                     __end_of___ftsub:	
  4134  0848                     __ptext819:	
  4135 ;; =============== function ___ftdiv ends ============
  4136                           
  4137                           
  4138 ;; *************** function ___ftadd *****************
  4139 ;; Defined at:
  4140 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftadd.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  f1              3   36[BANK0 ] float 
  4143 ;;  f2              3   39[BANK0 ] float 
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  exp1            1   47[BANK0 ] unsigned char 
  4146 ;;  exp2            1   46[BANK0 ] unsigned char 
  4147 ;;  sign            1   45[BANK0 ] unsigned char 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  3   36[BANK0 ] float 
  4150 ;; Registers used:
  4151 ;;		wreg, status,2, status,0, pclath, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 60/0
  4154 ;;		On exit  : 60/0
  4155 ;;		Unchanged: FFF9F/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4157 ;;      Params:         0       6       0       0       0
  4158 ;;      Locals:         0       3       0       0       0
  4159 ;;      Temps:          0       3       0       0       0
  4160 ;;      Totals:         0      12       0       0       0
  4161 ;;Total ram usage:       12 bytes
  4162 ;; Hardware stack levels used:    1
  4163 ;; Hardware stack levels required when called:    2
  4164 ;; This function calls:
  4165 ;;		___ftpack
  4166 ;; This function is called by:
  4167 ;;		_printf
  4168 ;;		___ftsub
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171  0848                     ___ftadd:	
  4172                           
  4173                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4174  0848  0844               	movf	___ftadd@f1,w
  4175  0849  00CA               	movwf	??___ftadd
  4176  084A  0845               	movf	___ftadd@f1+1,w
  4177  084B  00CB               	movwf	??___ftadd+1
  4178  084C  0846               	movf	___ftadd@f1+2,w
  4179  084D  00CC               	movwf	??___ftadd+2
  4180  084E  1003               	clrc
  4181  084F  0D4B               	rlf	??___ftadd+1,w
  4182  0850  0D4C               	rlf	??___ftadd+2,w
  4183  0851  00CF               	movwf	___ftadd@exp1
  4184  0852  0847               	movf	___ftadd@f2,w
  4185  0853  00CA               	movwf	??___ftadd
  4186  0854  0848               	movf	___ftadd@f2+1,w
  4187  0855  00CB               	movwf	??___ftadd+1
  4188  0856  0849               	movf	___ftadd@f2+2,w
  4189  0857  00CC               	movwf	??___ftadd+2
  4190  0858  1003               	clrc
  4191  0859  0D4B               	rlf	??___ftadd+1,w
  4192  085A  0D4C               	rlf	??___ftadd+2,w
  4193  085B  00CE               	movwf	___ftadd@exp2
  4194  085C  084F               	movf	___ftadd@exp1,w
  4195  085D  1903               	btfsc	3,2
  4196  085E  286B               	goto	l7817
  4197  085F  084E               	movf	___ftadd@exp2,w
  4198  0860  024F               	subwf	___ftadd@exp1,w
  4199  0861  084E               	movf	___ftadd@exp2,w
  4200  0862  1803               	skipnc
  4201  0863  2873               	goto	L8
  4202  0864  00CA               	movwf	??___ftadd
  4203  0865  084F               	movf	___ftadd@exp1,w
  4204  0866  02CA               	subwf	??___ftadd,f
  4205  0867  3019               	movlw	25
  4206  0868  024A               	subwf	??___ftadd,w
  4207  0869  1C03               	skipc
  4208  086A  2872               	goto	l7821
  4209  086B                     l7817:	
  4210  086B  0847               	movf	___ftadd@f2,w
  4211  086C  00C4               	movwf	?___ftadd
  4212  086D  0848               	movf	___ftadd@f2+1,w
  4213  086E  00C5               	movwf	?___ftadd+1
  4214  086F  0849               	movf	___ftadd@f2+2,w
  4215  0870  00C6               	movwf	?___ftadd+2
  4216  0871  0008               	return
  4217  0872                     l7821:	
  4218  0872  084E               	movf	___ftadd@exp2,w
  4219  0873                     L8:	
  4220  0873  1903               	btfsc	3,2
  4221  0874  0008               	return
  4222  0875  084F               	movf	___ftadd@exp1,w
  4223  0876  024E               	subwf	___ftadd@exp2,w
  4224  0877  1803               	skipnc
  4225  0878  2881               	goto	l7827
  4226  0879  084F               	movf	___ftadd@exp1,w
  4227  087A  00CA               	movwf	??___ftadd
  4228  087B  084E               	movf	___ftadd@exp2,w
  4229  087C  02CA               	subwf	??___ftadd,f
  4230  087D  3019               	movlw	25
  4231  087E  024A               	subwf	??___ftadd,w
  4232  087F  1803               	btfsc	3,0
  4233  0880  0008               	return
  4234  0881                     l7827:	
  4235  0881  3006               	movlw	6
  4236  0882  00CD               	movwf	___ftadd@sign
  4237  0883  1BC6               	btfsc	___ftadd@f1+2,7
  4238  0884  17CD               	bsf	___ftadd@sign,7
  4239  0885  1BC9               	btfsc	___ftadd@f2+2,7
  4240  0886  174D               	bsf	___ftadd@sign,6
  4241  0887  17C5               	bsf	___ftadd@f1+1,7
  4242  0888  01C6               	clrf	___ftadd@f1+2
  4243  0889  17C8               	bsf	___ftadd@f2+1,7
  4244  088A  01C9               	clrf	___ftadd@f2+2
  4245  088B  084E               	movf	___ftadd@exp2,w
  4246  088C  024F               	subwf	___ftadd@exp1,w
  4247  088D  1803               	skipnc
  4248  088E  28A8               	goto	l7849
  4249  088F                     l7839:	
  4250  088F  1003               	clrc
  4251  0890  0DC7               	rlf	___ftadd@f2,f
  4252  0891  0DC8               	rlf	___ftadd@f2+1,f
  4253  0892  0DC9               	rlf	___ftadd@f2+2,f
  4254  0893  03CE               	decf	___ftadd@exp2,f
  4255  0894  084E               	movf	___ftadd@exp2,w
  4256  0895  064F               	xorwf	___ftadd@exp1,w
  4257  0896  1903               	skipnz
  4258  0897  28A3               	goto	l7847
  4259  0898  03CD               	decf	___ftadd@sign,f
  4260  0899  084D               	movf	___ftadd@sign,w
  4261  089A  3907               	andlw	7
  4262  089B  1903               	btfsc	3,2
  4263  089C  28A3               	goto	l7847
  4264  089D  288F               	goto	l7839
  4265  089E                     l7845:	
  4266  089E  1003               	clrc
  4267  089F  0CC6               	rrf	___ftadd@f1+2,f
  4268  08A0  0CC5               	rrf	___ftadd@f1+1,f
  4269  08A1  0CC4               	rrf	___ftadd@f1,f
  4270  08A2  0ACF               	incf	___ftadd@exp1,f
  4271  08A3                     l7847:	
  4272  08A3  084F               	movf	___ftadd@exp1,w
  4273  08A4  064E               	xorwf	___ftadd@exp2,w
  4274  08A5  1903               	btfsc	3,2
  4275  08A6  28C4               	goto	l3374
  4276  08A7  289E               	goto	l7845
  4277  08A8                     l7849:	
  4278  08A8  084F               	movf	___ftadd@exp1,w
  4279  08A9  024E               	subwf	___ftadd@exp2,w
  4280  08AA  1803               	skipnc
  4281  08AB  28C4               	goto	l3374
  4282  08AC                     l7851:	
  4283  08AC  1003               	clrc
  4284  08AD  0DC4               	rlf	___ftadd@f1,f
  4285  08AE  0DC5               	rlf	___ftadd@f1+1,f
  4286  08AF  0DC6               	rlf	___ftadd@f1+2,f
  4287  08B0  03CF               	decf	___ftadd@exp1,f
  4288  08B1  084E               	movf	___ftadd@exp2,w
  4289  08B2  064F               	xorwf	___ftadd@exp1,w
  4290  08B3  1903               	skipnz
  4291  08B4  28C0               	goto	l7859
  4292  08B5  03CD               	decf	___ftadd@sign,f
  4293  08B6  084D               	movf	___ftadd@sign,w
  4294  08B7  3907               	andlw	7
  4295  08B8  1903               	btfsc	3,2
  4296  08B9  28C0               	goto	l7859
  4297  08BA  28AC               	goto	l7851
  4298  08BB                     l7857:	
  4299  08BB  1003               	clrc
  4300  08BC  0CC9               	rrf	___ftadd@f2+2,f
  4301  08BD  0CC8               	rrf	___ftadd@f2+1,f
  4302  08BE  0CC7               	rrf	___ftadd@f2,f
  4303  08BF  0ACE               	incf	___ftadd@exp2,f
  4304  08C0                     l7859:	
  4305  08C0  084F               	movf	___ftadd@exp1,w
  4306  08C1  064E               	xorwf	___ftadd@exp2,w
  4307  08C2  1D03               	skipz
  4308  08C3  28BB               	goto	l7857
  4309  08C4                     l3374:	
  4310  08C4  1FCD               	btfss	___ftadd@sign,7
  4311  08C5  28CF               	goto	l7865
  4312  08C6  30FF               	movlw	255
  4313  08C7  06C4               	xorwf	___ftadd@f1,f
  4314  08C8  06C5               	xorwf	___ftadd@f1+1,f
  4315  08C9  06C6               	xorwf	___ftadd@f1+2,f
  4316  08CA  0AC4               	incf	___ftadd@f1,f
  4317  08CB  1903               	skipnz
  4318  08CC  0AC5               	incf	___ftadd@f1+1,f
  4319  08CD  1903               	skipnz
  4320  08CE  0AC6               	incf	___ftadd@f1+2,f
  4321  08CF                     l7865:	
  4322  08CF  1F4D               	btfss	___ftadd@sign,6
  4323  08D0  28DA               	goto	l7871
  4324  08D1  30FF               	movlw	255
  4325  08D2  06C7               	xorwf	___ftadd@f2,f
  4326  08D3  06C8               	xorwf	___ftadd@f2+1,f
  4327  08D4  06C9               	xorwf	___ftadd@f2+2,f
  4328  08D5  0AC7               	incf	___ftadd@f2,f
  4329  08D6  1903               	skipnz
  4330  08D7  0AC8               	incf	___ftadd@f2+1,f
  4331  08D8  1903               	skipnz
  4332  08D9  0AC9               	incf	___ftadd@f2+2,f
  4333  08DA                     l7871:	
  4334  08DA  01CD               	clrf	___ftadd@sign
  4335  08DB  0844               	movf	___ftadd@f1,w
  4336  08DC  07C7               	addwf	___ftadd@f2,f
  4337  08DD  0845               	movf	___ftadd@f1+1,w
  4338  08DE  1103               	clrz
  4339  08DF  1803               	skipnc
  4340  08E0  0A45               	incf	___ftadd@f1+1,w
  4341  08E1  1D03               	btfss	3,2
  4342  08E2  07C8               	addwf	___ftadd@f2+1,f
  4343  08E3  0846               	movf	___ftadd@f1+2,w
  4344  08E4  1103               	clrz
  4345  08E5  1803               	skipnc
  4346  08E6  0A46               	incf	___ftadd@f1+2,w
  4347  08E7  1D03               	btfss	3,2
  4348  08E8  07C9               	addwf	___ftadd@f2+2,f
  4349  08E9  1FC9               	btfss	___ftadd@f2+2,7
  4350  08EA  28F6               	goto	l7883
  4351  08EB  30FF               	movlw	255
  4352  08EC  06C7               	xorwf	___ftadd@f2,f
  4353  08ED  06C8               	xorwf	___ftadd@f2+1,f
  4354  08EE  06C9               	xorwf	___ftadd@f2+2,f
  4355  08EF  0AC7               	incf	___ftadd@f2,f
  4356  08F0  1903               	skipnz
  4357  08F1  0AC8               	incf	___ftadd@f2+1,f
  4358  08F2  1903               	skipnz
  4359  08F3  0AC9               	incf	___ftadd@f2+2,f
  4360  08F4  01CD               	clrf	___ftadd@sign
  4361  08F5  0ACD               	incf	___ftadd@sign,f
  4362  08F6                     l7883:	
  4363  08F6  0847               	movf	___ftadd@f2,w
  4364  08F7  00F2               	movwf	?___ftpack
  4365  08F8  0848               	movf	___ftadd@f2+1,w
  4366  08F9  00F3               	movwf	?___ftpack+1
  4367  08FA  0849               	movf	___ftadd@f2+2,w
  4368  08FB  00F4               	movwf	?___ftpack+2
  4369  08FC  084F               	movf	___ftadd@exp1,w
  4370  08FD  00F5               	movwf	?___ftpack+3
  4371  08FE  084D               	movf	___ftadd@sign,w
  4372  08FF  00F6               	movwf	?___ftpack+4
  4373  0900  120A  158A  2769   	fcall	___ftpack
  4374  0903  0872               	movf	?___ftpack,w
  4375  0904  00C4               	movwf	?___ftadd
  4376  0905  0873               	movf	?___ftpack+1,w
  4377  0906  00C5               	movwf	?___ftadd+1
  4378  0907  0874               	movf	?___ftpack+2,w
  4379  0908  00C6               	movwf	?___ftadd+2
  4380  0909  0008               	return
  4381  090A                     __end_of___ftadd:	
  4382                           
  4383                           	psect	text812
  4384  090A                     __ptext812:	
  4385 ;; =============== function _scale ends ============
  4386                           
  4387                           
  4388 ;; *************** function _fround *****************
  4389 ;; Defined at:
  4390 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  prec            1    wreg     unsigned char 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  prec            1   57[BANK0 ] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  3   48[BANK0 ] unsigned char 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 60/20
  4401 ;;		On exit  : 60/0
  4402 ;;		Unchanged: FFF9F/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4404 ;;      Params:         0       3       0       0       0
  4405 ;;      Locals:         0       7       0       0       0
  4406 ;;      Temps:          0       0       0       0       0
  4407 ;;      Totals:         0      10       0       0       0
  4408 ;;Total ram usage:       10 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    3
  4411 ;; This function calls:
  4412 ;;		___lbmod
  4413 ;;		___bmul
  4414 ;;		___lbdiv
  4415 ;;		___ftmul
  4416 ;; This function is called by:
  4417 ;;		_printf
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420  090A                     _fround:	
  4421                           
  4422                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4423                           ;fround@prec stored from wreg
  4424  090A  1283               	bcf	3,5	;RP0=0, select bank0
  4425  090B  00D9               	movwf	fround@prec
  4426  090C  306E               	movlw	110
  4427  090D  0259               	subwf	fround@prec,w
  4428  090E  1C03               	skipc
  4429  090F  2995               	goto	l8073
  4430  0910  3003               	movlw	3
  4431  0911  00F8               	movwf	?___bmul
  4432  0912  300A               	movlw	10
  4433  0913  00F7               	movwf	?___lbdiv
  4434  0914  3064               	movlw	100
  4435  0915  00F2               	movwf	?___lbmod
  4436  0916  0859               	movf	fround@prec,w
  4437  0917  222A  120A  158A   	fcall	___lbmod
  4438  091A  220F               	fcall	___lbdiv
  4439  091B  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4440  0920  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4441  0921  0084               	movwf	4
  4442  0922  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4443  0927  00B5               	movwf	?___ftmul
  4444  0928  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4445  092D  00B6               	movwf	?___ftmul+1
  4446  092E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4447  0933  00B7               	movwf	?___ftmul+2
  4448  0934  3003               	movlw	3
  4449  0935  00F8               	movwf	?___bmul
  4450  0936  3064               	movlw	100
  4451  0937  00F7               	movwf	?___lbdiv
  4452  0938  0859               	movf	fround@prec,w
  4453  0939  220F               	fcall	___lbdiv
  4454  093A  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4455  093F  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4456  0940  0084               	movwf	4
  4457  0941  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4458  0946  00B8               	movwf	?___ftmul+3
  4459  0947  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4460  094C  00B9               	movwf	?___ftmul+4
  4461  094D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4462  0952  00BA               	movwf	?___ftmul+5
  4463  0953  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4464  0958  2255  120A  158A   	fcall	PL31	;call to abstracted procedure
  4465  095B  3003               	movlw	3
  4466  095C  00F8               	movwf	?___bmul
  4467  095D  300A               	movlw	10
  4468  095E  00F2               	movwf	?___lbmod
  4469  095F  0859               	movf	fround@prec,w
  4470  0960  222A               	fcall	___lbmod
  4471  0961  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4472  0966  3E01               	addlw	low (__npowers_-__stringbase)
  4473  0967  0084               	movwf	4
  4474  0968  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4475  096D  00B5               	movwf	?___ftmul
  4476  096E  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4477  0973  00B6               	movwf	?___ftmul+1
  4478  0974  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4479  0979  224D               	fcall	PL24	;call to abstracted procedure
  4480  097A  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4481  097F  0835               	movf	?___ftmul,w
  4482  0980  00D3               	movwf	_fround$4121
  4483  0981  0836               	movf	?___ftmul+1,w
  4484  0982  00D4               	movwf	_fround$4121+1
  4485  0983  0837               	movf	?___ftmul+2,w
  4486  0984  00D5               	movwf	_fround$4121+2
  4487  0985  303F               	movlw	63
  4488  0986  01B5               	clrf	?___ftmul
  4489  0987  01B6               	clrf	?___ftmul+1
  4490  0988  00B7               	movwf	?___ftmul+2
  4491  0989  0853               	movf	_fround$4121,w
  4492  098A  00B8               	movwf	?___ftmul+3
  4493  098B  0854               	movf	_fround$4121+1,w
  4494  098C  00B9               	movwf	?___ftmul+4
  4495  098D  0855               	movf	_fround$4121+2,w
  4496  098E  00BA               	movwf	?___ftmul+5
  4497  098F  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4498  0994  2A46               	ljmp	PL17	;call to abstracted procedure
  4499  0995                     l8073:	
  4500  0995  300B               	movlw	11
  4501  0996  0259               	subwf	fround@prec,w
  4502  0997  1C03               	skipc
  4503  0998  29E9               	goto	l8081
  4504  0999  3003               	movlw	3
  4505  099A  00F8               	movwf	?___bmul
  4506  099B  300A               	movlw	10
  4507  099C  00F2               	movwf	?___lbmod
  4508  099D  0859               	movf	fround@prec,w
  4509  099E  222A               	fcall	___lbmod
  4510  099F  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4511  09A4  3E01               	addlw	low (__npowers_-__stringbase)
  4512  09A5  0084               	movwf	4
  4513  09A6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4514  09AB  00B5               	movwf	?___ftmul
  4515  09AC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4516  09B1  00B6               	movwf	?___ftmul+1
  4517  09B2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4518  09B7  00B7               	movwf	?___ftmul+2
  4519  09B8  3003               	movlw	3
  4520  09B9  00F8               	movwf	?___bmul
  4521  09BA  300A               	movlw	10
  4522  09BB  00F7               	movwf	?___lbdiv
  4523  09BC  0859               	movf	fround@prec,w
  4524  09BD  220F               	fcall	___lbdiv
  4525  09BE  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4526  09C3  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4527  09C4  0084               	movwf	4
  4528  09C5  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4529  09CA  00B8               	movwf	?___ftmul+3
  4530  09CB  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4531  09D0  00B9               	movwf	?___ftmul+4
  4532  09D1  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4533  09D6  00BA               	movwf	?___ftmul+5
  4534  09D7  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4535  09DC  2255  120A  158A   	fcall	PL31	;call to abstracted procedure
  4536  09DF  303F               	movlw	63
  4537  09E0  01B5               	clrf	?___ftmul
  4538  09E1  01B6               	clrf	?___ftmul+1
  4539  09E2  224D               	fcall	PL24	;call to abstracted procedure
  4540  09E3  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4541  09E8  2A46               	ljmp	PL17	;call to abstracted procedure
  4542  09E9                     l8081:	
  4543  09E9  303F               	movlw	63
  4544  09EA  01B5               	clrf	?___ftmul
  4545  09EB  01B6               	clrf	?___ftmul+1
  4546  09EC  00B7               	movwf	?___ftmul+2
  4547  09ED  3003               	movlw	3
  4548  09EE  00F8               	movwf	?___bmul
  4549  09EF  0859               	movf	fround@prec,w
  4550  09F0  120A  158A  275B   	fcall	___bmul
      +       120A  158A         
  4551  09F5  3E01               	addlw	low (__npowers_-__stringbase)
  4552  09F6  0084               	movwf	4
  4553  09F7  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4554  09FC  00B8               	movwf	?___ftmul+3
  4555  09FD  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4556  0A02  00B9               	movwf	?___ftmul+4
  4557  0A03  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  4558  0A08  00BA               	movwf	?___ftmul+5
  4559  0A09  120A  158A  26EC   	fcall	___ftmul
      +       120A  158A         
  4560  0A0E  2A46               	ljmp	PL17	;call to abstracted procedure
  4561  0A0F                     __end_of_fround:	
  4562  0A0F                     __ptext832:	
  4563 ;; =============== function ___lbmod ends ============
  4564                           
  4565                           
  4566 ;; *************** function ___lbdiv *****************
  4567 ;; Defined at:
  4568 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbdiv.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  dividend        1    wreg     unsigned char 
  4571 ;;  divisor         1    7[COMMON] unsigned char 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  dividend        1    0[BANK0 ] unsigned char 
  4574 ;;  quotient        1    2[BANK0 ] unsigned char 
  4575 ;;  counter         1    1[BANK0 ] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      unsigned char 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 60/0
  4582 ;;		On exit  : 60/0
  4583 ;;		Unchanged: FFF9F/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4585 ;;      Params:         1       0       0       0       0
  4586 ;;      Locals:         0       3       0       0       0
  4587 ;;      Temps:          0       0       0       0       0
  4588 ;;      Totals:         1       3       0       0       0
  4589 ;;Total ram usage:        4 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    1
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_fround
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598  0A0F                     ___lbdiv:	
  4599                           
  4600                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4601                           ;___lbdiv@dividend stored from wreg
  4602  0A0F  00A0               	movwf	___lbdiv@dividend
  4603  0A10  01A2               	clrf	___lbdiv@quotient
  4604  0A11  0877               	movf	___lbdiv@divisor,w
  4605  0A12  1903               	btfsc	3,2
  4606  0A13  2A28               	goto	l7651
  4607  0A14  01A1               	clrf	___lbdiv@counter
  4608  0A15                     l7637:	
  4609  0A15  0AA1               	incf	___lbdiv@counter,f
  4610  0A16  1BF7               	btfsc	___lbdiv@divisor,7
  4611  0A17  2A1B               	goto	l3343
  4612  0A18  1003               	clrc
  4613  0A19  0DF7               	rlf	___lbdiv@divisor,f
  4614  0A1A  2A15               	goto	l7637
  4615  0A1B                     l3343:	
  4616  0A1B  1003               	clrc
  4617  0A1C  0DA2               	rlf	___lbdiv@quotient,f
  4618  0A1D  0877               	movf	___lbdiv@divisor,w
  4619  0A1E  0220               	subwf	___lbdiv@dividend,w
  4620  0A1F  1C03               	skipc
  4621  0A20  2A25               	goto	L19
  4622  0A21  0877               	movf	___lbdiv@divisor,w
  4623  0A22  02A0               	subwf	___lbdiv@dividend,f
  4624  0A23  1422               	bsf	___lbdiv@quotient,0
  4625  0A24  1003               	clrc
  4626  0A25                     L19:	
  4627  0A25  0CF7               	rrf	___lbdiv@divisor,f
  4628  0A26  0BA1               	decfsz	___lbdiv@counter,f
  4629  0A27  2A1B               	goto	l3343
  4630  0A28                     l7651:	
  4631  0A28  0822               	movf	___lbdiv@quotient,w
  4632  0A29  0008               	return
  4633  0A2A                     __end_of___lbdiv:	
  4634  0A2A                     __ptext831:	
  4635 ;; =============== function ___ftpack ends ============
  4636                           
  4637                           
  4638 ;; *************** function ___lbmod *****************
  4639 ;; Defined at:
  4640 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lbmod.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  dividend        1    wreg     unsigned char 
  4643 ;;  divisor         1    2[COMMON] unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  dividend        1    4[COMMON] unsigned char 
  4646 ;;  rem             1    6[COMMON] unsigned char 
  4647 ;;  counter         1    5[COMMON] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      unsigned char 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 60/0
  4654 ;;		On exit  : 60/0
  4655 ;;		Unchanged: FFF9F/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4657 ;;      Params:         1       0       0       0       0
  4658 ;;      Locals:         3       0       0       0       0
  4659 ;;      Temps:          1       0       0       0       0
  4660 ;;      Totals:         5       0       0       0       0
  4661 ;;Total ram usage:        5 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    1
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_fround
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670  0A2A                     ___lbmod:	
  4671                           
  4672                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4673                           ;___lbmod@dividend stored from wreg
  4674  0A2A  00F4               	movwf	___lbmod@dividend
  4675  0A2B  3008               	movlw	8
  4676  0A2C  00F5               	movwf	___lbmod@counter
  4677  0A2D  01F6               	clrf	___lbmod@rem
  4678  0A2E                     l6433:	
  4679  0A2E  0874               	movf	___lbmod@dividend,w
  4680  0A2F  00F3               	movwf	??___lbmod
  4681  0A30  3007               	movlw	7
  4682  0A31  1003               	clrc
  4683  0A32                     L18:	
  4684  0A32  0CF3               	rrf	??___lbmod,f
  4685  0A33  3EFF               	addlw	-1
  4686  0A34  1003               	clrc
  4687  0A35  1D03               	skipz
  4688  0A36  2A32               	goto	L18
  4689  0A37  0D76               	rlf	___lbmod@rem,w
  4690  0A38  0473               	iorwf	??___lbmod,w
  4691  0A39  00F6               	movwf	___lbmod@rem
  4692  0A3A  1003               	clrc
  4693  0A3B  0DF4               	rlf	___lbmod@dividend,f
  4694  0A3C  0872               	movf	___lbmod@divisor,w
  4695  0A3D  0276               	subwf	___lbmod@rem,w
  4696  0A3E  1C03               	skipc
  4697  0A3F  2A42               	goto	l6441
  4698  0A40  0872               	movf	___lbmod@divisor,w
  4699  0A41  02F6               	subwf	___lbmod@rem,f
  4700  0A42                     l6441:	
  4701  0A42  0BF5               	decfsz	___lbmod@counter,f
  4702  0A43  2A2E               	goto	l6433
  4703  0A44  0876               	movf	___lbmod@rem,w
  4704  0A45  0008               	return
  4705  0A46                     __end_of___lbmod:	
  4706  0A46                     PL17:	
  4707  0A46  0835               	movf	?___ftmul,w
  4708  0A47  00D0               	movwf	?_fround
  4709  0A48  0836               	movf	?___ftmul+1,w
  4710  0A49  00D1               	movwf	?_fround+1
  4711  0A4A  0837               	movf	?___ftmul+2,w
  4712  0A4B  00D2               	movwf	?_fround+2
  4713  0A4C  0008               	return
  4714  0A4D                     PL24:	
  4715  0A4D  00B7               	movwf	?___ftmul+2
  4716  0A4E  0856               	movf	_fround$4120,w
  4717  0A4F  00B8               	movwf	?___ftmul+3
  4718  0A50  0857               	movf	_fround$4120+1,w
  4719  0A51  00B9               	movwf	?___ftmul+4
  4720  0A52  0858               	movf	_fround$4120+2,w
  4721  0A53  00BA               	movwf	?___ftmul+5
  4722  0A54  0008               	return
  4723  0A55                     PL31:	
  4724  0A55  0835               	movf	?___ftmul,w
  4725  0A56  00D6               	movwf	_fround$4120
  4726  0A57  0836               	movf	?___ftmul+1,w
  4727  0A58  00D7               	movwf	_fround$4120+1
  4728  0A59  0837               	movf	?___ftmul+2,w
  4729  0A5A  00D8               	movwf	_fround$4120+2
  4730  0A5B  0008               	return
  4731                           
  4732                           	psect	text813
  4733  0A5C                     __ptext813:	
  4734 ;; =============== function _fround ends ============
  4735                           
  4736                           
  4737 ;; *************** function _lcd_gotoxy *****************
  4738 ;; Defined at:
  4739 ;;		line 162 in file "D:\TTVXL\Library\lcd(16).c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  col             1    wreg     unsigned char 
  4742 ;;  row             1    7[COMMON] unsigned char 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  col             1    8[COMMON] unsigned char 
  4745 ;;  address         1    9[COMMON] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;		None               void
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0, pclath, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 40/0
  4752 ;;		On exit  : 60/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4755 ;;      Params:         1       0       0       0       0
  4756 ;;      Locals:         2       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0
  4758 ;;      Totals:         3       0       0       0       0
  4759 ;;Total ram usage:        3 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; Hardware stack levels required when called:    2
  4762 ;; This function calls:
  4763 ;;		_lcd_put_byte
  4764 ;;		_lcd_busy
  4765 ;; This function is called by:
  4766 ;;		_main
  4767 ;;		_lcd_putc
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770  0A5C                     _lcd_gotoxy:	
  4771                           
  4772                           ; Regs used in _lcd_gotoxy: [wreg+status,2+status,0+pclath+cstack]
  4773                           ;lcd_gotoxy@col stored from wreg
  4774  0A5C  00F8               	movwf	lcd_gotoxy@col
  4775                           
  4776                           ;lcd(16).c: 163: unsigned char address;
  4777                           ;lcd(16).c: 165: if(row!=0)
  4778  0A5D  0877               	movf	lcd_gotoxy@row,w
  4779  0A5E  1903               	btfsc	3,2
  4780  0A5F  2A63               	goto	l8055
  4781                           
  4782                           ;lcd(16).c: 166: address=0x40;
  4783  0A60  3040               	movlw	64
  4784  0A61  00F9               	movwf	lcd_gotoxy@address
  4785  0A62  2A64               	goto	l8057
  4786  0A63                     l8055:	
  4787                           
  4788                           ;lcd(16).c: 167: else
  4789                           ;lcd(16).c: 168: address=0;
  4790  0A63  01F9               	clrf	lcd_gotoxy@address
  4791  0A64                     l8057:	
  4792                           
  4793                           ;lcd(16).c: 170: address += col;
  4794  0A64  0878               	movf	lcd_gotoxy@col,w
  4795  0A65  07F9               	addwf	lcd_gotoxy@address,f
  4796                           
  4797                           ;lcd(16).c: 171: lcd_put_byte(0,0x80|address);
  4798  0A66  0879               	movf	lcd_gotoxy@address,w
  4799  0A67  3880               	iorlw	128
  4800  0A68  00F2               	movwf	?_lcd_put_byte
  4801  0A69  3000               	movlw	0
  4802  0A6A  235E  120A  158A   	fcall	_lcd_put_byte
  4803  0A6D                     l8061:	
  4804                           ;lcd(16).c: 172: while(lcd_busy());
  4805                           
  4806  0A6D  23EE  120A  158A   	fcall	_lcd_busy
  4807  0A70  3800               	iorlw	0
  4808  0A71  1903               	btfsc	3,2
  4809  0A72  0008               	return
  4810  0A73  2A6D               	goto	l8061
  4811  0A74                     __end_of_lcd_gotoxy:	
  4812  0A74                     __ptext809:	
  4813 ;; =============== function _putch ends ============
  4814                           
  4815                           
  4816 ;; *************** function _lcd_putc *****************
  4817 ;; Defined at:
  4818 ;;		line 143 in file "D:\TTVXL\Library\lcd(16).c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  c               1    wreg     unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  c               1    0[BANK0 ] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;		None               void
  4825 ;; Registers used:
  4826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 60/0
  4829 ;;		On exit  : 60/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4832 ;;      Params:         0       0       0       0       0
  4833 ;;      Locals:         0       1       0       0       0
  4834 ;;      Temps:          0       0       0       0       0
  4835 ;;      Totals:         0       1       0       0       0
  4836 ;;Total ram usage:        1 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    3
  4839 ;; This function calls:
  4840 ;;		_lcd_put_byte
  4841 ;;		_lcd_busy
  4842 ;;		_lcd_gotoxy
  4843 ;;		_isprint
  4844 ;; This function is called by:
  4845 ;;		_putch
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848  0A74                     _lcd_putc:	
  4849                           
  4850                           ; Regs used in _lcd_putc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4851                           ;lcd_putc@c stored from wreg
  4852  0A74  00A0               	movwf	lcd_putc@c
  4853                           
  4854                           ;lcd(16).c: 144: switch(c){
  4855  0A75  2A9A               	goto	l8147
  4856  0A76                     l8133:	
  4857  0A76  3000               	movlw	0
  4858                           
  4859                           ;lcd(16).c: 146: lcd_put_byte(0, 1);
  4860  0A77  01F2               	clrf	?_lcd_put_byte
  4861  0A78  0AF2               	incf	?_lcd_put_byte,f
  4862  0A79  235E  120A  158A   	fcall	_lcd_put_byte
  4863  0A7C                     l8135:	
  4864                           ;lcd(16).c: 147: while(lcd_busy());
  4865                           
  4866  0A7C  23EE  120A  158A   	fcall	_lcd_busy
  4867  0A7F  3800               	iorlw	0
  4868  0A80  1903               	btfsc	3,2
  4869  0A81  0008               	return
  4870  0A82  2A7C               	goto	l8135
  4871  0A83                     l8137:	
  4872  0A83  3000               	movlw	0
  4873                           
  4874                           ;lcd(16).c: 150: lcd_gotoxy(0, 1);
  4875  0A84  01F7               	clrf	?_lcd_gotoxy
  4876  0A85  0AF7               	incf	?_lcd_gotoxy,f
  4877  0A86  2A5C               	ljmp	_lcd_gotoxy
  4878  0A87                     l8139:	
  4879                           ;lcd(16).c: 151: break;
  4880                           
  4881                           
  4882                           ;lcd(16).c: 153: if(isprint(c)){
  4883  0A87  0820               	movf	lcd_putc@c,w
  4884  0A88  2415  120A  158A   	fcall	_isprint
  4885  0A8B  1C03               	btfss	3,0
  4886  0A8C  0008               	return
  4887                           
  4888                           ;lcd(16).c: 154: lcd_put_byte(1, c);
  4889  0A8D  0820               	movf	lcd_putc@c,w
  4890  0A8E  00F2               	movwf	?_lcd_put_byte
  4891  0A8F  3001               	movlw	1
  4892  0A90  235E  120A  158A   	fcall	_lcd_put_byte
  4893  0A93                     l8143:	
  4894                           ;lcd(16).c: 155: while(lcd_busy());
  4895                           
  4896  0A93  23EE  120A  158A   	fcall	_lcd_busy
  4897  0A96  3800               	iorlw	0
  4898  0A97  1903               	btfsc	3,2
  4899  0A98  0008               	return
  4900  0A99  2A93               	goto	l8143
  4901  0A9A                     l8147:	
  4902  0A9A  0820               	movf	lcd_putc@c,w
  4903                           
  4904                           ; Switch size 1, requested type "space"
  4905                           ; Number of cases is 2, Range of values is 10 to 12
  4906                           ; switch strategies available:
  4907                           ; Name         Instructions Cycles
  4908                           ; simple_byte            7     4 (average)
  4909                           ; direct_byte           20    11 (fixed)
  4910                           ; jumptable            263     9 (fixed)
  4911                           ;	Chosen strategy is simple_byte
  4912  0A9B  3A0A               	xorlw	10	; case 10
  4913  0A9C  1903               	skipnz
  4914  0A9D  2A83               	goto	l8137
  4915  0A9E  3A06               	xorlw	6	; case 12
  4916  0A9F  1903               	skipnz
  4917  0AA0  2A76               	goto	l8133
  4918  0AA1  2A87               	goto	l8139
  4919  0AA2  0008               	return
  4920  0AA3                     __end_of_lcd_putc:	
  4921  0AA3                     __ptext814:	
  4922 ;; =============== function _lcd_gotoxy ends ============
  4923                           
  4924                           
  4925 ;; *************** function _lcd_init *****************
  4926 ;; Defined at:
  4927 ;;		line 5 in file "D:\TTVXL\Library\lcd(16).c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  i               1    0        unsigned char 
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0, pclath, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 17F/60
  4938 ;;		On exit  : 60/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4941 ;;      Params:         0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0
  4943 ;;      Temps:          3       0       0       0       0
  4944 ;;      Totals:         3       0       0       0       0
  4945 ;;Total ram usage:        3 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    2
  4948 ;; This function calls:
  4949 ;;		_lcd_put_byte
  4950 ;;		_lcd_busy
  4951 ;; This function is called by:
  4952 ;;		_main
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955  0AA3                     _lcd_init:	
  4956                           
  4957                           ;lcd(16).c: 6: unsigned char i;
  4958                           ;lcd(16).c: 7: TRISD3 = 0;
  4959                           
  4960                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  4961  0AA3  1303               	bcf	3,6	;RP1=0, select bank1
  4962  0AA4  1188               	bcf	8,3
  4963                           
  4964                           ;lcd(16).c: 8: TRISD1 = 0;
  4965  0AA5  1088               	bcf	8,1
  4966                           
  4967                           ;lcd(16).c: 9: TRISD2 = 0;
  4968  0AA6  1108               	bcf	8,2
  4969                           
  4970                           ;lcd(16).c: 10: TRISD4 = 0;
  4971  0AA7  1208               	bcf	8,4
  4972                           
  4973                           ;lcd(16).c: 11: TRISD5 = 0;
  4974  0AA8  1288               	bcf	8,5
  4975                           
  4976                           ;lcd(16).c: 12: TRISD6 = 0;
  4977  0AA9  1308               	bcf	8,6
  4978                           
  4979                           ;lcd(16).c: 13: TRISD7 = 0;
  4980  0AAA  1388               	bcf	8,7
  4981                           
  4982                           ;lcd(16).c: 14: RD3 = 0;
  4983  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  4984  0AAC  3003               	movlw	3
  4985  0AAD  1188               	bcf	8,3
  4986                           
  4987                           ;lcd(16).c: 15: RD1 = 0;
  4988  0AAE  1088               	bcf	8,1
  4989                           
  4990                           ;lcd(16).c: 16: RD2 = 0;
  4991  0AAF  1108               	bcf	8,2
  4992                           
  4993                           ;lcd(16).c: 18: _delay((unsigned long)((100)*(20000000/4000.0)));
  4994  0AB0  00F9               	movwf	??_lcd_init+2
  4995  0AB1  308A               	movlw	138
  4996  0AB2  00F8               	movwf	??_lcd_init+1
  4997  0AB3  3056               	movlw	86
  4998  0AB4  00F7               	movwf	??_lcd_init
  4999  0AB5                     u5737:	
  5000  0AB5  0BF7               	decfsz	??_lcd_init,f
  5001  0AB6  2AB5               	goto	u5737
  5002  0AB7  0BF8               	decfsz	??_lcd_init+1,f
  5003  0AB8  2AB5               	goto	u5737
  5004  0AB9  0BF9               	decfsz	??_lcd_init+2,f
  5005  0ABA  2AB5               	goto	u5737
  5006  0ABB  2ABC               	nop2
  5007                           
  5008                           ;lcd(16).c: 21: lcd_put_byte(0,0x30);
  5009  0ABC  3030               	movlw	48
  5010  0ABD  00F2               	movwf	?_lcd_put_byte
  5011  0ABE  3000               	movlw	0
  5012  0ABF  235E  120A  158A   	fcall	_lcd_put_byte
  5013                           
  5014                           ;lcd(16).c: 22: _delay((unsigned long)((50)*(20000000/4000.0)));
  5015  0AC2  3002               	movlw	2
  5016  0AC3  00F9               	movwf	??_lcd_init+2
  5017  0AC4  3045               	movlw	69
  5018  0AC5  00F8               	movwf	??_lcd_init+1
  5019  0AC6  30A9               	movlw	169
  5020  0AC7  00F7               	movwf	??_lcd_init
  5021  0AC8                     u5747:	
  5022  0AC8  0BF7               	decfsz	??_lcd_init,f
  5023  0AC9  2AC8               	goto	u5747
  5024  0ACA  0BF8               	decfsz	??_lcd_init+1,f
  5025  0ACB  2AC8               	goto	u5747
  5026  0ACC  0BF9               	decfsz	??_lcd_init+2,f
  5027  0ACD  2AC8               	goto	u5747
  5028  0ACE  2ACF               	nop2
  5029                           
  5030                           ;lcd(16).c: 23: lcd_put_byte(0,0x30);
  5031  0ACF  3030               	movlw	48
  5032  0AD0  00F2               	movwf	?_lcd_put_byte
  5033  0AD1  3000               	movlw	0
  5034  0AD2  235E  120A  158A   	fcall	_lcd_put_byte
  5035                           
  5036                           ;lcd(16).c: 24: _delay((unsigned long)((50)*(20000000/4000.0)));
  5037  0AD5  3002               	movlw	2
  5038  0AD6  00F9               	movwf	??_lcd_init+2
  5039  0AD7  3045               	movlw	69
  5040  0AD8  00F8               	movwf	??_lcd_init+1
  5041  0AD9  30A9               	movlw	169
  5042  0ADA  00F7               	movwf	??_lcd_init
  5043  0ADB                     u5757:	
  5044  0ADB  0BF7               	decfsz	??_lcd_init,f
  5045  0ADC  2ADB               	goto	u5757
  5046  0ADD  0BF8               	decfsz	??_lcd_init+1,f
  5047  0ADE  2ADB               	goto	u5757
  5048  0ADF  0BF9               	decfsz	??_lcd_init+2,f
  5049  0AE0  2ADB               	goto	u5757
  5050  0AE1  2AE2               	nop2
  5051                           
  5052                           ;lcd(16).c: 25: lcd_put_byte(0,0x32);
  5053  0AE2  3032               	movlw	50
  5054  0AE3  00F2               	movwf	?_lcd_put_byte
  5055  0AE4  3000               	movlw	0
  5056  0AE5  235E  120A  158A   	fcall	_lcd_put_byte
  5057                           
  5058                           ;lcd(16).c: 26: _delay((unsigned long)((100)*(20000000/4000.0)));
  5059  0AE8  3003               	movlw	3
  5060  0AE9  00F9               	movwf	??_lcd_init+2
  5061  0AEA  308A               	movlw	138
  5062  0AEB  00F8               	movwf	??_lcd_init+1
  5063  0AEC  3056               	movlw	86
  5064  0AED  00F7               	movwf	??_lcd_init
  5065  0AEE                     u5767:	
  5066  0AEE  0BF7               	decfsz	??_lcd_init,f
  5067  0AEF  2AEE               	goto	u5767
  5068  0AF0  0BF8               	decfsz	??_lcd_init+1,f
  5069  0AF1  2AEE               	goto	u5767
  5070  0AF2  0BF9               	decfsz	??_lcd_init+2,f
  5071  0AF3  2AEE               	goto	u5767
  5072  0AF4  2AF5               	nop2
  5073                           
  5074                           ;lcd(16).c: 27: _delay((unsigned long)((100)*(20000000/4000.0)));
  5075  0AF5  3003               	movlw	3
  5076  0AF6  00F9               	movwf	??_lcd_init+2
  5077  0AF7  308A               	movlw	138
  5078  0AF8  00F8               	movwf	??_lcd_init+1
  5079  0AF9  3056               	movlw	86
  5080  0AFA  00F7               	movwf	??_lcd_init
  5081  0AFB                     u5777:	
  5082  0AFB  0BF7               	decfsz	??_lcd_init,f
  5083  0AFC  2AFB               	goto	u5777
  5084  0AFD  0BF8               	decfsz	??_lcd_init+1,f
  5085  0AFE  2AFB               	goto	u5777
  5086  0AFF  0BF9               	decfsz	??_lcd_init+2,f
  5087  0B00  2AFB               	goto	u5777
  5088  0B01  2B02               	nop2
  5089                           
  5090                           ;lcd(16).c: 28: _delay((unsigned long)((100)*(20000000/4000.0)));
  5091  0B02  3003               	movlw	3
  5092  0B03  00F9               	movwf	??_lcd_init+2
  5093  0B04  308A               	movlw	138
  5094  0B05  00F8               	movwf	??_lcd_init+1
  5095  0B06  3056               	movlw	86
  5096  0B07  00F7               	movwf	??_lcd_init
  5097  0B08                     u5787:	
  5098  0B08  0BF7               	decfsz	??_lcd_init,f
  5099  0B09  2B08               	goto	u5787
  5100  0B0A  0BF8               	decfsz	??_lcd_init+1,f
  5101  0B0B  2B08               	goto	u5787
  5102  0B0C  0BF9               	decfsz	??_lcd_init+2,f
  5103  0B0D  2B08               	goto	u5787
  5104  0B0E  2B0F               	nop2
  5105  0B0F                     l8025:	
  5106                           ;lcd(16).c: 30: while(lcd_busy());
  5107                           
  5108  0B0F  23EE  120A  158A   	fcall	_lcd_busy
  5109  0B12  3800               	iorlw	0
  5110  0B13  1D03               	skipz
  5111  0B14  2B0F               	goto	l8025
  5112                           
  5113                           ;lcd(16).c: 31: lcd_put_byte(0,0b00101100 & 0b00111000);
  5114  0B15  3028               	movlw	40
  5115  0B16  00F2               	movwf	?_lcd_put_byte
  5116  0B17  3000               	movlw	0
  5117  0B18  235E  120A  158A   	fcall	_lcd_put_byte
  5118  0B1B                     l8029:	
  5119                           ;lcd(16).c: 32: while(lcd_busy());
  5120                           
  5121  0B1B  23EE  120A  158A   	fcall	_lcd_busy
  5122  0B1E  3800               	iorlw	0
  5123  0B1F  1D03               	skipz
  5124  0B20  2B1B               	goto	l8029
  5125                           
  5126                           ;lcd(16).c: 34: lcd_put_byte(0,0b00001011&0b00001101&0b00001110);
  5127  0B21  3008               	movlw	8
  5128  0B22  00F2               	movwf	?_lcd_put_byte
  5129  0B23  3000               	movlw	0
  5130  0B24  235E  120A  158A   	fcall	_lcd_put_byte
  5131  0B27                     l8033:	
  5132                           ;lcd(16).c: 35: while(lcd_busy());
  5133                           
  5134  0B27  23EE  120A  158A   	fcall	_lcd_busy
  5135  0B2A  3800               	iorlw	0
  5136  0B2B  1D03               	skipz
  5137  0B2C  2B27               	goto	l8033
  5138                           
  5139                           ;lcd(16).c: 36: lcd_put_byte(0,0b00001111&0b00001101&0b00001110);
  5140  0B2D  300C               	movlw	12
  5141  0B2E  00F2               	movwf	?_lcd_put_byte
  5142  0B2F  3000               	movlw	0
  5143  0B30  235E  120A  158A   	fcall	_lcd_put_byte
  5144  0B33                     l8037:	
  5145                           ;lcd(16).c: 37: while(lcd_busy());
  5146                           
  5147  0B33  23EE  120A  158A   	fcall	_lcd_busy
  5148  0B36  3800               	iorlw	0
  5149  0B37  1D03               	skipz
  5150  0B38  2B33               	goto	l8037
  5151  0B39  3000               	movlw	0
  5152                           
  5153                           ;lcd(16).c: 39: lcd_put_byte(0,0x01);
  5154  0B3A  01F2               	clrf	?_lcd_put_byte
  5155  0B3B  0AF2               	incf	?_lcd_put_byte,f
  5156  0B3C  235E  120A  158A   	fcall	_lcd_put_byte
  5157  0B3F                     l8041:	
  5158                           ;lcd(16).c: 40: while(lcd_busy());
  5159                           
  5160  0B3F  23EE  120A  158A   	fcall	_lcd_busy
  5161  0B42  3800               	iorlw	0
  5162  0B43  1D03               	skipz
  5163  0B44  2B3F               	goto	l8041
  5164                           
  5165                           ;lcd(16).c: 41: lcd_put_byte(0,0b00000100);
  5166  0B45  3004               	movlw	4
  5167  0B46  00F2               	movwf	?_lcd_put_byte
  5168  0B47  3000               	movlw	0
  5169  0B48  235E  120A  158A   	fcall	_lcd_put_byte
  5170  0B4B                     l8045:	
  5171                           ;lcd(16).c: 42: while(lcd_busy());
  5172                           
  5173  0B4B  23EE  120A  158A   	fcall	_lcd_busy
  5174  0B4E  3800               	iorlw	0
  5175  0B4F  1D03               	skipz
  5176  0B50  2B4B               	goto	l8045
  5177  0B51  3000               	movlw	0
  5178                           
  5179                           ;lcd(16).c: 43: lcd_put_byte(0,0x01);
  5180  0B52  01F2               	clrf	?_lcd_put_byte
  5181  0B53  0AF2               	incf	?_lcd_put_byte,f
  5182  0B54  235E  120A  158A   	fcall	_lcd_put_byte
  5183  0B57                     l8049:	
  5184                           ;lcd(16).c: 44: while(lcd_busy());
  5185                           
  5186  0B57  23EE  120A  158A   	fcall	_lcd_busy
  5187  0B5A  3800               	iorlw	0
  5188  0B5B  1903               	btfsc	3,2
  5189  0B5C  0008               	return
  5190  0B5D  2B57               	goto	l8049
  5191  0B5E                     __end_of_lcd_init:	
  5192  0B5E                     __ptext821:	
  5193 ;; =============== function _lcd_busy ends ============
  5194                           
  5195                           
  5196 ;; *************** function _lcd_put_byte *****************
  5197 ;; Defined at:
  5198 ;;		line 106 in file "D:\TTVXL\Library\lcd(16).c"
  5199 ;; Parameters:    Size  Location     Type
  5200 ;;  rs              1    wreg     unsigned char 
  5201 ;;  b               1    2[COMMON] unsigned char 
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;  rs              1    5[COMMON] unsigned char 
  5204 ;;  temp            1    6[COMMON] struct _BYTE_VAL
  5205 ;; Return value:  Size  Location     Type
  5206 ;;		None               void
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 60/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5214 ;;      Params:         1       0       0       0       0
  5215 ;;      Locals:         2       0       0       0       0
  5216 ;;      Temps:          2       0       0       0       0
  5217 ;;      Totals:         5       0       0       0       0
  5218 ;;Total ram usage:        5 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    1
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_lcd_init
  5225 ;;		_lcd_putc
  5226 ;;		_lcd_gotoxy
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229  0B5E                     _lcd_put_byte:	
  5230                           
  5231                           ; Regs used in _lcd_put_byte: [wreg+status,2+status,0]
  5232                           ;lcd_put_byte@rs stored from wreg
  5233  0B5E  00F5               	movwf	lcd_put_byte@rs
  5234                           
  5235                           ;lcd(16).c: 107: BYTE_VAL temp;
  5236                           ;lcd(16).c: 109: TRISD4 = 0;
  5237  0B5F  1683               	bsf	3,5	;RP0=1, select bank1
  5238  0B60  1303               	bcf	3,6	;RP1=0, select bank1
  5239  0B61  1208               	bcf	8,4
  5240                           
  5241                           ;lcd(16).c: 110: TRISD5 = 0;
  5242  0B62  1288               	bcf	8,5
  5243                           
  5244                           ;lcd(16).c: 111: TRISD6 = 0;
  5245  0B63  1308               	bcf	8,6
  5246                           
  5247                           ;lcd(16).c: 112: TRISD7 = 0;
  5248  0B64  1388               	bcf	8,7
  5249                           
  5250                           ;lcd(16).c: 114: RD1 = 0;
  5251  0B65  1283               	bcf	3,5	;RP0=0, select bank0
  5252  0B66  1088               	bcf	8,1
  5253                           
  5254                           ;lcd(16).c: 115: if(rs) RD1 = 1;
  5255  0B67  0875               	movf	lcd_put_byte@rs,w
  5256  0B68  1D03               	skipz
  5257  0B69  1488               	bsf	8,1
  5258                           
  5259                           ;lcd(16).c: 117: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5260  0B6A  3021               	movlw	33
  5261  0B6B  00F3               	movwf	??_lcd_put_byte
  5262  0B6C                     u5837:	
  5263  0B6C  0BF3               	decfsz	??_lcd_put_byte,f
  5264  0B6D  2B6C               	goto	u5837
  5265  0B6E  242A               	call	PL33	;select bank 0
  5266                           
  5267                           ;lcd(16).c: 118: RD2 = 0;
  5268  0B6F  3021               	movlw	33
  5269  0B70  1108               	bcf	8,2
  5270                           
  5271                           ;lcd(16).c: 119: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5272  0B71  00F3               	movwf	??_lcd_put_byte
  5273  0B72                     u5847:	
  5274  0B72  0BF3               	decfsz	??_lcd_put_byte,f
  5275  0B73  2B72               	goto	u5847
  5276  0B74  242A               	call	PL33	;select bank 0
  5277                           
  5278                           ;lcd(16).c: 120: RD3 = 0;
  5279  0B75  1188               	bcf	8,3
  5280                           
  5281                           ;lcd(16).c: 122: temp.Val = b;
  5282  0B76  0872               	movf	lcd_put_byte@b,w
  5283  0B77  00F6               	movwf	lcd_put_byte@temp
  5284                           
  5285                           ;lcd(16).c: 125: RD4 = temp.bits.b4;
  5286  0B78  0E76               	swapf	lcd_put_byte@temp,w
  5287  0B79  3901               	andlw	1
  5288  0B7A  00F3               	movwf	??_lcd_put_byte
  5289  0B7B  0C73               	rrf	??_lcd_put_byte,w
  5290  0B7C  1C03               	btfss	3,0
  5291  0B7D  2B81               	goto	u4470
  5292  0B7E  242A               	call	PL33	;select bank 0
  5293  0B7F  1608               	bsf	8,4
  5294  0B80  2B83               	goto	l7773
  5295  0B81                     u4470:	
  5296  0B81  242A               	call	PL33	;select bank 0
  5297  0B82  1208               	bcf	8,4
  5298  0B83                     l7773:	
  5299                           
  5300                           ;lcd(16).c: 126: RD5 = temp.bits.b5;
  5301  0B83  0E76               	swapf	lcd_put_byte@temp,w
  5302  0B84  00F3               	movwf	??_lcd_put_byte
  5303  0B85  0C73               	rrf	??_lcd_put_byte,w
  5304  0B86  3901               	andlw	1
  5305  0B87  00F4               	movwf	??_lcd_put_byte+1
  5306  0B88  0C74               	rrf	??_lcd_put_byte+1,w
  5307  0B89  1C03               	btfss	3,0
  5308  0B8A  2B8E               	goto	u4490
  5309  0B8B  242A               	call	PL33	;select bank 0
  5310  0B8C  1688               	bsf	8,5
  5311  0B8D  2B90               	goto	l7775
  5312  0B8E                     u4490:	
  5313  0B8E  242A               	call	PL33	;select bank 0
  5314  0B8F  1288               	bcf	8,5
  5315  0B90                     l7775:	
  5316                           
  5317                           ;lcd(16).c: 127: RD6 = temp.bits.b6;
  5318  0B90  0E76               	swapf	lcd_put_byte@temp,w
  5319  0B91  2423  120A  158A   	fcall	PL27	;call to abstracted procedure
  5320  0B94  1C03               	btfss	3,0
  5321  0B95  2B99               	goto	u4510
  5322  0B96  242A               	call	PL33	;select bank 0
  5323  0B97  1708               	bsf	8,6
  5324  0B98  2B9B               	goto	l7777
  5325  0B99                     u4510:	
  5326  0B99  242A               	call	PL33	;select bank 0
  5327  0B9A  1308               	bcf	8,6
  5328  0B9B                     l7777:	
  5329                           
  5330                           ;lcd(16).c: 128: RD7 = temp.bits.b7;
  5331  0B9B  0D76               	rlf	lcd_put_byte@temp,w
  5332  0B9C  0D76               	rlf	lcd_put_byte@temp,w
  5333  0B9D  3901               	andlw	1
  5334  0B9E  00F3               	movwf	??_lcd_put_byte
  5335  0B9F  0C73               	rrf	??_lcd_put_byte,w
  5336  0BA0  1C03               	btfss	3,0
  5337  0BA1  2BA5               	goto	u4530
  5338  0BA2  242A               	call	PL33	;select bank 0
  5339  0BA3  1788               	bsf	8,7
  5340  0BA4  2BA7               	goto	u4544
  5341  0BA5                     u4530:	
  5342  0BA5  242A               	call	PL33	;select bank 0
  5343  0BA6  1388               	bcf	8,7
  5344  0BA7                     u4544:	
  5345                           
  5346                           ;lcd(16).c: 129: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5347  0BA7  3021               	movlw	33
  5348  0BA8  00F3               	movwf	??_lcd_put_byte
  5349  0BA9                     u5857:	
  5350  0BA9  0BF3               	decfsz	??_lcd_put_byte,f
  5351  0BAA  2BA9               	goto	u5857
  5352  0BAB  242A               	call	PL33	;select bank 0
  5353                           
  5354                           ;lcd(16).c: 130: RD3 = 1;
  5355  0BAC  3021               	movlw	33
  5356  0BAD  1588               	bsf	8,3
  5357                           
  5358                           ;lcd(16).c: 131: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5359  0BAE  00F3               	movwf	??_lcd_put_byte
  5360  0BAF                     u5867:	
  5361  0BAF  0BF3               	decfsz	??_lcd_put_byte,f
  5362  0BB0  2BAF               	goto	u5867
  5363  0BB1  242A               	call	PL33	;select bank 0
  5364                           
  5365                           ;lcd(16).c: 132: RD3 = 0;
  5366  0BB2  1188               	bcf	8,3
  5367                           
  5368                           ;lcd(16).c: 134: RD4 = temp.bits.b0;
  5369  0BB3  0876               	movf	lcd_put_byte@temp,w
  5370  0BB4  3901               	andlw	1
  5371  0BB5  00F3               	movwf	??_lcd_put_byte
  5372  0BB6  0C73               	rrf	??_lcd_put_byte,w
  5373  0BB7  1C03               	btfss	3,0
  5374  0BB8  2BBC               	goto	u4550
  5375  0BB9  242A               	call	PL33	;select bank 0
  5376  0BBA  1608               	bsf	8,4
  5377  0BBB  2BBE               	goto	l7785
  5378  0BBC                     u4550:	
  5379  0BBC  242A               	call	PL33	;select bank 0
  5380  0BBD  1208               	bcf	8,4
  5381  0BBE                     l7785:	
  5382                           
  5383                           ;lcd(16).c: 135: RD5 = temp.bits.b1;
  5384  0BBE  0C76               	rrf	lcd_put_byte@temp,w
  5385  0BBF  3901               	andlw	1
  5386  0BC0  00F3               	movwf	??_lcd_put_byte
  5387  0BC1  0C73               	rrf	??_lcd_put_byte,w
  5388  0BC2  1C03               	btfss	3,0
  5389  0BC3  2BC7               	goto	u4570
  5390  0BC4  242A               	call	PL33	;select bank 0
  5391  0BC5  1688               	bsf	8,5
  5392  0BC6  2BC9               	goto	l7787
  5393  0BC7                     u4570:	
  5394  0BC7  242A               	call	PL33	;select bank 0
  5395  0BC8  1288               	bcf	8,5
  5396  0BC9                     l7787:	
  5397                           
  5398                           ;lcd(16).c: 136: RD6 = temp.bits.b2;
  5399  0BC9  0C76               	rrf	lcd_put_byte@temp,w
  5400  0BCA  00F3               	movwf	??_lcd_put_byte
  5401  0BCB  0C73               	rrf	??_lcd_put_byte,w
  5402  0BCC  3901               	andlw	1
  5403  0BCD  00F4               	movwf	??_lcd_put_byte+1
  5404  0BCE  0C74               	rrf	??_lcd_put_byte+1,w
  5405  0BCF  1C03               	btfss	3,0
  5406  0BD0  2BD4               	goto	u4590
  5407  0BD1  242A               	call	PL33	;select bank 0
  5408  0BD2  1708               	bsf	8,6
  5409  0BD3  2BD6               	goto	l7789
  5410  0BD4                     u4590:	
  5411  0BD4  242A               	call	PL33	;select bank 0
  5412  0BD5  1308               	bcf	8,6
  5413  0BD6                     l7789:	
  5414                           
  5415                           ;lcd(16).c: 137: RD7 = temp.bits.b3;
  5416  0BD6  0C76               	rrf	lcd_put_byte@temp,w
  5417  0BD7  2423  120A  158A   	fcall	PL27	;call to abstracted procedure
  5418  0BDA  1C03               	btfss	3,0
  5419  0BDB  2BDF               	goto	u4610
  5420  0BDC  242A               	call	PL33	;select bank 0
  5421  0BDD  1788               	bsf	8,7
  5422  0BDE  2BE1               	goto	u4624
  5423  0BDF                     u4610:	
  5424  0BDF  242A               	call	PL33	;select bank 0
  5425  0BE0  1388               	bcf	8,7
  5426  0BE1                     u4624:	
  5427                           
  5428                           ;lcd(16).c: 138: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5429  0BE1  3021               	movlw	33
  5430  0BE2  00F3               	movwf	??_lcd_put_byte
  5431  0BE3                     u5877:	
  5432  0BE3  0BF3               	decfsz	??_lcd_put_byte,f
  5433  0BE4  2BE3               	goto	u5877
  5434  0BE5  242A               	call	PL33	;select bank 0
  5435                           
  5436                           ;lcd(16).c: 139: RD3 = 1;
  5437  0BE6  3021               	movlw	33
  5438  0BE7  1588               	bsf	8,3
  5439                           
  5440                           ;lcd(16).c: 140: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5441  0BE8  00F3               	movwf	??_lcd_put_byte
  5442  0BE9                     u5887:	
  5443  0BE9  0BF3               	decfsz	??_lcd_put_byte,f
  5444  0BEA  2BE9               	goto	u5887
  5445  0BEB  242A               	call	PL33	;select bank 0
  5446                           
  5447                           ;lcd(16).c: 141: RD3 = 0;
  5448  0BEC  1188               	bcf	8,3
  5449  0BED  0008               	return
  5450  0BEE                     __end_of_lcd_put_byte:	
  5451  0BEE                     __ptext820:	
  5452 ;; =============== function ___ftadd ends ============
  5453                           
  5454                           
  5455 ;; *************** function _lcd_busy *****************
  5456 ;; Defined at:
  5457 ;;		line 47 in file "D:\TTVXL\Library\lcd(16).c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  busy            1    3[COMMON] unsigned char 
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      unsigned char 
  5464 ;; Registers used:
  5465 ;;		wreg
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 60/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5471 ;;      Params:         0       0       0       0       0
  5472 ;;      Locals:         1       0       0       0       0
  5473 ;;      Temps:          1       0       0       0       0
  5474 ;;      Totals:         2       0       0       0       0
  5475 ;;Total ram usage:        2 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    1
  5478 ;; This function calls:
  5479 ;;		Nothing
  5480 ;; This function is called by:
  5481 ;;		_lcd_init
  5482 ;;		_lcd_putc
  5483 ;;		_lcd_gotoxy
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486  0BEE                     _lcd_busy:	
  5487                           
  5488                           ;lcd(16).c: 48: unsigned char busy;
  5489                           ;lcd(16).c: 50: TRISD4 = 1;
  5490                           
  5491                           ; Regs used in _lcd_busy: [wreg]
  5492  0BEE  1683               	bsf	3,5	;RP0=1, select bank1
  5493  0BEF  1303               	bcf	3,6	;RP1=0, select bank1
  5494  0BF0  1608               	bsf	8,4
  5495                           
  5496                           ;lcd(16).c: 51: TRISD5 = 1;
  5497  0BF1  1688               	bsf	8,5
  5498                           
  5499                           ;lcd(16).c: 52: TRISD6 = 1;
  5500  0BF2  1708               	bsf	8,6
  5501                           
  5502                           ;lcd(16).c: 53: TRISD7 = 1;
  5503  0BF3  1788               	bsf	8,7
  5504                           
  5505                           ;lcd(16).c: 55: RD2 = 1;
  5506  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  5507  0BF5  3021               	movlw	33
  5508  0BF6  1508               	bsf	8,2
  5509                           
  5510                           ;lcd(16).c: 56: RD1 = 0;
  5511  0BF7  1088               	bcf	8,1
  5512                           
  5513                           ;lcd(16).c: 57: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5514  0BF8  00F2               	movwf	??_lcd_busy
  5515  0BF9                     u5797:	
  5516  0BF9  0BF2               	decfsz	??_lcd_busy,f
  5517  0BFA  2BF9               	goto	u5797
  5518  0BFB  242A               	call	PL33	;select bank 0
  5519                           
  5520                           ;lcd(16).c: 58: RD3 = 1;
  5521  0BFC  3021               	movlw	33
  5522  0BFD  1588               	bsf	8,3
  5523                           
  5524                           ;lcd(16).c: 59: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5525  0BFE  00F2               	movwf	??_lcd_busy
  5526  0BFF                     u5807:	
  5527  0BFF  0BF2               	decfsz	??_lcd_busy,f
  5528  0C00  2BFF               	goto	u5807
  5529                           
  5530                           ;lcd(16).c: 61: busy = RD7;
  5531  0C01  3000               	movlw	0
  5532  0C02  242A               	call	PL33	;select bank 0
  5533  0C03  1B88               	btfsc	8,7
  5534  0C04  3001               	movlw	1
  5535  0C05  00F3               	movwf	lcd_busy@busy
  5536  0C06  3021               	movlw	33
  5537                           
  5538                           ;lcd(16).c: 63: RD3 = 0;
  5539  0C07  1188               	bcf	8,3
  5540                           
  5541                           ;lcd(16).c: 64: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5542  0C08  00F2               	movwf	??_lcd_busy
  5543  0C09                     u5817:	
  5544  0C09  0BF2               	decfsz	??_lcd_busy,f
  5545  0C0A  2C09               	goto	u5817
  5546  0C0B  242A               	call	PL33	;select bank 0
  5547                           
  5548                           ;lcd(16).c: 65: RD3 = 1;
  5549  0C0C  3021               	movlw	33
  5550  0C0D  1588               	bsf	8,3
  5551                           
  5552                           ;lcd(16).c: 66: _delay((unsigned long)((20)*(20000000/4000000.0)));
  5553  0C0E  00F2               	movwf	??_lcd_busy
  5554  0C0F                     u5827:	
  5555  0C0F  0BF2               	decfsz	??_lcd_busy,f
  5556  0C10  2C0F               	goto	u5827
  5557  0C11  242A               	call	PL33	;select bank 0
  5558                           
  5559                           ;lcd(16).c: 67: RD3 = 0;
  5560  0C12  1188               	bcf	8,3
  5561                           
  5562                           ;lcd(16).c: 70: return busy;
  5563  0C13  0873               	movf	lcd_busy@busy,w
  5564  0C14  0008               	return
  5565  0C15                     __end_of_lcd_busy:	
  5566  0C15                     __ptext838:	
  5567 ;; =============== function _isdigit ends ============
  5568                           
  5569                           
  5570 ;; *************** function _isprint *****************
  5571 ;; Defined at:
  5572 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\isprint.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  c               1    wreg     unsigned char 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  c               1    3[COMMON] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;		None               void
  5579 ;; Registers used:
  5580 ;;		wreg, status,2, status,0
  5581 ;; Tracked objects:
  5582 ;;		On entry : 60/0
  5583 ;;		On exit  : 60/0
  5584 ;;		Unchanged: FFF9F/0
  5585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5586 ;;      Params:         0       0       0       0       0
  5587 ;;      Locals:         2       0       0       0       0
  5588 ;;      Temps:          0       0       0       0       0
  5589 ;;      Totals:         2       0       0       0       0
  5590 ;;Total ram usage:        2 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_lcd_putc
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599  0C15                     _isprint:	
  5600                           
  5601                           ; Regs used in _isprint: [wreg+status,2+status,0]
  5602                           ;isprint@c stored from wreg
  5603  0C15  00F3               	movwf	isprint@c
  5604  0C16  307F               	movlw	127
  5605  0C17  01F2               	clrf	_isprint$3684
  5606  0C18  0273               	subwf	isprint@c,w
  5607  0C19  1803               	skipnc
  5608  0C1A  2C21               	goto	l7579
  5609  0C1B  3020               	movlw	32
  5610  0C1C  0273               	subwf	isprint@c,w
  5611  0C1D  1C03               	skipc
  5612  0C1E  2C21               	goto	l7579
  5613  0C1F  01F2               	clrf	_isprint$3684
  5614  0C20  0AF2               	incf	_isprint$3684,f
  5615  0C21                     l7579:	
  5616  0C21  0C72               	rrf	_isprint$3684,w
  5617  0C22  0008               	return
  5618  0C23                     __end_of_isprint:	
  5619  0C23                     PL27:	
  5620  0C23  00F3               	movwf	??_lcd_put_byte
  5621  0C24  0CF3               	rrf	??_lcd_put_byte,f
  5622  0C25  0C73               	rrf	??_lcd_put_byte,w
  5623  0C26  3901               	andlw	1
  5624  0C27  00F4               	movwf	??_lcd_put_byte+1
  5625  0C28  0C74               	rrf	??_lcd_put_byte+1,w
  5626  0C29  0008               	return
  5627  0C2A                     PL33:	
  5628  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  5629  0C2B  1303               	bcf	3,6	;RP1=0, select bank0
  5630  0C2C  0008               	return
  5631                           
  5632                           	psect	text822
  5633  0C2D                     __ptext822:	
  5634 ;; =============== function _lcd_put_byte ends ============
  5635                           
  5636                           
  5637 ;; *************** function _pwm_10bit *****************
  5638 ;; Defined at:
  5639 ;;		line 87 in file "D:\TTVXL\Project TTVXL\BT01week14ttvxl\BT01week14ttvxl.c"
  5640 ;; Parameters:    Size  Location     Type
  5641 ;;  pwm             2    8[BANK0 ] int 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;		None
  5644 ;; Return value:  Size  Location     Type
  5645 ;;		None               void
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0, pclath, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 60/0
  5650 ;;		On exit  : 60/0
  5651 ;;		Unchanged: FFF9F/0
  5652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5653 ;;      Params:         0       2       0       0       0
  5654 ;;      Locals:         0       0       0       0       0
  5655 ;;      Temps:          0       0       0       0       0
  5656 ;;      Totals:         0       2       0       0       0
  5657 ;;Total ram usage:        2 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    2
  5660 ;; This function calls:
  5661 ;;		___awdiv
  5662 ;; This function is called by:
  5663 ;;		_main
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666  0C2D                     _pwm_10bit:	
  5667                           
  5668                           ;BT01week14ttvxl.c: 88: CCPR1L=pwm/4;
  5669                           
  5670                           ; Regs used in _pwm_10bit: [wreg+status,2+status,0+pclath+cstack]
  5671  0C2D  3004               	movlw	4
  5672  0C2E  00A0               	movwf	?___awdiv
  5673  0C2F  01A1               	clrf	?___awdiv+1
  5674  0C30  0829               	movf	pwm_10bit@pwm+1,w
  5675  0C31  00A3               	movwf	?___awdiv+3
  5676  0C32  0828               	movf	pwm_10bit@pwm,w
  5677  0C33  00A2               	movwf	?___awdiv+2
  5678  0C34  266A               	fcall	___awdiv
  5679  0C35  0820               	movf	?___awdiv,w
  5680  0C36  0095               	movwf	21	;volatile
  5681                           
  5682                           ;BT01week14ttvxl.c: 89: DC1B1=0;DC1B0=0;
  5683  0C37  1297               	bcf	23,5
  5684  0C38  1217               	bcf	23,4
  5685                           
  5686                           ;BT01week14ttvxl.c: 90: if ((pwm & 2)==1) DC1B1=1;
  5687  0C39  0828               	movf	pwm_10bit@pwm,w
  5688  0C3A  3902               	andlw	2
  5689  0C3B  3A01               	xorlw	1
  5690  0C3C  1903               	btfsc	3,2
  5691  0C3D  1697               	bsf	23,5
  5692                           
  5693                           ;BT01week14ttvxl.c: 91: if ((pwm & 1)==1) DC1B0=1;
  5694  0C3E  1828               	btfsc	pwm_10bit@pwm,0
  5695  0C3F  1617               	bsf	23,4
  5696  0C40  0008               	return
  5697  0C41                     __end_of_pwm_10bit:	
  5698  0C41                     __ptext816:	
  5699 ;; =============== function ___lltoft ends ============
  5700                           
  5701                           
  5702 ;; *************** function ___altoft *****************
  5703 ;; Defined at:
  5704 ;;		line 43 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\altoft.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  c               4    0[BANK0 ] long 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;  sign            1    5[BANK0 ] unsigned char 
  5709 ;;  exp             1    4[BANK0 ] unsigned char 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;                  3    0[BANK0 ] float 
  5712 ;; Registers used:
  5713 ;;		wreg, status,2, status,0, pclath, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 60/0
  5716 ;;		On exit  : 60/0
  5717 ;;		Unchanged: FFF9F/0
  5718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5719 ;;      Params:         0       4       0       0       0
  5720 ;;      Locals:         0       2       0       0       0
  5721 ;;      Temps:          0       0       0       0       0
  5722 ;;      Totals:         0       6       0       0       0
  5723 ;;Total ram usage:        6 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:    2
  5726 ;; This function calls:
  5727 ;;		___ftpack
  5728 ;; This function is called by:
  5729 ;;		_main
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732  0C41                     ___altoft:	
  5733  0C41  308E               	movlw	142
  5734                           
  5735                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  5736  0C42  01A5               	clrf	___altoft@sign
  5737  0C43  00A4               	movwf	___altoft@exp
  5738  0C44  1FA3               	btfss	___altoft@c+3,7
  5739  0C45  2C53               	goto	l7997
  5740  0C46  09A0               	comf	___altoft@c,f
  5741  0C47  09A1               	comf	___altoft@c+1,f
  5742  0C48  09A2               	comf	___altoft@c+2,f
  5743  0C49  09A3               	comf	___altoft@c+3,f
  5744  0C4A  0AA0               	incf	___altoft@c,f
  5745  0C4B  1903               	skipnz
  5746  0C4C  0AA1               	incf	___altoft@c+1,f
  5747  0C4D  1903               	skipnz
  5748  0C4E  0AA2               	incf	___altoft@c+2,f
  5749  0C4F  1903               	skipnz
  5750  0C50  0AA3               	incf	___altoft@c+3,f
  5751  0C51  01A5               	clrf	___altoft@sign
  5752  0C52  0AA5               	incf	___altoft@sign,f
  5753  0C53                     l7997:	
  5754  0C53  30FF               	movlw	255
  5755  0C54  0523               	andwf	___altoft@c+3,w
  5756  0C55  1903               	btfsc	3,2
  5757  0C56  2C5E               	goto	l7999
  5758  0C57  1003               	clrc
  5759  0C58  0CA3               	rrf	___altoft@c+3,f
  5760  0C59  0CA2               	rrf	___altoft@c+2,f
  5761  0C5A  0CA1               	rrf	___altoft@c+1,f
  5762  0C5B  0CA0               	rrf	___altoft@c,f
  5763  0C5C  0AA4               	incf	___altoft@exp,f
  5764  0C5D  2C53               	goto	l7997
  5765  0C5E                     l7999:	
  5766  0C5E  0820               	movf	___altoft@c,w
  5767  0C5F  00F2               	movwf	?___ftpack
  5768  0C60  0821               	movf	___altoft@c+1,w
  5769  0C61  00F3               	movwf	?___ftpack+1
  5770  0C62  0822               	movf	___altoft@c+2,w
  5771  0C63  00F4               	movwf	?___ftpack+2
  5772  0C64  0824               	movf	___altoft@exp,w
  5773  0C65  00F5               	movwf	?___ftpack+3
  5774  0C66  0825               	movf	___altoft@sign,w
  5775  0C67  00F6               	movwf	?___ftpack+4
  5776  0C68  2769               	fcall	___ftpack
  5777  0C69  0872               	movf	?___ftpack,w
  5778  0C6A  00A0               	movwf	?___altoft
  5779  0C6B  0873               	movf	?___ftpack+1,w
  5780  0C6C  00A1               	movwf	?___altoft+1
  5781  0C6D  0874               	movf	?___ftpack+2,w
  5782  0C6E  00A2               	movwf	?___altoft+2
  5783  0C6F  0008               	return
  5784  0C70                     __end_of___altoft:	
  5785  0C70                     __ptext818:	
  5786 ;; =============== function ___ftmul ends ============
  5787                           
  5788                           
  5789 ;; *************** function ___ftdiv *****************
  5790 ;; Defined at:
  5791 ;;		line 50 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftdiv.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  f2              3    6[BANK0 ] float 
  5794 ;;  f1              3    9[BANK0 ] float 
  5795 ;; Auto vars:     Size  Location     Type
  5796 ;;  f3              3   16[BANK0 ] float 
  5797 ;;  sign            1   20[BANK0 ] unsigned char 
  5798 ;;  exp             1   19[BANK0 ] unsigned char 
  5799 ;;  cntr            1   15[BANK0 ] unsigned char 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  3    6[BANK0 ] float 
  5802 ;; Registers used:
  5803 ;;		wreg, status,2, status,0, pclath, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 60/0
  5806 ;;		On exit  : 60/0
  5807 ;;		Unchanged: FFF9F/0
  5808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5809 ;;      Params:         0       6       0       0       0
  5810 ;;      Locals:         0       6       0       0       0
  5811 ;;      Temps:          0       3       0       0       0
  5812 ;;      Totals:         0      15       0       0       0
  5813 ;;Total ram usage:       15 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:    2
  5816 ;; This function calls:
  5817 ;;		___ftpack
  5818 ;; This function is called by:
  5819 ;;		_main
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822  0C70                     ___ftdiv:	
  5823                           
  5824                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  5825  0C70  0829               	movf	___ftdiv@f1,w
  5826  0C71  00AC               	movwf	??___ftdiv
  5827  0C72  082A               	movf	___ftdiv@f1+1,w
  5828  0C73  00AD               	movwf	??___ftdiv+1
  5829  0C74  082B               	movf	___ftdiv@f1+2,w
  5830  0C75  00AE               	movwf	??___ftdiv+2
  5831  0C76  1003               	clrc
  5832  0C77  0D2D               	rlf	??___ftdiv+1,w
  5833  0C78  0D2E               	rlf	??___ftdiv+2,w
  5834  0C79  00B3               	movwf	___ftdiv@exp
  5835  0C7A  08B3               	movf	___ftdiv@exp,f
  5836  0C7B  1D03               	skipz
  5837  0C7C  2C81               	goto	l7893
  5838  0C7D  01A6               	clrf	?___ftdiv
  5839  0C7E  01A7               	clrf	?___ftdiv+1
  5840  0C7F  01A8               	clrf	?___ftdiv+2
  5841  0C80  0008               	return
  5842  0C81                     l7893:	
  5843  0C81  0826               	movf	___ftdiv@f2,w
  5844  0C82  00AC               	movwf	??___ftdiv
  5845  0C83  0827               	movf	___ftdiv@f2+1,w
  5846  0C84  00AD               	movwf	??___ftdiv+1
  5847  0C85  0828               	movf	___ftdiv@f2+2,w
  5848  0C86  00AE               	movwf	??___ftdiv+2
  5849  0C87  1003               	clrc
  5850  0C88  0D2D               	rlf	??___ftdiv+1,w
  5851  0C89  0D2E               	rlf	??___ftdiv+2,w
  5852  0C8A  00B4               	movwf	___ftdiv@sign
  5853  0C8B  08B4               	movf	___ftdiv@sign,f
  5854  0C8C  1D03               	skipz
  5855  0C8D  2C92               	goto	l3403
  5856  0C8E  01A6               	clrf	?___ftdiv
  5857  0C8F  01A7               	clrf	?___ftdiv+1
  5858  0C90  01A8               	clrf	?___ftdiv+2
  5859  0C91  0008               	return
  5860  0C92                     l3403:	
  5861  0C92  3089               	movlw	137
  5862  0C93  01B0               	clrf	___ftdiv@f3
  5863  0C94  01B1               	clrf	___ftdiv@f3+1
  5864  0C95  01B2               	clrf	___ftdiv@f3+2
  5865  0C96  0734               	addwf	___ftdiv@sign,w
  5866  0C97  00AC               	movwf	??___ftdiv
  5867  0C98  02B3               	subwf	___ftdiv@exp,f
  5868  0C99  082B               	movf	___ftdiv@f1+2,w
  5869  0C9A  00B4               	movwf	___ftdiv@sign
  5870  0C9B  0828               	movf	___ftdiv@f2+2,w
  5871  0C9C  06B4               	xorwf	___ftdiv@sign,f
  5872  0C9D  3080               	movlw	128
  5873  0C9E  05B4               	andwf	___ftdiv@sign,f
  5874  0C9F  3018               	movlw	24
  5875  0CA0  17AA               	bsf	___ftdiv@f1+1,7
  5876  0CA1  01AB               	clrf	___ftdiv@f1+2
  5877  0CA2  17A7               	bsf	___ftdiv@f2+1,7
  5878  0CA3  01A8               	clrf	___ftdiv@f2+2
  5879  0CA4  00AF               	movwf	___ftdiv@cntr
  5880  0CA5                     l7917:	
  5881  0CA5  1003               	clrc
  5882  0CA6  0DB0               	rlf	___ftdiv@f3,f
  5883  0CA7  0DB1               	rlf	___ftdiv@f3+1,f
  5884  0CA8  0DB2               	rlf	___ftdiv@f3+2,f
  5885  0CA9  0828               	movf	___ftdiv@f2+2,w
  5886  0CAA  022B               	subwf	___ftdiv@f1+2,w
  5887  0CAB  1D03               	skipz
  5888  0CAC  2CB3               	goto	u4855
  5889  0CAD  0827               	movf	___ftdiv@f2+1,w
  5890  0CAE  022A               	subwf	___ftdiv@f1+1,w
  5891  0CAF  1D03               	skipz
  5892  0CB0  2CB3               	goto	u4855
  5893  0CB1  0826               	movf	___ftdiv@f2,w
  5894  0CB2  0229               	subwf	___ftdiv@f1,w
  5895  0CB3                     u4855:	
  5896  0CB3  1C03               	skipc
  5897  0CB4  2CC1               	goto	L7
  5898  0CB5  0826               	movf	___ftdiv@f2,w
  5899  0CB6  02A9               	subwf	___ftdiv@f1,f
  5900  0CB7  0827               	movf	___ftdiv@f2+1,w
  5901  0CB8  1C03               	skipc
  5902  0CB9  0F27               	incfsz	___ftdiv@f2+1,w
  5903  0CBA  02AA               	subwf	___ftdiv@f1+1,f
  5904  0CBB  0828               	movf	___ftdiv@f2+2,w
  5905  0CBC  1C03               	skipc
  5906  0CBD  0A28               	incf	___ftdiv@f2+2,w
  5907  0CBE  02AB               	subwf	___ftdiv@f1+2,f
  5908  0CBF  1430               	bsf	___ftdiv@f3,0
  5909  0CC0  1003               	clrc
  5910  0CC1                     L7:	
  5911  0CC1  0DA9               	rlf	___ftdiv@f1,f
  5912  0CC2  0DAA               	rlf	___ftdiv@f1+1,f
  5913  0CC3  0DAB               	rlf	___ftdiv@f1+2,f
  5914  0CC4  0BAF               	decfsz	___ftdiv@cntr,f
  5915  0CC5  2CA5               	goto	l7917
  5916  0CC6  0830               	movf	___ftdiv@f3,w
  5917  0CC7  00F2               	movwf	?___ftpack
  5918  0CC8  0831               	movf	___ftdiv@f3+1,w
  5919  0CC9  00F3               	movwf	?___ftpack+1
  5920  0CCA  0832               	movf	___ftdiv@f3+2,w
  5921  0CCB  00F4               	movwf	?___ftpack+2
  5922  0CCC  0833               	movf	___ftdiv@exp,w
  5923  0CCD  00F5               	movwf	?___ftpack+3
  5924  0CCE  0834               	movf	___ftdiv@sign,w
  5925  0CCF  00F6               	movwf	?___ftpack+4
  5926  0CD0  2769               	fcall	___ftpack
  5927  0CD1  0872               	movf	?___ftpack,w
  5928  0CD2  00A6               	movwf	?___ftdiv
  5929  0CD3  0873               	movf	?___ftpack+1,w
  5930  0CD4  00A7               	movwf	?___ftdiv+1
  5931  0CD5  0874               	movf	?___ftpack+2,w
  5932  0CD6  00A8               	movwf	?___ftdiv+2
  5933  0CD7  0008               	return
  5934  0CD8                     __end_of___ftdiv:	
  5935  0CD8                     __ptext811:	
  5936 ;; =============== function ___ftsub ends ============
  5937                           
  5938                           
  5939 ;; *************** function _scale *****************
  5940 ;; Defined at:
  5941 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\lib\doprnt.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  scl             1    wreg     char 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  scl             1   46[BANK0 ] char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  3   36[BANK0 ] char 
  5948 ;; Registers used:
  5949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 60/20
  5952 ;;		On exit  : 60/0
  5953 ;;		Unchanged: FFF9F/0
  5954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5955 ;;      Params:         0       3       0       0       0
  5956 ;;      Locals:         0       4       0       0       0
  5957 ;;      Temps:          0       4       0       0       0
  5958 ;;      Totals:         0      11       0       0       0
  5959 ;;Total ram usage:       11 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    3
  5962 ;; This function calls:
  5963 ;;		___awmod
  5964 ;;		___awdiv
  5965 ;;		___ftmul
  5966 ;;		___bmul
  5967 ;; This function is called by:
  5968 ;;		_printf
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971  0CD8                     _scale:	
  5972                           
  5973                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5974                           ;scale@scl stored from wreg
  5975  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  5976  0CD9  00CE               	movwf	scale@scl
  5977  0CDA  1FCE               	btfss	scale@scl,7
  5978  0CDB  2DA4               	goto	l8107
  5979  0CDC  09CE               	comf	scale@scl,f
  5980  0CDD  0ACE               	incf	scale@scl,f
  5981  0CDE  084E               	movf	scale@scl,w
  5982  0CDF  3A80               	xorlw	128
  5983  0CE0  3E12               	addlw	-238
  5984  0CE1  1C03               	skipc
  5985  0CE2  2D48               	goto	l8097
  5986  0CE3  300A               	movlw	10
  5987  0CE4  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  5988  0CE7  26AF  120A  158A   	fcall	___awmod
  5989  0CEA  0873               	movf	?___awmod+1,w
  5990  0CEB  00A3               	movwf	?___awdiv+3
  5991  0CEC  0872               	movf	?___awmod,w
  5992  0CED  00A2               	movwf	?___awdiv+2
  5993  0CEE  266A  120A  158A   	fcall	___awdiv
  5994  0CF1  27E8               	fcall	PL23	;call to abstracted procedure
  5995  0CF2  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5996  0CF3  0084               	movwf	4
  5997  0CF4  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  5998  0CF9  00B5               	movwf	?___ftmul
  5999  0CFA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6000  0CFF  00B6               	movwf	?___ftmul+1
  6001  0D00  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6002  0D05  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  6003  0D08  1BA2               	btfsc	?___awdiv+2,7
  6004  0D09  03A3               	decf	?___awdiv+3,f
  6005  0D0A  266A  120A  158A   	fcall	___awdiv
  6006  0D0D  27AF               	fcall	PL9	;call to abstracted procedure
  6007  0D0E  3E37               	addlw	low ((__npowers_-__stringbase+54))
  6008  0D0F  0084               	movwf	4
  6009  0D10  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6010  0D15  00B8               	movwf	?___ftmul+3
  6011  0D16  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6012  0D1B  00B9               	movwf	?___ftmul+4
  6013  0D1C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6014  0D21  00BA               	movwf	?___ftmul+5
  6015  0D22  26EC  120A  158A   	fcall	___ftmul
  6016  0D25  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  6017  0D28  1BF4               	btfsc	?___awmod+2,7
  6018  0D29  03F5               	decf	?___awmod+3,f
  6019  0D2A  26AF  120A  158A   	fcall	___awmod
  6020  0D2D  27A7               	fcall	PL8	;call to abstracted procedure
  6021  0D2E  3E01               	addlw	low (__npowers_-__stringbase)
  6022  0D2F  0084               	movwf	4
  6023  0D30  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6024  0D35  00B5               	movwf	?___ftmul
  6025  0D36  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6026  0D3B  00B6               	movwf	?___ftmul+1
  6027  0D3C  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6028  0D41  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  6029  0D44  26EC  120A  158A   	fcall	___ftmul
  6030  0D47  2FC4               	ljmp	PL11	;call to abstracted procedure
  6031  0D48                     l8097:	
  6032  0D48  084E               	movf	scale@scl,w
  6033  0D49  3A80               	xorlw	128
  6034  0D4A  3E75               	addlw	-139
  6035  0D4B  1C03               	skipc
  6036  0D4C  2D8D               	goto	l8103
  6037  0D4D  300A               	movlw	10
  6038  0D4E  00F2               	movwf	?___awmod
  6039  0D4F  01F3               	clrf	?___awmod+1
  6040  0D50  084E               	movf	scale@scl,w
  6041  0D51  00F4               	movwf	?___awmod+2
  6042  0D52  01F5               	clrf	?___awmod+3
  6043  0D53  1BF4               	btfsc	?___awmod+2,7
  6044  0D54  03F5               	decf	?___awmod+3,f
  6045  0D55  26AF  120A  158A   	fcall	___awmod
  6046  0D58  27A7               	fcall	PL8	;call to abstracted procedure
  6047  0D59  3E01               	addlw	low (__npowers_-__stringbase)
  6048  0D5A  0084               	movwf	4
  6049  0D5B  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6050  0D60  00B5               	movwf	?___ftmul
  6051  0D61  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6052  0D66  00B6               	movwf	?___ftmul+1
  6053  0D67  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6054  0D6C  27E0  120A  158A   	fcall	PL22	;call to abstracted procedure
  6055  0D6F  1BA2               	btfsc	?___awdiv+2,7
  6056  0D70  03A3               	decf	?___awdiv+3,f
  6057  0D71  266A  120A  158A   	fcall	___awdiv
  6058  0D74  27AF               	fcall	PL9	;call to abstracted procedure
  6059  0D75  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  6060  0D76  0084               	movwf	4
  6061  0D77  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6062  0D7C  00B8               	movwf	?___ftmul+3
  6063  0D7D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6064  0D82  00B9               	movwf	?___ftmul+4
  6065  0D83  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6066  0D88  00BA               	movwf	?___ftmul+5
  6067  0D89  26EC  120A  158A   	fcall	___ftmul
  6068  0D8C  2FC4               	ljmp	PL11	;call to abstracted procedure
  6069  0D8D                     l8103:	
  6070  0D8D  3003               	movlw	3
  6071  0D8E  00F8               	movwf	?___bmul
  6072  0D8F  084E               	movf	scale@scl,w
  6073  0D90  275B               	fcall	___bmul
  6074  0D91  3E01               	addlw	low (__npowers_-__stringbase)
  6075  0D92  0084               	movwf	4
  6076  0D93  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6077  0D98  00C4               	movwf	?_scale
  6078  0D99  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6079  0D9E  00C5               	movwf	?_scale+1
  6080  0D9F  160A  118A  2000   	fcall	stringdir
  6081  0DA2  00C6               	movwf	?_scale+2
  6082  0DA3  0008               	return
  6083  0DA4                     l8107:	
  6084  0DA4  084E               	movf	scale@scl,w
  6085  0DA5  3A80               	xorlw	128
  6086  0DA6  3E12               	addlw	-238
  6087  0DA7  1C03               	skipc
  6088  0DA8  2E0E               	goto	l8115
  6089  0DA9  300A               	movlw	10
  6090  0DAA  27CB  120A  158A   	fcall	PL15	;call to abstracted procedure
  6091  0DAD  26AF  120A  158A   	fcall	___awmod
  6092  0DB0  0873               	movf	?___awmod+1,w
  6093  0DB1  00A3               	movwf	?___awdiv+3
  6094  0DB2  0872               	movf	?___awmod,w
  6095  0DB3  00A2               	movwf	?___awdiv+2
  6096  0DB4  266A  120A  158A   	fcall	___awdiv
  6097  0DB7  27E8               	fcall	PL23	;call to abstracted procedure
  6098  0DB8  3E43               	addlw	low ((__powers_-__stringbase+27))
  6099  0DB9  0084               	movwf	4
  6100  0DBA  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6101  0DBF  00B5               	movwf	?___ftmul
  6102  0DC0  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6103  0DC5  00B6               	movwf	?___ftmul+1
  6104  0DC6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6105  0DCB  27F0  120A  158A   	fcall	PL25	;call to abstracted procedure
  6106  0DCE  1BA2               	btfsc	?___awdiv+2,7
  6107  0DCF  03A3               	decf	?___awdiv+3,f
  6108  0DD0  266A  120A  158A   	fcall	___awdiv
  6109  0DD3  27AF               	fcall	PL9	;call to abstracted procedure
  6110  0DD4  3E5E               	addlw	low ((__powers_-__stringbase+54))
  6111  0DD5  0084               	movwf	4
  6112  0DD6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6113  0DDB  00B8               	movwf	?___ftmul+3
  6114  0DDC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6115  0DE1  00B9               	movwf	?___ftmul+4
  6116  0DE2  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6117  0DE7  00BA               	movwf	?___ftmul+5
  6118  0DE8  26EC  120A  158A   	fcall	___ftmul
  6119  0DEB  27B7  120A  158A   	fcall	PL10	;call to abstracted procedure
  6120  0DEE  1BF4               	btfsc	?___awmod+2,7
  6121  0DEF  03F5               	decf	?___awmod+3,f
  6122  0DF0  26AF  120A  158A   	fcall	___awmod
  6123  0DF3  27A7               	fcall	PL8	;call to abstracted procedure
  6124  0DF4  3E28               	addlw	low (__powers_-__stringbase)
  6125  0DF5  0084               	movwf	4
  6126  0DF6  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6127  0DFB  00B5               	movwf	?___ftmul
  6128  0DFC  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6129  0E01  00B6               	movwf	?___ftmul+1
  6130  0E02  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6131  0E07  27F8  120A  158A   	fcall	PL26	;call to abstracted procedure
  6132  0E0A  26EC  120A  158A   	fcall	___ftmul
  6133  0E0D  2FC4               	ljmp	PL11	;call to abstracted procedure
  6134  0E0E                     l8115:	
  6135  0E0E  084E               	movf	scale@scl,w
  6136  0E0F  3A80               	xorlw	128
  6137  0E10  3E75               	addlw	-139
  6138  0E11  1C03               	skipc
  6139  0E12  2E53               	goto	l8121
  6140  0E13  300A               	movlw	10
  6141  0E14  00F2               	movwf	?___awmod
  6142  0E15  01F3               	clrf	?___awmod+1
  6143  0E16  084E               	movf	scale@scl,w
  6144  0E17  00F4               	movwf	?___awmod+2
  6145  0E18  01F5               	clrf	?___awmod+3
  6146  0E19  1BF4               	btfsc	?___awmod+2,7
  6147  0E1A  03F5               	decf	?___awmod+3,f
  6148  0E1B  26AF  120A  158A   	fcall	___awmod
  6149  0E1E  27A7               	fcall	PL8	;call to abstracted procedure
  6150  0E1F  3E28               	addlw	low (__powers_-__stringbase)
  6151  0E20  0084               	movwf	4
  6152  0E21  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6153  0E26  00B5               	movwf	?___ftmul
  6154  0E27  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6155  0E2C  00B6               	movwf	?___ftmul+1
  6156  0E2D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6157  0E32  27E0  120A  158A   	fcall	PL22	;call to abstracted procedure
  6158  0E35  1BA2               	btfsc	?___awdiv+2,7
  6159  0E36  03A3               	decf	?___awdiv+3,f
  6160  0E37  266A  120A  158A   	fcall	___awdiv
  6161  0E3A  27AF               	fcall	PL9	;call to abstracted procedure
  6162  0E3B  3E43               	addlw	low ((__powers_-__stringbase+27))
  6163  0E3C  0084               	movwf	4
  6164  0E3D  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6165  0E42  00B8               	movwf	?___ftmul+3
  6166  0E43  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6167  0E48  00B9               	movwf	?___ftmul+4
  6168  0E49  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6169  0E4E  00BA               	movwf	?___ftmul+5
  6170  0E4F  26EC  120A  158A   	fcall	___ftmul
  6171  0E52  2FC4               	ljmp	PL11	;call to abstracted procedure
  6172  0E53                     l8121:	
  6173  0E53  3003               	movlw	3
  6174  0E54  00F8               	movwf	?___bmul
  6175  0E55  084E               	movf	scale@scl,w
  6176  0E56  275B               	fcall	___bmul
  6177  0E57  3E28               	addlw	low (__powers_-__stringbase)
  6178  0E58  0084               	movwf	4
  6179  0E59  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6180  0E5E  00C4               	movwf	?_scale
  6181  0E5F  160A  118A  2000   	fcall	stringdir
      +       120A  158A         
  6182  0E64  00C5               	movwf	?_scale+1
  6183  0E65  160A  118A  2000   	fcall	stringdir
  6184  0E68  00C6               	movwf	?_scale+2
  6185  0E69  0008               	return
  6186  0E6A                     __end_of_scale:	
  6187  0E6A                     __ptext828:	
  6188 ;; =============== function ___llmod ends ============
  6189                           
  6190                           
  6191 ;; *************** function ___awdiv *****************
  6192 ;; Defined at:
  6193 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  divisor         2    0[BANK0 ] int 
  6196 ;;  dividend        2    2[BANK0 ] int 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  quotient        2    6[BANK0 ] int 
  6199 ;;  sign            1    5[BANK0 ] unsigned char 
  6200 ;;  counter         1    4[BANK0 ] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2    0[BANK0 ] int 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 60/0
  6207 ;;		On exit  : 60/0
  6208 ;;		Unchanged: FFF9F/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6210 ;;      Params:         0       4       0       0       0
  6211 ;;      Locals:         0       4       0       0       0
  6212 ;;      Temps:          0       0       0       0       0
  6213 ;;      Totals:         0       8       0       0       0
  6214 ;;Total ram usage:        8 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    1
  6217 ;; This function calls:
  6218 ;;		Nothing
  6219 ;; This function is called by:
  6220 ;;		_pwm_10bit
  6221 ;;		_scale
  6222 ;;		_printf
  6223 ;; This function uses a non-reentrant model
  6224 ;;
  6225  0E6A                     ___awdiv:	
  6226                           
  6227                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6228  0E6A  01A5               	clrf	___awdiv@sign
  6229  0E6B  1FA1               	btfss	___awdiv@divisor+1,7
  6230  0E6C  2E74               	goto	l7691
  6231  0E6D  09A0               	comf	___awdiv@divisor,f
  6232  0E6E  09A1               	comf	___awdiv@divisor+1,f
  6233  0E6F  0AA0               	incf	___awdiv@divisor,f
  6234  0E70  1903               	skipnz
  6235  0E71  0AA1               	incf	___awdiv@divisor+1,f
  6236  0E72  01A5               	clrf	___awdiv@sign
  6237  0E73  0AA5               	incf	___awdiv@sign,f
  6238  0E74                     l7691:	
  6239  0E74  1FA3               	btfss	___awdiv@dividend+1,7
  6240  0E75  2E7D               	goto	l7697
  6241  0E76  09A2               	comf	___awdiv@dividend,f
  6242  0E77  09A3               	comf	___awdiv@dividend+1,f
  6243  0E78  0AA2               	incf	___awdiv@dividend,f
  6244  0E79  1903               	skipnz
  6245  0E7A  0AA3               	incf	___awdiv@dividend+1,f
  6246  0E7B  3001               	movlw	1
  6247  0E7C  06A5               	xorwf	___awdiv@sign,f
  6248  0E7D                     l7697:	
  6249  0E7D  01A6               	clrf	___awdiv@quotient
  6250  0E7E  01A7               	clrf	___awdiv@quotient+1
  6251  0E7F  0821               	movf	___awdiv@divisor+1,w
  6252  0E80  0420               	iorwf	___awdiv@divisor,w
  6253  0E81  1903               	skipnz
  6254  0E82  2EA2               	goto	l7719
  6255  0E83  01A4               	clrf	___awdiv@counter
  6256  0E84                     L16:	
  6257  0E84  0AA4               	incf	___awdiv@counter,f
  6258  0E85  1BA1               	btfsc	___awdiv@divisor+1,7
  6259  0E86  2E8B               	goto	l7707
  6260  0E87  1003               	clrc
  6261  0E88  0DA0               	rlf	___awdiv@divisor,f
  6262  0E89  0DA1               	rlf	___awdiv@divisor+1,f
  6263  0E8A  2E84               	goto	L16
  6264  0E8B                     l7707:	
  6265  0E8B  1003               	clrc
  6266  0E8C  0DA6               	rlf	___awdiv@quotient,f
  6267  0E8D  0DA7               	rlf	___awdiv@quotient+1,f
  6268  0E8E  0821               	movf	___awdiv@divisor+1,w
  6269  0E8F  0223               	subwf	___awdiv@dividend+1,w
  6270  0E90  1D03               	skipz
  6271  0E91  2E94               	goto	u4375
  6272  0E92  0820               	movf	___awdiv@divisor,w
  6273  0E93  0222               	subwf	___awdiv@dividend,w
  6274  0E94                     u4375:	
  6275  0E94  1C03               	skipc
  6276  0E95  2E9E               	goto	L17
  6277  0E96  0820               	movf	___awdiv@divisor,w
  6278  0E97  02A2               	subwf	___awdiv@dividend,f
  6279  0E98  0821               	movf	___awdiv@divisor+1,w
  6280  0E99  1C03               	skipc
  6281  0E9A  03A3               	decf	___awdiv@dividend+1,f
  6282  0E9B  02A3               	subwf	___awdiv@dividend+1,f
  6283  0E9C  1426               	bsf	___awdiv@quotient,0
  6284  0E9D  1003               	clrc
  6285  0E9E                     L17:	
  6286  0E9E  0CA1               	rrf	___awdiv@divisor+1,f
  6287  0E9F  0CA0               	rrf	___awdiv@divisor,f
  6288  0EA0  0BA4               	decfsz	___awdiv@counter,f
  6289  0EA1  2E8B               	goto	l7707
  6290  0EA2                     l7719:	
  6291  0EA2  0825               	movf	___awdiv@sign,w
  6292  0EA3  1903               	btfsc	3,2
  6293  0EA4  2EAA               	goto	l7723
  6294  0EA5  09A6               	comf	___awdiv@quotient,f
  6295  0EA6  09A7               	comf	___awdiv@quotient+1,f
  6296  0EA7  0AA6               	incf	___awdiv@quotient,f
  6297  0EA8  1903               	skipnz
  6298  0EA9  0AA7               	incf	___awdiv@quotient+1,f
  6299  0EAA                     l7723:	
  6300  0EAA  0827               	movf	___awdiv@quotient+1,w
  6301  0EAB  00A1               	movwf	?___awdiv+1
  6302  0EAC  0826               	movf	___awdiv@quotient,w
  6303  0EAD  00A0               	movwf	?___awdiv
  6304  0EAE  0008               	return
  6305  0EAF                     __end_of___awdiv:	
  6306  0EAF                     __ptext823:	
  6307 ;; =============== function _pwm_10bit ends ============
  6308                           
  6309                           
  6310 ;; *************** function ___awmod *****************
  6311 ;; Defined at:
  6312 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awmod.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;  divisor         2    2[COMMON] int 
  6315 ;;  dividend        2    4[COMMON] int 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  sign            1    7[COMMON] unsigned char 
  6318 ;;  counter         1    6[COMMON] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  2    2[COMMON] int 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 60/0
  6325 ;;		On exit  : 60/0
  6326 ;;		Unchanged: FFF9F/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6328 ;;      Params:         4       0       0       0       0
  6329 ;;      Locals:         2       0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0
  6331 ;;      Totals:         6       0       0       0       0
  6332 ;;Total ram usage:        6 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    1
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_scale
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341  0EAF                     ___awmod:	
  6342                           
  6343                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6344  0EAF  01F7               	clrf	___awmod@sign
  6345  0EB0  1FF5               	btfss	___awmod@dividend+1,7
  6346  0EB1  2EB9               	goto	l6639
  6347  0EB2  09F4               	comf	___awmod@dividend,f
  6348  0EB3  09F5               	comf	___awmod@dividend+1,f
  6349  0EB4  0AF4               	incf	___awmod@dividend,f
  6350  0EB5  1903               	skipnz
  6351  0EB6  0AF5               	incf	___awmod@dividend+1,f
  6352  0EB7  01F7               	clrf	___awmod@sign
  6353  0EB8  0AF7               	incf	___awmod@sign,f
  6354  0EB9                     l6639:	
  6355  0EB9  1FF3               	btfss	___awmod@divisor+1,7
  6356  0EBA  2EC0               	goto	l6643
  6357  0EBB  09F2               	comf	___awmod@divisor,f
  6358  0EBC  09F3               	comf	___awmod@divisor+1,f
  6359  0EBD  0AF2               	incf	___awmod@divisor,f
  6360  0EBE  1903               	skipnz
  6361  0EBF  0AF3               	incf	___awmod@divisor+1,f
  6362  0EC0                     l6643:	
  6363  0EC0  0873               	movf	___awmod@divisor+1,w
  6364  0EC1  0472               	iorwf	___awmod@divisor,w
  6365  0EC2  1903               	skipnz
  6366  0EC3  2EDF               	goto	l6659
  6367  0EC4  01F6               	clrf	___awmod@counter
  6368  0EC5                     L9:	
  6369  0EC5  0AF6               	incf	___awmod@counter,f
  6370  0EC6  1BF3               	btfsc	___awmod@divisor+1,7
  6371  0EC7  2ECC               	goto	l6651
  6372  0EC8  1003               	clrc
  6373  0EC9  0DF2               	rlf	___awmod@divisor,f
  6374  0ECA  0DF3               	rlf	___awmod@divisor+1,f
  6375  0ECB  2EC5               	goto	L9
  6376  0ECC                     l6651:	
  6377  0ECC  0873               	movf	___awmod@divisor+1,w
  6378  0ECD  0275               	subwf	___awmod@dividend+1,w
  6379  0ECE  1D03               	skipz
  6380  0ECF  2ED2               	goto	u2795
  6381  0ED0  0872               	movf	___awmod@divisor,w
  6382  0ED1  0274               	subwf	___awmod@dividend,w
  6383  0ED2                     u2795:	
  6384  0ED2  1C03               	skipc
  6385  0ED3  2EDB               	goto	L10
  6386  0ED4  0872               	movf	___awmod@divisor,w
  6387  0ED5  02F4               	subwf	___awmod@dividend,f
  6388  0ED6  0873               	movf	___awmod@divisor+1,w
  6389  0ED7  1C03               	skipc
  6390  0ED8  03F5               	decf	___awmod@dividend+1,f
  6391  0ED9  02F5               	subwf	___awmod@dividend+1,f
  6392  0EDA  1003               	clrc
  6393  0EDB                     L10:	
  6394  0EDB  0CF3               	rrf	___awmod@divisor+1,f
  6395  0EDC  0CF2               	rrf	___awmod@divisor,f
  6396  0EDD  0BF6               	decfsz	___awmod@counter,f
  6397  0EDE  2ECC               	goto	l6651
  6398  0EDF                     l6659:	
  6399  0EDF  0877               	movf	___awmod@sign,w
  6400  0EE0  1903               	btfsc	3,2
  6401  0EE1  2EE7               	goto	l6663
  6402  0EE2  09F4               	comf	___awmod@dividend,f
  6403  0EE3  09F5               	comf	___awmod@dividend+1,f
  6404  0EE4  0AF4               	incf	___awmod@dividend,f
  6405  0EE5  1903               	skipnz
  6406  0EE6  0AF5               	incf	___awmod@dividend+1,f
  6407  0EE7                     l6663:	
  6408  0EE7  0875               	movf	___awmod@dividend+1,w
  6409  0EE8  00F3               	movwf	?___awmod+1
  6410  0EE9  0874               	movf	___awmod@dividend,w
  6411  0EEA  00F2               	movwf	?___awmod
  6412  0EEB  0008               	return
  6413  0EEC                     __end_of___awmod:	
  6414  0EEC                     __ptext817:	
  6415 ;; =============== function ___altoft ends ============
  6416                           
  6417                           
  6418 ;; *************** function ___ftmul *****************
  6419 ;; Defined at:
  6420 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\ftmul.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  f1              3   21[BANK0 ] float 
  6423 ;;  f2              3   24[BANK0 ] float 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  6426 ;;  sign            1   35[BANK0 ] unsigned char 
  6427 ;;  cntr            1   34[BANK0 ] unsigned char 
  6428 ;;  exp             1   30[BANK0 ] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  3   21[BANK0 ] float 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0, pclath, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 60/0
  6435 ;;		On exit  : 60/0
  6436 ;;		Unchanged: FFF9F/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6438 ;;      Params:         0       6       0       0       0
  6439 ;;      Locals:         0       6       0       0       0
  6440 ;;      Temps:          0       3       0       0       0
  6441 ;;      Totals:         0      15       0       0       0
  6442 ;;Total ram usage:       15 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    2
  6445 ;; This function calls:
  6446 ;;		___ftpack
  6447 ;; This function is called by:
  6448 ;;		_main
  6449 ;;		_fround
  6450 ;;		_scale
  6451 ;;		_printf
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454  0EEC                     ___ftmul:	
  6455                           
  6456                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  6457  0EEC  0835               	movf	___ftmul@f1,w
  6458  0EED  00BB               	movwf	??___ftmul
  6459  0EEE  0836               	movf	___ftmul@f1+1,w
  6460  0EEF  00BC               	movwf	??___ftmul+1
  6461  0EF0  0837               	movf	___ftmul@f1+2,w
  6462  0EF1  00BD               	movwf	??___ftmul+2
  6463  0EF2  1003               	clrc
  6464  0EF3  0D3C               	rlf	??___ftmul+1,w
  6465  0EF4  0D3D               	rlf	??___ftmul+2,w
  6466  0EF5  00BE               	movwf	___ftmul@exp
  6467  0EF6  08BE               	movf	___ftmul@exp,f
  6468  0EF7  1D03               	skipz
  6469  0EF8  2EFD               	goto	l7937
  6470  0EF9  01B5               	clrf	?___ftmul
  6471  0EFA  01B6               	clrf	?___ftmul+1
  6472  0EFB  01B7               	clrf	?___ftmul+2
  6473  0EFC  0008               	return
  6474  0EFD                     l7937:	
  6475  0EFD  0838               	movf	___ftmul@f2,w
  6476  0EFE  00BB               	movwf	??___ftmul
  6477  0EFF  0839               	movf	___ftmul@f2+1,w
  6478  0F00  00BC               	movwf	??___ftmul+1
  6479  0F01  083A               	movf	___ftmul@f2+2,w
  6480  0F02  00BD               	movwf	??___ftmul+2
  6481  0F03  1003               	clrc
  6482  0F04  0D3C               	rlf	??___ftmul+1,w
  6483  0F05  0D3D               	rlf	??___ftmul+2,w
  6484  0F06  00C3               	movwf	___ftmul@sign
  6485  0F07  08C3               	movf	___ftmul@sign,f
  6486  0F08  1D03               	skipz
  6487  0F09  2F0E               	goto	l7943
  6488  0F0A  01B5               	clrf	?___ftmul
  6489  0F0B  01B6               	clrf	?___ftmul+1
  6490  0F0C  01B7               	clrf	?___ftmul+2
  6491  0F0D  0008               	return
  6492  0F0E                     l7943:	
  6493  0F0E  0843               	movf	___ftmul@sign,w
  6494  0F0F  3E7B               	addlw	123
  6495  0F10  07BE               	addwf	___ftmul@exp,f
  6496  0F11  0837               	movf	___ftmul@f1+2,w
  6497  0F12  00C3               	movwf	___ftmul@sign
  6498  0F13  083A               	movf	___ftmul@f2+2,w
  6499  0F14  06C3               	xorwf	___ftmul@sign,f
  6500  0F15  3080               	movlw	128
  6501  0F16  05C3               	andwf	___ftmul@sign,f
  6502  0F17  3007               	movlw	7
  6503  0F18  17B6               	bsf	___ftmul@f1+1,7
  6504  0F19  17B9               	bsf	___ftmul@f2+1,7
  6505  0F1A  01BA               	clrf	___ftmul@f2+2
  6506  0F1B  01BF               	clrf	___ftmul@f3_as_product
  6507  0F1C  01C0               	clrf	___ftmul@f3_as_product+1
  6508  0F1D  01C1               	clrf	___ftmul@f3_as_product+2
  6509  0F1E  00C2               	movwf	___ftmul@cntr
  6510  0F1F                     l7961:	
  6511  0F1F  1C35               	btfss	___ftmul@f1,0
  6512  0F20  2F29               	goto	l7965
  6513  0F21  0838               	movf	___ftmul@f2,w
  6514  0F22  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6515  0F25  1803               	skipnc
  6516  0F26  0A3A               	incf	___ftmul@f2+2,w
  6517  0F27  1D03               	btfss	3,2
  6518  0F28  07C1               	addwf	___ftmul@f3_as_product+2,f
  6519  0F29                     l7965:	
  6520  0F29  1003               	clrc
  6521  0F2A  0CB7               	rrf	___ftmul@f1+2,f
  6522  0F2B  0CB6               	rrf	___ftmul@f1+1,f
  6523  0F2C  0CB5               	rrf	___ftmul@f1,f
  6524  0F2D  1003               	clrc
  6525  0F2E  0DB8               	rlf	___ftmul@f2,f
  6526  0F2F  0DB9               	rlf	___ftmul@f2+1,f
  6527  0F30  0DBA               	rlf	___ftmul@f2+2,f
  6528  0F31  0BC2               	decfsz	___ftmul@cntr,f
  6529  0F32  2F1F               	goto	l7961
  6530  0F33  3009               	movlw	9
  6531  0F34  00C2               	movwf	___ftmul@cntr
  6532  0F35                     l7973:	
  6533  0F35  1C35               	btfss	___ftmul@f1,0
  6534  0F36  2F3F               	goto	l7977
  6535  0F37  0838               	movf	___ftmul@f2,w
  6536  0F38  27D6  120A  158A   	fcall	PL19	;call to abstracted procedure
  6537  0F3B  1803               	skipnc
  6538  0F3C  0A3A               	incf	___ftmul@f2+2,w
  6539  0F3D  1D03               	btfss	3,2
  6540  0F3E  07C1               	addwf	___ftmul@f3_as_product+2,f
  6541  0F3F                     l7977:	
  6542  0F3F  1003               	clrc
  6543  0F40  0CB7               	rrf	___ftmul@f1+2,f
  6544  0F41  0CB6               	rrf	___ftmul@f1+1,f
  6545  0F42  0CB5               	rrf	___ftmul@f1,f
  6546  0F43  1003               	clrc
  6547  0F44  0CC1               	rrf	___ftmul@f3_as_product+2,f
  6548  0F45  0CC0               	rrf	___ftmul@f3_as_product+1,f
  6549  0F46  0CBF               	rrf	___ftmul@f3_as_product,f
  6550  0F47  0BC2               	decfsz	___ftmul@cntr,f
  6551  0F48  2F35               	goto	l7973
  6552  0F49  083F               	movf	___ftmul@f3_as_product,w
  6553  0F4A  00F2               	movwf	?___ftpack
  6554  0F4B  0840               	movf	___ftmul@f3_as_product+1,w
  6555  0F4C  00F3               	movwf	?___ftpack+1
  6556  0F4D  0841               	movf	___ftmul@f3_as_product+2,w
  6557  0F4E  00F4               	movwf	?___ftpack+2
  6558  0F4F  083E               	movf	___ftmul@exp,w
  6559  0F50  00F5               	movwf	?___ftpack+3
  6560  0F51  0843               	movf	___ftmul@sign,w
  6561  0F52  00F6               	movwf	?___ftpack+4
  6562  0F53  2769               	fcall	___ftpack
  6563  0F54  0872               	movf	?___ftpack,w
  6564  0F55  00B5               	movwf	?___ftmul
  6565  0F56  0873               	movf	?___ftpack+1,w
  6566  0F57  00B6               	movwf	?___ftmul+1
  6567  0F58  0874               	movf	?___ftpack+2,w
  6568  0F59  00B7               	movwf	?___ftmul+2
  6569  0F5A  0008               	return
  6570  0F5B                     __end_of___ftmul:	
  6571  0F5B                     __ptext834:	
  6572 ;; =============== function ___wmul ends ============
  6573                           
  6574                           
  6575 ;; *************** function ___bmul *****************
  6576 ;; Defined at:
  6577 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;  multiplier      1    wreg     unsigned char 
  6580 ;;  multiplicand    1    8[COMMON] unsigned char 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6583 ;;  product         1    3[BANK0 ] unsigned char 
  6584 ;; Return value:  Size  Location     Type
  6585 ;;                  1    wreg      unsigned char 
  6586 ;; Registers used:
  6587 ;;		wreg, status,2, status,0
  6588 ;; Tracked objects:
  6589 ;;		On entry : 60/0
  6590 ;;		On exit  : 60/0
  6591 ;;		Unchanged: FFF9F/0
  6592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6593 ;;      Params:         1       0       0       0       0
  6594 ;;      Locals:         0       2       0       0       0
  6595 ;;      Temps:          0       0       0       0       0
  6596 ;;      Totals:         1       2       0       0       0
  6597 ;;Total ram usage:        3 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    1
  6600 ;; This function calls:
  6601 ;;		Nothing
  6602 ;; This function is called by:
  6603 ;;		_fround
  6604 ;;		_scale
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607  0F5B                     ___bmul:	
  6608                           
  6609                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6610                           ;___bmul@multiplier stored from wreg
  6611  0F5B  00A4               	movwf	___bmul@multiplier
  6612  0F5C  01A3               	clrf	___bmul@product
  6613  0F5D                     l6375:	
  6614  0F5D  0878               	movf	___bmul@multiplicand,w
  6615  0F5E  1824               	btfsc	___bmul@multiplier,0
  6616  0F5F  07A3               	addwf	___bmul@product,f
  6617  0F60  1003               	clrc
  6618  0F61  0DF8               	rlf	___bmul@multiplicand,f
  6619  0F62  1003               	clrc
  6620  0F63  0CA4               	rrf	___bmul@multiplier,f
  6621  0F64  08A4               	movf	___bmul@multiplier,f
  6622  0F65  1D03               	skipz
  6623  0F66  2F5D               	goto	l6375
  6624  0F67  0823               	movf	___bmul@product,w
  6625  0F68  0008               	return
  6626  0F69                     __end_of___bmul:	
  6627  0F69                     __ptext830:	
  6628 ;; =============== function ___fttol ends ============
  6629                           
  6630                           
  6631 ;; *************** function ___ftpack *****************
  6632 ;; Defined at:
  6633 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\float.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  arg             3    2[COMMON] unsigned um
  6636 ;;  exp             1    5[COMMON] unsigned char 
  6637 ;;  sign            1    6[COMMON] unsigned char 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  3    2[COMMON] float 
  6642 ;; Registers used:
  6643 ;;		wreg, status,2, status,0
  6644 ;; Tracked objects:
  6645 ;;		On entry : 60/0
  6646 ;;		On exit  : 60/0
  6647 ;;		Unchanged: FFF9F/0
  6648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6649 ;;      Params:         5       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0
  6651 ;;      Temps:          3       0       0       0       0
  6652 ;;      Totals:         8       0       0       0       0
  6653 ;;Total ram usage:        8 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    1
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		___ftadd
  6660 ;;		___ftdiv
  6661 ;;		___ftmul
  6662 ;;		___altoft
  6663 ;;		___lltoft
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666  0F69                     ___ftpack:	
  6667                           
  6668                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6669  0F69  0875               	movf	___ftpack@exp,w
  6670  0F6A  1903               	btfsc	3,2
  6671  0F6B  2F71               	goto	l7659
  6672  0F6C  0874               	movf	___ftpack@arg+2,w
  6673  0F6D  0473               	iorwf	___ftpack@arg+1,w
  6674  0F6E  0472               	iorwf	___ftpack@arg,w
  6675  0F6F  1D03               	skipz
  6676  0F70  2F7A               	goto	l7665
  6677  0F71                     l7659:	
  6678  0F71  01F2               	clrf	?___ftpack
  6679  0F72  01F3               	clrf	?___ftpack+1
  6680  0F73  01F4               	clrf	?___ftpack+2
  6681  0F74  0008               	return
  6682  0F75                     l7663:	
  6683  0F75  0AF5               	incf	___ftpack@exp,f
  6684  0F76  1003               	clrc
  6685  0F77  0CF4               	rrf	___ftpack@arg+2,f
  6686  0F78  0CF3               	rrf	___ftpack@arg+1,f
  6687  0F79  0CF2               	rrf	___ftpack@arg,f
  6688  0F7A                     l7665:	
  6689  0F7A  30FE               	movlw	254
  6690  0F7B  0574               	andwf	___ftpack@arg+2,w
  6691  0F7C  1903               	btfsc	3,2
  6692  0F7D  2F89               	goto	l7669
  6693  0F7E  2F75               	goto	l7663
  6694  0F7F                     l7667:	
  6695  0F7F  0AF5               	incf	___ftpack@exp,f
  6696  0F80  0AF2               	incf	___ftpack@arg,f
  6697  0F81  1903               	skipnz
  6698  0F82  0AF3               	incf	___ftpack@arg+1,f
  6699  0F83  1903               	skipnz
  6700  0F84  0AF4               	incf	___ftpack@arg+2,f
  6701  0F85  1003               	clrc
  6702  0F86  0CF4               	rrf	___ftpack@arg+2,f
  6703  0F87  0CF3               	rrf	___ftpack@arg+1,f
  6704  0F88  0CF2               	rrf	___ftpack@arg,f
  6705  0F89                     l7669:	
  6706  0F89  30FF               	movlw	255
  6707  0F8A  0574               	andwf	___ftpack@arg+2,w
  6708  0F8B  1903               	btfsc	3,2
  6709  0F8C  2F93               	goto	l7673
  6710  0F8D  2F7F               	goto	l7667
  6711  0F8E                     l7671:	
  6712  0F8E  03F5               	decf	___ftpack@exp,f
  6713  0F8F  1003               	clrc
  6714  0F90  0DF2               	rlf	___ftpack@arg,f
  6715  0F91  0DF3               	rlf	___ftpack@arg+1,f
  6716  0F92  0DF4               	rlf	___ftpack@arg+2,f
  6717  0F93                     l7673:	
  6718  0F93  1FF3               	btfss	___ftpack@arg+1,7
  6719  0F94  2F8E               	goto	l7671
  6720  0F95  1C75               	btfss	___ftpack@exp,0
  6721  0F96  13F3               	bcf	___ftpack@arg+1,7
  6722  0F97  1003               	clrc
  6723  0F98  0CF5               	rrf	___ftpack@exp,f
  6724  0F99  0875               	movf	___ftpack@exp,w
  6725  0F9A  00F9               	movwf	??___ftpack+2
  6726  0F9B  01F8               	clrf	??___ftpack+1
  6727  0F9C  01F7               	clrf	??___ftpack
  6728  0F9D  0877               	movf	??___ftpack,w
  6729  0F9E  04F2               	iorwf	___ftpack@arg,f
  6730  0F9F  0878               	movf	??___ftpack+1,w
  6731  0FA0  04F3               	iorwf	___ftpack@arg+1,f
  6732  0FA1  0879               	movf	??___ftpack+2,w
  6733  0FA2  04F4               	iorwf	___ftpack@arg+2,f
  6734  0FA3  0876               	movf	___ftpack@sign,w
  6735  0FA4  1D03               	skipz
  6736  0FA5  17F4               	bsf	___ftpack@arg+2,7
  6737  0FA6  0008               	return
  6738  0FA7                     __end_of___ftpack:	
  6739  0FA7                     PL8:	
  6740  0FA7  0872               	movf	?___awmod,w
  6741  0FA8  00C7               	movwf	??_scale
  6742  0FA9  0873               	movf	?___awmod+1,w
  6743  0FAA  00C8               	movwf	??_scale+1
  6744  0FAB  0847               	movf	??_scale,w
  6745  0FAC  0747               	addwf	??_scale,w
  6746  0FAD  0747               	addwf	??_scale,w
  6747  0FAE  0008               	return
  6748  0FAF                     PL9:	
  6749  0FAF  0820               	movf	?___awdiv,w
  6750  0FB0  00C9               	movwf	??_scale+2
  6751  0FB1  0821               	movf	?___awdiv+1,w
  6752  0FB2  00CA               	movwf	??_scale+3
  6753  0FB3  0849               	movf	??_scale+2,w
  6754  0FB4  0749               	addwf	??_scale+2,w
  6755  0FB5  0749               	addwf	??_scale+2,w
  6756  0FB6  0008               	return
  6757  0FB7                     PL10:	
  6758  0FB7  0835               	movf	?___ftmul,w
  6759  0FB8  00CB               	movwf	_scale$4122
  6760  0FB9  0836               	movf	?___ftmul+1,w
  6761  0FBA  00CC               	movwf	_scale$4122+1
  6762  0FBB  0837               	movf	?___ftmul+2,w
  6763  0FBC  00CD               	movwf	_scale$4122+2
  6764  0FBD  300A               	movlw	10
  6765  0FBE  00F2               	movwf	?___awmod
  6766  0FBF  01F3               	clrf	?___awmod+1
  6767  0FC0  084E               	movf	scale@scl,w
  6768  0FC1  00F4               	movwf	?___awmod+2
  6769  0FC2  01F5               	clrf	?___awmod+3
  6770  0FC3  0008               	return
  6771  0FC4                     PL11:	
  6772  0FC4  0835               	movf	?___ftmul,w
  6773  0FC5  00C4               	movwf	?_scale
  6774  0FC6  0836               	movf	?___ftmul+1,w
  6775  0FC7  00C5               	movwf	?_scale+1
  6776  0FC8  0837               	movf	?___ftmul+2,w
  6777  0FC9  00C6               	movwf	?_scale+2
  6778  0FCA  0008               	return
  6779  0FCB                     PL15:	
  6780  0FCB  00A0               	movwf	?___awdiv
  6781  0FCC  01A1               	clrf	?___awdiv+1
  6782  0FCD  084E               	movf	scale@scl,w
  6783  0FCE  00F4               	movwf	?___awmod+2
  6784  0FCF  01F5               	clrf	?___awmod+3
  6785  0FD0  1BF4               	btfsc	?___awmod+2,7
  6786  0FD1  03F5               	decf	?___awmod+3,f
  6787  0FD2  3064               	movlw	100
  6788  0FD3  00F2               	movwf	?___awmod
  6789  0FD4  01F3               	clrf	?___awmod+1
  6790  0FD5  0008               	return
  6791  0FD6                     PL19:	
  6792  0FD6  07BF               	addwf	___ftmul@f3_as_product,f
  6793  0FD7  0839               	movf	___ftmul@f2+1,w
  6794  0FD8  1103               	clrz
  6795  0FD9  1803               	skipnc
  6796  0FDA  0A39               	incf	___ftmul@f2+1,w
  6797  0FDB  1D03               	btfss	3,2
  6798  0FDC  07C0               	addwf	___ftmul@f3_as_product+1,f
  6799  0FDD  083A               	movf	___ftmul@f2+2,w
  6800  0FDE  1103               	clrz
  6801  0FDF  0008               	return
  6802  0FE0                     PL22:	
  6803  0FE0  00B7               	movwf	?___ftmul+2
  6804  0FE1  300A               	movlw	10
  6805  0FE2  00A0               	movwf	?___awdiv
  6806  0FE3  01A1               	clrf	?___awdiv+1
  6807  0FE4  084E               	movf	scale@scl,w
  6808  0FE5  00A2               	movwf	?___awdiv+2
  6809  0FE6  01A3               	clrf	?___awdiv+3
  6810  0FE7  0008               	return
  6811  0FE8                     PL23:	
  6812  0FE8  0820               	movf	?___awdiv,w
  6813  0FE9  00C7               	movwf	??_scale
  6814  0FEA  0821               	movf	?___awdiv+1,w
  6815  0FEB  00C8               	movwf	??_scale+1
  6816  0FEC  0847               	movf	??_scale,w
  6817  0FED  0747               	addwf	??_scale,w
  6818  0FEE  0747               	addwf	??_scale,w
  6819  0FEF  0008               	return
  6820  0FF0                     PL25:	
  6821  0FF0  00B7               	movwf	?___ftmul+2
  6822  0FF1  3064               	movlw	100
  6823  0FF2  00A0               	movwf	?___awdiv
  6824  0FF3  01A1               	clrf	?___awdiv+1
  6825  0FF4  084E               	movf	scale@scl,w
  6826  0FF5  00A2               	movwf	?___awdiv+2
  6827  0FF6  01A3               	clrf	?___awdiv+3
  6828  0FF7  0008               	return
  6829  0FF8                     PL26:	
  6830  0FF8  00B7               	movwf	?___ftmul+2
  6831  0FF9  084B               	movf	_scale$4122,w
  6832  0FFA  00B8               	movwf	?___ftmul+3
  6833  0FFB  084C               	movf	_scale$4122+1,w
  6834  0FFC  00B9               	movwf	?___ftmul+4
  6835  0FFD  084D               	movf	_scale$4122+2,w
  6836  0FFE  00BA               	movwf	?___ftmul+5
  6837  0FFF  0008               	return
  6838                           
  6839                           	psect	text835
  6840  1664                     __ptext835:	
  6841 ;; =============== function ___bmul ends ============
  6842                           
  6843                           
  6844 ;; *************** function __div_to_l_ *****************
  6845 ;; Defined at:
  6846 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\fldivl.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  f1              3    2[COMMON] unsigned char 
  6849 ;;  f2              3    5[COMMON] unsigned char 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  quot            4    8[BANK0 ] unsigned long 
  6852 ;;  exp1            1   13[BANK0 ] unsigned char 
  6853 ;;  cntr            1   12[BANK0 ] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  4    2[COMMON] unsigned long 
  6856 ;; Registers used:
  6857 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 60/0
  6861 ;;		Unchanged: FFF9F/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6863 ;;      Params:         6       0       0       0       0
  6864 ;;      Locals:         0       6       0       0       0
  6865 ;;      Temps:          0       8       0       0       0
  6866 ;;      Totals:         6      14       0       0       0
  6867 ;;Total ram usage:       20 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_printf
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876  1664                     __div_to_l_:	
  6877                           
  6878                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  6879  1664  3072               	movlw	low __div_to_l_@f1
  6880  1665  0084               	movwf	4
  6881  1666  0800               	movf	0,w
  6882  1667  1283               	bcf	3,5	;RP0=0, select bank0
  6883  1668  1303               	bcf	3,6	;RP1=0, select bank0
  6884  1669  00A0               	movwf	??__div_to_l_
  6885  166A  0A84               	incf	4,f
  6886  166B  0800               	movf	0,w
  6887  166C  00A1               	movwf	??__div_to_l_+1
  6888  166D  0A84               	incf	4,f
  6889  166E  0800               	movf	0,w
  6890  166F  00A2               	movwf	??__div_to_l_+2
  6891  1670  0A84               	incf	4,f
  6892  1671  0800               	movf	0,w
  6893  1672  00A3               	movwf	??__div_to_l_+3
  6894  1673  1003               	clrc
  6895  1674  0D22               	rlf	??__div_to_l_+2,w
  6896  1675  0D23               	rlf	??__div_to_l_+3,w
  6897  1676  00AD               	movwf	__div_to_l_@exp1
  6898  1677  08AD               	movf	__div_to_l_@exp1,f
  6899  1678  1D03               	skipz
  6900  1679  2E7F               	goto	l6331
  6901  167A                     l6329:	
  6902  167A  01F2               	clrf	?__div_to_l_
  6903  167B  01F3               	clrf	?__div_to_l_+1
  6904  167C  01F4               	clrf	?__div_to_l_+2
  6905  167D  01F5               	clrf	?__div_to_l_+3
  6906  167E  0008               	return
  6907  167F                     l6331:	
  6908  167F  3075               	movlw	low __div_to_l_@f2
  6909  1680  2722  160A  118A   	fcall	PL3	;call to abstracted procedure
  6910  1683  1003               	clrc
  6911  1684  0D22               	rlf	??__div_to_l_+2,w
  6912  1685  0D23               	rlf	??__div_to_l_+3,w
  6913  1686  00AC               	movwf	__div_to_l_@cntr
  6914  1687  08AC               	movf	__div_to_l_@cntr,f
  6915  1688  1903               	btfsc	3,2
  6916  1689  2E7A               	goto	l6329
  6917  168A  3072               	movlw	low __div_to_l_@f1
  6918  168B  0084               	movwf	4
  6919  168C  3080               	movlw	128
  6920  168D  0A84               	incf	4,f
  6921  168E  0A84               	incf	4,f
  6922  168F  0480               	iorwf	0,f
  6923  1690  3072               	movlw	low __div_to_l_@f1
  6924  1691  0A84               	incf	4,f
  6925  1692  0084               	movwf	4
  6926  1693  3075               	movlw	low __div_to_l_@f2
  6927  1694  0A84               	incf	4,f
  6928  1695  0A84               	incf	4,f
  6929  1696  0A84               	incf	4,f
  6930  1697  0180               	clrf	0
  6931  1698  0084               	movwf	4
  6932  1699  3080               	movlw	128
  6933  169A  0A84               	incf	4,f
  6934  169B  0A84               	incf	4,f
  6935  169C  0480               	iorwf	0,f
  6936  169D  3075               	movlw	low __div_to_l_@f2
  6937  169E  0A84               	incf	4,f
  6938  169F  0084               	movwf	4
  6939  16A0  307F               	movlw	127
  6940  16A1  0A84               	incf	4,f
  6941  16A2  0A84               	incf	4,f
  6942  16A3  0A84               	incf	4,f
  6943  16A4  0180               	clrf	0
  6944  16A5  01A8               	clrf	__div_to_l_@quot
  6945  16A6  01A9               	clrf	__div_to_l_@quot+1
  6946  16A7  01AA               	clrf	__div_to_l_@quot+2
  6947  16A8  01AB               	clrf	__div_to_l_@quot+3
  6948  16A9  02AD               	subwf	__div_to_l_@exp1,f
  6949  16AA  30A0               	movlw	160
  6950  16AB  072C               	addwf	__div_to_l_@cntr,w
  6951  16AC  00A0               	movwf	??__div_to_l_
  6952  16AD  02AD               	subwf	__div_to_l_@exp1,f
  6953  16AE  3020               	movlw	32
  6954  16AF  00AC               	movwf	__div_to_l_@cntr
  6955  16B0                     l6345:	
  6956  16B0  3075               	movlw	low __div_to_l_@f2
  6957  16B1  1003               	clrc
  6958  16B2  0DA8               	rlf	__div_to_l_@quot,f
  6959  16B3  0DA9               	rlf	__div_to_l_@quot+1,f
  6960  16B4  0DAA               	rlf	__div_to_l_@quot+2,f
  6961  16B5  0DAB               	rlf	__div_to_l_@quot+3,f
  6962  16B6  2722  160A  118A   	fcall	PL3	;call to abstracted procedure
  6963  16B9  3072               	movlw	low __div_to_l_@f1
  6964  16BA  0084               	movwf	4
  6965  16BB  0800               	movf	0,w
  6966  16BC  00A4               	movwf	??__div_to_l_+4
  6967  16BD  0A84               	incf	4,f
  6968  16BE  0800               	movf	0,w
  6969  16BF  00A5               	movwf	??__div_to_l_+5
  6970  16C0  0A84               	incf	4,f
  6971  16C1  0800               	movf	0,w
  6972  16C2  00A6               	movwf	??__div_to_l_+6
  6973  16C3  0A84               	incf	4,f
  6974  16C4  0800               	movf	0,w
  6975  16C5  00A7               	movwf	??__div_to_l_+7
  6976  16C6  0823               	movf	??__div_to_l_+3,w
  6977  16C7  0227               	subwf	??__div_to_l_+7,w
  6978  16C8  1D03               	skipz
  6979  16C9  2ED4               	goto	u2235
  6980  16CA  0822               	movf	??__div_to_l_+2,w
  6981  16CB  0226               	subwf	??__div_to_l_+6,w
  6982  16CC  1D03               	skipz
  6983  16CD  2ED4               	goto	u2235
  6984  16CE  0821               	movf	??__div_to_l_+1,w
  6985  16CF  0225               	subwf	??__div_to_l_+5,w
  6986  16D0  1D03               	skipz
  6987  16D1  2ED4               	goto	u2235
  6988  16D2  0820               	movf	??__div_to_l_,w
  6989  16D3  0224               	subwf	??__div_to_l_+4,w
  6990  16D4                     u2235:	
  6991  16D4  1C03               	skipc
  6992  16D5  2EF0               	goto	l3603
  6993  16D6  3075               	movlw	low __div_to_l_@f2
  6994  16D7  2722  160A  118A   	fcall	PL3	;call to abstracted procedure
  6995  16DA  3072               	movlw	low __div_to_l_@f1
  6996  16DB  0084               	movwf	4
  6997  16DC  0820               	movf	??__div_to_l_,w
  6998  16DD  0280               	subwf	0,f
  6999  16DE  0A84               	incf	4,f
  7000  16DF  0821               	movf	??__div_to_l_+1,w
  7001  16E0  1C03               	skipc
  7002  16E1  0F21               	incfsz	??__div_to_l_+1,w
  7003  16E2  0280               	subwf	0,f
  7004  16E3  0A84               	incf	4,f
  7005  16E4  0822               	movf	??__div_to_l_+2,w
  7006  16E5  1C03               	skipc
  7007  16E6  0F22               	incfsz	??__div_to_l_+2,w
  7008  16E7  0280               	subwf	0,f
  7009  16E8  0A84               	incf	4,f
  7010  16E9  0823               	movf	??__div_to_l_+3,w
  7011  16EA  1C03               	skipc
  7012  16EB  0A23               	incf	??__div_to_l_+3,w
  7013  16EC  0280               	subwf	0,f
  7014  16ED  3003               	movlw	3
  7015  16EE  0284               	subwf	4,f
  7016  16EF  1428               	bsf	__div_to_l_@quot,0
  7017  16F0                     l3603:	
  7018  16F0  3072               	movlw	low __div_to_l_@f1
  7019  16F1  0084               	movwf	4
  7020  16F2  1003               	clrc
  7021  16F3  0D80               	rlf	0,f
  7022  16F4  0A84               	incf	4,f
  7023  16F5  0D80               	rlf	0,f
  7024  16F6  0A84               	incf	4,f
  7025  16F7  0D80               	rlf	0,f
  7026  16F8  0A84               	incf	4,f
  7027  16F9  0D80               	rlf	0,f
  7028  16FA  0BAC               	decfsz	__div_to_l_@cntr,f
  7029  16FB  2EB0               	goto	l6345
  7030  16FC  1FAD               	btfss	__div_to_l_@exp1,7
  7031  16FD  2F0B               	goto	l6363
  7032  16FE  082D               	movf	__div_to_l_@exp1,w
  7033  16FF  3A80               	xorlw	128
  7034  1700  3E9F               	addlw	159
  7035  1701  1C03               	btfss	3,0
  7036  1702  2E7A               	goto	l6329
  7037  1703                     l6359:	
  7038  1703  1003               	clrc
  7039  1704  0CAB               	rrf	__div_to_l_@quot+3,f
  7040  1705  0CAA               	rrf	__div_to_l_@quot+2,f
  7041  1706  0CA9               	rrf	__div_to_l_@quot+1,f
  7042  1707  0CA8               	rrf	__div_to_l_@quot,f
  7043  1708  0FAD               	incfsz	__div_to_l_@exp1,f
  7044  1709  2F03               	goto	l6359
  7045  170A  2F19               	goto	l6369
  7046  170B                     l6363:	
  7047  170B  3020               	movlw	32
  7048  170C  022D               	subwf	__div_to_l_@exp1,w
  7049  170D  1803               	btfsc	3,0
  7050  170E  2E7A               	goto	l6329
  7051  170F                     l3611:	
  7052  170F  08AD               	movf	__div_to_l_@exp1,f
  7053  1710  1903               	btfsc	3,2
  7054  1711  2F19               	goto	l6369
  7055  1712  1003               	clrc
  7056  1713  0DA8               	rlf	__div_to_l_@quot,f
  7057  1714  0DA9               	rlf	__div_to_l_@quot+1,f
  7058  1715  0DAA               	rlf	__div_to_l_@quot+2,f
  7059  1716  0DAB               	rlf	__div_to_l_@quot+3,f
  7060  1717  03AD               	decf	__div_to_l_@exp1,f
  7061  1718  2F0F               	goto	l3611
  7062  1719                     l6369:	
  7063  1719  082B               	movf	__div_to_l_@quot+3,w
  7064  171A  00F5               	movwf	?__div_to_l_+3
  7065  171B  082A               	movf	__div_to_l_@quot+2,w
  7066  171C  00F4               	movwf	?__div_to_l_+2
  7067  171D  0829               	movf	__div_to_l_@quot+1,w
  7068  171E  00F3               	movwf	?__div_to_l_+1
  7069  171F  0828               	movf	__div_to_l_@quot,w
  7070  1720  00F2               	movwf	?__div_to_l_
  7071  1721  0008               	return
  7072  1722                     __end_of__div_to_l_:	
  7073  1722                     PL3:	
  7074  1722  0084               	movwf	4
  7075  1723  0800               	movf	0,w
  7076  1724  00A0               	movwf	??__div_to_l_
  7077  1725  0A84               	incf	4,f
  7078  1726  0800               	movf	0,w
  7079  1727  00A1               	movwf	??__div_to_l_+1
  7080  1728  0A84               	incf	4,f
  7081  1729  0800               	movf	0,w
  7082  172A  00A2               	movwf	??__div_to_l_+2
  7083  172B  0A84               	incf	4,f
  7084  172C  0800               	movf	0,w
  7085  172D  00A3               	movwf	??__div_to_l_+3
  7086  172E  0008               	return
  7087                           
  7088                           	psect	text839
  7089  07D2                     __ptext839:	
  7090 ;; =============== function _isprint ends ============
  7091                           
  7092                           
  7093 ;; *************** function _ngat *****************
  7094 ;; Defined at:
  7095 ;;		line 71 in file "D:\TTVXL\Project TTVXL\BT01week14ttvxl\BT01week14ttvxl.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;		None
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;		None
  7100 ;; Return value:  Size  Location     Type
  7101 ;;		None               void
  7102 ;; Registers used:
  7103 ;;		wreg, status,2, status,0
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: FFF9F/0
  7108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7109 ;;      Params:         0       0       0       0       0
  7110 ;;      Locals:         0       0       0       0       0
  7111 ;;      Temps:          2       0       0       0       0
  7112 ;;      Totals:         2       0       0       0       0
  7113 ;;Total ram usage:        2 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; This function calls:
  7116 ;;		Nothing
  7117 ;; This function is called by:
  7118 ;;		Interrupt level 1
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121  07D2                     _ngat:	
  7122                           
  7123                           ;BT01week14ttvxl.c: 73: if(T0IF)
  7124  07D2  1D0B               	btfss	11,2
  7125  07D3  2FED               	goto	L21
  7126                           
  7127                           ;BT01week14ttvxl.c: 74: {
  7128                           ;BT01week14ttvxl.c: 75: TMR0 = 6;
  7129  07D4  3006               	movlw	6
  7130  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  7131  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  7132  07D7  0081               	movwf	1	;volatile
  7133                           
  7134                           ;BT01week14ttvxl.c: 76: dem++;
  7135  07D8  0AFA               	incf	_dem,f
  7136  07D9  1903               	skipnz
  7137  07DA  0AFB               	incf	_dem+1,f
  7138                           
  7139                           ;BT01week14ttvxl.c: 77: if(dem == 250){
  7140  07DB  087A               	movf	_dem,w
  7141  07DC  3AFA               	xorlw	250
  7142  07DD  047B               	iorwf	_dem+1,w
  7143  07DE  1D03               	skipz
  7144  07DF  2FEC               	goto	i1l6253
  7145                           
  7146                           ;BT01week14ttvxl.c: 78: dem= 0;
  7147  07E0  01FA               	clrf	_dem
  7148  07E1  01FB               	clrf	_dem+1
  7149                           
  7150                           ;BT01week14ttvxl.c: 79: xung = TMR1;
  7151  07E2  080E               	movf	14,w	;volatile
  7152  07E3  00E8               	movwf	_xung
  7153  07E4  080F               	movf	15,w	;volatile
  7154  07E5  00E9               	movwf	_xung+1
  7155  07E6  01EA               	clrf	_xung+2
  7156  07E7  01EB               	clrf	_xung+3
  7157                           
  7158                           ;BT01week14ttvxl.c: 80: TMR1 = 0;
  7159  07E8  018E               	clrf	14	;volatile
  7160  07E9  018F               	clrf	15	;volatile
  7161                           
  7162                           ;BT01week14ttvxl.c: 81: TMR1H=0; TMR1L=0;
  7163  07EA  018F               	clrf	15	;volatile
  7164  07EB  018E               	clrf	14	;volatile
  7165  07EC                     i1l6253:	
  7166                           
  7167                           ;BT01week14ttvxl.c: 82: }
  7168                           ;BT01week14ttvxl.c: 83: }
  7169                           ;BT01week14ttvxl.c: 84: T0IF = 0;
  7170  07EC  110B               	bcf	11,2
  7171  07ED                     L21:	
  7172  07ED  0871               	movf	??_ngat+1,w
  7173  07EE  008A               	movwf	10
  7174  07EF  0E70               	swapf	??_ngat^(0+-128),w
  7175  07F0  0083               	movwf	3
  7176  07F1  0EFE               	swapf	126,f
  7177  07F2  0E7E               	swapf	126,w
  7178  07F3  0009               	retfie
  7179  07F4                     __end_of_ngat:	
  7180                           
  7181                           	psect	intentry
  7182  0004                     __pintentry:	
  7183                           ; Regs used in _ngat: [wreg+status,2+status,0]
  7184                           
  7185  0004                     interrupt_function:	
  7186  007E                     saved_w	set	btemp
  7187  0004  00FE               	movwf	btemp
  7188  0005  0E03               	swapf	3,w
  7189  0006  00F0               	movwf	??_ngat
  7190  0007  080A               	movf	10,w
  7191  0008  00F1               	movwf	??_ngat+1
  7192  0009  120A  118A  2FD2   	ljmp	_ngat
  7193                           
  7194                           	psect	text840
  7195  0000                     __ptext840:	
  7196 ;; =============== function _ngat ends ============
  7197                           
  7198  007E                     btemp	set	126	;btemp
  7199  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sun Dec 18 03:18:05 2022

         ___altoft@exp 0024                      _v 0063                      pc 0002         ___bmul@product 0023  
        ___altoft@sign 0025           ___awdiv@sign 0025                     fsr 0004    ___wmul@multiplicand 0074  
         ___ftadd@exp1 004F           ___ftadd@exp2 004E          ?_lcd_put_byte 0072           ___ftadd@sign 004D  
                  _GIE 005F                    _RD1 0041                    _RE0 0048                    _RD2 0042  
                  _RD3 0043                    _RD4 0044                    _RD5 0045                    _RD6 0046  
                  _RD7 0047                    _PS0 0408                    _PR2 0092                    _PS1 0409  
                  _PS2 040A                    _PSA 040B                    _dem 007A                    fsr0 0004  
                  indf 0000           ___awmod@sign 0077           ___ftdiv@cntr 002F           ___ftdiv@sign 0034  
                 l2132 0000                   l1076 0000                   l2310 0561                   l2214 002D  
                 l2143 0000                   l2135 0000                   l3300 0000                   l2229 00A1  
                 l3310 0000                   l2166 0000                   l3403 0C92                   l2275 0377  
                 l3316 0000                   l3430 0633                   l3343 0A1B                   l3352 0000  
                 l3346 0000                   l3611 170F                   l3603 16F0                   l3531 0000  
                 l3604 0000                   l3374 08C4                   l3295 0000                   l3463 0000  
                 l3561 0000                   l3473 0000                   l3545 0000                   l3553 0000  
                 l3492 0000                   l3396 0000                   l3477 0000                   l3568 0702  
                 l6331 167F                   l8003 0000                   l6341 0000                   l8021 0000  
                 l8013 0000                   l6351 0000                   l6343 0000                   l6327 0000  
                 l6431 0000                   l8007 07B4                   l8023 0000                   l8015 0000  
                 l8103 0D8D                   l6361 0000                   l6353 0000                   l6345 16B0  
                 l6337 0000                   l6329 167A                   l6441 0A42                   l6433 0A2E  
                 l6505 063D                   l8009 07BF                   l8041 0B3F                   l8033 0B27  
                 l8025 0B0F                   l8017 0000                   l8121 0E53                   l6275 05DE  
                 l6267 0000                   l6363 170B                   l6347 0000                   l6339 0000  
                 l6443 0000                   l6435 0000                   l6507 0000                   l8019 0000  
                 l8051 0000                   l8115 0E0E                   l8107 0DA4                   l8131 0000  
                 l8211 0000                   l8203 00C9                   l6269 0000                   l6381 0000  
                 l6373 0000                   l6437 0000                   l6429 0000                   l6509 064B  
                 l6621 0000                   l6605 0000                   l8045 0B4B                   l8037 0B33  
                 l8029 0B1B                   l8061 0A6D                   l8053 0000                   l8125 0000  
                 l8133 0A76                   l8301 02DB                   l8221 0000                   l8213 00F5  
                 l8205 0000                   l6359 1703                   l6383 0000                   l6375 0F5D  
                 l6391 05E2                   l6615 0669                   l6607 0000                   l6631 0000  
                 l8055 0A63                   l8063 0000                   l8127 0000                   l8143 0A93  
                 l8135 0A7C                   l8311 02F3                   l8223 0000                   l8215 0000  
                 l8207 0000                   l8151 0000                   l7601 06CD                   l6369 1719  
                 l6481 0000                   l6625 0000                   l6617 0000                   l6633 0000  
                 l8049 0B57                   l8057 0A64                   l8081 09E9                   l8073 0995  
                 l8137 0A83                   l8401 04CE                   l8321 030E                   l8313 0000  
                 l8305 02DE                   l8241 0183                   l8233 014A                   l8225 0000  
                 l7611 0000                   l7603 0000                   l6395 05EA                   l6483 0000  
                 l6475 0000                   l6627 0694                   l6651 0ECC                   l6643 0EC0  
                 l8059 0000                   l8067 0000                   l8139 0A87                   l8147 0A9A  
                 l8331 0353                   l8323 033A                   l8307 0000                   l8315 02FC  
                 l8235 0000                   l8227 0000                   l8219 0000                   l8171 0000  
                 l8163 002F                   l7621 06FE                   l6397 0000                   l6389 0000  
                 l6485 0000                   l6477 0603                   l6661 0000                   l6637 0000  
                 l8077 0000                   l8085 0000                   l8149 0000                   l8421 050A  
                 l8413 04F7                   l8405 04EA                   l8309 02E7                   l8261 0203  
                 l8237 0000                   l8229 0000                   l8245 0193                   l8181 0000  
                 l8173 0000                   l8165 003A                   l8157 0028                   l8501 17B6  
                 l7607 0000                   l6399 0000                   l7631 0000                   l6495 0627  
                 l6487 0000                   l6479 0608                   l6663 0EE7                   l6639 0EB9  
                 l8423 0000                   l8431 051F                   l8407 04ED                   l8351 0000  
                 l8335 0362                   l8327 0000                   l8271 0000                   l8191 0000  
                 l8175 006A                   l8159 0000                   l8511 0000                   l7617 06F6  
                 l7641 0000                   l7633 0000                   l6497 0000                   l6489 0000  
                 l7721 0000                   l7713 0000                   l6577 0000                   l6593 05C4  
                 l6585 0000                   l6657 0000                   l7801 0000                   l8097 0D48  
                 l8089 0000                   l8425 0517                   l8417 0000                   l8353 0000  
                 l8345 0000                   l8337 0000                   l8329 033E                   l8273 0233  
                 l8257 01F2                   l8249 01C7                   l8185 0000                   l8169 0048  
                 l8433 0013                   l8513 0000                   l8505 17CD                   l8441 0000  
                 l7571 0000                   l7627 070C                   l7619 0000                   l7635 0000  
                 l7651 0A28                   l6499 062F                   l7723 0EAA                   l7707 0E8B  
                 l6595 0000                   l6659 0EDF                   l7803 0000                   l7811 0000  
                 l8419 0506                   l8371 0444                   l8347 0404                   l8339 0399  
                 l8291 02AA                   l8283 0276                   l8275 0000                   l8267 0000  
                 l8195 00A3                   l8187 0078                   l8179 0000                   l8507 0000  
                 l8451 0000                   l8443 0000                   l8435 0000                   l7573 0000  
                 l7645 0000                   l7637 0A15                   l7717 0000                   l7709 0000  
                 l7741 0000                   l6597 0000                   l6589 05B5                   l7805 0000  
                 l7821 0872                   l7813 0000                   l7901 0000                   l8365 0442  
                 l8357 0000                   l8293 0000                   l8277 0274                   l8269 0000  
                 l8349 0412                   l8197 00B9                   l8189 009D                   l8509 0000  
                 l8461 0000                   l8453 0000                   l8445 0000                   l8437 0000  
                 l7591 0000                   l7583 0000                   l7671 0F8E                   l7663 0F75  
                 l7655 0000                   l7719 0EA2                   l7735 0578                   l7743 059D  
                 l7727 0000                   l7751 0000                   l7823 0000                   l7911 0000  
                 l7903 0000                   l8383 048C                   l8359 0436                   l8471 0000  
                 l8463 0000                   l8455 0000                   l8447 0000                   l8439 0000  
                 l7593 0000                   l7585 06AB                   l7649 0000                   l7681 0000  
                 l7673 0F93                   l7665 0F7A                   l7657 0000                   l7753 0000  
                 l7761 0000                   l7841 0000                   l7817 086B                   l7809 0000  
                 l7921 0000                   l7913 0000                   l7905 0000                   l8393 04B1  
                 l8377 0000                   l8297 02D3                   l8289 0000                   l8481 0000  
                 l8473 0000                   l8465 0000                   l8457 0000                   l8449 0000  
                 l7579 0C21                   l7595 0000                   l7587 06B0                   l7667 0F7F  
                 l7659 0F71                   l7691 0E74                   l7683 0000                   l7747 0000  
                 l7771 0000                   l7763 0000                   l7851 08AC                   l7835 0000  
                 l7827 0881                   l7915 0000                   l7907 0000                   l7931 0000  
                 l8387 04A4                   l8379 0478                   l8491 0000                   l8483 0000  
                 l8475 0000                   l8467 0000                   l8459 0000                   l7597 0000  
                 l7677 0000                   l7669 0F89                   l7685 0000                   l7749 0000  
                 l7781 0000                   l7773 0B83                   l7853 0000                   l7845 089E  
                 l7837 0000                   l7829 0000                   l7925 0000                   l7917 0CA5  
                 l7909 0000                   l8493 0000                   l8485 0000                   l8477 0000  
                 l8469 0000                   l7599 0000                   l7679 0000                   l7695 0000  
                 l7791 0000                   l7783 0000                   l7775 0B90                   l7767 0000  
                 l7759 0000                   l7871 08DA                   l7863 0000                   l7847 08A3  
                 l7839 088F                   l7927 0000                   l7951 0000                   l7943 0F0E  
                 l8399 04CB                   l8495 176B                   l8487 0000                   l8479 0000  
                 l7697 0E7D                   l7689 0000                   l7793 0000                   l7785 0BBE  
                 l7777 0B9B                   l7769 0000                   l7881 0000                   l7873 0000  
                 l7865 08CF                   l7857 08BB                   l7849 08A8                   l7961 0F1F  
                 l7953 0000                   l7945 0000                   l7937 0EFD                   l8497 0000  
                 l8489 0000                   l7699 0000                   l7787 0BC9                   l7779 0000  
                 l7795 0000                   l7883 08F6                   l7875 0000                   l7859 08C0  
                 l7971 0000                   l7955 0000                   l7947 0000                   l7789 0BD6  
                 l7797 0000                   l7869 0000                   l7893 0C81                   l7981 0000  
                 l7973 0F35                   l7965 0F29                   l7957 0000                   l7949 0000  
                 l7799 0000                   l7879 0000                   l7887 0000                   l7983 0000  
                 l7967 0000                   l7959 0000                   l7991 0000                   l7977 0F3F  
                 l7969 0000                   l7899 0000                   l7979 0000                   l7987 0000  
                 l7997 0C53                   l7989 0000                   l7999 0C5E                   STR_1 1087  
                 STR_2 107C                   _T0IE 005D                   _T0IF 005A                   _T0CS 040D  
                 u2235 16D4                   u2490 0000                   u4155 06DC                   u4510 0B99  
                 u2495 060C                   u2735 067C                   u4425 0586                   u5305 019C  
                 u4610 0BDF                   u4530 0BA5                   u5315 01D1                   _PEIE 005E  
                 u5260 0000                   u4550 0BBC                   u4470 0B81                   u4375 0E94  
                 u5415 02F0                   u4624 0BE1                   u4544 0BA7                   u5425 0305  
                 u5345 01F0                   u5265 0108                   u4570 0BC7                   u4490 0B8E  
                 u2795 0ED2                   u5605 04C1                   u5365 02A3                   u4590 0BD4  
                 u5615 04DC                   u5535 0471                   u5455 0347                   u5465 035D  
                 u5555 0486                   u5565 049C                   u5807 0BFF                   u4855 0CB3  
                 u5817 0C09                   u5737 0AB5                   u5827 0C0F                   u5747 0AC8  
                 u5837 0B6C                   u5757 0ADB                   u5847 0B72                   u5767 0AEE  
                 u5857 0BA9                   u5777 0AFB                   u5867 0BAF                   u5787 0B08  
                 u5877 0BE3                   u5797 0BF9                   u5887 0BE9                   _TMR0 0001  
                 _TMR1 000E                   _TMR2 0011                   _main 172F                   _ngat 07D2  
         ___ftpack@arg 0072           ___ftpack@exp 0075           lcd_busy@busy 0073                   btemp 007E  
                 _xung 0068                   start 000C      ___bmul@multiplier 0024           ___ftmul@cntr 0042  
         ___ftmul@sign 0043           ___fttol@exp1 0034           ___fttol@lval 0030         ??_lcd_put_byte 0073  
                _DC1B0 00BC                  _DC1B1 00BD                  ?_main 0070                  ?_ngat 0070  
      __end_of___awdiv 0EAF        __end_of___lbdiv 0A2A        __end_of___ftadd 090A        __end_of___awmod 0EEC  
      __end_of___lbmod 0A46        __end_of___ftdiv 0CD8        __end_of___ftneg 071D                  _ANSEL 0188  
      __end_of___lldiv 069D        __end_of___ftmul 0F5B        ___awdiv@divisor 0020        __end_of___llmod 05A6  
      __end_of___ftsub 0848        __end_of___fttol 0654        ___awdiv@counter 0024                  _TMR1H 000F  
                _TMR1L 000E           ___lltoft@exp 0024                  _scale 0CD8        __end_of_isdigit 05E0  
        ___ftpack@sign 0076                  _pwm_t 0066                  _putch 0562        __end_of_isprint 0C23  
                pclath 000A                  status 0003                  wtemp0 007E        ___lbdiv@divisor 0077  
      ___lbdiv@counter 0021           __end_of_main 1800           __end_of_ngat 07F4          lcd_gotoxy@col 0078  
        lcd_gotoxy@row 0077                 ??_main 007A          ___fttol@sign1 002F                 ??_ngat 0070  
 __size_of__tdiv_to_l_ 0078       __end_of___altoft 0C70       ___llmod@dividend 0029                 ?_scale 0044  
               _CCPR1L 0015       ___awdiv@dividend 0022                 ?_putch 0070       __end_of___ftpack 0FA7  
               _ANSELH 0189       __end_of___lltoft 07D2                 i1l1068 0000                 _T1SYNC 0082  
               i1l6241 0000                 i1l6251 0000                 i1l6235 0000                 i1l6245 0000  
               i1l6253 07EC                 i1l6247 0000                 i1l6239 0000                 i1l6249 0000  
               _TMR1GE 0086                 _TMR1CS 0081                 _TMR1ON 0080                 _TMR2ON 0092  
               _TRISC2 043A                 _TRISD1 0441                 _TRISE0 0448                 _TRISD2 0442  
               _TRISD3 0443                 _TRISD4 0444                 _TRISD5 0445                 _TRISD6 0446  
               _TRISD7 0447       __end_of_lcd_busy 0C15       __end_of_lcd_init 0B5E       __end_of_lcd_putc 0AA3  
               ___bmul 0F5B                 ___ftge 05A6                 ___wmul 05E0              ??___awdiv 0078  
            ??___lbdiv 0078              ??___ftadd 004A              ??___awmod 0076              ??___lbmod 0073  
            ??___ftdiv 002C              ??___ftneg 0075              ??___lldiv 007A              ??___ftmul 003B  
            ??___llmod 007A              ??___ftsub 007A              ??___fttol 002C                 _fround 090A  
     ___awdiv@quotient 0026        ___awmod@divisor 0072        ___awmod@counter 0076                 _printf 000F  
        lcd_put_byte@b 0072  ___ftmul@f3_as_product 003F              ??_isdigit 0072                 saved_w 007E  
            ??_isprint 0072                 putch@c 0021       ___lbdiv@dividend 0020        ___lbmod@divisor 0072  
           ___altoft@c 0020        ___lbmod@counter 0075   __end_of_lcd_put_byte 0BEE             ___ftadd@f1 0044  
           ___ftadd@f2 0047             ___ftge@ff1 0072             ___ftge@ff2 0075             ___ftdiv@f1 0029  
           ___ftdiv@f2 0026             ___ftdiv@f3 0030             ___ftneg@f1 0072    ___bmul@multiplicand 0078  
           ___ftmul@f1 0035             ___ftmul@f2 0038             ___ftsub@f1 0053             ___ftsub@f2 0050  
           ___fttol@f1 0028         __pcstackCOMMON 0070             ___lltoft@c 0020          __end_of_scale 0E6A  
        __end_of_putch 0568       ___lbdiv@quotient 0022             __div_to_l_ 1664      lcd_gotoxy@address 0079  
      __div_to_l_@exp1 002D        __div_to_l_@cntr 002C                ??_scale 0047        __div_to_l_@quot 0028  
              ??_putch 007A             __pbssBANK0 0063          __div_to_l_@f1 0072          __div_to_l_@f2 0075  
           __pmaintext 172F                ?___bmul 0078                ?___ftge 0072                ?___wmul 0072  
           __pintentry 0004                _CCP1CON 0017              ?___altoft 0020     __size_of_pwm_10bit 0014  
              ?_fround 0050              ?___ftpack 0072                ?_printf 005A              ?___lltoft 0020  
              _T1CKPS0 0084                _T1CKPS1 0085                _T2CKPS0 0090                _T2CKPS1 0091  
           _lcd_gotoxy 0A5C              ?_lcd_busy 0070              ?_lcd_init 0070              ?_lcd_putc 0070  
           _scale$4122 004B        __size_of___bmul 000E        __size_of___ftge 002C                ___awdiv 0E6A  
              ___lbdiv 0A0F                ___ftadd 0848                ___awmod 0EAF                ___lbmod 0A2A  
              ___ftdiv 0C70                ___ftneg 0715                ___lldiv 0654        __size_of___wmul 0019  
              ___ftmul 0EEC                ___llmod 0568                ___ftsub 0832                ___fttol 05F9  
           ??___altoft 007A             ??___ftpack 0077        __size_of_fround 0105             ??___lltoft 007A  
      __size_of_printf 0553            ?__div_to_l_ 0072                _dpowers 1054                _isdigit 05D2  
     ___awmod@dividend 0074                _isprint 0C15  __size_of_lcd_put_byte 0090             ??_lcd_busy 0072  
           ??_lcd_init 0077             ??_lcd_putc 007A   end_of_initialization 082E         lcd_put_byte@rs 0075  
    __end_of_pwm_10bit 0C41        ___lldiv@divisor 0072        ___lldiv@counter 0024                printf@c 00B8  
              printf@f 00A8         __tdiv_to_l_@f1 0072         __tdiv_to_l_@f2 0075          ??__tdiv_to_l_ 0020  
         _lcd_put_byte 0B5E       ___lbmod@dividend 0074            ?_lcd_gotoxy 0077            ___lbmod@rem 0076  
          printf@integ 00A5            ___ftdiv@exp 0033            printf@width 00B1    __size_of__div_to_l_ 00BE  
          ___ftmul@exp 003E         __end_of___bmul 0F69         __end_of___ftge 05D2         __end_of___wmul 05F9  
       __end_of_fround 0A0F         __end_of_printf 0562    start_initialization 0823    __end_of__tdiv_to_l_ 0715  
      ___llmod@divisor 0025        ___llmod@counter 002D               ??___bmul 0079               ??___ftge 0078  
  __size_of_lcd_gotoxy 0018               ??___wmul 0076               ??_fround 007A               ??_printf 005E  
    __size_of___altoft 002F             fround@prec 0059      __size_of___ftpack 003E      __size_of___lltoft 0020  
          __pbssCOMMON 007A          __pcstackBANK0 0020          __pcstackBANK1 00A0           _isdigit$3681 0072  
    __size_of_lcd_busy 0027      __size_of_lcd_init 00BB      __size_of_lcd_putc 002F               ?___awdiv 0020  
             ?___lbdiv 0077               ?___ftadd 0044               ?___awmod 0072              __ptext810 0832  
            __ptext811 0CD8               ?___lbmod 0072              __ptext820 0BEE              __ptext812 090A  
            __ptext821 0B5E              __ptext813 0A5C              __ptext830 0F69              __ptext822 0C2D  
            __ptext814 0AA3              __ptext831 0A2A              __ptext823 0EAF              __ptext815 07B2  
            __ptext807 000F              __ptext840 0000              __ptext832 0A0F              __ptext824 0654  
            __ptext816 0C41              __ptext808 0562              __ptext833 05E0              __ptext825 05A6  
            __ptext817 0EEC              __ptext809 0A74              __ptext834 0F5B              __ptext826 0715  
            __ptext818 0C70              __ptext835 1664              __ptext827 0568              __ptext819 0848  
            __ptext836 069D              __ptext828 0E6A              __ptext837 05D2              __ptext829 05F9  
            __ptext838 0C15              __ptext839 07D2               ?___ftdiv 0026               ?___ftneg 0072  
             ?___lldiv 0072               ?___ftmul 0035               ?___llmod 0025               ?___ftsub 0050  
            __npowers_ 1006               ?___fttol 0028              __pstrings 1000            __tdiv_to_l_ 069D  
         ??__div_to_l_ 0020               ?_isdigit 0070               ?_isprint 0070         __size_of_scale 0192  
       __size_of_putch 0006      interrupt_function 0004         ___wmul@product 0076              _pwm_10bit 0C2D  
   __end_of__div_to_l_ 1722            __stringbase 1005      ___wmul@multiplier 0072             printf@_val 00A9  
           printf@flag 00AD             printf@fval 00B3             printf@prec 00B6              lcd_putc@c 0020  
         ??_lcd_gotoxy 0078           pwm_10bit@pwm 0028       lcd_put_byte@temp 0076           _isprint$3684 0072  
           ?_pwm_10bit 0028     __end_of_lcd_gotoxy 0A74       __size_of___awdiv 0045       __size_of___lbdiv 001B  
     __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C       __size_of___ftdiv 0068  
     __size_of___ftneg 0008       __size_of___lldiv 0049               ___altoft 0C41       __size_of___ftmul 006F  
     __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B               ___ftpack 0F69  
          _fround$4120 0056            _fround$4121 0053               ___lltoft 07B2       __size_of_isdigit 000E  
     __size_of_isprint 000E               __powers_ 102D               _lcd_busy 0BEE               _lcd_init 0AA3  
             _lcd_putc 0A74          __size_of_main 00D1          __size_of_ngat 0022              printf@exp 00AF  
             isdigit@c 0073               scale@scl 004E               intlevel1 0000       __tdiv_to_l_@exp1 0028  
     __tdiv_to_l_@cntr 0027       __tdiv_to_l_@quot 0023       ___lldiv@dividend 0076               isprint@c 0073  
          ??_pwm_10bit 0078              stringcode 1000               printf@ap 00A4           ?__tdiv_to_l_ 0072  
          _printf$3173 00A0       ___lldiv@quotient 0020               stringdir 1000               stringtab 1000  
